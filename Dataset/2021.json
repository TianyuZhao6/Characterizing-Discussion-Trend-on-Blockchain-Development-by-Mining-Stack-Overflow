{"\u00ef\u00bb\u00bfTitle":{"0":"Ethereum pre defined gas price in <web3> wallet - is this possible?","1":"<hyperledger> Fabric \"fabric-ca-client\" Error Code: 71 - Authorization failure","2":"<hyperledger> Fabric world state, is it immutable?","3":"I am trying to connect Lottery Contract to React Application using Metamask, But when I call manager() method on the contract I get an empty array","4":"window.solana not found in <web3>js","5":"MintTo contract from <web3> gives error - ERC721: transfer to non ERC721Receiver implementer","6":"Smart Contract's state variables on the <blockchain>","7":"How to set the receiver of ETH in a contract to send ETH from one address to another with solidity usign call() in remix IDE","8":"Cosmos SDK: couldn't verify signature: unable to verify single signer signature","9":"gas estimation errored with the following message - execution reverted","10":"Does timestamp also change with nonce to calculate block hash in <blockchain>? How hash is calculated?","11":"AvalancheJS getUTXOS: couldn't unmarshal an argument","12":"simulation of VANET security project","13":"I am having error : \"Inbox\" -- Invalid number of parameters for \"undefined\". Got 0 expected 1","14":"Calculating Bitcoin mining difficulty","15":"NFT Marketplaces and Storage [closed]","16":"Can you deploy a smart contract from a webpage?","17":"Cannot run peer because error when setting up MSP","18":"How to mount aws EC2 files on aws EKS as presistent volume?","19":"How to run a local aurora node?","20":"How to open localhost:8000 using VPS Ubuntu","21":"I am getting \"The called function should be payable if you send value and the value you send should be less than your current balance.\"","22":"Error: Custom: Invalid blockhash when solana program deploy","23":"Check to make sure a solidity line of code ran successfully","24":"How to add and remove liquidity from uniswap3 using smart contract and sdk?","25":"How to specify a date when the function will be available for calling?","26":"Data migration using ethereum with solidity","27":"TypeError: Cannot read properties of undefined (reading 'eth')","28":"Send and transfer are only available for objects of type address payable , not address","29":"<blockchain> check gap api returns empty json","30":"Unable to call safeTransferFrom method from a JS api file","31":"Got Assertion.failed error while trying to sign a transaction","32":"How to logout from metamask account in reactjs using Ethereum","33":"What is the best way to access historical price data from Chainlink on a token in a decentralised manner?","34":"In <hyperledger> Fabric, is there a way to decode ledger data to human readable form?","35":"How get estimated gas before sending the transaction?","36":"How to get ENS domain address with Moralis","37":"Typing suggestion for contracts within brownie","38":"Accounts provided by ganache-cli has no balance at all","39":"hardhat test: <functionName> is not a function","40":"Can this algorithm achieve eventual consistency?","41":"brownie - How do I handle exceptions?","42":"What can I do to my contract to work with BEP20 mainnet","43":"Why is proof of work necessary in <blockchain>","44":"how can i identify type of transferd toke in my website","45":"retrieve minted NFT's by a wallet address - OpenSea","46":"What's the Difference between ETH 2.0 and NEAR?","47":"How to get the failed status from solidity require statement","48":"Why Does My Ethereum \".on\" Event Listener Stop Firing?","49":"Substrate <blockchain> - Change block structure","50":"Visualisation of decentralized network","51":"How to get test coins for local ETH testnet? [duplicate]","52":"Hello. Im having trouble deploying a contract on ganache. Can someone please assist? Im using <python> with a Solidity abi and bytecode","53":"I couldn't get results when I write compiled code in Visual Studio Code, I run <python> deploy.py and it gives me error. what I have to edit in my code","54":"How can I connect to the JSON RPC API using <python> (<blockchain>)","55":"Where to get a signature for smart contract interaction via block explorer?","56":"I installed Brownie and after installation when i tried to see the version of it, i ran into this error, I am using MacOs 10.15.3 if that matters","57":"Please help interpret the transaction action steps in this flash loan transaction","58":"BSC transaction without fees","59":"<web3>.exceptions.ContractLogicError: execution reverted","60":"Corda - SignTransactionFlow and sendAndReceive","61":"is it possible to get portfolio balance data from any Coinbase account without using api?","62":"How to deploy a smartcontract and make a transfer from it in Everscale <blockchain>","63":"Can we abort a transaction in <blockchain>?","64":"Smart Contract Won't deploy, RPC ERROR execution being revert. Using <node.js> and Hardhat","65":"BSC Scan Token Holders","66":"Is there a way to get token price on transfer function call?","67":"Docker-compose command not displaying URL for project","68":"<blockchain> consensus 51% vs number of nodes validation","69":"Rinkeby Authenticated Faucet is offline","70":"How to verify avalanche block is accepted with <web3>.py","71":"NFTs to Pixels in Map","72":"TypeError: this is undefined in rect js while passing BigNumber in solana RPC Request","73":"Why is it not possible to reassign the value in the contract level in solidity?","74":"What is the TL-B scheme in ton-solidity and how to use it?","75":"Get all NFTs of an Account on Flow <blockchain>","76":"Sign transaction on behalf of a 3rd party wallet","77":"Can smart contracts deploy other smart contracts?","78":"Why there should be orderer node in <hyperledger>? Can the orderer node's function be transferred to Peer node?","79":"How to add validators in POA system (node-template) in runtime?","80":"In Solidity smart contracts, what variables can be made dynamic?","81":"Instantiate chaincode successful but chaincode doesn't appear","82":"PopUp in React.js with a link","83":"How to read recent <transactions> from Uniswap V3 using <python>?","84":"Why assembly delegatecall() returns 1 instead of 0 when calling zero (0x000...) address?","85":"I need a simple way to sign data via <web3> and metamask","86":"Moving NearProtocol Node IP","87":"Using the CLI how do I get the balances of a Zenon Network address?","88":"How do I get the stats of all the pillars on the Zenon Network?","89":"ether holding time for The DAO recursive calls vulnerability case","90":"Does it make sense to manage balance manually inside smartcontract?","91":"How can I use Ganache to connect to a remote <blockchain> network?","92":"Ethers contract on method \"No mathing event\" error","93":"<web3> Swift Call Contract using Skywinder wrapper","94":"How do gasless fee <transactions> work on the polygon(matic) network?","95":"can't deploy contract from <web3> to <geth> node , Error: Transaction has been reverted by the EVM","96":".then() function never running for call to <blockchain>","97":"How can I debug the runtime error when call contract.transfer method in Solidity?","98":"How can I choose which account is the selected account when sending coins?","99":"Deploying a smart contract using Hardhat WITHOUT script","100":"Is smartcontract the only way to transfer ether in Ethereum network?","101":"Verify\/Publish Smart Contract on Etherscan Rinkeby","102":"Why can't I transfer ether in contract?","103":"<web3> - Provider not set or invalid","104":"why can't I send 1 ether to another account via smartcontract?","105":"Why do I get `sealing paused while waiting for <transactions>` error when mining in Ethereum private network?","106":"Which is the cheapest way to store a (140 chars) string in the <blockchain>?","107":"Proper way to initialize PDAs within the Solana Anchor framework","108":"Unauthorized error when running npx hardhat test --network local or npx hardhat test --network kovan on Moralis forked testnet","109":"Disconnect dapp from MetaMask","110":"How to get all transaction from an address via the etherscan API in R?","111":"Use of address function inside a contract constructor?","112":"Should I use the pallet_membership to handle dapp user membership? (Differences between smart contracts and <blockchain> runtime)","113":"<blockchain> substrate pallet_membership use cases?","114":"Opensea not generating preview for 3d model glb","115":"What are the steps to build a production-based HF <blockchain> network?","116":"Does deploy a contract mean create a new block in <blockchain>?","117":"Does each transaction take more than a few minutes to finish in <blockchain>?","118":"How to fetch raw data from Binance Smart Chain (txs for specific address)","119":"how to update the value of variable of struct with mapping in solidity","120":"How to get informative data in smart contract with using API in R","121":"How to find smart contract adress and hash code in Etherscan","122":"swapExactETHForTokens keeps failing","123":"Smart contract Ethereum - How to recreate same contract after used selfDestruct()","124":"Can I use the block height to measure the passage of a year based on the average block time in RSK and Ethereum?","125":"Bit operators and gas saving on solidity","126":"Are there any costs to create smart contracts in Solidity?","127":"Trying to run \"brownie run .\\scripts\\deploy.py --network rinkeby\" but getting a ValueError","128":"Is there any doc on how accounts are generated in substrate?","129":"Can I create a same pair in different DEXes?","130":"Tronweb authentication","131":"How to get price information from Chainlink?","132":"How to see contract execution time in Remix IDE?","133":"How to resolve the error \"Invalid type for argument in function call. Invalid implicit conversion from address to address payable requested\"","134":"Solidity - ERC1155 NFT minting - Gas estimation failed: execution reverted","135":"Problem with the approve function of ERC20 token contract","136":"Can I import NFT's metadata into a smart contract?","137":"create a simple randomness feature in solidity","138":"How to transfer ERC1155 token using <web3>js?","139":"Solidity struct and staking code error: Please look into the contract","140":"Error: Expected private key to be an Uint8Array with length 32","141":"solana - \/node_modules\/@toruslabs\/eccrypto\/index.js: 'return' outside of function","142":"I would like to get all <transactions> given an address","143":"Can a server \"impersonate\" an user account on Ethereum <blockchain>?","144":"Solana, how to send a NFT (spl token) to another wallet using javascript\/wallets","145":"Bitcoin daemon consuming too much internet data","146":"Is it possible to create a <blockchain> with probabilistic finality with substrate?","147":"Unable to edit ORG1MSPanchors.tx in <hyperledger> Fabric","148":"Member \"transfer\" not found or not visible","149":"What is difference between internal and private in Solidity?","150":"Error: transaction invalidated with status (ENDORSEMENT_POLICY_FAILURE)","151":"Return nested struct inside struct in Solidity","152":"<web3> getting contract <transactions> history","153":"ERC20: transfer amount exceeds allowance Smart contract with brownie and NFT","154":"<blockchain> Testnet tokens, where do they come from and are they unlimited?","155":"BSC testnet, how can i get api key from bsc testnet","156":"API problem for separating Orderers in separate Organizations","157":"Can we add more than one validator in from one node on substrate?","158":"Chainlink Keeper: The execution failed due to an exception","159":"how to apply javascript promises for async data hashing","160":"How to use ERC777 as a pay method","161":"How can I freeze MasterEdition NFT token account?","162":"How do we know that information added to a <blockchain> is true?","163":"Storing data and image on Ethereum network","164":"Generate new deposit address in Binance","165":"Fetching Chainlink's Oracle Private Key","166":"near-example\/workshop--exploring-assemblyscript-contracts\/assembly\/A.sample-projects\/04.token-contract\/","167":"tx.wait with Ethers.js never resolves","168":"How to restart <transactions> and Block stream in Hive <blockchain>","169":"Examining the Behaviour of <hyperledger> Fabric when one of the stateDB is Tampered","170":"I want my code to print only if the result is different from previous result and not the same thing again","171":"<node.js> can't find Module inside Folder","172":"<web3> <python>: how can I decode Input Data","173":"How do <blockchain>s find invalid blocks?","174":"The relation between using `std` and `no_std` attributes and including WASM","175":"node:assert:400 throw err; ^ AssertionError [ERR_ASSERTION]: Invalid callback object specified","176":"How to transfer an ERC721 token across networks","177":"How to add infinite allowance with <web3>?","178":"Implementing bridge network of substrate and getting error: duplicate lang item in crate `sp_io` required by bp_runtime","179":"After compiling my erc20 token, can I modify any function?","180":"Error at <hyperledger> FABRIC while trying to use the chaincode for the test network but running my application","181":"Weird error using Smart Contracts with @usedapp and @ethersproject\/contracts","182":"OpenSea API \"only_opensea\"","183":"Error in executing .\/network.sh up createChannel","184":"I am not able to use ipfs","185":"Normal Android\/windows app with <blockchain> storage","186":"I'm currently learning Solidity and how to develop Dapps on Ethereum <blockchain>, is my understanding correct?","187":"What does MetaMask do?","188":"Running Metaplex on localhost","189":"how to start hyper ledger fabric without fabric-samples?","190":"Unable to make field public java.lang.String <blockchain>.Block.hash accessible: module noobChain does not \"exports <blockchain>\" to module gson","191":"Polkadot tx-wrapper offline signing","192":"Can we get the pallet and function data from call (type) passed as a parameter to a function in substrate?","193":"Transferring SPL Token using @Solana\\<web3>.js","194":"How to generate same wallet address in both BEP20 and ERC20 using <web3>","195":"Function declared as view error in solidity","196":"Connect <web3> php to ropsten test network","197":"<hyperledger> fabric - Cant connect peer to channel - endorser client failed to connect - connection refused","198":"Brownie doesn't automatically attach to local ganache when I have Ganache open in the background. It is stuck with ganache-cli","199":"How to Call getLatestPrice function Chainlink Price Feed","200":"Is there any testnet for trading? I want to test trading my newly created token","201":"Implementation of Chainlink Feed Aggregator","202":"Solidity calling contract with elevated permissions","203":"React Native slow \/ freeze whet i call ethers.Wallet.fromMnemonic() [Ethers js 5.5.1]","204":"How to analyse tokenBalances in a confirmed transaction on the Solana <blockchain>?","205":"<blockchain> and in-game currency (off chain)","206":"Metamask not connecting to localhost 8545","207":"Using brute force to determine original input data from a hash value","208":"inpage.js:1 MetaMask no longer injects <web3>","209":"Separate orderer for each organization","210":"Where is the on-chain architecture explained in the whitepaper applied in Chainlink?","211":"Split money on minting between more than one wallet solana metaplex & candymachine","212":"Import <web3> could not be resolvedpylance(reportMissingImports)","213":"Error: VM Exception while processing transaction: out of gas, set mapping key value error","214":"get Avalanche C-Chain contract Abi's","215":"Restrict function access ONLY to one other specific contract in Solidity","216":"Why am I receiving the following Chainlink error: cannot estimate gas","217":"How can I build a bitcoin wallet?","218":"Call nft_transfer using contract name on NEAR <blockchain>?","219":"How to get a recipient's public key in bitcoin <blockchain>?","220":"Error running hardhat node: error:0308010C:digital envelope routines::unsupported","221":"Nethereum invalid sender: eth_sendRawTransaction on polygon chain","222":"How to run <hyperledger> besu node through docker with custom configuration?","223":"How do I load my Solana wallet using my private key file?","224":"Solidity, Struct containing a (nested) mapping cannot be constructed","225":"How to count on chain <transactions> for an address between blocks in solidity","226":"<hyperledger> Fabric: how can I invoke a chaincode with the role of a user?","227":"How Ethereum protocol works with <geth>","228":"Generating a REST server from <hyperledger> fabric composer","229":"How can I store the value of a promise and use it once resolved?","230":"How new transaction will get recorded when all bitcoins are mined","231":"Borsh Serialization fails in React Application","232":"Metamask is not connecting my <blockchain> network","233":"Batch to<geth>er multiple read function calls for different blocks of ethereum <blockchain>","234":"Solidity pragama not allowing for anything lower then 0.8.9","235":"How to concat two string values in Solidity","236":"Making ink! Smart Contracts Revert","237":"Solidity inserting array as map value after _setTokenURI on ERC721","238":"How to read a ledger file of a local <hyperledger> Fabric?","239":"how to get the the amount of the given token address in anchor solana?","240":"Error HH604: Error running JSON-RPC server: error:0308010C:digital envelope routines::unsupported","241":"gRPC connect to Concordium <blockchain> API with C#","242":"How do I calculate prices?","243":"Solana <blockchain>. How can i generate private key?","244":"<web3> subscribed event fires twice","245":"Does each transaction have its own gas price in NEAR?","246":"Solana - How to get token balance for a foreign account?","247":"What is the best way to create ether wallet ? how does creating wallet using mnemonic work?","248":"Can an NFT have metadata that updates based on smart contract variable values?","249":"how can i get the symbol\/name of a token in solana using solana <web3> js?","250":"<hyperledger> Fabric: is there a way to prevent a member of an organization to access a specific smart contract within a chaincode on a channel?","251":"Can I Install <hyperledger> Composer deprecated version by cloning it from github?","252":"ParserError: Expected ';' but got identifier","253":"\" Expected '(' but got identifier \" & \" Parse error: mismatched input '{' expecting {';', '='} [undefined] \"","254":"How to connect my smart contract with another deployed smart contract?","255":"How to get private and public keys for the wallet by providing a seed phrase (NEAR Protocol)","256":"<node.js> Websocket to Connect Peers on Different Networks","257":"Is Ganache Decentralized?","258":"Checking value of 2 mapping with struct in the same address on <blockchain>","259":"Is this how how I should implement the VRF random NFT traits using chainlink?","260":"Ethereum.on How to get error if chain is not added into metamask yet","261":"Is there any way to get amount(number of token we are sending in transaction) after calling transaction.from() in solana","262":"I encountered an error while installing Fabric CA with the go get command","263":"How to connect metamask wallet in Mobile Platform of Unity?","264":"Polygon: Solidity build failed for 'pragma solidity ^0.8.7' with chainlink","265":"Is it possible to check the Connected RPC network in MetaMask using JQuery?","266":"I can't seem to make Visual Studio find my remappings","267":"Corda - State size information","268":"Problem in verifying the signature in smart contract which was signed by eth.personal.sign() in <web3>","269":"how can i get all ERC20 addresses in brownie to use in frontend","270":"How to create directories\/files on the local machine using Django?","271":"Is there any way to fix hardhat Unable signature","272":"Solana - How to get the balance from my Phantom wallet?","273":"What unit does \"amountIn\" have in UniswapV2Router02 contracts?","274":"<web3>-Py : Nonce Transaction Overwriting Problem","275":"What does one mean by a 'transaction' in <blockchain>?","276":"How to run Cardano Wallet?","277":"<web3>.eth.getTransaction with ganache-cli gives chainId error","278":"How to push transaction EOS <blockchain> (eosjs - unsatisfied_authorization)?","279":"How to debug Chainlink job task?","280":"Corda - info about transaction size","281":"How to deal with \"Only the owner of the contract can update the smart contract\"","282":"How to speed up token balance on multiple contracts","283":"How to calculate availability on <blockchain>\/IPFS and Hadoop\/HDFS?","284":"Error creating contract after getting contract ABI from Etherscan API","285":"Why is transaction hash bitcoin millions worth txid","286":"Transaction hash Returned error: invalid sender","287":"Retrieve the random number generated by Chainlink VRF in 1 transaction","288":"Total Supply api for Coinmarketcap listing","289":"NEAR FunctionCall `args` field","290":"Best way to download all historic Ethereum ERC721 transfers","291":"Is it possible to mint an NFT in Solana \"unrevealed\" and then reveal it later on?","292":"Error: TypeError: Cannot read property 'toXDRObject' of undefined","293":"How to get btc address balance via electrum json rpc","294":"I am having EPERM Error while trying to load a new Ganache workspace","295":"Best way of setting up <web3> instance in React?","296":"How to get oracle id for chainlink api call?","297":"How to use BSC with WalletConnect and <web3>.js","298":"How the MetaMask plugin works?","299":"How to set DOCKER_SOCK variable to create container for service peer0.org3.example.com","300":"invalid sender while transfering BEP20 token","301":"VM Exception while processing transaction: revert","302":"Solidity importing problem on VSCode (WSL2) and Brownie","303":"Ethereum in Kubernetes: Fatal: Could not open database: resource temporarily unavailable","304":"How to access final balance from <blockchain>","305":"PancakeSwap V2 functions called automatically after adding myToken to a new pool: safebuy(), swapExactETHForTokens(), swapExactTokensForTokens()","306":"Invalid sender on signed transaction - mumbai polygon","307":"Solidity - When deploying the contract I get \"SyntaxError: Unexpected token o in JSON at position 1\"","308":"How do I get list of tokens owned by me?","309":"Unable To Sell NFT Functionality When deployed to Polygon","310":"DeclarationError: Identifier not found or not unique. function retrieve() public view returns(unit256) { ^-----^","311":"Trying to connect Metamask wallet to my react app through <web3>.js","312":"How to execute truffle commands through an API or a code?","313":"Can we predict the data from the Hash value?","314":"Compact-u16 - what is the purpose of this?","315":"Set minter wallet address as creator of NFT in opensea","316":"ParserError in solidity, Expected identifier but got reserved keyword 'immutable'","317":"What does the data field mean in an Elrond transaction?","318":"How is a NFT Token ID assigned to an object (e.g., picture, tweet, video, etc.)","319":"Ethereum. Insufficient funds for gas * price + value","320":"I try to deploy my smart contract in truffle but is says \"unsupported compiler\" when I \"truffle migrate\" how can I fix this?","321":"ubuntu - when try to install solana - get error","322":"how to to check inputs to JSON.parse() is valid or not in ejs","323":"Channel creation failed at test network of <hyperledger> fabric","324":"Could not install erdpy - no module named 'ledgercomm'","325":"How to Fix \"unexpected end of JSON\" error?","326":"Trouble with Chainlink External Adapter making an API call to Spotify","327":"Why is Proof of Work necessary in <blockchain>?","328":"Detecting new PairCreated events on Polygon <blockchain> with <web3> and <python>","329":"Updating the state of many addresses in Solidity is gas costly","330":"Can the Cli service exist on each Org that installed in different machine (<hyperledger> Fabric)?","331":"Unexpected error calling ethereum contract using <web3>.js","332":"Does <blockchain> with proof of stake consensus have special nodes to choose a winner?","333":"ERC-721: How to get all token ids?","334":"How do <blockchain> nodes find each other in a P2P network?","335":"Programmatic Minting Process","336":"How can I get the wallet address for a given herotag?","337":"Remix IDE unable to load 3rd party library","338":"Truffle HDWalletProvider alternative?","339":"Solidity question about UsingLiquidityProtectionService","340":"How to fix the high memory usage of fabric peer running on k8s?","341":"DecoderFailure in cardano-cli","342":"How can get json interface of the smart contract","343":"Please how do I get ABI of my token after deploying on BSCMAINET","344":"Error: Service(Telemetry(IoError(Custom {...... error in substrate","345":"<geth> node stuck on \"Looking for peers\"","346":"Error when deploying a smart contract that implements IUniswapV2Router02","347":"Is it possible to integrate OpenSea SDK into Kotlin Android App?","348":"smart contract for auto burn on every transaction","349":"How many NFTs does a smart contract have?","350":"Value inside submitted task always the same - ExecutorService","351":"Convert Solana public key from UINT8Array","352":"How to get proper public address from mnemonic phrase for Solana?","353":"Corda 4.7 QueryCriteria, LinearStateQueryCriteria","354":"Polygon transaction working just fine on Mumbai but not on Mainnet","355":"error in ganache installation: The term 'ganache-cli' is not recognized as the name of a cmdlet, function, script file, or operable program","356":"How to customize <hyperledger> Fabric test network?","357":"<blockchain> implementation not working while using sha256","358":"<web3>js: How to show pending <transactions> on custom <blockchain>","359":"GraphQL to check if a transaction is present on the <blockchain>","360":"<hyperledger> Fabric on Kubernetes - Restarting Peer throw error for few minutes","361":"Bitcoin <blockchain> rookie question: how is nonce (the secret number added to each block) generated?","362":"<geth> eth_protocolVersion is returning error : \"the method eth_protocolVersion does not exist\/is not available\"","363":"Solidiy FundMe Smart Contract - Remix - Chainlink `call to FundMe.getVersion errored: execution reverted`","364":"Solidity v0.6.0. Fallback functions. What are they needed for?","365":"Moonbeam (polkadot parachain) transaction error","366":"Getting React useEffect to display updated variable after contract call?","367":"how do i subscirbe\/listen to events on the polygon <blockchain> using <python>","368":"Is it possible to reuse a deployment from a Mocha Hardhat test script into another one?","369":"Substrate state cache and performance limitation?","370":"sending signed messages ethers","371":"<hyperledger> Fabric Building First Network","372":"Check <transactions> on hardhat localnet","373":"ERC20: transfer amount exceeds allowance, even when it is approved","374":"Bitcoin Core on external SSD in OS X","375":"React - Converting Class to Function Components For Front-End","376":"I have written a abasic constructor code in Solidity but I am getting this error. Is it the version issue?","377":"What's the correct connection profile for accessing <hyperledger> fabric v2.x deployed on k8s","378":"How are the development keys (Alice) added to the local keystore from `chain_specs.rs`?","379":"How would I issue some ERC20 tokens of newly instantiated ERC20 token","380":"Retrieving total eth transaction value of block faster","381":"Calling specific endpoint on Solana smart contract","382":"Building chain link node for Alarm clock","383":"Failing in convert a mnemonic to a seed for a solana wallet","384":"What are Solidity Events","385":"Error with RequestMultipleParameters and FulfillMultipleParameters Chainlink","386":"Handle WTRX token withdraw and deposit from smartcontract","387":"Right way to run a MultiWord job on a Chainlink Test Node","388":"Note: The called function should be payable if you send value and the value you send should be less than your current balance","389":"is there a way to add token info to the solana devnet like on the mainnet?","390":"Solana transfer amount null","391":"How do I remove the minting authority from my custom token in Solana using @solana\/<web3>.js?","392":"Smart Contracts developed for Ethereum can also be used in Binance Smart Chain?","393":"About IPFS client add() function","394":"Smart Contract runs external API","395":"How Etherum <blockchain> Smart Contract Stored","396":"Error with Contract, message: method is not found","397":"How to get private key based on Keystore UTC file?","398":"<geth> private network is which type of node?","399":"Recovering Dogecoin and Litecoin wallets from mnemonic passphrase","400":"How to get over the limit of OpenSea Api?","401":"Issue with returning uints in solidity","402":"Why HashAlgorithm.ComputeHash returns different values from the same data?","403":"How to upload file to IPFS by keeping same CID","404":"Private data collection vs encryption","405":"How to Pull HIstorical Price Data from Solana Devnet Contracts?","406":"Cannot Connect to local Ethereum node (Mainnet) using Ethers in <node.js> with Uniswap SDK","407":"Candidate Block Bitcoin","408":"What is the best toolchain to build & test &deploy cosmwasm contract to terra netweork?","409":"Connecting a Project ID to polygon","410":"Save struct inside other structin solidity","411":"How can I test opensea api?","412":"Remix IDE - Issue with functions when deploying smart contract","413":"Generate DID in ION SIDETREE testnet","414":"How to withdraw rewards from Substrate private node?","415":"how to get test tokens on rinkeby and ropsten","416":"Is there any possibility to search an asset with partial id","417":"Creation of my_smart_contract pending in Remix","418":"How can i query the access object from JSON in CouchDB","419":"ERC721 - how do I generate nfts from different characteristics (e.g punks, apes...)?","420":"Error: 'unknown account' in Send Transaction using <web3>.js for Binance Smart Chain Ethereum <blockchain>","421":"How to solve Transaction simulation failed: Error processing Instruction during a solana <blockchain> transaction?","422":"increase total supply of TRC20 token daily","423":"Substrate Rust - unresolved imports node_template_runtime","424":"How does every block in a <blockchain> contain all others blocks data if it is immutable?","425":"I want to connect contract without using meta mask","426":"Transaction reverted during swapExactTokensForTokens (UniswapV2Router02, <web3>.js)","427":"Should I use the elrond devnet instead of the testnet for development?","428":"Nethereuem SendTransactionAsync from my C# Web API fails with transaction type not supported: eth_sendRawTransaction","429":"solidity error - Member \"sub\" not found or not visible after argument-dependent lookup in uint256","430":"I can not deploy the program to dev net with anchor","431":"Truffle migrate is not deploying to Ganache","432":"Blocks are not producing when using --staging flag (in the full node)","433":"Transaction Receipt using <blockchain>","434":"maximum size of data we can \u00e2\u0080\u0098GET\u00e2\u0080\u0099 by using adapters","435":"Endless loop stops checking IF functions after first one is correct - <python>, <blockchain> <transactions>","436":"How to get all transaction data from the entire Ethereum network using <web3>py","437":"Opensea JS SDK createSellOrder method doesn't seem to work or silent failure","438":"Can't connect to <geth> node RPC from another machine","439":"Metamask Error: Internal JSON-RPC error. while confirming on metamask mobile","440":"How do you get the current block number in Substrate?","441":"How can i fork Binance Smart Chain and create my own <blockchain>","442":"Chainlink oracles on testnet","443":"Self - Referencing in MYSQL causing: ERROR 1822 (HY000): Failed to add the foreign key constraint","444":"Make a withdraw from Aave causes \"error transaction reverted\"","445":"Remix contracts stuck pending [duplicate]","446":"Returned values aren't valid, did it run Out of Gas? <web3> 1.5.0 and sol-0.5.15","447":"<blockchain>s with modifiable consensus algorithm","448":"How do you return multiple instances of a struct in Solidity? [duplicate]","449":"Running mutiple VMs in <hyperledger> Fabric using Java SDK","450":"How do I uninstall the chaincode installed on <hyperledger>","451":"Is there a way to check sells and buys in transfer function on Solidity?","452":"How can a Solana Rust smart contract get block height or Unix time?","453":"<python>, json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1). How to troubleshoot?","454":"Using Ganache provided address but still unable to vote","455":"eth-brownie - No module named <Users.someuser>","456":"Will Require revert storage changes made in a separate contract in the same transaction - Solidity","457":"how to use --staging flag in substrate framework?","458":"Can I perform transaction from different server - <blockchain>","459":"Which is more effective way to subscribe state change in Ethereum","460":"Can't send transaction using <web3>","461":"IBM <blockchain> platform VS code extension - unable to create new new Fabric environment\/wallets","462":"Interact with Smart Contract Function on Metamask Mobile without Internal JSON-RPC error and 0xa9 not defined","463":"How to get all the NFTs of particular smart contract","464":"What is the Solana pattern for creating a transfer account the program can use to execute a contract payment?","465":"How to extend connection timeout in node-template, when joining a private network?","466":"If the ledger of peer is tampered in <hyperledger> fabric network, how can be the previous state of ledger restored?","467":"How to get value of <transactions> in <blockchain> from transaction hash?","468":"Solidity <blockchain> invalid amount check","469":"How bitcoin payment in the dark web works?","470":"<web3> Uniswap\/Pancake Retrive last swap transacion contract BUY\/SELL","471":"Comparative Differences between the threat model of substraTEE and Intel SGX","472":"Can I change the lockup period of a deployed smart contract?","473":"bsc get <transactions> by wallet address <web3>.py","474":"how to connect to cosmos hub","475":"Pancakeswap liqidty not working with forked token","476":"Writing Poseidon \/ Pedersen Hash based Time Locks on NEAR Protocol","477":"<hyperledger> fabric gateway is not able to get network","478":"Get details of pending <transactions> using <web3>.py","479":"Solidity: What does the caret ^ operator do?","480":"Problem with deploying program to solana on localhost","481":"how to take a our ERC20 token as fee to our products?","482":"<hyperledger> Fabric- Contracts are required to have at least 1 (non-ignored) public method","483":"Solidity smart contract: Data location must be \"memory\" or \"calldata\" for return parameter in function, but none was given","484":"Minting tokens on time base in ERC-20","485":"0x protocol: how to locally sign orders with <python>","486":"how to withdraw all tokens from the my contract in solidity","487":"How is data entry in private and consortium <blockchain>s trusted?","488":"How to get rid of 'Flow sessions were not provided' exception in corda when run using network bootstrapper?","489":"Substrate node-template private network WITHOUT using default keys","490":"Filecoin Textileio Powergate Not Enough Miners from Reputation Module to Satisfy The Constraints Error","491":"Can a liquidity pool have more than 2 tokens","492":"ERC20 transaction list with API","493":"Smart contract with text storage ethereum","494":"What should I do about DApp?","495":"ERC 1155 Token Standard","496":"Trying to susbcribe to PairCreated events from UniswapV2 Factory in Nodejs","497":"Error: Returned error: VM Exception while processing transaction: revert Not Enough Balance -- Reason given: Not Enough Balance","498":"<web3> ExtraDataLength Error on the Binance Smart Chain using <python>","499":"How to install <web3> on <python> 3.9.6\/3.7.6?","500":"ConsenSys. qubernetes tessera connect to different URL","501":"How to send a transaction in private tangle Hornet of IOTA?","502":"How exchanges (Binance, Coinbase) record user trade into <blockchain>","503":"Got this runtime error while implementing assets pallet in substrate(1002: Verification Error: Runtime error: Execution failed:","504":"What is error Error: Returned error: execution reverted when calling <blockchain> data and how to fix it?","505":"<blockchain> tutorials for double spending and signature verification","506":"sync <transactions> in each node <blockchain> <python>","507":"<hyperledger>, create a channel using the configtxgen CLI tool","508":"Solidity Remix transaction reverted to initial state","509":"It says ParserError: Expected ';' but got 'StringLiteral' --> Token.sol:495:16: | 495 | address\"msgSender\" = _msgSender(); when I compile it","510":"How to get median data from 2 Urls","511":"Staking contract based on time: need to avoid loop","512":"How to launch a substrate <blockchain> as a test network?","513":"How to get all historical Uniswap\/Pancakeswap trades for a given token","514":"Smart Contract update Function","515":"CHAINLINK NODE - Your node is overloaded and may start missing jobs ERROR","516":"Is <hyperledger> Besu compatible with Cosmos IBC?","517":"Is there any method or a way to check accesskey permission on the Near account id?","518":"how to import an exported function","519":"how to connect metamask with ethers.js and fetch balance?","520":"can anyone explain me this assert condition?","521":"SyntaxError: EOL while scanning string literal error on <blockchain> [duplicate]","522":"Disconnect wallet from site using <web3>","523":"How to interact with <blockchain> without need of refreshing page in react","524":"I am getting error when trying out Substrate's \"Create a Pallet\" Tutorial","525":"Determine BSC Sell\/BUY <transactions>","526":"ReferenceError: Cannot access 'TokenFarm' before initialization while migrating solidity file","527":"Solidity - \"CompilerError: Stack Too Deep\"","528":"What is balanceRecived in solidity? what it will be strore?","529":"<hyperledger> fabric test-network error: x509: certificate signed by unknown authority","530":"Why do clients broadcast an endorsed transation instead of the peers doing it themselves?","531":"Why this piece of NodeJs code has given a BSOD on Win7?","532":"Making a solidity transfer automatically without metamask","533":"How to automatically accept request without asking confirmation in metamask wallet","534":"Problems with Dapp Development with Flutter and <web3>","535":"Peers are not able to connect with orderer in <hyperledger> fabric","536":"What is column 'type' means at Ethereum method eth_getTransactionByHash?","537":"How to get the account data of all accounts in Polkadot using py-substrate-interface","538":"Send two-dimensional array from Nodejs server socket to Ethereum smart contract (Solidity)","539":"TheGraph: one graph-node for several <blockchain>s?","540":"How to upload and keep updating the file in <python>","541":"Starport & CosmWasm Smart contracts","542":"Merkle tree 2nd preimage attack defense - prepending a specific byte value","543":"How can I deploy smart contract with front-end . Like REMIX IDE is doing","544":"How to transfer ether from sender account to a given account with specific value parameter -- Smart Contract","545":"Module parse failed: Unexpected token in React Project. You may need an appropriate loader to handle this file type","546":"How to get multiple account balances in trc20 network","547":"<blockchain> and smart contract beginner","548":"SubQuery vs TheGraph for <blockchain> data","549":"I notice when I try and use Borsh to serialize\/deserialize I'll get errors","550":"Add simple line \"Pubkey::new_unique()\" breaks my Solana Program","551":"Creating a cold multi-coin wallet that can make <transactions>","552":"Chain Link VRF takes a long time to get random numbers","553":"Chain Link VRF not working Wrong argument count for function call: 3 arguments given but expected 2. return requestRandomness(keyHash, fee, seed)","554":"Dispute resolution in smart contracts - ex. Kleros & Aragon","555":"How to add 2 nodes in chainlink smart contract","556":"Basic implementation of EIP-2981","557":"How to run a uniswap-interface using yarn","558":"How to set up a wallet address without using truffle-hdwallet-provider","559":"Whats the first step in creating a <blockchain> based certification system?","560":"Cosmos SDK account sequence mismatch","561":"Unhandled Rejection Opensea error while making Buying Items","562":"How can I change types of Contract Constraints to Signature constraint in corda production env","563":"Chainlink.Request doesn't have `add` function","564":"Amazon Managed <blockchain> not showing Ethereum network","565":"Difference between \"submitted\" and \"finished\" <transactions> in Substrate <blockchain> framework?","566":"Filtering nested properties in subgraph (the graph)","567":"Getting last buy timestamp for msg.sender in Solidity","568":"Pragma solidity error while trying to compile contract with truffle","569":"How can I get 2nd balance from MetaMask?","570":"Double equal in statement of dot notation","571":"Main organization data access in <hyperledger> fabric","572":"Tron Network Contract Read-Only Method Fees","573":"Solana stake pool installation issue","574":"Solidity: Error: Please pass numbers as strings or BN objects to avoid precision errors","575":"How do I fork the Uniswap V2 interface?","576":"how to query all staking rewards on polkadot.js given an access to archive node","577":"How do get rid of java.lang.IllegalArgumentException: Unable to match key(s) in corda?","578":"How can I use Redis to fetch data from large dataset?","579":"Chainlink - Job not being fulfilled","580":"How can I swap BNB into another crypto currency using <web3>?","581":"How do I determine the network i am connected to in Ganache","582":"How to retrieve the account info of an account that sits on a different node?","583":"<python> Web Scraping Display additional data fields on screen","584":"Can Smart Contract access Data of other <blockchain>s?","585":"Cant compile solidity files using correct Solc version","586":"Lisk <blockchain>: what is the maximum block size that makes sense?","587":"what is the ADA (Cardano crypto-currency) SDK?","588":"What is the difference between the two parameters \"latest\" and \"earliest\" in <web3>.eth.getBlock()","589":"Can't call methods in contract via <web3>.js","590":"Interacting with contracts that are not instantiated in the <blockchain>","591":"Transaction reverted when calling swapExactTokensForTokens function, <web3>py, <python>","592":"Obtain Private Key Corresponding to Address in HD Wallet with BlockCypher API?","593":"How to parse bitcoin <blockchain> blkxxxxx.dat files, especially transaction parts","594":"Create a <blockchain> member in Azure Portal 'Create' button not enabled after the Validation passed","595":"Start doing Parastate node","596":"Merge two separate react app into a single app","597":"Solidity ParserError: Expected ';' but got 'is'","598":"<blockchain> (Avalanche) faucet implementation in the local test network","599":"How to create a fixed token and store the state information on the ledger in corda?","600":"Solidity with React","601":"Facing issues with IBM <blockchain> platform at vs code in my-asset-contract.ts","602":"How Sniper Bot Watcher feature on poocoin.app works?","603":"Unable to create channel in Fabric Network","604":"Parastate test tokens","605":"What is parastate test network chain ID?","606":"How many channels can be opened with a lightning node simultaneously","607":"hd wallet bip44 in js - how to create an address for a chain other than bitcoin?","608":"Error on estimating gas for swapExactTokensForTokens","609":"Contract constructor parameter which is also a contract","610":"How to fetch Metamask account using <python>-Flask?","611":"Binance Smart Chain TestNet contract deployment JSON RPC error execution Reverted","612":"NEAR cli contract call works but fails when called from js sdk with same params","613":"How does Uniswap forntend caculate the path(route) for a specific pair?","614":"Peg erc-20 token's price to a cryptocoin","615":"Error: Invalid number of parameters for \"undefined\". Got 0 expected 1","616":"Transaction Validity in bitcoin <blockchain>","617":"From where crypto on-chain data are coming from?","618":"Has anyone used Hedera Hashgraph? Is it really as fast as 100 ~ 10000\/s for <transactions>?","619":"BSC Token Explorer","620":"Truffle doesn't recognize contract change and wont deploy it","621":"while building SAAS solutions based on Corda, who owns the certificates issued to each participant?","622":"How to Add a Function to an Already Deployed Smart Contract","623":"contract's address <transactions> list - Etherscan API","624":"Is there any way to get pending transaction for specified address using <web3>Py?","625":"How to modify process function in simple wallet project?","626":"How to receive ETH in a smart contract","627":"Call Revert Exception","628":"Get digital signature from the UI and use it in the transaction for verification.(<blockchain>- Corda R3)","629":"How to get ABI of Smart Contract with Nethereum?","630":"Why does the minting function of ERC721 have an access control?","631":"how to create crowdsale with openzipplin 4.x without crowdsale contracts","632":"Deploy a pruned Tron (TRC20) node","633":"If smart contracts are stored on blocks in the <blockchain>, how is its state updated?","634":"Pay fee for Tron contract method call with another account","635":"How can I convert\/transform a JSON tree structure to a merkle tree","636":"Creating an account on Wax test net returns wallet wallet is not unlocked","637":"Verifying a crypto (BSC) address belongs to someone","638":"How do I listen for trx events on tron network? (Tronweb) nodejs","639":"How to manually burn tokens on BSC network","640":"How to integrate pancakeswap sdk to nestjs project?","641":"Read data stored in the blocks in Ganache","642":"How can smart contracts \/ DAOs survive the chaos of the real world if they can't be easily updated?","643":"How do I use SQL to return an average value for a day in a date range?","644":"How to run the graph-node in the rinkeby test rpc","645":"cleos on wax get info eror [Failed with error: Parse Error (4) Unexpected char '101' in \"error\"]","646":"What is the difference between indy-node and indy-sdk?","647":"Understanding <blockchain> smart contract","648":"Solidity: solidity declarationerror identifier not found or not unique","649":"How to store in an orders contract an array of products contract","650":"How to get contract's all holders on BSC","651":"Token information does not show when compiled","652":"Problems when buying tokens from a contract using BNB","653":"Unable to restore the backup of fabric-samples test-network - <hyperledger> fabric v2.2.0","654":"Some Truffle test not executed","655":"Different World States DB as a mechanism for data security","656":"Cannot connect to my PostgreSQL server remotely from chainlink node terminal","657":"EthereumJS library not providing me with correct address (missing 0x)","658":"Implementing buying and selling in Solidity","659":"<hyperledger> Fabric - Role of member vs peer","660":"BSC Testnet: Truffle Migrate ETIMEDOUT","661":"Ethereum\/BSC <blockchain> transaction data","662":"ehtereum smart contract approve spender from another contract","663":"Different cross chaincode behavior for two different chaincode methods","664":"SHA256 of block header _hexadecimal vs string","665":"Truffle configuration","666":"How do you safely identify a user contacting our API via an intermediary platform?","667":"Decentralized identifiers (DIDs)","668":"<geth> private network return error \"invalid opcode: SELFBALANCE\" when executing a simple contract","669":"How it is possible to connect with uniswap smart contract with uniswap sdk pakage without giving private key","670":"How to properly use the call (or delegatecall) in solidity","671":"Called function suddenly needs to be payable","672":"Burn NEP-141 tokens","673":"<hyperledger> Fabric installation in Windows10 pro","674":"How to make connection between Fabric Node SDK and Fabric network, when deployed on different hosts?","675":"How to run <hyperledger> fabric","676":"Solidity Enum Inside of struct not updating in 2\/3 functions... working in 1\/3","677":"Cross-contract calls in Aeternity","678":"How to transfer a NFT from one account to another using ERC721?","679":"Why is there a difference in <blockchain> fee between Bitcoin-Qt and <blockchain> API?","680":"Instantiation of chaincode onto different channels on <hyperledger> Fabric","681":"Is there a place to find the list of all the public smart contracts on VeChain?","682":"Get proper sell price from Uniswap V2","683":"ERC20 - How to split the initial token supply on multiple accounts?","684":"Does chainlink have a reliable way to verify the size\/format of a file behind a hash stored on IPFS?","685":"<hyperledger> Fabric with Raft Protocol: How are <transactions> packaged into Blocks?","686":"Writing a simulation code adding blocks in chain","687":"Can I get Binance API data in solidity?","688":"How can i establish federated communication between two separate <hyperledger> fabric System","689":"Is it possible to create unpredictable random number with Solidity?","690":"\"VM Exception while processing transaction: revert\", when running a chainlink node and try to deploy TestnetConsumer contract?","691":"Solidity K error when I try to burn tokens in liquidity","692":"Allowance and transfer tokens from contract B using contract A to user address X","693":"How to change account in truffle(ganache)?","694":"<blockchain>.com Market OHLC data API call","695":"Install startport mv: cannot move '.\/starport' to '\/usr\/local\/bin\/starport': Permission denied","696":"Pandas conditional row values based on an other column","697":"I'm getting an error using aeproject test command with initialized project","698":"How to derive Cardano addresses from public keys?","699":"Facing error when running enrollAdmin.js for IBM Block chain <hyperledger> Fabric","700":"Quorum Marker support Quorum IBFT consensus?","701":"how do i know my ethereum nodes sync low speed or out of sync [closed]","702":"How to transfer specific amount of tokens to each holder in Solidity when transaction happens?","703":"How To Scrape Content From a Website That Requests a Metamask Connection","704":"Cannot find module 'fs-extra' npm","705":"how can the voter verify that the candidate\u00e2\u0080\u0099s choice has not changed?","706":"Error: Internal JSON-RPC error. { \"message\": \"VM Exception while processing transaction: revert\" soldity 0.8.0","707":"How do <transactions> take place in a <blockchain>?","708":"Truffle is installed but macOS cant find commands for any <blockchain> packages","709":"Who can execute public functions of smart contract in solidity?","710":"how to switch accounts automatically in meatamask","711":"How to use invokeChaincode() API","712":"Why can't I send an extrinsic from py-substrate-interface?","713":"Truffle test - doesn't send funds to msg.sender","714":"How to download <blockchain> transaction data?","715":"fabric invoke chaincode error: Failed to get endorsing peers: no endorsement combination can be satisfied","716":"Signing Documents with <blockchain> and IPFS","717":"Does <hyperledger> Fabric evaluate transaction return a signed query result?","718":"Truffle verify - Cannot find module '@chainlink\/contracts\/src\/v0.6\/VRFConsumerBase.sol'","719":"What exacly is BITCOIN_SEED_NONCE in Bitcoin Source code?","720":"Why does pyrlp.Serializable class not allow attributes to be edited after initialisation? How can this be done?","721":"How a <blockchain> node knows when a new node is added?","722":"Choice of token (fungible or non-fungible) pertaining to modifiability of information stored","723":"How can a crypto be transfered from a wallet to another, through an other <blockchain> than it's own?","724":"How to validate transaction manually in <hyperledger>-fabric","725":"IPFS and Editing Permissions","726":"Why does <blockchain> needs hash difficulty like zeros at the beginning of the hash value?","727":"I can not run Substrate on M1","728":"Corda check session.send\/receive completeness","729":"mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false\/empty top stack element)","730":"ContractLogicError while using <web3>.py","731":"Truffle migrate --reset without loosing data","732":"Accessing a private key in a MetaMask wallet","733":"Can I change smart contract which is already deployed on BSC?","734":"How can I solve this error? \"command not found: puppeth\"","735":"AttributeError: '_hashlib.HASH' object has no attribute 'startswith'","736":"How do you access the raw public data for a <blockchain> and then read the transaction ledger from it?","737":"Can't use fallback. Nothing happen! function() external payable {}","738":"How do you write a system test for your runtime?","739":"How to construct cardano transaction using cardano-rosetta and cardano-addresses","740":"Getting \"contract validate error : Owner no asset!\" when create a NFT","741":"<hyperledger> fabric error while deploying a custom chaincode","742":"Is there any way to initiate a disconnect request to the Metamask wallet?","743":"Developing permissioned <blockchain> systems","744":"Transaction is visible on Ethereum <blockchain> explorer, but token is not displayed in Metamask wallet","745":"Ethereum. Is there a way to know the storage space needed by my smart contract?","746":"Unable to connect with <bitcore> testnet getting following error 525 Origin SSL Handshake Error","747":"What exactly network implementation has been used in <blockchain>s? [closed]","748":"Elliptic curve key verification failed","749":"Endorser and orderer connections initialized Error: got unexpected status: BAD_REQUEST -- error validating","750":"Fetch all addresses holding an ERC20 token at a given timestamp","751":"<hyperledger> fabric client registration","752":"TronWeb UnhandledPromiseRejectionWarning: TypeError: e.forEach is not a function","753":"Tronweb and Trongrid Error: Request failed with status code 502","754":"the node server can't access the object block(object-oriented javascript)","755":"Should i learn <hyperledger> composer even if its depreciated [closed]","756":"failed to run custom build command for `ring v0.16.12` [closed]","757":"How do I get data out of JSON object withouth knowing the names","758":"Is it possible to reserve an address on Solidity smart contract creation for taxes collection?","759":"Flutter binance api signature","760":"what is the difference between a node and a client in the ethereum context?","761":"How to send etherenum to msg.sender in solidity 0.5.0","762":"Issue Deploying Raiden Contracts and Starting Raiden Client on Private <geth> Network","763":"Cannot get the account id if connected to Mumbai RPC testnet","764":"<web3> read contract <python>","765":"Can we track illegal use of our tokenized item using NFT [closed]","766":"Difference between <hyperledger> Fabric & <hyperledger> Besu","767":"How to use a fabric 1.4 wallet with fabric node sdk 2.x","768":"CURL (23) Failure writing output destination","769":"How to create a tron wallet with nodejs?","770":"Cannot run peer because cannot init crypto: error while using peer command","771":"compiler problem with solidity and truffle","772":"Aca-py 0.6.0: INFO Ledger instance not provided error\/bug?","773":"Quorum allowing ethereum addresses","774":"Getting error when compiling and deploying ethereum smart contract with <node.js>","775":"Get info from binance <blockchain>","776":"Why can't I change contract state in Solidity?","777":"How to execute \"peer node pause\" command in <hyperledger> Fabric?","778":"How can I renew an admin certificate for a <hyperledger> Fabric orderer \/ peer while the admin certificate nearly expire","779":"keccak256 doesn't return buffer","780":"How to fix declarations in Android Studio <blockchain> app","781":"Laptop specifications for implementation of <blockchain>","782":"IBM <blockchain> platform Visual Studio Code : Error while Packaging Smart Contract","783":"ParserError in Solidity 0.8.0","784":"Time out error during Deployment in Binance Smart Chain","785":"How to sign miners rewards on a <blockchain>?","786":"Input of a <blockchain> voting java program has a loop problem","787":"how can I connect solidity smart contract to an android application?","788":"truffle unbox metacoin failed dowloading","789":"Error Testing smart contract with truffle for Solidity Ethereum","790":"How to send a transaction to an onchain program in solana with javascript?","791":"Where can I find REMOTE EOS API","792":"Can date be generated while creating a daml contract","793":"How do I generate serial wif key, the program generate only one key in <python>","794":"How to implement <hyperledger> Fabric using Nodejs","795":"How to set system properties in substrate <blockchain> for private network?","796":"Latency of a fabric <blockchain>","797":"Is <blockchain> data stored forever? [closed]","798":"Handling multiple ERC721 Tokens in the same Contract","799":"How send Ethereum transaction with <python> without ganache?","800":"Send Ether From Specific Address On Constructor","801":"<hyperledger> <blockchain> Explorer-Fail to connect before the deadline on Endorser, fail to connect to remote gRPC server","802":"Which <blockchain> platform supports user defined consensus protocol for particular use case?","803":"how to query all current polkadot accounts with polkadot js?","804":"<hyperledger> Fabric 2.3 Error: Failed to connect before the deadline on Endorser- name:","805":"Where do I change the block time parameters when compiling a NXT <blockchain> fork code?","806":"Can my backend call a smart contract function to be executed on a certain date?","807":"Compute compressed bitcoin address from private key","808":"How to apply custom business logic to the Endorsement policies on <hyperledger>?","809":"How to find all the polkadot accounts with index or identity attached","810":"Cloud services deployment using smart contracts","811":"<blockchain> Websocket API with <python> gets Bad Request 400","812":"can we retrieve document revision by transaction hash in qldb","813":"Is it possible to get wallet balance passing the wallet address on any cryptocurrency?","814":"Alternative to metamask. Who manages the private key and the ethers?","815":"\"Weightned\" reputation nodes","816":"How to recover an Algorand Wallet with <python> AlgoSDK?","817":"Is there a way to use multisig without smart contracts on Ethereum?","818":"Could not convert parameter `tx` between node and runtime: Error decoding field CheckMortality.0","819":"Deploy <hyperledger> febric <blockchain> code on kubernetes","820":"SendRawTransaction return hash, but there is no transaction","821":"How to group by month-year from a differently formatted date (SQL)","822":"how to interact with an already deployed smart contract","823":"Convert Ethereum or Bitcoin address to Polkadot or Substrate-based address","824":"403 Client Error: Forbidden for url: https:\/\/ropsten.infura.io\/v3\/PROJECT_ID","825":"Call function of smart contract after deploying smart contract in Solidity","826":"Solidity hard-coding initial values for array of uint256 values fails","827":"How can I find out the number of times an RSK transaction has been confirmed on the RSK <blockchain>?","828":"Discrepancy between <blockchain>s of different peers in <hyperledger> Fabric 1.4","829":"JSON parse in SQL with hash key","830":"Docker deploy in smart contract","831":"Where is the data of a transaction saved?","832":"Storing images on the <blockchain> [closed]","833":"interaction with smart contract oracle","834":"Regular, repeating, interaction between an oracle and a smart contract","835":"Why blocks dont finalized","836":"my smart contract is not responding and error saying <web3> is not defined","837":"IdentityService's delete function returning {\u00e2\u0080\u009ccode\u00e2\u0080\u009d:56,\u00e2\u0080\u009cmessage\u00e2\u0080\u009d:\u00e2\u0080\u009cIdentity removal is disabled\u00e2\u0080\u009d} in <hyperledger> Fabric Node SDK","838":"Is there best practice solution to store draft data out of <blockchain> in dapp?","839":"Tezos Terminology: what is the difference between Private Nodes, Public Nodes and Bakers?","840":"Difference between Ethereum Web APIs and Ethereum API as a service","841":"I'm having problems writing test for my Solidity contract?","842":"differences in terms of api supported by full node vs light node","843":"Installing Pipenv on Windows","844":"<hyperledger> Fabric: Unable to Update Certificate Attributes in Node SDK","845":"[Solidity][Metamask] Metamask no longer injects <web3>","846":"Is it possible to create a circular <blockchain>?","847":"Too many open files error while reindexing btc <blockchain> by electrs","848":"How to find the REST API parameters to a site that doesn't have the data within the HTML?","849":"Webscraping <blockchain> data seemingly embedded in Javascript through <python>, is this even the right approach?","850":"Issue to synchronize with <blockchain> network","851":"How sending <transactions> and receiving events work in backends in Ethereum <blockchain>","852":"How the state of Ethereum <blockchain> is updated?","853":"Prove that you executed view function in Solidity","854":"What will happen if Bitcoin proof of work is not successful in 10 minutes?","855":"Generating <blockchain> header is failing with error","856":"Why are my Ethereum smart contract <transactions> not showing up after X amount of <transactions>?","857":"How are <blockchain> HD address queried","858":"How do we know the amount of money in each account in <blockchain>?","859":"Why do we not use Istanbul Byzantine Fault Tolerance (IBFT) in Public <blockchain>s?","860":"How can there be multiple wallets from the same Ethereum private key?","861":"Error in Deployment in Binance Testnet : Could not create addresses from your mnemonic or private key(s)","862":"Facing error on deploying contract in Binance Smart Chain","863":"How to secure a <blockchain> based on PoW against 51% attack?","864":"Solidity random number security using keccak256 when contract caller is known","865":"Integration to Chainlink from other <blockchain>s","866":"Artificial Intelligence In Ethereum Smart Contracts","867":"How to set different credentials of ethereum accounts for doing <transactions> in smart contract? For a <blockchain> based voting system","868":"Adding Tokens to existing <python> <blockchain>","869":"mkdir \/path: read-only file system problems when running <geth>","870":"Can we restrict an account in Corda to accept only one specific state?","871":"How view change protocol works when we have exactly f faulty replicas in PBFT?","872":"Solidity: Is it possible to combine event emit and require?","873":"Best way to create multiple LinkedLists of Hashmaps with multiple keys and values?","874":"Does CEXIO support withdraw and deposit via API?","875":"How to change code\/repository from fabric v1 to v2?","876":"How to send erc20 token from my metamask wallet to other address without private key?","877":"Making Private <transactions> on the ethereum network","878":"Artemis Auto configuration problem when using corda-rpc with Spring boot","879":"Limits of a decentralised app due to racketeering by miners?","880":"Format Chainlink AggregatorV3Interface 'answer' to USD?","881":"System has not been booted with systemd as init system (PID 1). Can't operate. Couldn't find an alternative telinit implementation to spawn","882":"Error while initializing actor system wavesplatform com.protonail.leveldb.jna.LevelDBException","883":"how to create standard ERC721 token","884":"Tron Web - Validate TransferContract error, no OwnerAccount (Tron Link)","885":"How does <hyperledger> fabric smart contract communicate with CouchDB?","886":"browser\/Test.sol:5:21: TypeError: Definition of base has to precede definition of derived contract contract test is owned ^---^","887":"<python> <blockchain> api to check balance with api key","888":"What is the incentive for <blockchain> nodes to always select the longest chain?","889":"Get Keys of Solidity mapping","890":"<hyperledger> Fabric error when I try to do .\/network.sh up in test-network directory"},"Title_link":{"0":"https:\/\/stackoverflow.com\/questions\/70544672\/ethereum-pre-defined-gas-price-in-<web3>-wallet-is-this-possible","1":"https:\/\/stackoverflow.com\/questions\/70540638\/<hyperledger>-fabric-fabric-ca-client-error-code-71-authorization-failure","2":"https:\/\/stackoverflow.com\/questions\/70539986\/<hyperledger>-fabric-world-state-is-it-immutable","3":"https:\/\/stackoverflow.com\/questions\/70539106\/i-am-trying-to-connect-lottery-contract-to-react-application-using-metamask-but","4":"https:\/\/stackoverflow.com\/questions\/70536513\/window-solana-not-found-in-<web3>js","5":"https:\/\/stackoverflow.com\/questions\/70533031\/mintto-contract-from-<web3>-gives-error-erc721-transfer-to-non-erc721receiver-i","6":"https:\/\/stackoverflow.com\/questions\/70484932\/smart-contracts-state-variables-on-the-<blockchain>","7":"https:\/\/stackoverflow.com\/questions\/70482694\/how-to-set-the-receiver-of-eth-in-a-contract-to-send-eth-from-one-address-to-ano","8":"https:\/\/stackoverflow.com\/questions\/70482042\/<cosmos-sdk>-couldnt-verify-signature-unable-to-verify-single-signer-signature","9":"https:\/\/stackoverflow.com\/questions\/70479688\/gas-estimation-errored-with-the-following-message-execution-reverted","10":"https:\/\/stackoverflow.com\/questions\/70479012\/does-timestamp-also-change-with-nonce-to-calculate-block-hash-in-<blockchain>-how","11":"https:\/\/stackoverflow.com\/questions\/70477152\/avalanchejs-getutxos-couldnt-unmarshal-an-argument","12":"https:\/\/stackoverflow.com\/questions\/70477532\/simulation-of-vanet-security-project","13":"https:\/\/stackoverflow.com\/questions\/70474706\/i-am-having-error-inbox-invalid-number-of-parameters-for-undefined-got","14":"https:\/\/stackoverflow.com\/questions\/70466070\/calculating-bitcoin-mining-difficulty","15":"https:\/\/stackoverflow.com\/questions\/70464441\/nft-marketplaces-and-storage","16":"https:\/\/stackoverflow.com\/questions\/70464067\/can-you-deploy-a-smart-contract-from-a-webpage","17":"https:\/\/stackoverflow.com\/questions\/70461487\/cannot-run-peer-because-error-when-setting-up-msp","18":"https:\/\/stackoverflow.com\/questions\/70458061\/how-to-mount-aws-ec2-files-on-aws-eks-as-presistent-volume","19":"https:\/\/stackoverflow.com\/questions\/70445209\/how-to-run-a-local-aurora-node","20":"https:\/\/stackoverflow.com\/questions\/70452585\/how-to-open-localhost8000-using-vps-ubuntu","21":"https:\/\/stackoverflow.com\/questions\/70438050\/i-am-getting-the-called-function-should-be-payable-if-you-send-value-and-the-va","22":"https:\/\/stackoverflow.com\/questions\/70437644\/error-custom-invalid-blockhash-when-solana-program-deploy","23":"https:\/\/stackoverflow.com\/questions\/70433315\/check-to-make-sure-a-solidity-line-of-code-ran-successfully","24":"https:\/\/stackoverflow.com\/questions\/70417454\/how-to-add-and-remove-liquidity-from-uniswap3-using-smart-contract-and-sdk","25":"https:\/\/stackoverflow.com\/questions\/70413532\/how-to-specify-a-date-when-the-function-will-be-available-for-calling","26":"https:\/\/stackoverflow.com\/questions\/70412821\/data-migration-using-ethereum-with-solidity","27":"https:\/\/stackoverflow.com\/questions\/70412807\/typeerror-cannot-read-properties-of-undefined-reading-eth","28":"https:\/\/stackoverflow.com\/questions\/70412207\/send-and-transfer-are-only-available-for-objects-of-type-address-payable-not-a","29":"https:\/\/stackoverflow.com\/questions\/70401721\/<blockchain>-check-gap-api-returns-empty-json","30":"https:\/\/stackoverflow.com\/questions\/70401639\/unable-to-call-safetransferfrom-method-from-a-js-api-file","31":"https:\/\/stackoverflow.com\/questions\/70392639\/got-assertion-failed-error-while-trying-to-sign-a-transaction","32":"https:\/\/stackoverflow.com\/questions\/70378789\/how-to-logout-from-metamask-account-in-reactjs-using-ethereum","33":"https:\/\/stackoverflow.com\/questions\/70377502\/what-is-the-best-way-to-access-historical-price-data-from-chainlink-on-a-token-i","34":"https:\/\/stackoverflow.com\/questions\/70377318\/in-<hyperledger>-fabric-is-there-a-way-to-decode-ledger-data-to-human-readable-fo","35":"https:\/\/stackoverflow.com\/questions\/70370978\/how-get-estimated-gas-before-sending-the-transaction","36":"https:\/\/stackoverflow.com\/questions\/70366058\/how-to-get-ens-domain-address-with-moralis","37":"https:\/\/stackoverflow.com\/questions\/70365414\/typing-suggestion-for-contracts-within-brownie","38":"https:\/\/stackoverflow.com\/questions\/70364998\/accounts-provided-by-ganache-cli-has-no-balance-at-all","39":"https:\/\/stackoverflow.com\/questions\/70364713\/hardhat-test-functionname-is-not-a-function","40":"https:\/\/stackoverflow.com\/questions\/70363029\/can-this-algorithm-achieve-eventual-consistency","41":"https:\/\/stackoverflow.com\/questions\/70353530\/brownie-how-do-i-handle-exceptions","42":"https:\/\/stackoverflow.com\/questions\/70352271\/what-can-i-do-to-my-contract-to-work-with-bep20-mainnet","43":"https:\/\/stackoverflow.com\/questions\/70348654\/why-is-proof-of-work-necessary-in-<blockchain>","44":"https:\/\/stackoverflow.com\/questions\/70344582\/how-can-i-identify-type-of-transferd-toke-in-my-website","45":"https:\/\/stackoverflow.com\/questions\/70340718\/retrieve-minted-nfts-by-a-wallet-address-opensea","46":"https:\/\/stackoverflow.com\/questions\/70339790\/whats-the-difference-between-eth-2-0-and-near","47":"https:\/\/stackoverflow.com\/questions\/70328031\/how-to-get-the-failed-status-from-solidity-require-statement","48":"https:\/\/stackoverflow.com\/questions\/70325975\/why-does-my-ethereum-on-event-listener-stop-firing","49":"https:\/\/stackoverflow.com\/questions\/70325963\/substrate-<blockchain>-change-block-structure","50":"https:\/\/stackoverflow.com\/questions\/70323512\/visualisation-of-decentralized-network","51":"https:\/\/stackoverflow.com\/questions\/70323039\/how-to-get-test-coins-for-local-eth-testnet","52":"https:\/\/stackoverflow.com\/questions\/70320649\/hello-im-having-trouble-deploying-a-contract-on-ganache-can-someone-please-ass","53":"https:\/\/stackoverflow.com\/questions\/70318661\/i-couldnt-get-results-when-i-write-compiled-code-in-visual-studio-code-i-run-p","54":"https:\/\/stackoverflow.com\/questions\/70317749\/how-can-i-connect-to-the-json-rpc-api-using-<python>-<blockchain>","55":"https:\/\/stackoverflow.com\/questions\/70313945\/where-to-get-a-signature-for-smart-contract-interaction-via-block-explorer","56":"https:\/\/stackoverflow.com\/questions\/70312829\/i-installed-brownie-and-after-installation-when-i-tried-to-see-the-version-of-it","57":"https:\/\/stackoverflow.com\/questions\/70310011\/please-help-interpret-the-transaction-action-steps-in-this-flash-loan-transactio","58":"https:\/\/stackoverflow.com\/questions\/70304168\/bsc-transaction-without-fees","59":"https:\/\/stackoverflow.com\/questions\/70304153\/<web3>-exceptions-contractlogicerror-execution-reverted","60":"https:\/\/stackoverflow.com\/questions\/70303006\/corda-signtransactionflow-and-sendandreceive","61":"https:\/\/stackoverflow.com\/questions\/70302685\/is-it-possible-to-get-portfolio-balance-data-from-any-coinbase-account-without-u","62":"https:\/\/stackoverflow.com\/questions\/70301140\/how-to-deploy-a-smartcontract-and-make-a-transfer-from-it-in-everscale-blockchai","63":"https:\/\/stackoverflow.com\/questions\/70299846\/can-we-abort-a-transaction-in-<blockchain>","64":"https:\/\/stackoverflow.com\/questions\/70250349\/smart-contract-wont-deploy-rpc-error-execution-being-revert-using-node-js-and","65":"https:\/\/stackoverflow.com\/questions\/70249296\/bsc-scan-token-holders","66":"https:\/\/stackoverflow.com\/questions\/70248886\/is-there-a-way-to-get-token-price-on-transfer-function-call","67":"https:\/\/stackoverflow.com\/questions\/70248025\/docker-compose-command-not-displaying-url-for-project","68":"https:\/\/stackoverflow.com\/questions\/70234804\/<blockchain>-consensus-51-vs-number-of-nodes-validation","69":"https:\/\/stackoverflow.com\/questions\/70233442\/rinkeby-authenticated-faucet-is-offline","70":"https:\/\/stackoverflow.com\/questions\/70230747\/how-to-verify-avalanche-block-is-accepted-with-<web3>-py","71":"https:\/\/stackoverflow.com\/questions\/70227723\/nfts-to-pixels-in-map","72":"https:\/\/stackoverflow.com\/questions\/70227462\/typeerror-this-is-undefined-in-rect-js-while-passing-bignumber-in-solana-rpc-re","73":"https:\/\/stackoverflow.com\/questions\/70224098\/why-is-it-not-possible-to-reassign-the-value-in-the-contract-level-in-solidity","74":"https:\/\/stackoverflow.com\/questions\/70218889\/what-is-the-tl-b-scheme-in-ton-solidity-and-how-to-use-it","75":"https:\/\/stackoverflow.com\/questions\/70214436\/get-all-nfts-of-an-account-on-flow-<blockchain>","76":"https:\/\/stackoverflow.com\/questions\/70214101\/sign-transaction-on-behalf-of-a-3rd-party-wallet","77":"https:\/\/stackoverflow.com\/questions\/70209083\/can-smart-contracts-deploy-other-smart-contracts","78":"https:\/\/stackoverflow.com\/questions\/70208801\/why-there-should-be-orderer-node-in-<hyperledger>-can-the-orderer-nodes-function","79":"https:\/\/stackoverflow.com\/questions\/70198331\/how-to-add-validators-in-poa-system-node-template-in-runtime","80":"https:\/\/stackoverflow.com\/questions\/70192455\/in-solidity-smart-contracts-what-variables-can-be-made-dynamic","81":"https:\/\/stackoverflow.com\/questions\/70194571\/instantiate-chaincode-successful-but-chaincode-doesnt-appear","82":"https:\/\/stackoverflow.com\/questions\/70188352\/popup-in-react-js-with-a-link","83":"https:\/\/stackoverflow.com\/questions\/70187616\/how-to-read-recent-<transactions>-from-uniswap-v3-using-<python>","84":"https:\/\/stackoverflow.com\/questions\/70178516\/why-assembly-delegatecall-returns-1-instead-of-0-when-calling-zero-0x000","85":"https:\/\/stackoverflow.com\/questions\/70178092\/i-need-a-simple-way-to-sign-data-via-<web3>-and-metamask","86":"https:\/\/stackoverflow.com\/questions\/70177589\/moving-nearprotocol-node-ip","87":"https:\/\/stackoverflow.com\/questions\/70171946\/using-the-cli-how-do-i-get-the-balances-of-a-zenon-network-address","88":"https:\/\/stackoverflow.com\/questions\/70170903\/how-do-i-get-the-stats-of-all-the-pillars-on-the-zenon-network","89":"https:\/\/stackoverflow.com\/questions\/70169820\/ether-holding-time-for-the-dao-recursive-calls-vulnerability-case","90":"https:\/\/stackoverflow.com\/questions\/70164395\/does-it-make-sense-to-manage-balance-manually-inside-smartcontract","91":"https:\/\/stackoverflow.com\/questions\/70164051\/how-can-i-use-ganache-to-connect-to-a-remote-<blockchain>-network","92":"https:\/\/stackoverflow.com\/questions\/70162647\/ethers-contract-on-method-no-mathing-event-error","93":"https:\/\/stackoverflow.com\/questions\/70162408\/<web3>-swift-call-contract-using-skywinder-wrapper","94":"https:\/\/stackoverflow.com\/questions\/70157507\/how-do-gasless-fee-<transactions>-work-on-the-polygonmatic-network","95":"https:\/\/stackoverflow.com\/questions\/70154653\/cant-deploy-contract-from-<web3>-to-<geth>-node-error-transaction-has-been-rever","96":"https:\/\/stackoverflow.com\/questions\/70154448\/then-function-never-running-for-call-to-<blockchain>","97":"https:\/\/stackoverflow.com\/questions\/70154420\/how-can-i-debug-the-runtime-error-when-call-contract-transfer-method-in-solidity","98":"https:\/\/stackoverflow.com\/questions\/70150297\/how-can-i-choose-which-account-is-the-selected-account-when-sending-coins","99":"https:\/\/stackoverflow.com\/questions\/70149869\/deploying-a-smart-contract-using-hardhat-without-script","100":"https:\/\/stackoverflow.com\/questions\/70148274\/is-smartcontract-the-only-way-to-transfer-ether-in-ethereum-network","101":"https:\/\/stackoverflow.com\/questions\/70146047\/verify-publish-smart-contract-on-etherscan-rinkeby","102":"https:\/\/stackoverflow.com\/questions\/70143628\/why-cant-i-transfer-ether-in-contract","103":"https:\/\/stackoverflow.com\/questions\/70143537\/<web3>-provider-not-set-or-invalid","104":"https:\/\/stackoverflow.com\/questions\/70142958\/why-cant-i-send-1-ether-to-another-account-via-smartcontract","105":"https:\/\/stackoverflow.com\/questions\/70142105\/why-do-i-get-sealing-paused-while-waiting-for-<transactions>-error-when-mining-i","106":"https:\/\/stackoverflow.com\/questions\/70138414\/which-is-the-cheapest-way-to-store-a-140-chars-string-in-the-<blockchain>","107":"https:\/\/stackoverflow.com\/questions\/70138221\/proper-way-to-initialize-pdas-within-the-solana-anchor-framework","108":"https:\/\/stackoverflow.com\/questions\/70136668\/unauthorized-error-when-running-npx-hardhat-test-network-local-or-npx-hardhat","109":"https:\/\/stackoverflow.com\/questions\/70133769\/disconnect-dapp-from-metamask","110":"https:\/\/stackoverflow.com\/questions\/70130220\/how-to-get-all-transaction-from-an-address-via-the-etherscan-api-in-r","111":"https:\/\/stackoverflow.com\/questions\/70127539\/use-of-address-function-inside-a-contract-constructor","112":"https:\/\/stackoverflow.com\/questions\/70126169\/should-i-use-the-pallet-membership-to-handle-dapp-user-membership-differences","113":"https:\/\/stackoverflow.com\/questions\/70124965\/<blockchain>-substrate-pallet-membership-use-cases","114":"https:\/\/stackoverflow.com\/questions\/70124838\/opensea-not-generating-preview-for-3d-model-glb","115":"https:\/\/stackoverflow.com\/questions\/70124739\/what-are-the-steps-to-build-a-production-based-hf-<blockchain>-network","116":"https:\/\/stackoverflow.com\/questions\/70124293\/does-deploy-a-contract-mean-create-a-new-block-in-<blockchain>","117":"https:\/\/stackoverflow.com\/questions\/70124107\/does-each-transaction-take-more-than-a-few-minutes-to-finish-in-<blockchain>","118":"https:\/\/stackoverflow.com\/questions\/70123833\/how-to-fetch-raw-data-from-binance-smart-chain-txs-for-specific-address","119":"https:\/\/stackoverflow.com\/questions\/70120227\/how-to-update-the-value-of-variable-of-struct-with-mapping-in-solidity","120":"https:\/\/stackoverflow.com\/questions\/70117341\/how-to-get-informative-data-in-smart-contract-with-using-api-in-r","121":"https:\/\/stackoverflow.com\/questions\/70116124\/how-to-find-smart-contract-adress-and-hash-code-in-etherscan","122":"https:\/\/stackoverflow.com\/questions\/70112336\/swapexactethfortokens-keeps-failing","123":"https:\/\/stackoverflow.com\/questions\/70103433\/smart-contract-ethereum-how-to-recreate-same-contract-after-used-selfdestruct","124":"https:\/\/stackoverflow.com\/questions\/70102701\/can-i-use-the-block-height-to-measure-the-passage-of-a-year-based-on-the-average","125":"https:\/\/stackoverflow.com\/questions\/70100377\/bit-operators-and-gas-saving-on-solidity","126":"https:\/\/stackoverflow.com\/questions\/70100282\/are-there-any-costs-to-create-smart-contracts-in-solidity","127":"https:\/\/stackoverflow.com\/questions\/70098080\/trying-to-run-brownie-run-scripts-deploy-py-network-rinkeby-but-getting-a","128":"https:\/\/stackoverflow.com\/questions\/70075532\/is-there-any-doc-on-how-accounts-are-generated-in-substrate","129":"https:\/\/stackoverflow.com\/questions\/70060701\/can-i-create-a-same-pair-in-different-dexes","130":"https:\/\/stackoverflow.com\/questions\/70056395\/tronweb-authentication","131":"https:\/\/stackoverflow.com\/questions\/70053205\/how-to-get-price-information-from-chainlink","132":"https:\/\/stackoverflow.com\/questions\/70052810\/how-to-see-contract-execution-time-in-remix-ide","133":"https:\/\/stackoverflow.com\/questions\/70052775\/how-to-resolve-the-error-invalid-type-for-argument-in-function-call-invalid-im","134":"https:\/\/stackoverflow.com\/questions\/70049614\/solidity-erc1155-nft-minting-gas-estimation-failed-execution-reverted","135":"https:\/\/stackoverflow.com\/questions\/70047718\/problem-with-the-approve-function-of-erc20-token-contract","136":"https:\/\/stackoverflow.com\/questions\/70043796\/can-i-import-nfts-metadata-into-a-smart-contract","137":"https:\/\/stackoverflow.com\/questions\/70042810\/create-a-simple-randomness-feature-in-solidity","138":"https:\/\/stackoverflow.com\/questions\/70036366\/how-to-transfer-erc1155-token-using-<web3>js","139":"https:\/\/stackoverflow.com\/questions\/70030442\/solidity-struct-and-staking-code-error-please-look-into-the-contract","140":"https:\/\/stackoverflow.com\/questions\/70030046\/error-expected-private-key-to-be-an-uint8array-with-length-32","141":"https:\/\/stackoverflow.com\/questions\/70029529\/solana-node-modules-toruslabs-eccrypto-index-js-return-outside-of-functio","142":"https:\/\/stackoverflow.com\/questions\/70028880\/i-would-like-to-get-all-<transactions>-given-an-address","143":"https:\/\/stackoverflow.com\/questions\/70025490\/can-a-server-impersonate-an-user-account-on-ethereum-<blockchain>","144":"https:\/\/stackoverflow.com\/questions\/70024541\/solana-how-to-send-a-nft-spl-token-to-another-wallet-using-javascript-wallets","145":"https:\/\/stackoverflow.com\/questions\/70020863\/bitcoin-daemon-consuming-too-much-internet-data","146":"https:\/\/stackoverflow.com\/questions\/70020224\/is-it-possible-to-create-a-<blockchain>-with-probabilistic-finality-with-substrate","147":"https:\/\/stackoverflow.com\/questions\/70020186\/unable-to-edit-org1mspanchors-tx-in-<hyperledger>-fabric","148":"https:\/\/stackoverflow.com\/questions\/70020005\/member-transfer-not-found-or-not-visible","149":"https:\/\/stackoverflow.com\/questions\/70019983\/what-is-difference-between-internal-and-private-in-solidity","150":"https:\/\/stackoverflow.com\/questions\/70019446\/error-transaction-invalidated-with-status-endorsement-policy-failure","151":"https:\/\/stackoverflow.com\/questions\/70011797\/return-nested-struct-inside-struct-in-solidity","152":"https:\/\/stackoverflow.com\/questions\/70011482\/<web3>-getting-contract-<transactions>-history","153":"https:\/\/stackoverflow.com\/questions\/70011080\/erc20-transfer-amount-exceeds-allowance-smart-contract-with-brownie-and-nft","154":"https:\/\/stackoverflow.com\/questions\/70011016\/<blockchain>-testnet-tokens-where-do-they-come-from-and-are-they-unlimited","155":"https:\/\/stackoverflow.com\/questions\/70002417\/bsc-testnet-how-can-i-get-api-key-from-bsc-testnet","156":"https:\/\/stackoverflow.com\/questions\/69985755\/api-problem-for-separating-orderers-in-separate-organizations","157":"https:\/\/stackoverflow.com\/questions\/69983801\/can-we-add-more-than-one-validator-in-from-one-node-on-substrate","158":"https:\/\/stackoverflow.com\/questions\/69978659\/chainlink-keeper-the-execution-failed-due-to-an-exception","159":"https:\/\/stackoverflow.com\/questions\/69967952\/how-to-apply-javascript-promises-for-async-data-hashing","160":"https:\/\/stackoverflow.com\/questions\/69966409\/how-to-use-erc777-as-a-pay-method","161":"https:\/\/stackoverflow.com\/questions\/69958777\/how-can-i-freeze-masteredition-nft-token-account","162":"https:\/\/stackoverflow.com\/questions\/69957489\/how-do-we-know-that-information-added-to-a-<blockchain>-is-true","163":"https:\/\/stackoverflow.com\/questions\/69954658\/storing-data-and-image-on-ethereum-network","164":"https:\/\/stackoverflow.com\/questions\/69952298\/generate-new-deposit-address-in-binance","165":"https:\/\/stackoverflow.com\/questions\/69951848\/fetching-chainlinks-oracle-private-key","166":"https:\/\/stackoverflow.com\/questions\/69951682\/near-example-workshop-exploring-assemblyscript-contracts-assembly-a-sample-proj","167":"https:\/\/stackoverflow.com\/questions\/69947747\/tx-wait-with-ethers-js-never-resolves","168":"https:\/\/stackoverflow.com\/questions\/69945169\/how-to-restart-<transactions>-and-block-stream-in-hive-<blockchain>","169":"https:\/\/stackoverflow.com\/questions\/69943675\/examining-the-behaviour-of-<hyperledger>-fabric-when-one-of-the-statedb-is-tampere","170":"https:\/\/stackoverflow.com\/questions\/69942559\/i-want-my-code-to-print-only-if-the-result-is-different-from-previous-result-and","171":"https:\/\/stackoverflow.com\/questions\/69941423\/node-js-cant-find-module-inside-folder","172":"https:\/\/stackoverflow.com\/questions\/69935165\/<web3>-<python>-how-can-i-decode-input-data","173":"https:\/\/stackoverflow.com\/questions\/69923552\/how-do-<blockchain>s-find-invalid-blocks","174":"https:\/\/stackoverflow.com\/questions\/69921215\/the-relation-between-using-std-and-no-std-attributes-and-including-wasm","175":"https:\/\/stackoverflow.com\/questions\/69915001\/nodeassert400-throw-err-assertionerror-err-assertion-invalid-callback-ob","176":"https:\/\/stackoverflow.com\/questions\/69911990\/how-to-transfer-an-erc721-token-across-networks","177":"https:\/\/stackoverflow.com\/questions\/69910421\/how-to-add-infinite-allowance-with-<web3>","178":"https:\/\/stackoverflow.com\/questions\/69909549\/implementing-bridge-network-of-substrate-and-getting-error-duplicate-lang-item","179":"https:\/\/stackoverflow.com\/questions\/69907691\/after-compiling-my-erc20-token-can-i-modify-any-function","180":"https:\/\/stackoverflow.com\/questions\/69902076\/error-at-<hyperledger>-fabric-while-trying-to-use-the-chaincode-for-the-test-netwo","181":"https:\/\/stackoverflow.com\/questions\/69900547\/weird-error-using-smart-contracts-with-usedapp-and-ethersproject-contracts","182":"https:\/\/stackoverflow.com\/questions\/69899843\/opensea-api-only-opensea","183":"https:\/\/stackoverflow.com\/questions\/69898499\/error-in-executing-network-sh-up-createchannel","184":"https:\/\/stackoverflow.com\/questions\/69897780\/i-am-not-able-to-use-ipfs","185":"https:\/\/stackoverflow.com\/questions\/69893533\/normal-android-windows-app-with-<blockchain>-storage","186":"https:\/\/stackoverflow.com\/questions\/69891384\/im-currently-learning-solidity-and-how-to-develop-dapps-on-ethereum-<blockchain>","187":"https:\/\/stackoverflow.com\/questions\/69890175\/what-does-metamask-do","188":"https:\/\/stackoverflow.com\/questions\/69886067\/running-metaplex-on-localhost","189":"https:\/\/stackoverflow.com\/questions\/69883276\/how-to-start-hyper-ledger-fabric-without-fabric-samples","190":"https:\/\/stackoverflow.com\/questions\/69875235\/unable-to-make-field-public-java-lang-string-<blockchain>-block-hash-accessible-m","191":"https:\/\/stackoverflow.com\/questions\/69873502\/polkadot-tx-wrapper-offline-signing","192":"https:\/\/stackoverflow.com\/questions\/69870351\/can-we-get-the-pallet-and-function-data-from-call-type-passed-as-a-parameter-t","193":"https:\/\/stackoverflow.com\/questions\/69870212\/transferring-spl-token-using-solana-<web3>-js","194":"https:\/\/stackoverflow.com\/questions\/69825515\/how-to-generate-same-wallet-address-in-both-bep20-and-erc20-using-<web3>","195":"https:\/\/stackoverflow.com\/questions\/69823891\/function-declared-as-view-error-in-solidity","196":"https:\/\/stackoverflow.com\/questions\/69822701\/connect-<web3>-php-to-ropsten-test-network","197":"https:\/\/stackoverflow.com\/questions\/69819055\/<hyperledger>-fabric-cant-connect-peer-to-channel-endorser-client-failed-to-co","198":"https:\/\/stackoverflow.com\/questions\/69818605\/brownie-doesnt-automatically-attach-to-local-ganache-when-i-have-ganache-open-i","199":"https:\/\/stackoverflow.com\/questions\/69818347\/how-to-call-getlatestprice-function-chainlink-price-feed","200":"https:\/\/stackoverflow.com\/questions\/69806953\/is-there-any-testnet-for-trading-i-want-to-test-trading-my-newly-created-token","201":"https:\/\/stackoverflow.com\/questions\/69806583\/implementation-of-chainlink-feed-aggregator","202":"https:\/\/stackoverflow.com\/questions\/69805685\/solidity-calling-contract-with-elevated-permissions","203":"https:\/\/stackoverflow.com\/questions\/69799401\/react-native-slow-freeze-whet-i-call-ethers-wallet-frommnemonic-ethers-js-5","204":"https:\/\/stackoverflow.com\/questions\/69789586\/how-to-analyse-tokenbalances-in-a-confirmed-transaction-on-the-solana-<blockchain>","205":"https:\/\/stackoverflow.com\/questions\/69789235\/<blockchain>-and-in-game-currency-off-chain","206":"https:\/\/stackoverflow.com\/questions\/69785119\/metamask-not-connecting-to-localhost-8545","207":"https:\/\/stackoverflow.com\/questions\/69782009\/using-brute-force-to-determine-original-input-data-from-a-hash-value","208":"https:\/\/stackoverflow.com\/questions\/69779212\/inpage-js1-metamask-no-longer-injects-<web3>","209":"https:\/\/stackoverflow.com\/questions\/69777583\/separate-orderer-for-each-organization","210":"https:\/\/stackoverflow.com\/questions\/69776383\/where-is-the-on-chain-architecture-explained-in-the-whitepaper-applied-in-chainl","211":"https:\/\/stackoverflow.com\/questions\/69774365\/split-money-on-minting-between-more-than-one-wallet-solana-metaplex-candymachi","212":"https:\/\/stackoverflow.com\/questions\/69773454\/import-<web3>-could-not-be-resolvedpylancereportmissingimports","213":"https:\/\/stackoverflow.com\/questions\/69771750\/error-vm-exception-while-processing-transaction-out-of-gas-set-mapping-key-va","214":"https:\/\/stackoverflow.com\/questions\/69766858\/get-avalanche-c-chain-contract-abis","215":"https:\/\/stackoverflow.com\/questions\/69751230\/restrict-function-access-only-to-one-other-specific-contract-in-solidity","216":"https:\/\/stackoverflow.com\/questions\/69747214\/why-am-i-receiving-the-following-chainlink-error-cannot-estimate-gas","217":"https:\/\/stackoverflow.com\/questions\/69728044\/how-can-i-build-a-bitcoin-wallet","218":"https:\/\/stackoverflow.com\/questions\/69723214\/call-nft-transfer-using-contract-name-on-near-<blockchain>","219":"https:\/\/stackoverflow.com\/questions\/69719347\/how-to-get-a-recipients-public-key-in-bitcoin-<blockchain>","220":"https:\/\/stackoverflow.com\/questions\/69717140\/error-running-hardhat-node-error0308010cdigital-envelope-routinesunsupporte","221":"https:\/\/stackoverflow.com\/questions\/69710504\/nethereum-invalid-sender-eth-sendrawtransaction-on-polygon-chain","222":"https:\/\/stackoverflow.com\/questions\/69708354\/how-to-run-<hyperledger>-besu-node-through-docker-with-custom-configuration","223":"https:\/\/stackoverflow.com\/questions\/69701543\/how-do-i-load-my-solana-wallet-using-my-private-key-file","224":"https:\/\/stackoverflow.com\/questions\/69700895\/solidity-struct-containing-a-nested-mapping-cannot-be-constructed","225":"https:\/\/stackoverflow.com\/questions\/69699807\/how-to-count-on-chain-<transactions>-for-an-address-between-blocks-in-solidity","226":"https:\/\/stackoverflow.com\/questions\/69695793\/<hyperledger>-fabric-how-can-i-invoke-a-chaincode-with-the-role-of-a-user","227":"https:\/\/stackoverflow.com\/questions\/69694890\/how-ethereum-protocol-works-with-<geth>","228":"https:\/\/stackoverflow.com\/questions\/69692528\/generating-a-rest-server-from-<hyperledger>-fabric-composer","229":"https:\/\/stackoverflow.com\/questions\/69690815\/how-can-i-store-the-value-of-a-promise-and-use-it-once-resolved","230":"https:\/\/stackoverflow.com\/questions\/69687995\/how-new-transaction-will-get-recorded-when-all-bitcoins-are-mined","231":"https:\/\/stackoverflow.com\/questions\/69687394\/borsh-serialization-fails-in-react-application","232":"https:\/\/stackoverflow.com\/questions\/69687114\/metamask-is-not-connecting-my-<blockchain>-network","233":"https:\/\/stackoverflow.com\/questions\/69683731\/batch-to<geth>er-multiple-read-function-calls-for-different-blocks-of-ethereum-blo","234":"https:\/\/stackoverflow.com\/questions\/69680780\/solidity-pragama-not-allowing-for-anything-lower-then-0-8-9","235":"https:\/\/stackoverflow.com\/questions\/69678736\/how-to-concat-two-string-values-in-solidity","236":"https:\/\/stackoverflow.com\/questions\/69676310\/making-ink-smart-contracts-revert","237":"https:\/\/stackoverflow.com\/questions\/69671684\/solidity-inserting-array-as-map-value-after-settokenuri-on-erc721","238":"https:\/\/stackoverflow.com\/questions\/69670927\/how-to-read-a-ledger-file-of-a-local-<hyperledger>-fabric","239":"https:\/\/stackoverflow.com\/questions\/69659882\/how-to-get-the-the-amount-of-the-given-token-address-in-anchor-solana","240":"https:\/\/stackoverflow.com\/questions\/69659558\/error-hh604-error-running-json-rpc-server-error0308010cdigital-envelope-rout","241":"https:\/\/stackoverflow.com\/questions\/69657873\/grpc-connect-to-concordium-<blockchain>-api-with-c-sharp","242":"https:\/\/stackoverflow.com\/questions\/69649430\/how-do-i-calculate-prices","243":"https:\/\/stackoverflow.com\/questions\/69647006\/solana-<blockchain>-how-can-i-generate-private-key","244":"https:\/\/stackoverflow.com\/questions\/69645854\/<web3>-subscribed-event-fires-twice","245":"https:\/\/stackoverflow.com\/questions\/69639447\/does-each-transaction-have-its-own-gas-price-in-near","246":"https:\/\/stackoverflow.com\/questions\/69636415\/solana-how-to-get-token-balance-for-a-foreign-account","247":"https:\/\/stackoverflow.com\/questions\/69626686\/what-is-the-best-way-to-create-ether-wallet-how-does-creating-wallet-using-mne","248":"https:\/\/stackoverflow.com\/questions\/69625131\/can-an-nft-have-metadata-that-updates-based-on-smart-contract-variable-values","249":"https:\/\/stackoverflow.com\/questions\/69618496\/how-can-i-get-the-symbol-name-of-a-token-in-solana-using-solana-<web3>-js","250":"https:\/\/stackoverflow.com\/questions\/69615538\/<hyperledger>-fabric-is-there-a-way-to-prevent-a-member-of-an-organization-to-acc","251":"https:\/\/stackoverflow.com\/questions\/69608183\/can-i-install-<hyperledger>-composer-deprecated-version-by-cloning-it-from-github","252":"https:\/\/stackoverflow.com\/questions\/69601740\/parsererror-expected-but-got-identifier","253":"https:\/\/stackoverflow.com\/questions\/69594225\/expected-but-got-identifier-parse-error-mismatched-input-expect","254":"https:\/\/stackoverflow.com\/questions\/69589156\/how-to-connect-my-smart-contract-with-another-deployed-smart-contract","255":"https:\/\/stackoverflow.com\/questions\/69584262\/how-to-get-private-and-public-keys-for-the-wallet-by-providing-a-seed-phrase-ne","256":"https:\/\/stackoverflow.com\/questions\/69582718\/node-js-websocket-to-connect-peers-on-different-networks","257":"https:\/\/stackoverflow.com\/questions\/69582572\/is-ganache-decentralized","258":"https:\/\/stackoverflow.com\/questions\/69582017\/checking-value-of-2-mapping-with-struct-in-the-same-address-on-<blockchain>","259":"https:\/\/stackoverflow.com\/questions\/69576173\/is-this-how-how-i-should-implement-the-vrf-random-nft-traits-using-chainlink","260":"https:\/\/stackoverflow.com\/questions\/69569402\/ethereum-on-how-to-get-error-if-chain-is-not-added-into-metamask-yet","261":"https:\/\/stackoverflow.com\/questions\/69567801\/is-there-any-way-to-get-amountnumber-of-token-we-are-sending-in-transaction-af","262":"https:\/\/stackoverflow.com\/questions\/69565838\/i-encountered-an-error-while-installing-fabric-ca-with-the-go-get-command","263":"https:\/\/stackoverflow.com\/questions\/69564736\/how-to-connect-metamask-wallet-in-mobile-platform-of-unity","264":"https:\/\/stackoverflow.com\/questions\/69552806\/polygon-solidity-build-failed-for-pragma-solidity-0-8-7-with-chainlink","265":"https:\/\/stackoverflow.com\/questions\/69539394\/is-it-possible-to-check-the-connected-rpc-network-in-metamask-using-jquery","266":"https:\/\/stackoverflow.com\/questions\/69537414\/i-cant-seem-to-make-visual-studio-find-my-remappings","267":"https:\/\/stackoverflow.com\/questions\/69535995\/corda-state-size-information","268":"https:\/\/stackoverflow.com\/questions\/69535334\/problem-in-verifying-the-signature-in-smart-contract-which-was-signed-by-eth-per","269":"https:\/\/stackoverflow.com\/questions\/69526638\/how-can-i-get-all-erc20-addresses-in-brownie-to-use-in-frontend","270":"https:\/\/stackoverflow.com\/questions\/69524807\/how-to-create-directories-files-on-the-local-machine-using-django","271":"https:\/\/stackoverflow.com\/questions\/69524658\/is-there-any-way-to-fix-hardhat-unable-signature","272":"https:\/\/stackoverflow.com\/questions\/69523948\/solana-how-to-get-the-balance-from-my-phantom-wallet","273":"https:\/\/stackoverflow.com\/questions\/69515287\/what-unit-does-amountin-have-in-uniswapv2router02-contracts","274":"https:\/\/stackoverflow.com\/questions\/69512857\/<web3>-py-nonce-transaction-overwriting-problem","275":"https:\/\/stackoverflow.com\/questions\/69508978\/what-does-one-mean-by-a-transaction-in-<blockchain>","276":"https:\/\/stackoverflow.com\/questions\/69506678\/how-to-run-cardano-wallet","277":"https:\/\/stackoverflow.com\/questions\/69501454\/<web3>-eth-gettransaction-with-ganache-cli-gives-chainid-error","278":"https:\/\/stackoverflow.com\/questions\/69506256\/how-to-push-transaction-eos-<blockchain>-eosjs-unsatisfied-authorization","279":"https:\/\/stackoverflow.com\/questions\/69501265\/how-to-debug-chainlink-job-task","280":"https:\/\/stackoverflow.com\/questions\/69498986\/corda-info-about-transaction-size","281":"https:\/\/stackoverflow.com\/questions\/69498906\/how-to-deal-with-only-the-owner-of-the-contract-can-update-the-smart-contract","282":"https:\/\/stackoverflow.com\/questions\/69463787\/how-to-speed-up-token-balance-on-multiple-contracts","283":"https:\/\/stackoverflow.com\/questions\/69462852\/how-to-calculate-availability-on-<blockchain>-ipfs-and-hadoop-hdfs","284":"https:\/\/stackoverflow.com\/questions\/69457181\/error-creating-contract-after-getting-contract-abi-from-etherscan-api","285":"https:\/\/stackoverflow.com\/questions\/69450045\/why-is-transaction-hash-bitcoin-millions-worth-txid","286":"https:\/\/stackoverflow.com\/questions\/69449105\/transaction-hash-returned-error-invalid-sender","287":"https:\/\/stackoverflow.com\/questions\/69448392\/retrieve-the-random-number-generated-by-chainlink-vrf-in-1-transaction","288":"https:\/\/stackoverflow.com\/questions\/69440836\/total-supply-api-for-coinmarketcap-listing","289":"https:\/\/stackoverflow.com\/questions\/69438889\/near-functioncall-args-field","290":"https:\/\/stackoverflow.com\/questions\/69435022\/best-way-to-download-all-historic-ethereum-erc721-transfers","291":"https:\/\/stackoverflow.com\/questions\/69432445\/is-it-possible-to-mint-an-nft-in-solana-unrevealed-and-then-reveal-it-later-on","292":"https:\/\/stackoverflow.com\/questions\/69430868\/error-typeerror-cannot-read-property-toxdrobject-of-undefined","293":"https:\/\/stackoverflow.com\/questions\/69429174\/how-to-get-btc-address-balance-via-electrum-json-rpc","294":"https:\/\/stackoverflow.com\/questions\/69428836\/i-am-having-eperm-error-while-trying-to-load-a-new-ganache-workspace","295":"https:\/\/stackoverflow.com\/questions\/69427208\/best-way-of-setting-up-<web3>-instance-in-react","296":"https:\/\/stackoverflow.com\/questions\/69424746\/how-to-get-oracle-id-for-chainlink-api-call","297":"https:\/\/stackoverflow.com\/questions\/69423402\/how-to-use-bsc-with-walletconnect-and-<web3>-js","298":"https:\/\/stackoverflow.com\/questions\/69420046\/how-the-metamask-plugin-works","299":"https:\/\/stackoverflow.com\/questions\/69419624\/how-to-set-docker-sock-variable-to-create-container-for-service-peer0-org3-examp","300":"https:\/\/stackoverflow.com\/questions\/69414269\/invalid-sender-while-transfering-bep20-token","301":"https:\/\/stackoverflow.com\/questions\/69412917\/vm-exception-while-processing-transaction-revert","302":"https:\/\/stackoverflow.com\/questions\/69407300\/solidity-importing-problem-on-vscode-wsl2-and-brownie","303":"https:\/\/stackoverflow.com\/questions\/69407284\/ethereum-in-kubernetes-fatal-could-not-open-database-resource-temporarily-una","304":"https:\/\/stackoverflow.com\/questions\/69405653\/how-to-access-final-balance-from-<blockchain>","305":"https:\/\/stackoverflow.com\/questions\/69394998\/pancakeswap-v2-functions-called-automatically-after-adding-mytoken-to-a-new-pool","306":"https:\/\/stackoverflow.com\/questions\/69384849\/invalid-sender-on-signed-transaction-mumbai-polygon","307":"https:\/\/stackoverflow.com\/questions\/69382879\/solidity-when-deploying-the-contract-i-get-syntaxerror-unexpected-token-o-in","308":"https:\/\/stackoverflow.com\/questions\/69382867\/how-do-i-get-list-of-tokens-owned-by-me","309":"https:\/\/stackoverflow.com\/questions\/69367571\/unable-to-sell-nft-functionality-when-deployed-to-polygon","310":"https:\/\/stackoverflow.com\/questions\/69365494\/declarationerror-identifier-not-found-or-not-unique-function-retrieve-public","311":"https:\/\/stackoverflow.com\/questions\/69363611\/trying-to-connect-metamask-wallet-to-my-react-app-through-<web3>-js","312":"https:\/\/stackoverflow.com\/questions\/69355762\/how-to-execute-truffle-commands-through-an-api-or-a-code","313":"https:\/\/stackoverflow.com\/questions\/69353319\/can-we-predict-the-data-from-the-hash-value","314":"https:\/\/stackoverflow.com\/questions\/69353239\/compact-u16-what-is-the-purpose-of-this","315":"https:\/\/stackoverflow.com\/questions\/69350233\/set-minter-wallet-address-as-creator-of-nft-in-opensea","316":"https:\/\/stackoverflow.com\/questions\/69348754\/parsererror-in-solidity-expected-identifier-but-got-reserved-keyword-immutable","317":"https:\/\/stackoverflow.com\/questions\/69339201\/what-does-the-data-field-mean-in-an-elrond-transaction","318":"https:\/\/stackoverflow.com\/questions\/69339123\/how-is-a-nft-token-id-assigned-to-an-object-e-g-picture-tweet-video-etc","319":"https:\/\/stackoverflow.com\/questions\/69336628\/ethereum-insufficient-funds-for-gas-price-value","320":"https:\/\/stackoverflow.com\/questions\/69336123\/i-try-to-deploy-my-smart-contract-in-truffle-but-is-says-unsupported-compiler","321":"https:\/\/stackoverflow.com\/questions\/69333133\/ubuntu-when-try-to-install-solana-get-error","322":"https:\/\/stackoverflow.com\/questions\/69327236\/how-to-to-check-inputs-to-json-parse-is-valid-or-not-in-ejs","323":"https:\/\/stackoverflow.com\/questions\/69325782\/channel-creation-failed-at-test-network-of-<hyperledger>-fabric","324":"https:\/\/stackoverflow.com\/questions\/69324385\/could-not-install-erdpy-no-module-named-ledgercomm","325":"https:\/\/stackoverflow.com\/questions\/69323765\/how-to-fix-unexpected-end-of-json-error","326":"https:\/\/stackoverflow.com\/questions\/69321235\/trouble-with-chainlink-external-adapter-making-an-api-call-to-spotify","327":"https:\/\/stackoverflow.com\/questions\/69320137\/why-is-proof-of-work-necessary-in-<blockchain>","328":"https:\/\/stackoverflow.com\/questions\/69318614\/detecting-new-paircreated-events-on-polygon-<blockchain>-with-<web3>-and-<python>","329":"https:\/\/stackoverflow.com\/questions\/69312478\/updating-the-state-of-many-addresses-in-solidity-is-gas-costly","330":"https:\/\/stackoverflow.com\/questions\/69311647\/can-the-cli-service-exist-on-each-org-that-installed-in-different-machine-hyper","331":"https:\/\/stackoverflow.com\/questions\/69310362\/unexpected-error-calling-ethereum-contract-using-<web3>-js","332":"https:\/\/stackoverflow.com\/questions\/69310229\/does-<blockchain>-with-proof-of-stake-consensus-have-special-nodes-to-choose-a-win","333":"https:\/\/stackoverflow.com\/questions\/69302924\/erc-721-how-to-get-all-token-ids","334":"https:\/\/stackoverflow.com\/questions\/69300579\/how-do-<blockchain>-nodes-find-each-other-in-a-p2p-network","335":"https:\/\/stackoverflow.com\/questions\/69299918\/programmatic-minting-process","336":"https:\/\/stackoverflow.com\/questions\/69299809\/how-can-i-get-the-wallet-address-for-a-given-herotag","337":"https:\/\/stackoverflow.com\/questions\/69291573\/remix-ide-unable-to-load-3rd-party-library","338":"https:\/\/stackoverflow.com\/questions\/69290557\/truffle-hdwalletprovider-alternative","339":"https:\/\/stackoverflow.com\/questions\/69285553\/solidity-question-about-usingliquidityprotectionservice","340":"https:\/\/stackoverflow.com\/questions\/69282544\/how-to-fix-the-high-memory-usage-of-fabric-peer-running-on-k8s","341":"https:\/\/stackoverflow.com\/questions\/69274218\/decoderfailure-in-cardano-cli","342":"https:\/\/stackoverflow.com\/questions\/69269458\/how-can-get-json-interface-of-the-smart-contract","343":"https:\/\/stackoverflow.com\/questions\/69269101\/please-how-do-i-get-abi-of-my-token-after-deploying-on-bscmainet","344":"https:\/\/stackoverflow.com\/questions\/69263074\/error-servicetelemetryioerrorcustom-error-in-substrate","345":"https:\/\/stackoverflow.com\/questions\/69263071\/<geth>-node-stuck-on-looking-for-peers","346":"https:\/\/stackoverflow.com\/questions\/69261610\/error-when-deploying-a-smart-contract-that-implements-iuniswapv2router02","347":"https:\/\/stackoverflow.com\/questions\/69258552\/is-it-possible-to-integrate-opensea-sdk-into-kotlin-android-app","348":"https:\/\/stackoverflow.com\/questions\/69258120\/smart-contract-for-auto-burn-on-every-transaction","349":"https:\/\/stackoverflow.com\/questions\/69257513\/how-many-nfts-does-a-smart-contract-have","350":"https:\/\/stackoverflow.com\/questions\/69251768\/value-inside-submitted-task-always-the-same-executorservice","351":"https:\/\/stackoverflow.com\/questions\/69250101\/convert-solana-public-key-from-uint8array","352":"https:\/\/stackoverflow.com\/questions\/69248618\/how-to-get-proper-public-address-from-mnemonic-phrase-for-solana","353":"https:\/\/stackoverflow.com\/questions\/69242073\/corda-4-7-querycriteria-linearstatequerycriteria","354":"https:\/\/stackoverflow.com\/questions\/69239240\/polygon-transaction-working-just-fine-on-mumbai-but-not-on-mainnet","355":"https:\/\/stackoverflow.com\/questions\/69236378\/error-in-ganache-installation-the-term-ganache-cli-is-not-recognized-as-the-n","356":"https:\/\/stackoverflow.com\/questions\/69220948\/how-to-customize-<hyperledger>-fabric-test-network","357":"https:\/\/stackoverflow.com\/questions\/69211662\/<blockchain>-implementation-not-working-while-using-sha256","358":"https:\/\/stackoverflow.com\/questions\/69206293\/<web3>js-how-to-show-pending-<transactions>-on-custom-<blockchain>","359":"https:\/\/stackoverflow.com\/questions\/69203885\/graphql-to-check-if-a-transaction-is-present-on-the-<blockchain>","360":"https:\/\/stackoverflow.com\/questions\/69189628\/<hyperledger>-fabric-on-kubernetes-restarting-peer-throw-error-for-few-minutes","361":"https:\/\/stackoverflow.com\/questions\/69185598\/bitcoin-<blockchain>-rookie-question-how-is-nonce-the-secret-number-added-to-eac","362":"https:\/\/stackoverflow.com\/questions\/69185565\/<geth>-eth-protocolversion-is-returning-error-the-method-eth-protocolversion-do","363":"https:\/\/stackoverflow.com\/questions\/69182406\/solidiy-fundme-smart-contract-remix-chainlink-call-to-fundme-getversion-err","364":"https:\/\/stackoverflow.com\/questions\/69178874\/solidity-v0-6-0-fallback-functions-what-are-they-needed-for","365":"https:\/\/stackoverflow.com\/questions\/69178033\/moonbeam-polkadot-parachain-transaction-error","366":"https:\/\/stackoverflow.com\/questions\/69174914\/getting-react-useeffect-to-display-updated-variable-after-contract-call","367":"https:\/\/stackoverflow.com\/questions\/69165735\/how-do-i-subscirbe-listen-to-events-on-the-polygon-<blockchain>-using-<python>","368":"https:\/\/stackoverflow.com\/questions\/69162553\/is-it-possible-to-reuse-a-deployment-from-a-mocha-hardhat-test-script-into-anoth","369":"https:\/\/stackoverflow.com\/questions\/69160674\/substrate-state-cache-and-performance-limitation","370":"https:\/\/stackoverflow.com\/questions\/69159077\/sending-signed-messages-ethers","371":"https:\/\/stackoverflow.com\/questions\/69153611\/<hyperledger>-fabric-building-first-network","372":"https:\/\/stackoverflow.com\/questions\/69152940\/check-<transactions>-on-hardhat-localnet","373":"https:\/\/stackoverflow.com\/questions\/69149895\/erc20-transfer-amount-exceeds-allowance-even-when-it-is-approved","374":"https:\/\/stackoverflow.com\/questions\/69142944\/bitcoin-core-on-external-ssd-in-os-x","375":"https:\/\/stackoverflow.com\/questions\/69138929\/react-converting-class-to-function-components-for-front-end","376":"https:\/\/stackoverflow.com\/questions\/69136194\/i-have-written-a-abasic-constructor-code-in-solidity-but-i-am-getting-this-error","377":"https:\/\/stackoverflow.com\/questions\/69133882\/whats-the-correct-connection-profile-for-accessing-<hyperledger>-fabric-v2-x-depl","378":"https:\/\/stackoverflow.com\/questions\/69127883\/how-are-the-development-keys-alice-added-to-the-local-keystore-from-chain-spe","379":"https:\/\/stackoverflow.com\/questions\/69127879\/how-would-i-issue-some-erc20-tokens-of-newly-instantiated-erc20-token","380":"https:\/\/stackoverflow.com\/questions\/69127746\/retrieving-total-eth-transaction-value-of-block-faster","381":"https:\/\/stackoverflow.com\/questions\/69125101\/calling-specific-endpoint-on-solana-smart-contract","382":"https:\/\/stackoverflow.com\/questions\/69120777\/building-chain-link-node-for-alarm-clock","383":"https:\/\/stackoverflow.com\/questions\/69119382\/failing-in-convert-a-mnemonic-to-a-seed-for-a-solana-wallet","384":"https:\/\/stackoverflow.com\/questions\/69112487\/what-are-solidity-events","385":"https:\/\/stackoverflow.com\/questions\/69104932\/error-with-requestmultipleparameters-and-fulfillmultipleparameters-chainlink","386":"https:\/\/stackoverflow.com\/questions\/69101383\/handle-wtrx-token-withdraw-and-deposit-from-smartcontract","387":"https:\/\/stackoverflow.com\/questions\/69094717\/right-way-to-run-a-multiword-job-on-a-chainlink-test-node","388":"https:\/\/stackoverflow.com\/questions\/69092957\/note-the-called-function-should-be-payable-if-you-send-value-and-the-value-you","389":"https:\/\/stackoverflow.com\/questions\/69090447\/is-there-a-way-to-add-token-info-to-the-solana-devnet-like-on-the-mainnet","390":"https:\/\/stackoverflow.com\/questions\/69053530\/solana-transfer-amount-null","391":"https:\/\/stackoverflow.com\/questions\/69050702\/how-do-i-remove-the-minting-authority-from-my-custom-token-in-solana-using-sola","392":"https:\/\/stackoverflow.com\/questions\/69049239\/smart-contracts-developed-for-ethereum-can-also-be-used-in-binance-smart-chain","393":"https:\/\/stackoverflow.com\/questions\/69047783\/about-ipfs-client-add-function","394":"https:\/\/stackoverflow.com\/questions\/69030850\/smart-contract-runs-external-api","395":"https:\/\/stackoverflow.com\/questions\/69024166\/how-etherum-<blockchain>-smart-contract-stored","396":"https:\/\/stackoverflow.com\/questions\/69023724\/error-with-contract-message-method-is-not-found","397":"https:\/\/stackoverflow.com\/questions\/69014402\/how-to-get-private-key-based-on-keystore-utc-file","398":"https:\/\/stackoverflow.com\/questions\/69010635\/<geth>-private-network-is-which-type-of-node","399":"https:\/\/stackoverflow.com\/questions\/69007962\/recovering-dogecoin-and-litecoin-wallets-from-mnemonic-passphrase","400":"https:\/\/stackoverflow.com\/questions\/69005840\/how-to-get-over-the-limit-of-opensea-api","401":"https:\/\/stackoverflow.com\/questions\/69004297\/issue-with-returning-uints-in-solidity","402":"https:\/\/stackoverflow.com\/questions\/69002913\/why-hashalgorithm-computehash-returns-different-values-from-the-same-data","403":"https:\/\/stackoverflow.com\/questions\/68995055\/how-to-upload-file-to-ipfs-by-keeping-same-cid","404":"https:\/\/stackoverflow.com\/questions\/68992034\/private-data-collection-vs-encryption","405":"https:\/\/stackoverflow.com\/questions\/68991672\/how-to-pull-historical-price-data-from-solana-devnet-contracts","406":"https:\/\/stackoverflow.com\/questions\/68982638\/cannot-connect-to-local-ethereum-node-mainnet-using-ethers-in-node-js-with-uni","407":"https:\/\/stackoverflow.com\/questions\/68980449\/candidate-block-bitcoin","408":"https:\/\/stackoverflow.com\/questions\/68978062\/what-is-the-best-toolchain-to-build-test-deploy-cosmwasm-contract-to-terra-ne","409":"https:\/\/stackoverflow.com\/questions\/68977185\/connecting-a-project-id-to-polygon","410":"https:\/\/stackoverflow.com\/questions\/68970489\/save-struct-inside-other-structin-solidity","411":"https:\/\/stackoverflow.com\/questions\/68968895\/how-can-i-test-opensea-api","412":"https:\/\/stackoverflow.com\/questions\/68956513\/remix-ide-issue-with-functions-when-deploying-smart-contract","413":"https:\/\/stackoverflow.com\/questions\/68943483\/generate-did-in-ion-sidetree-testnet","414":"https:\/\/stackoverflow.com\/questions\/68926023\/how-to-withdraw-rewards-from-substrate-private-node","415":"https:\/\/stackoverflow.com\/questions\/68917007\/how-to-get-test-tokens-on-rinkeby-and-ropsten","416":"https:\/\/stackoverflow.com\/questions\/68913280\/is-there-any-possibility-to-search-an-asset-with-partial-id","417":"https:\/\/stackoverflow.com\/questions\/68908710\/creation-of-my-smart-contract-pending-in-remix","418":"https:\/\/stackoverflow.com\/questions\/68905714\/how-can-i-query-the-access-object-from-json-in-couchdb","419":"https:\/\/stackoverflow.com\/questions\/68899430\/erc721-how-do-i-generate-nfts-from-different-characteristics-e-g-punks-apes","420":"https:\/\/stackoverflow.com\/questions\/68896214\/error-unknown-account-in-send-transaction-using-<web3>-js-for-binance-smart-cha","421":"https:\/\/stackoverflow.com\/questions\/68895081\/how-to-solve-transaction-simulation-failed-error-processing-instruction-during","422":"https:\/\/stackoverflow.com\/questions\/68887091\/increase-total-supply-of-trc20-token-daily","423":"https:\/\/stackoverflow.com\/questions\/68885677\/substrate-rust-unresolved-imports-node-template-runtime","424":"https:\/\/stackoverflow.com\/questions\/68884041\/how-does-every-block-in-a-<blockchain>-contain-all-others-blocks-data-if-it-is-imm","425":"https:\/\/stackoverflow.com\/questions\/68873071\/i-want-to-connect-contract-without-using-meta-mask","426":"https:\/\/stackoverflow.com\/questions\/68869227\/transaction-reverted-during-swapexacttokensfortokens-uniswapv2router02-<web3>-js","427":"https:\/\/stackoverflow.com\/questions\/68863572\/should-i-use-the-elrond-devnet-instead-of-the-testnet-for-development","428":"https:\/\/stackoverflow.com\/questions\/68855027\/nethereuem-sendtransactionasync-from-my-c-sharp-web-api-fails-with-transaction-t","429":"https:\/\/stackoverflow.com\/questions\/68852743\/solidity-error-member-sub-not-found-or-not-visible-after-argument-dependent","430":"https:\/\/stackoverflow.com\/questions\/68849313\/i-can-not-deploy-the-program-to-dev-net-with-anchor","431":"https:\/\/stackoverflow.com\/questions\/68842667\/truffle-migrate-is-not-deploying-to-ganache","432":"https:\/\/stackoverflow.com\/questions\/68842500\/blocks-are-not-producing-when-using-staging-flag-in-the-full-node","433":"https:\/\/stackoverflow.com\/questions\/68842091\/transaction-receipt-using-<blockchain>","434":"https:\/\/stackoverflow.com\/questions\/68839199\/maximum-size-of-data-we-can-get-by-using-adapters","435":"https:\/\/stackoverflow.com\/questions\/68830672\/endless-loop-stops-checking-if-functions-after-first-one-is-correct-<python>-bl","436":"https:\/\/stackoverflow.com\/questions\/68827167\/how-to-get-all-transaction-data-from-the-entire-ethereum-network-using-<web3>py","437":"https:\/\/stackoverflow.com\/questions\/68817488\/opensea-js-sdk-createsellorder-method-doesnt-seem-to-work-or-silent-failure","438":"https:\/\/stackoverflow.com\/questions\/68816915\/cant-connect-to-<geth>-node-rpc-from-another-machine","439":"https:\/\/stackoverflow.com\/questions\/68812343\/metamask-error-internal-json-rpc-error-while-confirming-on-metamask-mobile","440":"https:\/\/stackoverflow.com\/questions\/68786208\/how-do-you-get-the-current-block-number-in-substrate","441":"https:\/\/stackoverflow.com\/questions\/68785698\/how-can-i-fork-binance-smart-chain-and-create-my-own-<blockchain>","442":"https:\/\/stackoverflow.com\/questions\/68782281\/chainlink-oracles-on-testnet","443":"https:\/\/stackoverflow.com\/questions\/68767237\/self-referencing-in-mysql-causing-error-1822-hy000-failed-to-add-the-forei","444":"https:\/\/stackoverflow.com\/questions\/68766559\/make-a-withdraw-from-aave-causes-error-transaction-reverted","445":"https:\/\/stackoverflow.com\/questions\/68763800\/remix-contracts-stuck-pending","446":"https:\/\/stackoverflow.com\/questions\/68760210\/returned-values-arent-valid-did-it-run-out-of-gas-<web3>-1-5-0-and-sol-0-5-15","447":"https:\/\/stackoverflow.com\/questions\/68759192\/<blockchain>s-with-modifiable-consensus-algorithm","448":"https:\/\/stackoverflow.com\/questions\/68748681\/how-do-you-return-multiple-instances-of-a-struct-in-solidity","449":"https:\/\/stackoverflow.com\/questions\/68739400\/running-mutiple-vms-in-<hyperledger>-fabric-using-java-sdk","450":"https:\/\/stackoverflow.com\/questions\/68734076\/how-do-i-uninstall-the-chaincode-installed-on-<hyperledger>","451":"https:\/\/stackoverflow.com\/questions\/68733711\/is-there-a-way-to-check-sells-and-buys-in-transfer-function-on-solidity","452":"https:\/\/stackoverflow.com\/questions\/68732603\/how-can-a-solana-rust-smart-contract-get-block-height-or-unix-time","453":"https:\/\/stackoverflow.com\/questions\/68724326\/<python>-json-decoder-jsondecodeerror-expecting-value-line-2-column-1-char-1","454":"https:\/\/stackoverflow.com\/questions\/68723116\/using-ganache-provided-address-but-still-unable-to-vote","455":"https:\/\/stackoverflow.com\/questions\/68721661\/eth-brownie-no-module-named-users-someuser","456":"https:\/\/stackoverflow.com\/questions\/68721621\/will-require-revert-storage-changes-made-in-a-separate-contract-in-the-same-tran","457":"https:\/\/stackoverflow.com\/questions\/68711658\/how-to-use-staging-flag-in-substrate-framework","458":"https:\/\/stackoverflow.com\/questions\/68710631\/can-i-perform-transaction-from-different-server-<blockchain>","459":"https:\/\/stackoverflow.com\/questions\/68710217\/which-is-more-effective-way-to-subscribe-state-change-in-ethereum","460":"https:\/\/stackoverflow.com\/questions\/68710028\/cant-send-transaction-using-<web3>","461":"https:\/\/stackoverflow.com\/questions\/68706626\/ibm-<blockchain>-platform-vs-code-extension-unable-to-create-new-new-fabric-envi","462":"https:\/\/stackoverflow.com\/questions\/68660837\/interact-with-smart-contract-function-on-metamask-mobile-without-internal-json-r","463":"https:\/\/stackoverflow.com\/questions\/68651167\/how-to-get-all-the-nfts-of-particular-smart-contract","464":"https:\/\/stackoverflow.com\/questions\/68645162\/what-is-the-solana-pattern-for-creating-a-transfer-account-the-program-can-use-t","465":"https:\/\/stackoverflow.com\/questions\/68644653\/how-to-extend-connection-timeout-in-node-template-when-joining-a-private-networ","466":"https:\/\/stackoverflow.com\/questions\/68639116\/if-the-ledger-of-peer-is-tampered-in-<hyperledger>-fabric-network-how-can-be-the","467":"https:\/\/stackoverflow.com\/questions\/68636848\/how-to-get-value-of-<transactions>-in-<blockchain>-from-transaction-hash","468":"https:\/\/stackoverflow.com\/questions\/68635798\/solidity-<blockchain>-invalid-amount-check","469":"https:\/\/stackoverflow.com\/questions\/68632059\/how-bitcoin-payment-in-the-dark-web-works","470":"https:\/\/stackoverflow.com\/questions\/68631900\/<web3>-uniswap-pancake-retrive-last-swap-transacion-contract-buy-sell","471":"https:\/\/stackoverflow.com\/questions\/68630185\/comparative-differences-between-the-threat-model-of-substratee-and-intel-sgx","472":"https:\/\/stackoverflow.com\/questions\/68626032\/can-i-change-the-lockup-period-of-a-deployed-smart-contract","473":"https:\/\/stackoverflow.com\/questions\/68624321\/bsc-get-<transactions>-by-wallet-address-<web3>-py","474":"https:\/\/stackoverflow.com\/questions\/68618404\/how-to-connect-to-cosmos-hub","475":"https:\/\/stackoverflow.com\/questions\/68616310\/pancakeswap-liqidty-not-working-with-forked-token","476":"https:\/\/stackoverflow.com\/questions\/68599771\/writing-poseidon-pedersen-hash-based-time-locks-on-near-protocol","477":"https:\/\/stackoverflow.com\/questions\/68595119\/<hyperledger>-fabric-gateway-is-not-able-to-get-network","478":"https:\/\/stackoverflow.com\/questions\/68592671\/get-details-of-pending-<transactions>-using-<web3>-py","479":"https:\/\/stackoverflow.com\/questions\/68583591\/solidity-what-does-the-caret-operator-do","480":"https:\/\/stackoverflow.com\/questions\/68580375\/problem-with-deploying-program-to-solana-on-localhost","481":"https:\/\/stackoverflow.com\/questions\/68576053\/how-to-take-a-our-erc20-token-as-fee-to-our-products","482":"https:\/\/stackoverflow.com\/questions\/68574652\/<hyperledger>-fabric-contracts-are-required-to-have-at-least-1-non-ignored-publ","483":"https:\/\/stackoverflow.com\/questions\/68559639\/solidity-smart-contract-data-location-must-be-memory-or-calldata-for-return","484":"https:\/\/stackoverflow.com\/questions\/68556047\/minting-tokens-on-time-base-in-erc-20","485":"https:\/\/stackoverflow.com\/questions\/68547415\/0x-protocol-how-to-locally-sign-orders-with-<python>","486":"https:\/\/stackoverflow.com\/questions\/68545930\/how-to-withdraw-all-tokens-from-the-my-contract-in-solidity","487":"https:\/\/stackoverflow.com\/questions\/68539349\/how-is-data-entry-in-private-and-consortium-<blockchain>s-trusted","488":"https:\/\/stackoverflow.com\/questions\/68530221\/how-to-get-rid-of-flow-sessions-were-not-provided-exception-in-corda-when-run","489":"https:\/\/stackoverflow.com\/questions\/68528018\/substrate-node-template-private-network-without-using-default-keys","490":"https:\/\/stackoverflow.com\/questions\/68525881\/filecoin-textileio-powergate-not-enough-miners-from-reputation-module-to-satisfy","491":"https:\/\/stackoverflow.com\/questions\/68521080\/can-a-liquidity-pool-have-more-than-2-tokens","492":"https:\/\/stackoverflow.com\/questions\/68518363\/erc20-transaction-list-with-api","493":"https:\/\/stackoverflow.com\/questions\/68514428\/smart-contract-with-text-storage-ethereum","494":"https:\/\/stackoverflow.com\/questions\/68510153\/what-should-i-do-about-dapp","495":"https:\/\/stackoverflow.com\/questions\/68500811\/erc-1155-token-standard","496":"https:\/\/stackoverflow.com\/questions\/68497931\/trying-to-susbcribe-to-paircreated-events-from-uniswapv2-factory-in-nodejs","497":"https:\/\/stackoverflow.com\/questions\/68453751\/error-returned-error-vm-exception-while-processing-transaction-revert-not-eno","498":"https:\/\/stackoverflow.com\/questions\/68449832\/<web3>-extradatalength-error-on-the-binance-smart-chain-using-<python>","499":"https:\/\/stackoverflow.com\/questions\/68445269\/how-to-install-<web3>-on-<python>-3-9-6-3-7-6","500":"https:\/\/stackoverflow.com\/questions\/68438887\/consensys-qubernetes-tessera-connect-to-different-url","501":"https:\/\/stackoverflow.com\/questions\/68437987\/how-to-send-a-transaction-in-private-tangle-hornet-of-iota","502":"https:\/\/stackoverflow.com\/questions\/68437393\/how-exchanges-binance-coinbase-record-user-trade-into-<blockchain>","503":"https:\/\/stackoverflow.com\/questions\/68436677\/got-this-runtime-error-while-implementing-assets-pallet-in-substrate1002-verif","504":"https:\/\/stackoverflow.com\/questions\/68434550\/what-is-error-error-returned-error-execution-reverted-when-calling-<blockchain>","505":"https:\/\/stackoverflow.com\/questions\/68429727\/<blockchain>-tutorials-for-double-spending-and-signature-verification","506":"https:\/\/stackoverflow.com\/questions\/68420941\/sync-<transactions>-in-each-node-<blockchain>-<python>","507":"https:\/\/stackoverflow.com\/questions\/68412670\/<hyperledger>-create-a-channel-using-the-configtxgen-cli-tool","508":"https:\/\/stackoverflow.com\/questions\/68410768\/solidity-remix-transaction-reverted-to-initial-state","509":"https:\/\/stackoverflow.com\/questions\/68403746\/it-says-parsererror-expected-but-got-stringliteral-token-sol49516","510":"https:\/\/stackoverflow.com\/questions\/68400417\/how-to-get-median-data-from-2-urls","511":"https:\/\/stackoverflow.com\/questions\/68391739\/staking-contract-based-on-time-need-to-avoid-loop","512":"https:\/\/stackoverflow.com\/questions\/68375424\/how-to-launch-a-substrate-<blockchain>-as-a-test-network","513":"https:\/\/stackoverflow.com\/questions\/68375350\/how-to-get-all-historical-uniswap-pancakeswap-trades-for-a-given-token","514":"https:\/\/stackoverflow.com\/questions\/68365423\/smart-contract-update-function","515":"https:\/\/stackoverflow.com\/questions\/68364318\/chainlink-node-your-node-is-overloaded-and-may-start-missing-jobs-error","516":"https:\/\/stackoverflow.com\/questions\/68359225\/is-<hyperledger>-besu-compatible-with-cosmos-ibc","517":"https:\/\/stackoverflow.com\/questions\/68306263\/is-there-any-method-or-a-way-to-check-accesskey-permission-on-the-near-account-i","518":"https:\/\/stackoverflow.com\/questions\/68301144\/how-to-import-an-exported-function","519":"https:\/\/stackoverflow.com\/questions\/68296594\/how-to-connect-metamask-with-ethers-js-and-fetch-balance","520":"https:\/\/stackoverflow.com\/questions\/68296556\/can-anyone-explain-me-this-assert-condition","521":"https:\/\/stackoverflow.com\/questions\/68293689\/syntaxerror-eol-while-scanning-string-literal-error-on-<blockchain>","522":"https:\/\/stackoverflow.com\/questions\/68292013\/disconnect-wallet-from-site-using-<web3>","523":"https:\/\/stackoverflow.com\/questions\/68289444\/how-to-interact-with-<blockchain>-without-need-of-refreshing-page-in-react","524":"https:\/\/stackoverflow.com\/questions\/68288269\/i-am-getting-error-when-trying-out-substrates-create-a-pallet-tutorial","525":"https:\/\/stackoverflow.com\/questions\/68278727\/determine-bsc-sell-buy-<transactions>","526":"https:\/\/stackoverflow.com\/questions\/68270997\/referenceerror-cannot-access-tokenfarm-before-initialization-while-migrating","527":"https:\/\/stackoverflow.com\/questions\/68260657\/solidity-compilererror-stack-too-deep","528":"https:\/\/stackoverflow.com\/questions\/68256731\/what-is-balancerecived-in-solidity-what-it-will-be-strore","529":"https:\/\/stackoverflow.com\/questions\/68248121\/<hyperledger>-fabric-test-network-error-x509-certificate-signed-by-unknown-autho","530":"https:\/\/stackoverflow.com\/questions\/68247628\/why-do-clients-broadcast-an-endorsed-transation-instead-of-the-peers-doing-it-th","531":"https:\/\/stackoverflow.com\/questions\/68246111\/why-this-piece-of-nodejs-code-has-given-a-bsod-on-win7","532":"https:\/\/stackoverflow.com\/questions\/68243658\/making-a-solidity-transfer-automatically-without-metamask","533":"https:\/\/stackoverflow.com\/questions\/68205281\/how-to-automatically-accept-request-without-asking-confirmation-in-metamask-wall","534":"https:\/\/stackoverflow.com\/questions\/68214773\/problems-with-dapp-development-with-flutter-and-<web3>","535":"https:\/\/stackoverflow.com\/questions\/68201549\/peers-are-not-able-to-connect-with-orderer-in-<hyperledger>-fabric","536":"https:\/\/stackoverflow.com\/questions\/68200582\/what-is-column-type-means-at-ethereum-method-eth-gettransactionbyhash","537":"https:\/\/stackoverflow.com\/questions\/68200248\/how-to-get-the-account-data-of-all-accounts-in-polkadot-using-py-substrate-inter","538":"https:\/\/stackoverflow.com\/questions\/68199023\/send-two-dimensional-array-from-nodejs-server-socket-to-ethereum-smart-contract","539":"https:\/\/stackoverflow.com\/questions\/68190257\/thegraph-one-graph-node-for-several-<blockchain>s","540":"https:\/\/stackoverflow.com\/questions\/68194302\/how-to-upload-and-keep-updating-the-file-in-<python>","541":"https:\/\/stackoverflow.com\/questions\/68180851\/starport-cosmwasm-smart-contracts","542":"https:\/\/stackoverflow.com\/questions\/68179444\/merkle-tree-2nd-preimage-attack-defense-prepending-a-specific-byte-value","543":"https:\/\/stackoverflow.com\/questions\/68163819\/how-can-i-deploy-smart-contract-with-front-end-like-remix-ide-is-doing","544":"https:\/\/stackoverflow.com\/questions\/68162833\/how-to-transfer-ether-from-sender-account-to-a-given-account-with-specific-value","545":"https:\/\/stackoverflow.com\/questions\/68148764\/module-parse-failed-unexpected-token-in-react-project-you-may-need-an-appropri","546":"https:\/\/stackoverflow.com\/questions\/68141061\/how-to-get-multiple-account-balances-in-trc20-network","547":"https:\/\/stackoverflow.com\/questions\/68131480\/<blockchain>-and-smart-contract-beginner","548":"https:\/\/stackoverflow.com\/questions\/68130292\/subquery-vs-thegraph-for-<blockchain>-data","549":"https:\/\/stackoverflow.com\/questions\/68124332\/i-notice-when-i-try-and-use-borsh-to-serialize-deserialize-ill-get-errors","550":"https:\/\/stackoverflow.com\/questions\/68123378\/add-simple-line-pubkeynew-unique-breaks-my-solana-program","551":"https:\/\/stackoverflow.com\/questions\/68120303\/creating-a-cold-multi-coin-wallet-that-can-make-<transactions>","552":"https:\/\/stackoverflow.com\/questions\/68107865\/chain-link-vrf-takes-a-long-time-to-get-random-numbers","553":"https:\/\/stackoverflow.com\/questions\/68092614\/chain-link-vrf-not-working-wrong-argument-count-for-function-call-3-arguments-g","554":"https:\/\/stackoverflow.com\/questions\/68036450\/dispute-resolution-in-smart-contracts-ex-kleros-aragon","555":"https:\/\/stackoverflow.com\/questions\/68032495\/how-to-add-2-nodes-in-chainlink-smart-contract","556":"https:\/\/stackoverflow.com\/questions\/68030663\/basic-implementation-of-eip-2981","557":"https:\/\/stackoverflow.com\/questions\/68024723\/how-to-run-a-uniswap-interface-using-yarn","558":"https:\/\/stackoverflow.com\/questions\/68015543\/how-to-set-up-a-wallet-address-without-using-truffle-hdwallet-provider","559":"https:\/\/stackoverflow.com\/questions\/68009780\/whats-the-first-step-in-creating-a-<blockchain>-based-certification-system","560":"https:\/\/stackoverflow.com\/questions\/68007205\/<cosmos-sdk>-account-sequence-mismatch","561":"https:\/\/stackoverflow.com\/questions\/68004109\/unhandled-rejection-opensea-error-while-making-buying-items","562":"https:\/\/stackoverflow.com\/questions\/67998736\/how-can-i-change-types-of-contract-constraints-to-signature-constraint-in-corda","563":"https:\/\/stackoverflow.com\/questions\/68000782\/chainlink-request-doesnt-have-add-function","564":"https:\/\/stackoverflow.com\/questions\/67987734\/amazon-managed-<blockchain>-not-showing-ethereum-network","565":"https:\/\/stackoverflow.com\/questions\/67971366\/difference-between-submitted-and-finished-<transactions>-in-substrate-blockcha","566":"https:\/\/stackoverflow.com\/questions\/67971922\/filtering-nested-properties-in-subgraph-the-graph","567":"https:\/\/stackoverflow.com\/questions\/67960277\/getting-last-buy-timestamp-for-msg-sender-in-solidity","568":"https:\/\/stackoverflow.com\/questions\/67940618\/pragma-solidity-error-while-trying-to-compile-contract-with-truffle","569":"https:\/\/stackoverflow.com\/questions\/67929995\/how-can-i-get-2nd-balance-from-metamask","570":"https:\/\/stackoverflow.com\/questions\/67915893\/double-equal-in-statement-of-dot-notation","571":"https:\/\/stackoverflow.com\/questions\/67907297\/main-organization-data-access-in-<hyperledger>-fabric","572":"https:\/\/stackoverflow.com\/questions\/67903538\/tron-network-contract-read-only-method-fees","573":"https:\/\/stackoverflow.com\/questions\/67900397\/solana-stake-pool-installation-issue","574":"https:\/\/stackoverflow.com\/questions\/67898627\/solidity-error-please-pass-numbers-as-strings-or-bn-objects-to-avoid-precision","575":"https:\/\/stackoverflow.com\/questions\/67896314\/how-do-i-fork-the-uniswap-v2-interface","576":"https:\/\/stackoverflow.com\/questions\/67894937\/how-to-query-all-staking-rewards-on-polkadot-js-given-an-access-to-archive-node","577":"https:\/\/stackoverflow.com\/questions\/67887987\/how-do-get-rid-of-java-lang-illegalargumentexception-unable-to-match-keys-in","578":"https:\/\/stackoverflow.com\/questions\/67881693\/how-can-i-use-redis-to-fetch-data-from-large-dataset","579":"https:\/\/stackoverflow.com\/questions\/67880818\/chainlink-job-not-being-fulfilled","580":"https:\/\/stackoverflow.com\/questions\/67871995\/how-can-i-swap-bnb-into-another-crypto-currency-using-<web3>","581":"https:\/\/stackoverflow.com\/questions\/67871755\/how-do-i-determine-the-network-i-am-connected-to-in-ganache","582":"https:\/\/stackoverflow.com\/questions\/67866897\/how-to-retrieve-the-account-info-of-an-account-that-sits-on-a-different-node","583":"https:\/\/stackoverflow.com\/questions\/67866833\/<python>-web-scraping-display-additional-data-fields-on-screen","584":"https:\/\/stackoverflow.com\/questions\/67863614\/can-smart-contract-access-data-of-other-<blockchain>s","585":"https:\/\/stackoverflow.com\/questions\/67850547\/cant-compile-solidity-files-using-correct-solc-version","586":"https:\/\/stackoverflow.com\/questions\/67850493\/lisk-<blockchain>-what-is-the-maximum-block-size-that-makes-sense","587":"https:\/\/stackoverflow.com\/questions\/67849141\/what-is-the-ada-cardano-crypto-currency-sdk","588":"https:\/\/stackoverflow.com\/questions\/67847765\/what-is-the-difference-between-the-two-parameters-latest-and-earliest-in-web","589":"https:\/\/stackoverflow.com\/questions\/67835543\/cant-call-methods-in-contract-via-<web3>-js","590":"https:\/\/stackoverflow.com\/questions\/67832546\/interacting-with-contracts-that-are-not-instantiated-in-the-<blockchain>","591":"https:\/\/stackoverflow.com\/questions\/67811780\/transaction-reverted-when-calling-swapexacttokensfortokens-function-<web3>py-pyt","592":"https:\/\/stackoverflow.com\/questions\/67809964\/obtain-private-key-corresponding-to-address-in-hd-wallet-with-blockcypher-api","593":"https:\/\/stackoverflow.com\/questions\/67808051\/how-to-parse-bitcoin-<blockchain>-blkxxxxx-dat-files-especially-transaction-parts","594":"https:\/\/stackoverflow.com\/questions\/67807652\/create-a-<blockchain>-member-in-azure-portal-create-button-not-enabled-after-the","595":"https:\/\/stackoverflow.com\/questions\/67801466\/start-doing-parastate-node","596":"https:\/\/stackoverflow.com\/questions\/67799484\/merge-two-separate-react-app-into-a-single-app","597":"https:\/\/stackoverflow.com\/questions\/67796286\/solidity-parsererror-expected-but-got-is","598":"https:\/\/stackoverflow.com\/questions\/67780557\/<blockchain>-avalanche-faucet-implementation-in-the-local-test-network","599":"https:\/\/stackoverflow.com\/questions\/67776956\/how-to-create-a-fixed-token-and-store-the-state-information-on-the-ledger-in-cor","600":"https:\/\/stackoverflow.com\/questions\/67776881\/solidity-with-react","601":"https:\/\/stackoverflow.com\/questions\/67775325\/facing-issues-with-ibm-<blockchain>-platform-at-vs-code-in-my-asset-contract-ts","602":"https:\/\/stackoverflow.com\/questions\/67769247\/how-sniper-bot-watcher-feature-on-poocoin-app-works","603":"https:\/\/stackoverflow.com\/questions\/67769192\/unable-to-create-channel-in-fabric-network","604":"https:\/\/stackoverflow.com\/questions\/67728346\/parastate-test-tokens","605":"https:\/\/stackoverflow.com\/questions\/67726622\/what-is-parastate-test-network-chain-id","606":"https:\/\/stackoverflow.com\/questions\/67716374\/how-many-channels-can-be-opened-with-a-lightning-node-simultaneously","607":"https:\/\/stackoverflow.com\/questions\/67709692\/hd-wallet-bip44-in-js-how-to-create-an-address-for-a-chain-other-than-bitcoin","608":"https:\/\/stackoverflow.com\/questions\/67708926\/error-on-estimating-gas-for-swapexacttokensfortokens","609":"https:\/\/stackoverflow.com\/questions\/67702747\/contract-constructor-parameter-which-is-also-a-contract","610":"https:\/\/stackoverflow.com\/questions\/67688002\/how-to-fetch-metamask-account-using-<python>-flask","611":"https:\/\/stackoverflow.com\/questions\/67687559\/binance-smart-chain-testnet-contract-deployment-json-rpc-error-execution-reverte","612":"https:\/\/stackoverflow.com\/questions\/67686832\/near-cli-contract-call-works-but-fails-when-called-from-js-sdk-with-same-params","613":"https:\/\/stackoverflow.com\/questions\/67682491\/how-does-uniswap-forntend-caculate-the-pathroute-for-a-specific-pair","614":"https:\/\/stackoverflow.com\/questions\/67676731\/peg-erc-20-tokens-price-to-a-cryptocoin","615":"https:\/\/stackoverflow.com\/questions\/67675558\/error-invalid-number-of-parameters-for-undefined-got-0-expected-1","616":"https:\/\/stackoverflow.com\/questions\/67674110\/transaction-validity-in-bitcoin-<blockchain>","617":"https:\/\/stackoverflow.com\/questions\/67671925\/from-where-crypto-on-chain-data-are-coming-from","618":"https:\/\/stackoverflow.com\/questions\/67655622\/has-anyone-used-hedera-hashgraph-is-it-really-as-fast-as-100-10000-s-for-tran","619":"https:\/\/stackoverflow.com\/questions\/67652367\/bsc-token-explorer","620":"https:\/\/stackoverflow.com\/questions\/67651899\/truffle-doesnt-recognize-contract-change-and-wont-deploy-it","621":"https:\/\/stackoverflow.com\/questions\/67647985\/while-building-saas-solutions-based-on-corda-who-owns-the-certificates-issued-t","622":"https:\/\/stackoverflow.com\/questions\/67642450\/how-to-add-a-function-to-an-already-deployed-smart-contract","623":"https:\/\/stackoverflow.com\/questions\/67637890\/contracts-address-<transactions>-list-etherscan-api","624":"https:\/\/stackoverflow.com\/questions\/67637174\/is-there-any-way-to-get-pending-transaction-for-specified-address-using-<web3>py","625":"https:\/\/stackoverflow.com\/questions\/67633766\/how-to-modify-process-function-in-simple-wallet-project","626":"https:\/\/stackoverflow.com\/questions\/67629681\/how-to-receive-eth-in-a-smart-contract","627":"https:\/\/stackoverflow.com\/questions\/67628454\/call-revert-exception","628":"https:\/\/stackoverflow.com\/questions\/67619473\/get-digital-signature-from-the-ui-and-use-it-in-the-transaction-for-verification","629":"https:\/\/stackoverflow.com\/questions\/67616443\/how-to-get-abi-of-smart-contract-with-nethereum","630":"https:\/\/stackoverflow.com\/questions\/67611716\/why-does-the-minting-function-of-erc721-have-an-access-control","631":"https:\/\/stackoverflow.com\/questions\/67610421\/how-to-create-crowdsale-with-openzipplin-4-x-without-crowdsale-contracts","632":"https:\/\/stackoverflow.com\/questions\/67600002\/deploy-a-pruned-tron-trc20-node","633":"https:\/\/stackoverflow.com\/questions\/67585765\/if-smart-contracts-are-stored-on-blocks-in-the-<blockchain>-how-is-its-state-upda","634":"https:\/\/stackoverflow.com\/questions\/67583406\/pay-fee-for-tron-contract-method-call-with-another-account","635":"https:\/\/stackoverflow.com\/questions\/67583332\/how-can-i-convert-transform-a-json-tree-structure-to-a-merkle-tree","636":"https:\/\/stackoverflow.com\/questions\/67582382\/creating-an-account-on-wax-test-net-returns-wallet-wallet-is-not-unlocked","637":"https:\/\/stackoverflow.com\/questions\/67580499\/verifying-a-crypto-bsc-address-belongs-to-someone","638":"https:\/\/stackoverflow.com\/questions\/67572448\/how-do-i-listen-for-trx-events-on-tron-network-tronweb-nodejs","639":"https:\/\/stackoverflow.com\/questions\/67503957\/how-to-manually-burn-tokens-on-bsc-network","640":"https:\/\/stackoverflow.com\/questions\/67502523\/how-to-integrate-pancakeswap-sdk-to-nestjs-project","641":"https:\/\/stackoverflow.com\/questions\/67491376\/read-data-stored-in-the-blocks-in-ganache","642":"https:\/\/stackoverflow.com\/questions\/67483735\/how-can-smart-contracts-daos-survive-the-chaos-of-the-real-world-if-they-cant","643":"https:\/\/stackoverflow.com\/questions\/67479221\/how-do-i-use-sql-to-return-an-average-value-for-a-day-in-a-date-range","644":"https:\/\/stackoverflow.com\/questions\/67477783\/how-to-run-the-graph-node-in-the-rinkeby-test-rpc","645":"https:\/\/stackoverflow.com\/questions\/67473601\/cleos-on-wax-get-info-eror-failed-with-error-parse-error-4-unexpected-char","646":"https:\/\/stackoverflow.com\/questions\/67466015\/what-is-the-difference-between-indy-node-and-indy-sdk","647":"https:\/\/stackoverflow.com\/questions\/67452880\/understanding-<blockchain>-smart-contract","648":"https:\/\/stackoverflow.com\/questions\/67465114\/solidity-solidity-declarationerror-identifier-not-found-or-not-unique","649":"https:\/\/stackoverflow.com\/questions\/67450251\/how-to-store-in-an-orders-contract-an-array-of-products-contract","650":"https:\/\/stackoverflow.com\/questions\/67448291\/how-to-get-contracts-all-holders-on-bsc","651":"https:\/\/stackoverflow.com\/questions\/67439700\/token-information-does-not-show-when-compiled","652":"https:\/\/stackoverflow.com\/questions\/67435585\/problems-when-buying-tokens-from-a-contract-using-bnb","653":"https:\/\/stackoverflow.com\/questions\/67434270\/unable-to-restore-the-backup-of-fabric-samples-test-network-<hyperledger>-fabric","654":"https:\/\/stackoverflow.com\/questions\/67426041\/some-truffle-test-not-executed","655":"https:\/\/stackoverflow.com\/questions\/67418605\/different-world-states-db-as-a-mechanism-for-data-security","656":"https:\/\/stackoverflow.com\/questions\/67417999\/cannot-connect-to-my-postgresql-server-remotely-from-chainlink-node-terminal","657":"https:\/\/stackoverflow.com\/questions\/67410717\/ethereumjs-library-not-providing-me-with-correct-address-missing-0x","658":"https:\/\/stackoverflow.com\/questions\/67409550\/implementing-buying-and-selling-in-solidity","659":"https:\/\/stackoverflow.com\/questions\/67405125\/<hyperledger>-fabric-role-of-member-vs-peer","660":"https:\/\/stackoverflow.com\/questions\/67395981\/bsc-testnet-truffle-migrate-etimedout","661":"https:\/\/stackoverflow.com\/questions\/67392522\/ethereum-bsc-<blockchain>-transaction-data","662":"https:\/\/stackoverflow.com\/questions\/67384106\/ehtereum-smart-contract-approve-spender-from-another-contract","663":"https:\/\/stackoverflow.com\/questions\/67383772\/different-cross-chaincode-behavior-for-two-different-chaincode-methods","664":"https:\/\/stackoverflow.com\/questions\/67374582\/sha256-of-block-header-hexadecimal-vs-string","665":"https:\/\/stackoverflow.com\/questions\/67372211\/truffle-configuration","666":"https:\/\/stackoverflow.com\/questions\/67368828\/how-do-you-safely-identify-a-user-contacting-our-api-via-an-intermediary-platfor","667":"https:\/\/stackoverflow.com\/questions\/67366964\/decentralized-identifiers-dids","668":"https:\/\/stackoverflow.com\/questions\/67366053\/<geth>-private-network-return-error-invalid-opcode-selfbalance-when-executing-a","669":"https:\/\/stackoverflow.com\/questions\/67365542\/how-it-is-possible-to-connect-with-uniswap-smart-contract-with-uniswap-sdk-pakag","670":"https:\/\/stackoverflow.com\/questions\/67358997\/how-to-properly-use-the-call-or-delegatecall-in-solidity","671":"https:\/\/stackoverflow.com\/questions\/67350117\/called-function-suddenly-needs-to-be-payable","672":"https:\/\/stackoverflow.com\/questions\/67345388\/burn-nep-141-tokens","673":"https:\/\/stackoverflow.com\/questions\/67337517\/<hyperledger>-fabric-installation-in-windows10-pro","674":"https:\/\/stackoverflow.com\/questions\/67335105\/how-to-make-connection-between-fabric-node-sdk-and-fabric-network-when-deployed","675":"https:\/\/stackoverflow.com\/questions\/67334437\/how-to-run-<hyperledger>-fabric","676":"https:\/\/stackoverflow.com\/questions\/67326591\/solidity-enum-inside-of-struct-not-updating-in-2-3-functions-working-in-1-3","677":"https:\/\/stackoverflow.com\/questions\/67317548\/cross-contract-calls-in-aeternity","678":"https:\/\/stackoverflow.com\/questions\/67317392\/how-to-transfer-a-nft-from-one-account-to-another-using-erc721","679":"https:\/\/stackoverflow.com\/questions\/67312380\/why-is-there-a-difference-in-<blockchain>-fee-between-bitcoin-qt-and-<blockchain>-ap","680":"https:\/\/stackoverflow.com\/questions\/67308965\/instantiation-of-chaincode-onto-different-channels-on-<hyperledger>-fabric","681":"https:\/\/stackoverflow.com\/questions\/67311918\/is-there-a-place-to-find-the-list-of-all-the-public-smart-contracts-on-vechain","682":"https:\/\/stackoverflow.com\/questions\/67305192\/get-proper-sell-price-from-uniswap-v2","683":"https:\/\/stackoverflow.com\/questions\/67291011\/erc20-how-to-split-the-initial-token-supply-on-multiple-accounts","684":"https:\/\/stackoverflow.com\/questions\/67304320\/does-chainlink-have-a-reliable-way-to-verify-the-size-format-of-a-file-behind-a","685":"https:\/\/stackoverflow.com\/questions\/67281785\/<hyperledger>-fabric-with-raft-protocol-how-are-<transactions>-packaged-into-blocks","686":"https:\/\/stackoverflow.com\/questions\/67281289\/writing-a-simulation-code-adding-blocks-in-chain","687":"https:\/\/stackoverflow.com\/questions\/67280095\/can-i-get-binance-api-data-in-solidity","688":"https:\/\/stackoverflow.com\/questions\/67279648\/how-can-i-establish-federated-communication-between-two-separate-<hyperledger>-fab","689":"https:\/\/stackoverflow.com\/questions\/67264895\/is-it-possible-to-create-unpredictable-random-number-with-solidity","690":"https:\/\/stackoverflow.com\/questions\/67263654\/vm-exception-while-processing-transaction-revert-when-running-a-chainlink-no","691":"https:\/\/stackoverflow.com\/questions\/67263214\/solidity-k-error-when-i-try-to-burn-tokens-in-liquidity","692":"https:\/\/stackoverflow.com\/questions\/67251051\/allowance-and-transfer-tokens-from-contract-b-using-contract-a-to-user-address-x","693":"https:\/\/stackoverflow.com\/questions\/67245415\/how-to-change-account-in-truffleganache","694":"https:\/\/stackoverflow.com\/questions\/67242479\/<blockchain>-com-market-ohlc-data-api-call","695":"https:\/\/stackoverflow.com\/questions\/67241567\/install-startport-mv-cannot-move-starport-to-usr-local-bin-starport-per","696":"https:\/\/stackoverflow.com\/questions\/67231596\/pandas-conditional-row-values-based-on-an-other-column","697":"https:\/\/stackoverflow.com\/questions\/67212641\/im-getting-an-error-using-aeproject-test-command-with-initialized-project","698":"https:\/\/stackoverflow.com\/questions\/67210683\/how-to-derive-cardano-addresses-from-public-keys","699":"https:\/\/stackoverflow.com\/questions\/67210353\/facing-error-when-running-enrolladmin-js-for-ibm-block-chain-<hyperledger>-fabric","700":"https:\/\/stackoverflow.com\/questions\/67199392\/quorum-marker-support-quorum-ibft-consensus","701":"https:\/\/stackoverflow.com\/questions\/67191901\/how-do-i-know-my-ethereum-nodes-sync-low-speed-or-out-of-sync","702":"https:\/\/stackoverflow.com\/questions\/67185442\/how-to-transfer-specific-amount-of-tokens-to-each-holder-in-solidity-when-transa","703":"https:\/\/stackoverflow.com\/questions\/67184934\/how-to-scrape-content-from-a-website-that-requests-a-metamask-connection","704":"https:\/\/stackoverflow.com\/questions\/67174324\/cannot-find-module-fs-extra-npm","705":"https:\/\/stackoverflow.com\/questions\/67166559\/how-can-the-voter-verify-that-the-candidate-s-choice-has-not-changed","706":"https:\/\/stackoverflow.com\/questions\/67136272\/error-internal-json-rpc-error-message-vm-exception-while-processing-tran","707":"https:\/\/stackoverflow.com\/questions\/67129744\/how-do-<transactions>-take-place-in-a-<blockchain>","708":"https:\/\/stackoverflow.com\/questions\/67119183\/truffle-is-installed-but-macos-cant-find-commands-for-any-<blockchain>-packages","709":"https:\/\/stackoverflow.com\/questions\/67117010\/who-can-execute-public-functions-of-smart-contract-in-solidity","710":"https:\/\/stackoverflow.com\/questions\/67107241\/how-to-switch-accounts-automatically-in-meatamask","711":"https:\/\/stackoverflow.com\/questions\/67070302\/how-to-use-invokechaincode-api","712":"https:\/\/stackoverflow.com\/questions\/67054979\/why-cant-i-send-an-extrinsic-from-py-substrate-interface","713":"https:\/\/stackoverflow.com\/questions\/67054829\/truffle-test-doesnt-send-funds-to-msg-sender","714":"https:\/\/stackoverflow.com\/questions\/67051190\/how-to-download-<blockchain>-transaction-data","715":"https:\/\/stackoverflow.com\/questions\/67044235\/fabric-invoke-chaincode-error-failed-to-get-endorsing-peers-no-endorsement-com","716":"https:\/\/stackoverflow.com\/questions\/67044147\/signing-documents-with-<blockchain>-and-ipfs","717":"https:\/\/stackoverflow.com\/questions\/67037222\/does-<hyperledger>-fabric-evaluate-transaction-return-a-signed-query-result","718":"https:\/\/stackoverflow.com\/questions\/67035880\/truffle-verify-cannot-find-module-chainlink-contracts-src-v0-6-vrfconsumerba","719":"https:\/\/stackoverflow.com\/questions\/67032287\/what-exacly-is-bitcoin-seed-nonce-in-bitcoin-source-code","720":"https:\/\/stackoverflow.com\/questions\/67027530\/why-does-pyrlp-serializable-class-not-allow-attributes-to-be-edited-after-initia","721":"https:\/\/stackoverflow.com\/questions\/67026726\/how-a-<blockchain>-node-knows-when-a-new-node-is-added","722":"https:\/\/stackoverflow.com\/questions\/67019534\/choice-of-token-fungible-or-non-fungible-pertaining-to-modifiability-of-inform","723":"https:\/\/stackoverflow.com\/questions\/67019352\/how-can-a-crypto-be-transfered-from-a-wallet-to-another-through-an-other-blockc","724":"https:\/\/stackoverflow.com\/questions\/67013194\/how-to-validate-transaction-manually-in-<hyperledger>-fabric","725":"https:\/\/stackoverflow.com\/questions\/67006583\/ipfs-and-editing-permissions","726":"https:\/\/stackoverflow.com\/questions\/67000551\/why-does-<blockchain>-needs-hash-difficulty-like-zeros-at-the-beginning-of-the-has","727":"https:\/\/stackoverflow.com\/questions\/66987367\/i-can-not-run-substrate-on-m1","728":"https:\/\/stackoverflow.com\/questions\/66999387\/corda-check-session-send-receive-completeness","729":"https:\/\/stackoverflow.com\/questions\/66972788\/mandatory-script-verify-flag-failed-script-evaluated-without-error-but-finished","730":"https:\/\/stackoverflow.com\/questions\/66955488\/contractlogicerror-while-using-<web3>-py","731":"https:\/\/stackoverflow.com\/questions\/66946018\/truffle-migrate-reset-without-loosing-data","732":"https:\/\/stackoverflow.com\/questions\/66914072\/accessing-a-private-key-in-a-metamask-wallet","733":"https:\/\/stackoverflow.com\/questions\/66902193\/can-i-change-smart-contract-which-is-already-deployed-on-bsc","734":"https:\/\/stackoverflow.com\/questions\/66900604\/how-can-i-solve-this-error-command-not-found-puppeth","735":"https:\/\/stackoverflow.com\/questions\/66897035\/attributeerror-hashlib-hash-object-has-no-attribute-startswith","736":"https:\/\/stackoverflow.com\/questions\/66896425\/how-do-you-access-the-raw-public-data-for-a-<blockchain>-and-then-read-the-transac","737":"https:\/\/stackoverflow.com\/questions\/66887357\/cant-use-fallback-nothing-happen-function-external-payable","738":"https:\/\/stackoverflow.com\/questions\/66884974\/how-do-you-write-a-system-test-for-your-runtime","739":"https:\/\/stackoverflow.com\/questions\/66874521\/how-to-construct-cardano-transaction-using-cardano-rosetta-and-cardano-addresses","740":"https:\/\/stackoverflow.com\/questions\/66874254\/getting-contract-validate-error-owner-no-asset-when-create-a-nft","741":"https:\/\/stackoverflow.com\/questions\/66869824\/<hyperledger>-fabric-error-while-deploying-a-custom-chaincode","742":"https:\/\/stackoverflow.com\/questions\/66866817\/is-there-any-way-to-initiate-a-disconnect-request-to-the-metamask-wallet","743":"https:\/\/stackoverflow.com\/questions\/66861905\/developing-permissioned-<blockchain>-systems","744":"https:\/\/stackoverflow.com\/questions\/66861317\/transaction-is-visible-on-ethereum-<blockchain>-explorer-but-token-is-not-display","745":"https:\/\/stackoverflow.com\/questions\/66861222\/ethereum-is-there-a-way-to-know-the-storage-space-needed-by-my-smart-contract","746":"https:\/\/stackoverflow.com\/questions\/66856035\/unable-to-connect-with-<bitcore>-testnet-getting-following-error-525-origin-ssl-ha","747":"https:\/\/stackoverflow.com\/questions\/66851787\/what-exactly-network-implementation-has-been-used-in-<blockchain>s","748":"https:\/\/stackoverflow.com\/questions\/66847659\/elliptic-curve-key-verification-failed","749":"https:\/\/stackoverflow.com\/questions\/66832214\/endorser-and-orderer-connections-initialized-error-got-unexpected-status-bad-r","750":"https:\/\/stackoverflow.com\/questions\/66836946\/fetch-all-addresses-holding-an-erc20-token-at-a-given-timestamp","751":"https:\/\/stackoverflow.com\/questions\/66802761\/<hyperledger>-fabric-client-registration","752":"https:\/\/stackoverflow.com\/questions\/66797992\/tronweb-unhandledpromiserejectionwarning-typeerror-e-foreach-is-not-a-function","753":"https:\/\/stackoverflow.com\/questions\/66796408\/tronweb-and-trongrid-error-request-failed-with-status-code-502","754":"https:\/\/stackoverflow.com\/questions\/66772163\/the-node-server-cant-access-the-object-blockobject-oriented-javascript","755":"https:\/\/stackoverflow.com\/questions\/66757101\/should-i-learn-<hyperledger>-composer-even-if-its-depreciated","756":"https:\/\/stackoverflow.com\/questions\/66758210\/failed-to-run-custom-build-command-for-ring-v0-16-12","757":"https:\/\/stackoverflow.com\/questions\/66753946\/how-do-i-get-data-out-of-json-object-withouth-knowing-the-names","758":"https:\/\/stackoverflow.com\/questions\/66733913\/is-it-possible-to-reserve-an-address-on-solidity-smart-contract-creation-for-tax","759":"https:\/\/stackoverflow.com\/questions\/66725742\/flutter-binance-api-signature","760":"https:\/\/stackoverflow.com\/questions\/66707680\/what-is-the-difference-between-a-node-and-a-client-in-the-ethereum-context","761":"https:\/\/stackoverflow.com\/questions\/66702259\/how-to-send-etherenum-to-msg-sender-in-solidity-0-5-0","762":"https:\/\/stackoverflow.com\/questions\/66691023\/issue-deploying-raiden-contracts-and-starting-raiden-client-on-private-<geth>-netw","763":"https:\/\/stackoverflow.com\/questions\/66685858\/cannot-get-the-account-id-if-connected-to-mumbai-rpc-testnet","764":"https:\/\/stackoverflow.com\/questions\/66690000\/<web3>-read-contract-<python>","765":"https:\/\/stackoverflow.com\/questions\/66685344\/can-we-track-illegal-use-of-our-tokenized-item-using-nft","766":"https:\/\/stackoverflow.com\/questions\/66668697\/difference-between-<hyperledger>-fabric-<hyperledger>-besu","767":"https:\/\/stackoverflow.com\/questions\/66656571\/how-to-use-a-fabric-1-4-wallet-with-fabric-node-sdk-2-x","768":"https:\/\/stackoverflow.com\/questions\/66654949\/curl-23-failure-writing-output-destination","769":"https:\/\/stackoverflow.com\/questions\/66651807\/how-to-create-a-tron-wallet-with-nodejs","770":"https:\/\/stackoverflow.com\/questions\/66651603\/cannot-run-peer-because-cannot-init-crypto-error-while-using-peer-command","771":"https:\/\/stackoverflow.com\/questions\/66644425\/compiler-problem-with-solidity-and-truffle","772":"https:\/\/stackoverflow.com\/questions\/66640173\/aca-py-0-6-0-info-ledger-instance-not-provided-error-bug","773":"https:\/\/stackoverflow.com\/questions\/66625838\/quorum-allowing-ethereum-addresses","774":"https:\/\/stackoverflow.com\/questions\/66544513\/getting-error-when-compiling-and-deploying-ethereum-smart-contract-with-node-js","775":"https:\/\/stackoverflow.com\/questions\/66541790\/get-info-from-binance-<blockchain>","776":"https:\/\/stackoverflow.com\/questions\/66533222\/why-cant-i-change-contract-state-in-solidity","777":"https:\/\/stackoverflow.com\/questions\/66528920\/how-to-execute-peer-node-pause-command-in-<hyperledger>-fabric","778":"https:\/\/stackoverflow.com\/questions\/66523906\/how-can-i-renew-an-admin-certificate-for-a-<hyperledger>-fabric-orderer-peer-whi","779":"https:\/\/stackoverflow.com\/questions\/66515438\/keccak256-doesnt-return-buffer","780":"https:\/\/stackoverflow.com\/questions\/66512640\/how-to-fix-declarations-in-android-studio-<blockchain>-app","781":"https:\/\/stackoverflow.com\/questions\/66472511\/laptop-specifications-for-implementation-of-<blockchain>","782":"https:\/\/stackoverflow.com\/questions\/66456484\/ibm-<blockchain>-platform-visual-studio-code-error-while-packaging-smart-contrac","783":"https:\/\/stackoverflow.com\/questions\/66455820\/parsererror-in-solidity-0-8-0","784":"https:\/\/stackoverflow.com\/questions\/66436059\/time-out-error-during-deployment-in-binance-smart-chain","785":"https:\/\/stackoverflow.com\/questions\/66428728\/how-to-sign-miners-rewards-on-a-<blockchain>","786":"https:\/\/stackoverflow.com\/questions\/66427264\/input-of-a-<blockchain>-voting-java-program-has-a-loop-problem","787":"https:\/\/stackoverflow.com\/questions\/66410869\/how-can-i-connect-solidity-smart-contract-to-an-android-application","788":"https:\/\/stackoverflow.com\/questions\/66397004\/truffle-unbox-metacoin-failed-dowloading","789":"https:\/\/stackoverflow.com\/questions\/66389245\/error-testing-smart-contract-with-truffle-for-solidity-ethereum","790":"https:\/\/stackoverflow.com\/questions\/66388632\/how-to-send-a-transaction-to-an-onchain-program-in-solana-with-javascript","791":"https:\/\/stackoverflow.com\/questions\/66382592\/where-can-i-find-remote-eos-api","792":"https:\/\/stackoverflow.com\/questions\/66358722\/can-date-be-generated-while-creating-a-daml-contract","793":"https:\/\/stackoverflow.com\/questions\/66320282\/how-do-i-generate-serial-wif-key-the-program-generate-only-one-key-in-<python>","794":"https:\/\/stackoverflow.com\/questions\/66312581\/how-to-implement-<hyperledger>-fabric-using-nodejs","795":"https:\/\/stackoverflow.com\/questions\/66309824\/how-to-set-system-properties-in-substrate-<blockchain>-for-private-network","796":"https:\/\/stackoverflow.com\/questions\/66284215\/latency-of-a-fabric-<blockchain>","797":"https:\/\/stackoverflow.com\/questions\/66280224\/is-<blockchain>-data-stored-forever","798":"https:\/\/stackoverflow.com\/questions\/66269851\/handling-multiple-erc721-tokens-in-the-same-contract","799":"https:\/\/stackoverflow.com\/questions\/66267639\/how-send-ethereum-transaction-with-<python>-without-ganache","800":"https:\/\/stackoverflow.com\/questions\/66252472\/send-ether-from-specific-address-on-constructor","801":"https:\/\/stackoverflow.com\/questions\/66256188\/<hyperledger>-<blockchain>-explorer-fail-to-connect-before-the-deadline-on-endorser","802":"https:\/\/stackoverflow.com\/questions\/66247620\/which-<blockchain>-platform-supports-user-defined-consensus-protocol-for-particula","803":"https:\/\/stackoverflow.com\/questions\/66228220\/how-to-query-all-current-polkadot-accounts-with-polkadot-js","804":"https:\/\/stackoverflow.com\/questions\/66172170\/<hyperledger>-fabric-2-3-error-failed-to-connect-before-the-deadline-on-endorser","805":"https:\/\/stackoverflow.com\/questions\/66160209\/where-do-i-change-the-block-time-parameters-when-compiling-a-nxt-<blockchain>-fork","806":"https:\/\/stackoverflow.com\/questions\/66154365\/can-my-backend-call-a-smart-contract-function-to-be-executed-on-a-certain-date","807":"https:\/\/stackoverflow.com\/questions\/66146510\/compute-compressed-bitcoin-address-from-private-key","808":"https:\/\/stackoverflow.com\/questions\/66143904\/how-to-apply-custom-business-logic-to-the-endorsement-policies-on-<hyperledger>","809":"https:\/\/stackoverflow.com\/questions\/66123619\/how-to-find-all-the-polkadot-accounts-with-index-or-identity-attached","810":"https:\/\/stackoverflow.com\/questions\/66117774\/cloud-services-deployment-using-smart-contracts","811":"https:\/\/stackoverflow.com\/questions\/66111104\/<blockchain>-websocket-api-with-<python>-gets-bad-request-400","812":"https:\/\/stackoverflow.com\/questions\/66103624\/can-we-retrieve-document-revision-by-transaction-hash-in-qldb","813":"https:\/\/stackoverflow.com\/questions\/66093695\/is-it-possible-to-get-wallet-balance-passing-the-wallet-address-on-any-cryptocur","814":"https:\/\/stackoverflow.com\/questions\/66097758\/alternative-to-metamask-who-manages-the-private-key-and-the-ethers","815":"https:\/\/stackoverflow.com\/questions\/66089291\/weightned-reputation-nodes","816":"https:\/\/stackoverflow.com\/questions\/66082860\/how-to-recover-an-algorand-wallet-with-<python>-algosdk","817":"https:\/\/stackoverflow.com\/questions\/66068627\/is-there-a-way-to-use-multisig-without-smart-contracts-on-ethereum","818":"https:\/\/stackoverflow.com\/questions\/66072515\/could-not-convert-parameter-tx-between-node-and-runtime-error-decoding-field","819":"https:\/\/stackoverflow.com\/questions\/66059452\/deploy-<hyperledger>-febric-<blockchain>-code-on-kubernetes","820":"https:\/\/stackoverflow.com\/questions\/66059397\/sendrawtransaction-return-hash-but-there-is-no-transaction","821":"https:\/\/stackoverflow.com\/questions\/66056926\/how-to-group-by-month-year-from-a-differently-formatted-date-sql","822":"https:\/\/stackoverflow.com\/questions\/66055850\/how-to-interact-with-an-already-deployed-smart-contract","823":"https:\/\/stackoverflow.com\/questions\/66046379\/convert-ethereum-or-bitcoin-address-to-polkadot-or-substrate-based-address","824":"https:\/\/stackoverflow.com\/questions\/66045708\/403-client-error-forbidden-for-url-https-ropsten-infura-io-v3-project-id","825":"https:\/\/stackoverflow.com\/questions\/66036914\/call-function-of-smart-contract-after-deploying-smart-contract-in-solidity","826":"https:\/\/stackoverflow.com\/questions\/66001911\/solidity-hard-coding-initial-values-for-array-of-uint256-values-fails","827":"https:\/\/stackoverflow.com\/questions\/65995186\/how-can-i-find-out-the-number-of-times-an-rsk-transaction-has-been-confirmed-on","828":"https:\/\/stackoverflow.com\/questions\/65987493\/discrepancy-between-<blockchain>s-of-different-peers-in-<hyperledger>-fabric-1-4","829":"https:\/\/stackoverflow.com\/questions\/65976656\/json-parse-in-sql-with-hash-key","830":"https:\/\/stackoverflow.com\/questions\/65974487\/docker-deploy-in-smart-contract","831":"https:\/\/stackoverflow.com\/questions\/65966757\/where-is-the-data-of-a-transaction-saved","832":"https:\/\/stackoverflow.com\/questions\/65963286\/storing-images-on-the-<blockchain>","833":"https:\/\/stackoverflow.com\/questions\/65947123\/interaction-with-smart-contract-oracle","834":"https:\/\/stackoverflow.com\/questions\/65944313\/regular-repeating-interaction-between-an-oracle-and-a-smart-contract","835":"https:\/\/stackoverflow.com\/questions\/65934347\/why-blocks-dont-finalized","836":"https:\/\/stackoverflow.com\/questions\/65932405\/my-smart-contract-is-not-responding-and-error-saying-<web3>-is-not-defined","837":"https:\/\/stackoverflow.com\/questions\/65931966\/identityservices-delete-function-returning-code-56-message-identity-remov","838":"https:\/\/stackoverflow.com\/questions\/65906502\/is-there-best-practice-solution-to-store-draft-data-out-of-<blockchain>-in-dapp","839":"https:\/\/stackoverflow.com\/questions\/65881912\/tezos-terminology-what-is-the-difference-between-private-nodes-public-nodes-an","840":"https:\/\/stackoverflow.com\/questions\/65878036\/difference-between-ethereum-web-apis-and-ethereum-api-as-a-service","841":"https:\/\/stackoverflow.com\/questions\/65873821\/im-having-problems-writing-test-for-my-solidity-contract","842":"https:\/\/stackoverflow.com\/questions\/65871071\/differences-in-terms-of-api-supported-by-full-node-vs-light-node","843":"https:\/\/stackoverflow.com\/questions\/65858406\/installing-pipenv-on-windows","844":"https:\/\/stackoverflow.com\/questions\/65857837\/<hyperledger>-fabric-unable-to-update-certificate-attributes-in-node-sdk","845":"https:\/\/stackoverflow.com\/questions\/65856466\/soliditymetamask-metamask-no-longer-injects-<web3>","846":"https:\/\/stackoverflow.com\/questions\/65853142\/is-it-possible-to-create-a-circular-<blockchain>","847":"https:\/\/stackoverflow.com\/questions\/65847960\/too-many-open-files-error-while-reindexing-btc-<blockchain>-by-electrs","848":"https:\/\/stackoverflow.com\/questions\/65838245\/how-to-find-the-rest-api-parameters-to-a-site-that-doesnt-have-the-data-within","849":"https:\/\/stackoverflow.com\/questions\/65836519\/webscraping-<blockchain>-data-seemingly-embedded-in-javascript-through-<python>-is","850":"https:\/\/stackoverflow.com\/questions\/65832527\/issue-to-synchronize-with-<blockchain>-network","851":"https:\/\/stackoverflow.com\/questions\/65830983\/how-sending-<transactions>-and-receiving-events-work-in-backends-in-ethereum-block","852":"https:\/\/stackoverflow.com\/questions\/65819569\/how-the-state-of-ethereum-<blockchain>-is-updated","853":"https:\/\/stackoverflow.com\/questions\/65784447\/prove-that-you-executed-view-function-in-solidity","854":"https:\/\/stackoverflow.com\/questions\/65803549\/what-will-happen-if-bitcoin-proof-of-work-is-not-successful-in-10-minutes","855":"https:\/\/stackoverflow.com\/questions\/65780302\/generating-<blockchain>-header-is-failing-with-error","856":"https:\/\/stackoverflow.com\/questions\/65763205\/why-are-my-ethereum-smart-contract-<transactions>-not-showing-up-after-x-amount-of","857":"https:\/\/stackoverflow.com\/questions\/65761735\/how-are-<blockchain>-hd-address-queried","858":"https:\/\/stackoverflow.com\/questions\/65761496\/how-do-we-know-the-amount-of-money-in-each-account-in-<blockchain>","859":"https:\/\/stackoverflow.com\/questions\/65761420\/why-do-we-not-use-istanbul-byzantine-fault-tolerance-ibft-in-public-<blockchain>","860":"https:\/\/stackoverflow.com\/questions\/65754533\/how-can-there-be-multiple-wallets-from-the-same-ethereum-private-key","861":"https:\/\/stackoverflow.com\/questions\/65744555\/error-in-deployment-in-binance-testnet-could-not-create-addresses-from-your-mn","862":"https:\/\/stackoverflow.com\/questions\/65738066\/facing-error-on-deploying-contract-in-binance-smart-chain","863":"https:\/\/stackoverflow.com\/questions\/65729223\/how-to-secure-a-<blockchain>-based-on-pow-against-51-attack","864":"https:\/\/stackoverflow.com\/questions\/65728630\/solidity-random-number-security-using-keccak256-when-contract-caller-is-known","865":"https:\/\/stackoverflow.com\/questions\/65724562\/integration-to-chainlink-from-other-<blockchain>s","866":"https:\/\/stackoverflow.com\/questions\/65712221\/artificial-intelligence-in-ethereum-smart-contracts","867":"https:\/\/stackoverflow.com\/questions\/65708905\/how-to-set-different-credentials-of-ethereum-accounts-for-doing-<transactions>-in","868":"https:\/\/stackoverflow.com\/questions\/65704273\/adding-tokens-to-existing-<python>-<blockchain>","869":"https:\/\/stackoverflow.com\/questions\/65702682\/mkdir-path-read-only-file-system-problems-when-running-<geth>","870":"https:\/\/stackoverflow.com\/questions\/65699948\/can-we-restrict-an-account-in-corda-to-accept-only-one-specific-state","871":"https:\/\/stackoverflow.com\/questions\/65697748\/how-view-change-protocol-works-when-we-have-exactly-f-faulty-replicas-in-pbft","872":"https:\/\/stackoverflow.com\/questions\/65696037\/solidity-is-it-possible-to-combine-event-emit-and-require","873":"https:\/\/stackoverflow.com\/questions\/65696448\/best-way-to-create-multiple-linkedlists-of-hashmaps-with-multiple-keys-and-value","874":"https:\/\/stackoverflow.com\/questions\/65680790\/does-cexio-support-withdraw-and-deposit-via-api","875":"https:\/\/stackoverflow.com\/questions\/65627585\/how-to-change-code-repository-from-fabric-v1-to-v2","876":"https:\/\/stackoverflow.com\/questions\/65615744\/how-to-send-erc20-token-from-my-metamask-wallet-to-other-address-without-private","877":"https:\/\/stackoverflow.com\/questions\/65610733\/making-private-<transactions>-on-the-ethereum-network","878":"https:\/\/stackoverflow.com\/questions\/65610164\/artemis-auto-configuration-problem-when-using-corda-rpc-with-spring-boot","879":"https:\/\/stackoverflow.com\/questions\/65608142\/limits-of-a-decentralised-app-due-to-racketeering-by-miners","880":"https:\/\/stackoverflow.com\/questions\/65606226\/format-chainlink-aggregatorv3interface-answer-to-usd","881":"https:\/\/stackoverflow.com\/questions\/65593054\/system-has-not-been-booted-with-systemd-as-init-system-pid-1-cant-operate-c","882":"https:\/\/stackoverflow.com\/questions\/65594686\/error-while-initializing-actor-system-wavesplatform-com-protonail-leveldb-jna-le","883":"https:\/\/stackoverflow.com\/questions\/65583506\/how-to-create-standard-erc721-token","884":"https:\/\/stackoverflow.com\/questions\/65582802\/tron-web-validate-transfercontract-error-no-owneraccount-tron-link","885":"https:\/\/stackoverflow.com\/questions\/65575578\/how-does-<hyperledger>-fabric-smart-contract-communicate-with-couchdb","886":"https:\/\/stackoverflow.com\/questions\/65572469\/browser-test-sol521-typeerror-definition-of-base-has-to-precede-definition-o","887":"https:\/\/stackoverflow.com\/questions\/65554718\/<python>-<blockchain>-api-to-check-balance-with-api-key","888":"https:\/\/stackoverflow.com\/questions\/65537763\/what-is-the-incentive-for-<blockchain>-nodes-to-always-select-the-longest-chain","889":"https:\/\/stackoverflow.com\/questions\/65529667\/get-keys-of-solidity-mapping","890":"https:\/\/stackoverflow.com\/questions\/65527532\/<hyperledger>-fabric-error-when-i-try-to-do-network-sh-up-in-test-network-direct"},"# of answers":{"0":1,"1":2,"2":3,"3":4,"4":3,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":1,"13":1,"14":2,"15":1,"16":1,"17":1,"18":2,"19":2,"20":1,"21":2,"22":8,"23":1,"24":1,"25":1,"26":1,"27":1,"28":3,"29":0,"30":1,"31":1,"32":2,"33":1,"34":1,"35":2,"36":1,"37":0,"38":2,"39":3,"40":0,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":2,"48":1,"49":2,"50":1,"51":0,"52":1,"53":2,"54":1,"55":1,"56":1,"57":0,"58":1,"59":0,"60":1,"61":1,"62":3,"63":1,"64":0,"65":0,"66":2,"67":1,"68":1,"69":2,"70":1,"71":0,"72":1,"73":2,"74":1,"75":1,"76":1,"77":3,"78":1,"79":2,"80":1,"81":0,"82":1,"83":0,"84":0,"85":1,"86":1,"87":1,"88":1,"89":0,"90":1,"91":1,"92":1,"93":0,"94":1,"95":1,"96":2,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":2,"104":1,"105":2,"106":1,"107":1,"108":1,"109":1,"110":0,"111":1,"112":1,"113":1,"114":1,"115":0,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":4,"128":1,"129":1,"130":1,"131":1,"132":0,"133":2,"134":0,"135":1,"136":1,"137":1,"138":0,"139":1,"140":2,"141":1,"142":3,"143":2,"144":1,"145":2,"146":2,"147":1,"148":1,"149":3,"150":1,"151":2,"152":1,"153":1,"154":1,"155":1,"156":0,"157":0,"158":0,"159":0,"160":1,"161":1,"162":2,"163":1,"164":0,"165":0,"166":1,"167":1,"168":0,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":5,"176":1,"177":0,"178":1,"179":1,"180":1,"181":1,"182":0,"183":1,"184":2,"185":1,"186":1,"187":3,"188":2,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":4,"199":2,"200":0,"201":1,"202":1,"203":1,"204":1,"205":0,"206":6,"207":0,"208":0,"209":1,"210":0,"211":2,"212":2,"213":1,"214":0,"215":1,"216":2,"217":1,"218":1,"219":1,"220":1,"221":1,"222":0,"223":3,"224":0,"225":1,"226":1,"227":1,"228":0,"229":1,"230":1,"231":1,"232":2,"233":1,"234":2,"235":2,"236":0,"237":0,"238":1,"239":1,"240":5,"241":1,"242":0,"243":3,"244":1,"245":1,"246":3,"247":1,"248":1,"249":1,"250":1,"251":0,"252":1,"253":1,"254":1,"255":2,"256":1,"257":1,"258":1,"259":1,"260":2,"261":1,"262":1,"263":1,"264":1,"265":1,"266":0,"267":1,"268":0,"269":1,"270":1,"271":1,"272":3,"273":1,"274":1,"275":3,"276":2,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":0,"287":1,"288":1,"289":2,"290":2,"291":1,"292":0,"293":0,"294":0,"295":0,"296":1,"297":1,"298":1,"299":2,"300":1,"301":2,"302":3,"303":0,"304":1,"305":0,"306":1,"307":2,"308":2,"309":1,"310":1,"311":1,"312":1,"313":0,"314":1,"315":1,"316":1,"317":1,"318":2,"319":2,"320":1,"321":1,"322":1,"323":2,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":0,"331":1,"332":0,"333":3,"334":0,"335":1,"336":1,"337":1,"338":2,"339":1,"340":1,"341":1,"342":2,"343":1,"344":0,"345":0,"346":1,"347":0,"348":1,"349":2,"350":1,"351":2,"352":2,"353":1,"354":1,"355":5,"356":1,"357":0,"358":1,"359":1,"360":0,"361":4,"362":1,"363":1,"364":3,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":2,"372":1,"373":2,"374":1,"375":1,"376":1,"377":2,"378":1,"379":0,"380":2,"381":1,"382":1,"383":1,"384":3,"385":1,"386":0,"387":1,"388":1,"389":2,"390":1,"391":2,"392":1,"393":0,"394":1,"395":1,"396":1,"397":1,"398":1,"399":0,"400":1,"401":1,"402":0,"403":1,"404":2,"405":2,"406":1,"407":0,"408":1,"409":2,"410":1,"411":0,"412":1,"413":1,"414":2,"415":2,"416":2,"417":2,"418":1,"419":2,"420":0,"421":1,"422":1,"423":1,"424":1,"425":1,"426":1,"427":3,"428":2,"429":1,"430":4,"431":2,"432":1,"433":0,"434":1,"435":0,"436":2,"437":1,"438":1,"439":1,"440":1,"441":1,"442":1,"443":1,"444":0,"445":0,"446":3,"447":1,"448":2,"449":1,"450":2,"451":1,"452":2,"453":1,"454":0,"455":3,"456":0,"457":1,"458":1,"459":1,"460":0,"461":1,"462":0,"463":1,"464":1,"465":1,"466":1,"467":2,"468":1,"469":1,"470":0,"471":1,"472":1,"473":4,"474":1,"475":2,"476":1,"477":1,"478":0,"479":4,"480":1,"481":1,"482":1,"483":1,"484":1,"485":0,"486":4,"487":1,"488":1,"489":1,"490":1,"491":2,"492":1,"493":1,"494":1,"495":2,"496":1,"497":1,"498":2,"499":1,"500":0,"501":2,"502":3,"503":0,"504":1,"505":1,"506":0,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":0,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":0,"522":1,"523":0,"524":1,"525":1,"526":1,"527":2,"528":1,"529":0,"530":1,"531":1,"532":2,"533":1,"534":1,"535":0,"536":1,"537":1,"538":1,"539":1,"540":0,"541":3,"542":0,"543":1,"544":1,"545":0,"546":0,"547":1,"548":0,"549":1,"550":1,"551":1,"552":1,"553":1,"554":1,"555":1,"556":1,"557":1,"558":0,"559":0,"560":1,"561":1,"562":1,"563":1,"564":1,"565":0,"566":2,"567":1,"568":0,"569":1,"570":0,"571":1,"572":1,"573":1,"574":3,"575":0,"576":1,"577":1,"578":0,"579":1,"580":1,"581":1,"582":1,"583":0,"584":1,"585":1,"586":1,"587":0,"588":1,"589":0,"590":1,"591":0,"592":0,"593":2,"594":1,"595":1,"596":1,"597":1,"598":0,"599":1,"600":0,"601":0,"602":1,"603":0,"604":3,"605":2,"606":1,"607":1,"608":1,"609":1,"610":0,"611":0,"612":2,"613":0,"614":1,"615":1,"616":2,"617":1,"618":1,"619":1,"620":2,"621":1,"622":1,"623":1,"624":0,"625":0,"626":1,"627":1,"628":1,"629":2,"630":1,"631":0,"632":1,"633":1,"634":0,"635":1,"636":1,"637":1,"638":1,"639":1,"640":0,"641":0,"642":1,"643":1,"644":2,"645":1,"646":1,"647":2,"648":2,"649":2,"650":1,"651":1,"652":1,"653":1,"654":1,"655":1,"656":1,"657":1,"658":1,"659":1,"660":5,"661":1,"662":1,"663":1,"664":0,"665":1,"666":1,"667":4,"668":1,"669":0,"670":1,"671":1,"672":1,"673":1,"674":1,"675":0,"676":2,"677":2,"678":3,"679":1,"680":0,"681":1,"682":1,"683":1,"684":1,"685":1,"686":0,"687":1,"688":1,"689":1,"690":1,"691":0,"692":1,"693":2,"694":0,"695":3,"696":1,"697":1,"698":2,"699":0,"700":1,"701":1,"702":0,"703":0,"704":0,"705":0,"706":0,"707":1,"708":0,"709":1,"710":1,"711":1,"712":2,"713":0,"714":2,"715":1,"716":1,"717":1,"718":2,"719":1,"720":1,"721":1,"722":1,"723":1,"724":0,"725":1,"726":1,"727":0,"728":1,"729":1,"730":2,"731":1,"732":3,"733":1,"734":1,"735":1,"736":0,"737":1,"738":1,"739":1,"740":1,"741":1,"742":3,"743":1,"744":1,"745":1,"746":1,"747":1,"748":1,"749":0,"750":1,"751":2,"752":2,"753":2,"754":1,"755":1,"756":0,"757":2,"758":1,"759":2,"760":1,"761":1,"762":0,"763":0,"764":0,"765":1,"766":1,"767":1,"768":0,"769":3,"770":2,"771":2,"772":1,"773":1,"774":1,"775":1,"776":2,"777":1,"778":1,"779":1,"780":0,"781":1,"782":1,"783":1,"784":1,"785":1,"786":0,"787":1,"788":0,"789":1,"790":2,"791":1,"792":1,"793":0,"794":2,"795":1,"796":1,"797":1,"798":1,"799":1,"800":0,"801":4,"802":1,"803":1,"804":2,"805":1,"806":3,"807":0,"808":2,"809":1,"810":1,"811":1,"812":1,"813":1,"814":2,"815":1,"816":1,"817":2,"818":1,"819":2,"820":1,"821":0,"822":1,"823":1,"824":1,"825":2,"826":1,"827":4,"828":1,"829":1,"830":1,"831":1,"832":1,"833":1,"834":1,"835":1,"836":1,"837":2,"838":1,"839":1,"840":1,"841":1,"842":1,"843":0,"844":1,"845":2,"846":1,"847":0,"848":1,"849":1,"850":1,"851":1,"852":1,"853":2,"854":1,"855":1,"856":1,"857":1,"858":1,"859":1,"860":1,"861":3,"862":2,"863":1,"864":1,"865":1,"866":2,"867":1,"868":0,"869":0,"870":1,"871":2,"872":1,"873":0,"874":1,"875":1,"876":1,"877":0,"878":1,"879":1,"880":1,"881":1,"882":0,"883":1,"884":2,"885":1,"886":2,"887":0,"888":1,"889":3,"890":1},"# of votes":{"0":-2,"1":0,"2":0,"3":0,"4":0,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":2,"15":-1,"16":1,"17":0,"18":0,"19":1,"20":-1,"21":-1,"22":7,"23":0,"24":1,"25":0,"26":-1,"27":0,"28":1,"29":1,"30":1,"31":1,"32":1,"33":3,"34":0,"35":3,"36":0,"37":1,"38":1,"39":2,"40":0,"41":-1,"42":0,"43":-2,"44":0,"45":1,"46":2,"47":0,"48":2,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":-1,"57":1,"58":-1,"59":2,"60":0,"61":-5,"62":1,"63":0,"64":1,"65":1,"66":1,"67":0,"68":0,"69":1,"70":2,"71":1,"72":0,"73":0,"74":2,"75":0,"76":0,"77":3,"78":1,"79":0,"80":1,"81":0,"82":-2,"83":1,"84":1,"85":0,"86":2,"87":0,"88":0,"89":1,"90":0,"91":2,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":1,"102":1,"103":1,"104":0,"105":0,"106":-1,"107":7,"108":0,"109":3,"110":0,"111":1,"112":1,"113":1,"114":7,"115":0,"116":0,"117":-3,"118":0,"119":1,"120":2,"121":0,"122":0,"123":1,"124":8,"125":0,"126":1,"127":4,"128":0,"129":0,"130":0,"131":0,"132":0,"133":3,"134":0,"135":0,"136":1,"137":0,"138":2,"139":0,"140":2,"141":1,"142":0,"143":0,"144":0,"145":-3,"146":4,"147":0,"148":0,"149":9,"150":0,"151":1,"152":1,"153":1,"154":1,"155":2,"156":1,"157":0,"158":1,"159":0,"160":1,"161":0,"162":0,"163":0,"164":5,"165":1,"166":0,"167":3,"168":1,"169":0,"170":-1,"171":-1,"172":6,"173":1,"174":4,"175":0,"176":0,"177":3,"178":0,"179":0,"180":1,"181":5,"182":1,"183":0,"184":3,"185":-1,"186":0,"187":2,"188":1,"189":0,"190":0,"191":2,"192":1,"193":1,"194":0,"195":0,"196":0,"197":0,"198":8,"199":0,"200":0,"201":0,"202":0,"203":2,"204":1,"205":0,"206":10,"207":1,"208":0,"209":0,"210":1,"211":3,"212":1,"213":0,"214":1,"215":2,"216":2,"217":0,"218":1,"219":-1,"220":0,"221":3,"222":0,"223":6,"224":2,"225":0,"226":0,"227":3,"228":0,"229":0,"230":-2,"231":5,"232":4,"233":2,"234":0,"235":8,"236":1,"237":1,"238":-1,"239":-1,"240":11,"241":1,"242":2,"243":1,"244":0,"245":0,"246":-1,"247":-1,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":1,"255":5,"256":0,"257":0,"258":0,"259":0,"260":4,"261":1,"262":0,"263":-1,"264":0,"265":0,"266":1,"267":0,"268":1,"269":-1,"270":0,"271":0,"272":7,"273":0,"274":1,"275":0,"276":2,"277":2,"278":0,"279":2,"280":0,"281":1,"282":1,"283":0,"284":0,"285":-3,"286":1,"287":0,"288":4,"289":2,"290":2,"291":0,"292":1,"293":1,"294":0,"295":3,"296":0,"297":0,"298":1,"299":-4,"300":0,"301":1,"302":2,"303":1,"304":1,"305":1,"306":1,"307":1,"308":9,"309":0,"310":-1,"311":0,"312":0,"313":0,"314":1,"315":1,"316":0,"317":2,"318":0,"319":0,"320":3,"321":1,"322":-1,"323":2,"324":1,"325":0,"326":0,"327":1,"328":1,"329":2,"330":1,"331":1,"332":0,"333":3,"334":1,"335":0,"336":3,"337":1,"338":-2,"339":0,"340":0,"341":2,"342":1,"343":0,"344":0,"345":2,"346":0,"347":2,"348":0,"349":0,"350":-1,"351":-2,"352":10,"353":2,"354":2,"355":5,"356":3,"357":0,"358":0,"359":0,"360":1,"361":1,"362":1,"363":1,"364":4,"365":2,"366":0,"367":1,"368":1,"369":1,"370":1,"371":-2,"372":2,"373":3,"374":-3,"375":0,"376":1,"377":2,"378":3,"379":1,"380":1,"381":0,"382":0,"383":1,"384":1,"385":0,"386":0,"387":0,"388":1,"389":1,"390":0,"391":2,"392":1,"393":1,"394":0,"395":-3,"396":3,"397":0,"398":1,"399":1,"400":6,"401":0,"402":0,"403":0,"404":0,"405":3,"406":1,"407":0,"408":0,"409":0,"410":1,"411":0,"412":1,"413":-1,"414":1,"415":0,"416":0,"417":0,"418":0,"419":-1,"420":0,"421":5,"422":0,"423":0,"424":1,"425":1,"426":0,"427":3,"428":5,"429":0,"430":9,"431":1,"432":0,"433":1,"434":0,"435":0,"436":2,"437":2,"438":0,"439":0,"440":0,"441":3,"442":2,"443":0,"444":3,"445":0,"446":0,"447":-1,"448":0,"449":0,"450":0,"451":0,"452":3,"453":0,"454":0,"455":3,"456":1,"457":1,"458":0,"459":0,"460":2,"461":0,"462":1,"463":4,"464":8,"465":0,"466":2,"467":0,"468":2,"469":-2,"470":1,"471":2,"472":0,"473":3,"474":0,"475":0,"476":0,"477":0,"478":1,"479":2,"480":3,"481":-1,"482":0,"483":1,"484":0,"485":1,"486":7,"487":0,"488":0,"489":0,"490":0,"491":1,"492":0,"493":0,"494":1,"495":0,"496":0,"497":1,"498":4,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":1,"507":0,"508":0,"509":0,"510":0,"511":0,"512":-1,"513":1,"514":0,"515":2,"516":0,"517":2,"518":0,"519":0,"520":1,"521":0,"522":5,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":1,"530":0,"531":1,"532":4,"533":2,"534":5,"535":1,"536":0,"537":1,"538":0,"539":1,"540":0,"541":2,"542":0,"543":1,"544":1,"545":1,"546":1,"547":0,"548":1,"549":5,"550":0,"551":-1,"552":3,"553":1,"554":1,"555":0,"556":0,"557":-1,"558":1,"559":1,"560":2,"561":2,"562":0,"563":2,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":3,"575":1,"576":0,"577":0,"578":0,"579":3,"580":5,"581":0,"582":0,"583":1,"584":2,"585":0,"586":0,"587":0,"588":0,"589":1,"590":0,"591":2,"592":1,"593":0,"594":0,"595":-1,"596":0,"597":0,"598":2,"599":1,"600":0,"601":0,"602":0,"603":0,"604":-2,"605":-1,"606":0,"607":2,"608":0,"609":1,"610":4,"611":0,"612":0,"613":1,"614":0,"615":0,"616":-1,"617":-1,"618":0,"619":1,"620":1,"621":0,"622":0,"623":0,"624":1,"625":0,"626":0,"627":2,"628":1,"629":0,"630":5,"631":1,"632":1,"633":2,"634":1,"635":2,"636":0,"637":1,"638":1,"639":0,"640":1,"641":1,"642":0,"643":1,"644":0,"645":3,"646":1,"647":-1,"648":0,"649":0,"650":1,"651":1,"652":1,"653":1,"654":1,"655":0,"656":0,"657":1,"658":3,"659":1,"660":6,"661":1,"662":2,"663":0,"664":0,"665":0,"666":0,"667":1,"668":1,"669":1,"670":0,"671":0,"672":1,"673":0,"674":0,"675":0,"676":2,"677":3,"678":8,"679":-2,"680":1,"681":0,"682":0,"683":0,"684":2,"685":0,"686":1,"687":0,"688":0,"689":1,"690":0,"691":1,"692":0,"693":5,"694":1,"695":2,"696":-1,"697":0,"698":1,"699":1,"700":0,"701":0,"702":2,"703":1,"704":1,"705":1,"706":1,"707":0,"708":0,"709":0,"710":-1,"711":0,"712":2,"713":1,"714":1,"715":1,"716":0,"717":0,"718":1,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":5,"726":-1,"727":2,"728":0,"729":1,"730":0,"731":0,"732":5,"733":1,"734":1,"735":1,"736":1,"737":0,"738":4,"739":1,"740":0,"741":0,"742":14,"743":0,"744":2,"745":2,"746":1,"747":0,"748":1,"749":0,"750":1,"751":0,"752":0,"753":0,"754":0,"755":-1,"756":9,"757":1,"758":2,"759":0,"760":2,"761":2,"762":3,"763":1,"764":1,"765":-1,"766":0,"767":0,"768":1,"769":4,"770":0,"771":1,"772":4,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":1,"780":1,"781":0,"782":0,"783":-1,"784":5,"785":-1,"786":0,"787":1,"788":2,"789":0,"790":2,"791":0,"792":1,"793":0,"794":0,"795":1,"796":0,"797":2,"798":0,"799":-2,"800":1,"801":2,"802":1,"803":2,"804":0,"805":-2,"806":3,"807":1,"808":2,"809":3,"810":-1,"811":0,"812":0,"813":-1,"814":1,"815":0,"816":1,"817":3,"818":1,"819":-1,"820":0,"821":0,"822":0,"823":4,"824":1,"825":2,"826":1,"827":10,"828":0,"829":0,"830":0,"831":1,"832":-2,"833":1,"834":0,"835":0,"836":0,"837":1,"838":0,"839":2,"840":2,"841":-1,"842":1,"843":1,"844":1,"845":1,"846":0,"847":0,"848":0,"849":0,"850":-1,"851":7,"852":1,"853":0,"854":-2,"855":0,"856":0,"857":1,"858":-2,"859":-1,"860":0,"861":3,"862":1,"863":-1,"864":0,"865":1,"866":-1,"867":0,"868":1,"869":2,"870":0,"871":0,"872":0,"873":0,"874":1,"875":1,"876":0,"877":0,"878":0,"879":-1,"880":1,"881":0,"882":1,"883":0,"884":0,"885":0,"886":0,"887":0,"888":1,"889":6,"890":0},"# of views":{"0":"136","1":"448","2":"284","3":"267","4":"2k","5":"2k","6":"354","7":"930","8":"851","9":"340","10":"420","11":"69","12":"215","13":"186","14":"634","15":"467","16":"73","17":"166","18":"208","19":"1k","20":"246","21":"2k","22":"3k","23":"102","24":"2k","25":"1k","26":"95","27":"2k","28":"1k","29":"83","30":"399","31":"194","32":"3k","33":"1k","34":"182","35":"2k","36":"346","37":"31","38":"1k","39":"4k","40":"23","41":"218","42":"96","43":"101","44":"321","45":"464","46":"98","47":"400","48":"2k","49":"208","50":"96","51":"29","52":"84","53":"191","54":"666","55":"1k","56":"200","57":"101","58":"439","59":"1k","60":"111","61":"216","62":"193","63":"38","64":"715","65":"970","66":"190","67":"200","68":"300","69":"1k","70":"432","71":"84","72":"113","73":"185","74":"263","75":"323","76":"53","77":"4k","78":"87","79":"116","80":"754","81":"63","82":"90","83":"809","84":"416","85":"307","86":"40","87":"61","88":"24","89":"19","90":"72","91":"867","92":"2k","93":"365","94":"1k","95":"106","96":"130","97":"463","98":"493","99":"457","100":"466","101":"3k","102":"302","103":"3k","104":"226","105":"1k","106":"620","107":"3k","108":"617","109":"2k","110":"1k","111":"724","112":"58","113":"113","114":"2k","115":"61","116":"431","117":"38","118":"604","119":"2k","120":"156","121":"4k","122":"2k","123":"408","124":"332","125":"410","126":"171","127":"772","128":"113","129":"56","130":"305","131":"1k","132":"17","133":"6k","134":"371","135":"1k","136":"605","137":"157","138":"1k","139":"104","140":"5k","141":"288","142":"5k","143":"247","144":"3k","145":"171","146":"393","147":"44","148":"383","149":"6k","150":"200","151":"2k","152":"2k","153":"2k","154":"351","155":"3k","156":"41","157":"89","158":"92","159":"241","160":"265","161":"718","162":"86","163":"82","164":"2k","165":"99","166":"36","167":"5k","168":"70","169":"30","170":"44","171":"1k","172":"5k","173":"227","174":"632","175":"1k","176":"470","177":"1k","178":"61","179":"128","180":"139","181":"1k","182":"292","183":"142","184":"2k","185":"37","186":"73","187":"145","188":"544","189":"122","190":"223","191":"212","192":"229","193":"2k","194":"200","195":"387","196":"742","197":"144","198":"2k","199":"281","200":"189","201":"522","202":"319","203":"1k","204":"1k","205":"116","206":"11k","207":"107","208":"808","209":"111","210":"65","211":"2k","212":"1k","213":"623","214":"177","215":"1k","216":"2k","217":"276","218":"177","219":"539","220":"644","221":"1k","222":"102","223":"7k","224":"189","225":"493","226":"198","227":"291","228":"426","229":"218","230":"35","231":"619","232":"5k","233":"929","234":"571","235":"4k","236":"120","237":"375","238":"363","239":"1k","240":"7k","241":"148","242":"344","243":"5k","244":"325","245":"546","246":"2k","247":"243","248":"744","249":"2k","250":"267","251":"62","252":"3k","253":"840","254":"775","255":"2k","256":"371","257":"205","258":"227","259":"350","260":"2k","261":"728","262":"513","263":"3k","264":"448","265":"298","266":"323","267":"56","268":"259","269":"382","270":"101","271":"130","272":"7k","273":"136","274":"1k","275":"85","276":"279","277":"1k","278":"405","279":"210","280":"77","281":"1k","282":"230","283":"85","284":"630","285":"130","286":"468","287":"1k","288":"724","289":"108","290":"557","291":"646","292":"59","293":"381","294":"124","295":"318","296":"160","297":"2k","298":"107","299":"707","300":"983","301":"1k","302":"1k","303":"127","304":"84","305":"227","306":"1k","307":"602","308":"8k","309":"366","310":"91","311":"961","312":"197","313":"99","314":"397","315":"391","316":"202","317":"216","318":"1k","319":"4k","320":"483","321":"900","322":"70","323":"2k","324":"442","325":"251","326":"172","327":"271","328":"2k","329":"1k","330":"27","331":"658","332":"26","333":"7k","334":"104","335":"115","336":"1k","337":"2k","338":"308","339":"148","340":"226","341":"122","342":"3k","343":"2k","344":"78","345":"1k","346":"60","347":"195","348":"502","349":"1k","350":"42","351":"940","352":"8k","353":"267","354":"3k","355":"5k","356":"163","357":"16","358":"1k","359":"102","360":"110","361":"706","362":"539","363":"583","364":"3k","365":"281","366":"351","367":"373","368":"295","369":"148","370":"98","371":"260","372":"1k","373":"10k","374":"355","375":"97","376":"327","377":"480","378":"344","379":"77","380":"834","381":"761","382":"147","383":"3k","384":"759","385":"154","386":"72","387":"128","388":"1k","389":"2k","390":"359","391":"2k","392":"411","393":"622","394":"618","395":"87","396":"612","397":"2k","398":"357","399":"458","400":"9k","401":"283","402":"110","403":"1k","404":"139","405":"251","406":"590","407":"116","408":"181","409":"743","410":"296","411":"1k","412":"570","413":"191","414":"116","415":"1k","416":"149","417":"2k","418":"127","419":"257","420":"2k","421":"6k","422":"250","423":"821","424":"232","425":"551","426":"321","427":"641","428":"3k","429":"1k","430":"11k","431":"1k","432":"79","433":"80","434":"38","435":"57","436":"4k","437":"695","438":"1k","439":"4k","440":"922","441":"2k","442":"298","443":"52","444":"511","445":"1k","446":"4k","447":"36","448":"1k","449":"90","450":"221","451":"920","452":"2k","453":"959","454":"191","455":"1k","456":"368","457":"121","458":"77","459":"216","460":"549","461":"112","462":"702","463":"10k","464":"3k","465":"95","466":"261","467":"3k","468":"80","469":"261","470":"367","471":"66","472":"188","473":"10k","474":"478","475":"637","476":"100","477":"330","478":"554","479":"357","480":"2k","481":"947","482":"102","483":"2k","484":"439","485":"181","486":"25k","487":"23","488":"68","489":"779","490":"73","491":"674","492":"965","493":"587","494":"151","495":"215","496":"1k","497":"783","498":"3k","499":"816","500":"18","501":"85","502":"179","503":"259","504":"1k","505":"175","506":"105","507":"229","508":"261","509":"214","510":"21","511":"551","512":"172","513":"620","514":"40","515":"132","516":"151","517":"146","518":"83","519":"4k","520":"229","521":"54","522":"3k","523":"65","524":"88","525":"940","526":"686","527":"1k","528":"70","529":"650","530":"71","531":"71","532":"4k","533":"3k","534":"2k","535":"308","536":"537","537":"481","538":"659","539":"427","540":"32","541":"584","542":"170","543":"831","544":"625","545":"159","546":"314","547":"61","548":"210","549":"2k","550":"149","551":"57","552":"2k","553":"1k","554":"61","555":"209","556":"241","557":"789","558":"156","559":"28","560":"4k","561":"1k","562":"153","563":"228","564":"142","565":"104","566":"1k","567":"596","568":"452","569":"4k","570":"56","571":"54","572":"231","573":"102","574":"9k","575":"490","576":"490","577":"86","578":"286","579":"682","580":"2k","581":"671","582":"50","583":"95","584":"414","585":"982","586":"83","587":"111","588":"2k","589":"255","590":"36","591":"544","592":"379","593":"605","594":"51","595":"35","596":"607","597":"2k","598":"178","599":"246","600":"153","601":"65","602":"1k","603":"290","604":"75","605":"147","606":"286","607":"2k","608":"1k","609":"379","610":"519","611":"812","612":"244","613":"212","614":"451","615":"1k","616":"94","617":"252","618":"285","619":"2k","620":"3k","621":"37","622":"1k","623":"4k","624":"684","625":"29","626":"4k","627":"4k","628":"101","629":"1k","630":"4k","631":"123","632":"388","633":"2k","634":"395","635":"488","636":"584","637":"989","638":"1k","639":"7k","640":"203","641":"465","642":"50","643":"367","644":"932","645":"1k","646":"205","647":"379","648":"3k","649":"149","650":"1k","651":"193","652":"2k","653":"217","654":"363","655":"32","656":"524","657":"441","658":"11k","659":"308","660":"3k","661":"4k","662":"4k","663":"118","664":"92","665":"355","666":"33","667":"115","668":"2k","669":"285","670":"2k","671":"133","672":"178","673":"74","674":"665","675":"31","676":"2k","677":"59","678":"17k","679":"67","680":"42","681":"244","682":"1k","683":"520","684":"175","685":"495","686":"77","687":"754","688":"44","689":"2k","690":"826","691":"159","692":"698","693":"5k","694":"123","695":"1k","696":"127","697":"31","698":"655","699":"94","700":"51","701":"523","702":"186","703":"1k","704":"9k","705":"78","706":"1k","707":"68","708":"83","709":"612","710":"647","711":"199","712":"444","713":"505","714":"1k","715":"544","716":"355","717":"189","718":"1k","719":"86","720":"83","721":"54","722":"59","723":"138","724":"86","725":"2k","726":"115","727":"303","728":"70","729":"690","730":"3k","731":"2k","732":"14k","733":"6k","734":"682","735":"2k","736":"94","737":"232","738":"187","739":"500","740":"1k","741":"301","742":"6k","743":"69","744":"2k","745":"646","746":"298","747":"58","748":"247","749":"502","750":"2k","751":"175","752":"527","753":"596","754":"71","755":"60","756":"6k","757":"96","758":"2k","759":"1k","760":"293","761":"3k","762":"57","763":"490","764":"983","765":"114","766":"3k","767":"161","768":"4k","769":"6k","770":"2k","771":"2k","772":"915","773":"42","774":"257","775":"1k","776":"863","777":"205","778":"438","779":"303","780":"134","781":"24","782":"123","783":"254","784":"832","785":"213","786":"71","787":"1k","788":"298","789":"609","790":"4k","791":"115","792":"107","793":"171","794":"279","795":"308","796":"142","797":"239","798":"1k","799":"1k","800":"105","801":"2k","802":"65","803":"1k","804":"4k","805":"36","806":"665","807":"1k","808":"102","809":"273","810":"94","811":"365","812":"130","813":"917","814":"800","815":"45","816":"385","817":"558","818":"122","819":"202","820":"2k","821":"32","822":"461","823":"725","824":"1k","825":"1k","826":"2k","827":"671","828":"50","829":"176","830":"152","831":"63","832":"540","833":"55","834":"49","835":"400","836":"1k","837":"551","838":"210","839":"123","840":"209","841":"35","842":"61","843":"291","844":"642","845":"2k","846":"28","847":"358","848":"50","849":"60","850":"227","851":"3k","852":"939","853":"861","854":"200","855":"62","856":"399","857":"62","858":"56","859":"472","860":"2k","861":"1k","862":"985","863":"61","864":"2k","865":"108","866":"265","867":"158","868":"39","869":"959","870":"27","871":"189","872":"772","873":"42","874":"156","875":"40","876":"412","877":"412","878":"486","879":"21","880":"440","881":"4k","882":"78","883":"126","884":"4k","885":"220","886":"550","887":"485","888":"165","889":"11k","890":"101"},"Avatar":{"0":"https:\/\/i.stack.imgur.com\/BN4Pi.jpg?s=32&g=1","1":"https:\/\/www.gravatar.com\/avatar\/3d854eecef765a69ee3b6d7902bcfe03?s=32&d=identicon&r=PG&f=1","2":"https:\/\/www.gravatar.com\/avatar\/287d5fdef990ac6c65ddd888e5bbb4e5?s=32&d=identicon&r=PG&f=1","3":"https:\/\/lh6.googleusercontent.com\/-vfJS_hU5aE0\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmH9NgR38iuwE8UUPtitIFFbRw0sw\/s96-c\/photo.jpg?sz=32","4":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgVJJrRAeR2tnw79EBmOM0Ph6aS6NdjT29dOLs8IQ=k-s32","5":"https:\/\/i.stack.imgur.com\/ZcM92.jpg?s=32&g=1","6":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJygAuhFVEeSQvoBOidqm4flrB0YJelgTWynDfrj=k-s32","7":"https:\/\/i.stack.imgur.com\/ULqMW.jpg?s=32&g=1","8":"https:\/\/www.gravatar.com\/avatar\/36f9ea353a68bcf7cb7944ccb312a305?s=32&d=identicon&r=PG&f=1","9":"https:\/\/www.gravatar.com\/avatar\/aa3d5dfccceadd4faad8299ece789435?s=32&d=identicon&r=PG","10":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","11":"https:\/\/lh3.googleusercontent.com\/-XdUIqdMkCWA\/AAAAAAAAAAI\/AAAAAAAAAAA\/4252rscbv5M\/photo.jpg?sz=32","12":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgS5nOECfMISmSrKYj1aqdT6auvw432C_h7R7RBVw=k-s32","13":"https:\/\/www.gravatar.com\/avatar\/a0467b037c2d4c858e4b702f04b64381?s=32&d=identicon&r=PG&f=1","14":"https:\/\/graph.facebook.com\/1973099166192651\/picture?type=large","15":"https:\/\/www.gravatar.com\/avatar\/1d95bf68a0b437b36450e18b08f6ef71?s=32&d=identicon&r=PG&f=1","16":"https:\/\/lh3.googleusercontent.com\/-aHPKCI87RxM\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAKWJJNwqoD95OTiOTF23OrI8OFc17g_8w\/photo.jpg?sz=32","17":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwocPZKuxwu4UKO8maYFY7O_3j71XEXnxm-gBxc=k-s32","18":"https:\/\/www.gravatar.com\/avatar\/deeeea3a547b68c34b2dd180e25809c5?s=32&d=identicon&r=PG&f=1","19":"https:\/\/www.gravatar.com\/avatar\/e0b953fcd27ec251bb04a57858db227e?s=32&d=identicon&r=PG","20":"https:\/\/www.gravatar.com\/avatar\/c59c6f90871043db9f3ddd88e6deaeae?s=32&d=identicon&r=PG","21":"https:\/\/lh4.googleusercontent.com\/-PkpZDeMIebk\/AAAAAAAAAAI\/AAAAAAAAAME\/tFYTD1w9wkk\/photo.jpg?sz=32","22":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","23":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gj5cGCrAxY-16CJMVuncq_2QoXm6rTq5ovDP4waNg=k-s32","24":"https:\/\/lh4.googleusercontent.com\/-r71pQj0yWrM\/AAAAAAAAAAI\/AAAAAAAAA4w\/uqdw_pVndNM\/photo.jpg?sz=32","25":"https:\/\/www.gravatar.com\/avatar\/df63615b1728c096f2f78b8183b359f4?s=32&d=identicon&r=PG&f=1","26":"https:\/\/lh3.googleusercontent.com\/-9IOTZUznqOI\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclalTyYjieCTJBWIO9_FAH3Fc0Nsg\/photo.jpg?sz=32","27":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gj05ccJ_gYhG-HriAJKQYPuPvfvWOEWISjOImxDaw=k-s32","28":"https:\/\/www.gravatar.com\/avatar\/aa3d5dfccceadd4faad8299ece789435?s=32&d=identicon&r=PG","29":"https:\/\/graph.facebook.com\/100002701180090\/picture?type=large","30":"https:\/\/lh5.googleusercontent.com\/-Yln3XGcadNg\/AAAAAAAAAAI\/AAAAAAAAAJI\/la2kcIWq7jI\/photo.jpg?sz=32","31":"https:\/\/www.gravatar.com\/avatar\/ff66d9e58c3ea7f8d049c5b8bd9aac2c?s=32&d=identicon&r=PG","32":"https:\/\/www.gravatar.com\/avatar\/6cb6a0e1cb2b4ac0a507484ecde28b51?s=32&d=identicon&r=PG&f=1","33":"https:\/\/lh6.googleusercontent.com\/-Oy95z8fUwg4\/AAAAAAAAAAI\/AAAAAAAAF9A\/jameLSlcm8s\/photo.jpg?sz=32","34":"https:\/\/www.gravatar.com\/avatar\/3d854eecef765a69ee3b6d7902bcfe03?s=32&d=identicon&r=PG&f=1","35":"https:\/\/www.gravatar.com\/avatar\/0111ca12c34666ed69028902f37e5000?s=32&d=identicon&r=PG&f=1","36":"https:\/\/i.stack.imgur.com\/mgxkC.jpg?s=32&g=1","37":"https:\/\/lh5.googleusercontent.com\/-UjxkeydMdHs\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAKWJJP96a_f-h49z6KY3_Cmvl4D11B1Vg\/photo.jpg?sz=32","38":"https:\/\/www.gravatar.com\/avatar\/555a17733195161568d95579f555b22e?s=32&d=identicon&r=PG&f=1","39":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgxCfB7nK13mxZ6KQCLEvmq-3k4QPLfFFss4rjFQQ=k-s32","40":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyWXEkn02c167Vz6bpJLTZFHYVVq6iXR8PjHnJb=k-s32","41":"https:\/\/www.gravatar.com\/avatar\/b3440424e15b99705703d7b243868b11?s=32&d=identicon&r=PG","42":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GibWmSMHax-7d2iFVJo5PehRD9GEE6rC-b-6gvdmg=k-s32","43":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzDodpw6WwlcrPDMRJSXLSdkZRDvqsDb2LtSSv9=k-s32","44":"https:\/\/www.gravatar.com\/avatar\/70147bac51c6c5979177c9401b0e7f6b?s=32&d=identicon&r=PG&f=1","45":"https:\/\/www.gravatar.com\/avatar\/e2876c04f5825d849301d4804051c1af?s=32&d=identicon&r=PG&f=1","46":"https:\/\/www.gravatar.com\/avatar\/dc2fea7ba2fde0e04ea94edaf9bb5716?s=32&d=identicon&r=PG&f=1","47":"https:\/\/lh3.googleusercontent.com\/-Xg183TJVIvo\/AAAAAAAAAAI\/AAAAAAAAHbQ\/mic2azQbD-k\/photo.jpg?sz=32","48":"https:\/\/i.stack.imgur.com\/79e5C.png?s=32&g=1","49":"https:\/\/www.gravatar.com\/avatar\/a94c378aa98f02e457530203fb76954a?s=32&d=identicon&r=PG&f=1","50":"https:\/\/www.gravatar.com\/avatar\/221244e2f99ea068025776e02e2c89a7?s=32&d=identicon&r=PG&f=1","51":"https:\/\/www.gravatar.com\/avatar\/646d83f81b16912e6983cb4bab871cdd?s=32&d=identicon&r=PG&f=1","52":"https:\/\/www.gravatar.com\/avatar\/6e315c21eb8a949167d722b52d7e921d?s=32&d=identicon&r=PG","53":"https:\/\/www.gravatar.com\/avatar\/05154acab4d5ef72af96478b212391b1?s=32&d=identicon&r=PG&f=1","54":"https:\/\/www.gravatar.com\/avatar\/991d41f18ad79a5224b5514ee2ba9fc2?s=32&d=identicon&r=PG&f=1","55":"https:\/\/graph.facebook.com\/1692450554338651\/picture?type=large","56":"https:\/\/lh3.googleusercontent.com\/a-\/AAuE7mDRQYgFQzI0BnZCWT4-rXpOC1ftgdfysHBaporb-A=k-s32","57":"https:\/\/www.gravatar.com\/avatar\/5e175feb0a9092abd02950f4973d376a?s=32&d=identicon&r=PG","58":"https:\/\/www.gravatar.com\/avatar\/683a2f3c578b0f16cd642f56f00da994?s=32&d=identicon&r=PG","59":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzMW52Y20K65VVhLTpGORiEy4mk2aeyAVB4ZhMJ=k-s32","60":"https:\/\/lh4.googleusercontent.com\/-idmnScMsfoQ\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAN31DWq9I1OJWXcIP5Lg3WxRZHKshkn4g\/mo\/photo.jpg?sz=32","61":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJz2QU2tyuvj6D8hXF3rbUNpviRCQGianko1TVSQ=k-s32","62":"https:\/\/www.gravatar.com\/avatar\/6da30dcbed98fab0731ed93b9386fe54?s=32&d=identicon&r=PG","63":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgEwHgRw68liBJpBTVB7tqrRQDl9QV7Ufe6MLMB=k-s32","64":"https:\/\/i.stack.imgur.com\/o1pFt.png?s=32&g=1","65":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzG3oqA2HPYSgIoYFyJ-5SeufPNlj6pMCBDhbuE=k-s32","66":"https:\/\/www.gravatar.com\/avatar\/c3b1c4b2e6d6e8d3d8d4b82c28879578?s=32&d=identicon&r=PG&f=1","67":"https:\/\/www.gravatar.com\/avatar\/e1249775c11fa6b0c82f0f5f3c11e33e?s=32&d=identicon&r=PG&f=1","68":"https:\/\/www.gravatar.com\/avatar\/33a5676a06fb20b857ea025296b5ed85?s=32&d=identicon&r=PG","69":"https:\/\/www.gravatar.com\/avatar\/5a076dd9490cd041bbf3cd5ee5a14a0f?s=32&d=identicon&r=PG&f=1","70":"https:\/\/www.gravatar.com\/avatar\/791a6df8201f3f78a86472a3e20b42f2?s=32&d=identicon&r=PG&f=1","71":"https:\/\/i.stack.imgur.com\/5xDM2.png?s=32&g=1","72":"https:\/\/lh4.googleusercontent.com\/-DwUidX7F6V0\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucm16amAjveB4hLnQa03gokgd6hSHw\/photo.jpg?sz=32","73":"https:\/\/www.gravatar.com\/avatar\/3e2b46ff6d5c0e15abf489541d85007e?s=32&d=identicon&r=PG&f=1","74":"https:\/\/graph.facebook.com\/2630406910335910\/picture?type=large","75":"https:\/\/i.stack.imgur.com\/7Mq90.jpg?s=32&g=1","76":"https:\/\/i.stack.imgur.com\/HH42l.png?s=32&g=1","77":"https:\/\/www.gravatar.com\/avatar\/8eb688f32996100dc0f3c278c5c51f0e?s=32&d=identicon&r=PG&f=1","78":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjJaQDHOoWSsaYBrmEbOjhF8ifWA8F5dEAZbe6YNg=k-s32","79":"https:\/\/lh4.googleusercontent.com\/-IY3dvyoUo0o\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnpuB2SSIjZQQXAkWKPCf_WllBR6Q\/photo.jpg?sz=32","80":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgqVlDRmvXlFifTIC7llc9FpMnxHRyYvzbFUC_W=k-s32","81":"https:\/\/lh6.googleusercontent.com\/-IRGyrBJ-Zks\/AAAAAAAAAAI\/AAAAAAAAAAA\/AKxrwcYWKrNEPQ9oVipqaDsZ8AWYiVn3RQ\/mo\/photo.jpg?sz=32","82":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","83":"https:\/\/www.gravatar.com\/avatar\/3e7720ef5cf05214b18f508ef8b5f20f?s=32&d=identicon&r=PG","84":"https:\/\/lh4.googleusercontent.com\/-N9Tp9OLd22E\/AAAAAAAAAAI\/AAAAAAAADuE\/xKhoxEo3Zrc\/photo.jpg?sz=32","85":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjjN47_-onBWdvFMcIglYDkHbmIP8D0ldczCoMdMg=k-s32","86":"https:\/\/i.stack.imgur.com\/jZr6E.jpg?s=32&g=1","87":"https:\/\/i.stack.imgur.com\/KIFfC.jpg?s=32&g=1","88":"https:\/\/i.stack.imgur.com\/KIFfC.jpg?s=32&g=1","89":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJz3v30GBkSRtu_S2sGRMENiDdmF19FxW_rnO5wS=k-s32","90":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","91":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","92":"https:\/\/i.stack.imgur.com\/A45Sw.png?s=32&g=1","93":"https:\/\/www.gravatar.com\/avatar\/b7f1ccaced9fbdd4aaf944475d0c70a3?s=32&d=identicon&r=PG","94":"https:\/\/lh3.googleusercontent.com\/-YIvFg1Pmvqs\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rcYtsXu4w9nUpLlpRGxjiJ0SH9fXg\/mo\/photo.jpg?sz=32","95":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","96":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GivLdQz28LXXJBPiRfyy1fxS5YIfNOk-lXRtuRExg=k-s32","97":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","98":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","99":"https:\/\/www.gravatar.com\/avatar\/800935445adf837951d26d887b12d650?s=32&d=identicon&r=PG","100":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","101":"https:\/\/www.gravatar.com\/avatar\/6453f47b6ca7c557da307aa381e815d7?s=32&d=identicon&r=PG&f=1","102":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","103":"https:\/\/lh6.googleusercontent.com\/-zfh0juzG8oc\/AAAAAAAAAAI\/AAAAAAAAAn0\/sYKSCLq1vIA\/photo.jpg?sz=32","104":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","105":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","106":"https:\/\/www.gravatar.com\/avatar\/8c65e46906e62eac4cdcb548378403f1?s=32&d=identicon&r=PG&f=1","107":"https:\/\/www.gravatar.com\/avatar\/46f414ad3d60e2caa5bf0a42f1d52a75?s=32&d=identicon&r=PG&f=1","108":"https:\/\/www.gravatar.com\/avatar\/ebcd98f1145c203f4551c183bf21134a?s=32&d=identicon&r=PG&f=1","109":"https:\/\/lh5.googleusercontent.com\/-CGwvxi_Og4Q\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclPy37y2rkrNgfQaXCIemHNXexN5g\/photo.jpg?sz=32","110":"https:\/\/www.gravatar.com\/avatar\/c77e157c14d7693e8f7f23f93a03fa86?s=32&d=identicon&r=PG","111":"https:\/\/www.gravatar.com\/avatar\/7c6509d655ebf3534a6a8f1d5c61141e?s=32&d=identicon&r=PG&f=1","112":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","113":"https:\/\/i.stack.imgur.com\/DDTJQ.jpg?s=32&g=1","114":"https:\/\/www.gravatar.com\/avatar\/b90fac2e512cfa5c6a810955dfd9ae47?s=32&d=identicon&r=PG&f=1","115":"https:\/\/www.gravatar.com\/avatar\/1a651222120bd130ea24722187e9450d?s=32&d=identicon&r=PG","116":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","117":"https:\/\/www.gravatar.com\/avatar\/39375cb7a86a17c5b92b79d0fee6d169?s=32&d=identicon&r=PG&f=1","118":"https:\/\/www.gravatar.com\/avatar\/b6e5b72a74979add400934f6817e5b2c?s=32&d=identicon&r=PG","119":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwn9IYAP-E8zjhgSQIDj7Aqp-ucgh0g7FbErRKO=k-s32","120":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","121":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","122":"https:\/\/www.gravatar.com\/avatar\/ad28e78e14bd23bce7d4d4ef5df50da7?s=32&d=identicon&r=PG&f=1","123":"https:\/\/www.gravatar.com\/avatar\/fd60a4844baa9d26bb7eca5484dd9832?s=32&d=identicon&r=PG","124":"https:\/\/lh5.googleusercontent.com\/-E3NnhRzJ9r0\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3reO2fggFAeyNL_D4M_U-6wDGdSTag\/photo.jpg?sz=32","125":"https:\/\/www.gravatar.com\/avatar\/6a102d25257fd0ef7cb6760bfcb35fe5?s=32&d=identicon&r=PG&f=1","126":"https:\/\/i.stack.imgur.com\/vyt94.png?s=32&g=1","127":"https:\/\/i.stack.imgur.com\/dpMjU.jpg?s=32&g=1","128":"https:\/\/lh4.googleusercontent.com\/-IY3dvyoUo0o\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnpuB2SSIjZQQXAkWKPCf_WllBR6Q\/photo.jpg?sz=32","129":"https:\/\/www.gravatar.com\/avatar\/4fa8d7bf326146cc22b6285fb8789d4f?s=32&d=identicon&r=PG&f=1","130":"https:\/\/www.gravatar.com\/avatar\/a2ac78fe7434fd99ce7a484a47e7c337?s=32&d=identicon&r=PG&f=1","131":"https:\/\/www.gravatar.com\/avatar\/3264bb3ff217c58779e30c9a159109c7?s=32&d=identicon&r=PG","132":"https:\/\/lh5.googleusercontent.com\/-yN-Z5udXBRI\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnwIqJXFtIFzNrxekEDaHP6J1Y3xA\/s96-c\/photo.jpg?sz=32","133":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJx1U-3c7kn-ijNmo15yOwB3oAtEVc8K4_TMvOEZ=k-s32","134":"https:\/\/www.gravatar.com\/avatar\/d6908f049c52e111e2143f768b152d19?s=32&d=identicon&r=PG","135":"https:\/\/www.gravatar.com\/avatar\/62982fea5b831ffdb5a41b7d1aa3bdc0?s=32&d=identicon&r=PG&f=1","136":"https:\/\/www.gravatar.com\/avatar\/654945f3a1dc1bf35b2d9a414e8589a3?s=32&d=identicon&r=PG","137":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiP74U_0QM54hvrdMwa245blP7iE-RTqvzxtNOQgQ=k-s32","138":"https:\/\/i.stack.imgur.com\/X0Xyx.jpg?s=32&g=1","139":"https:\/\/www.gravatar.com\/avatar\/62982fea5b831ffdb5a41b7d1aa3bdc0?s=32&d=identicon&r=PG&f=1","140":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyRRLMQ4BZWPMUBSG4hyNmMIdh-76Rwy0cZATYd=k-s32","141":"https:\/\/www.gravatar.com\/avatar\/ad44a041252c316ba3abc7b1978d2107?s=32&d=identicon&r=PG&f=1","142":"https:\/\/www.gravatar.com\/avatar\/eea96eaa26987848a090c3f7dfebe00b?s=32&d=identicon&r=PG&f=1","143":"https:\/\/lh5.googleusercontent.com\/-L5EqCx41Ygo\/AAAAAAAAAAI\/AAAAAAAAAJM\/Nd-TtXr-2YQ\/photo.jpg?sz=32","144":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgfIKZvakWIOGZP-NiGgOrXxXNR1CiyAdS4zN2w7A=k-s32","145":"https:\/\/www.gravatar.com\/avatar\/f131efd47fc7f86ea9824ad530e07e3c?s=32&d=identicon&r=PG&f=1","146":"https:\/\/i.stack.imgur.com\/OWd2g.png?s=32&g=1","147":"https:\/\/i.stack.imgur.com\/JqqP4.png?s=32&g=1","148":"https:\/\/i.stack.imgur.com\/ixorG.jpg?s=32&g=1","149":"https:\/\/i.stack.imgur.com\/X9QpN.jpg?s=32&g=1","150":"https:\/\/www.gravatar.com\/avatar\/fa2cc4fb562aa85256d147bb8cd47ff9?s=32&d=identicon&r=PG","151":"https:\/\/www.gravatar.com\/avatar\/d49fd0477390b055d4fa331af801ee7d?s=32&d=identicon&r=PG","152":"https:\/\/i.stack.imgur.com\/A45Sw.png?s=32&g=1","153":"https:\/\/lh5.googleusercontent.com\/-AnTxbXPRqVM\/AAAAAAAAAAI\/AAAAAAAAAJc\/-dscZmHprok\/photo.jpg?sz=32","154":"https:\/\/www.gravatar.com\/avatar\/ebcd98f1145c203f4551c183bf21134a?s=32&d=identicon&r=PG&f=1","155":"https:\/\/graph.facebook.com\/683824270\/picture?type=large","156":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxq-hUeTgYRkF0BwQqffi1A1_BpEWMwcIMhgA2y=k-s32","157":"https:\/\/lh4.googleusercontent.com\/-IY3dvyoUo0o\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnpuB2SSIjZQQXAkWKPCf_WllBR6Q\/photo.jpg?sz=32","158":"https:\/\/i.stack.imgur.com\/fHowY.jpg?s=32&g=1","159":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Giue1blEHpP0G6M37p8lNWtNr6UT0wmBQd-5Y03=k-s32","160":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiVnXwMCRn6R7-lDKtPvPwWmZuB69JcypLscTpG=k-s32","161":"https:\/\/www.gravatar.com\/avatar\/9be37a3348950129d436f2c9c2f125ff?s=32&d=identicon&r=PG&f=1","162":"https:\/\/i.stack.imgur.com\/C1qQQ.jpg?s=32&g=1","163":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","164":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjUBkXCuFRSjJ-mXzuaEIoYJIUj67wt5XhWK3pU=k-s32","165":"https:\/\/www.gravatar.com\/avatar\/85fe4fb5a676b6b2f5afce5f63ce4f03?s=32&d=identicon&r=PG","166":"https:\/\/www.gravatar.com\/avatar\/a03c5959ca798f5ceebd147bf41a7eb4?s=32&d=identicon&r=PG&f=1","167":"https:\/\/www.gravatar.com\/avatar\/6f715aaaf0ea628b3f205a5e1cb1dc72?s=32&d=identicon&r=PG","168":"https:\/\/www.gravatar.com\/avatar\/58f86c627aaaffa73935dd28da619e33?s=32&d=identicon&r=PG","169":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gjj1uXNiGXdV4YKigNwyM0qGSMOldxEm0W3wBhWkXo=k-s32","170":"https:\/\/www.gravatar.com\/avatar\/725913fc520f96f6dfd3734ca802c6bc?s=32&d=identicon&r=PG&f=1","171":"https:\/\/www.gravatar.com\/avatar\/8d2a18cfa8080cdd57d524a666ef36d8?s=32&d=identicon&r=PG&f=1","172":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJw-rqjHgat7sBCEMdKZC1ngZXL0BQtsvxnUiqne=k-s32","173":"https:\/\/graph.facebook.com\/274050461323976\/picture?type=large","174":"https:\/\/i.stack.imgur.com\/lDH5R.jpg?s=32&g=1","175":"https:\/\/i.stack.imgur.com\/fGRSg.jpg?s=32&g=1","176":"https:\/\/i.stack.imgur.com\/MdkFA.jpg?s=32&g=1","177":"https:\/\/i.stack.imgur.com\/SA79k.jpg?s=32&g=1","178":"https:\/\/i.stack.imgur.com\/8SJr6.jpg?s=32&g=1","179":"https:\/\/i.stack.imgur.com\/37nT4.jpg?s=32&g=1","180":"https:\/\/www.gravatar.com\/avatar\/5b2c4a94fe263877d9032c5b33620162?s=32&d=identicon&r=PG&f=1","181":"https:\/\/lh5.googleusercontent.com\/-AnTxbXPRqVM\/AAAAAAAAAAI\/AAAAAAAAAJc\/-dscZmHprok\/photo.jpg?sz=32","182":"https:\/\/i.stack.imgur.com\/udqib.jpg?s=32&g=1","183":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjCOANvYueZYEN1aFRwBG8BcnCC6DKo4G5BcBvUi3s=k-s32","184":"https:\/\/www.gravatar.com\/avatar\/ea05c4b76667e6f0b51fcafc90441b57?s=32&d=identicon&r=PG&f=1","185":"https:\/\/graph.facebook.com\/1484903612\/picture?type=large","186":"https:\/\/graph.facebook.com\/1751403301814932\/picture?type=large","187":"https:\/\/www.gravatar.com\/avatar\/ecc82d6073cdd8b5a59d649b9a0ac9b3?s=32&d=identicon&r=PG&f=1","188":"https:\/\/i.stack.imgur.com\/T0SMB.jpg?s=32&g=1","189":"https:\/\/www.gravatar.com\/avatar\/eb364a72ad01a79bee2b1fe6b77dd0f0?s=32&d=identicon&r=PG&f=1","190":"https:\/\/lh6.googleusercontent.com\/-3l0OsMqeTp0\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rcn2gb-mVBqk6dfQYcNeB8wC8J8vQ\/photo.jpg?sz=32","191":"https:\/\/lh3.googleusercontent.com\/-MihrxghnG_o\/AAAAAAAAAAI\/AAAAAAAAAxE\/_Jt34wfiFkQ\/photo.jpg?sz=32","192":"https:\/\/lh4.googleusercontent.com\/-IY3dvyoUo0o\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnpuB2SSIjZQQXAkWKPCf_WllBR6Q\/photo.jpg?sz=32","193":"https:\/\/lh5.googleusercontent.com\/-4hMO9Jj3G_w\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rc3Gszge5zH5y25HAKQUVLffznAVA\/photo.jpg?sz=32","194":"https:\/\/i.stack.imgur.com\/R76Uj.jpg?s=32&g=1","195":"https:\/\/www.gravatar.com\/avatar\/892fe27ccee9cd556c1cdfe8767a9d9b?s=32&d=identicon&r=PG","196":"https:\/\/lh5.googleusercontent.com\/-r6J9TiNWQtM\/AAAAAAAAAAI\/AAAAAAAAADs\/ci5OuzYuJd8\/photo.jpg?sz=32","197":"https:\/\/www.gravatar.com\/avatar\/00eb220eba00eb7a1cf24a2af7f54e94?s=32&d=identicon&r=PG&f=1","198":"https:\/\/www.gravatar.com\/avatar\/8e5490ec01c20f3c5970c715eb11ee9f?s=32&d=identicon&r=PG&f=1","199":"https:\/\/www.gravatar.com\/avatar\/4c1f6be7499a9ccdd8b816d797d85443?s=32&d=identicon&r=PG&f=1","200":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gh6VKruhZdBc10bfJrtcpTMivGqEtaF86bQIUWG=k-s32","201":"https:\/\/www.gravatar.com\/avatar\/68e775439c125b8319d8a76fa9a39b6e?s=32&d=identicon&r=PG","202":"https:\/\/i.stack.imgur.com\/mep4Z.png?s=32&g=1","203":"https:\/\/i.stack.imgur.com\/HagdZ.jpg?s=32&g=1","204":"https:\/\/www.gravatar.com\/avatar\/9a5ba92ad73ca4dc0d7cd635c361adef?s=32&d=identicon&r=PG&f=1","205":"https:\/\/www.gravatar.com\/avatar\/bbeb6b48ad6c2323d676f164da096fa1?s=32&d=identicon&r=PG","206":"https:\/\/www.gravatar.com\/avatar\/b5303ae54c93f2d4b969ec416419b373?s=32&d=identicon&r=PG","207":"https:\/\/i.stack.imgur.com\/Tc3Np.png?s=32&g=1","208":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gg0wO4_hWaDxkPq90fDlY8RaazXdTGp1BDhVcDu=k-s32","209":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxq-hUeTgYRkF0BwQqffi1A1_BpEWMwcIMhgA2y=k-s32","210":"https:\/\/lh6.googleusercontent.com\/-1A1Hs7R77uY\/AAAAAAAAAAI\/AAAAAAAAACU\/UfuEFHlZlzg\/photo.jpg?sz=32","211":"https:\/\/i.stack.imgur.com\/efT7S.jpg?s=32&g=1","212":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgZDCnlurKJ7tYbVMGBfuW2huG9BIptH_KNsrGV=k-s32","213":"https:\/\/www.gravatar.com\/avatar\/8c205bb541ecbca271818414279d73f1?s=32&d=identicon&r=PG&f=1","214":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgXJNZ6lZ-XmiWCIcDTNbU3OUSvszfkyvWuHqBesA=k-s32","215":"https:\/\/www.gravatar.com\/avatar\/7547c7db8f3eef747f6c15074b43d4c6?s=32&d=identicon&r=PG&f=1","216":"https:\/\/www.gravatar.com\/avatar\/b886c6c1d2342a32138e7d336e106567?s=32&d=identicon&r=PG&f=1","217":"https:\/\/www.gravatar.com\/avatar\/248573d71cc9eea7b608f96c68973d49?s=32&d=identicon&r=PG&f=1","218":"https:\/\/www.gravatar.com\/avatar\/b77bf0a30f4de22f51b8ad93dab2aa29?s=32&d=identicon&r=PG&f=1","219":"https:\/\/lh5.googleusercontent.com\/-juvBZ7NweeA\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmF7l1AxIbvHsNkKLVqyEJnE1gwdA\/photo.jpg?sz=32","220":"https:\/\/www.gravatar.com\/avatar\/4c1f6be7499a9ccdd8b816d797d85443?s=32&d=identicon&r=PG&f=1","221":"https:\/\/www.gravatar.com\/avatar\/1c9a87a6b28f052877eed2a9a9fea01b?s=32&d=identicon&r=PG&f=1","222":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzfxi-S10qOHmDaeEPl0-ozD-OA5oFRUDe2bkF6=k-s32","223":"https:\/\/i.stack.imgur.com\/XEHjT.png?s=32&g=1","224":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjVd3oifb6bN6jaQd-_tXlya0L9XU0MXcJkTlyKcQ=k-s32","225":"https:\/\/www.gravatar.com\/avatar\/c3b1c4b2e6d6e8d3d8d4b82c28879578?s=32&d=identicon&r=PG&f=1","226":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyjziRHZvHp_wts6qTm_piX97eM_oR6TtBXFNeh=k-s32","227":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyZSqQyaZVBEgIpfL3_ZH7OSVveQ1571PHoLUla=k-s32","228":"https:\/\/lh6.googleusercontent.com\/-aZKXCeJEyu0\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmqNzRh8vJU-FjMj7MM6znLa1uz7g\/photo.jpg?sz=32","229":"https:\/\/lh6.googleusercontent.com\/-NFeVGmL-3Hw\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAKWJJOZhW6OowyuX1x5skCEvPq-rPfzfA\/photo.jpg?sz=32","230":"https:\/\/www.gravatar.com\/avatar\/7faddc56783458c5c6cbe265bbbb753a?s=32&d=identicon&r=PG","231":"https:\/\/i.stack.imgur.com\/J535e.jpg?s=32&g=1","232":"https:\/\/i.stack.imgur.com\/45ibB.jpg?s=32&g=1","233":"https:\/\/www.gravatar.com\/avatar\/1b7b5ce1a20f19717904ab3bbab8dc23?s=32&d=identicon&r=PG&f=1","234":"https:\/\/i.stack.imgur.com\/7VHVo.png?s=32&g=1","235":"https:\/\/lh4.googleusercontent.com\/-2z9lGUKM3vA\/AAAAAAAAAAI\/AAAAAAAABgU\/WsK6Dj1HNQ4\/photo.jpg?sz=32","236":"https:\/\/i.stack.imgur.com\/4qrs7.jpg?s=32&g=1","237":"https:\/\/lh5.googleusercontent.com\/-r6J9TiNWQtM\/AAAAAAAAAAI\/AAAAAAAAADs\/ci5OuzYuJd8\/photo.jpg?sz=32","238":"https:\/\/www.gravatar.com\/avatar\/6cb97a0e214a0b2d8d48472d72e0dc61?s=32&d=identicon&r=PG&f=1","239":"https:\/\/lh4.googleusercontent.com\/-DwUidX7F6V0\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucm16amAjveB4hLnQa03gokgd6hSHw\/photo.jpg?sz=32","240":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ghj2ypiJquRK2kVttBZX34tEv7I3retqOo23SbG=k-s32","241":"https:\/\/www.gravatar.com\/avatar\/d7506d4112c306842b56ec15fdb564e3?s=32&d=identicon&r=PG","242":"https:\/\/lh6.googleusercontent.com\/-NFeVGmL-3Hw\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAKWJJOZhW6OowyuX1x5skCEvPq-rPfzfA\/photo.jpg?sz=32","243":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiaClTAXL60ak6l6KfBUGgyViGeUnka_7uPjiuwXw=k-s32","244":"https:\/\/www.gravatar.com\/avatar\/c8008faba278081c71621b6f3ff5b8b2?s=32&d=identicon&r=PG&f=1","245":"https:\/\/www.gravatar.com\/avatar\/61d5a4566712bdff2f6fc1a2299f8a27?s=32&d=identicon&r=PG","246":"https:\/\/i.stack.imgur.com\/4K1F2.jpg?s=32&g=1","247":"https:\/\/www.gravatar.com\/avatar\/fbc327b4c6ac8599d34b6070e68c745d?s=32&d=identicon&r=PG&f=1","248":"https:\/\/www.gravatar.com\/avatar\/39e0b9d43c9bc6aa0f5b024af8c9bd12?s=32&d=identicon&r=PG&f=1","249":"https:\/\/lh4.googleusercontent.com\/-DwUidX7F6V0\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucm16amAjveB4hLnQa03gokgd6hSHw\/photo.jpg?sz=32","250":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyjziRHZvHp_wts6qTm_piX97eM_oR6TtBXFNeh=k-s32","251":"https:\/\/i.stack.imgur.com\/eRm6E.jpg?s=32&g=1","252":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","253":"https:\/\/www.gravatar.com\/avatar\/bcebf9635c4a60ea1b724a3db9d3aed3?s=32&d=identicon&r=PG","254":"https:\/\/www.gravatar.com\/avatar\/e33ff23508d5f91ffd3428f61111b62a?s=32&d=identicon&r=PG&f=1","255":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","256":"https:\/\/www.gravatar.com\/avatar\/d995da8290ac4a513cb9af4ac1c553f8?s=32&d=identicon&r=PG&f=1","257":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgTyPsGmqrEJquUerOKWsCjhTK3CD3-tD2qcNkb=k-s32","258":"https:\/\/lh5.googleusercontent.com\/-r6J9TiNWQtM\/AAAAAAAAAAI\/AAAAAAAAADs\/ci5OuzYuJd8\/photo.jpg?sz=32","259":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","260":"https:\/\/lh4.googleusercontent.com\/-vhPJR4mrt14\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclfjMSctapmi92r73PE0jKHdAXPfA\/photo.jpg?sz=32","261":"https:\/\/lh5.googleusercontent.com\/-HXILsMtuux4\/AAAAAAAAAAI\/AAAAAAAAACo\/UhSDtdOOGf4\/photo.jpg?sz=32","262":"https:\/\/www.gravatar.com\/avatar\/6efc34d320cbe835e17e11aae91a3637?s=32&d=identicon&r=PG","263":"https:\/\/i.stack.imgur.com\/JsXSV.png?s=32&g=1","264":"https:\/\/i.stack.imgur.com\/urEhT.jpg?s=32&g=1","265":"https:\/\/www.gravatar.com\/avatar\/734c1bf3e8d94e4d128330774ef4e1ce?s=32&d=identicon&r=PG","266":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyH-4A_dKOvnMJhGCsoXrOY5N2Tv91Cg3ePUf3q=k-s32","267":"https:\/\/lh4.googleusercontent.com\/-idmnScMsfoQ\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAN31DWq9I1OJWXcIP5Lg3WxRZHKshkn4g\/mo\/photo.jpg?sz=32","268":"https:\/\/www.gravatar.com\/avatar\/6a7cd838a1746eac489302b443a69414?s=32&d=identicon&r=PG&f=1","269":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiP74U_0QM54hvrdMwa245blP7iE-RTqvzxtNOQgQ=k-s32","270":"https:\/\/i.stack.imgur.com\/DEvXd.jpg?s=32&g=1","271":"https:\/\/www.gravatar.com\/avatar\/60c95be6906001dff60fc41b68b59724?s=32&d=identicon&r=PG","272":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzDOtcG55VVvtYSd4NO7P3rDtPlszotbckuo5rd=k-s32","273":"https:\/\/i.stack.imgur.com\/h7eE6.png?s=32&g=1","274":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxOTg9hIOdLLVxfvZoYCTw6cWkdduDTZfLgLERW=k-s32","275":"https:\/\/www.gravatar.com\/avatar\/1e62e1c76918313096a90aadc4db0322?s=32&d=identicon&r=PG&f=1","276":"https:\/\/www.gravatar.com\/avatar\/827db1effc1af824a646dc4a13eaeec1?s=32&d=identicon&r=PG&f=1","277":"https:\/\/www.gravatar.com\/avatar\/b09fcfc710697f7946bfa6284f08959f?s=32&d=identicon&r=PG","278":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GizLuyxJ7sxDlWNVkpH8tN_6mmoorJ-jSvlwtxd=k-s32","279":"https:\/\/i.stack.imgur.com\/X0Xyx.jpg?s=32&g=1","280":"https:\/\/lh4.googleusercontent.com\/-idmnScMsfoQ\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAN31DWq9I1OJWXcIP5Lg3WxRZHKshkn4g\/mo\/photo.jpg?sz=32","281":"https:\/\/www.gravatar.com\/avatar\/9681b8d1c5d18c06501a4d8a65b5b1aa?s=32&d=identicon&r=PG&f=1","282":"https:\/\/lh4.googleusercontent.com\/-vhPJR4mrt14\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclfjMSctapmi92r73PE0jKHdAXPfA\/photo.jpg?sz=32","283":"https:\/\/lh5.googleusercontent.com\/-bEYcv9bramw\/AAAAAAAAAAI\/AAAAAAAAA4A\/mnGMDoKQ3E8\/photo.jpg?sz=32","284":"https:\/\/www.gravatar.com\/avatar\/b09fcfc710697f7946bfa6284f08959f?s=32&d=identicon&r=PG","285":"https:\/\/www.gravatar.com\/avatar\/4bf9dd1927564073f87b2b65bcacd555?s=32&d=identicon&r=PG&f=1","286":"https:\/\/i.stack.imgur.com\/wtRvY.gif?s=32&g=1","287":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxAtaQW37eH2L7RJPO2Tdm1aNjahs4IMBwT2wy2=k-s32","288":"https:\/\/lh3.googleusercontent.com\/-jm7tSLWM_Wo\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rf8xza045KrIrUswmYSTPpaDbfaEg\/mo\/photo.jpg?sz=32","289":"https:\/\/www.gravatar.com\/avatar\/bcc50b7d52ce72e16576e6488b1f85d0?s=32&d=identicon&r=PG","290":"https:\/\/www.gravatar.com\/avatar\/06bf429ad54decf0f0c0e372170849fd?s=32&d=identicon&r=PG&f=1","291":"https:\/\/www.gravatar.com\/avatar\/03f86d5311569320ecd64439ba00756d?s=32&d=identicon&r=PG","292":"https:\/\/i.stack.imgur.com\/Pat9j.jpg?s=32&g=1","293":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxnP5V8H5721FwHSsEKBVdnThsUvc3vg4kA1JrS=k-s32","294":"https:\/\/i.stack.imgur.com\/nF83p.jpg?s=32&g=1","295":"https:\/\/www.gravatar.com\/avatar\/4ca35e1f2ee1ff71f577adc76a56c608?s=32&d=identicon&r=PG&f=1","296":"https:\/\/i.stack.imgur.com\/X0Xyx.jpg?s=32&g=1","297":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwU_NQJ8Og_XxSxMnnipnS0olFy0lDdNR12YmAy=k-s32","298":"https:\/\/i.stack.imgur.com\/O0J9m.jpg?s=32&g=1","299":"https:\/\/lh6.googleusercontent.com\/-aZKXCeJEyu0\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmqNzRh8vJU-FjMj7MM6znLa1uz7g\/photo.jpg?sz=32","300":"https:\/\/www.gravatar.com\/avatar\/e1c2f35d15c7f83993305c8c2e148109?s=32&d=identicon&r=PG&f=1","301":"https:\/\/www.gravatar.com\/avatar\/4b23f7e072522864c61f199ef2f98b80?s=32&d=identicon&r=PG&f=1","302":"https:\/\/lh5.googleusercontent.com\/-AnTxbXPRqVM\/AAAAAAAAAAI\/AAAAAAAAAJc\/-dscZmHprok\/photo.jpg?sz=32","303":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhIGIEXb9LaTvAd7AQwqD-tp4Zm3LmxQ50KhM8gAQ=k-s32","304":"https:\/\/lh4.googleusercontent.com\/-Pee58EEaQ_Y\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclFopRi-kBxq-4404WCanddr9rT9Q\/s96-c\/photo.jpg?sz=32","305":"https:\/\/www.gravatar.com\/avatar\/cf9d45a814d56e79fbcee15a4c3945b6?s=32&d=identicon&r=PG","306":"https:\/\/lh5.googleusercontent.com\/-kPsx4jtd-zc\/AAAAAAAAAAI\/AAAAAAAAAPo\/Je9GCYO7kZY\/photo.jpg?sz=32","307":"https:\/\/www.gravatar.com\/avatar\/2e805ae9cb8ccfb2bac82b3477759639?s=32&d=identicon&r=PG&f=1","308":"https:\/\/i.stack.imgur.com\/59Ogh.jpg?s=32&g=1","309":"https:\/\/www.gravatar.com\/avatar\/767655e4eaf3a3b77603b3a2c6e91d27?s=32&d=identicon&r=PG","310":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjHTGYyjNYBnPffjMPLGFXdNG1dgovOsQGj6pSC_w=k-s32","311":"https:\/\/www.gravatar.com\/avatar\/a49bd6620d24f45157f56b48f81c7c3b?s=32&d=identicon&r=PG&f=1","312":"https:\/\/i.stack.imgur.com\/X0Xyx.jpg?s=32&g=1","313":"https:\/\/lh4.googleusercontent.com\/-gY3gh9AiFao\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rdQlhTusC_GYFMUZDT3AwJbN4DaYw\/photo.jpg?sz=32","314":"https:\/\/www.gravatar.com\/avatar\/5c4c074e8d9a2f8ad40d68a327a9484d?s=32&d=identicon&r=PG&f=1","315":"https:\/\/www.gravatar.com\/avatar\/68ca9d5537eba05a4f96c8c1fa2e951f?s=32&d=identicon&r=PG&f=1","316":"https:\/\/www.gravatar.com\/avatar\/fc816f3936b216c8a19e559492adbdf8?s=32&d=identicon&r=PG","317":"https:\/\/i.stack.imgur.com\/KzenF.png?s=32&g=1","318":"https:\/\/www.gravatar.com\/avatar\/06381f5a69343aebae5cf9a877fd16a4?s=32&d=identicon&r=PG","319":"https:\/\/www.gravatar.com\/avatar\/1757e2c791656a214464c2bf3b69d23f?s=32&d=identicon&r=PG","320":"https:\/\/www.gravatar.com\/avatar\/95e584bcbc95d24c2e96e83ea2d458a6?s=32&d=identicon&r=PG&f=1","321":"https:\/\/www.gravatar.com\/avatar\/be9caff24f8a35b941a8d7623e663dac?s=32&d=identicon&r=PG&f=1","322":"https:\/\/www.gravatar.com\/avatar\/b7d49704307e22257a4abbb28a91a1e6?s=32&d=identicon&r=PG&f=1","323":"https:\/\/lh6.googleusercontent.com\/-aZKXCeJEyu0\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmqNzRh8vJU-FjMj7MM6znLa1uz7g\/photo.jpg?sz=32","324":"https:\/\/i.stack.imgur.com\/KzenF.png?s=32&g=1","325":"https:\/\/www.gravatar.com\/avatar\/b7d49704307e22257a4abbb28a91a1e6?s=32&d=identicon&r=PG&f=1","326":"https:\/\/lh5.googleusercontent.com\/-NwMD3ocd0bw\/AAAAAAAAAAI\/AAAAAAAAB1M\/6NaSKMrSipg\/photo.jpg?sz=32","327":"https:\/\/i.stack.imgur.com\/9BFJJ.jpg?s=32&g=1","328":"https:\/\/www.gravatar.com\/avatar\/9fd57ded335842ea552667664e9aa7b4?s=32&d=identicon&r=PG&f=1","329":"https:\/\/lh3.googleusercontent.com\/-0kapDNk8bL8\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucln1n2CHwltcG1yYR89WVqKI0CHcA\/s96-c\/photo.jpg?sz=32","330":"https:\/\/lh5.googleusercontent.com\/-TAfwcY3q6c8\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACevoQNN_nB7z7xShQG9N8C7JRiaK_-8AQ\/mo\/photo.jpg?sz=32","331":"https:\/\/www.gravatar.com\/avatar\/6f089ec13d464c5eff6f610d5e2ad809?s=32&d=identicon&r=PG","332":"https:\/\/www.gravatar.com\/avatar\/3b3d85c2a81690abcb3f64b0f44e5096?s=32&d=identicon&r=PG&f=1","333":"https:\/\/www.gravatar.com\/avatar\/18de0f3e6432483bba1cb3d8f94ff9a7?s=32&d=identicon&r=PG&f=1","334":"https:\/\/www.gravatar.com\/avatar\/3b3d85c2a81690abcb3f64b0f44e5096?s=32&d=identicon&r=PG&f=1","335":"https:\/\/www.gravatar.com\/avatar\/5ed1d3dde9e0e0cd89e12c778099ea7e?s=32&d=identicon&r=PG&f=1","336":"https:\/\/i.stack.imgur.com\/KzenF.png?s=32&g=1","337":"https:\/\/lh4.googleusercontent.com\/-a13s1HZ7new\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rc9i7ja78CVqpJ-QMTIAiAUXunNZg\/photo.jpg?sz=32","338":"https:\/\/www.gravatar.com\/avatar\/04fbdfa7507bb9d5bcafdf7fb036c88e?s=32&d=identicon&r=PG&f=1","339":"https:\/\/lh5.googleusercontent.com\/-5HLa_eopK_0\/AAAAAAAAAAI\/AAAAAAAADZs\/Eals0jHZ4eg\/photo.jpg?sz=32","340":"https:\/\/www.gravatar.com\/avatar\/deeeea3a547b68c34b2dd180e25809c5?s=32&d=identicon&r=PG&f=1","341":"https:\/\/www.gravatar.com\/avatar\/55bcf5cc3c727a33d767ad61b8507e9f?s=32&d=identicon&r=PG&f=1","342":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","343":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzHSGlIdqgPZXMwdNkF9T2_ElIuqkcQkyEwPzlK=k-s32","344":"https:\/\/lh4.googleusercontent.com\/-IY3dvyoUo0o\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnpuB2SSIjZQQXAkWKPCf_WllBR6Q\/photo.jpg?sz=32","345":"https:\/\/i.stack.imgur.com\/M7DIt.jpg?s=32&g=1","346":"https:\/\/www.gravatar.com\/avatar\/11f159e85994cc9bcb9421c6c265736d?s=32&d=identicon&r=PG&f=1","347":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiXhYHDarCzJJ03KC8Qz7H5_5d3E_aS-e1W7_xUrA=k-s32","348":"https:\/\/i.stack.imgur.com\/EfWcF.jpg?s=32&g=1","349":"https:\/\/i.stack.imgur.com\/QXZVv.jpg?s=32&g=1","350":"https:\/\/www.gravatar.com\/avatar\/ab4426cc8f6ccee30f25ed6f945dcfbb?s=32&d=identicon&r=PG&f=1","351":"https:\/\/www.gravatar.com\/avatar\/630adf2da0caee245707c29e088503f3?s=32&d=identicon&r=PG&f=1","352":"https:\/\/www.gravatar.com\/avatar\/8559bbbfc11377e55d240afc4ef7d62f?s=32&d=identicon&r=PG&f=1","353":"https:\/\/www.gravatar.com\/avatar\/417cd9e76e3c21037198843784d63358?s=32&d=identicon&r=PG&f=1","354":"https:\/\/www.gravatar.com\/avatar\/7f8fcb66bf49805c367d61d0265059a6?s=32&d=identicon&r=PG","355":"https:\/\/www.gravatar.com\/avatar\/3e1ef9497367e666f391258b5fc81499?s=32&d=identicon&r=PG&f=1","356":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiVjmTguEDLQY-HAlb1_qkzaumG_ftvQeyVgpm6bw=k-s32","357":"https:\/\/lh3.googleusercontent.com\/-2xVsYP_zi8Y\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmDAatViq7Kas95vSLNQlXCkCkN6g\/s96-c\/photo.jpg?sz=32","358":"https:\/\/i.stack.imgur.com\/ZyPoA.png?s=32&g=1","359":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzN7w_hboccK3khxSx_pz6PpAaX0uYtGE6rXEO2=k-s32","360":"https:\/\/i.stack.imgur.com\/7GQ6a.jpg?s=32&g=1","361":"https:\/\/www.gravatar.com\/avatar\/c8ea381be0ba1167887373227bc299bb?s=32&d=identicon&r=PG&f=1","362":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GipgDJtaTxw7u1ryUmpOEV_HaZeaiKyedCoR67y=k-s32","363":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgVBrSZLN9oE07XH_YKWA3zRszyCpZdD7V3WHuE-A=k-s32","364":"https:\/\/lh4.googleusercontent.com\/-q3rAyqSEkzA\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rfjdFKaKRMrs1FCKR1YulVnKp2pLQ\/photo.jpg?sz=32","365":"https:\/\/lh5.googleusercontent.com\/-zWekmAIeS-M\/AAAAAAAAAAI\/AAAAAAAAAAA\/APUIFaOfd8yJYi24RZhdr0dF2uA3kxPlXg\/mo\/photo.jpg?sz=32","366":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzGS5YFCxSLgEF5K4QWzUucoYK3yWXnntcB7Xsd=k-s32","367":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjG7cEtSrHe2OnHZaqgrMS0nXB3V_YDbNblxqC6Yg=k-s32","368":"https:\/\/i.stack.imgur.com\/gAJvR.jpg?s=32&g=1","369":"https:\/\/www.gravatar.com\/avatar\/3bcc889de482ebed0790e667a973ca4b?s=32&d=identicon&r=PG&f=1","370":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","371":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzo1xbHuEEDhOwMf-YeN5V9UEi3jvVVoCEmWVxh=k-s32","372":"https:\/\/i.stack.imgur.com\/59Ogh.jpg?s=32&g=1","373":"https:\/\/i.stack.imgur.com\/d252I.png?s=32&g=1","374":"https:\/\/www.gravatar.com\/avatar\/c5e2cafad90940217f650762d555ad8d?s=32&d=identicon&r=PG","375":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzGS5YFCxSLgEF5K4QWzUucoYK3yWXnntcB7Xsd=k-s32","376":"https:\/\/www.gravatar.com\/avatar\/b4a9eca42ff2aaffbb238b068f94a5c7?s=32&d=identicon&r=PG&f=1","377":"https:\/\/www.gravatar.com\/avatar\/deeeea3a547b68c34b2dd180e25809c5?s=32&d=identicon&r=PG&f=1","378":"https:\/\/www.gravatar.com\/avatar\/07e9e6f578447f8d1b37392b5cc9a473?s=32&d=identicon&r=PG&f=1","379":"https:\/\/i.stack.imgur.com\/d252I.png?s=32&g=1","380":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxl0LpUUgFAx1tBdsgREpz16aQush1B_C5kOkrO=k-s32","381":"https:\/\/www.gravatar.com\/avatar\/7f8fcb66bf49805c367d61d0265059a6?s=32&d=identicon&r=PG","382":"https:\/\/i.stack.imgur.com\/L2ODN.png?s=32&g=1","383":"https:\/\/lh6.googleusercontent.com\/-Zk0-uzznIts\/AAAAAAAAAAI\/AAAAAAAAAAA\/AKxrwcZiM7TKWSzk0FBodNtQGtInRaJY5g\/mo\/photo.jpg?sz=32","384":"https:\/\/www.gravatar.com\/avatar\/be35470491c621e5d209b93524365f8d?s=32&d=identicon&r=PG&f=1","385":"https:\/\/i.stack.imgur.com\/UxqB3.jpg?s=32&g=1","386":"https:\/\/www.gravatar.com\/avatar\/afa7b38fe7ffe68d5662377f06eb09b2?s=32&d=identicon&r=PG&f=1","387":"https:\/\/i.stack.imgur.com\/UxqB3.jpg?s=32&g=1","388":"https:\/\/i.stack.imgur.com\/d252I.png?s=32&g=1","389":"https:\/\/lh3.googleusercontent.com\/-M8gWw-9aS5o\/AAAAAAAAAAI\/AAAAAAAAACY\/y0FlrUmiS1g\/photo.jpg?sz=32","390":"https:\/\/lh6.googleusercontent.com\/-2pb72D_CnOo\/AAAAAAAAAAI\/AAAAAAAAAAg\/WydAjm--Tbg\/photo.jpg?sz=32","391":"https:\/\/i.stack.imgur.com\/nBld5.jpg?s=32&g=1","392":"https:\/\/lh5.googleusercontent.com\/-xGCh1ukywSE\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rd7xaAq_dRyioy2PSqQFHaCZaoKGQ\/photo.jpg?sz=32","393":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GisfIV9U2AZWviESB4wDmP_y5MyLDe7TVtw9oNZ0g=k-s32","394":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwkbvh_tCZ5r4H7YxIeKVJMzY7AVe4BGPoIViT8=k-s32","395":"https:\/\/lh5.googleusercontent.com\/-A3I9n69BGdQ\/AAAAAAAAAAI\/AAAAAAAAABM\/7oN-VxFFN60\/photo.jpg?sz=32","396":"https:\/\/i.stack.imgur.com\/OvMfk.jpg?s=32&g=1","397":"https:\/\/i.stack.imgur.com\/HMOOA.jpg?s=32&g=1","398":"https:\/\/i.stack.imgur.com\/HMOOA.jpg?s=32&g=1","399":"https:\/\/lh5.googleusercontent.com\/-HKPqdPRVzX0\/AAAAAAAAAAI\/AAAAAAAAAHU\/TKsgo_hAz00\/photo.jpg?sz=32","400":"https:\/\/lh5.googleusercontent.com\/-Z-L_kSWALfk\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucl9miWnzsH_m6y11qjAj7RIEfWx0w\/s96-c\/photo.jpg?sz=32","401":"https:\/\/www.gravatar.com\/avatar\/00158a392eca25e44161f59689d478ad?s=32&d=identicon&r=PG&f=1","402":"https:\/\/www.gravatar.com\/avatar\/45919c839a6bec3f0cdfc75dc5a685dc?s=32&d=identicon&r=PG&f=1","403":"https:\/\/lh5.googleusercontent.com\/-sV-DA2t4OJ4\/AAAAAAAAAAI\/AAAAAAAAAPM\/Q0fpREhosXw\/photo.jpg?sz=32","404":"https:\/\/www.gravatar.com\/avatar\/342c36943b03f90076f6f3a3f99883a3?s=32&d=identicon&r=PG&f=1","405":"https:\/\/www.gravatar.com\/avatar\/92ec258e9baef480855e19c8589fa652?s=32&d=identicon&r=PG&f=1","406":"https:\/\/i.stack.imgur.com\/pHt98.png?s=32&g=1","407":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GivhzJi4qpH0Q1_ybQuNdj4MuKMekDtwzJBH9CkSg=k-s32","408":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJx73nHRZ5-HNBRBKKB7NhIwKgZVdWViZ3upErzc=k-s32","409":"https:\/\/www.gravatar.com\/avatar\/86a54b16cfee50daa71078ec8e9e14ee?s=32&d=identicon&r=PG&f=1","410":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxlFh1zOJ4toH1KBavTOD2cH-JCygpyVLaGyich=k-s32","411":"https:\/\/www.gravatar.com\/avatar\/6fce93bedf9c34260b70fd4e5ca9c296?s=32&d=identicon&r=PG&f=1","412":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjSSzjaLZyAJXJaUaVx9vqEIggpJC2ffkj7s0Y7=k-s32","413":"https:\/\/www.gravatar.com\/avatar\/10b586f5dd0d04b071bac89fa5a777b1?s=32&d=identicon&r=PG&f=1","414":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gh73dawFsd4dg6yvQsi48aNd6USje6gsGWPa4SK=k-s32","415":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","416":"https:\/\/lh6.googleusercontent.com\/-Ad8uAnmfRr0\/AAAAAAAAAAI\/AAAAAAAAACA\/qsHyq1MYJ1g\/photo.jpg?sz=32","417":"https:\/\/www.gravatar.com\/avatar\/540dfad1202b845e1636a09a5905b09d?s=32&d=identicon&r=PG&f=1","418":"https:\/\/www.gravatar.com\/avatar\/1f4beabfa512cf53a8877c6d9315aa7c?s=32&d=identicon&r=PG&f=1","419":"https:\/\/www.gravatar.com\/avatar\/bd2ce04ce0a06a85553adf68cd8fb65c?s=32&d=identicon&r=PG&f=1","420":"https:\/\/www.gravatar.com\/avatar\/b691746b6896ebecb619ea4901f72a4a?s=32&d=identicon&r=PG&f=1","421":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gh_h6JDLJGxMFC0UkfcU6WIIHLjiTzHFbbFrq0=k-s32","422":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzAtOPqQ-8xBH5AULmp69YFgj72Vm4tEZrnclwf=k-s32","423":"https:\/\/www.gravatar.com\/avatar\/770fda5ea9360226e01ee5a2c7445862?s=32&d=identicon&r=PG&f=1","424":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GghZvQU_bnUhVoUYYtQWONeZb8vof1myHVhypTQ=k-s32","425":"https:\/\/i.stack.imgur.com\/FwZrZ.jpg?s=32&g=1","426":"https:\/\/i.stack.imgur.com\/hqNdo.png?s=32&g=1","427":"https:\/\/i.stack.imgur.com\/CyIAP.png?s=32&g=1","428":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxUKPj_ZPZRZuIE5nk1_2PzAicEoYV51btVlhTK=k-s32","429":"https:\/\/www.gravatar.com\/avatar\/746e58a63a89e90f0e16f7e848a8982e?s=32&d=identicon&r=PG&f=1","430":"https:\/\/i.stack.imgur.com\/syB8z.jpg?s=32&g=1","431":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgiFFyw0tYtA9oho4tg_wV4OWwxHHjJt8nmay2IGQ=k-s32","432":"https:\/\/lh4.googleusercontent.com\/-IY3dvyoUo0o\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnpuB2SSIjZQQXAkWKPCf_WllBR6Q\/photo.jpg?sz=32","433":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwkbvh_tCZ5r4H7YxIeKVJMzY7AVe4BGPoIViT8=k-s32","434":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwkbvh_tCZ5r4H7YxIeKVJMzY7AVe4BGPoIViT8=k-s32","435":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gh6sCni-9Y3W5eHWbBT0yPbxLo9I86uaAAvCnzf5A=k-s32","436":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","437":"https:\/\/www.gravatar.com\/avatar\/d4911933297e3b7637d8149826405730?s=32&d=identicon&r=PG&f=1","438":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhwRw7KXAdrTV6FQujqTjWTy8lElh0DtkzMIdg3=k-s32","439":"https:\/\/www.gravatar.com\/avatar\/5415bc186ac06dd93228896e6a0dba4a?s=32&d=identicon&r=PG&f=1","440":"https:\/\/www.gravatar.com\/avatar\/128567d3ab83189d0bc45f64c659dfc2?s=32&d=identicon&r=PG&f=1","441":"https:\/\/www.gravatar.com\/avatar\/ea09228626dddd033d260fbe4ac57659?s=32&d=identicon&r=PG&f=1","442":"https:\/\/www.gravatar.com\/avatar\/fae9e562c41cafff8b0d58318083ca55?s=32&d=identicon&r=PG&f=1","443":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gjbl6H91S5xk-uvyuo2KhxSQqa91M9stEN_BXbVqw=k-s32","444":"https:\/\/i.stack.imgur.com\/GPf1K.jpg?s=32&g=1","445":"https:\/\/www.gravatar.com\/avatar\/247db17ed25b7ea5acec4c3564aca25d?s=32&d=identicon&r=PG&f=1","446":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxlFh1zOJ4toH1KBavTOD2cH-JCygpyVLaGyich=k-s32","447":"https:\/\/www.gravatar.com\/avatar\/a94c378aa98f02e457530203fb76954a?s=32&d=identicon&r=PG&f=1","448":"https:\/\/i.stack.imgur.com\/ZNtjY.png?s=32&g=1","449":"https:\/\/www.gravatar.com\/avatar\/361f031bfb1df211c02754ea19c52116?s=32&d=identicon&r=PG&f=1","450":"https:\/\/i.stack.imgur.com\/0pMst.jpg?s=32&g=1","451":"https:\/\/lh6.googleusercontent.com\/-d7r0dVyjBlo\/AAAAAAAAAAI\/AAAAAAAAAfw\/L0GhHnj0RY4\/photo.jpg?sz=32","452":"https:\/\/i.stack.imgur.com\/e3Ysd.png?s=32&g=1","453":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyJZBRIE2vFYJrlG5E1kS1_o_s-BE5ElII9RsE=k-s32","454":"https:\/\/lh3.googleusercontent.com\/-DJbvu5ovrvw\/AAAAAAAAAAI\/AAAAAAAAAAc\/myLc88JJtW8\/photo.jpg?sz=32","455":"https:\/\/www.gravatar.com\/avatar\/b52db6580455b44f5b0743d84a805e4f?s=32&d=identicon&r=PG&f=1","456":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gi0f6QxfOReVymbEQM76sRQralrXSghY6s0NU7_=k-s32","457":"https:\/\/lh4.googleusercontent.com\/-IY3dvyoUo0o\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnpuB2SSIjZQQXAkWKPCf_WllBR6Q\/photo.jpg?sz=32","458":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzsZcbd4Rs0_HeOlGb1-hHKGMyJF-ANmjSl1a8v=k-s32","459":"https:\/\/i.stack.imgur.com\/MCIGm.jpg?s=32&g=1","460":"https:\/\/www.gravatar.com\/avatar\/f72e958c8cceaa8fab2fb70240bf3d8f?s=32&d=identicon&r=PG&f=1","461":"https:\/\/i.stack.imgur.com\/DwnBp.jpg?s=32&g=1","462":"https:\/\/i.stack.imgur.com\/Azoig.jpg?s=32&g=1","463":"https:\/\/www.gravatar.com\/avatar\/b4988242dbca03b3f1b6651451016f58?s=32&d=identicon&r=PG&f=1","464":"https:\/\/i.stack.imgur.com\/vInL8.png?s=32&g=1","465":"https:\/\/www.gravatar.com\/avatar\/ccc0e99722af98f1359c91d6704a19ae?s=32&d=identicon&r=PG&f=1","466":"https:\/\/lh3.googleusercontent.com\/-Z1F8HFBFQpk\/AAAAAAAAAAI\/AAAAAAAAAAA\/AKF05nCgvAD-kdSmHwIqv7BTJICcjutGEA\/photo.jpg?sz=32","467":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhG_Rui5Flh3GDXmy-hhm5xi5rqkaQXmmHxsf_jDWU=k-s32","468":"https:\/\/www.gravatar.com\/avatar\/c203272c505044d9ad5ce75235b5fc05?s=32&d=identicon&r=PG&f=1","469":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gg4XSrIhwTZzCfd7isj2lgsUcmlJCyFwebMG8RP=k-s32","470":"https:\/\/www.gravatar.com\/avatar\/da069412e06f02e583a39a57305b9a72?s=32&d=identicon&r=PG&f=1","471":"https:\/\/i.stack.imgur.com\/XdKb8.jpg?s=32&g=1","472":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ggvde3j68OAUiTjVwA6fMs_hEHwPrbZMN8K8hOA=k-s32","473":"https:\/\/www.gravatar.com\/avatar\/a38dc7efaf7e89fc6eb2afc196eb20e1?s=32&d=identicon&r=PG&f=1","474":"https:\/\/www.gravatar.com\/avatar\/9b963517c7d819fe673121c28626c146?s=32&d=identicon&r=PG&f=1","475":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjbfCTpAxUXbf62GMuYOd9USFEgT6KbZAHDioUg=k-s32","476":"https:\/\/i.stack.imgur.com\/XdKb8.jpg?s=32&g=1","477":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJx7MaMsrtyNW1qfyCEUfLiy4eBX56UQ-I_HDuxt=k-s32","478":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzMW52Y20K65VVhLTpGORiEy4mk2aeyAVB4ZhMJ=k-s32","479":"https:\/\/www.gravatar.com\/avatar\/0f5dcaf02e42c7fc4c2c8a06678dd1ec?s=32&d=identicon&r=PG&f=1","480":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","481":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjfHFx3yrdeUttOZlCkkipoolt_vFn7sxqCQiA1DQ=k-s32","482":"https:\/\/www.gravatar.com\/avatar\/6e772441a8845bd89cf1ad9ce6855411?s=32&d=identicon&r=PG&f=1","483":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gh3SA22m43deINgxsSIF4u_ABAzQ3mActpAd7Uhwg=k-s32","484":"https:\/\/lh3.googleusercontent.com\/-XdUIqdMkCWA\/AAAAAAAAAAI\/AAAAAAAAAAA\/4252rscbv5M\/photo.jpg?sz=32","485":"https:\/\/www.gravatar.com\/avatar\/df3908b374ed5cf9ef04ab5d0e461f9f?s=32&d=identicon&r=PG","486":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyX9wVw2ScQinfg_VZP2ZMJP25YCfbL5i7Z7ZhY=k-s32","487":"https:\/\/lh4.googleusercontent.com\/-ev6RGW8tpKo\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucm5FFN7FYWluO3g-IhcCNH3Nzn1uw\/s96-c\/photo.jpg?sz=32","488":"https:\/\/www.gravatar.com\/avatar\/18e2b1cfbd92a597bd57a7d42dc02acf?s=32&d=identicon&r=PG&f=1","489":"https:\/\/www.gravatar.com\/avatar\/3bcc889de482ebed0790e667a973ca4b?s=32&d=identicon&r=PG&f=1","490":"https:\/\/www.gravatar.com\/avatar\/b530eed03c01214c1c86dc707a028495?s=32&d=identicon&r=PG&f=1","491":"https:\/\/www.gravatar.com\/avatar\/5ad9eb6ab62045a807b83fd8e57b582e?s=32&d=identicon&r=PG&f=1","492":"https:\/\/www.gravatar.com\/avatar\/24a29e4829987cbbdf3d24ed9534520e?s=32&d=identicon&r=PG&f=1","493":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gg9qdoZOEZe-O89VSKnoizc0oQCIIbp6Xj7sEITxjI=k-s32","494":"https:\/\/www.gravatar.com\/avatar\/c7c176caf17fd8b1762f3303c5aadeeb?s=32&d=identicon&r=PG&f=1","495":"https:\/\/www.gravatar.com\/avatar\/7de3a9006969d5286766a2cca9c93aa3?s=32&d=identicon&r=PG&f=1","496":"https:\/\/i.stack.imgur.com\/HSIfV.jpg?s=32&g=1","497":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiF0qZ3c68_Sy4kQeFImmxSXdeipbdF972tmpI86m0=k-s32","498":"https:\/\/www.gravatar.com\/avatar\/0fc9aec12ea177740bd44f77c84ac788?s=32&d=identicon&r=PG&f=1","499":"https:\/\/www.gravatar.com\/avatar\/a580f5f5451f76603591fabd72297ebb?s=32&d=identicon&r=PG&f=1","500":"https:\/\/www.gravatar.com\/avatar\/3476f8b401bd0c86ee2379bb71fe4188?s=32&d=identicon&r=PG&f=1","501":"https:\/\/www.gravatar.com\/avatar\/ad078669a74170178cfcfbd62a8fa28a?s=32&d=identicon&r=PG&f=1","502":"https:\/\/lh3.googleusercontent.com\/-DXBCrYIXI7g\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rcB5BpSiklNQFX_aZiHfYS4Ymrx0g\/photo.jpg?sz=32","503":"https:\/\/lh4.googleusercontent.com\/-IY3dvyoUo0o\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnpuB2SSIjZQQXAkWKPCf_WllBR6Q\/photo.jpg?sz=32","504":"https:\/\/www.gravatar.com\/avatar\/8b77f17dacb987a611d49f9e34be412f?s=32&d=identicon&r=PG&f=1","505":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ghkxk7D2YvUK4C0llF7VofjHKqbFT7xO1nDfSFESA=k-s32","506":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjvTjkHYAtyh18FntHo-RSJ2jLg5gv_V37US9twIg=k-s32","507":"https:\/\/www.gravatar.com\/avatar\/be9caff24f8a35b941a8d7623e663dac?s=32&d=identicon&r=PG&f=1","508":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhWf7ByKTad6TWoPBT_f3WfXKoNwii4hJuuF80wTQ=k-s32","509":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyrzLHr8N0gbJR-IU4f82RkgC20DoK0GfpHMPtw=k-s32","510":"https:\/\/www.gravatar.com\/avatar\/fae9e562c41cafff8b0d58318083ca55?s=32&d=identicon&r=PG&f=1","511":"https:\/\/www.gravatar.com\/avatar\/1502fdc5e830ad595da3d819ea7d5d8d?s=32&d=identicon&r=PG&f=1","512":"https:\/\/www.gravatar.com\/avatar\/ccc0e99722af98f1359c91d6704a19ae?s=32&d=identicon&r=PG&f=1","513":"https:\/\/www.gravatar.com\/avatar\/744767d01d9292613989cc84f06c9aca?s=32&d=identicon&r=PG&f=1","514":"https:\/\/www.gravatar.com\/avatar\/205cc62c6bc2864bda7308ffbb371bf3?s=32&d=identicon&r=PG&f=1","515":"https:\/\/www.gravatar.com\/avatar\/8f439f01b51f295375ec8e9fe7a6a025?s=32&d=identicon&r=PG&f=1","516":"https:\/\/www.gravatar.com\/avatar\/dd88262c7aa5a9fb1fc8ee78bcca8964?s=32&d=identicon&r=PG&f=1","517":"https:\/\/www.gravatar.com\/avatar\/724c83bd7583af51933e42c1f80a34fb?s=32&d=identicon&r=PG&f=1","518":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","519":"https:\/\/lh4.googleusercontent.com\/-DwUidX7F6V0\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucm16amAjveB4hLnQa03gokgd6hSHw\/photo.jpg?sz=32","520":"https:\/\/www.gravatar.com\/avatar\/a66e0858030645e0c81e08e3e9cd6989?s=32&d=identicon&r=PG&f=1","521":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Giaudw0hduoL0zMr2-fXzUzwqwjZ2SqPZBHb6cZng=k-s32","522":"https:\/\/www.gravatar.com\/avatar\/737d8400179b1e0280e3f90bed75b7b7?s=32&d=identicon&r=PG&f=1","523":"https:\/\/www.gravatar.com\/avatar\/69581f49cc87b654e03fd4da8d7fd8de?s=32&d=identicon&r=PG&f=1","524":"https:\/\/www.gravatar.com\/avatar\/94f20bdd45c4245b904c522d78684a27?s=32&d=identicon&r=PG&f=1","525":"https:\/\/lh6.googleusercontent.com\/-7iMIVaEfxqE\/AAAAAAAAAAI\/AAAAAAAAASY\/pK2ov-FQUFM\/photo.jpg?sz=32","526":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiwgiZIHME5VZULSWDbU274jmUJH0ZAjv6mx5DN=k-s32","527":"https:\/\/www.gravatar.com\/avatar\/b37ec687551dbfc15944cecc18659c11?s=32&d=identicon&r=PG&f=1","528":"https:\/\/www.gravatar.com\/avatar\/a66e0858030645e0c81e08e3e9cd6989?s=32&d=identicon&r=PG&f=1","529":"https:\/\/www.gravatar.com\/avatar\/16ee6e122b9d39a4bc21bf6ac9c4e7fe?s=32&d=identicon&r=PG&f=1","530":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhhkXscJpgxkYq2f-lmKhu2whN2CNj8MQb_j_CV_5k=k-s32","531":"https:\/\/i.stack.imgur.com\/HSIfV.jpg?s=32&g=1","532":"https:\/\/i.stack.imgur.com\/wxgEI.jpg?s=32&g=1","533":"https:\/\/i.stack.imgur.com\/h6OhO.jpg?s=32&g=1","534":"https:\/\/www.gravatar.com\/avatar\/55d95d06db24ed7d770856517b9f3948?s=32&d=identicon&r=PG&f=1","535":"https:\/\/www.gravatar.com\/avatar\/ddb81e6a50af93f4334e5a9c5bc22b4f?s=32&d=identicon&r=PG","536":"https:\/\/graph.facebook.com\/1038484772864238\/picture?type=large","537":"https:\/\/www.gravatar.com\/avatar\/7919c3e23da5e4e2b34490041a6f45c4?s=32&d=identicon&r=PG&f=1","538":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJy2EqnzvMY_FP1dAj8U0KrvytZl3yCVnfat9YOo=k-s32","539":"https:\/\/www.gravatar.com\/avatar\/82a1f0fb2478f517c945a53b697dd290?s=32&d=identicon&r=PG","540":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgWTf2P4pkKsrU-MEQF1DnPY1Ovu9KSVjCRjRrN=k-s32","541":"https:\/\/i.stack.imgur.com\/t8CBG.jpg?s=32&g=1","542":"https:\/\/www.gravatar.com\/avatar\/3b0de7cb4f867b30a7541e546159f16e?s=32&d=identicon&r=PG","543":"https:\/\/www.gravatar.com\/avatar\/56a5f1fcb0d3a2d33a03b8901e251e05?s=32&d=identicon&r=PG&f=1","544":"https:\/\/i.stack.imgur.com\/h6OhO.jpg?s=32&g=1","545":"https:\/\/i.stack.imgur.com\/yFonG.jpg?s=32&g=1","546":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwxvbimrVpVEOTrGcn4VJQlChXidnFN5h4PWriR=k-s32","547":"https:\/\/www.gravatar.com\/avatar\/947c506321b3f940a4a2cd66af56cdf1?s=32&d=identicon&r=PG&f=1","548":"https:\/\/www.gravatar.com\/avatar\/82a1f0fb2478f517c945a53b697dd290?s=32&d=identicon&r=PG","549":"https:\/\/lh6.googleusercontent.com\/-yowpQoyf93c\/AAAAAAAAAAI\/AAAAAAAAALQ\/2_9uMgiM9cc\/photo.jpg?sz=32","550":"https:\/\/lh6.googleusercontent.com\/-yowpQoyf93c\/AAAAAAAAAAI\/AAAAAAAAALQ\/2_9uMgiM9cc\/photo.jpg?sz=32","551":"https:\/\/lh6.googleusercontent.com\/-BHpQ8yAELR8\/AAAAAAAAAAI\/AAAAAAAAABg\/AR-KYpyiw5U\/photo.jpg?sz=32","552":"https:\/\/lh5.googleusercontent.com\/-WTMy-n09VzI\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmfdg2nstLnkBge3o3ESq4a44XFEw\/photo.jpg?sz=32","553":"https:\/\/lh5.googleusercontent.com\/-WTMy-n09VzI\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmfdg2nstLnkBge3o3ESq4a44XFEw\/photo.jpg?sz=32","554":"https:\/\/www.gravatar.com\/avatar\/1f7875a108e8aad2a57ce6e41a8e65d2?s=32&d=identicon&r=PG&f=1","555":"https:\/\/www.gravatar.com\/avatar\/fae9e562c41cafff8b0d58318083ca55?s=32&d=identicon&r=PG&f=1","556":"https:\/\/www.gravatar.com\/avatar\/0a39d8ba15138e200bacd34701b9a2fd?s=32&d=identicon&r=PG&f=1","557":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJy2uy_ECoX0QRh5-Bdjig5nYMuYcuqSR1iZvmz0=k-s32","558":"https:\/\/lh3.googleusercontent.com\/-UiS8UjR4Pu8\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnCz-1jYXs0_1N1W_26ANCwnIwxdg\/s96-c\/photo.jpg?sz=32","559":"https:\/\/www.gravatar.com\/avatar\/6936a021d104adbdeebbd33f0a127997?s=32&d=identicon&r=PG&f=1","560":"https:\/\/i.stack.imgur.com\/G8kEZ.jpg?s=32&g=1","561":"https:\/\/www.gravatar.com\/avatar\/bac3d74051475e161c49399d542aa543?s=32&d=identicon&r=PG&f=1","562":"https:\/\/i.stack.imgur.com\/wUEWj.jpg?s=32&g=1","563":"https:\/\/www.gravatar.com\/avatar\/2a0e8c357a59831c3fe0c25bb0d6ad5b?s=32&d=identicon&r=PG&f=1","564":"https:\/\/i.stack.imgur.com\/1OGnU.jpg?s=32&g=1","565":"https:\/\/www.gravatar.com\/avatar\/3bcc889de482ebed0790e667a973ca4b?s=32&d=identicon&r=PG&f=1","566":"https:\/\/www.gravatar.com\/avatar\/16ee6e122b9d39a4bc21bf6ac9c4e7fe?s=32&d=identicon&r=PG&f=1","567":"https:\/\/www.gravatar.com\/avatar\/d5c1a1c036f2639af84a197be0554e0b?s=32&d=identicon&r=PG&f=1","568":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxWKVB1BeseIdWhsFK3mVnhFHQgOOPh6Rj1S4tP=k-s32","569":"https:\/\/www.gravatar.com\/avatar\/94857b7e59b8ee27200f99fda6ca83a3?s=32&d=identicon&r=PG&f=1","570":"https:\/\/lh6.googleusercontent.com\/-xPCc1hGFs-U\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclgIFwM80Jm_PdY6bFnFPdkS9NAvA\/s96-c\/photo.jpg?sz=32","571":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhjzPlgMOWjsisI90DgK8aHKaA330advPsEKjWx=k-s32","572":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","573":"https:\/\/graph.facebook.com\/10207503336686380\/picture?type=large","574":"https:\/\/www.gravatar.com\/avatar\/2bbeddf2c99b1aee6370548705b6d253?s=32&d=identicon&r=PG&f=1","575":"https:\/\/lh6.googleusercontent.com\/-4A9IOpO54ew\/AAAAAAAAAAI\/AAAAAAAAACA\/J5GAALUqaCI\/photo.jpg?sz=32","576":"https:\/\/www.gravatar.com\/avatar\/fe26935718b731221d04485fc034ea68?s=32&d=identicon&r=PG&f=1","577":"https:\/\/www.gravatar.com\/avatar\/6f62f3641060dca911eb0d4dbf93ca33?s=32&d=identicon&r=PG&f=1","578":"https:\/\/lh5.googleusercontent.com\/-8kWSJpd_zfk\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclbYzhLNMBZTimZk0vZlatnqoha6Q\/s96-c\/photo.jpg?sz=32","579":"https:\/\/www.gravatar.com\/avatar\/1cce9915edd837581afd57b7215a5e3f?s=32&d=identicon&r=PG&f=1","580":"https:\/\/lh3.googleusercontent.com\/a-\/AAuE7mApGznrSM6smnOn4fRjeCDv4eSQyyfio1hI8zuQ=k-s32","581":"https:\/\/lh6.googleusercontent.com\/-4A9IOpO54ew\/AAAAAAAAAAI\/AAAAAAAAACA\/J5GAALUqaCI\/photo.jpg?sz=32","582":"https:\/\/www.gravatar.com\/avatar\/6f62f3641060dca911eb0d4dbf93ca33?s=32&d=identicon&r=PG&f=1","583":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgygO2TbhLiXHPGiDX86GdAY8cdOp5DpX5i6OMc=k-s32","584":"https:\/\/i.stack.imgur.com\/Xvjet.png?s=32&g=1","585":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","586":"https:\/\/www.gravatar.com\/avatar\/21b3bc11fcc7e4699ce13b342a698ff0?s=32&d=identicon&r=PG","587":"https:\/\/i.stack.imgur.com\/nTl6A.png?s=32&g=1","588":"https:\/\/lh6.googleusercontent.com\/-NOgXXWC7r9Q\/AAAAAAAAAAI\/AAAAAAAAAFs\/_OXBicvS1nU\/photo.jpg?sz=32","589":"https:\/\/lh4.googleusercontent.com\/-ToUZrP6-OQM\/AAAAAAAAAAI\/AAAAAAAAADk\/xIlPB_XS4DI\/photo.jpg?sz=32","590":"https:\/\/i.stack.imgur.com\/fwnbj.jpg?s=32&g=1","591":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJz8cCpcL2pFdrVPnJbjzPV_R81evpjdj_eWxs_Z=k-s32","592":"https:\/\/www.gravatar.com\/avatar\/24553885149fdb4b3ef1dba54ae3ac88?s=32&d=identicon&r=PG&f=1","593":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyXreBWW2zauVKRd6lABRwnvg32WsEoMeqCLGJz=k-s32","594":"https:\/\/i.stack.imgur.com\/1OGnU.jpg?s=32&g=1","595":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwQXKPIvaVtZchvnfWNC7ZSqRHvCAjpFTmfUUUb=k-s32","596":"https:\/\/www.gravatar.com\/avatar\/5afd66bd4c0e1dae855b3bbd24b8a3b2?s=32&d=identicon&r=PG&f=1","597":"https:\/\/www.gravatar.com\/avatar\/05842d52b8c0973f337f278aa4087541?s=32&d=identicon&r=PG&f=1","598":"https:\/\/lh6.googleusercontent.com\/-Y0NSE2Y5oW8\/AAAAAAAAAAI\/AAAAAAAAABY\/gHHSwCG90UU\/photo.jpg?sz=32","599":"https:\/\/www.gravatar.com\/avatar\/6f62f3641060dca911eb0d4dbf93ca33?s=32&d=identicon&r=PG&f=1","600":"https:\/\/www.gravatar.com\/avatar\/5afd66bd4c0e1dae855b3bbd24b8a3b2?s=32&d=identicon&r=PG&f=1","601":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyuWQ6O2YN9PsjbDN0gJOCse0n1OULkiF_LHNo9=k-s32","602":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJz8cCpcL2pFdrVPnJbjzPV_R81evpjdj_eWxs_Z=k-s32","603":"https:\/\/lh5.googleusercontent.com\/-Qly0OOX7Uhw\/AAAAAAAAAAI\/AAAAAAAAAC8\/4AHP0HccboA\/photo.jpg?sz=32","604":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyFxLhhJUt08R0HEeYXvypJNR-T0jQhnmEagPBC=k-s32","605":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJx_Su6pHch2_dh8-8naSFeLNGh58N-2ofrPlx5L=k-s32","606":"https:\/\/i.stack.imgur.com\/FONtp.jpg?s=32&g=1","607":"https:\/\/i.stack.imgur.com\/ZfQda.jpg?s=32&g=1","608":"https:\/\/www.gravatar.com\/avatar\/61a25350362dc1b65527a39b28121a3b?s=32&d=identicon&r=PG&f=1","609":"https:\/\/lh5.googleusercontent.com\/-UWqreQVVSNs\/AAAAAAAAAAI\/AAAAAAAAAEI\/2W0fkPwPuFk\/photo.jpg?sz=32","610":"https:\/\/www.gravatar.com\/avatar\/2f60802f24bcc9e135e04f08fd95c465?s=32&d=identicon&r=PG&f=1","611":"https:\/\/lh5.googleusercontent.com\/-UWqreQVVSNs\/AAAAAAAAAAI\/AAAAAAAAAEI\/2W0fkPwPuFk\/photo.jpg?sz=32","612":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","613":"https:\/\/www.gravatar.com\/avatar\/5f4173250b83db2ac7af9cf5ed6bd1e9?s=32&d=identicon&r=PG&f=1","614":"https:\/\/www.gravatar.com\/avatar\/7ba4e623cfd1353b8a30372d7c09d57f?s=32&d=identicon&r=PG&f=1","615":"https:\/\/www.gravatar.com\/avatar\/5976abf22b37632e486432de865ac62e?s=32&d=identicon&r=PG&f=1","616":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjSWV7fSzs4UagI2u5wOnXeN4czE1ewgGCKhXcnvQ=k-s32","617":"https:\/\/www.gravatar.com\/avatar\/c4201a41d3d614af74b32eb6169f9325?s=32&d=identicon&r=PG&f=1","618":"https:\/\/www.gravatar.com\/avatar\/d52a7e22710f1189a26a99e2656b53e5?s=32&d=identicon&r=PG&f=1","619":"https:\/\/www.gravatar.com\/avatar\/3d71a0d99c35322ac5d508490b87526b?s=32&d=identicon&r=PG&f=1","620":"https:\/\/www.gravatar.com\/avatar\/d3496c284bd9cc91133e9ebb920aa8ed?s=32&d=identicon&r=PG","621":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","622":"https:\/\/www.gravatar.com\/avatar\/6ca541b68574f116a77782ba96639de4?s=32&d=identicon&r=PG&f=1","623":"https:\/\/www.gravatar.com\/avatar\/acbaab8b0c4678515b9cf155ce3feda4?s=32&d=identicon&r=PG&f=1","624":"https:\/\/www.gravatar.com\/avatar\/84e75fcc233cb957408bf3c0e31cbb38?s=32&d=identicon&r=PG&f=1","625":"https:\/\/www.gravatar.com\/avatar\/5019558729d8c9ff6d6011b35e326148?s=32&d=identicon&r=PG&f=1","626":"https:\/\/graph.facebook.com\/1449530525096161\/picture?type=large","627":"https:\/\/www.gravatar.com\/avatar\/5ad9eb6ab62045a807b83fd8e57b582e?s=32&d=identicon&r=PG&f=1","628":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","629":"https:\/\/i.stack.imgur.com\/cJrMJ.jpg?s=32&g=1","630":"https:\/\/i.stack.imgur.com\/ixorG.jpg?s=32&g=1","631":"https:\/\/graph.facebook.com\/1449530525096161\/picture?type=large","632":"https:\/\/i.stack.imgur.com\/oxDxs.jpg?s=32&g=1","633":"https:\/\/www.gravatar.com\/avatar\/633b82c4b6fb34f7a527d529bdeb7939?s=32&d=identicon&r=PG&f=1","634":"https:\/\/www.gravatar.com\/avatar\/26601f03b642530e8af36d3370c294eb?s=32&d=identicon&r=PG","635":"https:\/\/www.gravatar.com\/avatar\/87e8299df2e833690cfd0a9af7029dcb?s=32&d=identicon&r=PG&f=1","636":"https:\/\/i.stack.imgur.com\/toGRn.png?s=32&g=1","637":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ghs8fMiHslsLjhQpPNz8mdPlcMMGp9dlgLcHxo1l30=k-s32","638":"https:\/\/www.gravatar.com\/avatar\/ef4f289d9a523398f04f3248323ce839?s=32&d=identicon&r=PG&f=1","639":"https:\/\/www.gravatar.com\/avatar\/c3b1c4b2e6d6e8d3d8d4b82c28879578?s=32&d=identicon&r=PG&f=1","640":"https:\/\/lh3.googleusercontent.com\/-LLqeWnV21Bc\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmonQ9gisfACmckRwS8eA8NOHRtwg\/s96-c\/photo.jpg?sz=32","641":"https:\/\/www.gravatar.com\/avatar\/0ada58e0bcedfd85ddaf55b1cd28aa9a?s=32&d=identicon&r=PG&f=1","642":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","643":"https:\/\/www.gravatar.com\/avatar\/1ec053abaa22e46144f947d059bd7adb?s=32&d=identicon&r=PG&f=1","644":"https:\/\/i.stack.imgur.com\/PGDfx.jpg?s=32&g=1","645":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzU8tLV_oArwpgsWtfnkbk5xgl_zQWnfxwSnXdl=k-s32","646":"https:\/\/lh4.googleusercontent.com\/-kKGHpFHAmyw\/AAAAAAAAAAI\/AAAAAAAAAAc\/EeCjLBYr3Cs\/photo.jpg?sz=32","647":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","648":"https:\/\/www.gravatar.com\/avatar\/a9e06b822b2e5da7051beeba249d1019?s=32&d=identicon&r=PG&f=1","649":"https:\/\/www.gravatar.com\/avatar\/ead86d447f590873c0fc9840b5d2cc38?s=32&d=identicon&r=PG&f=1","650":"https:\/\/lh6.googleusercontent.com\/-QHDlbnPpSRM\/AAAAAAAAAAI\/AAAAAAAAAEQ\/FEy48e63vyg\/photo.jpg?sz=32","651":"https:\/\/graph.facebook.com\/1335100789889361\/picture?type=large","652":"https:\/\/graph.facebook.com\/1335100789889361\/picture?type=large","653":"https:\/\/www.gravatar.com\/avatar\/3e33abdbb20e3e9376c4205f5582a315?s=32&d=identicon&r=PG&f=1","654":"https:\/\/i.stack.imgur.com\/Abwgj.jpg?s=32&g=1","655":"https:\/\/i.stack.imgur.com\/Ka69G.jpg?s=32&g=1","656":"https:\/\/lh4.googleusercontent.com\/-nruyiP16fJQ\/AAAAAAAAAAI\/AAAAAAAAAHE\/8Eh2EgSMxBM\/photo.jpg?sz=32","657":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","658":"https:\/\/www.gravatar.com\/avatar\/3eb4ebc71997e89c4b805147980c060c?s=32&d=identicon&r=PG&f=1","659":"https:\/\/i.stack.imgur.com\/bC1ew.jpg?s=32&g=1","660":"https:\/\/www.gravatar.com\/avatar\/468df0affa07737daa03b88a4f06e720?s=32&d=identicon&r=PG&f=1","661":"https:\/\/lh6.googleusercontent.com\/-7iMIVaEfxqE\/AAAAAAAAAAI\/AAAAAAAAASY\/pK2ov-FQUFM\/photo.jpg?sz=32","662":"https:\/\/lh4.googleusercontent.com\/-4sQS7b-GbJU\/AAAAAAAAAAI\/AAAAAAAAMTw\/yibMsU3EBIE\/photo.jpg?sz=32","663":"https:\/\/i.stack.imgur.com\/Ka69G.jpg?s=32&g=1","664":"https:\/\/www.gravatar.com\/avatar\/a18498d33b063a611036e98cd4c71b81?s=32&d=identicon&r=PG&f=1","665":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwFvaXwyTjeXKjKRoahuGG76xXCr-H_QiAaa80H=k-s32","666":"https:\/\/www.gravatar.com\/avatar\/edc27bd6550b2b7af5e820b9e518996d?s=32&d=identicon&r=PG","667":"https:\/\/www.gravatar.com\/avatar\/5a21ce4b7d16d8463b8b025f31aeb9c8?s=32&d=identicon&r=PG&f=1","668":"https:\/\/www.gravatar.com\/avatar\/8870f099add93fa56421a87532ea0fe3?s=32&d=identicon&r=PG","669":"https:\/\/i.stack.imgur.com\/UinPo.jpg?s=32&g=1","670":"https:\/\/lh6.googleusercontent.com\/-ub-U8ctkBuM\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3regNRRKQHWMx9JxWixr23pxVxklMQ\/photo.jpg?sz=32","671":"https:\/\/www.gravatar.com\/avatar\/57fe1d3dcdbbc0030ba986636d03ff42?s=32&d=identicon&r=PG&f=1","672":"https:\/\/www.gravatar.com\/avatar\/d47d0a3997cefdb01b4af106d3957061?s=32&d=identicon&r=PG&f=1","673":"https:\/\/www.gravatar.com\/avatar\/3a759b2a0919ab04f9911a2d510fd9ba?s=32&d=identicon&r=PG&f=1","674":"https:\/\/graph.facebook.com\/1020306308044535\/picture?type=large","675":"https:\/\/www.gravatar.com\/avatar\/a4fc4f411ec75dcfba8e956d86c7e4ca?s=32&d=identicon&r=PG&f=1","676":"https:\/\/www.gravatar.com\/avatar\/57fe1d3dcdbbc0030ba986636d03ff42?s=32&d=identicon&r=PG&f=1","677":"https:\/\/lh4.googleusercontent.com\/-fRfaczV-uEo\/AAAAAAAAAAI\/AAAAAAAAO4c\/5WtRy8QkOcA\/photo.jpg?sz=32","678":"https:\/\/lh3.googleusercontent.com\/-YHxu2dl_GFY\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAKWJJPHBfZnHGawmFIfGX1miE_l3nSQXg\/photo.jpg?sz=32","679":"https:\/\/lh5.googleusercontent.com\/-pf56ZSpngD0\/AAAAAAAAAAI\/AAAAAAAAAGY\/2nDD0aIcTto\/photo.jpg?sz=32","680":"https:\/\/www.gravatar.com\/avatar\/9eff010b483765275a15432c1f41ef07?s=32&d=identicon&r=PG&f=1","681":"https:\/\/www.gravatar.com\/avatar\/b28819741eb74ef313b9bc7159993028?s=32&d=identicon&r=PG&f=1","682":"https:\/\/www.gravatar.com\/avatar\/6a972a6bec2ccc8cbaa72046fa56c5b6?s=32&d=identicon&r=PG&f=1","683":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgM-Km7VZ0-Bg3DNlUuDPpz4UJ52kqaNHW8ICBihg=k-s32","684":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","685":"https:\/\/lh3.googleusercontent.com\/-QfCCZHRqUcM\/AAAAAAAAAAI\/AAAAAAAAACo\/b9jrw08KaX4\/photo.jpg?sz=32","686":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjOC9eF9N3pKARLSOmWIMD0BHSeNB6qU-Q9p-jc=k-s32","687":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GheuB1VKm-MKDknUJwE9qIu0qhnB11803J5__PV=k-s32","688":"https:\/\/www.gravatar.com\/avatar\/e1e01814680097609e1b3246d9e5db3d?s=32&d=identicon&r=PG&f=1","689":"https:\/\/www.gravatar.com\/avatar\/7a0a7f40a04ada6cac48b5578d622b15?s=32&d=identicon&r=PG&f=1","690":"https:\/\/www.gravatar.com\/avatar\/e7834486ffc536deed9bfbc496f07319?s=32&d=identicon&r=PG&f=1","691":"https:\/\/lh6.googleusercontent.com\/-9sN6liEzmlU\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclUvwcY_sZJnQ0mqRAxC5EQTdIicw\/s96-c\/photo.jpg?sz=32","692":"https:\/\/www.gravatar.com\/avatar\/c3b1c4b2e6d6e8d3d8d4b82c28879578?s=32&d=identicon&r=PG&f=1","693":"https:\/\/www.gravatar.com\/avatar\/7027f3f2217516733502a5c47f1e7967?s=32&d=identicon&r=PG&f=1","694":"https:\/\/i.stack.imgur.com\/pzd9N.jpg?s=32&g=1","695":"https:\/\/lh6.googleusercontent.com\/-nDooSqDcX_M\/AAAAAAAAAAI\/AAAAAAAAAL8\/r5m1_irkny0\/photo.jpg?sz=32","696":"https:\/\/lh3.googleusercontent.com\/-6u7P-XrvV1o\/AAAAAAAAAAI\/AAAAAAAAABg\/AMZuucmYR7Vqy9a0HSXglelNkLjeRHW8_w\/s96-c\/photo.jpg?sz=32","697":"https:\/\/graph.facebook.com\/687493617\/picture?type=large","698":"https:\/\/www.gravatar.com\/avatar\/7de9b69ffff626c0b0bd3300fb2179d1?s=32&d=identicon&r=PG&f=1","699":"https:\/\/lh3.googleusercontent.com\/-7tpSqhYtXEg\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnLBPpf8ZcFkTi8XndrVHlnB-mZRw\/s96-c\/photo.jpg?sz=32","700":"https:\/\/www.gravatar.com\/avatar\/8b655aed6700764c4955032942154ee8?s=32&d=identicon&r=PG&f=1","701":"https:\/\/www.gravatar.com\/avatar\/8b655aed6700764c4955032942154ee8?s=32&d=identicon&r=PG&f=1","702":"https:\/\/www.gravatar.com\/avatar\/c3b1c4b2e6d6e8d3d8d4b82c28879578?s=32&d=identicon&r=PG&f=1","703":"https:\/\/www.gravatar.com\/avatar\/80f201a9351af98c82ba3983519e5efa?s=32&d=identicon&r=PG&f=1","704":"https:\/\/www.gravatar.com\/avatar\/e3884ba95b7f2e535cd6d676000e20ca?s=32&d=identicon&r=PG&f=1","705":"https:\/\/lh4.googleusercontent.com\/-BDIjOC72CHg\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmmseqcgDfhZRK4dgsyUKExkl7qcA\/s96-c\/photo.jpg?sz=32","706":"https:\/\/i.stack.imgur.com\/AHLC0.png?s=32&g=1","707":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgAuRdQANjB69aDD9QjZ5bMNXuLqNPDioQ8aD1XZ_M=k-s32","708":"https:\/\/www.gravatar.com\/avatar\/78662c7464214125d964d15a93464727?s=32&d=identicon&r=PG","709":"https:\/\/www.gravatar.com\/avatar\/c3b1c4b2e6d6e8d3d8d4b82c28879578?s=32&d=identicon&r=PG&f=1","710":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhLg1tdxzwYQAKrUunaZi73l9UasomPoBfekDX1qA=k-s32","711":"https:\/\/www.gravatar.com\/avatar\/1b36f6ed6ddd1058c63a35f159f63704?s=32&d=identicon&r=PG&f=1","712":"https:\/\/www.gravatar.com\/avatar\/07e9e6f578447f8d1b37392b5cc9a473?s=32&d=identicon&r=PG&f=1","713":"https:\/\/lh5.googleusercontent.com\/-dmCKltKqKpQ\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucncSvHJ-wN1cR-Q8SrYhhFALqWdzQ\/photo.jpg?sz=32","714":"https:\/\/www.gravatar.com\/avatar\/74a5bd659b3a8af09a336a932eebe3b1?s=32&d=identicon&r=PG","715":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhCkV-dWcLEbekuw9kHzjpBwo1mgOR1NC0KteoJ=k-s32","716":"https:\/\/lh6.googleusercontent.com\/-ClGjKmNVGO4\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmjlSToC83wnulF1_RSmvI4kuLWcA\/s96-c\/photo.jpg?sz=32","717":"https:\/\/www.gravatar.com\/avatar\/4cd5cd6d99704c396ed6eddb9004ca31?s=32&d=identicon&r=PG&f=1","718":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjJJDsazPzPHdLmJpJBLr3CgcJY2eKSQSKHFVNr9w=k-s32","719":"https:\/\/lh3.googleusercontent.com\/-XdUIqdMkCWA\/AAAAAAAAAAI\/AAAAAAAAAAA\/4252rscbv5M\/photo.jpg?sz=32","720":"https:\/\/lh3.googleusercontent.com\/-lxtN3fDn-6k\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuckV0L0FBN_SiJvpQK0yO8Iuh_QSHw\/s96-c\/photo.jpg?sz=32","721":"https:\/\/lh6.googleusercontent.com\/-ZT07tMPREkw\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuckamBXLJQuC5eOC0PsaeoxCcvfuwA\/s96-c\/photo.jpg?sz=32","722":"https:\/\/lh3.googleusercontent.com\/-nc7h_kFx5IA\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnb-d2w8RZ7_f8CcIanGBN2E_7Y2A\/photo.jpg?sz=32","723":"https:\/\/lh3.googleusercontent.com\/-tdO1zD9irh4\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnvBeBMjY8_WDwiKKKUYIlZm0Fb2A\/s96-c\/photo.jpg?sz=32","724":"https:\/\/lh5.googleusercontent.com\/-AJa6XUo9e1w\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuckQrFEwlnidbbekjt5og0UwrtO8iA\/s96-c\/photo.jpg?sz=32","725":"https:\/\/www.gravatar.com\/avatar\/09c0c6f17abebbf87b897ea017d50b6b?s=32&d=identicon&r=PG&f=1","726":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","727":"https:\/\/lh3.googleusercontent.com\/a-\/AFdZucrLhXQZGW4k_WCPCcbTna3iXG2f5-QIcVR_LFUiTQ=k-s32","728":"https:\/\/www.gravatar.com\/avatar\/8e722fea79930aa0dc42b391817cd5d9?s=32&d=identicon&r=PG&f=1","729":"https:\/\/www.gravatar.com\/avatar\/d06e1ea0f7601ba061108ada9cd4622f?s=32&d=identicon&r=PG&f=1","730":"https:\/\/lh4.googleusercontent.com\/-QyzIRgBTooA\/AAAAAAAAAAI\/AAAAAAAAAAA\/AGDgw-g5GK9VEG1kuasIatsUj_r0y640IQ\/mo\/photo.jpg?sz=32","731":"https:\/\/lh3.googleusercontent.com\/-YHxu2dl_GFY\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAKWJJPHBfZnHGawmFIfGX1miE_l3nSQXg\/photo.jpg?sz=32","732":"https:\/\/i.stack.imgur.com\/SIwQK.jpg?s=32&g=1","733":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GheuB1VKm-MKDknUJwE9qIu0qhnB11803J5__PV=k-s32","734":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiEPkzf-FBeVoJiUXyghChVk7aMUKRSgi6ya6HCBA=k-s32","735":"https:\/\/i.stack.imgur.com\/RBEP4.png?s=32&g=1","736":"https:\/\/www.gravatar.com\/avatar\/af49dcc022b5eea1f1ff5b69b9fd962b?s=32&d=identicon&r=PG","737":"https:\/\/lh6.googleusercontent.com\/-CFHERoKwvYY\/AAAAAAAAAAI\/AAAAAAAAABE\/sHv2NQRlbyY\/photo.jpg?sz=32","738":"https:\/\/www.gravatar.com\/avatar\/07e9e6f578447f8d1b37392b5cc9a473?s=32&d=identicon&r=PG&f=1","739":"https:\/\/i.stack.imgur.com\/8CLrl.jpg?s=32&g=1","740":"https:\/\/graph.facebook.com\/1580290682109926\/picture?type=large","741":"https:\/\/lh6.googleusercontent.com\/-pYoSTGkkmwc\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclYGD7LvBMYkovXd8aMBd6YGC74VQ\/s96-c\/photo.jpg?sz=32","742":"https:\/\/lh3.googleusercontent.com\/-9wglDy33rBg\/AAAAAAAAAAI\/AAAAAAAAABQ\/A1fY6SLBvCc\/photo.jpg?sz=32","743":"https:\/\/www.gravatar.com\/avatar\/af105208026a7bd9ce94381c9114d88c?s=32&d=identicon&r=PG&f=1","744":"https:\/\/www.gravatar.com\/avatar\/c3b1c4b2e6d6e8d3d8d4b82c28879578?s=32&d=identicon&r=PG&f=1","745":"https:\/\/www.gravatar.com\/avatar\/94edbbb153a82a6560da38c020e58e7b?s=32&d=identicon&r=PG","746":"https:\/\/www.gravatar.com\/avatar\/59ad8462b9a4d95a902bafddedd2b629?s=32&d=identicon&r=PG&f=1","747":"https:\/\/i.stack.imgur.com\/OkNXR.jpg?s=32&g=1","748":"https:\/\/i.stack.imgur.com\/cwWVh.jpg?s=32&g=1","749":"https:\/\/lh4.googleusercontent.com\/-nYu3C8SPqaw\/AAAAAAAAAAI\/AAAAAAAAFNY\/mG-qCs1swro\/photo.jpg?sz=32","750":"https:\/\/www.gravatar.com\/avatar\/cb7076412e80b650c0f6652f528cc838?s=32&d=identicon&r=PG&f=1","751":"https:\/\/www.gravatar.com\/avatar\/4cd5cd6d99704c396ed6eddb9004ca31?s=32&d=identicon&r=PG&f=1","752":"https:\/\/lh6.googleusercontent.com\/-CFHERoKwvYY\/AAAAAAAAAAI\/AAAAAAAAABE\/sHv2NQRlbyY\/photo.jpg?sz=32","753":"https:\/\/lh6.googleusercontent.com\/-CFHERoKwvYY\/AAAAAAAAAAI\/AAAAAAAAABE\/sHv2NQRlbyY\/photo.jpg?sz=32","754":"https:\/\/www.gravatar.com\/avatar\/ef4c56e983eaf1d98061403047b5a6eb?s=32&d=identicon&r=PG&f=1","755":"https:\/\/lh3.googleusercontent.com\/-xXyTNQYYSDA\/AAAAAAAAAAI\/AAAAAAAANMc\/Yee4N_HitmI\/photo.jpg?sz=32","756":"https:\/\/www.gravatar.com\/avatar\/8e69e3c6d8f39e9e7d224b088e85a092?s=32&d=identicon&r=PG&f=1","757":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","758":"https:\/\/www.gravatar.com\/avatar\/c3b1c4b2e6d6e8d3d8d4b82c28879578?s=32&d=identicon&r=PG&f=1","759":"https:\/\/i.stack.imgur.com\/HcrLc.jpg?s=32&g=1","760":"https:\/\/www.gravatar.com\/avatar\/182980bd827db1a1c80891a2955311f9?s=32&d=identicon&r=PG&f=1","761":"https:\/\/www.gravatar.com\/avatar\/79ca624b23e5036e8ac0642ae8575c55?s=32&d=identicon&r=PG&f=1","762":"https:\/\/lh4.googleusercontent.com\/-6K4w4KIbDn4\/AAAAAAAAAAI\/AAAAAAAACc0\/fot5jssbzo4\/photo.jpg?sz=32","763":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjEgRnaYr8NrJZhPvGx24tPy5_1ZsjuTpvKdJnm1g=k-s32","764":"https:\/\/www.gravatar.com\/avatar\/92014c72c0fd4f8d5c6c199244a82ba1?s=32&d=identicon&r=PG","765":"https:\/\/www.gravatar.com\/avatar\/19fbe141b7e313c7e50f649a0714e640?s=32&d=identicon&r=PG","766":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhJvrmukFNGCcY-QVlClWFtpkses8l9QPqbV0ub3w=k-s32","767":"https:\/\/lh3.googleusercontent.com\/-1QYMGjymo60\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnGDH2tw0J--teDLE_no7U4o4XIFQ\/s96-c\/photo.jpg?sz=32","768":"https:\/\/www.gravatar.com\/avatar\/ee80309570f6c176b8aa30da66321da7?s=32&d=identicon&r=PG&f=1","769":"https:\/\/www.gravatar.com\/avatar\/ef4f289d9a523398f04f3248323ce839?s=32&d=identicon&r=PG&f=1","770":"https:\/\/www.gravatar.com\/avatar\/f4bb4f9c96845be2674577e6446f67ea?s=32&d=identicon&r=PG&f=1","771":"https:\/\/www.gravatar.com\/avatar\/f62b945e7aa58f002a1ce9c4989ee009?s=32&d=identicon&r=PG&f=1","772":"https:\/\/www.gravatar.com\/avatar\/9260f4d292c3020165b55e57019eaf60?s=32&d=identicon&r=PG&f=1","773":"https:\/\/www.gravatar.com\/avatar\/94edbbb153a82a6560da38c020e58e7b?s=32&d=identicon&r=PG","774":"https:\/\/graph.facebook.com\/100000064655416\/picture?type=large","775":"https:\/\/www.gravatar.com\/avatar\/179bdd4e3c2b2394536d4adae83d504d?s=32&d=identicon&r=PG&f=1","776":"https:\/\/www.gravatar.com\/avatar\/f24815b6b60543ac37af378a22031e4f?s=32&d=identicon&r=PG","777":"https:\/\/lh3.googleusercontent.com\/-_bvKPIc1WlQ\/AAAAAAAAAAI\/AAAAAAAABok\/tn_E0cd4Ayw\/photo.jpg?sz=32","778":"https:\/\/www.gravatar.com\/avatar\/57ce754371ca8fde66432be90d0bea17?s=32&d=identicon&r=PG&f=1","779":"https:\/\/www.gravatar.com\/avatar\/017678e54ba43a9eac7067e0dd661d98?s=32&d=identicon&r=PG&f=1","780":"https:\/\/www.gravatar.com\/avatar\/247db17ed25b7ea5acec4c3564aca25d?s=32&d=identicon&r=PG&f=1","781":"https:\/\/lh4.googleusercontent.com\/-4u4e_YPOaDI\/AAAAAAAAAAI\/AAAAAAAAAAA\/AKF05nCbsR7a7an2oeCPcsAUoQ_6kg_v9A\/photo.jpg?sz=32","782":"https:\/\/www.gravatar.com\/avatar\/612f32b52ffc5c03950eaa39c67e0faa?s=32&d=identicon&r=PG&f=1","783":"https:\/\/i.stack.imgur.com\/TRSgT.png?s=32&g=1","784":"https:\/\/www.gravatar.com\/avatar\/b6b2c444c6d779511e95d7c97d96e096?s=32&d=identicon&r=PG&f=1","785":"https:\/\/i.stack.imgur.com\/1g1ds.jpg?s=32&g=1","786":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjzuFkT1e4MroxTDpfaLzF2Rb2vCi7ykVRMQdfF=k-s32","787":"https:\/\/graph.facebook.com\/503770339977000\/picture?type=large","788":"https:\/\/www.gravatar.com\/avatar\/eabf937c1ad5f0911dc4d5202dc9fd07?s=32&d=identicon&r=PG&f=1","789":"https:\/\/www.gravatar.com\/avatar\/6b699fe84d6350a403719c16f1001fa2?s=32&d=identicon&r=PG&f=1","790":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiIJU27HvGWggn7-SA7Tqd-yDXYOOJjZZesI6H_7w=k-s32","791":"https:\/\/lh3.googleusercontent.com\/-Fjtprf86FNM\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclMxzw2qxV36QnrwIclgWO-dRiKmw\/s96-c\/photo.jpg?sz=32","792":"https:\/\/lh5.googleusercontent.com\/-Qly0OOX7Uhw\/AAAAAAAAAAI\/AAAAAAAAAC8\/4AHP0HccboA\/photo.jpg?sz=32","793":"https:\/\/graph.facebook.com\/406903826436250\/picture?type=large","794":"https:\/\/lh5.googleusercontent.com\/-CZXMTWZFHHQ\/AAAAAAAAAAI\/AAAAAAAAAAA\/ABtNlbCagyZ-9jvQNcGriEUMXYSP_wgHPQ\/mo\/photo.jpg?sz=32","795":"https:\/\/lh4.googleusercontent.com\/-r71pQj0yWrM\/AAAAAAAAAAI\/AAAAAAAAA4w\/uqdw_pVndNM\/photo.jpg?sz=32","796":"https:\/\/www.gravatar.com\/avatar\/8193b47a92e7a96f01c3c8eb33927f87?s=32&d=identicon&r=PG&f=1","797":"https:\/\/cdn.sstatic.net\/Img\/user.svg?v=20c64bb67fc9","798":"https:\/\/www.gravatar.com\/avatar\/09c0c6f17abebbf87b897ea017d50b6b?s=32&d=identicon&r=PG&f=1","799":"https:\/\/www.gravatar.com\/avatar\/68bce47c6b7cbd2d62f699f78a2b0305?s=32&d=identicon&r=PG&f=1","800":"https:\/\/www.gravatar.com\/avatar\/3eb06d02c41b20856447f2f595bd10b4?s=32&d=identicon&r=PG&f=1","801":"https:\/\/graph.facebook.com\/311596510189213\/picture?type=large","802":"https:\/\/lh6.googleusercontent.com\/-Y0NSE2Y5oW8\/AAAAAAAAAAI\/AAAAAAAAABY\/gHHSwCG90UU\/photo.jpg?sz=32","803":"https:\/\/www.gravatar.com\/avatar\/fe26935718b731221d04485fc034ea68?s=32&d=identicon&r=PG&f=1","804":"https:\/\/i.stack.imgur.com\/gDNdB.jpg?s=32&g=1","805":"https:\/\/i.stack.imgur.com\/KIFfC.jpg?s=32&g=1","806":"https:\/\/www.gravatar.com\/avatar\/5a21ce4b7d16d8463b8b025f31aeb9c8?s=32&d=identicon&r=PG&f=1","807":"https:\/\/www.gravatar.com\/avatar\/b6dc6b5c4f22302ec23b7a3260ae586a?s=32&d=identicon&r=PG&f=1","808":"https:\/\/lh3.googleusercontent.com\/-ufsJci0WmxU\/AAAAAAAAAAI\/AAAAAAAAAAA\/AKF05nDjw3SKiSUJaKiUlAcA6e7pIwb32Q\/photo.jpg?sz=32","809":"https:\/\/www.gravatar.com\/avatar\/7919c3e23da5e4e2b34490041a6f45c4?s=32&d=identicon&r=PG&f=1","810":"https:\/\/www.gravatar.com\/avatar\/fae9e562c41cafff8b0d58318083ca55?s=32&d=identicon&r=PG&f=1","811":"https:\/\/www.gravatar.com\/avatar\/c7f5498a127dc87e94ad2daedde573d0?s=32&d=identicon&r=PG&f=1","812":"https:\/\/www.gravatar.com\/avatar\/189ecf1c222356830558dc2bad333ef1?s=32&d=identicon&r=PG&f=1","813":"https:\/\/www.gravatar.com\/avatar\/5d7fbf43bad5e6da15fb4b87fcdac0ca?s=32&d=identicon&r=PG&f=1","814":"https:\/\/www.gravatar.com\/avatar\/7731363c1d085d3beef6e886af850d91?s=32&d=identicon&r=PG&f=1","815":"https:\/\/www.gravatar.com\/avatar\/e0b7801c60c7f31d11798f6fd6a9839f?s=32&d=identicon&r=PG&f=1","816":"https:\/\/i.stack.imgur.com\/dA0U2.jpg?s=32&g=1","817":"https:\/\/lh4.googleusercontent.com\/-Hd15SWC4Cxs\/AAAAAAAAAAI\/AAAAAAAABK4\/AMZuuck78esueg4xPnHMb8m1RaEU3PsXZg\/s96-c\/photo.jpg?sz=32","818":"https:\/\/lh5.googleusercontent.com\/-TMf8M6FW4tM\/AAAAAAAAAAI\/AAAAAAAAAKU\/9qA4L2E7wKs\/photo.jpg?sz=32","819":"https:\/\/lh3.googleusercontent.com\/a-\/AAuE7mD-IOKgYjPRddNpEjhZh7jjeyUXgXe09uu6OQQQ=k-s32","820":"https:\/\/i.stack.imgur.com\/xy1HL.jpg?s=32&g=1","821":"https:\/\/www.gravatar.com\/avatar\/7ed58c55aa22d28252c4a8ba642ac76b?s=32&d=identicon&r=PG&f=1","822":"https:\/\/www.gravatar.com\/avatar\/97a64608a839659ad95fca42f894ecad?s=32&d=identicon&r=PG&f=1","823":"https:\/\/www.gravatar.com\/avatar\/68c3c189e8875c35ac9779532878079b?s=32&d=identicon&r=PG","824":"https:\/\/i.stack.imgur.com\/xy1HL.jpg?s=32&g=1","825":"https:\/\/www.gravatar.com\/avatar\/0a5c67e7882b0a547d0f40dd471dfab9?s=32&d=identicon&r=PG&f=1","826":"https:\/\/www.gravatar.com\/avatar\/09c0c6f17abebbf87b897ea017d50b6b?s=32&d=identicon&r=PG&f=1","827":"https:\/\/www.gravatar.com\/avatar\/d8a7dbe7403229529d8cac138c6780b1?s=32&d=identicon&r=PG&f=1","828":"https:\/\/lh5.googleusercontent.com\/-Wn48O5aFznk\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3reQu3waf6effEPa7wV1NTEcgURyqA\/mo\/photo.jpg?sz=32","829":"https:\/\/www.gravatar.com\/avatar\/970a37617c4c35307cea3bd627f0a2c9?s=32&d=identicon&r=PG&f=1","830":"https:\/\/lh5.googleusercontent.com\/-MNV0tlVPV40\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucm-PgwlLavec44betBmjYdRp52-Rw\/s96-c\/photo.jpg?sz=32","831":"https:\/\/www.gravatar.com\/avatar\/97a64608a839659ad95fca42f894ecad?s=32&d=identicon&r=PG&f=1","832":"https:\/\/i.stack.imgur.com\/L8YgX.jpg?s=32&g=1","833":"https:\/\/www.gravatar.com\/avatar\/5a21ce4b7d16d8463b8b025f31aeb9c8?s=32&d=identicon&r=PG&f=1","834":"https:\/\/www.gravatar.com\/avatar\/5a21ce4b7d16d8463b8b025f31aeb9c8?s=32&d=identicon&r=PG&f=1","835":"https:\/\/www.gravatar.com\/avatar\/40853282ab57cd410158d2d2f79a3267?s=32&d=identicon&r=PG&f=1","836":"https:\/\/www.gravatar.com\/avatar\/32c8461715f8865a69713f80a04473e4?s=32&d=identicon&r=PG","837":"https:\/\/i.stack.imgur.com\/0lDRH.jpg?s=32&g=1","838":"https:\/\/graph.facebook.com\/100002165154341\/picture?type=large","839":"https:\/\/www.gravatar.com\/avatar\/739788961aca6fc0da77d57ffd29a3fe?s=32&d=identicon&r=PG&f=1","840":"https:\/\/www.gravatar.com\/avatar\/7731363c1d085d3beef6e886af850d91?s=32&d=identicon&r=PG&f=1","841":"https:\/\/www.gravatar.com\/avatar\/91d50e7dbef17d1e34a424f4f076d499?s=32&d=identicon&r=PG&f=1","842":"https:\/\/www.gravatar.com\/avatar\/5a21ce4b7d16d8463b8b025f31aeb9c8?s=32&d=identicon&r=PG&f=1","843":"https:\/\/www.gravatar.com\/avatar\/47b41abd16cf7dc485a9a2ad722c201f?s=32&d=identicon&r=PG&f=1","844":"https:\/\/i.stack.imgur.com\/0lDRH.jpg?s=32&g=1","845":"https:\/\/www.gravatar.com\/avatar\/01da250947c98117859b16bddf5fdf1b?s=32&d=identicon&r=PG&f=1","846":"https:\/\/i.stack.imgur.com\/zjZ6d.jpg?s=32&g=1","847":"https:\/\/lh3.googleusercontent.com\/-5aF_EbEBzQY\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucmVE2kupaEh_5x0nDdRxFfNIkhQow\/s96-c\/photo.jpg?sz=32","848":"https:\/\/www.gravatar.com\/avatar\/e381cf72766be4859a6c1c1892fde8af?s=32&d=identicon&r=PG&f=1","849":"https:\/\/www.gravatar.com\/avatar\/e381cf72766be4859a6c1c1892fde8af?s=32&d=identicon&r=PG&f=1","850":"https:\/\/www.gravatar.com\/avatar\/0f62371138d1d79d7f5683e5fbf9db88?s=32&d=identicon&r=PG&f=1","851":"https:\/\/www.gravatar.com\/avatar\/97a64608a839659ad95fca42f894ecad?s=32&d=identicon&r=PG&f=1","852":"https:\/\/www.gravatar.com\/avatar\/5a21ce4b7d16d8463b8b025f31aeb9c8?s=32&d=identicon&r=PG&f=1","853":"https:\/\/www.gravatar.com\/avatar\/62fe1642a05913b0f523b3f705825fd0?s=32&d=identicon&r=PG&f=1","854":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","855":"https:\/\/i.stack.imgur.com\/ryj4w.png?s=32&g=1","856":"https:\/\/www.gravatar.com\/avatar\/878700a268a5416fdfc90983927b91ea?s=32&d=identicon&r=PG&f=1","857":"https:\/\/www.gravatar.com\/avatar\/afa6c05c5d36d686e2b1f6637e9819aa?s=32&d=identicon&r=PG&f=1","858":"https:\/\/www.gravatar.com\/avatar\/b723a304e08b996746d1d48c8c40badc?s=32&d=identicon&r=PG&f=1","859":"https:\/\/lh3.googleusercontent.com\/-C8MbynhEt6k\/AAAAAAAAAAI\/AAAAAAAAAAA\/AKF05nARAxJ4AWYf7B1cWmrrUZvLmeYGkA\/photo.jpg?sz=32","860":"https:\/\/www.gravatar.com\/avatar\/4dbae52903534df49e0a1e6004ef1980?s=32&d=identicon&r=PG&f=1","861":"https:\/\/lh6.googleusercontent.com\/-dsuwGM0W7l8\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclPXjIDZfmhDXM0izI8Hco_kbQSgw\/s96-c\/photo.jpg?sz=32","862":"https:\/\/lh6.googleusercontent.com\/-dsuwGM0W7l8\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclPXjIDZfmhDXM0izI8Hco_kbQSgw\/s96-c\/photo.jpg?sz=32","863":"https:\/\/lh4.googleusercontent.com\/-Pee58EEaQ_Y\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclFopRi-kBxq-4404WCanddr9rT9Q\/s96-c\/photo.jpg?sz=32","864":"https:\/\/www.gravatar.com\/avatar\/62fe1642a05913b0f523b3f705825fd0?s=32&d=identicon&r=PG&f=1","865":"https:\/\/www.gravatar.com\/avatar\/3b706f6aa68a7d3dde17884d92ea2523?s=32&d=identicon&r=PG","866":"https:\/\/www.gravatar.com\/avatar\/cc1da8cc13e1d7d6be514e6857a2792f?s=32&d=identicon&r=PG&f=1","867":"https:\/\/lh3.googleusercontent.com\/-ValjfHSoLZY\/AAAAAAAAAAI\/AAAAAAAABAo\/hCXxt6OB3Hw\/photo.jpg?sz=32","868":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgEFZC8I2We6pYVcaMTUhf24Na_3W6PrFzGusxSLA=k-s32","869":"https:\/\/lh6.googleusercontent.com\/-5XT9XFLOaRw\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rdN0JyjOjPwdSZMuPvQ9BLWrW_5-g\/photo.jpg?sz=32","870":"https:\/\/www.gravatar.com\/avatar\/6aee15f496b148561ea1269442347a21?s=32&d=identicon&r=PG&f=1","871":"https:\/\/www.gravatar.com\/avatar\/4d4ad9e569f0aa0e99e81bdc32b39e08?s=32&d=identicon&r=PG&f=1","872":"https:\/\/www.gravatar.com\/avatar\/92ba886b03a595085d0410bf2546854c?s=32&d=identicon&r=PG","873":"https:\/\/www.gravatar.com\/avatar\/141f600e79f39facb1a09705f8ead0f2?s=32&d=identicon&r=PG&f=1","874":"https:\/\/www.gravatar.com\/avatar\/2abec4dd0df94ef6b82cfe32e8fe3883?s=32&d=identicon&r=PG&f=1","875":"https:\/\/lh6.googleusercontent.com\/-7Miaei9Th0A\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuuclxz5IZTwBB3ebehy8q8BuR6sFJIw\/s96-c\/photo.jpg?sz=32","876":"https:\/\/i.stack.imgur.com\/INfIN.jpg?s=32&g=1","877":"https:\/\/www.gravatar.com\/avatar\/43a9d099a704e02e0c4e2d4daac1237d?s=32&d=identicon&r=PG&f=1","878":"https:\/\/i.stack.imgur.com\/PKXU2.jpg?s=32&g=1","879":"https:\/\/www.gravatar.com\/avatar\/24ffa8e2491edd71e952f956b4fb1e3b?s=32&d=identicon&r=PG&f=1","880":"https:\/\/www.gravatar.com\/avatar\/92ba886b03a595085d0410bf2546854c?s=32&d=identicon&r=PG","881":"https:\/\/www.gravatar.com\/avatar\/f4bb4f9c96845be2674577e6446f67ea?s=32&d=identicon&r=PG&f=1","882":"https:\/\/www.gravatar.com\/avatar\/f4bb4f9c96845be2674577e6446f67ea?s=32&d=identicon&r=PG&f=1","883":"https:\/\/www.gravatar.com\/avatar\/d184bef4e5397501c7bf79aae58b36bb?s=32&d=identicon&r=PG&f=1","884":"https:\/\/graph.facebook.com\/100000555784275\/picture?type=large","885":"https:\/\/www.gravatar.com\/avatar\/8f79ca0673042a326e67a2fb277c8ad5?s=32&d=identicon&r=PG&f=1","886":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhGs81JwbhHumE8ORpg-Le7cZgcxhbtNM808gY6wHU=k-s32","887":"https:\/\/www.gravatar.com\/avatar\/d463ed324c77aff52c6778bbe2fcda7e?s=32&d=identicon&r=PG&f=1","888":"https:\/\/i.stack.imgur.com\/cf75z.png?s=32&g=1","889":"https:\/\/lh5.googleusercontent.com\/-CH1d49B1cYQ\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rcmrZtHozZhVqn0P5pKnM-9NbWe6w\/photo.jpg?sz=32","890":"https:\/\/www.gravatar.com\/avatar\/598d68f6e5feae7f608eeec8467b32d5?s=32&d=identicon&r=PG&f=1"},"Question posted time":{"0":"Dec 31, 2021 at 18:03","1":"Dec 31, 2021 at 9:01","2":"Dec 31, 2021 at 7:28","3":"Dec 31, 2021 at 4:50","4":"Dec 30, 2021 at 20:44","5":"Dec 30, 2021 at 14:32","6":"Dec 26, 2021 at 7:46","7":"Dec 25, 2021 at 20:59","8":"Dec 25, 2021 at 18:43","9":"Dec 25, 2021 at 11:24","10":"Dec 25, 2021 at 9:08","11":"Dec 24, 2021 at 23:34","12":"Dec 25, 2021 at 1:44","13":"Dec 24, 2021 at 16:06","14":"Dec 23, 2021 at 18:25","15":"Dec 23, 2021 at 15:51","16":"Dec 23, 2021 at 15:19","17":"Dec 23, 2021 at 11:24","18":"Dec 23, 2021 at 5:38","19":"Dec 22, 2021 at 6:48","20":"Dec 22, 2021 at 17:01","21":"Dec 21, 2021 at 15:44","22":"Dec 21, 2021 at 15:12","23":"Dec 21, 2021 at 9:39","24":"Dec 20, 2021 at 4:42","25":"Dec 19, 2021 at 16:59","26":"Dec 19, 2021 at 15:33","27":"Dec 19, 2021 at 15:32","28":"Dec 19, 2021 at 14:15","29":"Dec 18, 2021 at 7:34","30":"Dec 18, 2021 at 7:15","31":"Dec 17, 2021 at 11:42","32":"Dec 16, 2021 at 12:08","33":"Dec 16, 2021 at 10:34","34":"Dec 16, 2021 at 10:21","35":"Dec 15, 2021 at 22:13","36":"Dec 15, 2021 at 15:14","37":"Dec 15, 2021 at 14:28","38":"Dec 15, 2021 at 14:00","39":"Dec 15, 2021 at 13:43","40":"Dec 15, 2021 at 11:37","41":"Dec 14, 2021 at 17:58","42":"Dec 14, 2021 at 16:29","43":"Dec 14, 2021 at 12:09","44":"Dec 14, 2021 at 6:25","45":"Dec 13, 2021 at 20:46","46":"Dec 13, 2021 at 19:13","47":"Dec 12, 2021 at 21:52","48":"Dec 12, 2021 at 17:27","49":"Dec 12, 2021 at 17:26","50":"Dec 12, 2021 at 12:25","51":"Dec 12, 2021 at 11:13","52":"Dec 12, 2021 at 3:07","53":"Dec 11, 2021 at 20:14","54":"Dec 11, 2021 at 18:09","55":"Dec 11, 2021 at 9:20","56":"Dec 11, 2021 at 5:27","57":"Dec 10, 2021 at 20:23","58":"Dec 10, 2021 at 11:58","59":"Dec 10, 2021 at 11:56","60":"Dec 10, 2021 at 10:24","61":"Dec 10, 2021 at 9:57","62":"Dec 10, 2021 at 7:36","63":"Dec 10, 2021 at 4:43","64":"Dec 6, 2021 at 18:43","65":"Dec 6, 2021 at 17:15","66":"Dec 6, 2021 at 16:42","67":"Dec 6, 2021 at 15:39","68":"Dec 5, 2021 at 13:31","69":"Dec 5, 2021 at 10:36","70":"Dec 5, 2021 at 1:04","71":"Dec 4, 2021 at 17:01","72":"Dec 4, 2021 at 16:25","73":"Dec 4, 2021 at 8:24","74":"Dec 3, 2021 at 18:07","75":"Dec 3, 2021 at 12:37","76":"Dec 3, 2021 at 12:10","77":"Dec 3, 2021 at 3:13","78":"Dec 3, 2021 at 2:26","79":"Dec 2, 2021 at 11:09","80":"Dec 1, 2021 at 23:19","81":"Dec 2, 2021 at 5:26","82":"Dec 1, 2021 at 17:04","83":"Dec 1, 2021 at 16:14","84":"Dec 1, 2021 at 2:41","85":"Dec 1, 2021 at 1:29","86":"Dec 1, 2021 at 0:02","87":"Nov 30, 2021 at 15:34","88":"Nov 30, 2021 at 14:20","89":"Nov 30, 2021 at 13:05","90":"Nov 30, 2021 at 4:41","91":"Nov 30, 2021 at 3:50","92":"Nov 29, 2021 at 23:50","93":"Nov 29, 2021 at 23:09","94":"Nov 29, 2021 at 15:53","95":"Nov 29, 2021 at 12:28","96":"Nov 29, 2021 at 12:12","97":"Nov 29, 2021 at 12:10","98":"Nov 29, 2021 at 5:55","99":"Nov 29, 2021 at 4:48","100":"Nov 28, 2021 at 23:11","101":"Nov 28, 2021 at 17:54","102":"Nov 28, 2021 at 12:56","103":"Nov 28, 2021 at 12:46","104":"Nov 28, 2021 at 11:30","105":"Nov 28, 2021 at 9:31","106":"Nov 27, 2021 at 20:22","107":"Nov 27, 2021 at 19:53","108":"Nov 27, 2021 at 16:28","109":"Nov 27, 2021 at 10:04","110":"Nov 26, 2021 at 21:30","111":"Nov 26, 2021 at 16:38","112":"Nov 26, 2021 at 14:44","113":"Nov 26, 2021 at 13:11","114":"Nov 26, 2021 at 13:00","115":"Nov 26, 2021 at 12:51","116":"Nov 26, 2021 at 12:17","117":"Nov 26, 2021 at 12:03","118":"Nov 26, 2021 at 11:39","119":"Nov 26, 2021 at 6:15","120":"Nov 25, 2021 at 21:18","121":"Nov 25, 2021 at 19:00","122":"Nov 25, 2021 at 13:55","123":"Nov 24, 2021 at 21:57","124":"Nov 24, 2021 at 20:45","125":"Nov 24, 2021 at 17:22","126":"Nov 24, 2021 at 17:15","127":"Nov 24, 2021 at 14:41","128":"Nov 23, 2021 at 4:48","129":"Nov 22, 2021 at 3:48","130":"Nov 21, 2021 at 16:25","131":"Nov 21, 2021 at 9:18","132":"Nov 21, 2021 at 7:59","133":"Nov 21, 2021 at 7:54","134":"Nov 20, 2021 at 20:27","135":"Nov 20, 2021 at 16:18","136":"Nov 20, 2021 at 6:41","137":"Nov 20, 2021 at 2:30","138":"Nov 19, 2021 at 14:26","139":"Nov 19, 2021 at 5:53","140":"Nov 19, 2021 at 4:54","141":"Nov 19, 2021 at 3:30","142":"Nov 19, 2021 at 1:49","143":"Nov 18, 2021 at 19:13","144":"Nov 18, 2021 at 17:53","145":"Nov 18, 2021 at 13:38","146":"Nov 18, 2021 at 12:54","147":"Nov 18, 2021 at 12:51","148":"Nov 18, 2021 at 12:39","149":"Nov 18, 2021 at 12:38","150":"Nov 18, 2021 at 11:59","151":"Nov 17, 2021 at 21:29","152":"Nov 17, 2021 at 21:00","153":"Nov 17, 2021 at 20:24","154":"Nov 17, 2021 at 20:19","155":"Nov 17, 2021 at 10:08","156":"Nov 16, 2021 at 8:15","157":"Nov 16, 2021 at 4:34","158":"Nov 15, 2021 at 17:47","159":"Nov 14, 2021 at 23:13","160":"Nov 14, 2021 at 19:22","161":"Nov 13, 2021 at 22:27","162":"Nov 13, 2021 at 19:19","163":"Nov 13, 2021 at 13:23","164":"Nov 13, 2021 at 7:22","165":"Nov 13, 2021 at 6:00","166":"Nov 13, 2021 at 5:22","167":"Nov 12, 2021 at 18:48","168":"Nov 12, 2021 at 15:19","169":"Nov 12, 2021 at 13:30","170":"Nov 12, 2021 at 11:55","171":"Nov 12, 2021 at 10:30","172":"Nov 11, 2021 at 21:32","173":"Nov 11, 2021 at 5:23","174":"Nov 10, 2021 at 22:59","175":"Nov 10, 2021 at 14:26","176":"Nov 10, 2021 at 10:53","177":"Nov 10, 2021 at 9:05","178":"Nov 10, 2021 at 7:54","179":"Nov 10, 2021 at 3:35","180":"Nov 9, 2021 at 16:55","181":"Nov 9, 2021 at 15:10","182":"Nov 9, 2021 at 14:23","183":"Nov 9, 2021 at 12:52","184":"Nov 9, 2021 at 12:01","185":"Nov 9, 2021 at 6:12","186":"Nov 9, 2021 at 0:11","187":"Nov 8, 2021 at 21:31","188":"Nov 8, 2021 at 15:36","189":"Nov 8, 2021 at 12:13","190":"Nov 7, 2021 at 18:10","191":"Nov 7, 2021 at 14:49","192":"Nov 7, 2021 at 6:50","193":"Nov 7, 2021 at 6:17","194":"Nov 3, 2021 at 13:15","195":"Nov 3, 2021 at 11:16","196":"Nov 3, 2021 at 9:47","197":"Nov 3, 2021 at 2:38","198":"Nov 3, 2021 at 1:12","199":"Nov 3, 2021 at 0:21","200":"Nov 2, 2021 at 7:54","201":"Nov 2, 2021 at 7:13","202":"Nov 2, 2021 at 5:16","203":"Nov 1, 2021 at 15:52","204":"Oct 31, 2021 at 18:45","205":"Oct 31, 2021 at 18:01","206":"Oct 31, 2021 at 8:28","207":"Oct 30, 2021 at 20:43","208":"Oct 30, 2021 at 11:28","209":"Oct 30, 2021 at 7:29","210":"Oct 30, 2021 at 2:38","211":"Oct 29, 2021 at 20:18","212":"Oct 29, 2021 at 18:39","213":"Oct 29, 2021 at 15:56","214":"Oct 29, 2021 at 9:50","215":"Oct 28, 2021 at 9:07","216":"Oct 28, 2021 at 1:22","217":"Oct 26, 2021 at 18:12","218":"Oct 26, 2021 at 12:35","219":"Oct 26, 2021 at 7:51","220":"Oct 26, 2021 at 3:26","221":"Oct 25, 2021 at 15:08","222":"Oct 25, 2021 at 12:47","223":"Oct 24, 2021 at 23:39","224":"Oct 24, 2021 at 21:28","225":"Oct 24, 2021 at 18:47","226":"Oct 24, 2021 at 10:21","227":"Oct 24, 2021 at 8:02","228":"Oct 23, 2021 at 22:30","229":"Oct 23, 2021 at 18:09","230":"Oct 23, 2021 at 12:07","231":"Oct 23, 2021 at 10:46","232":"Oct 23, 2021 at 10:07","233":"Oct 22, 2021 at 22:38","234":"Oct 22, 2021 at 17:11","235":"Oct 22, 2021 at 14:36","236":"Oct 22, 2021 at 11:43","237":"Oct 22, 2021 at 5:08","238":"Oct 22, 2021 at 3:02","239":"Oct 21, 2021 at 10:01","240":"Oct 21, 2021 at 9:41","241":"Oct 21, 2021 at 7:46","242":"Oct 20, 2021 at 16:03","243":"Oct 20, 2021 at 13:34","244":"Oct 20, 2021 at 12:18","245":"Oct 20, 2021 at 1:55","246":"Oct 19, 2021 at 19:05","247":"Oct 19, 2021 at 7:30","248":"Oct 19, 2021 at 4:30","249":"Oct 18, 2021 at 15:15","250":"Oct 18, 2021 at 11:49","251":"Oct 17, 2021 at 20:07","252":"Oct 17, 2021 at 6:06","253":"Oct 16, 2021 at 9:13","254":"Oct 15, 2021 at 18:30","255":"Oct 15, 2021 at 11:47","256":"Oct 15, 2021 at 9:37","257":"Oct 15, 2021 at 9:25","258":"Oct 15, 2021 at 8:40","259":"Oct 14, 2021 at 19:11","260":"Oct 14, 2021 at 10:51","261":"Oct 14, 2021 at 8:54","262":"Oct 14, 2021 at 6:10","263":"Oct 14, 2021 at 3:27","264":"Oct 13, 2021 at 9:17","265":"Oct 12, 2021 at 11:01","266":"Oct 12, 2021 at 8:36","267":"Oct 12, 2021 at 6:28","268":"Oct 12, 2021 at 5:09","269":"Oct 11, 2021 at 12:59","270":"Oct 11, 2021 at 10:35","271":"Oct 11, 2021 at 10:25","272":"Oct 11, 2021 at 9:28","273":"Oct 10, 2021 at 12:49","274":"Oct 10, 2021 at 6:28","275":"Oct 9, 2021 at 17:12","276":"Oct 9, 2021 at 12:21","277":"Oct 8, 2021 at 20:34","278":"Oct 9, 2021 at 11:21","279":"Oct 8, 2021 at 20:12","280":"Oct 8, 2021 at 16:23","281":"Oct 8, 2021 at 16:17","282":"Oct 6, 2021 at 10:14","283":"Oct 6, 2021 at 9:09","284":"Oct 5, 2021 at 20:57","285":"Oct 5, 2021 at 11:59","286":"Oct 5, 2021 at 10:51","287":"Oct 5, 2021 at 9:57","288":"Oct 4, 2021 at 18:35","289":"Oct 4, 2021 at 15:50","290":"Oct 4, 2021 at 11:12","291":"Oct 4, 2021 at 7:38","292":"Oct 4, 2021 at 4:19","293":"Oct 3, 2021 at 21:52","294":"Oct 3, 2021 at 20:59","295":"Oct 3, 2021 at 17:19","296":"Oct 3, 2021 at 12:14","297":"Oct 3, 2021 at 8:52","298":"Oct 2, 2021 at 20:30","299":"Oct 2, 2021 at 19:32","300":"Oct 2, 2021 at 5:32","301":"Oct 1, 2021 at 23:47","302":"Oct 1, 2021 at 14:09","303":"Oct 1, 2021 at 14:08","304":"Oct 1, 2021 at 12:08","305":"Sep 30, 2021 at 15:30","306":"Sep 30, 2021 at 0:51","307":"Sep 29, 2021 at 20:19","308":"Sep 29, 2021 at 20:18","309":"Sep 28, 2021 at 19:35","310":"Sep 28, 2021 at 16:38","311":"Sep 28, 2021 at 14:28","312":"Sep 28, 2021 at 4:20","313":"Sep 27, 2021 at 21:13","314":"Sep 27, 2021 at 21:04","315":"Sep 27, 2021 at 16:36","316":"Sep 27, 2021 at 14:52","317":"Sep 26, 2021 at 21:46","318":"Sep 26, 2021 at 21:34","319":"Sep 26, 2021 at 16:02","320":"Sep 26, 2021 at 14:57","321":"Sep 26, 2021 at 8:35","322":"Sep 25, 2021 at 14:48","323":"Sep 25, 2021 at 11:37","324":"Sep 25, 2021 at 8:22","325":"Sep 25, 2021 at 6:44","326":"Sep 24, 2021 at 21:23","327":"Sep 24, 2021 at 19:19","328":"Sep 24, 2021 at 16:49","329":"Sep 24, 2021 at 9:13","330":"Sep 24, 2021 at 8:10","331":"Sep 24, 2021 at 6:16","332":"Sep 24, 2021 at 6:01","333":"Sep 23, 2021 at 15:30","334":"Sep 23, 2021 at 13:01","335":"Sep 23, 2021 at 12:22","336":"Sep 23, 2021 at 12:14","337":"Sep 22, 2021 at 21:39","338":"Sep 22, 2021 at 19:59","339":"Sep 22, 2021 at 13:46","340":"Sep 22, 2021 at 10:34","341":"Sep 21, 2021 at 18:56","342":"Sep 21, 2021 at 13:08","343":"Sep 21, 2021 at 12:42","344":"Sep 21, 2021 at 3:35","345":"Sep 21, 2021 at 3:35","346":"Sep 20, 2021 at 22:49","347":"Sep 20, 2021 at 17:24","348":"Sep 20, 2021 at 16:45","349":"Sep 20, 2021 at 15:58","350":"Sep 20, 2021 at 9:06","351":"Sep 20, 2021 at 6:45","352":"Sep 20, 2021 at 2:47","353":"Sep 19, 2021 at 9:41","354":"Sep 18, 2021 at 23:35","355":"Sep 18, 2021 at 16:15","356":"Sep 17, 2021 at 9:24","357":"Sep 16, 2021 at 16:00","358":"Sep 16, 2021 at 9:57","359":"Sep 16, 2021 at 7:13","360":"Sep 15, 2021 at 8:30","361":"Sep 14, 2021 at 23:44","362":"Sep 14, 2021 at 23:39","363":"Sep 14, 2021 at 17:49","364":"Sep 14, 2021 at 13:39","365":"Sep 14, 2021 at 12:44","366":"Sep 14, 2021 at 9:03","367":"Sep 13, 2021 at 15:54","368":"Sep 13, 2021 at 12:17","369":"Sep 13, 2021 at 9:53","370":"Sep 13, 2021 at 7:51","371":"Sep 12, 2021 at 17:07","372":"Sep 12, 2021 at 15:39","373":"Sep 12, 2021 at 8:53","374":"Sep 11, 2021 at 12:16","375":"Sep 10, 2021 at 23:40","376":"Sep 10, 2021 at 17:52","377":"Sep 10, 2021 at 14:36","378":"Sep 10, 2021 at 5:59","379":"Sep 10, 2021 at 5:59","380":"Sep 10, 2021 at 5:42","381":"Sep 9, 2021 at 21:54","382":"Sep 9, 2021 at 15:17","383":"Sep 9, 2021 at 13:47","384":"Sep 9, 2021 at 5:02","385":"Sep 8, 2021 at 14:27","386":"Sep 8, 2021 at 10:28","387":"Sep 7, 2021 at 21:29","388":"Sep 7, 2021 at 18:24","389":"Sep 7, 2021 at 14:55","390":"Sep 4, 2021 at 8:12","391":"Sep 3, 2021 at 21:27","392":"Sep 3, 2021 at 18:26","393":"Sep 3, 2021 at 16:03","394":"Sep 2, 2021 at 13:04","395":"Sep 2, 2021 at 4:28","396":"Sep 2, 2021 at 3:19","397":"Sep 1, 2021 at 13:09","398":"Sep 1, 2021 at 8:54","399":"Sep 1, 2021 at 4:51","400":"Aug 31, 2021 at 22:16","401":"Aug 31, 2021 at 19:21","402":"Aug 31, 2021 at 17:19","403":"Aug 31, 2021 at 8:08","404":"Aug 31, 2021 at 1:59","405":"Aug 31, 2021 at 0:46","406":"Aug 30, 2021 at 10:33","407":"Aug 30, 2021 at 7:39","408":"Aug 30, 2021 at 1:10","409":"Aug 29, 2021 at 21:49","410":"Aug 29, 2021 at 6:37","411":"Aug 28, 2021 at 23:53","412":"Aug 27, 2021 at 16:11","413":"Aug 26, 2021 at 18:10","414":"Aug 25, 2021 at 15:45","415":"Aug 25, 2021 at 4:59","416":"Aug 24, 2021 at 19:43","417":"Aug 24, 2021 at 13:40","418":"Aug 24, 2021 at 10:14","419":"Aug 23, 2021 at 21:54","420":"Aug 23, 2021 at 16:42","421":"Aug 23, 2021 at 15:18","422":"Aug 23, 2021 at 3:47","423":"Aug 22, 2021 at 22:42","424":"Aug 22, 2021 at 18:22","425":"Aug 21, 2021 at 12:35","426":"Aug 21, 2021 at 0:24","427":"Aug 20, 2021 at 14:05","428":"Aug 19, 2021 at 22:14","429":"Aug 19, 2021 at 18:08","430":"Aug 19, 2021 at 14:00","431":"Aug 19, 2021 at 5:52","432":"Aug 19, 2021 at 5:33","433":"Aug 19, 2021 at 4:33","434":"Aug 18, 2021 at 20:54","435":"Aug 18, 2021 at 10:28","436":"Aug 18, 2021 at 5:51","437":"Aug 17, 2021 at 12:35","438":"Aug 17, 2021 at 11:54","439":"Aug 17, 2021 at 5:59","440":"Aug 14, 2021 at 18:53","441":"Aug 14, 2021 at 17:43","442":"Aug 14, 2021 at 10:05","443":"Aug 13, 2021 at 5:31","444":"Aug 13, 2021 at 3:54","445":"Aug 12, 2021 at 20:28","446":"Aug 12, 2021 at 15:24","447":"Aug 12, 2021 at 14:19","448":"Aug 11, 2021 at 20:38","449":"Aug 11, 2021 at 9:29","450":"Aug 10, 2021 at 22:24","451":"Aug 10, 2021 at 21:35","452":"Aug 10, 2021 at 19:33","453":"Aug 10, 2021 at 9:32","454":"Aug 10, 2021 at 8:07","455":"Aug 10, 2021 at 5:53","456":"Aug 10, 2021 at 5:47","457":"Aug 9, 2021 at 11:55","458":"Aug 9, 2021 at 10:35","459":"Aug 9, 2021 at 10:03","460":"Aug 9, 2021 at 9:49","461":"Aug 9, 2021 at 3:46","462":"Aug 5, 2021 at 5:02","463":"Aug 4, 2021 at 12:20","464":"Aug 4, 2021 at 3:52","465":"Aug 4, 2021 at 2:18","466":"Aug 3, 2021 at 15:45","467":"Aug 3, 2021 at 13:23","468":"Aug 3, 2021 at 12:10","469":"Aug 3, 2021 at 7:37","470":"Aug 3, 2021 at 7:24","471":"Aug 3, 2021 at 3:56","472":"Aug 2, 2021 at 17:54","473":"Aug 2, 2021 at 15:33","474":"Aug 2, 2021 at 8:17","475":"Aug 2, 2021 at 4:18","476":"Jul 31, 2021 at 6:37","477":"Jul 30, 2021 at 17:41","478":"Jul 30, 2021 at 14:29","479":"Jul 29, 2021 at 22:47","480":"Jul 29, 2021 at 17:21","481":"Jul 29, 2021 at 12:35","482":"Jul 29, 2021 at 10:55","483":"Jul 28, 2021 at 11:34","484":"Jul 28, 2021 at 7:20","485":"Jul 27, 2021 at 15:08","486":"Jul 27, 2021 at 13:37","487":"Jul 27, 2021 at 5:22","488":"Jul 26, 2021 at 12:52","489":"Jul 26, 2021 at 10:08","490":"Jul 26, 2021 at 7:19","491":"Jul 25, 2021 at 17:38","492":"Jul 25, 2021 at 12:02","493":"Jul 24, 2021 at 23:11","494":"Jul 24, 2021 at 12:51","495":"Jul 23, 2021 at 14:27","496":"Jul 23, 2021 at 10:42","497":"Jul 20, 2021 at 11:01","498":"Jul 20, 2021 at 5:11","499":"Jul 19, 2021 at 18:19","500":"Jul 19, 2021 at 10:23","501":"Jul 19, 2021 at 9:15","502":"Jul 19, 2021 at 8:29","503":"Jul 19, 2021 at 7:30","504":"Jul 19, 2021 at 2:36","505":"Jul 18, 2021 at 13:47","506":"Jul 17, 2021 at 13:29","507":"Jul 16, 2021 at 16:52","508":"Jul 16, 2021 at 14:28","509":"Jul 16, 2021 at 5:12","510":"Jul 15, 2021 at 20:29","511":"Jul 15, 2021 at 10:01","512":"Jul 14, 2021 at 9:25","513":"Jul 14, 2021 at 9:21","514":"Jul 13, 2021 at 15:34","515":"Jul 13, 2021 at 14:26","516":"Jul 13, 2021 at 8:45","517":"Jul 8, 2021 at 17:31","518":"Jul 8, 2021 at 11:53","519":"Jul 8, 2021 at 6:26","520":"Jul 8, 2021 at 6:22","521":"Jul 7, 2021 at 22:39","522":"Jul 7, 2021 at 19:25","523":"Jul 7, 2021 at 16:04","524":"Jul 7, 2021 at 14:48","525":"Jul 7, 2021 at 0:30","526":"Jul 6, 2021 at 12:57","527":"Jul 5, 2021 at 18:27","528":"Jul 5, 2021 at 13:11","529":"Jul 4, 2021 at 19:25","530":"Jul 4, 2021 at 18:20","531":"Jul 4, 2021 at 15:14","532":"Jul 4, 2021 at 10:15","533":"Jul 1, 2021 at 6:25","534":"Jul 1, 2021 at 17:45","535":"Jun 30, 2021 at 20:57","536":"Jun 30, 2021 at 19:23","537":"Jun 30, 2021 at 18:54","538":"Jun 30, 2021 at 17:11","539":"Jun 30, 2021 at 7:29","540":"Jun 30, 2021 at 11:57","541":"Jun 29, 2021 at 14:35","542":"Jun 29, 2021 at 13:15","543":"Jun 28, 2021 at 13:01","544":"Jun 28, 2021 at 11:48","545":"Jun 27, 2021 at 7:00","546":"Jun 26, 2021 at 9:38","547":"Jun 25, 2021 at 13:06","548":"Jun 25, 2021 at 11:32","549":"Jun 25, 2021 at 1:23","550":"Jun 24, 2021 at 22:28","551":"Jun 24, 2021 at 17:29","552":"Jun 23, 2021 at 23:02","553":"Jun 23, 2021 at 1:55","554":"Jun 18, 2021 at 13:55","555":"Jun 18, 2021 at 9:16","556":"Jun 18, 2021 at 6:57","557":"Jun 17, 2021 at 18:26","558":"Jun 17, 2021 at 8:20","559":"Jun 16, 2021 at 20:43","560":"Jun 16, 2021 at 17:04","561":"Jun 16, 2021 at 13:54","562":"Jun 16, 2021 at 8:07","563":"Jun 16, 2021 at 10:18","564":"Jun 15, 2021 at 13:59","565":"Jun 14, 2021 at 13:42","566":"Jun 14, 2021 at 14:16","567":"Jun 13, 2021 at 16:10","568":"Jun 11, 2021 at 16:38","569":"Jun 11, 2021 at 0:41","570":"Jun 10, 2021 at 6:32","571":"Jun 9, 2021 at 15:30","572":"Jun 9, 2021 at 11:47","573":"Jun 9, 2021 at 8:30","574":"Jun 9, 2021 at 6:22","575":"Jun 9, 2021 at 1:21","576":"Jun 8, 2021 at 21:42","577":"Jun 8, 2021 at 13:30","578":"Jun 8, 2021 at 5:03","579":"Jun 8, 2021 at 2:52","580":"Jun 7, 2021 at 12:53","581":"Jun 7, 2021 at 12:37","582":"Jun 7, 2021 at 6:30","583":"Jun 7, 2021 at 6:24","584":"Jun 6, 2021 at 20:52","585":"Jun 5, 2021 at 14:23","586":"Jun 5, 2021 at 14:17","587":"Jun 5, 2021 at 11:35","588":"Jun 5, 2021 at 8:26","589":"Jun 4, 2021 at 10:19","590":"Jun 4, 2021 at 6:40","591":"Jun 2, 2021 at 20:00","592":"Jun 2, 2021 at 17:36","593":"Jun 2, 2021 at 15:23","594":"Jun 2, 2021 at 14:59","595":"Jun 2, 2021 at 8:20","596":"Jun 2, 2021 at 5:40","597":"Jun 1, 2021 at 21:35","598":"May 31, 2021 at 21:50","599":"May 31, 2021 at 15:55","600":"May 31, 2021 at 15:49","601":"May 31, 2021 at 14:08","602":"May 31, 2021 at 7:06","603":"May 31, 2021 at 7:00","604":"May 27, 2021 at 18:56","605":"May 27, 2021 at 16:50","606":"May 27, 2021 at 5:51","607":"May 26, 2021 at 17:11","608":"May 26, 2021 at 16:18","609":"May 26, 2021 at 10:04","610":"May 25, 2021 at 12:33","611":"May 25, 2021 at 12:04","612":"May 25, 2021 at 11:15","613":"May 25, 2021 at 6:00","614":"May 24, 2021 at 17:53","615":"May 24, 2021 at 16:19","616":"May 24, 2021 at 14:45","617":"May 24, 2021 at 12:15","618":"May 23, 2021 at 2:22","619":"May 22, 2021 at 17:29","620":"May 22, 2021 at 16:36","621":"May 22, 2021 at 9:33","622":"May 21, 2021 at 18:48","623":"May 21, 2021 at 13:34","624":"May 21, 2021 at 12:47","625":"May 21, 2021 at 9:00","626":"May 21, 2021 at 1:07","627":"May 20, 2021 at 21:58","628":"May 20, 2021 at 11:29","629":"May 20, 2021 at 8:10","630":"May 19, 2021 at 22:29","631":"May 19, 2021 at 20:25","632":"May 19, 2021 at 8:56","633":"May 18, 2021 at 12:01","634":"May 18, 2021 at 9:22","635":"May 18, 2021 at 9:17","636":"May 18, 2021 at 8:16","637":"May 18, 2021 at 5:36","638":"May 17, 2021 at 15:15","639":"May 12, 2021 at 12:44","640":"May 12, 2021 at 11:13","641":"May 11, 2021 at 17:08","642":"May 11, 2021 at 9:07","643":"May 11, 2021 at 0:47","644":"May 10, 2021 at 21:15","645":"May 10, 2021 at 15:45","646":"May 10, 2021 at 6:55","647":"May 8, 2021 at 22:58","648":"May 10, 2021 at 5:19","649":"May 8, 2021 at 17:17","650":"May 8, 2021 at 13:51","651":"May 7, 2021 at 17:58","652":"May 7, 2021 at 13:09","653":"May 7, 2021 at 11:36","654":"May 6, 2021 at 21:15","655":"May 6, 2021 at 12:55","656":"May 6, 2021 at 12:19","657":"May 6, 2021 at 1:23","658":"May 5, 2021 at 22:31","659":"May 5, 2021 at 16:22","660":"May 5, 2021 at 6:10","661":"May 4, 2021 at 21:36","662":"May 4, 2021 at 11:42","663":"May 4, 2021 at 11:19","664":"May 3, 2021 at 19:14","665":"May 3, 2021 at 16:09","666":"May 3, 2021 at 12:21","667":"May 3, 2021 at 9:59","668":"May 3, 2021 at 8:54","669":"May 3, 2021 at 8:11","670":"May 2, 2021 at 17:00","671":"May 1, 2021 at 19:25","672":"May 1, 2021 at 10:50","673":"Apr 30, 2021 at 16:40","674":"Apr 30, 2021 at 13:49","675":"Apr 30, 2021 at 13:03","676":"Apr 30, 2021 at 0:09","677":"Apr 29, 2021 at 12:38","678":"Apr 29, 2021 at 12:29","679":"Apr 29, 2021 at 6:56","680":"Apr 28, 2021 at 22:59","681":"Apr 29, 2021 at 6:16","682":"Apr 28, 2021 at 17:34","683":"Apr 27, 2021 at 21:37","684":"Apr 28, 2021 at 16:35","685":"Apr 27, 2021 at 11:02","686":"Apr 27, 2021 at 10:28","687":"Apr 27, 2021 at 9:07","688":"Apr 27, 2021 at 8:37","689":"Apr 26, 2021 at 10:23","690":"Apr 26, 2021 at 8:58","691":"Apr 26, 2021 at 8:25","692":"Apr 25, 2021 at 7:57","693":"Apr 24, 2021 at 17:10","694":"Apr 24, 2021 at 11:52","695":"Apr 24, 2021 at 10:08","696":"Apr 23, 2021 at 14:16","697":"Apr 22, 2021 at 11:45","698":"Apr 22, 2021 at 9:36","699":"Apr 22, 2021 at 9:17","700":"Apr 21, 2021 at 16:00","701":"Apr 21, 2021 at 8:20","702":"Apr 20, 2021 at 19:48","703":"Apr 20, 2021 at 19:08","704":"Apr 20, 2021 at 7:28","705":"Apr 19, 2021 at 17:20","706":"Apr 17, 2021 at 8:40","707":"Apr 16, 2021 at 17:31","708":"Apr 16, 2021 at 4:39","709":"Apr 15, 2021 at 23:01","710":"Apr 15, 2021 at 11:00","711":"Apr 13, 2021 at 7:15","712":"Apr 12, 2021 at 8:26","713":"Apr 12, 2021 at 8:14","714":"Apr 11, 2021 at 23:51","715":"Apr 11, 2021 at 11:08","716":"Apr 11, 2021 at 10:59","717":"Apr 10, 2021 at 17:19","718":"Apr 10, 2021 at 15:06","719":"Apr 10, 2021 at 8:24","720":"Apr 9, 2021 at 19:56","721":"Apr 9, 2021 at 18:47","722":"Apr 9, 2021 at 10:36","723":"Apr 9, 2021 at 10:23","724":"Apr 8, 2021 at 23:40","725":"Apr 8, 2021 at 14:54","726":"Apr 8, 2021 at 8:55","727":"Apr 7, 2021 at 13:42","728":"Apr 8, 2021 at 7:41","729":"Apr 6, 2021 at 16:34","730":"Apr 5, 2021 at 15:30","731":"Apr 4, 2021 at 21:27","732":"Apr 2, 2021 at 3:28","733":"Apr 1, 2021 at 9:44","734":"Apr 1, 2021 at 8:03","735":"Apr 1, 2021 at 0:40","736":"Mar 31, 2021 at 23:08","737":"Mar 31, 2021 at 11:51","738":"Mar 31, 2021 at 9:25","739":"Mar 30, 2021 at 16:06","740":"Mar 30, 2021 at 15:49","741":"Mar 30, 2021 at 11:06","742":"Mar 30, 2021 at 7:53","743":"Mar 29, 2021 at 21:29","744":"Mar 29, 2021 at 20:37","745":"Mar 29, 2021 at 20:28","746":"Mar 29, 2021 at 14:25","747":"Mar 29, 2021 at 9:32","748":"Mar 29, 2021 at 1:13","749":"Mar 27, 2021 at 14:07","750":"Mar 27, 2021 at 23:06","751":"Mar 25, 2021 at 15:32","752":"Mar 25, 2021 at 10:53","753":"Mar 25, 2021 at 9:21","754":"Mar 23, 2021 at 22:24","755":"Mar 23, 2021 at 4:01","756":"Mar 23, 2021 at 6:24","757":"Mar 22, 2021 at 21:15","758":"Mar 21, 2021 at 15:03","759":"Mar 20, 2021 at 19:40","760":"Mar 19, 2021 at 11:52","761":"Mar 19, 2021 at 3:47","762":"Mar 18, 2021 at 12:23","763":"Mar 18, 2021 at 6:29","764":"Mar 18, 2021 at 11:16","765":"Mar 18, 2021 at 5:36","766":"Mar 17, 2021 at 7:30","767":"Mar 16, 2021 at 13:51","768":"Mar 16, 2021 at 12:09","769":"Mar 16, 2021 at 8:49","770":"Mar 16, 2021 at 8:36","771":"Mar 15, 2021 at 19:24","772":"Mar 15, 2021 at 14:45","773":"Mar 14, 2021 at 14:47","774":"Mar 9, 2021 at 9:48","775":"Mar 9, 2021 at 6:19","776":"Mar 8, 2021 at 16:08","777":"Mar 8, 2021 at 11:24","778":"Mar 8, 2021 at 3:18","779":"Mar 7, 2021 at 10:24","780":"Mar 7, 2021 at 2:22","781":"Mar 4, 2021 at 9:49","782":"Mar 3, 2021 at 11:48","783":"Mar 3, 2021 at 11:09","784":"Mar 2, 2021 at 8:48","785":"Mar 1, 2021 at 19:53","786":"Mar 1, 2021 at 18:02","787":"Feb 28, 2021 at 15:47","788":"Feb 27, 2021 at 8:39","789":"Feb 26, 2021 at 16:15","790":"Feb 26, 2021 at 15:34","791":"Feb 26, 2021 at 8:39","792":"Feb 24, 2021 at 20:56","793":"Feb 22, 2021 at 17:12","794":"Feb 22, 2021 at 8:53","795":"Feb 22, 2021 at 3:52","796":"Feb 19, 2021 at 19:57","797":"Feb 19, 2021 at 15:17","798":"Feb 18, 2021 at 23:53","799":"Feb 18, 2021 at 20:24","800":"Feb 18, 2021 at 1:50","801":"Feb 18, 2021 at 8:27","802":"Feb 17, 2021 at 18:10","803":"Feb 16, 2021 at 16:21","804":"Feb 12, 2021 at 12:46","805":"Feb 11, 2021 at 18:00","806":"Feb 11, 2021 at 12:00","807":"Feb 10, 2021 at 23:11","808":"Feb 10, 2021 at 19:41","809":"Feb 9, 2021 at 17:05","810":"Feb 9, 2021 at 11:07","811":"Feb 8, 2021 at 23:59","812":"Feb 8, 2021 at 14:34","813":"Feb 7, 2021 at 22:18","814":"Feb 8, 2021 at 7:58","815":"Feb 7, 2021 at 14:56","816":"Feb 6, 2021 at 22:59","817":"Feb 5, 2021 at 18:24","818":"Feb 6, 2021 at 0:47","819":"Feb 5, 2021 at 7:48","820":"Feb 5, 2021 at 7:43","821":"Feb 5, 2021 at 2:51","822":"Feb 5, 2021 at 0:23","823":"Feb 4, 2021 at 13:12","824":"Feb 4, 2021 at 12:33","825":"Feb 3, 2021 at 22:52","826":"Feb 2, 2021 at 0:08","827":"Feb 1, 2021 at 15:14","828":"Feb 1, 2021 at 5:14","829":"Jan 31, 2021 at 7:17","830":"Jan 31, 2021 at 0:11","831":"Jan 30, 2021 at 10:11","832":"Jan 29, 2021 at 23:59","833":"Jan 29, 2021 at 0:19","834":"Jan 28, 2021 at 19:56","835":"Jan 28, 2021 at 9:28","836":"Jan 28, 2021 at 7:03","837":"Jan 28, 2021 at 6:20","838":"Jan 26, 2021 at 17:48","839":"Jan 25, 2021 at 9:20","840":"Jan 25, 2021 at 1:59","841":"Jan 24, 2021 at 17:33","842":"Jan 24, 2021 at 13:24","843":"Jan 23, 2021 at 11:00","844":"Jan 23, 2021 at 9:59","845":"Jan 23, 2021 at 6:38","846":"Jan 22, 2021 at 21:42","847":"Jan 22, 2021 at 15:25","848":"Jan 22, 2021 at 1:44","849":"Jan 21, 2021 at 22:11","850":"Jan 21, 2021 at 17:18","851":"Jan 21, 2021 at 15:51","852":"Jan 21, 2021 at 0:27","853":"Jan 19, 2021 at 1:44","854":"Jan 20, 2021 at 5:26","855":"Jan 18, 2021 at 18:42","856":"Jan 17, 2021 at 16:33","857":"Jan 17, 2021 at 14:21","858":"Jan 17, 2021 at 14:00","859":"Jan 17, 2021 at 13:53","860":"Jan 16, 2021 at 20:46","861":"Jan 15, 2021 at 22:49","862":"Jan 15, 2021 at 14:38","863":"Jan 15, 2021 at 1:24","864":"Jan 15, 2021 at 0:00","865":"Jan 14, 2021 at 18:08","866":"Jan 14, 2021 at 1:41","867":"Jan 13, 2021 at 19:54","868":"Jan 13, 2021 at 14:48","869":"Jan 13, 2021 at 13:12","870":"Jan 13, 2021 at 10:23","871":"Jan 13, 2021 at 7:59","872":"Jan 13, 2021 at 5:18","873":"Jan 13, 2021 at 6:00","874":"Jan 12, 2021 at 9:01","875":"Jan 8, 2021 at 10:46","876":"Jan 7, 2021 at 15:58","877":"Jan 7, 2021 at 10:35","878":"Jan 7, 2021 at 9:58","879":"Jan 7, 2021 at 7:24","880":"Jan 7, 2021 at 3:25","881":"Jan 6, 2021 at 9:14","882":"Jan 6, 2021 at 11:09","883":"Jan 5, 2021 at 17:14","884":"Jan 5, 2021 at 16:28","885":"Jan 5, 2021 at 8:42","886":"Jan 5, 2021 at 2:36","887":"Jan 3, 2021 at 20:42","888":"Jan 2, 2021 at 9:42","889":"Jan 1, 2021 at 12:28","890":"Jan 1, 2021 at 5:49"},"reputation score for questioner":{"0":"182","1":"327","2":"31","3":"1","4":"1","5":"622","6":"29","7":"69","8":"1,953","9":"41","10":"9","11":"11","12":"13","13":"47","14":"413","15":"714","16":"11","17":"1","18":"201","19":"21","20":"1","21":"37","22":"409","23":"1","24":"199","25":"5","26":"19","27":"29","28":"41","29":"2,077","30":"31","31":"11","32":"13","33":"163","34":"327","35":"95","36":"873","37":"31","38":"108","39":"75","40":"1","41":"1","42":"3","43":"3","44":"707","45":"29","46":"353","47":"11","48":"3,551","49":"11","50":"3","51":"95","52":"1","53":"25","54":"1","55":"448","56":"1","57":"12.7k","58":"1","59":"133","60":"51","61":"1","62":"2,072","63":"1","64":"25","65":"11","66":"129","67":"1","68":"167","69":"19","70":"81","71":"21","72":"65","73":"47","74":"165","75":"67","76":"43","77":"1,506","78":"65","79":"33","80":"13","81":"685","82":null,"83":"37","84":"31","85":"13","86":"2,802","87":"20.8k","88":"20.8k","89":"11","90":"34.9k","91":"34.9k","92":"1,586","93":"1","94":"83","95":"1","96":"65","97":"34.9k","98":"34.9k","99":"11","100":"34.9k","101":"363","102":"34.9k","103":"1,403","104":"34.9k","105":"34.9k","106":"1","107":"143","108":"43","109":"131","110":"153","111":"23","112":null,"113":"48","114":"83","115":"1","116":"34.9k","117":"34.9k","118":"1","119":"21","120":null,"121":null,"122":"177","123":"11","124":"216","125":"89","126":"13","127":"45","128":"33","129":"996","130":"17.5k","131":"855","132":"9","133":"41","134":"1,189","135":"1","136":"158","137":"49","138":"1,633","139":"1","140":"33","141":"5,148","142":"63","143":"29","144":"13","145":"72","146":"24.3k","147":"53","148":"3,603","149":"5,378","150":"33","151":"841","152":"1,586","153":"145","154":"43","155":"21","156":"11","157":"33","158":"1,129","159":"1","160":"11","161":"39","162":"11","163":"125","164":"59","165":"21","166":"11","167":"1,092","168":"15.3k","169":"1","170":"1","171":"49","172":"69","173":"25","174":"595","175":"774","176":"828","177":"1,778","178":"111","179":"23","180":"117","181":"145","182":"430","183":"3","184":"51","185":"1","186":"25","187":"339","188":"11","189":"11","190":"9","191":"363","192":"33","193":"19","194":"11","195":"80","196":"81","197":"65","198":"107","199":"33","200":"1","201":"48","202":"1,428","203":"75","204":"76","205":"81","206":"148","207":"112","208":"11","209":"11","210":"11","211":"1,787","212":"21","213":"3","214":"127","215":"109","216":"135","217":"133","218":"77","219":"304","220":"33","221":"47","222":"9","223":"7,777","224":"21","225":"129","226":"5","227":"33","228":"41","229":"125","230":"1","231":"3,891","232":"701","233":"173","234":"7","235":"128","236":"33","237":"81","238":"11","239":"65","240":"111","241":"759","242":"125","243":"21","244":"75","245":"1","246":"1,353","247":"394","248":"11","249":"65","250":"5","251":"41","252":null,"253":"25","254":"55","255":"153","256":"3","257":"21","258":"81","259":"1","260":"166","261":"63","262":"13","263":"21","264":"2,939","265":"13","266":"11","267":"51","268":"55","269":"49","270":"41","271":"1","272":"73","273":"99","274":"90","275":"45","276":"864","277":"21","278":"85","279":"1,633","280":"51","281":"49","282":"166","283":"21","284":"21","285":"51","286":"69","287":"25","288":"41","289":"10.5k","290":"186","291":"21","292":"31","293":"109","294":"1","295":"511","296":"1,633","297":"1","298":"11","299":"41","300":"1","301":"478","302":"145","303":"11","304":"66","305":"11","306":"87","307":"467","308":"671","309":"1","310":"3","311":"94","312":"1,633","313":"49","314":"11","315":"79","316":"1","317":"53k","318":"2,068","319":"13","320":"111","321":"15","322":"1","323":"41","324":"53k","325":"1","326":"31","327":"82","328":"101","329":"199","330":"21","331":"11","332":"96","333":"113","334":"96","335":"77","336":"53k","337":"569","338":"40","339":"37","340":"201","341":"47","342":null,"343":"13","344":"33","345":"21","346":"145","347":"23","348":"1","349":"1,073","350":"571","351":"11","352":"121","353":"395","354":"437","355":"53","356":"31","357":"1","358":"135","359":"9","360":"5,399","361":"83","362":"41","363":"31","364":"159","365":"23","366":"21","367":"45","368":"614","369":"179","370":"156","371":"9","372":"671","373":"51","374":"4,218","375":"21","376":"13","377":"201","378":"117","379":"51","380":"199","381":"437","382":"3","383":"57","384":"1,487","385":"451","386":"1","387":"451","388":"51","389":"75","390":"1","391":"610","392":"41","393":"131","394":"103","395":"1,391","396":"5,192","397":"3,173","398":"3,173","399":"19","400":"118","401":"3","402":"25","403":"390","404":"3","405":"33","406":"21","407":"9","408":"3","409":"63","410":"35","411":"26","412":"41","413":"861","414":"21","415":"1,213","416":"9","417":"1","418":"92","419":"1","420":"125","421":"51","422":"3","423":"307","424":"11","425":"21","426":"1","427":"735","428":"151","429":"1,021","430":"161","431":"21","432":"33","433":"103","434":"103","435":"1","436":null,"437":"1,464","438":"1","439":"1","440":"45","441":"41","442":"31","443":"21","444":"19.2k","445":"45","446":"35","447":"11","448":"3","449":"1","450":"303","451":"43","452":"1,878","453":"1","454":"29","455":"31","456":"21","457":"33","458":"190","459":"107","460":"409","461":"68","462":"11","463":"1,537","464":"822","465":"139","466":"23","467":"3","468":"21","469":"3","470":"43","471":"441","472":"1","473":"91","474":"11","475":"71","476":"441","477":"1","478":"133","479":"147","480":"1,272","481":"61","482":"1","483":"129","484":"304","485":"69","486":"71","487":"33","488":"19","489":"179","490":"634","491":"43","492":"11","493":"3","494":"54","495":"85","496":"779","497":"23","498":"61","499":"1","500":"403","501":"460","502":"3","503":"33","504":"1,842","505":"25","506":"13","507":"15","508":"15","509":"1","510":"31","511":"1,677","512":"139","513":"173","514":"1","515":"35","516":"11","517":"33","518":null,"519":"65","520":"81","521":"1","522":"700","523":"1","524":"11","525":"1,629","526":"5","527":"1","528":"81","529":"33","530":"1","531":"779","532":"41","533":"120","534":"51","535":"31","536":"1,084","537":"57","538":"31","539":"58.3k","540":"1","541":"41","542":"1,332","543":"31","544":"120","545":"33","546":"109","547":"1","548":"58.3k","549":"277","550":"277","551":"1","552":"77","553":"77","554":"11","555":"31","556":"9","557":"1","558":"469","559":"11","560":"475","561":"770","562":"3","563":"23","564":"3,814","565":"179","566":"33","567":"2,076","568":"1","569":"307","570":"1","571":"1","572":"683","573":"11","574":"422","575":"21","576":"85","577":"566","578":"1","579":"31","580":"49","581":"21","582":"566","583":"23","584":"309","585":null,"586":"6,103","587":"9","588":"49","589":"77","590":"51","591":"51","592":"788","593":"11","594":"3,814","595":"1","596":"21","597":"3","598":"309","599":"566","600":"21","601":"1","602":"51","603":"51","604":"1","605":"1","606":"874","607":"2,913","608":"11","609":"53","610":"323","611":"53","612":null,"613":"31","614":"15","615":"1","616":"43","617":"1","618":"11","619":"11","620":"5,505","621":"267","622":"352","623":"127","624":"103","625":"1","626":"102","627":"43","628":"11","629":"591","630":"3,603","631":"102","632":"361","633":"179","634":"893","635":"1,088","636":"14.4k","637":"68","638":"55","639":"129","640":"11","641":"11","642":null,"643":"305","644":"5,116","645":"43","646":"11","647":"91","648":"125","649":"13","650":"41","651":"122","652":"122","653":"133","654":"231","655":"387","656":"36","657":"1,213","658":"33","659":"101","660":"467","661":"1,629","662":"39","663":"387","664":"3","665":"1","666":"503","667":"107","668":"16.2k","669":"49","670":"11","671":"333","672":"1,475","673":"11","674":"31","675":"17","676":"333","677":"93","678":"461","679":"1","680":"11","681":"2,875","682":"753","683":"13","684":"21","685":"462","686":"163","687":"125","688":"1","689":"35","690":"51","691":"31","692":"129","693":"85","694":"2,883","695":"125","696":"1","697":"225","698":"11","699":"45","700":"3","701":"3","702":"129","703":"10.9k","704":"29","705":"11","706":"133","707":"13","708":"21","709":"129","710":"1","711":"13","712":"117","713":"323","714":"66.4k","715":"83","716":"1","717":"598","718":"123","719":"131","720":"1","721":"5","722":"31","723":"1","724":"1","725":"1,197","726":null,"727":"149","728":"275","729":"29","730":"1","731":"461","732":"714","733":"125","734":"11","735":"552","736":"1,559","737":"83","738":"117","739":"829","740":"1","741":"1","742":"141","743":"1","744":"129","745":"5,741","746":"19","747":"101","748":"47","749":"1","750":"63","751":"598","752":"83","753":"83","754":"95","755":"1","756":"2,108","757":"311","758":"129","759":"11","760":"21","761":"61","762":"41","763":"1,375","764":"11","765":"35","766":"1","767":"1","768":"11","769":"55","770":"359","771":"13","772":"151","773":"5,741","774":"133","775":"152","776":"417","777":"1","778":"1","779":"5,638","780":"45","781":"1","782":"1","783":"433","784":"51","785":"1,994","786":"1","787":"13","788":"21","789":"45","790":"21","791":"21","792":"51","793":"1","794":"103","795":"199","796":"1","797":null,"798":"1,197","799":"1","800":"439","801":"164","802":"309","803":"85","804":"133","805":"20.8k","806":"107","807":"445","808":"21","809":"57","810":"31","811":"1","812":"178","813":"536","814":"31","815":"1","816":"354","817":"31","818":"35","819":"81","820":"497","821":"1","822":"103","823":"1,297","824":"497","825":"57","826":"1,197","827":"111","828":"28","829":"60","830":"1","831":"103","832":"1","833":"107","834":"107","835":"23","836":"1","837":"469","838":"1","839":"21","840":"31","841":"1","842":"107","843":"11","844":"469","845":"45","846":"24.1k","847":"9","848":"251","849":"251","850":"1","851":"103","852":"107","853":"1,883","854":"91","855":"15","856":"33","857":"479","858":"1","859":"134","860":"9","861":"41","862":"41","863":"66","864":"1,883","865":"131","866":"1","867":"16","868":"11","869":"37","870":"29","871":"1","872":"7,884","873":"65","874":"1,669","875":"45","876":"26","877":"364","878":"1,867","879":"99","880":"7,884","881":"359","882":"359","883":"1","884":"460","885":"666","886":"77","887":"1","888":"13","889":"312","890":"19"},"User name for questioning":{"0":"Daniel Hanczyc","1":"alex devassy","2":"raitech","3":"Ehtesham Siddiqui","4":"Peter Lopez","5":"Nikesh Kedlaya","6":"Nflv22","7":"Lorenzo Battistela","8":"GrandSteph","9":"rezli","10":"Ace Zul","11":"William Best","12":"omrani omaima","13":"Zoha Akram","14":"Cl\u00c3\u00a9ment Perroud","15":"Forkmohit","16":"\u00c8\u0098ener","17":"KoluG","18":"Niraj Kumar","19":"sunny","20":"Avenbreaks","21":"Mete Karasakal","22":"Sveargith","23":"Ketuojo Moses","24":"Karthikeyan Thangavel","25":"coriden","26":"Emin T\u00c4\u00b1rnak\u00c3\u00a7\u00c4\u00b1","27":"Girish Bari","28":"rezli","29":"iamjc015","30":"Chandan Kumar","31":"\u00d0\u00ad\u00d1\u0080\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d1\u0082","32":"Maryam Bashir","33":"Bruce Jayasinghe","34":"alex devassy","35":"luisbriyan","36":"user2002692","37":"Pijush Barman","38":"Code Plus","39":"stormy TV","40":"leslie-wung","41":"Alexis Joker","42":"Bartu \u00c5\u009e\u00c4\u00b1rac\u00c4\u00b1","43":"Non Reply","44":"Mr Coder","45":"anelBavari","46":"Dorian Crutcher","47":"Sravan Kumar","48":"Jim","49":"Marco Comotti","50":"user15921","51":"Jack X.","52":"Tucket","53":"Hala Al-Zayat","54":"EgorFedorov","55":"Serhii Zharkov","56":"wajahat nafees","57":"ElHaix","58":"khennati","59":"Ivan","60":"user10488162","61":"Ali Dev","62":"Sergei Voronezhskii","63":"Panagatla Sumanohar Goud","64":"slim.syd","65":"can altunoz","66":"Saulius","67":"samar","68":"Nora","69":"Diamond","70":"Matg","71":"Samuel S.","72":"mohan A","73":"DHC","74":"Mikki Ukraine","75":"Peter Holzer","76":"r.beer","77":"Kevin M","78":"Nurin Izzati Jafri","79":"Makam Aravind","80":"Shekhar Chopra","81":"user10931326","82":"anon","83":"DefiBax","84":"Whytecrowe","85":"Zachary Baker","86":"Gaia","87":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","88":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","89":"dopaminer","90":"Joey Yi Zhao","91":"Joey Yi Zhao","92":"Sowam","93":"user1428158","94":"Arrow","95":"h.kittany","96":"Amber Johnson","97":"Joey Yi Zhao","98":"Joey Yi Zhao","99":"user17537220","100":"Joey Yi Zhao","101":"<python>Coder1981","102":"Joey Yi Zhao","103":"Herbie Vine","104":"Joey Yi Zhao","105":"Joey Yi Zhao","106":"iDontKnow","107":"Kale","108":"VGabriel45","109":"grisVladko","110":"luisgonzalez","111":"avcoates","112":"user17194172","113":"michaelassaf","114":"Ali Raza","115":"Matheus","116":"Joey Yi Zhao","117":"Joey Yi Zhao","118":"Crypto Dev 24","119":"Tipu Singh","120":"user12052358","121":"user12052358","122":"ofirthedev","123":"Creeks","124":"Sergio Lerner","125":"Joaogl","126":"Fl\u00c3\u00a1vio Naves Jr","127":"3lii06","128":"Makam Aravind","129":"Ming Soon","130":"html_programmer","131":"Yizhar","132":"SAPTARSI SAHA","133":"GGbro","134":"ReX357","135":"ARNAB RAY","136":"rainbowemoji","137":"Haidarali Masu","138":"XCEPTION","139":"ARNAB RAY","140":"Jah M","141":"CCCC","142":"Mr. N","143":"Jesley C\u00c3\u00a1ceres Marcelino","144":"Qeest","145":"learning_bunny","146":"The Quantum Physicist","147":"Luis Manuel Cort\u00c3\u00a9s Tirado","148":"Kevvv","149":"Adam Kozlowski","150":"Andrea Giardino","151":"James Roeiter","152":"Sowam","153":"Cromewar","154":"VGabriel45","155":"Cho Chung Hyun","156":"co.blocks office","157":"Makam Aravind","158":"henrybbosa","159":"Saveer Jain","160":"Gi Ro","161":"Phoon Anan","162":"Paris","163":"chuck","164":"Sepehr","165":"DND","166":"IkehAkinyemi","167":"Dan Ramos","168":"loretoparisi","169":"Rajat Bhatt","170":"hammad99","171":"Josh Wenner","172":"Penko_Mlakar","173":"Mahendra Kumar Maheshwari","174":"mkl","175":"Shreyash mishra","176":"Delali","177":"Mohit Chandel","178":"Shubham Gupta","179":"Isaac Jmn'z","180":"Dimitris Triantafillidis","181":"Cromewar","182":"Ryan Ellis","183":"Charchit Dhawan","184":"Aryan","185":"Aswin Thotapalli","186":"Shihab Shahriyar","187":"Abaga","188":"Konstantin Korchuk","189":"Aya Elhawary","190":"Sudarshan Kannan","191":"Amin Talebi","192":"Makam Aravind","193":"Nicholas Laverty","194":"Alireza Asadi","195":"xBatmanx","196":"alvin Christianto","197":"Leo","198":"waupelani","199":"Clint Oka","200":"Tank Kuloy","201":"Zeeshan Hanif","202":"LuxuryWaffles","203":"Marco Brugali","204":"lsg93","205":"Junior","206":"fairdev610","207":"PurpleMongrel","208":"Vaibhav Sharma","209":"co.blocks office","210":"Guillermo B","211":"Abdulmoiz Ahmer","212":"In-SaNity Gamer","213":"hupeng","214":"Alex Won","215":"Flendor","216":"topgun741","217":"ya va","218":"anon1453092865","219":"Mukesh Kumar","220":"Clint Oka","221":"Jtara","222":"Bhawik chawda","223":"raddevus","224":"Lcob","225":"Saulius","226":"Arnaldo","227":"Shobhit Tewari","228":"mohammed alzuharey","229":"Apollo","230":"Ashish Jain","231":"Swaroop Maddu","232":"Uttam","233":"Peter Slan\u00c3\u00bd","234":"Stephen Okita","235":"MD SHOHAG MIA","236":"Timur Guvenkaya","237":"alvin Christianto","238":"Tenno","239":"mohan A","240":"enstazao","241":"Aidal","242":"Apollo","243":"Nikolai Dikanev","244":"greentriangles1","245":"wulitaotao","246":"JSON derulo","247":"Varun","248":"lang-ja","249":"mohan A","250":"Arnaldo","251":"M. Khan","252":"user16028670","253":"Cyan","254":"Yzyzyzyz","255":"Soulwish","256":"Ihsan","257":"sagesy 01","258":"alvin Christianto","259":"Turupawn","260":"Mariusz Sidorowicz","261":"Siddhant Shah","262":"proxima","263":"Famous Felix","264":"Hardik Mandankaa","265":"Tapas","266":"Morris Beck","267":"user10488162","268":"Ankit Pareek","269":"Haidarali Masu","270":"Kim Jisena","271":"Rugg0","272":"Afa12","273":"moccajoghurt","274":"Aditya Dev","275":"Prab-mat","276":"weera","277":"eth_developer","278":"utf_8","279":"XCEPTION","280":"user10488162","281":"Usama","282":"Mariusz Sidorowicz","283":"Asrul Paelori Ahmad","284":"eth_developer","285":"UlrichGiorgioJaeger","286":"Iangyl","287":"UnPapeur","288":"Deshaun Phillips","289":"Matt","290":"BarefootDev","291":"user1042147","292":"Gia","293":"thebest man","294":"F.young","295":"user4367814","296":"XCEPTION","297":"OneEyeDoll","298":"Eliseev","299":"mohammed alzuharey","300":"Dharmesh","301":"Sofien","302":"Cromewar","303":"Lautaro Baltar","304":"Zack Tim","305":"coding.de","306":"Kyle Pearson","307":"Lukas Luke Stateczny","308":"Pisomanik","309":"user2359549","310":"ROMEO Fardeen","311":"Zuffido","312":"XCEPTION","313":"Dheeraj","314":"druedger","315":"FaSh","316":"Isaiah2240","317":"ROMANIA_engineer","318":"Zuza","319":"Lamerest","320":"johnme","321":"allouf","322":"fit","323":"mohammed alzuharey","324":"ROMANIA_engineer","325":"fit","326":"Dat Nguyen","327":"Bill Baits","328":"James","329":"Giorgiu","330":"akhmad fadil Mubarok","331":"Igor","332":"dmvict","333":"Alai","334":"dmvict","335":"Stefanpt","336":"ROMANIA_engineer","337":"gbenga ogunbule","338":"gsiros","339":"Saul Da Silva","340":"Niraj Kumar","341":"Nuno Lopes","342":"user16945874","343":"Akintomide Ayodele","344":"Makam Aravind","345":"Anurag Sharma","346":"Xim123","347":"Renos","348":"Yuvraj Singh","349":"rksh1997","350":"Nam V. Do","351":"yorgeLorenz","352":"Mikenso","353":"Sourabh","354":"maxall4","355":"mosta","356":"Rebecca Margarini","357":"Data Universe","358":"kimiro","359":"Aditya Khochare","360":"ray","361":"dyxdyx","362":"Johnny Bravo","363":"Devdeep Ghosh","364":"Roman Karpyshyn","365":"\u00d0\u00a1\u00d1\u0082\u00d0\u00b5\u00d0\u00bf\u00d0\u00b0\u00d0\u00bd \u00d0\u00a2\u00d0\u00b8\u00d1\u0082\u00d0\u00b0\u00d1\u0080\u00d0\u00b5\u00d0\u00bd\u00d0\u00ba\u00d0\u00be","366":"Bdellinger","367":"elad alkabets","368":"Juan Ignacio P\u00c3\u00a9rez Sacrist\u00c3\u00a1n","369":"lucgerrits","370":"rami1988","371":"Faria Kamal","372":"Pisomanik","373":"taranchik","374":"Hahnemann","375":"Bdellinger","376":"WomanIn<blockchain>","377":"Niraj Kumar","378":"Jdawg287","379":"taranchik","380":"Diop Chopra","381":"maxall4","382":"Prosperity","383":"Alejandro Diaz Roque","384":"Niccola Tartaglia","385":"Daniel Vieira","386":"Mecanicul","387":"Daniel Vieira","388":"taranchik","389":"Michael Kocurek","390":"CloudlyTV","391":"Rahul Saxena","392":"Luiz Felipe Veiga","393":"Eric Lee","394":"yamna iftikhar","395":"NicoleZ","396":"josedlujan","397":"Trimantra Software Solution","398":"Trimantra Software Solution","399":"god_mod","400":"Mohamed Rady","401":"DamilolaOwonibi","402":"Kamil","403":"Kartik ganiga","404":"PinkLink","405":"seaanenome","406":"Bosco","407":"Frantisek Mach","408":"Earth","409":"TonyTheCannoli","410":"Fatima Almashhor","411":"Striga","412":"Augusto Caro","413":"nistelrooy41001662","414":"Linh Tran","415":"magna_nz","416":"pavithra ramasamy","417":"Emeka","418":"Dev","419":"Angel","420":"danish","421":"Akshay S P","422":"Jeanne Zinoviev","423":"som3_l0cust","424":"TRRVNA","425":"owl","426":"Todd Ainsworth","427":"TheSmartMonkey","428":"Crimson Salamander","429":"npkp","430":"Noldorin Zhang","431":"Parth Nautiyal","432":"Makam Aravind","433":"yamna iftikhar","434":"yamna iftikhar","435":"user16695835","436":"user16599218","437":"Ayudh","438":"Boobak","439":"Pixel Crypto","440":"dancing_carrot","441":"Rimproverato","442":"akhil","443":"Abhijeet Mankani","444":"johnny 5","445":"TNJCoding","446":"Fatima Almashhor","447":"Marco Comotti","448":"ATRUES","449":"KaySay2018","450":"Vijay","451":"Gwynbleidd","452":"Russo","453":"B L","454":"Haris Nabeel","455":"Alchemist AB","456":"Phill Overton","457":"Makam Aravind","458":"Mahad Ali","459":"kh1em","460":"NoNam4","461":"Rishab Verma","462":"Sila Pakdeewong","463":"Haider Yaqoob","464":"harkl","465":"Jitterbug","466":"Kushal Mahajan","467":"azamat303","468":"Shubham","469":"Tokyo","470":"SartuX","471":"Gokul Alex","472":"Caleb Reynolds","473":"R0ixy","474":"OnlyTO","475":"Surrender Oz","476":"Gokul Alex","477":"Enthusiast Coder","478":"Ivan","479":"djd","480":"sonic","481":"Gopal Gurram","482":"Tushar Sharma","483":"Neel gorasiya","484":"Umair Janjua","485":"user697417","486":"learn code","487":"Shahrad Khedri","488":"user16528894","489":"lucgerrits","490":"ChristianOConnor","491":"AngelDev","492":"Giorgi","493":"Daniel M","494":"Aslan Demir","495":"ZSA","496":"KotlinIsland","497":"Yifan Lim","498":"swaggy pete","499":"aditya","500":"Ganesh Pol","501":"Akhil Kintali","502":"Arash Heidari","503":"Makam Aravind","504":"Andrea D_","505":"Jeff F","506":"Hoomehr Kz","507":"allouf","508":"ponga","509":"Fabian Aguilera","510":"akhil","511":"Viktor.w","512":"Jitterbug","513":"galpo","514":"Shining","515":"DocRed","516":"SiuSum","517":"Shreyas S Bhat","518":"user9929340","519":"mohan A","520":"Yadav Akash","521":"VUEN\u00c4\u00b0XX","522":"Rohit Maurya","523":"Saurabh","524":"dharjeezy","525":"Mugetsu","526":"Gaurav Yadav","527":"Dimitri","528":"Yadav Akash","529":"marija","530":"Tejas Sanap","531":"KotlinIsland","532":"Joebedoeper","533":"Darshan Vankawala","534":"Thaddeus","535":"hello world","536":"Fan","537":"Suryansh Singh","538":"supdev","539":"Paul Verest","540":"Gaming With Farhan","541":"p_zuckerman","542":"Stormsson","543":"H.M. Sibghat ullah","544":"Darshan Vankawala","545":"IAmACoder","546":"Erfan Poursina","547":"user16315385","548":"Paul Verest","549":"anondevpepe","550":"anondevpepe","551":"Opsetech","552":"Holland Pleskac","553":"Holland Pleskac","554":"Unidentifiedactress","555":"akhil","556":"Rajnish63","557":"Andrey Serdyuk","558":"Normalbut_Genuine","559":"Nish","560":"Tosch","561":"soubhagya","562":"Siridet Sukkana","563":"Andy Bell","564":"Ragesh S","565":"lucgerrits","566":"marija","567":"Darren","568":"Dressi","569":"noveltyz","570":"Chris H","571":"ajit yadav","572":"webish","573":"Arun Kumar","574":"Jeeves","575":"Uchenna Edeoga","576":"jhon alino","577":"laplace","578":"Mahesh Rapelli","579":"entropic nova","580":"Thomas Janski","581":"Uchenna Edeoga","582":"laplace","583":"Willz Estorbot","584":"Timm Nicolaizik","585":"user16137842","586":"krzyhub","587":"BENALAYA Chamesseddine","588":"Jonathan Otokun","589":"Ali Can Alma\u00c3\u00a7imeni","590":"nastari","591":"Samuel Alibien","592":"S.O.S","593":"peter","594":"Ragesh S","595":"\u00d0\u0090\u00d0\u00bb\u00d0\u00b8\u00d1\u008f \u00d0\u00a1\u00d1\u0083\u00d0\u00b5\u00d1\u0082\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0","596":"Padma Shruthi","597":"Tarxan","598":"monir zaman","599":"laplace","600":"Padma Shruthi","601":"Rishabh V","602":"Samuel Alibien","603":"Enthusiast Coder","604":"xxx_yyy","605":"M_gogo","606":"Tahlil","607":"MetaStack","608":"Lucian Ilie","609":"Azeem Lodhi","610":"Gaurav","611":"Azeem Lodhi","612":"user6782588","613":"peterchen145","614":"Roman Kartashow","615":"kyto3","616":"Nikhil Chandna","617":"Mangekyou","618":"jwpublic","619":"Vayas","620":"Zed","621":"user3760894","622":"Ilker Kadir Ozturk","623":"user9958772","624":"kapisolec","625":"cocazzzz","626":"Farouk YD","627":"AngelDev","628":"user3930728","629":"OguzKaanAkyalcin","630":"Kevvv","631":"Farouk YD","632":"Amin","633":"inquisitivemongoose","634":"Pooya Saberian","635":"basilisk","636":"Icaro","637":"Baxter Cooper","638":"ADLZ","639":"Saulius","640":"STB","641":"Mr. Jack","642":"user15592571","643":"Adam","644":"Suganth G","645":"viet nguyen","646":"tushar bansal","647":"user3717550","648":"<blockchain> Learner","649":"User","650":"tonalt","651":"Everton Figueiredo","652":"Everton Figueiredo","653":"Soundarya","654":"Yocker95k","655":"sfl0r3nz05","656":"jaxcoder","657":"magna_nz","658":"Nalks_","659":"Pool","660":"Lyn","661":"Mugetsu","662":"sung chul","663":"sfl0r3nz05","664":"Marklah","665":"Saurav Majumder","666":"JMac","667":"Mario Roma","668":"Luke Vo","669":"Muhammad Abdullah","670":"Carlo Parisi","671":"ogg130","672":"secretshardul","673":"Oumayma","674":"Marcin Beza","675":"Chaitanya M","676":"ogg130","677":"gyana lakshmi","678":"acampana","679":"Dmitriy Yankowoy","680":"nikilsraaju","681":"laalaguer","682":"Karzel","683":"LeClient","684":"Aymeric","685":"Strohhut","686":"huzaifa abedeen","687":"Crypto Miner","688":"Tanvir Hossain","689":"Wowocado","690":"Crypto D","691":"Roberto Landi","692":"Saulius","693":"raury","694":"Majoris","695":"Alain Sst","696":"Lauri Teerim\u00c3\u00a4ki","697":"Omar Saadoun","698":"IMA","699":"dabadee","700":"Rock","701":"Rock","702":"Saulius","703":"FrankC","704":"Shubham Garg","705":"hatta zouba","706":"fabriziogianni7","707":"nidhi_1729","708":"HighXTC","709":"Saulius","710":"Zoubair ELhattab","711":"OYU","712":"Jdawg287","713":"MaTok","714":"Gajus","715":"Mikasa JD","716":"Tristan S","717":"mightyMouse","718":"unos_mopsus","719":"Madiator2011","720":"oweshoal","721":"l4x3 l4x3","722":"user14074078","723":"raphael","724":"Youcef Chalabi","725":"Sirab33","726":"user14895999","727":"aoi","728":"Federico Bellini","729":"it4ddict","730":"Nuan Grobbelaar","731":"acampana","732":"Ryan Russell","733":"Crypto Miner","734":"siham","735":"ThomasATU","736":"user2330237","737":"Denis Deniben","738":"Jdawg287","739":"John","740":"Leonardo Henrique","741":"mariem chamakh","742":"vladwho","743":"Isee","744":"Saulius","745":"Haya Raed","746":"Rambabu verma","747":"rouzbehsbz","748":"Ayoub Mafkoud","749":"MUKESH KUMAR BADIGINENI","750":"Marcus","751":"mightyMouse","752":"Denis Deniben","753":"Denis Deniben","754":"mai mohamed","755":"Nextil Men's Essentials","756":"Jill Clover","757":"DedicatedDreamer","758":"Saulius","759":"Shaban","760":"Salah-SH","761":"Cuby Dev","762":"Tunji Abioye","763":"Krish Bhanushali","764":"Vlad","765":"Prisma","766":"Wafa AB","767":"k-block","768":"Anton Popadyuk","769":"ADLZ","770":"cherry","771":"Luksssss","772":"Futureman2007","773":"Haya Raed","774":"Tosh","775":"airled","776":"Dan Wiebe","777":"Teja Surisetty DevilRancy","778":"Ray Lau","779":"Nika Kurashvili","780":"TNJCoding","781":"User","782":"Shubham Gupta","783":"Akhil","784":"hyunki_cho","785":"Caius","786":"TheRealP","787":"Nishant Karekar","788":"CKboy","789":"Garrix","790":"Reza S","791":"nikolay dobronravov","792":"Enthusiast Coder","793":"Aydogan Sahin","794":"mayur","795":"Karthikeyan Thangavel","796":"BigFranc","797":"user7119072","798":"Sirab33","799":"yeckHQ","800":"benjamin852","801":"Quek Yao Jing","802":"monir zaman","803":"jhon alino","804":"SOUPTIK BANERJEE","805":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","806":"Mario Roma","807":"DonkeyKong","808":"siglesias","809":"Suryansh Singh","810":"akhil","811":"andtoe","812":"ajay","813":"Tony Starkus","814":"Micheal","815":"dralexhunter","816":"Emisilve86","817":"Ostap Volanuk","818":"Milton Cezar","819":"shubham kamboj","820":"gjivanya","821":"Eva Wu","822":"EMANUEL","823":"Afeez Aziz","824":"gjivanya","825":"Ixar","826":"Sirab33","827":"eddyshanghai","828":"Calvin Cheng","829":"mohammadjavadkh","830":"Ram","831":"EMANUEL","832":"Stephen Sunday","833":"Mario Roma","834":"Mario Roma","835":"Daelon","836":"meharab","837":"Zoha Malik","838":"Nigar Atakishiyeva","839":"Ivan Ponomarenko","840":"Micheal","841":"Mecca888","842":"Mario Roma","843":"Basti","844":"Zoha Malik","845":"TIMMY123","846":"James Lin","847":"Arek63","848":"hiimarksman","849":"hiimarksman","850":"user48429","851":"EMANUEL","852":"Mario Roma","853":"user3362334","854":"user3717550","855":"IronFist","856":"Meschdog18","857":"Rob Frohwein","858":"potato","859":"Jo Bo","860":"naxor","861":"Bsc Talk","862":"Bsc Talk","863":"Zack Tim","864":"user3362334","865":"1174","866":"Geeky Star","867":"Kasun Sudharaka","868":"Michael Allen","869":"Matte","870":"Vishwa Dayal","871":"decoder1799","872":"GN.","873":"L M","874":"Ajay Tom George","875":"Salma558","876":"Aleksa Misovic","877":"Waleed Shafiq","878":"Clyde D'Cruz","879":"patwards","880":"GN.","881":"cherry","882":"cherry","883":"WAQAS WAHID","884":"Jeswin Rebil","885":"Dainius Preimantas","886":"alex schobel","887":"alex","888":"tjumma","889":"Rashiq Kodakkad","890":"resilientEther"},"User for questioning_link":{"0":"https:\/\/stackoverflow.com\/users\/2987941\/daniel-hanczyc","1":"https:\/\/stackoverflow.com\/users\/15802844\/alex-devassy","2":"https:\/\/stackoverflow.com\/users\/4901657\/raitech","3":"https:\/\/stackoverflow.com\/users\/15065178\/ehtesham-siddiqui","4":"https:\/\/stackoverflow.com\/users\/17286711\/peter-lopez","5":"https:\/\/stackoverflow.com\/users\/4769131\/nikesh-kedlaya","6":"https:\/\/stackoverflow.com\/users\/17764905\/nflv22","7":"https:\/\/stackoverflow.com\/users\/17010001\/lorenzo-battistela","8":"https:\/\/stackoverflow.com\/users\/3343521\/grandsteph","9":"https:\/\/stackoverflow.com\/users\/17594682\/rezli","10":"https:\/\/stackoverflow.com\/users\/2692020\/ace-zul","11":"https:\/\/stackoverflow.com\/users\/17332526\/william-best","12":"https:\/\/stackoverflow.com\/users\/16385958\/omrani-omaima","13":"https:\/\/stackoverflow.com\/users\/12307187\/zoha-akram","14":"https:\/\/stackoverflow.com\/users\/16744902\/cl%c3%a9ment-perroud","15":"https:\/\/stackoverflow.com\/users\/4380048\/forkmohit","16":"https:\/\/stackoverflow.com\/users\/13286079\/%c8%98ener","17":"https:\/\/stackoverflow.com\/users\/16576975\/kolug","18":"https:\/\/stackoverflow.com\/users\/16452353\/niraj-kumar","19":"https:\/\/stackoverflow.com\/users\/17738070\/sunny","20":"https:\/\/stackoverflow.com\/users\/17742425\/avenbreaks","21":"https:\/\/stackoverflow.com\/users\/10676760\/mete-karasakal","22":"https:\/\/stackoverflow.com\/users\/3312417\/sveargith","23":"https:\/\/stackoverflow.com\/users\/17731014\/ketuojo-moses","24":"https:\/\/stackoverflow.com\/users\/7681646\/karthikeyan-thangavel","25":"https:\/\/stackoverflow.com\/users\/11472102\/coriden","26":"https:\/\/stackoverflow.com\/users\/13518336\/emin-t%c4%b1rnak%c3%a7%c4%b1","27":"https:\/\/stackoverflow.com\/users\/13061506\/girish-bari","28":"https:\/\/stackoverflow.com\/users\/17594682\/rezli","29":"https:\/\/stackoverflow.com\/users\/3483607\/iamjc015","30":"https:\/\/stackoverflow.com\/users\/9890722\/chandan-kumar","31":"https:\/\/stackoverflow.com\/users\/16836957\/%d0%ad%d1%80%d0%bd%d0%b5%d1%81%d1%82","32":"https:\/\/stackoverflow.com\/users\/17692621\/maryam-bashir","33":"https:\/\/stackoverflow.com\/users\/11420010\/bruce-jayasinghe","34":"https:\/\/stackoverflow.com\/users\/15802844\/alex-devassy","35":"https:\/\/stackoverflow.com\/users\/11053042\/luisbriyan","36":"https:\/\/stackoverflow.com\/users\/2002692\/user2002692","37":"https:\/\/stackoverflow.com\/users\/13474578\/pijush-barman","38":"https:\/\/stackoverflow.com\/users\/16659214\/code-plus","39":"https:\/\/stackoverflow.com\/users\/15966029\/stormy-tv","40":"https:\/\/stackoverflow.com\/users\/17682977\/leslie-wung","41":"https:\/\/stackoverflow.com\/users\/17676394\/alexis-joker","42":"https:\/\/stackoverflow.com\/users\/15273848\/bartu-%c5%9e%c4%b1rac%c4%b1","43":"https:\/\/stackoverflow.com\/users\/17673898\/non-reply","44":"https:\/\/stackoverflow.com\/users\/6827699\/mr-coder","45":"https:\/\/stackoverflow.com\/users\/15985235\/anelbavari","46":"https:\/\/stackoverflow.com\/users\/12896373\/dorian-crutcher","47":"https:\/\/stackoverflow.com\/users\/7010164\/sravan-kumar","48":"https:\/\/stackoverflow.com\/users\/1910355\/jim","49":"https:\/\/stackoverflow.com\/users\/16650949\/marco-comotti","50":"https:\/\/stackoverflow.com\/users\/14952251\/user15921","51":"https:\/\/stackoverflow.com\/users\/5611962\/jack-x","52":"https:\/\/stackoverflow.com\/users\/17655368\/tucket","53":"https:\/\/stackoverflow.com\/users\/17552252\/hala-al-zayat","54":"https:\/\/stackoverflow.com\/users\/17479810\/egorfedorov","55":"https:\/\/stackoverflow.com\/users\/6182081\/serhii-zharkov","56":"https:\/\/stackoverflow.com\/users\/12211305\/wajahat-nafees","57":"https:\/\/stackoverflow.com\/users\/172359\/elhaix","58":"https:\/\/stackoverflow.com\/users\/17644443\/khennati","59":"https:\/\/stackoverflow.com\/users\/16268458\/ivan","60":"https:\/\/stackoverflow.com\/users\/10488162\/user10488162","61":"https:\/\/stackoverflow.com\/users\/17327448\/ali-dev","62":"https:\/\/stackoverflow.com\/users\/4000827\/sergei-voronezhskii","63":"https:\/\/stackoverflow.com\/users\/17641830\/panagatla-sumanohar-goud","64":"https:\/\/stackoverflow.com\/users\/14558064\/slim-syd","65":"https:\/\/stackoverflow.com\/users\/17605547\/can-altunoz","66":"https:\/\/stackoverflow.com\/users\/6845013\/saulius","67":"https:\/\/stackoverflow.com\/users\/11745957\/samar","68":"https:\/\/stackoverflow.com\/users\/2131679\/nora","69":"https:\/\/stackoverflow.com\/users\/17594035\/diamond","70":"https:\/\/stackoverflow.com\/users\/11222702\/matg","71":"https:\/\/stackoverflow.com\/users\/13844405\/samuel-s","72":"https:\/\/stackoverflow.com\/users\/14099849\/mohan-a","73":"https:\/\/stackoverflow.com\/users\/7503320\/dhc","74":"https:\/\/stackoverflow.com\/users\/12386932\/mikki-ukraine","75":"https:\/\/stackoverflow.com\/users\/13863703\/peter-holzer","76":"https:\/\/stackoverflow.com\/users\/2021300\/r-beer","77":"https:\/\/stackoverflow.com\/users\/918850\/kevin-m","78":"https:\/\/stackoverflow.com\/users\/13398438\/nurin-izzati-jafri","79":"https:\/\/stackoverflow.com\/users\/13992183\/makam-aravind","80":"https:\/\/stackoverflow.com\/users\/17272161\/shekhar-chopra","81":"https:\/\/stackoverflow.com\/users\/10931326\/user10931326","82":null,"83":"https:\/\/stackoverflow.com\/users\/17563642\/defibax","84":"https:\/\/stackoverflow.com\/users\/10153506\/whytecrowe","85":"https:\/\/stackoverflow.com\/users\/15304170\/zachary-baker","86":"https:\/\/stackoverflow.com\/users\/139040\/gaia","87":"https:\/\/stackoverflow.com\/users\/1642231\/patoshi-%e3%83%91%e3%83%88%e3%82%b7","88":"https:\/\/stackoverflow.com\/users\/1642231\/patoshi-%e3%83%91%e3%83%88%e3%82%b7","89":"https:\/\/stackoverflow.com\/users\/17526356\/dopaminer","90":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","91":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","92":"https:\/\/stackoverflow.com\/users\/13485090\/sowam","93":"https:\/\/stackoverflow.com\/users\/1428158\/user1428158","94":"https:\/\/stackoverflow.com\/users\/11578689\/arrow","95":"https:\/\/stackoverflow.com\/users\/2766734\/h-kittany","96":"https:\/\/stackoverflow.com\/users\/17396493\/amber-johnson","97":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","98":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","99":"https:\/\/stackoverflow.com\/users\/17537220\/user17537220","100":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","101":"https:\/\/stackoverflow.com\/users\/14402925\/<python>coder1981","102":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","103":"https:\/\/stackoverflow.com\/users\/13029550\/herbie-vine","104":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","105":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","106":"https:\/\/stackoverflow.com\/users\/13470808\/idontknow","107":"https:\/\/stackoverflow.com\/users\/6130838\/kale","108":"https:\/\/stackoverflow.com\/users\/12818666\/vgabriel45","109":"https:\/\/stackoverflow.com\/users\/13528170\/grisvladko","110":"https:\/\/stackoverflow.com\/users\/1432865\/luisgonzalez","111":"https:\/\/stackoverflow.com\/users\/11556073\/avcoates","112":null,"113":"https:\/\/stackoverflow.com\/users\/17491765\/michaelassaf","114":"https:\/\/stackoverflow.com\/users\/13070133\/ali-raza","115":"https:\/\/stackoverflow.com\/users\/15574343\/matheus","116":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","117":"https:\/\/stackoverflow.com\/users\/5421539\/joey-yi-zhao","118":"https:\/\/stackoverflow.com\/users\/17515961\/crypto-dev-24","119":"https:\/\/stackoverflow.com\/users\/17056668\/tipu-singh","120":null,"121":null,"122":"https:\/\/stackoverflow.com\/users\/5567419\/ofirthedev","123":"https:\/\/stackoverflow.com\/users\/17502358\/creeks","124":"https:\/\/stackoverflow.com\/users\/12036186\/sergio-lerner","125":"https:\/\/stackoverflow.com\/users\/4256795\/joaogl","126":"https:\/\/stackoverflow.com\/users\/6465722\/fl%c3%a1vio-naves-jr","127":"https:\/\/stackoverflow.com\/users\/14382180\/3lii06","128":"https:\/\/stackoverflow.com\/users\/13992183\/makam-aravind","129":"https:\/\/stackoverflow.com\/users\/7554156\/ming-soon","130":"https:\/\/stackoverflow.com\/users\/917467\/html-programmer","131":"https:\/\/stackoverflow.com\/users\/1691129\/yizhar","132":"https:\/\/stackoverflow.com\/users\/14916937\/saptarsi-saha","133":"https:\/\/stackoverflow.com\/users\/17469463\/ggbro","134":"https:\/\/stackoverflow.com\/users\/868707\/rex357","135":"https:\/\/stackoverflow.com\/users\/15346161\/arnab-ray","136":"https:\/\/stackoverflow.com\/users\/17346443\/rainbowemoji","137":"https:\/\/stackoverflow.com\/users\/14995461\/haidarali-masu","138":"https:\/\/stackoverflow.com\/users\/2366290\/xception","139":"https:\/\/stackoverflow.com\/users\/15346161\/arnab-ray","140":"https:\/\/stackoverflow.com\/users\/17453450\/jah-m","141":"https:\/\/stackoverflow.com\/users\/10686620\/cccc","142":"https:\/\/stackoverflow.com\/users\/12596912\/mr-n","143":"https:\/\/stackoverflow.com\/users\/6193308\/jesley-c%c3%a1ceres-marcelino","144":"https:\/\/stackoverflow.com\/users\/16440932\/qeest","145":"https:\/\/stackoverflow.com\/users\/13961485\/learning-bunny","146":"https:\/\/stackoverflow.com\/users\/1317944\/the-quantum-physicist","147":"https:\/\/stackoverflow.com\/users\/13286002\/luis-manuel-cort%c3%a9s-tirado","148":"https:\/\/stackoverflow.com\/users\/10116367\/kevvv","149":"https:\/\/stackoverflow.com\/users\/6025113\/adam-kozlowski","150":"https:\/\/stackoverflow.com\/users\/17447113\/andrea-giardino","151":"https:\/\/stackoverflow.com\/users\/1135393\/james-roeiter","152":"https:\/\/stackoverflow.com\/users\/13485090\/sowam","153":"https:\/\/stackoverflow.com\/users\/15293461\/cromewar","154":"https:\/\/stackoverflow.com\/users\/12818666\/vgabriel45","155":"https:\/\/stackoverflow.com\/users\/2676876\/cho-chung-hyun","156":"https:\/\/stackoverflow.com\/users\/16834719\/co-blocks-office","157":"https:\/\/stackoverflow.com\/users\/13992183\/makam-aravind","158":"https:\/\/stackoverflow.com\/users\/6244351\/henrybbosa","159":"https:\/\/stackoverflow.com\/users\/17413367\/saveer-jain","160":"https:\/\/stackoverflow.com\/users\/17412258\/gi-ro","161":"https:\/\/stackoverflow.com\/users\/17370330\/phoon-anan","162":"https:\/\/stackoverflow.com\/users\/13947656\/paris","163":"https:\/\/stackoverflow.com\/users\/3617088\/chuck","164":"https:\/\/stackoverflow.com\/users\/17401524\/sepehr","165":"https:\/\/stackoverflow.com\/users\/17401124\/dnd","166":"https:\/\/stackoverflow.com\/users\/13831969\/ikehakinyemi","167":"https:\/\/stackoverflow.com\/users\/572209\/dan-ramos","168":"https:\/\/stackoverflow.com\/users\/758836\/loretoparisi","169":"https:\/\/stackoverflow.com\/users\/17395606\/rajat-bhatt","170":"https:\/\/stackoverflow.com\/users\/16536686\/hammad99","171":"https:\/\/stackoverflow.com\/users\/15069356\/josh-wenner","172":"https:\/\/stackoverflow.com\/users\/16421745\/penko-mlakar","173":"https:\/\/stackoverflow.com\/users\/17375584\/mahendra-kumar-maheshwari","174":"https:\/\/stackoverflow.com\/users\/11101982\/mkl","175":"https:\/\/stackoverflow.com\/users\/14777930\/shreyash-mishra","176":"https:\/\/stackoverflow.com\/users\/2712374\/delali","177":"https:\/\/stackoverflow.com\/users\/12174711\/mohit-chandel","178":"https:\/\/stackoverflow.com\/users\/13670723\/shubham-gupta","179":"https:\/\/stackoverflow.com\/users\/17373305\/isaac-jmnz","180":"https:\/\/stackoverflow.com\/users\/11768845\/dimitris-triantafillidis","181":"https:\/\/stackoverflow.com\/users\/15293461\/cromewar","182":"https:\/\/stackoverflow.com\/users\/1058958\/ryan-ellis","183":"https:\/\/stackoverflow.com\/users\/17367492\/charchit-dhawan","184":"https:\/\/stackoverflow.com\/users\/16363451\/aryan","185":"https:\/\/stackoverflow.com\/users\/2683694\/aswin-thotapalli","186":"https:\/\/stackoverflow.com\/users\/6611836\/shihab-shahriyar","187":"https:\/\/stackoverflow.com\/users\/10922494\/abaga","188":"https:\/\/stackoverflow.com\/users\/6221811\/konstantin-korchuk","189":"https:\/\/stackoverflow.com\/users\/12656605\/aya-elhawary","190":"https:\/\/stackoverflow.com\/users\/12894009\/sudarshan-kannan","191":"https:\/\/stackoverflow.com\/users\/7370373\/amin-talebi","192":"https:\/\/stackoverflow.com\/users\/13992183\/makam-aravind","193":"https:\/\/stackoverflow.com\/users\/12084891\/nicholas-laverty","194":"https:\/\/stackoverflow.com\/users\/5878329\/alireza-asadi","195":"https:\/\/stackoverflow.com\/users\/17163713\/xbatmanx","196":"https:\/\/stackoverflow.com\/users\/4336328\/alvin-christianto","197":"https:\/\/stackoverflow.com\/users\/10705021\/leo","198":"https:\/\/stackoverflow.com\/users\/6241083\/waupelani","199":"https:\/\/stackoverflow.com\/users\/16832762\/clint-oka","200":"https:\/\/stackoverflow.com\/users\/17307087\/tank-kuloy","201":"https:\/\/stackoverflow.com\/users\/1942695\/zeeshan-hanif","202":"https:\/\/stackoverflow.com\/users\/2442424\/luxurywaffles","203":"https:\/\/stackoverflow.com\/users\/9523298\/marco-brugali","204":"https:\/\/stackoverflow.com\/users\/14868696\/lsg93","205":"https:\/\/stackoverflow.com\/users\/2313829\/junior","206":"https:\/\/stackoverflow.com\/users\/17253130\/fairdev610","207":"https:\/\/stackoverflow.com\/users\/13464562\/purplemongrel","208":"https:\/\/stackoverflow.com\/users\/15559262\/vaibhav-sharma","209":"https:\/\/stackoverflow.com\/users\/16834719\/co-blocks-office","210":"https:\/\/stackoverflow.com\/users\/8656875\/guillermo-b","211":"https:\/\/stackoverflow.com\/users\/10866877\/abdulmoiz-ahmer","212":"https:\/\/stackoverflow.com\/users\/16463943\/in-sanity-gamer","213":"https:\/\/stackoverflow.com\/users\/12619924\/hupeng","214":"https:\/\/stackoverflow.com\/users\/13057148\/alex-won","215":"https:\/\/stackoverflow.com\/users\/7852692\/flendor","216":"https:\/\/stackoverflow.com\/users\/7243671\/topgun741","217":"https:\/\/stackoverflow.com\/users\/6633191\/ya-va","218":"https:\/\/stackoverflow.com\/users\/12912576\/anon1453092865","219":"https:\/\/stackoverflow.com\/users\/13587792\/mukesh-kumar","220":"https:\/\/stackoverflow.com\/users\/16832762\/clint-oka","221":"https:\/\/stackoverflow.com\/users\/14632946\/jtara","222":"https:\/\/stackoverflow.com\/users\/17241745\/bhawik-chawda","223":"https:\/\/stackoverflow.com\/users\/255243\/raddevus","224":"https:\/\/stackoverflow.com\/users\/13033293\/lcob","225":"https:\/\/stackoverflow.com\/users\/6845013\/saulius","226":"https:\/\/stackoverflow.com\/users\/17070193\/arnaldo","227":"https:\/\/stackoverflow.com\/users\/17219416\/shobhit-tewari","228":"https:\/\/stackoverflow.com\/users\/13970543\/mohammed-alzuharey","229":"https:\/\/stackoverflow.com\/users\/13217132\/apollo","230":"https:\/\/stackoverflow.com\/users\/17227380\/ashish-jain","231":"https:\/\/stackoverflow.com\/users\/8326080\/swaroop-maddu","232":"https:\/\/stackoverflow.com\/users\/15806697\/uttam","233":"https:\/\/stackoverflow.com\/users\/3711990\/peter-slan%c3%bd","234":"https:\/\/stackoverflow.com\/users\/16791880\/stephen-okita","235":"https:\/\/stackoverflow.com\/users\/6172835\/md-shohag-mia","236":"https:\/\/stackoverflow.com\/users\/17219451\/timur-guvenkaya","237":"https:\/\/stackoverflow.com\/users\/4336328\/alvin-christianto","238":"https:\/\/stackoverflow.com\/users\/16865562\/tenno","239":"https:\/\/stackoverflow.com\/users\/14099849\/mohan-a","240":"https:\/\/stackoverflow.com\/users\/14673713\/enstazao","241":"https:\/\/stackoverflow.com\/users\/1369508\/aidal","242":"https:\/\/stackoverflow.com\/users\/13217132\/apollo","243":"https:\/\/stackoverflow.com\/users\/17193187\/nikolai-dikanev","244":"https:\/\/stackoverflow.com\/users\/16514593\/greentriangles1","245":"https:\/\/stackoverflow.com\/users\/17197100\/wulitaotao","246":"https:\/\/stackoverflow.com\/users\/12320109\/json-derulo","247":"https:\/\/stackoverflow.com\/users\/5714042\/varun","248":"https:\/\/stackoverflow.com\/users\/16158520\/lang-ja","249":"https:\/\/stackoverflow.com\/users\/14099849\/mohan-a","250":"https:\/\/stackoverflow.com\/users\/17070193\/arnaldo","251":"https:\/\/stackoverflow.com\/users\/10011844\/m-khan","252":null,"253":"https:\/\/stackoverflow.com\/users\/17166636\/cyan","254":"https:\/\/stackoverflow.com\/users\/13949077\/yzyzyzyz","255":"https:\/\/stackoverflow.com\/users\/2776032\/soulwish","256":"https:\/\/stackoverflow.com\/users\/14740901\/ihsan","257":"https:\/\/stackoverflow.com\/users\/17157710\/sagesy-01","258":"https:\/\/stackoverflow.com\/users\/4336328\/alvin-christianto","259":"https:\/\/stackoverflow.com\/users\/3192346\/turupawn","260":"https:\/\/stackoverflow.com\/users\/13797135\/mariusz-sidorowicz","261":"https:\/\/stackoverflow.com\/users\/11803754\/siddhant-shah","262":"https:\/\/stackoverflow.com\/users\/17040406\/proxima","263":"https:\/\/stackoverflow.com\/users\/17147254\/famous-felix","264":"https:\/\/stackoverflow.com\/users\/3046149\/hardik-mandankaa","265":"https:\/\/stackoverflow.com\/users\/17103346\/tapas","266":"https:\/\/stackoverflow.com\/users\/17132918\/morris-beck","267":"https:\/\/stackoverflow.com\/users\/10488162\/user10488162","268":"https:\/\/stackoverflow.com\/users\/14178025\/ankit-pareek","269":"https:\/\/stackoverflow.com\/users\/14995461\/haidarali-masu","270":"https:\/\/stackoverflow.com\/users\/17062423\/kim-jisena","271":"https:\/\/stackoverflow.com\/users\/17125786\/rugg0","272":"https:\/\/stackoverflow.com\/users\/16739482\/afa12","273":"https:\/\/stackoverflow.com\/users\/2116060\/moccajoghurt","274":"https:\/\/stackoverflow.com\/users\/16592902\/aditya-dev","275":"https:\/\/stackoverflow.com\/users\/14806502\/prab-mat","276":"https:\/\/stackoverflow.com\/users\/7370943\/weera","277":"https:\/\/stackoverflow.com\/users\/17083667\/eth-developer","278":"https:\/\/stackoverflow.com\/users\/16126575\/utf-8","279":"https:\/\/stackoverflow.com\/users\/2366290\/xception","280":"https:\/\/stackoverflow.com\/users\/10488162\/user10488162","281":"https:\/\/stackoverflow.com\/users\/13767840\/usama","282":"https:\/\/stackoverflow.com\/users\/13797135\/mariusz-sidorowicz","283":"https:\/\/stackoverflow.com\/users\/9405652\/asrul-paelori-ahmad","284":"https:\/\/stackoverflow.com\/users\/17083667\/eth-developer","285":"https:\/\/stackoverflow.com\/users\/16566798\/ulrichgiorgiojaeger","286":"https:\/\/stackoverflow.com\/users\/12228149\/iangyl","287":"https:\/\/stackoverflow.com\/users\/16253352\/unpapeur","288":"https:\/\/stackoverflow.com\/users\/11133350\/deshaun-phillips","289":"https:\/\/stackoverflow.com\/users\/697930\/matt","290":"https:\/\/stackoverflow.com\/users\/6755649\/barefootdev","291":"https:\/\/stackoverflow.com\/users\/1042147\/user1042147","292":"https:\/\/stackoverflow.com\/users\/11899667\/gia","293":"https:\/\/stackoverflow.com\/users\/17047122\/thebest-man","294":"https:\/\/stackoverflow.com\/users\/5736655\/f-young","295":"https:\/\/stackoverflow.com\/users\/4367814\/user4367814","296":"https:\/\/stackoverflow.com\/users\/2366290\/xception","297":"https:\/\/stackoverflow.com\/users\/17062987\/oneeyedoll","298":"https:\/\/stackoverflow.com\/users\/17038042\/eliseev","299":"https:\/\/stackoverflow.com\/users\/13970543\/mohammed-alzuharey","300":"https:\/\/stackoverflow.com\/users\/7467385\/dharmesh","301":"https:\/\/stackoverflow.com\/users\/7960107\/sofien","302":"https:\/\/stackoverflow.com\/users\/15293461\/cromewar","303":"https:\/\/stackoverflow.com\/users\/14946316\/lautaro-baltar","304":"https:\/\/stackoverflow.com\/users\/15009383\/zack-tim","305":"https:\/\/stackoverflow.com\/users\/16976621\/coding-de","306":"https:\/\/stackoverflow.com\/users\/7028382\/kyle-pearson","307":"https:\/\/stackoverflow.com\/users\/8107739\/lukas-luke-stateczny","308":"https:\/\/stackoverflow.com\/users\/10564830\/pisomanik","309":"https:\/\/stackoverflow.com\/users\/2359549\/user2359549","310":"https:\/\/stackoverflow.com\/users\/17027330\/romeo-fardeen","311":"https:\/\/stackoverflow.com\/users\/10130625\/zuffido","312":"https:\/\/stackoverflow.com\/users\/2366290\/xception","313":"https:\/\/stackoverflow.com\/users\/12226251\/dheeraj","314":"https:\/\/stackoverflow.com\/users\/7347680\/druedger","315":"https:\/\/stackoverflow.com\/users\/6499400\/fash","316":"https:\/\/stackoverflow.com\/users\/17017165\/isaiah2240","317":"https:\/\/stackoverflow.com\/users\/3885376\/romania-engineer","318":"https:\/\/stackoverflow.com\/users\/1048214\/zuza","319":"https:\/\/stackoverflow.com\/users\/17009097\/lamerest","320":"https:\/\/stackoverflow.com\/users\/17008721\/johnme","321":"https:\/\/stackoverflow.com\/users\/13086458\/allouf","322":"https:\/\/stackoverflow.com\/users\/16915502\/fit","323":"https:\/\/stackoverflow.com\/users\/13970543\/mohammed-alzuharey","324":"https:\/\/stackoverflow.com\/users\/3885376\/romania-engineer","325":"https:\/\/stackoverflow.com\/users\/16915502\/fit","326":"https:\/\/stackoverflow.com\/users\/6042598\/dat-nguyen","327":"https:\/\/stackoverflow.com\/users\/9059365\/bill-baits","328":"https:\/\/stackoverflow.com\/users\/16600712\/james","329":"https:\/\/stackoverflow.com\/users\/15059721\/giorgiu","330":"https:\/\/stackoverflow.com\/users\/10968064\/akhmad-fadil-mubarok","331":"https:\/\/stackoverflow.com\/users\/16984972\/igor","332":"https:\/\/stackoverflow.com\/users\/16420684\/dmvict","333":"https:\/\/stackoverflow.com\/users\/10435185\/alai","334":"https:\/\/stackoverflow.com\/users\/16420684\/dmvict","335":"https:\/\/stackoverflow.com\/users\/4424436\/stefanpt","336":"https:\/\/stackoverflow.com\/users\/3885376\/romania-engineer","337":"https:\/\/stackoverflow.com\/users\/12192004\/gbenga-ogunbule","338":"https:\/\/stackoverflow.com\/users\/15620637\/gsiros","339":"https:\/\/stackoverflow.com\/users\/9978064\/saul-da-silva","340":"https:\/\/stackoverflow.com\/users\/16452353\/niraj-kumar","341":"https:\/\/stackoverflow.com\/users\/12894925\/nuno-lopes","342":null,"343":"https:\/\/stackoverflow.com\/users\/16704988\/akintomide-ayodele","344":"https:\/\/stackoverflow.com\/users\/13992183\/makam-aravind","345":"https:\/\/stackoverflow.com\/users\/15121004\/anurag-sharma","346":"https:\/\/stackoverflow.com\/users\/10522410\/xim123","347":"https:\/\/stackoverflow.com\/users\/15973789\/renos","348":"https:\/\/stackoverflow.com\/users\/15214983\/yuvraj-singh","349":"https:\/\/stackoverflow.com\/users\/11215806\/rksh1997","350":"https:\/\/stackoverflow.com\/users\/8466844\/nam-v-do","351":"https:\/\/stackoverflow.com\/users\/16954827\/yorgelorenz","352":"https:\/\/stackoverflow.com\/users\/7119253\/mikenso","353":"https:\/\/stackoverflow.com\/users\/4564749\/sourabh","354":"https:\/\/stackoverflow.com\/users\/11441668\/maxall4","355":"https:\/\/stackoverflow.com\/users\/16945374\/mosta","356":"https:\/\/stackoverflow.com\/users\/16935634\/rebecca-margarini","357":"https:\/\/stackoverflow.com\/users\/14684693\/data-universe","358":"https:\/\/stackoverflow.com\/users\/16762020\/kimiro","359":"https:\/\/stackoverflow.com\/users\/16925655\/aditya-khochare","360":"https:\/\/stackoverflow.com\/users\/10522579\/ray","361":"https:\/\/stackoverflow.com\/users\/8370526\/dyxdyx","362":"https:\/\/stackoverflow.com\/users\/16584936\/johnny-bravo","363":"https:\/\/stackoverflow.com\/users\/15938620\/devdeep-ghosh","364":"https:\/\/stackoverflow.com\/users\/12599864\/roman-karpyshyn","365":"https:\/\/stackoverflow.com\/users\/10348905\/%d0%a1%d1%82%d0%b5%d0%bf%d0%b0%d0%bd-%d0%a2%d0%b8%d1%82%d0%b0%d1%80%d0%b5%d0%bd%d0%ba%d0%be","366":"https:\/\/stackoverflow.com\/users\/16019624\/bdellinger","367":"https:\/\/stackoverflow.com\/users\/15006828\/elad-alkabets","368":"https:\/\/stackoverflow.com\/users\/1012882\/juan-ignacio-p%c3%a9rez-sacrist%c3%a1n","369":"https:\/\/stackoverflow.com\/users\/13187605\/lucgerrits","370":"https:\/\/stackoverflow.com\/users\/3080771\/rami1988","371":"https:\/\/stackoverflow.com\/users\/16893491\/faria-kamal","372":"https:\/\/stackoverflow.com\/users\/10564830\/pisomanik","373":"https:\/\/stackoverflow.com\/users\/16775031\/taranchik","374":"https:\/\/stackoverflow.com\/users\/77265\/hahnemann","375":"https:\/\/stackoverflow.com\/users\/16019624\/bdellinger","376":"https:\/\/stackoverflow.com\/users\/13937307\/womanin<blockchain>","377":"https:\/\/stackoverflow.com\/users\/16452353\/niraj-kumar","378":"https:\/\/stackoverflow.com\/users\/15520869\/jdawg287","379":"https:\/\/stackoverflow.com\/users\/16775031\/taranchik","380":"https:\/\/stackoverflow.com\/users\/16498678\/diop-chopra","381":"https:\/\/stackoverflow.com\/users\/11441668\/maxall4","382":"https:\/\/stackoverflow.com\/users\/14610164\/prosperity","383":"https:\/\/stackoverflow.com\/users\/10923092\/alejandro-diaz-roque","384":"https:\/\/stackoverflow.com\/users\/4289641\/niccola-tartaglia","385":"https:\/\/stackoverflow.com\/users\/1525838\/daniel-vieira","386":"https:\/\/stackoverflow.com\/users\/5438054\/mecanicul","387":"https:\/\/stackoverflow.com\/users\/1525838\/daniel-vieira","388":"https:\/\/stackoverflow.com\/users\/16775031\/taranchik","389":"https:\/\/stackoverflow.com\/users\/7042408\/michael-kocurek","390":"https:\/\/stackoverflow.com\/users\/9510461\/cloudlytv","391":"https:\/\/stackoverflow.com\/users\/11924484\/rahul-saxena","392":"https:\/\/stackoverflow.com\/users\/11875964\/luiz-felipe-veiga","393":"https:\/\/stackoverflow.com\/users\/13051498\/eric-lee","394":"https:\/\/stackoverflow.com\/users\/16580174\/yamna-iftikhar","395":"https:\/\/stackoverflow.com\/users\/5303909\/nicolez","396":"https:\/\/stackoverflow.com\/users\/3156226\/josedlujan","397":"https:\/\/stackoverflow.com\/users\/777171\/trimantra-software-solution","398":"https:\/\/stackoverflow.com\/users\/777171\/trimantra-software-solution","399":"https:\/\/stackoverflow.com\/users\/11098247\/god-mod","400":"https:\/\/stackoverflow.com\/users\/14697474\/mohamed-rady","401":"https:\/\/stackoverflow.com\/users\/15760483\/damilolaowonibi","402":"https:\/\/stackoverflow.com\/users\/13008788\/kamil","403":"https:\/\/stackoverflow.com\/users\/10877622\/kartik-ganiga","404":"https:\/\/stackoverflow.com\/users\/16792197\/pinklink","405":"https:\/\/stackoverflow.com\/users\/16791896\/seaanenome","406":"https:\/\/stackoverflow.com\/users\/16786374\/bosco","407":"https:\/\/stackoverflow.com\/users\/16784653\/frantisek-mach","408":"https:\/\/stackoverflow.com\/users\/16783012\/earth","409":"https:\/\/stackoverflow.com\/users\/12935275\/tonythecannoli","410":"https:\/\/stackoverflow.com\/users\/16214972\/fatima-almashhor","411":"https:\/\/stackoverflow.com\/users\/16773761\/striga","412":"https:\/\/stackoverflow.com\/users\/16477187\/augusto-caro","413":"https:\/\/stackoverflow.com\/users\/4172765\/nistelrooy41001662","414":"https:\/\/stackoverflow.com\/users\/13166107\/linh-tran","415":"https:\/\/stackoverflow.com\/users\/3530774\/magna-nz","416":"https:\/\/stackoverflow.com\/users\/8319571\/pavithra-ramasamy","417":"https:\/\/stackoverflow.com\/users\/16742004\/emeka","418":"https:\/\/stackoverflow.com\/users\/16587205\/dev","419":"https:\/\/stackoverflow.com\/users\/16736705\/angel","420":"https:\/\/stackoverflow.com\/users\/5470263\/danish","421":"https:\/\/stackoverflow.com\/users\/15760985\/akshay-s-p","422":"https:\/\/stackoverflow.com\/users\/16729707\/jeanne-zinoviev","423":"https:\/\/stackoverflow.com\/users\/10136948\/som3-l0cust","424":"https:\/\/stackoverflow.com\/users\/16369336\/trrvna","425":"https:\/\/stackoverflow.com\/users\/16720213\/owl","426":"https:\/\/stackoverflow.com\/users\/16717075\/todd-ainsworth","427":"https:\/\/stackoverflow.com\/users\/10137925\/thesmartmonkey","428":"https:\/\/stackoverflow.com\/users\/16709209\/crimson-salamander","429":"https:\/\/stackoverflow.com\/users\/5475733\/npkp","430":"https:\/\/stackoverflow.com\/users\/16672541\/noldorin-zhang","431":"https:\/\/stackoverflow.com\/users\/16702668\/parth-nautiyal","432":"https:\/\/stackoverflow.com\/users\/13992183\/makam-aravind","433":"https:\/\/stackoverflow.com\/users\/16580174\/yamna-iftikhar","434":"https:\/\/stackoverflow.com\/users\/16580174\/yamna-iftikhar","435":"https:\/\/stackoverflow.com\/users\/16695835\/user16695835","436":null,"437":"https:\/\/stackoverflow.com\/users\/4542614\/ayudh","438":"https:\/\/stackoverflow.com\/users\/16687855\/boobak","439":"https:\/\/stackoverflow.com\/users\/16679483\/pixel-crypto","440":"https:\/\/stackoverflow.com\/users\/16667559\/dancing-carrot","441":"https:\/\/stackoverflow.com\/users\/8584302\/rimproverato","442":"https:\/\/stackoverflow.com\/users\/9408829\/akhil","443":"https:\/\/stackoverflow.com\/users\/16113007\/abhijeet-mankani","444":"https:\/\/stackoverflow.com\/users\/1938988\/johnny-5","445":"https:\/\/stackoverflow.com\/users\/15303250\/tnjcoding","446":"https:\/\/stackoverflow.com\/users\/16214972\/fatima-almashhor","447":"https:\/\/stackoverflow.com\/users\/16650949\/marco-comotti","448":"https:\/\/stackoverflow.com\/users\/15528331\/atrues","449":"https:\/\/stackoverflow.com\/users\/3647144\/kaysay2018","450":"https:\/\/stackoverflow.com\/users\/3282865\/vijay","451":"https:\/\/stackoverflow.com\/users\/9857573\/gwynbleidd","452":"https:\/\/stackoverflow.com\/users\/2965665\/russo","453":"https:\/\/stackoverflow.com\/users\/16547763\/b-l","454":"https:\/\/stackoverflow.com\/users\/11848220\/haris-nabeel","455":"https:\/\/stackoverflow.com\/users\/4251358\/alchemist-ab","456":"https:\/\/stackoverflow.com\/users\/16623000\/phill-overton","457":"https:\/\/stackoverflow.com\/users\/13992183\/makam-aravind","458":"https:\/\/stackoverflow.com\/users\/16076263\/mahad-ali","459":"https:\/\/stackoverflow.com\/users\/11910426\/kh1em","460":"https:\/\/stackoverflow.com\/users\/8963682\/nonam4","461":"https:\/\/stackoverflow.com\/users\/3892901\/rishab-verma","462":"https:\/\/stackoverflow.com\/users\/16508395\/sila-pakdeewong","463":"https:\/\/stackoverflow.com\/users\/10048779\/haider-yaqoob","464":"https:\/\/stackoverflow.com\/users\/1070523\/harkl","465":"https:\/\/stackoverflow.com\/users\/11906195\/jitterbug","466":"https:\/\/stackoverflow.com\/users\/13044016\/kushal-mahajan","467":"https:\/\/stackoverflow.com\/users\/15389395\/azamat303","468":"https:\/\/stackoverflow.com\/users\/11496362\/shubham","469":"https:\/\/stackoverflow.com\/users\/16583390\/tokyo","470":"https:\/\/stackoverflow.com\/users\/14267488\/sartux","471":"https:\/\/stackoverflow.com\/users\/1153351\/gokul-alex","472":"https:\/\/stackoverflow.com\/users\/16579924\/caleb-reynolds","473":"https:\/\/stackoverflow.com\/users\/16578447\/r0ixy","474":"https:\/\/stackoverflow.com\/users\/16085180\/onlyto","475":"https:\/\/stackoverflow.com\/users\/13942399\/surrender-oz","476":"https:\/\/stackoverflow.com\/users\/1153351\/gokul-alex","477":"https:\/\/stackoverflow.com\/users\/16500348\/enthusiast-coder","478":"https:\/\/stackoverflow.com\/users\/16268458\/ivan","479":"https:\/\/stackoverflow.com\/users\/16557524\/djd","480":"https:\/\/stackoverflow.com\/users\/2945977\/sonic","481":"https:\/\/stackoverflow.com\/users\/14894552\/gopal-gurram","482":"https:\/\/stackoverflow.com\/users\/8326799\/tushar-sharma","483":"https:\/\/stackoverflow.com\/users\/13997007\/neel-gorasiya","484":"https:\/\/stackoverflow.com\/users\/9901695\/umair-janjua","485":"https:\/\/stackoverflow.com\/users\/697417\/user697417","486":"https:\/\/stackoverflow.com\/users\/16537824\/learn-code","487":"https:\/\/stackoverflow.com\/users\/14636579\/shahrad-khedri","488":"https:\/\/stackoverflow.com\/users\/16528894\/user16528894","489":"https:\/\/stackoverflow.com\/users\/13187605\/lucgerrits","490":"https:\/\/stackoverflow.com\/users\/13215988\/christianoconnor","491":"https:\/\/stackoverflow.com\/users\/15986059\/angeldev","492":"https:\/\/stackoverflow.com\/users\/16512770\/giorgi","493":"https:\/\/stackoverflow.com\/users\/16511343\/daniel-m","494":"https:\/\/stackoverflow.com\/users\/16245469\/aslan-demir","495":"https:\/\/stackoverflow.com\/users\/9781390\/zsa","496":"https:\/\/stackoverflow.com\/users\/10922639\/kotlinisland","497":"https:\/\/stackoverflow.com\/users\/14987210\/yifan-lim","498":"https:\/\/stackoverflow.com\/users\/13089658\/swaggy-pete","499":"https:\/\/stackoverflow.com\/users\/16482587\/aditya","500":"https:\/\/stackoverflow.com\/users\/3852723\/ganesh-pol","501":"https:\/\/stackoverflow.com\/users\/6259472\/akhil-kintali","502":"https:\/\/stackoverflow.com\/users\/11733061\/arash-heidari","503":"https:\/\/stackoverflow.com\/users\/13992183\/makam-aravind","504":"https:\/\/stackoverflow.com\/users\/10867346\/andrea-d","505":"https:\/\/stackoverflow.com\/users\/14436484\/jeff-f","506":"https:\/\/stackoverflow.com\/users\/16432052\/hoomehr-kz","507":"https:\/\/stackoverflow.com\/users\/13086458\/allouf","508":"https:\/\/stackoverflow.com\/users\/14406063\/ponga","509":"https:\/\/stackoverflow.com\/users\/16460088\/fabian-aguilera","510":"https:\/\/stackoverflow.com\/users\/9408829\/akhil","511":"https:\/\/stackoverflow.com\/users\/10805303\/viktor-w","512":"https:\/\/stackoverflow.com\/users\/11906195\/jitterbug","513":"https:\/\/stackoverflow.com\/users\/12440348\/galpo","514":"https:\/\/stackoverflow.com\/users\/16258236\/shining","515":"https:\/\/stackoverflow.com\/users\/16434769\/docred","516":"https:\/\/stackoverflow.com\/users\/16436232\/siusum","517":"https:\/\/stackoverflow.com\/users\/16409065\/shreyas-s-bhat","518":null,"519":"https:\/\/stackoverflow.com\/users\/14099849\/mohan-a","520":"https:\/\/stackoverflow.com\/users\/14791649\/yadav-akash","521":"https:\/\/stackoverflow.com\/users\/16386818\/vuen%c4%b0xx","522":"https:\/\/stackoverflow.com\/users\/7639541\/rohit-maurya","523":"https:\/\/stackoverflow.com\/users\/16392437\/saurabh","524":"https:\/\/stackoverflow.com\/users\/7221303\/dharjeezy","525":"https:\/\/stackoverflow.com\/users\/7962825\/mugetsu","526":"https:\/\/stackoverflow.com\/users\/16391352\/gaurav-yadav","527":"https:\/\/stackoverflow.com\/users\/16385885\/dimitri","528":"https:\/\/stackoverflow.com\/users\/14791649\/yadav-akash","529":"https:\/\/stackoverflow.com\/users\/16118027\/marija","530":"https:\/\/stackoverflow.com\/users\/13628786\/tejas-sanap","531":"https:\/\/stackoverflow.com\/users\/10922639\/kotlinisland","532":"https:\/\/stackoverflow.com\/users\/16376319\/joebedoeper","533":"https:\/\/stackoverflow.com\/users\/12804605\/darshan-vankawala","534":"https:\/\/stackoverflow.com\/users\/16331231\/thaddeus","535":"https:\/\/stackoverflow.com\/users\/1675412\/hello-world","536":"https:\/\/stackoverflow.com\/users\/6261070\/fan","537":"https:\/\/stackoverflow.com\/users\/5406137\/suryansh-singh","538":"https:\/\/stackoverflow.com\/users\/16211298\/supdev","539":"https:\/\/stackoverflow.com\/users\/482717\/paul-verest","540":"https:\/\/stackoverflow.com\/users\/16350103\/gaming-with-farhan","541":"https:\/\/stackoverflow.com\/users\/3839802\/p-zuckerman","542":"https:\/\/stackoverflow.com\/users\/1553662\/stormsson","543":"https:\/\/stackoverflow.com\/users\/8898464\/h-m-sibghat-ullah","544":"https:\/\/stackoverflow.com\/users\/12804605\/darshan-vankawala","545":"https:\/\/stackoverflow.com\/users\/9813335\/iamacoder","546":"https:\/\/stackoverflow.com\/users\/15894273\/erfan-poursina","547":"https:\/\/stackoverflow.com\/users\/16315385\/user16315385","548":"https:\/\/stackoverflow.com\/users\/482717\/paul-verest","549":"https:\/\/stackoverflow.com\/users\/10297996\/anondevpepe","550":"https:\/\/stackoverflow.com\/users\/10297996\/anondevpepe","551":"https:\/\/stackoverflow.com\/users\/11028582\/opsetech","552":"https:\/\/stackoverflow.com\/users\/13661807\/holland-pleskac","553":"https:\/\/stackoverflow.com\/users\/13661807\/holland-pleskac","554":"https:\/\/stackoverflow.com\/users\/16261353\/unidentifiedactress","555":"https:\/\/stackoverflow.com\/users\/9408829\/akhil","556":"https:\/\/stackoverflow.com\/users\/6557184\/rajnish63","557":"https:\/\/stackoverflow.com\/users\/16255150\/andrey-serdyuk","558":"https:\/\/stackoverflow.com\/users\/14617762\/normalbut-genuine","559":"https:\/\/stackoverflow.com\/users\/16246995\/nish","560":"https:\/\/stackoverflow.com\/users\/3133641\/tosch","561":"https:\/\/stackoverflow.com\/users\/10596249\/soubhagya","562":"https:\/\/stackoverflow.com\/users\/5200566\/siridet-sukkana","563":"https:\/\/stackoverflow.com\/users\/16242118\/andy-bell","564":"https:\/\/stackoverflow.com\/users\/1115885\/ragesh-s","565":"https:\/\/stackoverflow.com\/users\/13187605\/lucgerrits","566":"https:\/\/stackoverflow.com\/users\/16118027\/marija","567":"https:\/\/stackoverflow.com\/users\/8450582\/darren","568":"https:\/\/stackoverflow.com\/users\/16200026\/dressi","569":"https:\/\/stackoverflow.com\/users\/15451714\/noveltyz","570":"https:\/\/stackoverflow.com\/users\/15704048\/chris-h","571":"https:\/\/stackoverflow.com\/users\/16177390\/ajit-yadav","572":"https:\/\/stackoverflow.com\/users\/3294568\/webish","573":"https:\/\/stackoverflow.com\/users\/5394603\/arun-kumar","574":"https:\/\/stackoverflow.com\/users\/4314265\/jeeves","575":"https:\/\/stackoverflow.com\/users\/11870107\/uchenna-edeoga","576":"https:\/\/stackoverflow.com\/users\/5085581\/jhon-alino","577":"https:\/\/stackoverflow.com\/users\/9822422\/laplace","578":"https:\/\/stackoverflow.com\/users\/15258612\/mahesh-rapelli","579":"https:\/\/stackoverflow.com\/users\/16159936\/entropic-nova","580":"https:\/\/stackoverflow.com\/users\/12524755\/thomas-janski","581":"https:\/\/stackoverflow.com\/users\/11870107\/uchenna-edeoga","582":"https:\/\/stackoverflow.com\/users\/9822422\/laplace","583":"https:\/\/stackoverflow.com\/users\/15298334\/willz-estorbot","584":"https:\/\/stackoverflow.com\/users\/15545451\/timm-nicolaizik","585":null,"586":"https:\/\/stackoverflow.com\/users\/672232\/krzyhub","587":"https:\/\/stackoverflow.com\/users\/16136829\/benalaya-chamesseddine","588":"https:\/\/stackoverflow.com\/users\/10911506\/jonathan-otokun","589":"https:\/\/stackoverflow.com\/users\/10046284\/ali-can-alma%c3%a7imeni","590":"https:\/\/stackoverflow.com\/users\/12622562\/nastari","591":"https:\/\/stackoverflow.com\/users\/16082669\/samuel-alibien","592":"https:\/\/stackoverflow.com\/users\/8814573\/s-o-s","593":"https:\/\/stackoverflow.com\/users\/16107671\/peter","594":"https:\/\/stackoverflow.com\/users\/1115885\/ragesh-s","595":"https:\/\/stackoverflow.com\/users\/16103687\/%d0%90%d0%bb%d0%b8%d1%8f-%d0%a1%d1%83%d0%b5%d1%82%d0%b8%d0%bd%d0%b0","596":"https:\/\/stackoverflow.com\/users\/16061447\/padma-shruthi","597":"https:\/\/stackoverflow.com\/users\/16099675\/tarxan","598":"https:\/\/stackoverflow.com\/users\/9771547\/monir-zaman","599":"https:\/\/stackoverflow.com\/users\/9822422\/laplace","600":"https:\/\/stackoverflow.com\/users\/16061447\/padma-shruthi","601":"https:\/\/stackoverflow.com\/users\/16086195\/rishabh-v","602":"https:\/\/stackoverflow.com\/users\/16082669\/samuel-alibien","603":"https:\/\/stackoverflow.com\/users\/9636279\/enthusiast-coder","604":"https:\/\/stackoverflow.com\/users\/16051236\/xxx-yyy","605":"https:\/\/stackoverflow.com\/users\/16051203\/m-gogo","606":"https:\/\/stackoverflow.com\/users\/7769344\/tahlil","607":"https:\/\/stackoverflow.com\/users\/3071728\/metastack","608":"https:\/\/stackoverflow.com\/users\/5445213\/lucian-ilie","609":"https:\/\/stackoverflow.com\/users\/8352940\/azeem-lodhi","610":"https:\/\/stackoverflow.com\/users\/7552849\/gaurav","611":"https:\/\/stackoverflow.com\/users\/8352940\/azeem-lodhi","612":null,"613":"https:\/\/stackoverflow.com\/users\/15157213\/peterchen145","614":"https:\/\/stackoverflow.com\/users\/10919386\/roman-kartashow","615":"https:\/\/stackoverflow.com\/users\/16018334\/kyto3","616":"https:\/\/stackoverflow.com\/users\/14913395\/nikhil-chandna","617":"https:\/\/stackoverflow.com\/users\/13032732\/mangekyou","618":"https:\/\/stackoverflow.com\/users\/16004349\/jwpublic","619":"https:\/\/stackoverflow.com\/users\/9996709\/vayas","620":"https:\/\/stackoverflow.com\/users\/1432503\/zed","621":"https:\/\/stackoverflow.com\/users\/3760894\/user3760894","622":"https:\/\/stackoverflow.com\/users\/10809603\/ilker-kadir-ozturk","623":"https:\/\/stackoverflow.com\/users\/9958772\/user9958772","624":"https:\/\/stackoverflow.com\/users\/13534726\/kapisolec","625":"https:\/\/stackoverflow.com\/users\/15990423\/cocazzzz","626":"https:\/\/stackoverflow.com\/users\/8847540\/farouk-yd","627":"https:\/\/stackoverflow.com\/users\/15986059\/angeldev","628":"https:\/\/stackoverflow.com\/users\/3930728\/user3930728","629":"https:\/\/stackoverflow.com\/users\/13064668\/oguzkaanakyalcin","630":"https:\/\/stackoverflow.com\/users\/10116367\/kevvv","631":"https:\/\/stackoverflow.com\/users\/8847540\/farouk-yd","632":"https:\/\/stackoverflow.com\/users\/10623345\/amin","633":"https:\/\/stackoverflow.com\/users\/14962409\/inquisitivemongoose","634":"https:\/\/stackoverflow.com\/users\/1953536\/pooya-saberian","635":"https:\/\/stackoverflow.com\/users\/11520760\/basilisk","636":"https:\/\/stackoverflow.com\/users\/1068508\/icaro","637":"https:\/\/stackoverflow.com\/users\/14468449\/baxter-cooper","638":"https:\/\/stackoverflow.com\/users\/5583363\/adlz","639":"https:\/\/stackoverflow.com\/users\/6845013\/saulius","640":"https:\/\/stackoverflow.com\/users\/15438773\/stb","641":"https:\/\/stackoverflow.com\/users\/8035005\/mr-jack","642":null,"643":"https:\/\/stackoverflow.com\/users\/10096713\/adam","644":"https:\/\/stackoverflow.com\/users\/3879497\/suganth-g","645":"https:\/\/stackoverflow.com\/users\/15888083\/viet-nguyen","646":"https:\/\/stackoverflow.com\/users\/11743012\/tushar-bansal","647":"https:\/\/stackoverflow.com\/users\/3717550\/user3717550","648":"https:\/\/stackoverflow.com\/users\/3161840\/<blockchain>-learner","649":"https:\/\/stackoverflow.com\/users\/15873053\/user","650":"https:\/\/stackoverflow.com\/users\/6399643\/tonalt","651":"https:\/\/stackoverflow.com\/users\/9080873\/everton-figueiredo","652":"https:\/\/stackoverflow.com\/users\/9080873\/everton-figueiredo","653":"https:\/\/stackoverflow.com\/users\/11691548\/soundarya","654":"https:\/\/stackoverflow.com\/users\/8396190\/yocker95k","655":"https:\/\/stackoverflow.com\/users\/10404390\/sfl0r3nz05","656":"https:\/\/stackoverflow.com\/users\/4104575\/jaxcoder","657":"https:\/\/stackoverflow.com\/users\/3530774\/magna-nz","658":"https:\/\/stackoverflow.com\/users\/13982755\/nalks","659":"https:\/\/stackoverflow.com\/users\/6516923\/pool","660":"https:\/\/stackoverflow.com\/users\/7368107\/lyn","661":"https:\/\/stackoverflow.com\/users\/7962825\/mugetsu","662":"https:\/\/stackoverflow.com\/users\/9527272\/sung-chul","663":"https:\/\/stackoverflow.com\/users\/10404390\/sfl0r3nz05","664":"https:\/\/stackoverflow.com\/users\/11456085\/marklah","665":"https:\/\/stackoverflow.com\/users\/15824746\/saurav-majumder","666":"https:\/\/stackoverflow.com\/users\/844940\/jmac","667":"https:\/\/stackoverflow.com\/users\/14732151\/mario-roma","668":"https:\/\/stackoverflow.com\/users\/653457\/luke-vo","669":"https:\/\/stackoverflow.com\/users\/13915311\/muhammad-abdullah","670":"https:\/\/stackoverflow.com\/users\/11979794\/carlo-parisi","671":"https:\/\/stackoverflow.com\/users\/7147234\/ogg130","672":"https:\/\/stackoverflow.com\/users\/7721443\/secretshardul","673":"https:\/\/stackoverflow.com\/users\/14190541\/oumayma","674":"https:\/\/stackoverflow.com\/users\/6083952\/marcin-beza","675":"https:\/\/stackoverflow.com\/users\/14480330\/chaitanya-m","676":"https:\/\/stackoverflow.com\/users\/7147234\/ogg130","677":"https:\/\/stackoverflow.com\/users\/9098048\/gyana-lakshmi","678":"https:\/\/stackoverflow.com\/users\/13295504\/acampana","679":"https:\/\/stackoverflow.com\/users\/15790849\/dmitriy-yankowoy","680":"https:\/\/stackoverflow.com\/users\/15788727\/nikilsraaju","681":"https:\/\/stackoverflow.com\/users\/3399693\/laalaguer","682":"https:\/\/stackoverflow.com\/users\/8713068\/karzel","683":"https:\/\/stackoverflow.com\/users\/15779719\/leclient","684":"https:\/\/stackoverflow.com\/users\/3739408\/aymeric","685":"https:\/\/stackoverflow.com\/users\/11087216\/strohhut","686":"https:\/\/stackoverflow.com\/users\/14581327\/huzaifa-abedeen","687":"https:\/\/stackoverflow.com\/users\/15209448\/crypto-miner","688":"https:\/\/stackoverflow.com\/users\/8348997\/tanvir-hossain","689":"https:\/\/stackoverflow.com\/users\/7254193\/wowocado","690":"https:\/\/stackoverflow.com\/users\/15636880\/crypto-d","691":"https:\/\/stackoverflow.com\/users\/15766334\/roberto-landi","692":"https:\/\/stackoverflow.com\/users\/6845013\/saulius","693":"https:\/\/stackoverflow.com\/users\/13027613\/raury","694":"https:\/\/stackoverflow.com\/users\/1285061\/majoris","695":"https:\/\/stackoverflow.com\/users\/9063934\/alain-sst","696":"https:\/\/stackoverflow.com\/users\/14794451\/lauri-teerim%c3%a4ki","697":"https:\/\/stackoverflow.com\/users\/2465044\/omar-saadoun","698":"https:\/\/stackoverflow.com\/users\/11052065\/ima","699":"https:\/\/stackoverflow.com\/users\/14795281\/dabadee","700":"https:\/\/stackoverflow.com\/users\/15689149\/rock","701":"https:\/\/stackoverflow.com\/users\/15689149\/rock","702":"https:\/\/stackoverflow.com\/users\/6845013\/saulius","703":"https:\/\/stackoverflow.com\/users\/1289292\/frankc","704":"https:\/\/stackoverflow.com\/users\/9021450\/shubham-garg","705":"https:\/\/stackoverflow.com\/users\/15695838\/hatta-zouba","706":"https:\/\/stackoverflow.com\/users\/12417175\/fabriziogianni7","707":"https:\/\/stackoverflow.com\/users\/13333058\/nidhi-1729","708":"https:\/\/stackoverflow.com\/users\/11205993\/highxtc","709":"https:\/\/stackoverflow.com\/users\/6845013\/saulius","710":"https:\/\/stackoverflow.com\/users\/15586903\/zoubair-elhattab","711":"https:\/\/stackoverflow.com\/users\/15609141\/oyu","712":"https:\/\/stackoverflow.com\/users\/15520869\/jdawg287","713":"https:\/\/stackoverflow.com\/users\/13924886\/matok","714":"https:\/\/stackoverflow.com\/users\/368691\/gajus","715":"https:\/\/stackoverflow.com\/users\/15407089\/mikasa-jd","716":"https:\/\/stackoverflow.com\/users\/15298561\/tristan-s","717":"https:\/\/stackoverflow.com\/users\/8162018\/mightymouse","718":"https:\/\/stackoverflow.com\/users\/13554280\/unos-mopsus","719":"https:\/\/stackoverflow.com\/users\/9736873\/madiator2011","720":"https:\/\/stackoverflow.com\/users\/15538604\/oweshoal","721":"https:\/\/stackoverflow.com\/users\/15582913\/l4x3-l4x3","722":"https:\/\/stackoverflow.com\/users\/14074078\/user14074078","723":"https:\/\/stackoverflow.com\/users\/15590700\/raphael","724":"https:\/\/stackoverflow.com\/users\/15587225\/youcef-chalabi","725":"https:\/\/stackoverflow.com\/users\/612283\/sirab33","726":null,"727":"https:\/\/stackoverflow.com\/users\/15375954\/aoi","728":"https:\/\/stackoverflow.com\/users\/9203876\/federico-bellini","729":"https:\/\/stackoverflow.com\/users\/11569645\/it4ddict","730":"https:\/\/stackoverflow.com\/users\/10715667\/nuan-grobbelaar","731":"https:\/\/stackoverflow.com\/users\/13295504\/acampana","732":"https:\/\/stackoverflow.com\/users\/8586250\/ryan-russell","733":"https:\/\/stackoverflow.com\/users\/15209448\/crypto-miner","734":"https:\/\/stackoverflow.com\/users\/15528540\/siham","735":"https:\/\/stackoverflow.com\/users\/12809111\/thomasatu","736":"https:\/\/stackoverflow.com\/users\/2330237\/user2330237","737":"https:\/\/stackoverflow.com\/users\/11094239\/denis-deniben","738":"https:\/\/stackoverflow.com\/users\/15520869\/jdawg287","739":"https:\/\/stackoverflow.com\/users\/6553466\/john","740":"https:\/\/stackoverflow.com\/users\/11145291\/leonardo-henrique","741":"https:\/\/stackoverflow.com\/users\/15513282\/mariem-chamakh","742":"https:\/\/stackoverflow.com\/users\/4556629\/vladwho","743":"https:\/\/stackoverflow.com\/users\/15509365\/isee","744":"https:\/\/stackoverflow.com\/users\/6845013\/saulius","745":"https:\/\/stackoverflow.com\/users\/1781150\/haya-raed","746":"https:\/\/stackoverflow.com\/users\/9212154\/rambabu-verma","747":"https:\/\/stackoverflow.com\/users\/14168299\/rouzbehsbz","748":"https:\/\/stackoverflow.com\/users\/13734327\/ayoub-mafkoud","749":"https:\/\/stackoverflow.com\/users\/9917902\/mukesh-kumar-badigineni","750":"https:\/\/stackoverflow.com\/users\/15376781\/marcus","751":"https:\/\/stackoverflow.com\/users\/8162018\/mightymouse","752":"https:\/\/stackoverflow.com\/users\/11094239\/denis-deniben","753":"https:\/\/stackoverflow.com\/users\/11094239\/denis-deniben","754":"https:\/\/stackoverflow.com\/users\/13073066\/mai-mohamed","755":"https:\/\/stackoverflow.com\/users\/8637988\/nextil-mens-essentials","756":"https:\/\/stackoverflow.com\/users\/1349141\/jill-clover","757":"https:\/\/stackoverflow.com\/users\/3211002\/dedicateddreamer","758":"https:\/\/stackoverflow.com\/users\/6845013\/saulius","759":"https:\/\/stackoverflow.com\/users\/4260223\/shaban","760":"https:\/\/stackoverflow.com\/users\/15194141\/salah-sh","761":"https:\/\/stackoverflow.com\/users\/15429333\/cuby-dev","762":"https:\/\/stackoverflow.com\/users\/8950329\/tunji-abioye","763":"https:\/\/stackoverflow.com\/users\/13220817\/krish-bhanushali","764":"https:\/\/stackoverflow.com\/users\/12490398\/vlad","765":"https:\/\/stackoverflow.com\/users\/8335839\/prisma","766":"https:\/\/stackoverflow.com\/users\/15408716\/wafa-ab","767":"https:\/\/stackoverflow.com\/users\/15382223\/k-block","768":"https:\/\/stackoverflow.com\/users\/15406699\/anton-popadyuk","769":"https:\/\/stackoverflow.com\/users\/5583363\/adlz","770":"https:\/\/stackoverflow.com\/users\/14842966\/cherry","771":"https:\/\/stackoverflow.com\/users\/13970187\/luksssss","772":"https:\/\/stackoverflow.com\/users\/8669496\/futureman2007","773":"https:\/\/stackoverflow.com\/users\/1781150\/haya-raed","774":"https:\/\/stackoverflow.com\/users\/3059580\/tosh","775":"https:\/\/stackoverflow.com\/users\/5674738\/airled","776":"https:\/\/stackoverflow.com\/users\/1167407\/dan-wiebe","777":"https:\/\/stackoverflow.com\/users\/10461524\/teja-surisetty-devilrancy","778":"https:\/\/stackoverflow.com\/users\/15350901\/ray-lau","779":"https:\/\/stackoverflow.com\/users\/10046099\/nika-kurashvili","780":"https:\/\/stackoverflow.com\/users\/15303250\/tnjcoding","781":"https:\/\/stackoverflow.com\/users\/14071648\/user","782":"https:\/\/stackoverflow.com\/users\/10356583\/shubham-gupta","783":"https:\/\/stackoverflow.com\/users\/12039761\/akhil","784":"https:\/\/stackoverflow.com\/users\/15313169\/hyunki-cho","785":"https:\/\/stackoverflow.com\/users\/5784743\/caius","786":"https:\/\/stackoverflow.com\/users\/15309087\/therealp","787":"https:\/\/stackoverflow.com\/users\/14884717\/nishant-karekar","788":"https:\/\/stackoverflow.com\/users\/13980925\/ckboy","789":"https:\/\/stackoverflow.com\/users\/13349506\/garrix","790":"https:\/\/stackoverflow.com\/users\/15291137\/reza-s","791":"https:\/\/stackoverflow.com\/users\/15274778\/nikolay-dobronravov","792":"https:\/\/stackoverflow.com\/users\/9636279\/enthusiast-coder","793":"https:\/\/stackoverflow.com\/users\/15261054\/aydogan-sahin","794":"https:\/\/stackoverflow.com\/users\/10550408\/mayur","795":"https:\/\/stackoverflow.com\/users\/7681646\/karthikeyan-thangavel","796":"https:\/\/stackoverflow.com\/users\/15245059\/bigfranc","797":null,"798":"https:\/\/stackoverflow.com\/users\/612283\/sirab33","799":"https:\/\/stackoverflow.com\/users\/15238126\/yeckhq","800":"https:\/\/stackoverflow.com\/users\/8134201\/benjamin852","801":"https:\/\/stackoverflow.com\/users\/14058968\/quek-yao-jing","802":"https:\/\/stackoverflow.com\/users\/9771547\/monir-zaman","803":"https:\/\/stackoverflow.com\/users\/5085581\/jhon-alino","804":"https:\/\/stackoverflow.com\/users\/4152449\/souptik-banerjee","805":"https:\/\/stackoverflow.com\/users\/1642231\/patoshi-%e3%83%91%e3%83%88%e3%82%b7","806":"https:\/\/stackoverflow.com\/users\/14732151\/mario-roma","807":"https:\/\/stackoverflow.com\/users\/5108941\/donkeykong","808":"https:\/\/stackoverflow.com\/users\/13137678\/siglesias","809":"https:\/\/stackoverflow.com\/users\/5406137\/suryansh-singh","810":"https:\/\/stackoverflow.com\/users\/9408829\/akhil","811":"https:\/\/stackoverflow.com\/users\/15172447\/andtoe","812":"https:\/\/stackoverflow.com\/users\/11437387\/ajay","813":"https:\/\/stackoverflow.com\/users\/8050649\/tony-starkus","814":"https:\/\/stackoverflow.com\/users\/15073740\/micheal","815":"https:\/\/stackoverflow.com\/users\/7183830\/dralexhunter","816":"https:\/\/stackoverflow.com\/users\/2798760\/emisilve86","817":"https:\/\/stackoverflow.com\/users\/14920006\/ostap-volanuk","818":"https:\/\/stackoverflow.com\/users\/4838329\/milton-cezar","819":"https:\/\/stackoverflow.com\/users\/12409879\/shubham-kamboj","820":"https:\/\/stackoverflow.com\/users\/4511322\/gjivanya","821":"https:\/\/stackoverflow.com\/users\/15149208\/eva-wu","822":"https:\/\/stackoverflow.com\/users\/14914915\/emanuel","823":"https:\/\/stackoverflow.com\/users\/689363\/afeez-aziz","824":"https:\/\/stackoverflow.com\/users\/4511322\/gjivanya","825":"https:\/\/stackoverflow.com\/users\/9217143\/ixar","826":"https:\/\/stackoverflow.com\/users\/612283\/sirab33","827":"https:\/\/stackoverflow.com\/users\/15123721\/eddyshanghai","828":"https:\/\/stackoverflow.com\/users\/11467770\/calvin-cheng","829":"https:\/\/stackoverflow.com\/users\/2601524\/mohammadjavadkh","830":"https:\/\/stackoverflow.com\/users\/15074218\/ram","831":"https:\/\/stackoverflow.com\/users\/14914915\/emanuel","832":"https:\/\/stackoverflow.com\/users\/15100771\/stephen-sunday","833":"https:\/\/stackoverflow.com\/users\/14732151\/mario-roma","834":"https:\/\/stackoverflow.com\/users\/14732151\/mario-roma","835":"https:\/\/stackoverflow.com\/users\/15097634\/daelon","836":"https:\/\/stackoverflow.com\/users\/9303115\/meharab","837":"https:\/\/stackoverflow.com\/users\/10000229\/zoha-malik","838":"https:\/\/stackoverflow.com\/users\/4279851\/nigar-atakishiyeva","839":"https:\/\/stackoverflow.com\/users\/15075595\/ivan-ponomarenko","840":"https:\/\/stackoverflow.com\/users\/15073740\/micheal","841":"https:\/\/stackoverflow.com\/users\/12874763\/mecca888","842":"https:\/\/stackoverflow.com\/users\/14732151\/mario-roma","843":"https:\/\/stackoverflow.com\/users\/15065068\/basti","844":"https:\/\/stackoverflow.com\/users\/10000229\/zoha-malik","845":"https:\/\/stackoverflow.com\/users\/14525777\/timmy123","846":"https:\/\/stackoverflow.com\/users\/342553\/james-lin","847":"https:\/\/stackoverflow.com\/users\/15060354\/arek63","848":"https:\/\/stackoverflow.com\/users\/8259531\/hiimarksman","849":"https:\/\/stackoverflow.com\/users\/8259531\/hiimarksman","850":"https:\/\/stackoverflow.com\/users\/15033429\/user48429","851":"https:\/\/stackoverflow.com\/users\/14914915\/emanuel","852":"https:\/\/stackoverflow.com\/users\/14732151\/mario-roma","853":"https:\/\/stackoverflow.com\/users\/3362334\/user3362334","854":"https:\/\/stackoverflow.com\/users\/3717550\/user3717550","855":"https:\/\/stackoverflow.com\/users\/5866579\/ironfist","856":"https:\/\/stackoverflow.com\/users\/14262328\/meschdog18","857":"https:\/\/stackoverflow.com\/users\/5647090\/rob-frohwein","858":"https:\/\/stackoverflow.com\/users\/14253687\/potato","859":"https:\/\/stackoverflow.com\/users\/13007101\/jo-bo","860":"https:\/\/stackoverflow.com\/users\/14146670\/naxor","861":"https:\/\/stackoverflow.com\/users\/15013118\/bsc-talk","862":"https:\/\/stackoverflow.com\/users\/15013118\/bsc-talk","863":"https:\/\/stackoverflow.com\/users\/15009383\/zack-tim","864":"https:\/\/stackoverflow.com\/users\/3362334\/user3362334","865":"https:\/\/stackoverflow.com\/users\/2254149\/1174","866":"https:\/\/stackoverflow.com\/users\/12303558\/geeky-star","867":"https:\/\/stackoverflow.com\/users\/11893818\/kasun-sudharaka","868":"https:\/\/stackoverflow.com\/users\/14783213\/michael-allen","869":"https:\/\/stackoverflow.com\/users\/12912886\/matte","870":"https:\/\/stackoverflow.com\/users\/10214245\/vishwa-dayal","871":"https:\/\/stackoverflow.com\/users\/11560499\/decoder1799","872":"https:\/\/stackoverflow.com\/users\/294260\/gn","873":"https:\/\/stackoverflow.com\/users\/10625930\/l-m","874":"https:\/\/stackoverflow.com\/users\/11468263\/ajay-tom-george","875":"https:\/\/stackoverflow.com\/users\/14931573\/salma558","876":"https:\/\/stackoverflow.com\/users\/14619795\/aleksa-misovic","877":"https:\/\/stackoverflow.com\/users\/12753080\/waleed-shafiq","878":"https:\/\/stackoverflow.com\/users\/4627552\/clyde-dcruz","879":"https:\/\/stackoverflow.com\/users\/14343051\/patwards","880":"https:\/\/stackoverflow.com\/users\/294260\/gn","881":"https:\/\/stackoverflow.com\/users\/14842966\/cherry","882":"https:\/\/stackoverflow.com\/users\/14842966\/cherry","883":"https:\/\/stackoverflow.com\/users\/11345897\/waqas-wahid","884":"https:\/\/stackoverflow.com\/users\/2822497\/jeswin-rebil","885":"https:\/\/stackoverflow.com\/users\/8443401\/dainius-preimantas","886":"https:\/\/stackoverflow.com\/users\/14941552\/alex-schobel","887":"https:\/\/stackoverflow.com\/users\/11355308\/alex","888":"https:\/\/stackoverflow.com\/users\/12437376\/tjumma","889":"https:\/\/stackoverflow.com\/users\/12273331\/rashiq-kodakkad","890":"https:\/\/stackoverflow.com\/users\/14088060\/resilientether"},"Headline":{"0":"Ethereum pre defined gas price in <web3> wallet - is this possible?","1":"<hyperledger> Fabric \"fabric-ca-client\" Error Code: 71 - Authorization failure","2":"<hyperledger> Fabric world state, is it immutable?","3":"I am trying to connect Lottery Contract to React Application using Metamask, But when I call manager() method on the contract I get an empty array","4":"window.solana not found in <web3>js","5":"MintTo contract from <web3> gives error - ERC721: transfer to non ERC721Receiver implementer","6":"Smart Contract's state variables on the <blockchain>","7":"How to set the receiver of ETH in a contract to send ETH from one address to another with solidity usign call() in remix IDE","8":"Cosmos SDK: couldn't verify signature: unable to verify single signer signature","9":"gas estimation errored with the following message - execution reverted","10":"Does timestamp also change with nonce to calculate block hash in <blockchain>? How hash is calculated?","11":"AvalancheJS getUTXOS: couldn't unmarshal an argument","12":"simulation of VANET security project","13":"I am having error : \"Inbox\" -- Invalid number of parameters for \"undefined\". Got 0 expected 1","14":"Calculating Bitcoin mining difficulty","15":"NFT Marketplaces and Storage [closed]","16":"Can you deploy a smart contract from a webpage?","17":"Cannot run peer because error when setting up MSP","18":"How to mount aws EC2 files on aws EKS as presistent volume?","19":"How to run a local aurora node?","20":"How to open localhost:8000 using VPS Ubuntu","21":"I am getting \"The called function should be payable if you send value and the value you send should be less than your current balance.\"","22":"Error: Custom: Invalid blockhash when solana program deploy","23":"Check to make sure a solidity line of code ran successfully","24":"How to add and remove liquidity from uniswap3 using smart contract and sdk?","25":"How to specify a date when the function will be available for calling?","26":"Data migration using ethereum with solidity","27":"TypeError: Cannot read properties of undefined (reading 'eth')","28":"Send and transfer are only available for objects of type address payable , not address","29":"<blockchain> check gap api returns empty json","30":"Unable to call safeTransferFrom method from a JS api file","31":"Got Assertion.failed error while trying to sign a transaction","32":"How to logout from metamask account in reactjs using Ethereum","33":"What is the best way to access historical price data from Chainlink on a token in a decentralised manner?","34":"In <hyperledger> Fabric, is there a way to decode ledger data to human readable form?","35":"How get estimated gas before sending the transaction?","36":"How to get ENS domain address with Moralis","37":"Typing suggestion for contracts within brownie","38":"Accounts provided by ganache-cli has no balance at all","39":"hardhat test: <functionName> is not a function","40":"Can this algorithm achieve eventual consistency?","41":"brownie - How do I handle exceptions?","42":"What can I do to my contract to work with BEP20 mainnet","43":"Why is proof of work necessary in <blockchain>","44":"how can i identify type of transferd toke in my website","45":"retrieve minted NFT's by a wallet address - OpenSea","46":"What's the Difference between ETH 2.0 and NEAR?","47":"How to get the failed status from solidity require statement","48":"Why Does My Ethereum \".on\" Event Listener Stop Firing?","49":"Substrate <blockchain> - Change block structure","50":"Visualisation of decentralized network","51":"How to get some ether in my local <geth> account?","52":"Hello. Im having trouble deploying a contract on ganache. Can someone please assist? Im using <python> with a Solidity abi and bytecode","53":"I couldn't get results when I write compiled code in Visual Studio Code, I run <python> deploy.py and it gives me error. what I have to edit in my code","54":"How can I connect to the JSON RPC API using <python> (<blockchain>)","55":"Where to get a signature for smart contract interaction via block explorer?","56":"I installed Brownie and after installation when i tried to see the version of it, i ran into this error, I am using MacOs 10.15.3 if that matters","57":"Please help interpret the transaction action steps in this flash loan transaction","58":"BSC transaction without fees","59":"<web3>.exceptions.ContractLogicError: execution reverted","60":"Corda - SignTransactionFlow and sendAndReceive","61":"is it possible to get portfolio balance data from any Coinbase account without using api?","62":"How to deploy a smartcontract and make a transfer from it in Everscale <blockchain>","63":"Can we abort a transaction in <blockchain>?","64":"Smart Contract Won't deploy, RPC ERROR execution being revert. Using <node.js> and Hardhat","65":"BSC Scan Token Holders","66":"Is there a way to get token price on transfer function call?","67":"Docker-compose command not displaying URL for project","68":"<blockchain> consensus 51% vs number of nodes validation","69":"Rinkeby Authenticated Faucet is offline","70":"How to verify avalanche block is accepted with <web3>.py","71":"NFTs to Pixels in Map","72":"TypeError: this is undefined in rect js while passing BigNumber in solana RPC Request","73":"Why is it not possible to reassign the value in the contract level in solidity?","74":"What is the TL-B scheme in ton-solidity and how to use it?","75":"Get all NFTs of an Account on Flow <blockchain>","76":"Sign transaction on behalf of a 3rd party wallet","77":"Can smart contracts deploy other smart contracts?","78":"Why there should be orderer node in <hyperledger>? Can the orderer node's function be transferred to Peer node?","79":"How to add validators in POA system (node-template) in runtime?","80":"In Solidity smart contracts, what variables can be made dynamic?","81":"Instantiate chaincode successful but chaincode doesn't appear","82":"PopUp in React.js with a link","83":"How to read recent <transactions> from Uniswap V3 using <python>?","84":"Why assembly delegatecall() returns 1 instead of 0 when calling zero (0x000...) address?","85":"I need a simple way to sign data via <web3> and metamask","86":"Moving NearProtocol Node IP","87":"Using the CLI how do I get the balances of a Zenon Network address?","88":"How do I get the stats of all the pillars on the Zenon Network?","89":"ether holding time for The DAO recursive calls vulnerability case","90":"Does it make sense to manage balance manually inside smartcontract?","91":"How can I use Ganache to connect to a remote <blockchain> network?","92":"Ethers contract on method \"No mathing event\" error","93":"<web3> Swift Call Contract using Skywinder wrapper","94":"How do gasless fee <transactions> work on the polygon(matic) network?","95":"can't deploy contract from <web3> to <geth> node , Error: Transaction has been reverted by the EVM","96":".then() function never running for call to <blockchain>","97":"How can I debug the runtime error when call contract.transfer method in Solidity?","98":"How can I choose which account is the selected account when sending coins?","99":"Deploying a smart contract using Hardhat WITHOUT script","100":"Is smartcontract the only way to transfer ether in Ethereum network?","101":"Verify\/Publish Smart Contract on Etherscan Rinkeby","102":"Why can't I transfer ether in contract?","103":"<web3> - Provider not set or invalid","104":"why can't I send 1 ether to another account via smartcontract?","105":"Why do I get `sealing paused while waiting for <transactions>` error when mining in Ethereum private network?","106":"Which is the cheapest way to store a (140 chars) string in the <blockchain>?","107":"Proper way to initialize PDAs within the Solana Anchor framework","108":"Unauthorized error when running npx hardhat test --network local or npx hardhat test --network kovan on Moralis forked testnet","109":"Disconnect dapp from MetaMask","110":"How to get all transaction from an address via the etherscan API in R?","111":"Use of address function inside a contract constructor?","112":"Should I use the pallet_membership to handle dapp user membership? (Differences between smart contracts and <blockchain> runtime)","113":"<blockchain> substrate pallet_membership use cases?","114":"Opensea not generating preview for 3d model glb","115":"What are the steps to build a production-based HF <blockchain> network?","116":"Does deploy a contract mean create a new block in <blockchain>?","117":"Does each transaction take more than a few minutes to finish in <blockchain>?","118":"How to fetch raw data from Binance Smart Chain (txs for specific address)","119":"how to update the value of variable of struct with mapping in solidity","120":"How to get informative data in smart contract with using API in R","121":"How to find smart contract adress and hash code in Etherscan","122":"swapExactETHForTokens keeps failing","123":"Smart contract Ethereum - How to recreate same contract after used selfDestruct()","124":"Can I use the block height to measure the passage of a year based on the average block time in RSK and Ethereum?","125":"Bit operators and gas saving on solidity","126":"Are there any costs to create smart contracts in Solidity?","127":"Trying to run \"brownie run .\\scripts\\deploy.py --network rinkeby\" but getting a ValueError","128":"Is there any doc on how accounts are generated in substrate?","129":"Can I create a same pair in different DEXes?","130":"Tronweb authentication","131":"How to get price information from Chainlink?","132":"How to see contract execution time in Remix IDE?","133":"How to resolve the error \"Invalid type for argument in function call. Invalid implicit conversion from address to address payable requested\"","134":"Solidity - ERC1155 NFT minting - Gas estimation failed: execution reverted","135":"Problem with the approve function of ERC20 token contract","136":"Can I import NFT's metadata into a smart contract?","137":"create a simple randomness feature in solidity","138":"How to transfer ERC1155 token using <web3>js?","139":"Solidity struct and staking code error: Please look into the contract","140":"Error: Expected private key to be an Uint8Array with length 32","141":"solana - \/node_modules\/@toruslabs\/eccrypto\/index.js: 'return' outside of function","142":"I would like to get all <transactions> given an address","143":"Can a server \"impersonate\" an user account on Ethereum <blockchain>?","144":"Solana, how to send a NFT (spl token) to another wallet using javascript\/wallets","145":"Bitcoin daemon consuming too much internet data","146":"Is it possible to create a <blockchain> with probabilistic finality with substrate?","147":"Unable to edit ORG1MSPanchors.tx in <hyperledger> Fabric","148":"Member \"transfer\" not found or not visible","149":"What is difference between internal and private in Solidity?","150":"Error: transaction invalidated with status (ENDORSEMENT_POLICY_FAILURE)","151":"Return nested struct inside struct in Solidity","152":"<web3> getting contract <transactions> history","153":"ERC20: transfer amount exceeds allowance Smart contract with brownie and NFT","154":"<blockchain> Testnet tokens, where do they come from and are they unlimited?","155":"BSC testnet, how can i get api key from bsc testnet","156":"API problem for separating Orderers in separate Organizations","157":"Can we add more than one validator in from one node on substrate?","158":"Chainlink Keeper: The execution failed due to an exception","159":"how to apply javascript promises for async data hashing","160":"How to use ERC777 as a pay method","161":"How can I freeze MasterEdition NFT token account?","162":"How do we know that information added to a <blockchain> is true?","163":"Storing data and image on Ethereum network","164":"Generate new deposit address in Binance","165":"Fetching Chainlink's Oracle Private Key","166":"near-example\/workshop--exploring-assemblyscript-contracts\/assembly\/A.sample-projects\/04.token-contract\/","167":"tx.wait with Ethers.js never resolves","168":"How to restart <transactions> and Block stream in Hive <blockchain>","169":"Examining the Behaviour of <hyperledger> Fabric when one of the stateDB is Tampered","170":"I want my code to print only if the result is different from previous result and not the same thing again","171":"<node.js> can't find Module inside Folder","172":"<web3> <python>: how can I decode Input Data","173":"How do <blockchain>s find invalid blocks?","174":"The relation between using `std` and `no_std` attributes and including WASM","175":"node:assert:400 throw err; ^ AssertionError [ERR_ASSERTION]: Invalid callback object specified","176":"How to transfer an ERC721 token across networks","177":"How to add infinite allowance with <web3>?","178":"Implementing bridge network of substrate and getting error: duplicate lang item in crate `sp_io` required by bp_runtime","179":"After compiling my erc20 token, can I modify any function?","180":"Error at <hyperledger> FABRIC while trying to use the chaincode for the test network but running my application","181":"Weird error using Smart Contracts with @usedapp and @ethersproject\/contracts","182":"OpenSea API \"only_opensea\"","183":"Error in executing .\/network.sh up createChannel","184":"I am not able to use ipfs","185":"Normal Android\/windows app with <blockchain> storage","186":"I'm currently learning Solidity and how to develop Dapps on Ethereum <blockchain>, is my understanding correct?","187":"What does MetaMask do?","188":"Running Metaplex on localhost","189":"how to start hyper ledger fabric without fabric-samples?","190":"Unable to make field public java.lang.String <blockchain>.Block.hash accessible: module noobChain does not \"exports <blockchain>\" to module gson","191":"Polkadot tx-wrapper offline signing","192":"Can we get the pallet and function data from call (type) passed as a parameter to a function in substrate?","193":"Transferring SPL Token using @Solana\\<web3>.js","194":"How to generate same wallet address in both BEP20 and ERC20 using <web3>","195":"Function declared as view error in solidity","196":"Connect <web3> php to ropsten test network","197":"<hyperledger> fabric - Cant connect peer to channel - endorser client failed to connect - connection refused","198":"Brownie doesn't automatically attach to local ganache when I have Ganache open in the background. It is stuck with ganache-cli","199":"How to Call getLatestPrice function Chainlink Price Feed","200":"Is there any testnet for trading? I want to test trading my newly created token","201":"Implementation of Chainlink Feed Aggregator","202":"Solidity calling contract with elevated permissions","203":"React Native slow \/ freeze whet i call ethers.Wallet.fromMnemonic() [Ethers js 5.5.1]","204":"How to analyse tokenBalances in a confirmed transaction on the Solana <blockchain>?","205":"<blockchain> and in-game currency (off chain)","206":"Metamask not connecting to localhost 8545","207":"Using brute force to determine original input data from a hash value","208":"inpage.js:1 MetaMask no longer injects <web3>","209":"Separate orderer for each organization","210":"Where is the on-chain architecture explained in the whitepaper applied in Chainlink?","211":"Split money on minting between more than one wallet solana metaplex & candymachine","212":"Import <web3> could not be resolvedpylance(reportMissingImports)","213":"Error: VM Exception while processing transaction: out of gas, set mapping key value error","214":"get Avalanche C-Chain contract Abi's","215":"Restrict function access ONLY to one other specific contract in Solidity","216":"Why am I receiving the following Chainlink error: cannot estimate gas","217":"How can I build a bitcoin wallet?","218":"Call nft_transfer using contract name on NEAR <blockchain>?","219":"How to get a recipient's public key in bitcoin <blockchain>?","220":"Error running hardhat node: error:0308010C:digital envelope routines::unsupported","221":"Nethereum invalid sender: eth_sendRawTransaction on polygon chain","222":"How to run <hyperledger> besu node through docker with custom configuration?","223":"How do I load my Solana wallet using my private key file?","224":"Solidity, Struct containing a (nested) mapping cannot be constructed","225":"How to count on chain <transactions> for an address between blocks in solidity","226":"<hyperledger> Fabric: how can I invoke a chaincode with the role of a user?","227":"How Ethereum protocol works with <geth>","228":"Generating a REST server from <hyperledger> fabric composer","229":"How can I store the value of a promise and use it once resolved?","230":"How new transaction will get recorded when all bitcoins are mined","231":"Borsh Serialization fails in React Application","232":"Metamask is not connecting my <blockchain> network","233":"Batch to<geth>er multiple read function calls for different blocks of ethereum <blockchain>","234":"Solidity pragama not allowing for anything lower then 0.8.9","235":"How to concat two string values in Solidity","236":"Making ink! Smart Contracts Revert","237":"Solidity inserting array as map value after _setTokenURI on ERC721","238":"How to read a ledger file of a local <hyperledger> Fabric?","239":"how to get the the amount of the given token address in anchor solana?","240":"Error HH604: Error running JSON-RPC server: error:0308010C:digital envelope routines::unsupported","241":"gRPC connect to Concordium <blockchain> API with C#","242":"How do I calculate prices?","243":"Solana <blockchain>. How can i generate private key?","244":"<web3> subscribed event fires twice","245":"Does each transaction have its own gas price in NEAR?","246":"Solana - How to get token balance for a foreign account?","247":"What is the best way to create ether wallet ? how does creating wallet using mnemonic work?","248":"Can an NFT have metadata that updates based on smart contract variable values?","249":"how can i get the symbol\/name of a token in solana using solana <web3> js?","250":"<hyperledger> Fabric: is there a way to prevent a member of an organization to access a specific smart contract within a chaincode on a channel?","251":"Can I Install <hyperledger> Composer deprecated version by cloning it from github?","252":"ParserError: Expected ';' but got identifier","253":"\" Expected '(' but got identifier \" & \" Parse error: mismatched input '{' expecting {';', '='} [undefined] \"","254":"How to connect my smart contract with another deployed smart contract?","255":"How to get private and public keys for the wallet by providing a seed phrase (NEAR Protocol)","256":"<node.js> Websocket to Connect Peers on Different Networks","257":"Is Ganache Decentralized?","258":"Checking value of 2 mapping with struct in the same address on <blockchain>","259":"Is this how how I should implement the VRF random NFT traits using chainlink?","260":"Ethereum.on How to get error if chain is not added into metamask yet","261":"Is there any way to get amount(number of token we are sending in transaction) after calling transaction.from() in solana","262":"I encountered an error while installing Fabric CA with the go get command","263":"How to connect metamask wallet in Mobile Platform of Unity?","264":"Polygon: Solidity build failed for 'pragma solidity ^0.8.7' with chainlink","265":"Is it possible to check the Connected RPC network in MetaMask using JQuery?","266":"I can't seem to make Visual Studio find my remappings","267":"Corda - State size information","268":"Problem in verifying the signature in smart contract which was signed by eth.personal.sign() in <web3>","269":"how can i get all ERC20 addresses in brownie to use in frontend","270":"How to create directories\/files on the local machine using Django?","271":"Is there any way to fix hardhat Unable signature","272":"Solana - How to get the balance from my Phantom wallet?","273":"What unit does \"amountIn\" have in UniswapV2Router02 contracts?","274":"<web3>-Py : Nonce Transaction Overwriting Problem","275":"What does one mean by a 'transaction' in <blockchain>?","276":"How to run Cardano Wallet?","277":"<web3>.eth.getTransaction with ganache-cli gives chainId error","278":"How to push transaction EOS <blockchain> (eosjs - unsatisfied_authorization)?","279":"How to debug Chainlink job task?","280":"Corda - info about transaction size","281":"How to deal with \"Only the owner of the contract can update the smart contract\"","282":"How to speed up token balance on multiple contracts","283":"How to calculate availability on <blockchain>\/IPFS and Hadoop\/HDFS?","284":"Error creating contract after getting contract ABI from Etherscan API","285":"Why is transaction hash bitcoin millions worth txid","286":"Transaction hash Returned error: invalid sender","287":"Retrieve the random number generated by Chainlink VRF in 1 transaction","288":"Total Supply api for Coinmarketcap listing","289":"NEAR FunctionCall `args` field","290":"Best way to download all historic Ethereum ERC721 transfers","291":"Is it possible to mint an NFT in Solana \"unrevealed\" and then reveal it later on?","292":"Error: TypeError: Cannot read property 'toXDRObject' of undefined","293":"How to get btc address balance via electrum json rpc","294":"I am having EPERM Error while trying to load a new Ganache workspace","295":"Best way of setting up <web3> instance in React?","296":"How to get oracle id for chainlink api call?","297":"How to use BSC with WalletConnect and <web3>.js","298":"How the MetaMask plugin works?","299":"How to set DOCKER_SOCK variable to create container for service peer0.org3.example.com","300":"invalid sender while transfering BEP20 token","301":"VM Exception while processing transaction: revert","302":"Solidity importing problem on VSCode (WSL2) and Brownie","303":"Ethereum in Kubernetes: Fatal: Could not open database: resource temporarily unavailable","304":"How to access final balance from <blockchain>","305":"PancakeSwap V2 functions called automatically after adding myToken to a new pool: safebuy(), swapExactETHForTokens(), swapExactTokensForTokens()","306":"Invalid sender on signed transaction - mumbai polygon","307":"Solidity - When deploying the contract I get \"SyntaxError: Unexpected token o in JSON at position 1\"","308":"How do I get list of tokens owned by me?","309":"Unable To Sell NFT Functionality When deployed to Polygon","310":"DeclarationError: Identifier not found or not unique. function retrieve() public view returns(unit256) { ^-----^","311":"Trying to connect Metamask wallet to my react app through <web3>.js","312":"How to execute truffle commands through an API or a code?","313":"Can we predict the data from the Hash value?","314":"Compact-u16 - what is the purpose of this?","315":"Set minter wallet address as creator of NFT in opensea","316":"ParserError in solidity, Expected identifier but got reserved keyword 'immutable'","317":"What does the data field mean in an Elrond transaction?","318":"How is a NFT Token ID assigned to an object (e.g., picture, tweet, video, etc.)","319":"Ethereum. Insufficient funds for gas * price + value","320":"I try to deploy my smart contract in truffle but is says \"unsupported compiler\" when I \"truffle migrate\" how can I fix this?","321":"ubuntu - when try to install solana - get error","322":"how to to check inputs to JSON.parse() is valid or not in ejs","323":"Channel creation failed at test network of <hyperledger> fabric","324":"Could not install erdpy - no module named 'ledgercomm'","325":"How to Fix \"unexpected end of JSON\" error?","326":"Trouble with Chainlink External Adapter making an API call to Spotify","327":"Why is Proof of Work necessary in <blockchain>?","328":"Detecting new PairCreated events on Polygon <blockchain> with <web3> and <python>","329":"Updating the state of many addresses in Solidity is gas costly","330":"Can the Cli service exist on each Org that installed in different machine (<hyperledger> Fabric)?","331":"Unexpected error calling ethereum contract using <web3>.js","332":"Does <blockchain> with proof of stake consensus have special nodes to choose a winner?","333":"ERC-721: How to get all token ids?","334":"How do <blockchain> nodes find each other in a P2P network?","335":"Programmatic Minting Process","336":"How can I get the wallet address for a given herotag?","337":"Remix IDE unable to load 3rd party library","338":"Truffle HDWalletProvider alternative?","339":"Solidity question about UsingLiquidityProtectionService","340":"How to fix the high memory usage of fabric peer running on k8s?","341":"DecoderFailure in cardano-cli","342":"How can get json interface of the smart contract","343":"Please how do I get ABI of my token after deploying on BSCMAINET","344":"Error: Service(Telemetry(IoError(Custom {...... error in substrate","345":"<geth> node stuck on \"Looking for peers\"","346":"Error when deploying a smart contract that implements IUniswapV2Router02","347":"Is it possible to integrate OpenSea SDK into Kotlin Android App?","348":"smart contract for auto burn on every transaction","349":"How many NFTs does a smart contract have?","350":"Value inside submitted task always the same - ExecutorService","351":"Convert Solana public key from UINT8Array","352":"How to get proper public address from mnemonic phrase for Solana?","353":"Corda 4.7 QueryCriteria, LinearStateQueryCriteria","354":"Polygon transaction working just fine on Mumbai but not on Mainnet","355":"error in ganache installation: The term 'ganache-cli' is not recognized as the name of a cmdlet, function, script file, or operable program","356":"How to customize <hyperledger> Fabric test network?","357":"<blockchain> implementation not working while using sha256","358":"<web3>js: How to show pending <transactions> on custom <blockchain>","359":"GraphQL to check if a transaction is present on the <blockchain>","360":"<hyperledger> Fabric on Kubernetes - Restarting Peer throw error for few minutes","361":"Bitcoin <blockchain> rookie question: how is nonce (the secret number added to each block) generated?","362":"<geth> eth_protocolVersion is returning error : \"the method eth_protocolVersion does not exist\/is not available\"","363":"Solidiy FundMe Smart Contract - Remix - Chainlink `call to FundMe.getVersion errored: execution reverted`","364":"Solidity v0.6.0. Fallback functions. What are they needed for?","365":"Moonbeam (polkadot parachain) transaction error","366":"Getting React useEffect to display updated variable after contract call?","367":"how do i subscirbe\/listen to events on the polygon <blockchain> using <python>","368":"Is it possible to reuse a deployment from a Mocha Hardhat test script into another one?","369":"Substrate state cache and performance limitation?","370":"sending signed messages ethers","371":"<hyperledger> Fabric Building First Network","372":"Check <transactions> on hardhat localnet","373":"ERC20: transfer amount exceeds allowance, even when it is approved","374":"Bitcoin Core on external SSD in OS X","375":"React - Converting Class to Function Components For Front-End","376":"I have written a abasic constructor code in Solidity but I am getting this error. Is it the version issue?","377":"What's the correct connection profile for accessing <hyperledger> fabric v2.x deployed on k8s","378":"How are the development keys (Alice) added to the local keystore from `chain_specs.rs`?","379":"How would I issue some ERC20 tokens of newly instantiated ERC20 token","380":"Retrieving total eth transaction value of block faster","381":"Calling specific endpoint on Solana smart contract","382":"Building chain link node for Alarm clock","383":"Failing in convert a mnemonic to a seed for a solana wallet","384":"What are Solidity Events","385":"Error with RequestMultipleParameters and FulfillMultipleParameters Chainlink","386":"Handle WTRX token withdraw and deposit from smartcontract","387":"Right way to run a MultiWord job on a Chainlink Test Node","388":"Note: The called function should be payable if you send value and the value you send should be less than your current balance","389":"is there a way to add token info to the solana devnet like on the mainnet?","390":"Solana transfer amount null","391":"How do I remove the minting authority from my custom token in Solana using @solana\/<web3>.js?","392":"Smart Contracts developed for Ethereum can also be used in Binance Smart Chain?","393":"About IPFS client add() function","394":"Smart Contract runs external API","395":"How Etherum <blockchain> Smart Contract Stored","396":"Error with Contract, message: method is not found","397":"How to get private key based on Keystore UTC file?","398":"<geth> private network is which type of node?","399":"Recovering Dogecoin and Litecoin wallets from mnemonic passphrase","400":"How to get over the limit of OpenSea Api?","401":"Issue with returning uints in solidity","402":"Why HashAlgorithm.ComputeHash returns different values from the same data?","403":"How to upload file to IPFS by keeping same CID","404":"Private data collection vs encryption","405":"How to Pull HIstorical Price Data from Solana Devnet Contracts?","406":"Cannot Connect to local Ethereum node (Mainnet) using Ethers in <node.js> with Uniswap SDK","407":"Candidate Block Bitcoin","408":"What is the best toolchain to build & test &deploy cosmwasm contract to terra netweork?","409":"Connecting a Project ID to polygon","410":"Save struct inside other structin solidity","411":"How can I test opensea api?","412":"Remix IDE - Issue with functions when deploying smart contract","413":"Generate DID in ION SIDETREE testnet","414":"How to withdraw rewards from Substrate private node?","415":"how to get test tokens on rinkeby and ropsten","416":"Is there any possibility to search an asset with partial id","417":"Creation of my_smart_contract pending in Remix","418":"How can i query the access object from JSON in CouchDB","419":"ERC721 - how do I generate nfts from different characteristics (e.g punks, apes...)?","420":"Error: 'unknown account' in Send Transaction using <web3>.js for Binance Smart Chain Ethereum <blockchain>","421":"How to solve Transaction simulation failed: Error processing Instruction during a solana <blockchain> transaction?","422":"increase total supply of TRC20 token daily","423":"Substrate Rust - unresolved imports node_template_runtime","424":"How does every block in a <blockchain> contain all others blocks data if it is immutable?","425":"I want to connect contract without using meta mask","426":"Transaction reverted during swapExactTokensForTokens (UniswapV2Router02, <web3>.js)","427":"Should I use the elrond devnet instead of the testnet for development?","428":"Nethereuem SendTransactionAsync from my C# Web API fails with transaction type not supported: eth_sendRawTransaction","429":"solidity error - Member \"sub\" not found or not visible after argument-dependent lookup in uint256","430":"I can not deploy the program to dev net with anchor","431":"Truffle migrate is not deploying to Ganache","432":"Blocks are not producing when using --staging flag (in the full node)","433":"Transaction Receipt using <blockchain>","434":"maximum size of data we can \u00e2\u0080\u0098GET\u00e2\u0080\u0099 by using adapters","435":"Endless loop stops checking IF functions after first one is correct - <python>, <blockchain> <transactions>","436":"How to get all transaction data from the entire Ethereum network using <web3>py","437":"Opensea JS SDK createSellOrder method doesn't seem to work or silent failure","438":"Can't connect to <geth> node RPC from another machine","439":"Metamask Error: Internal JSON-RPC error. while confirming on metamask mobile","440":"How do you get the current block number in Substrate?","441":"How can i fork Binance Smart Chain and create my own <blockchain>","442":"Chainlink oracles on testnet","443":"Self - Referencing in MYSQL causing: ERROR 1822 (HY000): Failed to add the foreign key constraint","444":"Make a withdraw from Aave causes \"error transaction reverted\"","445":"Why does contract launch on ropsten but not BSC testnet with remix?","446":"Returned values aren't valid, did it run Out of Gas? <web3> 1.5.0 and sol-0.5.15","447":"<blockchain>s with modifiable consensus algorithm","448":"How do you return multiple instances of a struct in Solidity? [duplicate]","449":"Running mutiple VMs in <hyperledger> Fabric using Java SDK","450":"How do I uninstall the chaincode installed on <hyperledger>","451":"Is there a way to check sells and buys in transfer function on Solidity?","452":"How can a Solana Rust smart contract get block height or Unix time?","453":"<python>, json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1). How to troubleshoot?","454":"Using Ganache provided address but still unable to vote","455":"eth-brownie - No module named <Users.someuser>","456":"Will Require revert storage changes made in a separate contract in the same transaction - Solidity","457":"how to use --staging flag in substrate framework?","458":"Can I perform transaction from different server - <blockchain>","459":"Which is more effective way to subscribe state change in Ethereum","460":"Can't send transaction using <web3>","461":"IBM <blockchain> platform VS code extension - unable to create new new Fabric environment\/wallets","462":"Interact with Smart Contract Function on Metamask Mobile without Internal JSON-RPC error and 0xa9 not defined","463":"How to get all the NFTs of particular smart contract","464":"What is the Solana pattern for creating a transfer account the program can use to execute a contract payment?","465":"How to extend connection timeout in node-template, when joining a private network?","466":"If the ledger of peer is tampered in <hyperledger> fabric network, how can be the previous state of ledger restored?","467":"How to get value of <transactions> in <blockchain> from transaction hash?","468":"Solidity <blockchain> invalid amount check","469":"How bitcoin payment in the dark web works?","470":"<web3> Uniswap\/Pancake Retrive last swap transacion contract BUY\/SELL","471":"Comparative Differences between the threat model of substraTEE and Intel SGX","472":"Can I change the lockup period of a deployed smart contract?","473":"bsc get <transactions> by wallet address <web3>.py","474":"how to connect to cosmos hub","475":"Pancakeswap liqidty not working with forked token","476":"Writing Poseidon \/ Pedersen Hash based Time Locks on NEAR Protocol","477":"<hyperledger> fabric gateway is not able to get network","478":"Get details of pending <transactions> using <web3>.py","479":"Solidity: What does the caret ^ operator do?","480":"Problem with deploying program to solana on localhost","481":"how to take a our ERC20 token as fee to our products?","482":"<hyperledger> Fabric- Contracts are required to have at least 1 (non-ignored) public method","483":"Solidity smart contract: Data location must be \"memory\" or \"calldata\" for return parameter in function, but none was given","484":"Minting tokens on time base in ERC-20","485":"0x protocol: how to locally sign orders with <python>","486":"how to withdraw all tokens from the my contract in solidity","487":"How is data entry in private and consortium <blockchain>s trusted?","488":"How to get rid of 'Flow sessions were not provided' exception in corda when run using network bootstrapper?","489":"Substrate node-template private network WITHOUT using default keys","490":"Filecoin Textileio Powergate Not Enough Miners from Reputation Module to Satisfy The Constraints Error","491":"Can a liquidity pool have more than 2 tokens","492":"ERC20 transaction list with API","493":"Smart contract with text storage ethereum","494":"What should I do about DApp?","495":"ERC 1155 Token Standard","496":"Trying to susbcribe to PairCreated events from UniswapV2 Factory in Nodejs","497":"Error: Returned error: VM Exception while processing transaction: revert Not Enough Balance -- Reason given: Not Enough Balance","498":"<web3> ExtraDataLength Error on the Binance Smart Chain using <python>","499":"How to install <web3> on <python> 3.9.6\/3.7.6?","500":"ConsenSys. qubernetes tessera connect to different URL","501":"How to send a transaction in private tangle Hornet of IOTA?","502":"How exchanges (Binance, Coinbase) record user trade into <blockchain>","503":"Got this runtime error while implementing assets pallet in substrate(1002: Verification Error: Runtime error: Execution failed:","504":"What is error Error: Returned error: execution reverted when calling <blockchain> data and how to fix it?","505":"<blockchain> tutorials for double spending and signature verification","506":"sync <transactions> in each node <blockchain> <python>","507":"<hyperledger>, create a channel using the configtxgen CLI tool","508":"Solidity Remix transaction reverted to initial state","509":"It says ParserError: Expected ';' but got 'StringLiteral' --> Token.sol:495:16: | 495 | address\"msgSender\" = _msgSender(); when I compile it","510":"How to get median data from 2 Urls","511":"Staking contract based on time: need to avoid loop","512":"How to launch a substrate <blockchain> as a test network?","513":"How to get all historical Uniswap\/Pancakeswap trades for a given token","514":"Smart Contract update Function","515":"CHAINLINK NODE - Your node is overloaded and may start missing jobs ERROR","516":"Is <hyperledger> Besu compatible with Cosmos IBC?","517":"Is there any method or a way to check accesskey permission on the Near account id?","518":"how to import an exported function","519":"how to connect metamask with ethers.js and fetch balance?","520":"can anyone explain me this assert condition?","521":"<python>: SyntaxError: EOL while scanning string literal","522":"Disconnect wallet from site using <web3>","523":"How to interact with <blockchain> without need of refreshing page in react","524":"I am getting error when trying out Substrate's \"Create a Pallet\" Tutorial","525":"Determine BSC Sell\/BUY <transactions>","526":"ReferenceError: Cannot access 'TokenFarm' before initialization while migrating solidity file","527":"Solidity - \"CompilerError: Stack Too Deep\"","528":"What is balanceRecived in solidity? what it will be strore?","529":"<hyperledger> fabric test-network error: x509: certificate signed by unknown authority","530":"Why do clients broadcast an endorsed transation instead of the peers doing it themselves?","531":"Why this piece of NodeJs code has given a BSOD on Win7?","532":"Making a solidity transfer automatically without metamask","533":"How to automatically accept request without asking confirmation in metamask wallet","534":"Problems with Dapp Development with Flutter and <web3>","535":"Peers are not able to connect with orderer in <hyperledger> fabric","536":"What is column 'type' means at Ethereum method eth_getTransactionByHash?","537":"How to get the account data of all accounts in Polkadot using py-substrate-interface","538":"Send two-dimensional array from Nodejs server socket to Ethereum smart contract (Solidity)","539":"TheGraph: one graph-node for several <blockchain>s?","540":"How to upload and keep updating the file in <python>","541":"Starport & CosmWasm Smart contracts","542":"Merkle tree 2nd preimage attack defense - prepending a specific byte value","543":"How can I deploy smart contract with front-end . Like REMIX IDE is doing","544":"How to transfer ether from sender account to a given account with specific value parameter -- Smart Contract","545":"Module parse failed: Unexpected token in React Project. You may need an appropriate loader to handle this file type","546":"How to get multiple account balances in trc20 network","547":"<blockchain> and smart contract beginner","548":"SubQuery vs TheGraph for <blockchain> data","549":"I notice when I try and use Borsh to serialize\/deserialize I'll get errors","550":"Add simple line \"Pubkey::new_unique()\" breaks my Solana Program","551":"Creating a cold multi-coin wallet that can make <transactions>","552":"Chain Link VRF takes a long time to get random numbers","553":"Chain Link VRF not working Wrong argument count for function call: 3 arguments given but expected 2. return requestRandomness(keyHash, fee, seed)","554":"Dispute resolution in smart contracts - ex. Kleros & Aragon","555":"How to add 2 nodes in chainlink smart contract","556":"Basic implementation of EIP-2981","557":"How to run a uniswap-interface using yarn","558":"How to set up a wallet address without using truffle-hdwallet-provider","559":"Whats the first step in creating a <blockchain> based certification system?","560":"Cosmos SDK account sequence mismatch","561":"Unhandled Rejection Opensea error while making Buying Items","562":"How can I change types of Contract Constraints to Signature constraint in corda production env","563":"Chainlink.Request doesn't have `add` function","564":"Amazon Managed <blockchain> not showing Ethereum network","565":"Difference between \"submitted\" and \"finished\" <transactions> in Substrate <blockchain> framework?","566":"Filtering nested properties in subgraph (the graph)","567":"Getting last buy timestamp for msg.sender in Solidity","568":"Pragma solidity error while trying to compile contract with truffle","569":"How can I get 2nd balance from MetaMask?","570":"Double equal in statement of dot notation","571":"Main organization data access in <hyperledger> fabric","572":"Tron Network Contract Read-Only Method Fees","573":"Solana stake pool installation issue","574":"Solidity: Error: Please pass numbers as strings or BN objects to avoid precision errors","575":"How do I fork the Uniswap V2 interface?","576":"how to query all staking rewards on polkadot.js given an access to archive node","577":"How do get rid of java.lang.IllegalArgumentException: Unable to match key(s) in corda?","578":"How can I use Redis to fetch data from large dataset?","579":"Chainlink - Job not being fulfilled","580":"How can I swap BNB into another crypto currency using <web3>?","581":"How do I determine the network i am connected to in Ganache","582":"How to retrieve the account info of an account that sits on a different node?","583":"<python> Web Scraping Display additional data fields on screen","584":"Can Smart Contract access Data of other <blockchain>s?","585":"Cant compile solidity files using correct Solc version","586":"Lisk <blockchain>: what is the maximum block size that makes sense?","587":"what is the ADA (Cardano crypto-currency) SDK?","588":"What is the difference between the two parameters \"latest\" and \"earliest\" in <web3>.eth.getBlock()","589":"Can't call methods in contract via <web3>.js","590":"Interacting with contracts that are not instantiated in the <blockchain>","591":"Transaction reverted when calling swapExactTokensForTokens function, <web3>py, <python>","592":"Obtain Private Key Corresponding to Address in HD Wallet with BlockCypher API?","593":"How to parse bitcoin <blockchain> blkxxxxx.dat files, especially transaction parts","594":"Create a <blockchain> member in Azure Portal 'Create' button not enabled after the Validation passed","595":"Start doing Parastate node","596":"Merge two separate react app into a single app","597":"Solidity ParserError: Expected ';' but got 'is'","598":"<blockchain> (Avalanche) faucet implementation in the local test network","599":"How to create a fixed token and store the state information on the ledger in corda?","600":"Solidity with React","601":"Facing issues with IBM <blockchain> platform at vs code in my-asset-contract.ts","602":"How Sniper Bot Watcher feature on poocoin.app works?","603":"Unable to create channel in Fabric Network","604":"Parastate test tokens","605":"What is parastate test network chain ID?","606":"How many channels can be opened with a lightning node simultaneously","607":"hd wallet bip44 in js - how to create an address for a chain other than bitcoin?","608":"Error on estimating gas for swapExactTokensForTokens","609":"Contract constructor parameter which is also a contract","610":"How to fetch Metamask account using <python>-Flask?","611":"Binance Smart Chain TestNet contract deployment JSON RPC error execution Reverted","612":"NEAR cli contract call works but fails when called from js sdk with same params","613":"How does Uniswap forntend caculate the path(route) for a specific pair?","614":"Peg erc-20 token's price to a cryptocoin","615":"Error: Invalid number of parameters for \"undefined\". Got 0 expected 1","616":"Transaction Validity in bitcoin <blockchain>","617":"From where crypto on-chain data are coming from?","618":"Has anyone used Hedera Hashgraph? Is it really as fast as 100 ~ 10000\/s for <transactions>?","619":"BSC Token Explorer","620":"Truffle doesn't recognize contract change and wont deploy it","621":"while building SAAS solutions based on Corda, who owns the certificates issued to each participant?","622":"How to Add a Function to an Already Deployed Smart Contract","623":"contract's address <transactions> list - Etherscan API","624":"Is there any way to get pending transaction for specified address using <web3>Py?","625":"How to modify process function in simple wallet project?","626":"How to receive ETH in a smart contract","627":"Call Revert Exception","628":"Get digital signature from the UI and use it in the transaction for verification.(<blockchain>- Corda R3)","629":"How to get ABI of Smart Contract with Nethereum?","630":"Why does the minting function of ERC721 have an access control?","631":"how to create crowdsale with openzipplin 4.x without crowdsale contracts","632":"Deploy a pruned Tron (TRC20) node","633":"If smart contracts are stored on blocks in the <blockchain>, how is its state updated?","634":"Pay fee for Tron contract method call with another account","635":"How can I convert\/transform a JSON tree structure to a merkle tree","636":"Creating an account on Wax test net returns wallet wallet is not unlocked","637":"Verifying a crypto (BSC) address belongs to someone","638":"How do I listen for trx events on tron network? (Tronweb) nodejs","639":"How to manually burn tokens on BSC network","640":"How to integrate pancakeswap sdk to nestjs project?","641":"Read data stored in the blocks in Ganache","642":"How can smart contracts \/ DAOs survive the chaos of the real world if they can't be easily updated?","643":"How do I use SQL to return an average value for a day in a date range?","644":"How to run the graph-node in the rinkeby test rpc","645":"cleos on wax get info eror [Failed with error: Parse Error (4) Unexpected char '101' in \"error\"]","646":"What is the difference between indy-node and indy-sdk?","647":"Understanding <blockchain> smart contract","648":"Solidity: solidity declarationerror identifier not found or not unique","649":"How to store in an orders contract an array of products contract","650":"How to get contract's all holders on BSC","651":"Token information does not show when compiled","652":"Problems when buying tokens from a contract using BNB","653":"Unable to restore the backup of fabric-samples test-network - <hyperledger> fabric v2.2.0","654":"Some Truffle test not executed","655":"Different World States DB as a mechanism for data security","656":"Cannot connect to my PostgreSQL server remotely from chainlink node terminal","657":"EthereumJS library not providing me with correct address (missing 0x)","658":"Implementing buying and selling in Solidity","659":"<hyperledger> Fabric - Role of member vs peer","660":"BSC Testnet: Truffle Migrate ETIMEDOUT","661":"Ethereum\/BSC <blockchain> transaction data","662":"ehtereum smart contract approve spender from another contract","663":"Different cross chaincode behavior for two different chaincode methods","664":"SHA256 of block header _hexadecimal vs string","665":"Truffle configuration","666":"How do you safely identify a user contacting our API via an intermediary platform?","667":"Decentralized identifiers (DIDs)","668":"<geth> private network return error \"invalid opcode: SELFBALANCE\" when executing a simple contract","669":"How it is possible to connect with uniswap smart contract with uniswap sdk pakage without giving private key","670":"How to properly use the call (or delegatecall) in solidity","671":"Called function suddenly needs to be payable","672":"Burn NEP-141 tokens","673":"<hyperledger> Fabric installation in Windows10 pro","674":"How to make connection between Fabric Node SDK and Fabric network, when deployed on different hosts?","675":"How to run <hyperledger> fabric","676":"Solidity Enum Inside of struct not updating in 2\/3 functions... working in 1\/3","677":"Cross-contract calls in Aeternity","678":"How to transfer a NFT from one account to another using ERC721?","679":"Why is there a difference in <blockchain> fee between Bitcoin-Qt and <blockchain> API?","680":"Instantiation of chaincode onto different channels on <hyperledger> Fabric","681":"Is there a place to find the list of all the public smart contracts on VeChain?","682":"Get proper sell price from Uniswap V2","683":"ERC20 - How to split the initial token supply on multiple accounts?","684":"Does chainlink have a reliable way to verify the size\/format of a file behind a hash stored on IPFS?","685":"<hyperledger> Fabric with Raft Protocol: How are <transactions> packaged into Blocks?","686":"Writing a simulation code adding blocks in chain","687":"Can I get Binance API data in solidity?","688":"How can i establish federated communication between two separate <hyperledger> fabric System","689":"Is it possible to create unpredictable random number with Solidity?","690":"\"VM Exception while processing transaction: revert\", when running a chainlink node and try to deploy TestnetConsumer contract?","691":"Solidity K error when I try to burn tokens in liquidity","692":"Allowance and transfer tokens from contract B using contract A to user address X","693":"How to change account in truffle(ganache)?","694":"<blockchain>.com Market OHLC data API call","695":"Install startport mv: cannot move '.\/starport' to '\/usr\/local\/bin\/starport': Permission denied","696":"Pandas conditional row values based on an other column","697":"I'm getting an error using aeproject test command with initialized project","698":"How to derive Cardano addresses from public keys?","699":"Facing error when running enrollAdmin.js for IBM Block chain <hyperledger> Fabric","700":"Quorum Marker support Quorum IBFT consensus?","701":"how do i know my ethereum nodes sync low speed or out of sync [closed]","702":"How to transfer specific amount of tokens to each holder in Solidity when transaction happens?","703":"How To Scrape Content From a Website That Requests a Metamask Connection","704":"Cannot find module 'fs-extra' npm","705":"how can the voter verify that the candidate\u00e2\u0080\u0099s choice has not changed?","706":"Error: Internal JSON-RPC error. { \"message\": \"VM Exception while processing transaction: revert\" soldity 0.8.0","707":"How do <transactions> take place in a <blockchain>?","708":"Truffle is installed but macOS cant find commands for any <blockchain> packages","709":"Who can execute public functions of smart contract in solidity?","710":"how to switch accounts automatically in meatamask","711":"How to use invokeChaincode() API","712":"Why can't I send an extrinsic from py-substrate-interface?","713":"Truffle test - doesn't send funds to msg.sender","714":"How to download <blockchain> transaction data?","715":"fabric invoke chaincode error: Failed to get endorsing peers: no endorsement combination can be satisfied","716":"Signing Documents with <blockchain> and IPFS","717":"Does <hyperledger> Fabric evaluate transaction return a signed query result?","718":"Truffle verify - Cannot find module '@chainlink\/contracts\/src\/v0.6\/VRFConsumerBase.sol'","719":"What exacly is BITCOIN_SEED_NONCE in Bitcoin Source code?","720":"Why does pyrlp.Serializable class not allow attributes to be edited after initialisation? How can this be done?","721":"How a <blockchain> node knows when a new node is added?","722":"Choice of token (fungible or non-fungible) pertaining to modifiability of information stored","723":"How can a crypto be transfered from a wallet to another, through an other <blockchain> than it's own?","724":"How to validate transaction manually in <hyperledger>-fabric","725":"IPFS and Editing Permissions","726":"Why does <blockchain> needs hash difficulty like zeros at the beginning of the hash value?","727":"I can not run Substrate on M1","728":"Corda check session.send\/receive completeness","729":"mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false\/empty top stack element)","730":"ContractLogicError while using <web3>.py","731":"Truffle migrate --reset without loosing data","732":"Accessing a private key in a MetaMask wallet","733":"Can I change smart contract which is already deployed on BSC?","734":"How can I solve this error? \"command not found: puppeth\"","735":"AttributeError: '_hashlib.HASH' object has no attribute 'startswith'","736":"How do you access the raw public data for a <blockchain> and then read the transaction ledger from it?","737":"Can't use fallback. Nothing happen! function() external payable {}","738":"How do you write a system test for your runtime?","739":"How to construct cardano transaction using cardano-rosetta and cardano-addresses","740":"Getting \"contract validate error : Owner no asset!\" when create a NFT","741":"<hyperledger> fabric error while deploying a custom chaincode","742":"Is there any way to initiate a disconnect request to the Metamask wallet?","743":"Developing permissioned <blockchain> systems","744":"Transaction is visible on Ethereum <blockchain> explorer, but token is not displayed in Metamask wallet","745":"Ethereum. Is there a way to know the storage space needed by my smart contract?","746":"Unable to connect with <bitcore> testnet getting following error 525 Origin SSL Handshake Error","747":"What exactly network implementation has been used in <blockchain>s? [closed]","748":"Elliptic curve key verification failed","749":"Endorser and orderer connections initialized Error: got unexpected status: BAD_REQUEST -- error validating","750":"Fetch all addresses holding an ERC20 token at a given timestamp","751":"<hyperledger> fabric client registration","752":"TronWeb UnhandledPromiseRejectionWarning: TypeError: e.forEach is not a function","753":"Tronweb and Trongrid Error: Request failed with status code 502","754":"the node server can't access the object block(object-oriented javascript)","755":"Should i learn <hyperledger> composer even if its depreciated [closed]","756":"failed to run custom build command for `ring v0.16.12` [closed]","757":"How do I get data out of JSON object withouth knowing the names","758":"Is it possible to reserve an address on Solidity smart contract creation for taxes collection?","759":"Flutter binance api signature","760":"what is the difference between a node and a client in the ethereum context?","761":"How to send etherenum to msg.sender in solidity 0.5.0","762":"Issue Deploying Raiden Contracts and Starting Raiden Client on Private <geth> Network","763":"Cannot get the account id if connected to Mumbai RPC testnet","764":"<web3> read contract <python>","765":"Can we track illegal use of our tokenized item using NFT [closed]","766":"Difference between <hyperledger> Fabric & <hyperledger> Besu","767":"How to use a fabric 1.4 wallet with fabric node sdk 2.x","768":"CURL (23) Failure writing output destination","769":"How to create a tron wallet with nodejs?","770":"Cannot run peer because cannot init crypto: error while using peer command","771":"compiler problem with solidity and truffle","772":"Aca-py 0.6.0: INFO Ledger instance not provided error\/bug?","773":"Quorum allowing ethereum addresses","774":"Getting error when compiling and deploying ethereum smart contract with <node.js>","775":"Get info from binance <blockchain>","776":"Why can't I change contract state in Solidity?","777":"How to execute \"peer node pause\" command in <hyperledger> Fabric?","778":"How can I renew an admin certificate for a <hyperledger> Fabric orderer \/ peer while the admin certificate nearly expire","779":"keccak256 doesn't return buffer","780":"How to fix declarations in Android Studio <blockchain> app","781":"Laptop specifications for implementation of <blockchain>","782":"IBM <blockchain> platform Visual Studio Code : Error while Packaging Smart Contract","783":"ParserError in Solidity 0.8.0","784":"Time out error during Deployment in Binance Smart Chain","785":"How to sign miners rewards on a <blockchain>?","786":"Input of a <blockchain> voting java program has a loop problem","787":"how can I connect solidity smart contract to an android application?","788":"truffle unbox metacoin failed dowloading","789":"Error Testing smart contract with truffle for Solidity Ethereum","790":"How to send a transaction to an onchain program in solana with javascript?","791":"Where can I find REMOTE EOS API","792":"Can date be generated while creating a daml contract","793":"How do I generate serial wif key, the program generate only one key in <python>","794":"How to implement <hyperledger> Fabric using Nodejs","795":"How to set system properties in substrate <blockchain> for private network?","796":"Latency of a fabric <blockchain>","797":"Is <blockchain> data stored forever? [closed]","798":"Handling multiple ERC721 Tokens in the same Contract","799":"How send Ethereum transaction with <python> without ganache?","800":"Send Ether From Specific Address On Constructor","801":"<hyperledger> <blockchain> Explorer-Fail to connect before the deadline on Endorser, fail to connect to remote gRPC server","802":"Which <blockchain> platform supports user defined consensus protocol for particular use case?","803":"how to query all current polkadot accounts with polkadot js?","804":"<hyperledger> Fabric 2.3 Error: Failed to connect before the deadline on Endorser- name:","805":"Where do I change the block time parameters when compiling a NXT <blockchain> fork code?","806":"Can my backend call a smart contract function to be executed on a certain date?","807":"Compute compressed bitcoin address from private key","808":"How to apply custom business logic to the Endorsement policies on <hyperledger>?","809":"How to find all the polkadot accounts with index or identity attached","810":"Cloud services deployment using smart contracts","811":"<blockchain> Websocket API with <python> gets Bad Request 400","812":"can we retrieve document revision by transaction hash in qldb","813":"Is it possible to get wallet balance passing the wallet address on any cryptocurrency?","814":"Alternative to metamask. Who manages the private key and the ethers?","815":"\"Weightned\" reputation nodes","816":"How to recover an Algorand Wallet with <python> AlgoSDK?","817":"Is there a way to use multisig without smart contracts on Ethereum?","818":"Could not convert parameter `tx` between node and runtime: Error decoding field CheckMortality.0","819":"Deploy <hyperledger> febric <blockchain> code on kubernetes","820":"SendRawTransaction return hash, but there is no transaction","821":"How to group by month-year from a differently formatted date (SQL)","822":"how to interact with an already deployed smart contract","823":"Convert Ethereum or Bitcoin address to Polkadot or Substrate-based address","824":"403 Client Error: Forbidden for url: https:\/\/ropsten.infura.io\/v3\/PROJECT_ID","825":"Call function of smart contract after deploying smart contract in Solidity","826":"Solidity hard-coding initial values for array of uint256 values fails","827":"How can I find out the number of times an RSK transaction has been confirmed on the RSK <blockchain>?","828":"Discrepancy between <blockchain>s of different peers in <hyperledger> Fabric 1.4","829":"JSON parse in SQL with hash key","830":"Docker deploy in smart contract","831":"Where is the data of a transaction saved?","832":"Storing images on the <blockchain> [closed]","833":"interaction with smart contract oracle","834":"Regular, repeating, interaction between an oracle and a smart contract","835":"Why blocks dont finalized","836":"my smart contract is not responding and error saying <web3> is not defined","837":"IdentityService's delete function returning {\u00e2\u0080\u009ccode\u00e2\u0080\u009d:56,\u00e2\u0080\u009cmessage\u00e2\u0080\u009d:\u00e2\u0080\u009cIdentity removal is disabled\u00e2\u0080\u009d} in <hyperledger> Fabric Node SDK","838":"Is there best practice solution to store draft data out of <blockchain> in dapp?","839":"Tezos Terminology: what is the difference between Private Nodes, Public Nodes and Bakers?","840":"Difference between Ethereum Web APIs and Ethereum API as a service","841":"I'm having problems writing test for my Solidity contract?","842":"differences in terms of api supported by full node vs light node","843":"Installing Pipenv on Windows","844":"<hyperledger> Fabric: Unable to Update Certificate Attributes in Node SDK","845":"[Solidity][Metamask] Metamask no longer injects <web3>","846":"Is it possible to create a circular <blockchain>?","847":"Too many open files error while reindexing btc <blockchain> by electrs","848":"How to find the REST API parameters to a site that doesn't have the data within the HTML?","849":"Webscraping <blockchain> data seemingly embedded in Javascript through <python>, is this even the right approach?","850":"Issue to synchronize with <blockchain> network","851":"How sending <transactions> and receiving events work in backends in Ethereum <blockchain>","852":"How the state of Ethereum <blockchain> is updated?","853":"Prove that you executed view function in Solidity","854":"What will happen if Bitcoin proof of work is not successful in 10 minutes?","855":"Generating <blockchain> header is failing with error","856":"Why are my Ethereum smart contract <transactions> not showing up after X amount of <transactions>?","857":"How are <blockchain> HD address queried","858":"How do we know the amount of money in each account in <blockchain>?","859":"Why do we not use Istanbul Byzantine Fault Tolerance (IBFT) in Public <blockchain>s?","860":"How can there be multiple wallets from the same Ethereum private key?","861":"Error in Deployment in Binance Testnet : Could not create addresses from your mnemonic or private key(s)","862":"Facing error on deploying contract in Binance Smart Chain","863":"How to secure a <blockchain> based on PoW against 51% attack?","864":"Solidity random number security using keccak256 when contract caller is known","865":"Integration to Chainlink from other <blockchain>s","866":"Artificial Intelligence In Ethereum Smart Contracts","867":"How to set different credentials of ethereum accounts for doing <transactions> in smart contract? For a <blockchain> based voting system","868":"Adding Tokens to existing <python> <blockchain>","869":"mkdir \/path: read-only file system problems when running <geth>","870":"Can we restrict an account in Corda to accept only one specific state?","871":"How view change protocol works when we have exactly f faulty replicas in PBFT?","872":"Solidity: Is it possible to combine event emit and require?","873":"Best way to create multiple LinkedLists of Hashmaps with multiple keys and values?","874":"Does CEXIO support withdraw and deposit via API?","875":"How to change code\/repository from fabric v1 to v2?","876":"How to send erc20 token from my metamask wallet to other address without private key?","877":"Making Private <transactions> on the ethereum network","878":"Artemis Auto configuration problem when using corda-rpc with Spring boot","879":"Limits of a decentralised app due to racketeering by miners?","880":"Format Chainlink AggregatorV3Interface 'answer' to USD?","881":"System has not been booted with systemd as init system (PID 1). Can't operate. Couldn't find an alternative telinit implementation to spawn","882":"Error while initializing actor system wavesplatform com.protonail.leveldb.jna.LevelDBException","883":"how to create standard ERC721 token","884":"Tron Web - Validate TransferContract error, no OwnerAccount (Tron Link)","885":"How does <hyperledger> fabric smart contract communicate with CouchDB?","886":"browser\/Test.sol:5:21: TypeError: Definition of base has to precede definition of derived contract contract test is owned ^---^","887":"<python> <blockchain> api to check balance with api key","888":"What is the incentive for <blockchain> nodes to always select the longest chain?","889":"Get Keys of Solidity mapping","890":"<hyperledger> Fabric error when I try to do .\/network.sh up in test-network directory"},"Question Posted time":{"0":"1 year, 1 month ago","1":"1 year, 1 month ago","2":"1 year, 1 month ago","3":"1 year, 1 month ago","4":"1 year, 1 month ago","5":"1 year, 1 month ago","6":"1 year, 1 month ago","7":"1 year, 1 month ago","8":"1 year, 1 month ago","9":"1 year, 1 month ago","10":"1 year, 1 month ago","11":"1 year, 1 month ago","12":"1 year, 1 month ago","13":"1 year, 1 month ago","14":"1 year, 1 month ago","15":"1 year, 1 month ago","16":"1 year, 1 month ago","17":"1 year, 1 month ago","18":"1 year, 1 month ago","19":"1 year, 1 month ago","20":"1 year, 1 month ago","21":"1 year, 1 month ago","22":"1 year, 1 month ago","23":"1 year, 1 month ago","24":"1 year, 1 month ago","25":"1 year, 1 month ago","26":"1 year, 1 month ago","27":"1 year, 1 month ago","28":"1 year, 1 month ago","29":"1 year, 1 month ago","30":"1 year, 1 month ago","31":"1 year, 1 month ago","32":"1 year, 1 month ago","33":"1 year, 1 month ago","34":"1 year, 1 month ago","35":"1 year, 1 month ago","36":"1 year, 1 month ago","37":"1 year, 1 month ago","38":"1 year, 1 month ago","39":"1 year, 1 month ago","40":"1 year, 1 month ago","41":"1 year, 1 month ago","42":"1 year, 1 month ago","43":"1 year, 1 month ago","44":"1 year, 1 month ago","45":"1 year, 1 month ago","46":"1 year, 1 month ago","47":"1 year, 1 month ago","48":"1 year, 1 month ago","49":"1 year, 1 month ago","50":"1 year, 1 month ago","51":"1 year, 6 months ago","52":"1 year, 1 month ago","53":"1 year, 2 months ago","54":"1 year, 2 months ago","55":"1 year, 2 months ago","56":"1 year, 2 months ago","57":"1 year, 2 months ago","58":"1 year, 2 months ago","59":"1 year, 2 months ago","60":"1 year, 2 months ago","61":"1 year, 2 months ago","62":"1 year, 2 months ago","63":"1 year, 2 months ago","64":"1 year, 2 months ago","65":"1 year, 2 months ago","66":"1 year, 2 months ago","67":"1 year, 2 months ago","68":"1 year, 2 months ago","69":"1 year, 2 months ago","70":"1 year, 2 months ago","71":"1 year, 2 months ago","72":"1 year, 2 months ago","73":"1 year, 2 months ago","74":"1 year, 2 months ago","75":"1 year, 2 months ago","76":"1 year, 2 months ago","77":"1 year, 2 months ago","78":"1 year, 2 months ago","79":"1 year, 2 months ago","80":"1 year, 2 months ago","81":"1 year, 2 months ago","82":"1 year, 2 months ago","83":"1 year, 2 months ago","84":"1 year, 2 months ago","85":"1 year, 2 months ago","86":"1 year, 2 months ago","87":"1 year, 2 months ago","88":"1 year, 2 months ago","89":"1 year, 2 months ago","90":"1 year, 2 months ago","91":"1 year, 2 months ago","92":"1 year, 2 months ago","93":"1 year, 2 months ago","94":"1 year, 2 months ago","95":"1 year, 2 months ago","96":"1 year, 2 months ago","97":"1 year, 2 months ago","98":"1 year, 2 months ago","99":"1 year, 2 months ago","100":"1 year, 2 months ago","101":"1 year, 2 months ago","102":"1 year, 2 months ago","103":"1 year, 2 months ago","104":"1 year, 2 months ago","105":"1 year, 2 months ago","106":"1 year, 2 months ago","107":"1 year, 2 months ago","108":"1 year, 2 months ago","109":"1 year, 2 months ago","110":"1 year, 2 months ago","111":"1 year, 2 months ago","112":"1 year, 2 months ago","113":"1 year, 2 months ago","114":"1 year, 2 months ago","115":"1 year, 2 months ago","116":"1 year, 2 months ago","117":"1 year, 2 months ago","118":"1 year, 2 months ago","119":"1 year, 2 months ago","120":"1 year, 2 months ago","121":"1 year, 2 months ago","122":"1 year, 2 months ago","123":"1 year, 2 months ago","124":"1 year, 2 months ago","125":"1 year, 2 months ago","126":"1 year, 2 months ago","127":"1 year, 2 months ago","128":"1 year, 2 months ago","129":"1 year, 2 months ago","130":"1 year, 2 months ago","131":"1 year, 2 months ago","132":"1 year, 2 months ago","133":"1 year, 2 months ago","134":"1 year, 2 months ago","135":"1 year, 2 months ago","136":"1 year, 2 months ago","137":"1 year, 2 months ago","138":"1 year, 2 months ago","139":"1 year, 2 months ago","140":"1 year, 2 months ago","141":"1 year, 2 months ago","142":"1 year, 2 months ago","143":"1 year, 2 months ago","144":"1 year, 2 months ago","145":"1 year, 2 months ago","146":"1 year, 2 months ago","147":"1 year, 2 months ago","148":"1 year, 2 months ago","149":"1 year, 2 months ago","150":"1 year, 2 months ago","151":"1 year, 2 months ago","152":"1 year, 2 months ago","153":"1 year, 2 months ago","154":"1 year, 2 months ago","155":"1 year, 2 months ago","156":"1 year, 2 months ago","157":"1 year, 2 months ago","158":"1 year, 2 months ago","159":"1 year, 2 months ago","160":"1 year, 2 months ago","161":"1 year, 2 months ago","162":"1 year, 2 months ago","163":"1 year, 2 months ago","164":"1 year, 2 months ago","165":"1 year, 2 months ago","166":"1 year, 2 months ago","167":"1 year, 2 months ago","168":"1 year, 2 months ago","169":"1 year, 2 months ago","170":"1 year, 2 months ago","171":"1 year, 2 months ago","172":"1 year, 3 months ago","173":"1 year, 3 months ago","174":"1 year, 3 months ago","175":"1 year, 3 months ago","176":"1 year, 3 months ago","177":"1 year, 3 months ago","178":"1 year, 3 months ago","179":"1 year, 3 months ago","180":"1 year, 3 months ago","181":"1 year, 3 months ago","182":"1 year, 3 months ago","183":"1 year, 3 months ago","184":"1 year, 3 months ago","185":"1 year, 3 months ago","186":"1 year, 3 months ago","187":"1 year, 3 months ago","188":"1 year, 3 months ago","189":"1 year, 3 months ago","190":"1 year, 3 months ago","191":"1 year, 3 months ago","192":"1 year, 3 months ago","193":"1 year, 3 months ago","194":"1 year, 3 months ago","195":"1 year, 3 months ago","196":"1 year, 3 months ago","197":"1 year, 3 months ago","198":"1 year, 3 months ago","199":"1 year, 3 months ago","200":"1 year, 3 months ago","201":"1 year, 3 months ago","202":"1 year, 3 months ago","203":"1 year, 3 months ago","204":"1 year, 3 months ago","205":"1 year, 3 months ago","206":"1 year, 3 months ago","207":"1 year, 3 months ago","208":"1 year, 3 months ago","209":"1 year, 3 months ago","210":"1 year, 3 months ago","211":"1 year, 3 months ago","212":"1 year, 3 months ago","213":"1 year, 3 months ago","214":"1 year, 3 months ago","215":"1 year, 3 months ago","216":"1 year, 3 months ago","217":"1 year, 3 months ago","218":"1 year, 3 months ago","219":"1 year, 3 months ago","220":"1 year, 3 months ago","221":"1 year, 3 months ago","222":"1 year, 3 months ago","223":"1 year, 3 months ago","224":"1 year, 3 months ago","225":"1 year, 3 months ago","226":"1 year, 3 months ago","227":"1 year, 3 months ago","228":"1 year, 3 months ago","229":"1 year, 3 months ago","230":"1 year, 3 months ago","231":"1 year, 3 months ago","232":"1 year, 3 months ago","233":"1 year, 3 months ago","234":"1 year, 3 months ago","235":"1 year, 3 months ago","236":"1 year, 3 months ago","237":"1 year, 3 months ago","238":"1 year, 3 months ago","239":"1 year, 3 months ago","240":"1 year, 3 months ago","241":"1 year, 3 months ago","242":"1 year, 3 months ago","243":"1 year, 3 months ago","244":"1 year, 3 months ago","245":"1 year, 3 months ago","246":"1 year, 3 months ago","247":"1 year, 3 months ago","248":"1 year, 3 months ago","249":"1 year, 3 months ago","250":"1 year, 3 months ago","251":"1 year, 3 months ago","252":"1 year, 3 months ago","253":"1 year, 3 months ago","254":"1 year, 3 months ago","255":"1 year, 3 months ago","256":"1 year, 3 months ago","257":"1 year, 3 months ago","258":"1 year, 3 months ago","259":"1 year, 3 months ago","260":"1 year, 3 months ago","261":"1 year, 3 months ago","262":"1 year, 3 months ago","263":"1 year, 3 months ago","264":"1 year, 3 months ago","265":"1 year, 4 months ago","266":"1 year, 4 months ago","267":"1 year, 4 months ago","268":"1 year, 4 months ago","269":"1 year, 4 months ago","270":"1 year, 4 months ago","271":"1 year, 4 months ago","272":"1 year, 4 months ago","273":"1 year, 4 months ago","274":"1 year, 4 months ago","275":"1 year, 4 months ago","276":"1 year, 4 months ago","277":"1 year, 4 months ago","278":"1 year, 4 months ago","279":"1 year, 4 months ago","280":"1 year, 4 months ago","281":"1 year, 4 months ago","282":"1 year, 4 months ago","283":"1 year, 4 months ago","284":"1 year, 4 months ago","285":"1 year, 4 months ago","286":"1 year, 4 months ago","287":"1 year, 4 months ago","288":"1 year, 4 months ago","289":"1 year, 4 months ago","290":"1 year, 4 months ago","291":"1 year, 4 months ago","292":"1 year, 4 months ago","293":"1 year, 4 months ago","294":"1 year, 4 months ago","295":"1 year, 4 months ago","296":"1 year, 4 months ago","297":"1 year, 4 months ago","298":"1 year, 4 months ago","299":"1 year, 4 months ago","300":"1 year, 4 months ago","301":"1 year, 4 months ago","302":"1 year, 4 months ago","303":"1 year, 4 months ago","304":"1 year, 4 months ago","305":"1 year, 4 months ago","306":"1 year, 4 months ago","307":"1 year, 4 months ago","308":"1 year, 4 months ago","309":"1 year, 4 months ago","310":"1 year, 4 months ago","311":"1 year, 4 months ago","312":"1 year, 4 months ago","313":"1 year, 4 months ago","314":"1 year, 4 months ago","315":"1 year, 4 months ago","316":"1 year, 4 months ago","317":"1 year, 4 months ago","318":"1 year, 4 months ago","319":"1 year, 4 months ago","320":"1 year, 4 months ago","321":"1 year, 4 months ago","322":"1 year, 4 months ago","323":"1 year, 4 months ago","324":"1 year, 4 months ago","325":"1 year, 4 months ago","326":"1 year, 4 months ago","327":"1 year, 4 months ago","328":"1 year, 4 months ago","329":"1 year, 4 months ago","330":"1 year, 4 months ago","331":"1 year, 4 months ago","332":"1 year, 4 months ago","333":"1 year, 4 months ago","334":"1 year, 4 months ago","335":"1 year, 4 months ago","336":"1 year, 4 months ago","337":"1 year, 4 months ago","338":"1 year, 4 months ago","339":"1 year, 4 months ago","340":"1 year, 4 months ago","341":"1 year, 4 months ago","342":"1 year, 4 months ago","343":"1 year, 4 months ago","344":"1 year, 4 months ago","345":"1 year, 4 months ago","346":"1 year, 4 months ago","347":"1 year, 4 months ago","348":"1 year, 4 months ago","349":"1 year, 4 months ago","350":"1 year, 4 months ago","351":"1 year, 4 months ago","352":"1 year, 4 months ago","353":"1 year, 4 months ago","354":"1 year, 4 months ago","355":"1 year, 4 months ago","356":"1 year, 4 months ago","357":"1 year, 4 months ago","358":"1 year, 4 months ago","359":"1 year, 4 months ago","360":"1 year, 4 months ago","361":"1 year, 4 months ago","362":"1 year, 4 months ago","363":"1 year, 4 months ago","364":"1 year, 4 months ago","365":"1 year, 4 months ago","366":"1 year, 4 months ago","367":"1 year, 4 months ago","368":"1 year, 4 months ago","369":"1 year, 4 months ago","370":"1 year, 4 months ago","371":"1 year, 5 months ago","372":"1 year, 5 months ago","373":"1 year, 5 months ago","374":"1 year, 5 months ago","375":"1 year, 5 months ago","376":"1 year, 5 months ago","377":"1 year, 5 months ago","378":"1 year, 5 months ago","379":"1 year, 5 months ago","380":"1 year, 5 months ago","381":"1 year, 5 months ago","382":"1 year, 5 months ago","383":"1 year, 5 months ago","384":"1 year, 5 months ago","385":"1 year, 5 months ago","386":"1 year, 5 months ago","387":"1 year, 5 months ago","388":"1 year, 5 months ago","389":"1 year, 5 months ago","390":"1 year, 5 months ago","391":"1 year, 5 months ago","392":"1 year, 5 months ago","393":"1 year, 5 months ago","394":"1 year, 5 months ago","395":"1 year, 5 months ago","396":"1 year, 5 months ago","397":"1 year, 5 months ago","398":"1 year, 5 months ago","399":"1 year, 5 months ago","400":"1 year, 5 months ago","401":"1 year, 5 months ago","402":"1 year, 5 months ago","403":"1 year, 5 months ago","404":"1 year, 5 months ago","405":"1 year, 5 months ago","406":"1 year, 5 months ago","407":"1 year, 5 months ago","408":"1 year, 5 months ago","409":"1 year, 5 months ago","410":"1 year, 5 months ago","411":"1 year, 5 months ago","412":"1 year, 5 months ago","413":"1 year, 5 months ago","414":"1 year, 5 months ago","415":"1 year, 5 months ago","416":"1 year, 5 months ago","417":"1 year, 5 months ago","418":"1 year, 5 months ago","419":"1 year, 5 months ago","420":"1 year, 5 months ago","421":"1 year, 5 months ago","422":"1 year, 5 months ago","423":"1 year, 5 months ago","424":"1 year, 5 months ago","425":"1 year, 5 months ago","426":"1 year, 5 months ago","427":"1 year, 5 months ago","428":"1 year, 5 months ago","429":"1 year, 5 months ago","430":"1 year, 5 months ago","431":"1 year, 5 months ago","432":"1 year, 5 months ago","433":"1 year, 5 months ago","434":"1 year, 5 months ago","435":"1 year, 5 months ago","436":"1 year, 5 months ago","437":"1 year, 5 months ago","438":"1 year, 5 months ago","439":"1 year, 5 months ago","440":"1 year, 5 months ago","441":"1 year, 5 months ago","442":"1 year, 5 months ago","443":"1 year, 6 months ago","444":"1 year, 6 months ago","445":"1 year, 6 months ago","446":"1 year, 6 months ago","447":"1 year, 6 months ago","448":"1 year, 6 months ago","449":"1 year, 6 months ago","450":"1 year, 6 months ago","451":"1 year, 6 months ago","452":"1 year, 6 months ago","453":"1 year, 6 months ago","454":"1 year, 6 months ago","455":"1 year, 6 months ago","456":"1 year, 6 months ago","457":"1 year, 6 months ago","458":"1 year, 6 months ago","459":"1 year, 6 months ago","460":"1 year, 6 months ago","461":"1 year, 6 months ago","462":"1 year, 6 months ago","463":"1 year, 6 months ago","464":"1 year, 6 months ago","465":"1 year, 6 months ago","466":"1 year, 6 months ago","467":"1 year, 6 months ago","468":"1 year, 6 months ago","469":"1 year, 6 months ago","470":"1 year, 6 months ago","471":"1 year, 6 months ago","472":"1 year, 6 months ago","473":"1 year, 6 months ago","474":"1 year, 6 months ago","475":"1 year, 6 months ago","476":"1 year, 6 months ago","477":"1 year, 6 months ago","478":"1 year, 6 months ago","479":"1 year, 6 months ago","480":"1 year, 6 months ago","481":"1 year, 6 months ago","482":"1 year, 6 months ago","483":"1 year, 6 months ago","484":"1 year, 6 months ago","485":"1 year, 6 months ago","486":"1 year, 6 months ago","487":"1 year, 6 months ago","488":"1 year, 6 months ago","489":"1 year, 6 months ago","490":"1 year, 6 months ago","491":"1 year, 6 months ago","492":"1 year, 6 months ago","493":"1 year, 6 months ago","494":"1 year, 6 months ago","495":"1 year, 6 months ago","496":"1 year, 6 months ago","497":"1 year, 6 months ago","498":"1 year, 6 months ago","499":"1 year, 6 months ago","500":"1 year, 6 months ago","501":"1 year, 6 months ago","502":"1 year, 6 months ago","503":"1 year, 6 months ago","504":"1 year, 6 months ago","505":"1 year, 6 months ago","506":"1 year, 6 months ago","507":"1 year, 6 months ago","508":"1 year, 6 months ago","509":"1 year, 6 months ago","510":"1 year, 6 months ago","511":"1 year, 6 months ago","512":"1 year, 7 months ago","513":"1 year, 7 months ago","514":"1 year, 7 months ago","515":"1 year, 7 months ago","516":"1 year, 7 months ago","517":"1 year, 7 months ago","518":"1 year, 7 months ago","519":"1 year, 7 months ago","520":"1 year, 7 months ago","521":"12 years, 5 months ago","522":"1 year, 7 months ago","523":"1 year, 7 months ago","524":"1 year, 7 months ago","525":"1 year, 7 months ago","526":"1 year, 7 months ago","527":"1 year, 7 months ago","528":"1 year, 7 months ago","529":"1 year, 7 months ago","530":"1 year, 7 months ago","531":"1 year, 7 months ago","532":"1 year, 7 months ago","533":"1 year, 7 months ago","534":"1 year, 7 months ago","535":"1 year, 7 months ago","536":"1 year, 7 months ago","537":"1 year, 7 months ago","538":"1 year, 7 months ago","539":"1 year, 7 months ago","540":"1 year, 7 months ago","541":"1 year, 7 months ago","542":"1 year, 7 months ago","543":"1 year, 7 months ago","544":"1 year, 7 months ago","545":"1 year, 7 months ago","546":"1 year, 7 months ago","547":"1 year, 7 months ago","548":"1 year, 7 months ago","549":"1 year, 7 months ago","550":"1 year, 7 months ago","551":"1 year, 7 months ago","552":"1 year, 7 months ago","553":"1 year, 7 months ago","554":"1 year, 7 months ago","555":"1 year, 7 months ago","556":"1 year, 7 months ago","557":"1 year, 7 months ago","558":"1 year, 7 months ago","559":"1 year, 7 months ago","560":"1 year, 7 months ago","561":"1 year, 7 months ago","562":"1 year, 7 months ago","563":"1 year, 7 months ago","564":"1 year, 7 months ago","565":"1 year, 8 months ago","566":"1 year, 8 months ago","567":"1 year, 8 months ago","568":"1 year, 8 months ago","569":"1 year, 8 months ago","570":"1 year, 8 months ago","571":"1 year, 8 months ago","572":"1 year, 8 months ago","573":"1 year, 8 months ago","574":"1 year, 8 months ago","575":"1 year, 8 months ago","576":"1 year, 8 months ago","577":"1 year, 8 months ago","578":"1 year, 8 months ago","579":"1 year, 8 months ago","580":"1 year, 8 months ago","581":"1 year, 8 months ago","582":"1 year, 8 months ago","583":"1 year, 8 months ago","584":"1 year, 8 months ago","585":"1 year, 8 months ago","586":"1 year, 8 months ago","587":"1 year, 8 months ago","588":"1 year, 8 months ago","589":"1 year, 8 months ago","590":"1 year, 8 months ago","591":"1 year, 8 months ago","592":"1 year, 8 months ago","593":"1 year, 8 months ago","594":"1 year, 8 months ago","595":"1 year, 8 months ago","596":"1 year, 8 months ago","597":"1 year, 8 months ago","598":"1 year, 8 months ago","599":"1 year, 8 months ago","600":"1 year, 8 months ago","601":"1 year, 8 months ago","602":"1 year, 8 months ago","603":"1 year, 8 months ago","604":"1 year, 8 months ago","605":"1 year, 8 months ago","606":"1 year, 8 months ago","607":"1 year, 8 months ago","608":"1 year, 8 months ago","609":"1 year, 8 months ago","610":"1 year, 8 months ago","611":"1 year, 8 months ago","612":"1 year, 8 months ago","613":"1 year, 8 months ago","614":"1 year, 8 months ago","615":"1 year, 8 months ago","616":"1 year, 8 months ago","617":"1 year, 8 months ago","618":"1 year, 8 months ago","619":"1 year, 8 months ago","620":"1 year, 8 months ago","621":"1 year, 8 months ago","622":"1 year, 8 months ago","623":"1 year, 8 months ago","624":"1 year, 8 months ago","625":"1 year, 8 months ago","626":"1 year, 8 months ago","627":"1 year, 8 months ago","628":"1 year, 8 months ago","629":"1 year, 8 months ago","630":"1 year, 8 months ago","631":"1 year, 8 months ago","632":"1 year, 8 months ago","633":"1 year, 8 months ago","634":"1 year, 8 months ago","635":"1 year, 8 months ago","636":"1 year, 8 months ago","637":"1 year, 8 months ago","638":"1 year, 8 months ago","639":"1 year, 9 months ago","640":"1 year, 9 months ago","641":"1 year, 9 months ago","642":"1 year, 9 months ago","643":"1 year, 9 months ago","644":"1 year, 9 months ago","645":"1 year, 9 months ago","646":"1 year, 9 months ago","647":"1 year, 9 months ago","648":"1 year, 9 months ago","649":"1 year, 9 months ago","650":"1 year, 9 months ago","651":"1 year, 9 months ago","652":"1 year, 9 months ago","653":"1 year, 9 months ago","654":"1 year, 9 months ago","655":"1 year, 9 months ago","656":"1 year, 9 months ago","657":"1 year, 9 months ago","658":"1 year, 9 months ago","659":"1 year, 9 months ago","660":"1 year, 9 months ago","661":"1 year, 9 months ago","662":"1 year, 9 months ago","663":"1 year, 9 months ago","664":"1 year, 9 months ago","665":"1 year, 9 months ago","666":"1 year, 9 months ago","667":"1 year, 9 months ago","668":"1 year, 9 months ago","669":"1 year, 9 months ago","670":"1 year, 9 months ago","671":"1 year, 9 months ago","672":"1 year, 9 months ago","673":"1 year, 9 months ago","674":"1 year, 9 months ago","675":"1 year, 9 months ago","676":"1 year, 9 months ago","677":"1 year, 9 months ago","678":"1 year, 9 months ago","679":"1 year, 9 months ago","680":"1 year, 9 months ago","681":"1 year, 9 months ago","682":"1 year, 9 months ago","683":"1 year, 9 months ago","684":"1 year, 9 months ago","685":"1 year, 9 months ago","686":"1 year, 9 months ago","687":"1 year, 9 months ago","688":"1 year, 9 months ago","689":"1 year, 9 months ago","690":"1 year, 9 months ago","691":"1 year, 9 months ago","692":"1 year, 9 months ago","693":"1 year, 9 months ago","694":"1 year, 9 months ago","695":"1 year, 9 months ago","696":"1 year, 9 months ago","697":"1 year, 9 months ago","698":"1 year, 9 months ago","699":"1 year, 9 months ago","700":"1 year, 9 months ago","701":"1 year, 9 months ago","702":"1 year, 9 months ago","703":"1 year, 9 months ago","704":"1 year, 9 months ago","705":"1 year, 9 months ago","706":"1 year, 9 months ago","707":"1 year, 9 months ago","708":"1 year, 9 months ago","709":"1 year, 10 months ago","710":"1 year, 10 months ago","711":"1 year, 10 months ago","712":"1 year, 10 months ago","713":"1 year, 10 months ago","714":"1 year, 10 months ago","715":"1 year, 10 months ago","716":"1 year, 10 months ago","717":"1 year, 10 months ago","718":"1 year, 10 months ago","719":"1 year, 10 months ago","720":"1 year, 10 months ago","721":"1 year, 10 months ago","722":"1 year, 10 months ago","723":"1 year, 10 months ago","724":"1 year, 10 months ago","725":"1 year, 10 months ago","726":"1 year, 10 months ago","727":"1 year, 10 months ago","728":"1 year, 10 months ago","729":"1 year, 10 months ago","730":"1 year, 10 months ago","731":"1 year, 10 months ago","732":"1 year, 10 months ago","733":"1 year, 10 months ago","734":"1 year, 10 months ago","735":"1 year, 10 months ago","736":"1 year, 10 months ago","737":"1 year, 10 months ago","738":"1 year, 10 months ago","739":"1 year, 10 months ago","740":"1 year, 10 months ago","741":"1 year, 10 months ago","742":"1 year, 10 months ago","743":"1 year, 10 months ago","744":"1 year, 10 months ago","745":"1 year, 10 months ago","746":"1 year, 10 months ago","747":"1 year, 10 months ago","748":"1 year, 10 months ago","749":"1 year, 10 months ago","750":"1 year, 10 months ago","751":"1 year, 10 months ago","752":"1 year, 10 months ago","753":"1 year, 10 months ago","754":"1 year, 10 months ago","755":"1 year, 10 months ago","756":"1 year, 10 months ago","757":"1 year, 10 months ago","758":"1 year, 10 months ago","759":"1 year, 10 months ago","760":"1 year, 10 months ago","761":"1 year, 10 months ago","762":"1 year, 10 months ago","763":"1 year, 10 months ago","764":"1 year, 10 months ago","765":"1 year, 10 months ago","766":"1 year, 10 months ago","767":"1 year, 11 months ago","768":"1 year, 11 months ago","769":"1 year, 11 months ago","770":"1 year, 11 months ago","771":"1 year, 11 months ago","772":"1 year, 11 months ago","773":"1 year, 11 months ago","774":"1 year, 11 months ago","775":"1 year, 11 months ago","776":"1 year, 11 months ago","777":"1 year, 11 months ago","778":"1 year, 11 months ago","779":"1 year, 11 months ago","780":"1 year, 11 months ago","781":"1 year, 11 months ago","782":"1 year, 11 months ago","783":"1 year, 11 months ago","784":"1 year, 11 months ago","785":"1 year, 11 months ago","786":"1 year, 11 months ago","787":"1 year, 11 months ago","788":"1 year, 11 months ago","789":"1 year, 11 months ago","790":"1 year, 11 months ago","791":"1 year, 11 months ago","792":"1 year, 11 months ago","793":"1 year, 11 months ago","794":"1 year, 11 months ago","795":"1 year, 11 months ago","796":"1 year, 11 months ago","797":"1 year, 11 months ago","798":"1 year, 11 months ago","799":"1 year, 11 months ago","800":"1 year, 11 months ago","801":"1 year, 11 months ago","802":"1 year, 11 months ago","803":"1 year, 11 months ago","804":"1 year, 11 months ago","805":"1 year, 11 months ago","806":"1 year, 11 months ago","807":"1 year, 11 months ago","808":"1 year, 11 months ago","809":"2 years ago","810":"2 years ago","811":"2 years ago","812":"2 years ago","813":"2 years ago","814":"2 years ago","815":"2 years ago","816":"2 years ago","817":"2 years ago","818":"2 years ago","819":"2 years ago","820":"2 years ago","821":"2 years ago","822":"2 years ago","823":"2 years ago","824":"2 years ago","825":"2 years ago","826":"2 years ago","827":"2 years ago","828":"2 years ago","829":"2 years ago","830":"2 years ago","831":"2 years ago","832":"2 years ago","833":"2 years ago","834":"2 years ago","835":"2 years ago","836":"2 years ago","837":"2 years ago","838":"2 years ago","839":"2 years ago","840":"2 years ago","841":"2 years ago","842":"2 years ago","843":"2 years ago","844":"2 years ago","845":"2 years ago","846":"2 years ago","847":"2 years ago","848":"2 years ago","849":"2 years ago","850":"2 years ago","851":"2 years ago","852":"2 years ago","853":"2 years ago","854":"2 years ago","855":"2 years ago","856":"2 years ago","857":"2 years ago","858":"2 years ago","859":"2 years ago","860":"2 years ago","861":"2 years ago","862":"2 years ago","863":"2 years ago","864":"2 years ago","865":"2 years ago","866":"2 years ago","867":"2 years ago","868":"2 years ago","869":"2 years ago","870":"2 years ago","871":"2 years ago","872":"2 years ago","873":"2 years ago","874":"2 years ago","875":"2 years, 1 month ago","876":"2 years, 1 month ago","877":"2 years, 1 month ago","878":"2 years, 1 month ago","879":"2 years, 1 month ago","880":"2 years, 1 month ago","881":"2 years, 1 month ago","882":"2 years, 1 month ago","883":"2 years, 1 month ago","884":"2 years, 1 month ago","885":"2 years, 1 month ago","886":"2 years, 1 month ago","887":"2 years, 1 month ago","888":"2 years, 1 month ago","889":"2 years, 1 month ago","890":"2 years, 1 month ago"},"Last modified time":{"0":"1 year ago","1":"1 year, 1 month ago","2":"1 year, 1 month ago","3":"5 months ago","4":"5 months ago","5":"1 year, 1 month ago","6":"1 year, 1 month ago","7":"5 months ago","8":"1 year, 1 month ago","9":"1 year, 1 month ago","10":"1 year, 1 month ago","11":"1 year, 1 month ago","12":"11 months ago","13":"1 year, 1 month ago","14":"5 months ago","15":"1 year, 1 month ago","16":"1 year, 1 month ago","17":"1 year, 1 month ago","18":"1 year, 1 month ago","19":"3 months ago","20":"1 year, 1 month ago","21":"1 year, 1 month ago","22":"6 months ago","23":"1 year, 1 month ago","24":"1 year, 1 month ago","25":"1 year, 1 month ago","26":"5 months ago","27":"5 months ago","28":"1 year, 1 month ago","29":"1 year, 1 month ago","30":"1 year, 1 month ago","31":"1 month ago","32":"10 months ago","33":"1 year, 1 month ago","34":"1 year, 1 month ago","35":"12 days ago","36":"1 year, 1 month ago","37":"1 year, 1 month ago","38":"6 months ago","39":"7 months ago","40":"1 year, 1 month ago","41":"1 year, 1 month ago","42":"1 year, 1 month ago","43":"1 year, 1 month ago","44":"1 year, 1 month ago","45":"1 year ago","46":"1 year, 1 month ago","47":"1 year, 1 month ago","48":"1 year, 1 month ago","49":"1 year, 1 month ago","50":"1 year, 1 month ago","51":"1 year, 6 months ago","52":"1 year ago","53":"1 year ago","54":"1 year, 1 month ago","55":"1 year, 2 months ago","56":"1 year, 1 month ago","57":"1 year, 2 months ago","58":"1 year, 2 months ago","59":"1 year, 2 months ago","60":"1 year, 1 month ago","61":"1 year, 2 months ago","62":"1 year, 1 month ago","63":"1 year, 2 months ago","64":"1 year, 2 months ago","65":"1 year, 2 months ago","66":"1 year, 2 months ago","67":"1 year, 2 months ago","68":"1 year, 2 months ago","69":"8 days ago","70":"5 months ago","71":"1 year, 2 months ago","72":"1 year, 2 months ago","73":"1 year, 2 months ago","74":"1 year ago","75":"10 months ago","76":"1 year, 2 months ago","77":"2 months ago","78":"1 year, 2 months ago","79":"1 year, 2 months ago","80":"1 year, 2 months ago","81":"1 year, 2 months ago","82":"4 months ago","83":"1 year, 2 months ago","84":"1 year, 2 months ago","85":"2 months ago","86":"1 year, 2 months ago","87":"1 year, 2 months ago","88":"1 year, 2 months ago","89":"1 year, 2 months ago","90":"1 year, 2 months ago","91":"1 year, 2 months ago","92":"1 year, 2 months ago","93":"5 months ago","94":"4 months ago","95":"4 months ago","96":"5 months ago","97":"1 year, 2 months ago","98":"1 year, 2 months ago","99":"1 month ago","100":"1 year, 2 months ago","101":"1 year ago","102":"1 year, 2 months ago","103":"4 months ago","104":"1 year, 2 months ago","105":"1 year, 2 months ago","106":"1 year, 2 months ago","107":"1 year, 2 months ago","108":"1 year, 2 months ago","109":"2 days ago","110":"9 months ago","111":"1 year, 2 months ago","112":"1 year, 2 months ago","113":"10 months ago","114":"1 month ago","115":"1 year, 2 months ago","116":"1 year, 2 months ago","117":"1 year, 2 months ago","118":"1 year, 2 months ago","119":"1 year, 2 months ago","120":"1 year, 2 months ago","121":"1 year, 2 months ago","122":"1 year, 2 months ago","123":"8 days ago","124":"1 year, 2 months ago","125":"1 year, 1 month ago","126":"1 year, 2 months ago","127":"11 months ago","128":"1 year, 2 months ago","129":"1 year, 2 months ago","130":"1 year, 2 months ago","131":"1 year, 2 months ago","132":"1 year, 2 months ago","133":"4 months ago","134":"1 year, 1 month ago","135":"1 year, 2 months ago","136":"1 year, 1 month ago","137":"6 months ago","138":"1 year, 2 months ago","139":"1 year, 2 months ago","140":"4 months ago","141":"1 year, 2 months ago","142":"1 year, 2 months ago","143":"3 months ago","144":"1 year, 2 months ago","145":"1 year, 2 months ago","146":"4 months ago","147":"1 year, 2 months ago","148":"1 year, 2 months ago","149":"1 month ago","150":"10 months ago","151":"1 year, 2 months ago","152":"4 months ago","153":"1 year, 2 months ago","154":"1 year, 2 months ago","155":"1 year, 1 month ago","156":"1 year, 2 months ago","157":"1 year, 2 months ago","158":"1 year, 2 months ago","159":"1 year, 2 months ago","160":"1 year, 2 months ago","161":"6 months ago","162":"1 year, 2 months ago","163":"1 year, 2 months ago","164":"1 year, 1 month ago","165":"1 year, 2 months ago","166":"1 year, 2 months ago","167":"4 months ago","168":"1 year, 2 months ago","169":"1 year, 1 month ago","170":"1 year, 2 months ago","171":"1 year, 2 months ago","172":"4 months ago","173":"1 year, 3 months ago","174":"1 year, 1 month ago","175":"3 months ago","176":"1 year, 3 months ago","177":"4 months ago","178":"1 year, 3 months ago","179":"3 months ago","180":"1 year, 1 month ago","181":"1 year, 2 months ago","182":"1 year, 2 months ago","183":"1 year, 3 months ago","184":"10 months ago","185":"1 year, 3 months ago","186":"1 year, 3 months ago","187":"3 months ago","188":"3 months ago","189":"1 year, 2 months ago","190":"1 year, 3 months ago","191":"1 year ago","192":"1 year, 3 months ago","193":"3 months ago","194":"3 months ago","195":"1 year, 3 months ago","196":"4 months ago","197":"1 year, 3 months ago","198":"7 months ago","199":"2 months ago","200":"10 months ago","201":"1 year, 3 months ago","202":"1 year, 3 months ago","203":"2 months ago","204":"1 year, 3 months ago","205":"1 year, 3 months ago","206":"2 months ago","207":"1 year, 3 months ago","208":"1 year, 3 months ago","209":"1 year, 3 months ago","210":"1 year, 3 months ago","211":"1 year ago","212":"11 months ago","213":"1 year, 3 months ago","214":"1 year, 3 months ago","215":"8 months ago","216":"1 year, 2 months ago","217":"9 months ago","218":"1 year, 2 months ago","219":"1 year, 3 months ago","220":"6 months ago","221":"1 year, 2 months ago","222":"1 year, 3 months ago","223":"11 days ago","224":"1 year, 3 months ago","225":"1 year, 3 months ago","226":"1 year, 3 months ago","227":"1 year, 3 months ago","228":"12 months ago","229":"1 year, 3 months ago","230":"1 year, 3 months ago","231":"1 year, 3 months ago","232":"10 months ago","233":"4 months ago","234":"1 year, 3 months ago","235":"9 months ago","236":"1 year, 3 months ago","237":"1 year, 3 months ago","238":"1 year, 3 months ago","239":"1 year, 3 months ago","240":"4 months ago","241":"1 year, 3 months ago","242":"1 year, 3 months ago","243":"1 year, 3 months ago","244":"6 months ago","245":"1 year, 3 months ago","246":"9 months ago","247":"10 months ago","248":"1 year, 3 months ago","249":"1 year, 3 months ago","250":"1 year, 3 months ago","251":"1 year, 3 months ago","252":"1 year, 3 months ago","253":"1 year, 3 months ago","254":"1 year, 3 months ago","255":"1 year ago","256":"1 year, 3 months ago","257":"1 year, 3 months ago","258":"1 year, 3 months ago","259":"1 year, 3 months ago","260":"16 days ago","261":"1 year, 3 months ago","262":"1 year, 3 months ago","263":"3 months ago","264":"1 year, 3 months ago","265":"1 year, 3 months ago","266":"1 year, 4 months ago","267":"1 year, 3 months ago","268":"3 months ago","269":"1 year, 4 months ago","270":"1 year, 4 months ago","271":"1 year ago","272":"8 months ago","273":"1 year, 4 months ago","274":"1 year, 4 months ago","275":"1 year, 3 months ago","276":"9 months ago","277":"1 year, 1 month ago","278":"11 months ago","279":"1 year, 4 months ago","280":"1 year, 4 months ago","281":"3 months ago","282":"1 year, 4 months ago","283":"1 year, 3 months ago","284":"1 year, 4 months ago","285":"1 year, 4 months ago","286":"3 months ago","287":"1 year, 4 months ago","288":"1 year, 3 months ago","289":"1 year, 4 months ago","290":"1 month ago","291":"1 year, 4 months ago","292":"1 year, 4 months ago","293":"1 year, 4 months ago","294":"1 year, 4 months ago","295":"3 months ago","296":"1 year, 4 months ago","297":"11 months ago","298":"1 year, 1 month ago","299":"4 months ago","300":"3 months ago","301":"1 year, 4 months ago","302":"12 months ago","303":"1 year, 4 months ago","304":"1 year, 4 months ago","305":"1 year, 4 months ago","306":"3 months ago","307":"3 months ago","308":"1 year, 2 months ago","309":"1 year, 3 months ago","310":"1 year, 4 months ago","311":"1 year, 4 months ago","312":"1 year, 4 months ago","313":"1 year, 4 months ago","314":"1 year, 2 months ago","315":"10 months ago","316":"1 year, 4 months ago","317":"1 year, 4 months ago","318":"8 months ago","319":"1 year, 1 month ago","320":"1 year, 4 months ago","321":"1 year, 4 months ago","322":"1 year, 4 months ago","323":"1 year ago","324":"1 year, 3 months ago","325":"1 year, 4 months ago","326":"1 year, 4 months ago","327":"1 year, 4 months ago","328":"1 year, 2 months ago","329":"1 year, 4 months ago","330":"1 year, 4 months ago","331":"3 months ago","332":"1 year, 4 months ago","333":"2 months ago","334":"1 year, 4 months ago","335":"1 year, 4 months ago","336":"1 year, 2 months ago","337":"1 year, 4 months ago","338":"3 months ago","339":"1 year, 4 months ago","340":"1 year, 4 months ago","341":"10 months ago","342":"3 months ago","343":"1 year, 4 months ago","344":"1 year, 4 months ago","345":"1 year, 4 months ago","346":"5 months ago","347":"1 year, 4 months ago","348":"1 year, 4 months ago","349":"1 year, 3 months ago","350":"1 year, 4 months ago","351":"2 days ago","352":"7 months ago","353":"1 year, 4 months ago","354":"3 months ago","355":"5 months ago","356":"1 year, 4 months ago","357":"1 year, 4 months ago","358":"8 months ago","359":"1 year, 4 months ago","360":"1 year, 4 months ago","361":"1 year, 4 months ago","362":"8 months ago","363":"1 year, 4 months ago","364":"20 days ago","365":"1 year, 4 months ago","366":"1 year, 1 month ago","367":"1 year, 4 months ago","368":"1 year, 4 months ago","369":"1 year, 4 months ago","370":"1 year, 4 months ago","371":"1 year, 4 months ago","372":"2 months ago","373":"1 year ago","374":"1 year, 4 months ago","375":"1 year, 4 months ago","376":"1 year, 5 months ago","377":"1 year, 4 months ago","378":"1 year, 5 months ago","379":"1 year, 5 months ago","380":"1 year, 5 months ago","381":"1 year, 4 months ago","382":"1 year, 4 months ago","383":"1 year, 5 months ago","384":"1 month ago","385":"1 year, 5 months ago","386":"1 year, 5 months ago","387":"1 year, 5 months ago","388":"11 months ago","389":"5 months ago","390":"1 year, 5 months ago","391":"7 months ago","392":"1 year, 5 months ago","393":"1 year ago","394":"1 year, 5 months ago","395":"1 year, 5 months ago","396":"1 year, 5 months ago","397":"1 year, 5 months ago","398":"1 year, 5 months ago","399":"1 year, 5 months ago","400":"1 year, 2 months ago","401":"1 year, 5 months ago","402":"1 year, 5 months ago","403":"1 year, 5 months ago","404":"1 year, 5 months ago","405":"9 months ago","406":"1 year, 4 months ago","407":"1 year, 5 months ago","408":"4 months ago","409":"1 year, 3 months ago","410":"1 year, 5 months ago","411":"1 year, 5 months ago","412":"1 year, 5 months ago","413":"1 year, 5 months ago","414":"7 months ago","415":"1 year, 5 months ago","416":"1 year, 5 months ago","417":"1 year ago","418":"1 year, 5 months ago","419":"1 year, 5 months ago","420":"3 months ago","421":"1 year, 5 months ago","422":"1 year, 5 months ago","423":"7 months ago","424":"1 year, 5 months ago","425":"1 year, 5 months ago","426":"1 year, 5 months ago","427":"11 months ago","428":"1 year, 5 months ago","429":"1 year, 5 months ago","430":"1 month ago","431":"2 months ago","432":"1 year, 5 months ago","433":"1 year, 5 months ago","434":"1 year, 5 months ago","435":"3 months ago","436":"7 months ago","437":"1 year, 3 months ago","438":"1 year, 5 months ago","439":"1 year, 5 months ago","440":"1 year, 5 months ago","441":"1 year, 5 months ago","442":"1 year, 5 months ago","443":"1 year, 6 months ago","444":"1 year, 5 months ago","445":"1 year, 6 months ago","446":"3 months ago","447":"1 year, 5 months ago","448":"1 year, 5 months ago","449":"1 year, 5 months ago","450":"1 year, 5 months ago","451":"1 year, 3 months ago","452":"1 year, 6 months ago","453":"1 year, 6 months ago","454":"1 year, 6 months ago","455":"9 months ago","456":"1 year, 6 months ago","457":"1 year, 6 months ago","458":"1 year, 6 months ago","459":"1 year, 6 months ago","460":"3 months ago","461":"1 year, 6 months ago","462":"1 year, 6 months ago","463":"10 months ago","464":"6 months ago","465":"1 year, 6 months ago","466":"1 year, 5 months ago","467":"1 year, 6 months ago","468":"1 year, 6 months ago","469":"1 year, 6 months ago","470":"3 months ago","471":"1 year, 6 months ago","472":"1 year, 6 months ago","473":"3 months ago","474":"1 year, 6 months ago","475":"1 year, 2 months ago","476":"1 year, 6 months ago","477":"1 year, 6 months ago","478":"1 year, 6 months ago","479":"2 months ago","480":"1 year, 6 months ago","481":"1 year, 6 months ago","482":"1 year, 5 months ago","483":"1 year, 1 month ago","484":"1 year, 6 months ago","485":"1 year, 6 months ago","486":"5 months ago","487":"1 year, 6 months ago","488":"1 year, 6 months ago","489":"7 months ago","490":"1 year, 6 months ago","491":"1 year, 6 months ago","492":"1 year, 6 months ago","493":"1 year, 6 months ago","494":"1 year, 6 months ago","495":"9 months ago","496":"1 year, 6 months ago","497":"1 year, 6 months ago","498":"3 months ago","499":"1 year, 6 months ago","500":"1 year, 6 months ago","501":"10 months ago","502":"6 months ago","503":"1 year, 6 months ago","504":"1 year, 6 months ago","505":"1 year, 6 months ago","506":"1 year ago","507":"1 year, 6 months ago","508":"1 year, 6 months ago","509":"1 year, 6 months ago","510":"1 year, 6 months ago","511":"1 year, 6 months ago","512":"1 year, 7 months ago","513":"1 year, 7 months ago","514":"1 year, 7 months ago","515":"1 year, 7 months ago","516":"1 year, 2 months ago","517":"1 year, 7 months ago","518":"1 year, 7 months ago","519":"1 year, 1 month ago","520":"1 year, 7 months ago","521":"6 months ago","522":"3 months ago","523":"1 year, 7 months ago","524":"1 year, 7 months ago","525":"3 months ago","526":"1 year, 7 months ago","527":"1 year, 6 months ago","528":"1 year, 7 months ago","529":"1 year, 7 months ago","530":"1 year, 7 months ago","531":"1 year, 7 months ago","532":"3 months ago","533":"1 year, 7 months ago","534":"3 months ago","535":"1 year, 7 months ago","536":"3 months ago","537":"1 year, 7 months ago","538":"1 year, 7 months ago","539":"3 months ago","540":"1 year, 7 months ago","541":"10 months ago","542":"1 year, 7 months ago","543":"1 year, 6 months ago","544":"1 year, 7 months ago","545":"1 year, 7 months ago","546":"1 year, 7 months ago","547":"1 year, 6 months ago","548":"1 year, 7 months ago","549":"1 year, 7 months ago","550":"1 year, 7 months ago","551":"1 year, 7 months ago","552":"8 months ago","553":"1 year, 7 months ago","554":"2 months ago","555":"1 year, 7 months ago","556":"1 year, 4 months ago","557":"1 year, 7 months ago","558":"1 year, 7 months ago","559":"1 year, 7 months ago","560":"1 year, 3 months ago","561":"2 months ago","562":"1 year, 7 months ago","563":"1 year, 6 months ago","564":"7 months ago","565":"1 year, 7 months ago","566":"4 months ago","567":"1 year, 8 months ago","568":"1 year, 8 months ago","569":"1 year, 8 months ago","570":"1 year, 8 months ago","571":"1 year, 8 months ago","572":"1 year, 8 months ago","573":"1 year, 7 months ago","574":"5 months ago","575":"1 year, 8 months ago","576":"1 year, 8 months ago","577":"1 year, 8 months ago","578":"1 year, 8 months ago","579":"1 year, 8 months ago","580":"7 months ago","581":"1 year, 8 months ago","582":"1 year, 7 months ago","583":"1 year, 8 months ago","584":"1 year, 8 months ago","585":"1 year, 8 months ago","586":"1 year, 7 months ago","587":"1 year, 8 months ago","588":"1 year, 8 months ago","589":"3 months ago","590":"1 year, 8 months ago","591":"1 year, 8 months ago","592":"1 year, 8 months ago","593":"1 year, 8 months ago","594":"1 year, 7 months ago","595":"1 year, 8 months ago","596":"1 year, 8 months ago","597":"1 year, 8 months ago","598":"1 year, 8 months ago","599":"1 year, 8 months ago","600":"1 year, 8 months ago","601":"1 year, 8 months ago","602":"1 year, 3 months ago","603":"1 year, 8 months ago","604":"1 year, 8 months ago","605":"1 year, 8 months ago","606":"1 year, 3 months ago","607":"1 year, 8 months ago","608":"1 year, 8 months ago","609":"1 year, 8 months ago","610":"1 year, 8 months ago","611":"1 year, 8 months ago","612":"1 year, 8 months ago","613":"1 year, 8 months ago","614":"1 year, 8 months ago","615":"9 months ago","616":"1 year ago","617":"1 year, 8 months ago","618":"1 year, 8 months ago","619":"1 year, 7 months ago","620":"1 year, 5 months ago","621":"1 year, 8 months ago","622":"1 year, 8 months ago","623":"1 year, 8 months ago","624":"1 year, 8 months ago","625":"1 year, 8 months ago","626":"1 year, 8 months ago","627":"1 year, 8 months ago","628":"1 year, 8 months ago","629":"8 months ago","630":"1 year, 1 month ago","631":"1 year, 8 months ago","632":"1 month ago","633":"1 year, 8 months ago","634":"1 year, 8 months ago","635":"1 year, 8 months ago","636":"1 year, 1 month ago","637":"1 year, 7 months ago","638":"1 year, 4 months ago","639":"1 year, 9 months ago","640":"1 year, 9 months ago","641":"1 year, 9 months ago","642":"1 year, 9 months ago","643":"1 year, 9 months ago","644":"1 year, 9 months ago","645":"1 year, 8 months ago","646":"1 year, 6 months ago","647":"7 months ago","648":"7 months ago","649":"1 year, 8 months ago","650":"1 year, 5 months ago","651":"1 year, 9 months ago","652":"1 year, 9 months ago","653":"1 year, 9 months ago","654":"1 year, 1 month ago","655":"1 year, 9 months ago","656":"1 year, 9 months ago","657":"1 year, 9 months ago","658":"1 year, 6 months ago","659":"1 year, 9 months ago","660":"3 months ago","661":"2 months ago","662":"1 year, 3 months ago","663":"1 year, 9 months ago","664":"1 year, 9 months ago","665":"1 year, 9 months ago","666":"1 year, 9 months ago","667":"3 months ago","668":"1 year, 9 months ago","669":"3 months ago","670":"1 year, 9 months ago","671":"1 year, 9 months ago","672":"1 year, 9 months ago","673":"1 year, 8 months ago","674":"11 months ago","675":"1 year, 9 months ago","676":"11 months ago","677":"1 year, 8 months ago","678":"2 months ago","679":"1 year, 9 months ago","680":"1 year, 9 months ago","681":"1 year, 9 months ago","682":"1 year, 9 months ago","683":"1 year, 9 months ago","684":"1 year, 9 months ago","685":"1 year, 9 months ago","686":"1 year, 9 months ago","687":"1 year, 9 months ago","688":"1 year, 9 months ago","689":"1 year, 9 months ago","690":"1 year, 9 months ago","691":"1 year, 9 months ago","692":"1 year, 9 months ago","693":"1 year, 3 months ago","694":"1 year, 9 months ago","695":"5 months ago","696":"1 year, 9 months ago","697":"1 year, 9 months ago","698":"1 year, 3 months ago","699":"1 year, 9 months ago","700":"1 year, 9 months ago","701":"1 year, 9 months ago","702":"1 year, 9 months ago","703":"1 year, 8 months ago","704":"1 year, 9 months ago","705":"1 year, 9 months ago","706":"1 year, 9 months ago","707":"1 year, 9 months ago","708":"1 year, 9 months ago","709":"1 year, 9 months ago","710":"1 year, 10 months ago","711":"1 year, 10 months ago","712":"1 year, 10 months ago","713":"1 year, 10 months ago","714":"11 months ago","715":"9 months ago","716":"1 year, 10 months ago","717":"1 year, 10 months ago","718":"1 year, 4 months ago","719":"1 year, 10 months ago","720":"1 year, 10 months ago","721":"1 year, 10 months ago","722":"1 year, 10 months ago","723":"1 year, 10 months ago","724":"1 year, 10 months ago","725":"1 year, 10 months ago","726":"1 year, 10 months ago","727":"1 year, 10 months ago","728":"9 months ago","729":"1 year, 10 months ago","730":"2 months ago","731":"1 year, 10 months ago","732":"3 months ago","733":"1 year, 10 months ago","734":"5 months ago","735":"1 year, 10 months ago","736":"1 year, 10 months ago","737":"1 year, 10 months ago","738":"1 year, 8 months ago","739":"1 year, 10 months ago","740":"1 year, 6 months ago","741":"1 year, 10 months ago","742":"5 months ago","743":"1 year, 10 months ago","744":"1 year, 9 months ago","745":"1 year, 10 months ago","746":"1 year, 8 months ago","747":"1 year, 10 months ago","748":"1 year, 10 months ago","749":"1 year, 3 months ago","750":"1 year, 10 months ago","751":"1 year, 10 months ago","752":"1 year, 10 months ago","753":"16 days ago","754":"1 year, 10 months ago","755":"1 year, 10 months ago","756":"1 year, 8 months ago","757":"1 year, 10 months ago","758":"1 year, 2 months ago","759":"1 year, 4 months ago","760":"1 year, 10 months ago","761":"1 year, 10 months ago","762":"1 year, 10 months ago","763":"1 year, 10 months ago","764":"1 year, 10 months ago","765":"1 year, 10 months ago","766":"1 year, 10 months ago","767":"1 year, 10 months ago","768":"1 year, 11 months ago","769":"2 months ago","770":"8 months ago","771":"1 year, 8 months ago","772":"1 year, 11 months ago","773":"1 year, 11 months ago","774":"1 year, 10 months ago","775":"1 year, 7 months ago","776":"1 year, 11 months ago","777":"1 year, 11 months ago","778":"1 year, 10 months ago","779":"1 year, 11 months ago","780":"1 year, 11 months ago","781":"1 year, 11 months ago","782":"1 year, 11 months ago","783":"1 year, 11 months ago","784":"7 months ago","785":"1 year, 11 months ago","786":"1 year, 11 months ago","787":"1 year, 11 months ago","788":"1 year ago","789":"1 year, 11 months ago","790":"1 year, 7 months ago","791":"1 year, 8 months ago","792":"1 year, 11 months ago","793":"1 year, 11 months ago","794":"10 months ago","795":"1 year, 11 months ago","796":"1 year, 11 months ago","797":"1 year, 11 months ago","798":"1 year, 11 months ago","799":"1 year, 11 months ago","800":"1 year, 11 months ago","801":"9 months ago","802":"1 year, 11 months ago","803":"1 year, 2 months ago","804":"11 months ago","805":"1 year, 11 months ago","806":"1 year, 9 months ago","807":"8 months ago","808":"1 year, 11 months ago","809":"2 years ago","810":"1 year, 11 months ago","811":"1 year, 6 months ago","812":"2 years ago","813":"2 years ago","814":"1 year, 1 month ago","815":"2 years ago","816":"2 years ago","817":"2 months ago","818":"2 years ago","819":"1 year, 10 months ago","820":"1 year, 11 months ago","821":"2 years ago","822":"2 years ago","823":"10 months ago","824":"2 months ago","825":"1 year, 8 months ago","826":"2 years ago","827":"2 years ago","828":"2 years ago","829":"2 years ago","830":"2 years ago","831":"2 years ago","832":"2 years ago","833":"2 years ago","834":"2 years ago","835":"2 years ago","836":"1 year, 10 months ago","837":"2 months ago","838":"2 years ago","839":"8 months ago","840":"2 years ago","841":"2 years ago","842":"2 years ago","843":"2 years ago","844":"2 years ago","845":"1 year ago","846":"2 years ago","847":"2 years ago","848":"2 years ago","849":"2 years ago","850":"2 years ago","851":"2 years ago","852":"2 years ago","853":"2 years ago","854":"2 years ago","855":"2 years ago","856":"2 years ago","857":"2 years ago","858":"2 years ago","859":"2 years ago","860":"2 years ago","861":"8 months ago","862":"8 months ago","863":"2 years ago","864":"2 years ago","865":"2 years ago","866":"2 years ago","867":"2 years ago","868":"2 years ago","869":"2 years ago","870":"2 years ago","871":"1 year, 8 months ago","872":"2 years ago","873":"2 years ago","874":"1 year, 8 months ago","875":"2 years, 1 month ago","876":"2 years, 1 month ago","877":"2 years, 1 month ago","878":"2 years, 1 month ago","879":"2 years, 1 month ago","880":"2 years, 1 month ago","881":"5 months ago","882":"2 years, 1 month ago","883":"2 months ago","884":"1 year, 6 months ago","885":"2 years, 1 month ago","886":"10 months ago","887":"2 years, 1 month ago","888":"2 years, 1 month ago","889":"8 months ago","890":"2 years, 1 month ago"},"Problem Description":{"0":"Im trying to find a way to setup a fix gas price ( gwei ) in my metamask.\nProbably this is not possible in metamask , but is there any way to force that or maybe there is any <web3> wallet which offers that functionality ?","1":"I am trying to list identities of ca server using fabric-ca-client as below\n\nfabric-ca-client identity list --id nameofidentityfromfabric-ca-server-config.yaml -u https:\/\/username:password@localhost:8054 --tls.certfiles <path to \/tls\/ca.crt> --mspdir <path to \/peer0.org2.example.com\/msp>\n\nBut ca servers responds with Error as below\n\nError: Response from server: Error Code: 71 - Authorization failure\n\nBelow is the code in fabric-ca-server-config.yaml\nidentities:\n - name: username\n   pass: password\n   type: client\n   affiliation: \"\"\n   attrs:\n      hf.Registrar.Roles: \"*\"\n      hf.Registrar.DelegateRoles: \"*\"\n      hf.Revoker: true\n      hf.IntermediateCA: true\n      hf.GenCRL: true\n      hf.Registrar.Attributes: \"*\"\n      hf.AffiliationMgr: true","2":"In <blockchain> technology, we have learned that blocks are immutable. In <hyperledger> Fabric we have world state that is implemented using GoLevelDB or CouchDB.\nFirst, as far as I know, I can delete a key-pair in a Chaincode. So, is it really immutable?\nSecond, in Bitcoin and Ethereum, all data is included in blocks and hash of all the data in a block embedded in the next block makes it impossible to alter previous blocks easily. So, how does the world state differ from a block in HLF? Can world state database make HLF vulnerable to attacks?","3":"Account array is being logged perfectly fine and Metamask is running correctly, Ethereum is being used properly but every time I call manager() I just receive an empty array,\nI am following a Udemy course of Stephen Grider\n \/\/ SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.9.0;\n\ncontract Lottery {\n    address public manager;\n    address payable[] public players;\n\n    constructor(){\n       manager = msg.sender;\n    }\n\n    function enter() public payable{\n        require(msg.value > 0.01 ether);\n        players.push(payable(msg.sender));\n    }\n\n    function random() private view returns (uint){\n        return uint256(\n                keccak256(\n                    abi.encodePacked(block.difficulty, block.number, players)\n                )\n            );\n    }\n\n    function pickWinner() public restricted {\n        uint index = random() % players.length;\n        address contractAddress = address(this);\n        players[index].transfer(contractAddress.balance);\n        players = new address payable[](0);\n    }\n\n    modifier restricted() {\n        require(msg.sender == manager);\n        _;\n    }\n\n    function getPlayers() public view returns(address payable[] memory){\n        return players;\n    }\n }\n\nFrontend React <web3> initiation\nimport <web3> from \"<web3>\";\n\nconst <web3> = new <web3>(window.ethereum);\n\nexport default <web3>;\n\nFrontend React Contract Creation\nimport <web3> from \".\/<web3>\";\n\nconst contractAddress = \"0x0C04a9a1587524dA1F2c65561Ca157f582242FC8\";\n\nconst abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n    constant: undefined,\n    payable: undefined,\n    signature: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"enter\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n    constant: undefined,\n    payable: true,\n    signature: \"0xe97dcb62\",\n  },\n  {\n    inputs: [],\n    name: \"getPlayers\",\n    outputs: [[Object]],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n    payable: undefined,\n    signature: \"0x8b5b9ccc\",\n  },\n  {\n    inputs: [],\n    name: \"manager\",\n    outputs: [[Object]],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n    payable: undefined,\n    signature: \"0x481c6a75\",\n  },\n  {\n    inputs: [],\n    name: \"pickWinner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n    constant: undefined,\n    payable: undefined,\n    signature: \"0x5d495aea\",\n  },\n  {\n    inputs: [[Object]],\n    name: \"players\",\n    outputs: [[Object]],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n    payable: undefined,\n    signature: \"0xf71d96cb\",\n  },\n];\n\nconst lottery = new <web3>.eth.Contract(abi, contractAddress);\n\nexport default lottery;\n\nCalling Contract Methods in App.js:\nimport React, { useEffect, useRef, useState } from \"react\";\nimport <web3> from \".\/<web3>\";\nimport lottery from \".\/lottery\";\nconst { ethereum } = window;\n\nfunction App() {\n  useEffect(() => {\n    \/\/Calling Manager\n    async function getManager() {\n      const account = await ethereum.request({ method: \"eth_requestAccounts\" });\n      console.log(account);\n\n      const manager = await lottery.methods.manager().call({\n        from: account[0],\n      });\n      console.log(manager);\n    }\n\n    getManager();\n  }, []);\n\n  return (\n    <div>\n      <h2>Lottery Contract<\/h2>\n      <p>This Contract is managed by<\/p>\n    <\/div>\n  );\n}\n\nexport default App;","4":"I want to connect a Solana wallet (phantom or any other) to a web application through the <web3>js library. I've read docs for most wallets and it seems like it's just as simple as await window.solana.request({ method: \"connect\" }); but window.solana is undefined in my case.\nWhen I do console.log(window) I can see the Solana value with all its corresponding keys and values.\nHow can I do this?","5":"I am new to <blockchain> technology. I am trying to create a contract and then mint a token to contract using <web3> <python> library.\nI could create an contract. This is the link to contract in rinkeby\nhttps:\/\/rinkeby.etherscan.io\/address\/0x466086b7002d6836c2e4ca05472ded70a7f5213b\n\nWhenever I try to mint token to this. I am getting below error\n<web3>.exceptions.ContractLogicError: execution reverted: ERC721: transfer to non ERC721Receiver implementer\n\nThis is my code to do the minting.\ndef test_with_setter_only_transfer():\n    w3 = <web3>(<web3>.HTTPProvider(\"https:\/\/rinkeby.infura.io\/v3\/c0e4482bdf9e4f539692666cd56ef4e3\"))\n    w3.middleware_onion.inject(<geth>_poa_middleware, layer=0)\n    \n    address = '0x589a1532AAaE84e38345b58C11CF4697Ea89A866'\n    abi = '[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC712_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeperator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"counter\",\"type\":\"string\"}],\"name\":\"setCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n\n    \n    w3.eth.defaultAccount = address\n\n    private_key = \"905a362c6d17d5b87f7941fa73a3bb08bd7473e226b760437269b017xxxxxxx\"\n\n\n    contract = w3.eth.contract(\n        address='0x466086b7002d6836c2E4Ca05472deD70A7f5213b',\n        abi=abi,\n    )\n\n    print('Base Token URI: {}'.format(contract.functions.baseTokenURI().call()))\n\n    token_id = contract.functions.totalSupply().call()\n    print('Token ID: {}'.format(token_id))\n\n    print('Token URI: {}'.format(contract.functions.tokenURI(token_id).call()))\n\n    print(f'block number after deploying : {w3.eth.blockNumber}')\n\n    # Change the value of counter and transact\n\n    # # update the greeting\n    tx_hash = contract.functions.mintTo(<web3>.toChecksumAddress('0x466086b7002d6836c2E4Ca05472deD70A7f5213b')).buildTransaction()\n    tx_hash.update({'gas': 20000000})\n    tx_hash.update({'nonce': w3.eth.getTransactionCount(address)})\n    signed_tx = w3.eth.account.sign_transaction(tx_hash, private_key)\n\n    txn_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)\n\n    # # Wait for transaction to be mined...\n    rec = w3.eth.waitForTransactionReceipt(txn_hash)\n\n    print(rec)\n\nThis is the contract which I have created\npragma solidity ^0.8.0;\n\nimport \".\/ERC721Tradable.sol\";\nimport \"@openzeppelin\/contracts\/access\/Ownable.sol\";\n\n\/**\n * @title Creature\n * Creature - a contract for my non-fungible creatures.\n *\/\ncontract Creature is ERC721Tradable {\n\n  string _baseURL;\n\n  constructor(address _proxyRegistryAddress, string memory url) ERC721Tradable(\"Creature\", \"OSC\", _proxyRegistryAddress) {\n      _baseURL = url ;\n   }\n\n  function baseTokenURI() public override view returns (string memory) {\n    return _baseURL;\n  }\n}\n\nThis is the ERC721Tradable file\n\/\/ SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin\/contracts\/token\/ERC721\/ERC721.sol\";\nimport \"@openzeppelin\/contracts\/access\/Ownable.sol\";\nimport \"@openzeppelin\/contracts\/utils\/Counters.sol\";\nimport \"@openzeppelin\/contracts\/utils\/Strings.sol\";\nimport \"@openzeppelin\/contracts\/utils\/math\/SafeMath.sol\";\n\nimport \".\/ContentMixin.sol\";\nimport \".\/NativeMetaTransaction.sol\";\n\ncontract OwnableDelegateProxy {}\n\n\/**\n * Used to delegate ownership of a contract to another address, to save on unneeded transactions to approve contract use for users\n *\/\ncontract ProxyRegistry {\n    mapping(address => OwnableDelegateProxy) public proxies;\n}\n\n\/**\n * @title ERC721Tradable\n * ERC721Tradable - ERC721 contract that whitelists a trading address, and has minting functionality.\n *\/\nabstract contract ERC721Tradable is ERC721, ContextMixin, NativeMetaTransaction, Ownable {\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _nextTokenId;\n    address proxyRegistryAddress;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        address _proxyRegistryAddress\n    ) ERC721(_name, _symbol) {\n        proxyRegistryAddress = _proxyRegistryAddress;\n        \/\/ nextTokenId is initialized to 1, since starting at 0 leads to higher gas cost for the first minter\n        _nextTokenId.increment();\n        _initializeEIP712(_name);\n    }\n\n    \/**\n     * @dev Mints a token to an address with a tokenURI.\n     * @param _to address of the future owner of the token\n     *\/\n    function mintTo(address _to) public onlyOwner {\n        uint256 currentTokenId = _nextTokenId.current();\n        _nextTokenId.increment();\n        _safeMint(_to, currentTokenId);\n    }\n\n    \/**\n        @dev Returns the total tokens minted so far.\n        1 is always subtracted from the Counter since it tracks the next available tokenId.\n     *\/\n    function totalSupply() public view returns (uint256) {\n        return _nextTokenId.current() - 1;\n    }\n\n    function baseTokenURI() virtual public view returns (string memory);\n\n    function tokenURI(uint256 _tokenId) override public view returns (string memory) {\n        return string(abi.encodePacked(baseTokenURI(), Strings.toString(_tokenId)));\n    }\n\n    \/**\n     * Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\n     *\/\n    function isApprovedForAll(address owner, address operator)\n        override\n        public\n        view\n        returns (bool)\n    {\n        \/\/ Whitelist OpenSea proxy contract for easy trading.\n        ProxyRegistry proxyRegistry = ProxyRegistry(proxyRegistryAddress);\n        if (address(proxyRegistry.proxies(owner)) == operator) {\n            return true;\n        }\n\n        return super.isApprovedForAll(owner, operator);\n    }\n\n    \/**\n     * This is used instead of msg.sender as transactions won't be sent by the original token owner, but by OpenSea.\n     *\/\n    function _msgSender()\n        internal\n        override\n        view\n        returns (address sender)\n    {\n        return ContextMixin.msgSender();\n    }\n}","6":"I am new to <blockchain>, please help me understand.\nHow the smart contract's state variables are stored on the <blockchain> if a smart contract is immutable (because it was deployed as a transaction = byte-code is stored in a transaction)?\nOk, maybe every new state of a state variable is stored with a new method-update call (set) in the transaction, but how then does the smart contract know how to address them if it was created earlier?\nAnd here I found a mention of a state storage on every EVM. \"Technically you don\u00e2\u0080\u0099t need to store this on disk, you could just play back all <transactions> when you boot up the node\" - again, how it is possible to play back all <transactions> related to a contract, how are they connected to a contract?","7":"I'm starting to learn solidity, and I'm trying to build a sendEther contract where some address sends an amount of ether to another address. I'm building it on remix, and I'm having trouble while setting up the receiver's address. This is my code so far.\n\/\/ SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.4;\n\ncontract sendEther {\n    address payable public owner;\n    address payable public receiver;\n    uint256 public value;\n\n    error insufficientBalance();\n    error transferAlreadyCalled();\n\n    event Log(string message);\n\n    constructor() payable {\n        owner = payable(msg.sender);\n    }\n\n    modifier inBalance(address owner_) {\n        if (owner.balance < value) {\n            emit Log(\"Insufficient balance\");\n            revert insufficientBalance();\n            _;\n        }\n    }\n\n    function transferEther() external payable {\n        owner = payable(msg.sender);\n        (\n            bool sent, \/* bytes memory data *\/\n\n        ) = owner.call{value: msg.value}(\"\");\n        require(sent, \"Failed to send Ether\");\n    }\n}\n\nI'm struggling to understand how the owner.call() will send ether to receiver since receiver wasn't set to any address. That said, how should I get the desired address input from the user?","8":"I\u00e2\u0080\u0099m getting this error when trying to multisign a tx. The 3 signers sent their signed json but when trying to combine them I get:\nError: couldn't verify signature: unable to verify single signer signature\n\nI\u00e2\u0080\u0099ve read that it\u00e2\u0080\u0099s most likely chain ID or sequence. I\u00e2\u0080\u0099m pretty sure chainID is correct but don\u00e2\u0080\u0099t know how to verify the sequence nor what it means. How can a tx have the wrong sequence number ?\nMaybe a noob question \u00e2\u0080\u00a6 but that\u00e2\u0080\u0099s exactly what I am \u00f0\u009f\u0098\u0084","9":"\/\/ SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.6 < 0.9.0;\n\nimport \"@chainlink\/contracts\/src\/v0.8\/interfaces\/AggregatorV3Interface.sol\";\n\ncontract FundMe {\n\n     mapping(address => uint256) public addressToAmountFunded;\n\n     function fund() public payable {\n         uint256 minimumUSD = 30 * 10 ** 18;\n         require(getConversionRate(msg.value) >= minimumUSD, \"You need to spend more ETH\");\n         addressToAmountFunded[msg.sender] += msg.value;\n     }\n\n    function getVersion() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\n        return priceFeed.version();\n    }\n\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function getPrice() public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\n        (,int256 answer,,,) = priceFeed.latestRoundData();\n        return uint256(answer * 10000000000);\n    }\n\n    function getConversionRate(uint256 ethAmount) public view returns (uint256) {\n        uint256 ethPrice = getPrice();\n        uint256 ethAmountInUsd = (ethPrice * ethAmount)\/1000000000000000000;\n        return ethAmountInUsd;\n    }\n\n    function withdraw() public payable {\n        require(msg.sender == owner);\n        payable(msg.sender).transfer(address(this).balance);\n    }\n}\n\nI write this piece of code. I get this message every time I deploy:\n\"gas estimation errored with the following message - execution reverted\"\nI know problem is in:\n     function fund() public payable {\n         uint256 minimumUSD = 30 * 10 ** 18;\n         require(getConversionRate(msg.value) >= minimumUSD, \"You need to spend more ETH\");\n         addressToAmountFunded[msg.sender] += msg.value;\n     }\n\nIn this function I try to avoid geting value below 30$.\nCan anybody help me?","10":"Do we need to update date timestamp on every hash calculation update? How it's implemented in most popular cryptocurrencies?\n\n\nfunction isValidHashDifficulty() {\n  \/\/validate calculated hash to fit requirements\n}\n\nfunction calculateHash(nextIndex, previousHash, timestamp, data, nonce) {\n  \/\/calculate hash\n}\nlet nonce = 0;\nlet nextIndex, previousHash, data;\n\nlet timestamp = new Date().getTime(); \/\/ do we use this timestamp?\n\nwhile (!isValidHashDifficulty(nextHash)) {\n  nonce = nonce + 1;\n  timestamp = new Date().getTime(); \/\/or do we get new date on every calculation attempt?\n  nextHash = calculateHash(nextIndex, previousHash, timestamp, data, nonce);\n}","11":"Hoping somone could explain what's going on here.\nI am getting this error Error: couldn't unmarshal an argument. Ensure arguments are valid and properly formatted.\nwith this code, seems like something is wrong with xAddresses format?\nconst xAddresses:any = xchain.keyChain().getAddresses();\n\n**const utxos:any = await xchain.getUTXOs(xAddresses)**\n    .then(element => {console.log(\"sucess\" + element)})\n    .catch(Error => {console.log(\"Error in createSingedTX: \" + Error)});","12":"I implement a VANET project with <python> and I use the <blockchain> in my project .\nNow, I want to simulate my project . which is simulator that I can use it?","13":"I am writing a simple smart contract namely 'inbox.sol'. I am using truffle framework to test and deploy it to the rinkeby network using Infura API. I am having this error. Please help. I'm a beginner.\nThis is deployed contract in migration\nThis is my smart contract code\nerror i got","14":"I am working on a project that requires me to get real time mining difficulty of bitcoin.\nSo I read on this page that explains how to get the mining difficulty from an hash of a block :\nhttps:\/\/en.bitcoin.it\/wiki\/Difficulty\nSo I made this <python> script that collect all hashes from the <blockchain> api between two dates.(https:\/\/www.<blockchain>.com\/api) and calculate mining difficulty from the hashes.\nBut when I plot the result, I have something really different from every other mining difficulty that I saw online. The mining difficulty is really messy as you can see here :\nx= time , y = difficulty\n\nHere is when I apply a np.log to the difficulty:\nx= time , y = np.log(difficulty)\n\nAs you can see, the result is really messy.\nSo I wondered if there is a crypto expert that is able to tell what is wrong with my code of my formula (or maybe if I am right) :)\nHere is my code :\nimport requests, json\nfrom datetime import datetime\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nstart = \"2021-01-01\"#The script start to collect hashes from this date\nend= \"2021-12-01\"#And end at this one\n\ntimestamp_start = datetime.strptime(start, \"%Y-%m-%d\").timestamp()\ntimestamp_end = datetime.strptime(end, \"%Y-%m-%d\").timestamp()\nnew_start = timestamp_start\n\ndatas = pd.DataFrame([], columns = [\"time\", \"difficulty\"])\n\ndec_max_diff = int(\"00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\", 16)#maximum target that is used to calculate mining difficulty\n\nwhile True:\n\n    if new_start > timestamp_end:\n        break\n\n    \n    url = f\"https:\/\/<blockchain>.info\/blocks\/{int(new_start*1000)}?format=json\"\n    response = requests.get(url)#Make a request to the API\n    list_block_adress = json.loads(response.text)#Get a json containing the hash and a timestamp\n    \n\n    for block_adress in list_block_adress:\n\n        dec_hash = int(block_adress[\"hash\"], 16)\n\n        difficulty = dec_max_diff \/ dec_hash #Formula to calculate mining difficulty\n\n        data = pd.DataFrame([[block_adress[\"time\"], difficulty]], columns = [\"time\", \"difficulty\"])\n\n        datas = pd.concat([datas, data])\n\n    new_start += 60*60*24 #For the loop to continue\n\n\n#Sorting and cleaning up the datas\ndatas.sort_values(by='time', inplace= True)\ndatas.drop_duplicates(subset='time', keep=\"first\")\n\n#Ploting the datas\ntimes = pd.to_datetime(datas[\"time\"], unit= \"ms\").to_numpy()\ndifficulties= datas[\"difficulty\"].apply(lambda x: np.log(x)).to_numpy()\nplt.plot(times, difficulties)\nplt.show()","15":"Closed. This question is opinion-based. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                    Want to improve this question? Update the question so it can be answered with facts and citations by editing this post.\n                \n                    \n                        Closed 1 year ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nI am new to <blockchain> and NFT space, but with decentralization at the heart of it. How are NFT marketplaces providing capabilities like Stats and Searching, do we also have any decentralized storage for storing those types of data? I see that the NFT assets can be stored in IPFS, but what about other data to display the stats related to NFT on the marketplace.","16":"I am trying to deploy a smart contract from a webpage. I am using react for frontend and I wrote a smart contract in solidity, but the contract is deployed only when I run the truffle commands in terminal. I want to deploy the contract when the user clicks a button.\nHow can I do that?","17":"I have this network structure and I should do the creation, when I launch the create_network.sh script, I get the following error message:\nerror + create-network\ntree-network pt.1\ntree-network pt.2\ntree-network pt.3\ndocker-compose.yaml (peer)","18":"I have a aws EC2 (EC2-A) and Amazon Managed <blockchain> running in VPC (VPC-A)\n\nThis EC2-A instance has some files and certificates (required for executing <transactions> in the <blockchain>)\nEC2-A has EBS storage which can be mounted on only one EC2 instance at one time.\n<transactions> can be only executed to the <blockchain> network from the EC2-A, since they're are in the same VPC-A.\n\nI have an aws EKS (Kubernetes cluster) running in VPC-B.\nHow can I access the files and certificates of EC2-A from a pod in my k8s cluster. Also I have another pod which will be <blockchain> client executing <transactions> in the <blockchain> network, which is in VPC-A.\nBoth these VPC-A and VPC-B are in the same aws account.","19":"I want to sync data from local node.\nlocal node need to support eth_rpc as \"https:\/\/mainnet.aurora.dev\" did.","20":"hello I need help how to open http:\/\/localhost:8000 from my pc. because my project polkadot substrate installed on a VPS Ubuntu, after I try to open IP:8000 it also doesn't work\nImages","21":"I am trying to write a smart contract for jackpot game which calculates users' rate and randomly selects one user but I am getting \"The called function should be payable if you send value and the value you send should be less than your current balance.\" error when I try to execute sendToWinner() function.\nNote: Please don't mind the logical errors I am aware of the logical errors this is for training my Solidity writing skills.\n\/\/ SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Jackpot {\n    \n    uint256 public pot;\n    mapping (address => uint256) public balances;\n    address[] public participators;\n    address public minter;\n\n    constructor(){\n        minter = msg.sender;\n    }\n\n    function addToPot() public payable {\n        balances[msg.sender] += msg.value;\n        pot += msg.value;\n        participators.push(msg.sender);\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == minter);\n        _;\n    }\n\n    function random() public view returns(uint){\n        return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp)))%100;\n    }\n\n    function sendToWinner() payable public onlyOwner {\n        uint8[100] memory participatorsRates;\n        uint8 rate;\n        uint8 participatorsRatesIndex=0;\n        for(uint8 participatorIndex = 0; participatorIndex<participators.length; participatorIndex++){\n            rate = uint8(balances[participators[participatorIndex]]*100\/pot);\n            for(; participatorIndex<rate ; participatorsRatesIndex++){\n                participatorsRates[participatorsRatesIndex] = participatorIndex;\n            }\n            balances[participators[participatorIndex]]=0;\n        }\n        uint8 winningParticipatorIndex = participatorsRates[random()];\n\n        payable(participators[winningParticipatorIndex]).transfer(pot);\n    }\n\n}","22":"Trying to deploy a program to solana devnet.\nI was using\nsolana program deploy .\/path\/xxxx.so -u devnet\nAnd I got multiple lines of\nmsg 21AbKBwMcsDR4DciR6Z69X6vrqVj7uHKg2Wf1ap8FB1J\nmsg 21AbKBwMcsDR4DciR6Z69X6vrqVj7uHKg2Wf1ap8FB1J\nmsg 21AbKBwMcsDR4DciR6Z69X6vrqVj7uHKg2Wf1ap8FB1J\nmsg 21AbKBwMcsDR4DciR6Z69X6vrqVj7uHKg2Wf1ap8FB1J\nmsg 21AbKBwMcsDR4DciR6Z69X6vrqVj7uHKg2Wf1ap8FB1J\n\nIt gave me this error in the end\nError: Custom: Invalid blockhash\n\nTried search online but didn't get any useful informations","23":"how do I confirm this a solidity line of code ran successfully\nclaimed[msg.sender] = claimed[msg.sender].add(1); \/\/ make sure this goes first before transfer to prevent reentrancy","24":"I am trying to build a web application using uniswap v3 for adding and removing the liquidity. I could able to add liquidity but for removing it I need a token, How to get it from uniswap?","25":"I have not figured out yet how to open NFT minting after specific date. For example, if I deploy my smart contract right now, I want users to be able to mint NFT's starting from 1st January of 2022.\nI came across block.timestamp, but I can't figure out a way how to use it.\nOr would it to be better to just deploy the contract on 1st January?","26":"I will do operations such as writing and transporting data with an ethereum network using Solidity. And no one should see this moved data, so I have to prove the confidentiality of the data with the logs. How can I do this?","27":"const  {<web3>js, myAccount} = require ('.\/utils')\nconst {bytecode} = require ('.\/contractartifact')\n\nasync function deploy() {\n    <web3>js.eth.sendTransaction({\n        from: myAccount.address,\n        data: bytecode,\n        gas: 800\n\n    })\n    .on('receipt', console.log)\n}\n\ndeploy()\n\nError\n\nC:\\Users\\giris\\getter-setter\\deploy.js:9\n<web3>js.eth.sendTransaction({\n^\n\n\nTypeError: Cannot read properties of undefined (reading 'eth')\nat deploy (C:\\Users\\giris\\getter-setter\\deploy.js:9:12)\nat Object. (C:\\Users\\giris\\getter-setter\\deploy.js:19:1)\nat Module._compile (node:internal\/modules\/cjs\/loader:1101:14)\nat Object.Module._extensions..js (node:internal\/modules  \/cjs\/loader:1153:10)\nat Module.load (node:internal\/modules\/cjs\/loader:981:32)\nat Function.Module._load (node:internal\/modules\/cjs\/loader:822:12)\nat Function.executeUserEntryPoint [as runMain] (node:internal\/modules\/run_main:81:12)\nat node:internal\/main\/run_main_module:17:47","28":"function withdraw() public payable {\n  msg.sender.transfer(address(this).balance);\n}\n\nI wrote this code and I got \"ERROR send and transfer are only available for objects of type address payable , not address.\".","29":"I'm requesting to: https:\/\/api.<blockchain>.info\/v2\/receive\/checkgap\nBut the endpoint returns empty json.\n{}\n\nThis is so sudden and is ruining my app. May I know the possible reason why this happened?","30":"I have deployed my ERC721 contract on polygon testnet from owner(ox43b....81). I have created a small node server to interact with my contract through <web3>. I m using truffle config\n\/\/truffle-config.js\npolygon-testnet: {\n  provider: new HDWalletProvider(privateKey, https:\/\/rpc-mumbai.maticvigil.com),\n  network_id: 80001,\n  gas: 6000000,\n  gasPrice: 10000000000,\n  confirmations: 2, \n  timeoutBlocks: 200,\n  skipDryRun: true\n}\n\/\/index.js file\nfunction test(){\nconst owner = await myContract.methods.owner().call()\nconsole.log('contract owner', owner) \/\/ox43b....81\n\n\/\/miniting token\n const mint = await myContract.methods\n      .safeMint(owner,1001, 'google.com')\n      .send({ from: owner, gas: 100000 }) \/\/ is this the write way of calling ??\n\n\/\/token transfer\nconst transfer = await myContract.methods\n      .safeTransferFrom(acc1, acc2, 1003)\n      .send({ from: acc1, gas: 1000000 }) \/\/ is this the write way of calling ??\n}\n\nbcz i m getting err in both function calling: Error: Returned error: unknown account.\n\nNOTE: I am not calling my contract func from truffle console. I m calling through a JS api file index.js\n\nI know there is another way by using <web3>.eth.accounts.signTransaction() to mint & transfer the token.\nQ.1 Is signing is reqd? Can't we access the contract method directly as i did above ?\nQ.2 By using <web3>.eth.accounts.signTransaction() method i can able to mint the tokens successfully but i am facing issue in token transfer (using safeTransferFrom()). There are two cases:\ncase 1: i am transferring the token which is created\/minted by contract owner(ox43b....81) to any other individual user address.\n\n    const fromAddress = 'ox43b....81' \/\/owner of the contract\n    const toAddress = '0x26....7D'\n    const tokenId = 10001 \/\/ created by owner(ox43b....81)\n    const tx = {\n        from: ownerAddress, \/\/ ox43b....81 --> owner who created contract\n        to: contractAddress,\/\/ 0xfe.....24\n        nonce: nonce, \/\/ nonce with the no of <transactions> from our owner address\n        gas: 1000000, \/\/ fee estimate to complete the transaction\n        data: await myContract.methods\n          .safeTransferFrom(fromAddress, toAddress, tokenId)\n          .encodeABI()\n      }\n\/\/ do signing stuff & send it\n\nso in this case i m able to transfer the token successfully.\ncase 2: i am transferring the token which is created\/minted by another(not contract owner) user(0x26....7D) to any other individual user address \/ or to owner.\nconst fromAddress = '0x26....7D' (not the owner of contract)\nconst toAnyAddress = '0x5e....5a' \/\/ any other user\nconst tokenId = 10002 \/\/ created by user '0x26....7D' (not the owner of contract)\nconst nonce = await <web3>.eth.getTransactionCount(fromAddress, 'latest')\nconst tx = {\n    from: fromAddress, \/\/ 0x26....7D -> is this right? or i put contract owner adr? \n    to: contractAddress,\/\/ 0xfe.....24\n    nonce: nonce,\n    gas: 1000000, \/\/ fee estimate to complete the transaction\n    data: await this.myContract.methods\n      .safeTransferFrom(fromAddress, toAnyAddress, tokenId)\n      .encodeABI()\n  }\n\/\/ do signing stuff & send it\n\nso in this case i m getting err - Fail with error 'ERC721: transfer caller is not owner nor approved'.\nI need solution for my case 2. Is there something related with locked\/unlocked accounts? How can i fix it?\nPlease help! Thanks in advance.","31":"Try to sign a transaction and get an Assert error. I don't know what I doing wrong, please help, bitcoin just killing me, I spent a full week on this error. bla bal asd asd sad asd asd asd asd asdas das dasd asd asd asd as da dasd\n\n\nconst sochain_network = 'BTCTEST';\n    const privateKey = this.keys.privateKey; \/\/ efbfd14f3a00e033ba8a6958d27aa6180a0f59992fcca65844dccf5bc1f48c9f\n    const sourceAddress = this.keys.publicKey; \/\/ mjW7yNouLRyxaKudkQUrUTSMd57sJkXYXR\n    const satoshiToSend = Math.trunc(data.amount * 100000000);\n    let fee = 0;\n    let inputCount = 0;\n    let outputCount = 2;\n    const utxos = await axios.get(`https:\/\/sochain.com\/api\/v2\/get_tx_unspent\/${sochain_network}\/${sourceAddress}`);\n    const transaction = new <bitcore>.Transaction();\n    let totalAmountAvailable = 0;\n\n    let inputs: any[] = [];\n    utxos.data.data.txs.forEach(async (element: any) => {\n      let utxo: any = {};\n      utxo.satoshis = Math.floor(Number(element.value) * 100000000);\n      utxo.script = element.script_hex;\n      utxo.address = utxos.data.data.address;\n      utxo.txId = element.txid;\n      utxo.outputIndex = element.output_no;\n      totalAmountAvailable += utxo.satoshis;\n      inputCount += 1;\n      inputs.push(utxo);\n    });\n\n    let <transactions>ize = inputCount * 146 + outputCount * 34 + 10 - inputCount;\n    \/\/ Check if we have enough funds to cover the transaction and the fees assuming we want to pay 20 satoshis per byte\n\n    fee = <transactions>ize * 20;\n\n    if (totalAmountAvailable - satoshiToSend - fee < 0) {\n      throw new Error('Balance is too low for this transaction');\n    }\n\n    \/\/Set transaction input\n    inputs.forEach((input: any) => {\n      transaction.from(input);\n    });\n    console.log(satoshiToSend);\n\n    \/\/ set the recieving address and the amount to send\n    transaction.to(data.receiverAddress, satoshiToSend);\n\n    \/\/ Set change address - Address to receive the left over funds after transfer\n    transaction.change(sourceAddress);\n\n    \/\/manually set transaction fees: 20 satoshis per byte\n    transaction.fee(fee * 20);\n\n    \/\/ Sign transaction with your private key\n    <bitcore>.Networks.defaultNetwork = <bitcore>.Networks.testnet;\n\n    transaction.sign(privateKey);\n\n    \/\/ serialize <transactions>\n    const serializedTransaction = transaction.serialize();\n    console.log(\n      '%cMyProject%cline:214%cserializedTransaction',\n      'color:#fff;background:#ee6f57;padding:3px;border-radius:2px',\n      'color:#fff;background:#1f3c88;padding:3px;border-radius:2px',\n      'color:#fff;background:rgb(3, 38, 58);padding:3px;border-radius:2px',\n      serializedTransaction\n    );\n    \/\/ Send transaction\n    const result = await axios({\n      method: 'POST',\n      url: `https:\/\/sochain.com\/api\/v2\/send_tx\/${sochain_network}`,\n      data: {\n        tx_hex: serializedTransaction,\n      },\n    });\n\n    console.log(result);\n\n    return result.data.data;\n\n\n\nGot. I don't know what I doing wrong. I go through the tutorial (https:\/\/blog.logrocket.com\/sending-bitcoin-with-javascript\/) and get error\n\n\nError: Assertion failed\n    at assert (bn.js?f242:6)\n    at BN.toBuffer (bn.js?f242:529)\n    at Signature.toBuffer.Signature.toDER (signature.js?b47e:169)\n    at PublicKeyHashInput.addSignature (publickeyhash.js?af5e:132)\n    at Transaction.applySignature (transaction.js?0d8b:1220)\n    at eval (transaction.js?0d8b:1189)\n    at arrayEach (lodash.js?f6f6:530)\n    at Function.forEach (lodash.js?f6f6:9410)\n    at Transaction.sign (transaction.js?0d8b:1188)\n    at bitcoinService._callee7$ (Bitcoin.service.ts?39c3:243)","32":"I am unable to disconnect from Metamask account. I am attaching the code snippet.\nexport const logoutUser = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n        window.ethereum.on('accountsChanged', function (accounts) {\n            return () => window.ethereum.removeListener('accountsChanged', accounts);\n        });    \n    }\n}","33":"I need to get the Chainlink prices of a token from a specific time to the most recent round. This time varies based on user input but will be relatively short windows (1 day to 2 weeks max) based on the heartbeat of the token. This is used to calculate the price of a payout both in the smart contract and on the application homepage.\nTo get historical price data Chainlink needs a 'roundId' which is a non-incremental value.\nWhat is the best way to either get all roundIds for the given time window from Chainlink or record them in a way that is open, decentralised and can be accessed in a solidity smart contract?","34":"I tried to use \"peer\" binary to fetch blocks from ledger.\npeer channel fetch 2 --channelID mychannel\n\nHowever these blocks are not in human readable form. Is there a way to decode the blocks to human readable form to view the transaction data?","35":"How do you get the \"estimated gas\" from a \"swapExactETHForTokens\" function? As shown in metamask (before one can accept the purchase)\nBinance Smart Chain (BSC)\nFrom the pancakeswap contract (https:\/\/bscscan.com\/address\/0x10ed43c718714eb63d5aa57b78b54704e256024e#writeContract) in function number 10 you can buy tokens using \"swapExactETHForTokens\" and in function number 14 you can sell tokens using \"swapExactTokens\"\n\nWhen you try to make a transaction when you want to buy or sell and it is not possible to proceed with that, then it appears that the gas fee expense is \"0.3\" or \"0.4\", which indicates that there is an error (and obviously one does not have to accept)\n\nIn this example it is because I try to buy tokens when there is NOT a defined price in the token \/ it has no liquidity in BNB, therefore the 0.3 bnb gas fee is displayed (error)\nI have automated \"buy\" and \"sell\" through a BOT, which, using the functions mentioned above, helps me to carry out these processes. How do I get this value of the \"estimated gas\" as shown in the example in \"Metamask\"? but using <web3> or ethers!\nI tried \"estimateGas\" in ethers, but it returns a normal gas value, and not the same as in the example with metamask of 0.3 bnb\n    let test = async () => {\nconst provider_ = new ethers.providers.WebSocketProvider(data.Wss_Nodo); \/\/Nodo Private\nlet tokenAbi_ = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_txFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_charityFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_FeeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FeeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BURN_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_CHARITY_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isCharity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setAsCharityAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCharity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_charityFee\",\"type\":\"uint256\"}],\"name\":\"updateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];\nconst address_ = \"0x3A7bf1305D0561b4E0363E6a262096c77C7CB5Db\"; \/\/My Wallet Test\nconst erc20 = new ethers.Contract(address_, tokenAbi_, provider_);\n\nconst recipient = \"0x36953b5ec00a13edceceb3af258d034913d2a79d\"; \/\/Token Test\nconst estimation = await erc20.estimateGas.transfer(recipient, 100);\nconsole.log(estimation) \/\/ BigNumber { _hex: '0x5444', _isBigNumber: true } (21572)\n}\n\nObviously I'm doing it wrong :( A help please !!","36":"I am using Moralis for my DApp, after I login with Meatmask. I wonder how to get my registered ENS domain address. From the logged user object, I can not find any useful info.\n  const serverUrl = \"https:\/\/xxxxx\/server\";\n  const appId = \"YOUR_APP_ID\";\n  Moralis.start({ serverUrl, appId });\n\n  \/\/ add from here down\n  async function login() {\n    let user = Moralis.User.current();\n    if (!user) {\n      user = await Moralis.authenticate();\n    }\n    console.log(\"logged in user:\", user);\n    const userEthNFTs = await Moralis.<web3>API.account.getNFTs();\n    console.log(\"====== userEthNFTs: \", userEthNFTs);\n  }\n\nI do see my ENS nft got printed out, but I do not see any \"name\" in it, it only shows:\namount: \"1\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nblock_number: \"13809918\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nblock_number_minted: \"13809918\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\ncontract_type: \"ERC721\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nfrozen: 0\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nis_valid: 0\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nmetadata: null\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nname: \"\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nowner_of: \"0xf...4\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nsymbol: \"\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nsynced_at: null\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\nsyncing: 1\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\ntoken_address: \"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\ntoken_id: \"9215....\"\u00e2\u0080\u008b\u00e2\u0080\u008b\u00e2\u0080\u008b\ntoken_uri: null\n\nI did a little more research on this, and found out ethers.js has lookupAddress function which can do it, but this reverse lookup feature is not supported in <web3>js. However, Moralis only has <web3>js provider, is there any plans to add ethers provider?\nThanks in advance","37":"I was started with brownie and I found out that contracts, for my case it is SimpleStorage, are being imported from brownie itself,\n\nfrom brownie import SimpleStorage\n\nBut thing is that there are no typing suggestions and also import tagged as unknown import. Are there any possible solutions?\nfor reference, I was using vs code and it is set to default <python> language server Pylance.","38":"I have initiated a new private test ganache chain by the following commands.\n>ganache-cli --db .\/db\nThe db folder is newly created folder so its content is completely empty.\nI can see those results from console.\nGanache CLI v6.12.2 (ganache-core: 2.13.2)\neth_blockNumber\neth_blockNumber\n\nAvailable Accounts\n==================\n(0) 0x57d1037Ff1E3649e3d8b39f8d5977cDe7cFFa233 (100 ETH)\n(1) 0xeF60A65e944f0De168EC7ae1E9058bBCC6441682 (100 ETH)\n(2) 0xd68AA0635a6677ca20C7471cB17BD2CC2F81f2d6 (100 ETH)\n(3) 0x2bD8Ab5d71bdbA78D69b4dc9f4d197E0e4C5D80B (100 ETH)\n(4) 0x0a464D9a83889321dfEf3BaF4ffC4344832Ea5c9 (100 ETH)\n(5) 0xE5909D5E1488BCddaABd56fd982032659F84118C (100 ETH)\n(6) 0xc6b5610DF29849315Ab4694b9bFD6a6DBba215B8 (100 ETH)\n(7) 0xcD49EdF273a172B1f852B4c95846d0a3e1D36638 (100 ETH)\n(8) 0xd9c559d713837717f5d35814a55443902302Ee16 (100 ETH)\n(9) 0xbC1e089E03B72c9FA91DeC5fc2d17D8865F6333B (100 ETH)\n\nPrivate Keys\n==================\n(0) 0x9f1ec8b7191984ff76d1743ae0d31123c80e8b4068f293240b34f97a73cf531e\n(1) 0x05c619bedbf5f5d40fa1b9cf8aadd568c49a1d6f4d3b94d605edc59b84db996d\n(2) 0x94dd1c73df460136a90d2d0b0f8bd168aa84c0d0feba55ab5882d1334079841a\n(3) 0x63d10010648e70e192949a824dfba0e0dd36d61482e33e101317a1ba6d03171b\n(4) 0x2ec411ed4307f200e6e9fbf6bf7ac6bf57ee68cbc48eb4b1f5ee9d8ce4aab9b0\n(5) 0xb538d3e3c21692d900a17c2fce637278e50530f0c3553518f0cbe1433a77cdbf\n(6) 0xf629936e0434e33634f54e5a1737e4db7fe3084876eea9d2e9e2af4c263ad898\n(7) 0x2470acc3e6f443d45a9a61cbcc16790e4ea4d151636fe9ea500880cd458eaabd\n(8) 0x42eba3965d6ccfb67b3cd0c233ee393e801e9c9846bc775184b45b5f62c81adf\n(9) 0xaf396c13f47205170bab7bb65db5776602d5ee9a8ff2b3a3947ce994c9b45560\n\nHD Wallet\n==================\nMnemonic:      slow token kind frequent elite poem answer reject okay then cradle motor\nBase HD Path:  m\/44'\/60'\/0'\/0\/{account_index}\n\nGas Price\n==================\n20000000000\n\nGas Limit\n==================\n6721975\n\nCall Gas Limit\n==================\n9007199254740991\n\nListening on 127.0.0.1:8545\n\nBut I found that the above accounts' balances are all 0 ETH from metamask.\nMetamask's target chain was set to localhost:8545 which is ganache's RPC url.\nIt works well with ganache UI but not work properly with ganach-cli.","39":"i'm testing my contracts on hardhat network with fork of BSC.\ni'm deploying my token contract that have mint function:\n\/\/ @dev Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\nfunction mint(address _to, uint256 _amount) public onlyOwner {\n    _mint(_to, _amount);\n    _moveDelegates(address(0), _delegates[_to], _amount);\n}\n\nthen i'm deploying it on test using > npx hardhat test, it will run tests of this code:\n...\nit(\"Should deploy\", async () => {\n        token = await Token.deploy();\n        await token.deployed();\n        console.debug(`\\t\\t\\tToken Contract Address: ${cyan}`, token.address);\n        const supply = await token.totalSupply()\n        console.debug(`\\t\\t\\tToken totalSupply: ${yellow}`, supply);\n        await token.mint(owner.address, <web3>.utils.toWei(\"1000\", 'ether'))\n        console.debug(`\\t\\t\\tToken owner balance: ${cyan}`, token.balanceOf(owner.address));\n });\n ...\n\ntest print the first 2 console debug correctly:\n Token Contract Address: 0x5FbDB2315678afecb367f032d93F642f64180aa3\n Token totalSupply: 0\n\nalso token.totalSupply() works, so the token is deployed correctly, but when it have to call token.mint() it give this error:\n TypeError: token.mint is not a function\n  at Context.<anonymous> (test\/general.js:102:21)\n  at runMicrotasks (<anonymous>)\n  at processTicksAndRejections (internal\/process\/task_queues.js:95:5)\n\ni tried to clean all the artifacts running > npx hardhat clean and delated all the cache, but i still have the error","40":"I have an assumption but I don't know how to prove or falsify it.Please comment if you know:\nThere are M interconnected nodes in a peer-to-peer network. Initially, each node numbers itself with any integer from 1-N, N<=M.\nEach node counts the most occurrences of neighboring nodes, including itself, and modifies its number to that value.\nIf all the numbers occur equally, a non-self number is randomly selected and changed to that number.\nEach node notifies its neighbors when initialization is complete or when the numbering is updated.\nQ:\nCan this rule achieve final agreement on the numbering of all nodes?\nIf so, what is the expected time to reach agreement?","41":"I've been watching a brownie tutorial video by Patrick (fantastic lad). Still, I seem to be getting an error when running a particular function, but the rest of the functions run perfectly. I don't know where I went wrong.\nI've attached the code snippet and the error message\ndef test_can_pick_winner_correctly():\n        # Arrange\n        if network.show_active() not in LOCAL_<blockchain>_ENVIRONMENTS:\n            pytest.skip()\n        lottery = deploy_lottery()\n        account = get_account()\n        lottery.startLottery({\"from\": account})\n        lottery.enter({\"from\": account, \"value\": lottery.getEntranceFee()})\n        lottery.enter({\"from\": get_account(index=1), \"value\": lottery.getEntranceFee()})\n        lottery.enter({\"from\": get_account(index=2), \"value\": lottery.getEntranceFee()})\n        fund_with_link(lottery)\n        starting_balance_of_account = account.balance()\n        balance_of_lottery = lottery.balance()\n        transaction = lottery.endLottery({\"from\": account})\n>       request_id = transaction.events[\"RequestedRandomness\"][\"requestId\"]\nE       brownie.exceptions.EventLookupError: Event 'RequestedRandomness' did not fire.\n\ntests\/test_lottery_uint.py:78: EventLookupError\n------------------------------------------------------- Captured stdout call --------------------------------------------------------\nDeployed lottery!\nFund contract!\n====================================================== short test summary info ======================================================\nFAILED tests\/test_lottery_uint.py::test_can_pick_winner_correctly - brownie.exceptions.EventLookupError: Event 'RequestedRandomnes...\n\nThis the error message, and below is the code snippet that includes the imports and the particular function\n    from scripts.helpful_scripts import (\n        LOCAL_<blockchain>_ENVIRONMENTS,\n        get_account,\n        fund_with_link,\n        get_contract,\n    )\n    from brownie import Lottery, accounts, config, network, exceptions\n    from scripts.deploy_lottery import deploy_lottery\n    from <web3> import <web3>\n    import pytest\n\nThese are the imports and the particular function is below\n def test_can_pick_winner_correctly():\n        # Arrange\n        if network.show_active() not in LOCAL_<blockchain>_ENVIRONMENTS:\n            pytest.skip()\n        lottery = deploy_lottery()\n        account = get_account()\n        lottery.startLottery({\"from\": account})\n        lottery.enter({\"from\": account, \"value\": lottery.getEntranceFee()})\n        lottery.enter({\"from\": get_account(index=1), \"value\": lottery.getEntranceFee()})\n        lottery.enter({\"from\": get_account(index=2), \"value\": lottery.getEntranceFee()})\n        fund_with_link(lottery)\n        starting_balance_of_account = account.balance()\n        balance_of_lottery = lottery.balance()\n        transaction = lottery.endLottery({\"from\": account})\n        request_id = transaction.events[\"RequestedRandomness\"][\"requestId\"]\n        STATIC_RNG = 777\n        get_contract(\"vrf_coordinator\").callBackWithRandomness(\n            request_id, STATIC_RNG, lottery.address, {\"from\": account}\n        )\n        # 777 % 3 = 0\n        assert lottery.recentWinner() == account\n        assert lottery.balance() == 0\n        assert account.balance() == starting_balance_of_account + balance_of_lottery'","42":"I'm trying to make an ICO for my Token.\nI wrote the code and its worked.\nThe problem is I can only buy coins with ETH but I want to launch my token in the BEP20 network so people will need to send BNB to the contract to get the token.\nBecause of this will be the private ICO I dont want to do with 3rd party sites.\nCan someone help me?\nHere is my code:\npragma solidity >=0.5.0 <0.9.0;\n\/\/ ----------------------------------------------------------------------------\n\ninterface ERC20Interface {\n    function totalSupply() external view returns (uint);\n    function balanceOf(address tokenOwner) external view returns (uint balance);\n    function transfer(address to, uint tokens) external returns (bool success);\n    \n    function allowance(address tokenOwner, address spender) external view returns (uint remaining);\n    function approve(address spender, uint tokens) external returns (bool success);\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    \n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\n\n\/\/ The Cryptos Token Contract\ncontract Cryptos is ERC20Interface{\n    string public name = \"Cryptos\";\n    string public symbol = \"CRPT\";\n    uint public decimals = 0;\n    uint public override totalSupply;\n    \n    address public founder;\n    mapping(address => uint) public balances;\n    \/\/ balances[0x1111...] = 100;\n    \n    mapping(address => mapping(address => uint)) allowed;\n    \/\/ allowed[0x111][0x222] = 100;\n    \n    \n    constructor(){\n        totalSupply = 1000000;\n        founder = msg.sender;\n        balances[founder] = totalSupply;\n    }\n    \n    \n    function balanceOf(address tokenOwner) public view override returns (uint balance){\n        return balances[tokenOwner];\n    }\n    \n    \n    function transfer(address to, uint tokens) public virtual override returns(bool success){\n        require(balances[msg.sender] >= tokens);\n        \n        balances[to] += tokens;\n        balances[msg.sender] -= tokens;\n        emit Transfer(msg.sender, to, tokens);\n        \n        return true;\n    }\n    \n    \n    function allowance(address tokenOwner, address spender) public view override returns(uint){\n        return allowed[tokenOwner][spender];\n    }\n    \n    \n    function approve(address spender, uint tokens) public override returns (bool success){\n        require(balances[msg.sender] >= tokens);\n        require(tokens > 0);\n        \n        allowed[msg.sender][spender] = tokens;\n        \n        emit Approval(msg.sender, spender, tokens);\n        return true;\n    }\n    \n    \n    function transferFrom(address from, address to, uint tokens) public virtual override returns (bool success){\n         require(allowed[from][to] >= tokens);\n         require(balances[from] >= tokens);\n         \n         balances[from] -= tokens;\n         balances[to] += tokens;\n         allowed[from][to] -= tokens;\n         \n         return true;\n     }\n}\n\n\ncontract CryptosICO is Cryptos{\n    address public admin;\n    address payable public deposit;\n    uint tokenPrice = 50000000000000000 ;  \/\/ 1 ETH = 1000 CRTP, 1 CRPT = 0.001\n    uint public hardCap = 3000000000000000000000000000000 ;\n    uint public raisedAmount; \/\/ this value will be in wei\n    uint public saleStart = block.timestamp;\n    uint public saleEnd = block.timestamp + 604800; \/\/one week\n    \n    uint public tokenTradeStart = saleEnd + 604800; \/\/transferable in a week after saleEnd\n    uint public maxInvestment = 5000000000000000000000000000 ;\n    uint public minInvestment = 1;\n    \n    enum State { beforeStart, running, afterEnd, halted} \/\/ ICO states \n    State public icoState;\n    \n    constructor(address payable _deposit){\n        deposit = _deposit; \n        admin = msg.sender; \n        icoState = State.beforeStart;\n    }\n\n    \n    modifier onlyAdmin(){\n        require(msg.sender == admin);\n        _;\n    }\n    \n    \n    \/\/ emergency stop\n    function halt() public onlyAdmin{\n        icoState = State.halted;\n    }\n    \n    \n    function resume() public onlyAdmin{\n        icoState = State.running;\n    }\n    \n    \n    function changeDepositAddress(address payable newDeposit) public onlyAdmin{\n        deposit = newDeposit;\n    }\n    \n    \n    function getCurrentState() public view returns(State){\n        if(icoState == State.halted){\n            return State.halted;\n        }else if(block.timestamp < saleStart){\n            return State.beforeStart;\n        }else if(block.timestamp >= saleStart && block.timestamp <= saleEnd){\n            return State.running;\n        }else{\n            return State.afterEnd;\n        }\n    }\n\n\n    event Invest(address investor, uint value, uint tokens);\n    \n    \n    \/\/ function called when sending eth to the contract\n    function invest() payable public returns(bool){ \n        icoState = getCurrentState();\n        require(icoState == State.running);\n        require(msg.value >= minInvestment && msg.value <= maxInvestment);\n        \n        raisedAmount += msg.value;\n        require(raisedAmount <= hardCap);\n        \n        uint tokens = msg.value \/ tokenPrice;\n\n        \/\/ adding tokens to the inverstor's balance from the founder's balance\n        balances[msg.sender] += tokens;\n        balances[founder] -= tokens; \n        deposit.transfer(msg.value); \/\/ transfering the value sent to the ICO to the deposit address\n        \n        emit Invest(msg.sender, msg.value, tokens);\n        \n        return true;\n    }\n   \n   \n   \/\/ this function is called automatically when someone sends ETH to the contract's address\n   receive () payable external{\n        invest();\n    }\n  \n    \n    \/\/ burning unsold tokens\n    function burn() public returns(bool){\n        icoState = getCurrentState();\n        require(icoState == State.afterEnd);\n        balances[founder] = 0;\n        return true;\n        \n    }\n    \n    \n    function transfer(address to, uint tokens) public override returns (bool success){\n        require(block.timestamp > tokenTradeStart); \/\/ the token will be transferable only after tokenTradeStart\n        \n        \/\/ calling the transfer function of the base contract\n        super.transfer(to, tokens);  \/\/ same as Cryptos.transfer(to, tokens);\n        return true;\n    }\n    \n    \n    function transferFrom(address from, address to, uint tokens) public override returns (bool success){\n        require(block.timestamp > tokenTradeStart); \/\/ the token will be transferable only after tokenTradeStart\n       \n        Cryptos.transferFrom(from, to, tokens);  \/\/ same as super.transferFrom(to, tokens);\n        return true;\n     \n    }\n}","43":"Data in a <blockchain> is hashed by sha256 so when the data is modified by bad actors so is the hash, this is what secures a <blockchain> so why is POW necessary?\nI understand the double spending problem but couldn\u00e2\u0080\u0099t you just include time stamps in that hash, so where would POW come into play?","44":"I want to create a dex website with solidity, <web3>, tronweb, and nodejs .\nnow I have a question about the transfer token in TRC-20 and ERC-20 network.\nOn my website use can deposit wallets from another site like bianance , coinbase , . . .  and I create a TRC-20 or ERC-20\nwallet address for he\/she.\nin both networks exists many tokens now my question is this, how can I know the user sent or receive which token?\nmaybe users wants to send ADA token from another websites like binance on my website.\ni create a ERC-20 wallet address for user like this 0x5226a51522C23CcBEFd04a2d4C6c8e281eD1d680 ,\nuser enter this address in the binance and send some ADA token to his wallet in my website .\nnow how can I know this token is ADA, USDT, or something else?","45":"According to openSea api we use Retrieving events\nUnder event_type We found The event type to filter. Can be created for new auctions, successful for sales, cancelled, bid_entered, bid_withdrawn, transfer, or approve\nMy question here is how to find minted ones ?\nIE: This wallet  Unnamed minted this token : Vortex #838\nMy Goal is to get list of all NFT's minted by specific user.","46":"Etherium 2.0 and NEAR seem to be very similar in a lot of ways. Can someone detail out what the difference between the two?","47":"In a solidity method, there is a require statement which is being failed and transaction in <web3>j is throwing error as \"Gas value is not enough\".\nExample: require(providedtimestamp > block.timestamp, \"release time is before current time\");\nBut in <transactions> from Etherscan, the error message is correctly displayed. Example: https:\/\/rinkeby.etherscan.io\/tx\/0x2ed757feef430f1695dcbbad8d13ee8df5ba630409465dbf82688dc5543dc52e\nHow to catch this error message during the method call using <web3>j.","48":"I have a <node.js> server where I am listening for an event that is emitted from a Solidity smart contract deployed on the Mumbai Polygon testnet.\nFirst, I'm using the \"<web3>-providers-ws\" node package to create a provider, using keepalive and reconnection options:\nlet providerNetworkUrl;\nlet ccggContractAddress;\n\nif (process.env.TESTNET === 'true') {\n\n  console.log('using mumbai URLs')\n  \/\/ on mumbai\n  ccggContractAddress = process.env.CCGG_ADDRESS_MUMBAI_TESTNET;\n  providerNetworkUrl = 'wss:\/\/polygon-mumbai.g.alchemy.com\/v2\/';\n} else {\n  \/\/ on polygon mainnet\n  ccggContractAddress = process.env.CCGG_ADDRESS_POLYGON_MAINNET;\n  providerNetworkUrl = 'wss:\/\/polygon-mumbai.g.alchemy.com\/v2\/';\n}\n\nconst connectionUrl = providerNetworkUrl + process.env.alchemyApiKey;\nconsole.log('connectionUrl: ', connectionUrl)\n\n\/\/ Enable auto reconnection\nconst options = {\n\n  clientConfig: {\n    \/\/ Useful to keep a connection alive\n    keepalive: true,\n    keepaliveInterval: 20 * 60 * 60 * 1000 \/\/ keep alive for 20 min\n  },\n\n  \/\/ Enable auto reconnection\n  reconnect: {\n    auto: true,\n    delay: 1000, \/\/ ms\n    maxAttempts: 10,\n    onTimeout: false\n  }\n};\n\nlet provider = new ethers.providers.WebSocketProvider(\n  new <web3>WsProvider(connectionUrl, options))\n\nprovider.on('end', (e) => {\n  console.log('provider ended: ' + e);\n})\n\nprovider.on('error', (e) => {\n  console.log('provider errored: ' + e);\n})\n\nThen I'm using ethers.js to connect to the smart contract.\nconst wallet = new ethers.Wallet(process.env.PRIVATE_WALLET_KEY, provider)\nconsole.log('my address (wallet): ', wallet.address)\n\nconst signer = wallet.connect(provider)\n\nconst ccggContract = new ethers.Contract(\n  ccggContractAddress,\n  ccggAbi,\n  signer\n)\n\nThen finally I set up the listener for the \"GuessSubmitted\" event.\nccggContract.on('GuessSubmitted', async (guess, sender, betSize) => {\n\n  console.log('GuessSubmitted')\n\n})\n\nThe strange thing is that it all works great when I first start it up. The node server hears the events, logs \"GuessSubmitted\", and handles the event.\nHowever, after a few hours, or overnight, I then go to play the game, the events are dispatched in Solidity, but the node server doesn't hear anything!!! what??\nAfter looking at some other posts on the internet I even set up this ping function to keep the websocket connection alive, and I'm invoking it every 15 min:\nasync function ping() {\n\n  const now = new Date();\n\n  try {\n    console.log('Sending a ping! ' + now.toUTCString());\n    const blockNum = await provider.send('eth_blockNumber');\n    console.log('Got blocknum: ', blockNum);\n  }\n  catch (err) {\n    console.log('PING ERROR')\n    console.log(err)\n  }\n\n}\n\n\/\/ ping every 15 min\nsetInterval(ping, 1000 * 60 * 15);\n\nconsole.log('provider created.')\n\nThe strange thing is that the connection doesn't seem to actually drop. I never see any \"provider errored\" or \"provider ended\" in the logs.\nThe logs look like this, with the ping going through fine every 15 min while never hearing any \"GuessSubmitted\" events anymore!! \u00f0\u009f\u0098\u00a2\nI thought the issue could be with my eth connection provider, but I've tried now with Alchemy, Infura, and GetBlock!! This \"stops hearing events\" issue happens with all three so I am wondering what could possibly be the problem, if it is some underlying bug in the ethereum platform or if I am making some mistake in the code...\nThanks!","49":"I'm trying to modify the block structure for a <blockchain> based on Substrate that I'm trying to develop. In particular I would like to add a vector in the header and another one inside the body of the block. Does someone know how it is possible to do that?\nI'm a newbie in Substrate :'(\nThanks in advance to everyone who will contribute!","50":"I've made a decentralized node network using WebSockets with use of Nodejs. I would like to visualize this network with a graph. To visualize the whole network I need all nodes connected to each other, but there is a problem - in the decentralized network there is no central point. How I can get all connected nodes from any node? Let's say we have a connection:\nA <-> B <-> C\n\npicture of the network\nLike you can see now you can visualize the network from B, but what about visualizing the network from A, C?\nHow A know about C while drawing graphs? Should I also attach peers of connected nodes ( all peers of B) and then all nodes of next nodes - C? What would be the best way to get all peers connected to each other? Thanks for any tips.","51":"I have set up <geth> and created some account with no balance in them. So I cannot make any transaction as it costs Gas fee. How to create account with some initial balance so that I can test my contracts.\nI have created account using the following command:\n    > personal.newAccount()","52":"Here is a link to a screenshot of the code as i couldnt figure out the formatting.\nhttps:\/\/i.imgur.com\/yiHFkon.png\n\nand a shot of the error:\n\n\n(venv) PS C:\\Users\\usuario\\pyblock> py\n<python> 3.10.1 (tags\/v3.10.1:2cd268a, Dec  6 2021, 19:10:37) [MSC v.1929 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from deploy import *\n>>> deploy_contract(7,10,os.environ['ADDRESS_1'],os.environ['PRIVATE_KEY_1']) \nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:\\Users\\usuario\\pyblock\\deploy.py\", line 27, in deploy_contract\n    deployment = guess_number.constructor(secret_number).buildTransaction(transaction_body)\n  File \"C:\\Users\\usuario\\pyblock\\venv\\lib\\site-packages\\eth_utils\\decorators.py\", line 18, in _wrapper\n    return self.method(obj, *args, **kwargs)\n  File \"C:\\Users\\usuario\\pyblock\\venv\\lib\\site-packages\\<web3>\\contract.py\", line 684, in buildTransaction\n    return fill_transaction_defaults(self.<web3>, built_transaction)\n  File \"cytoolz\/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n    return self.func(*args, **kwargs)\n  File \"C:\\Users\\usuario\\pyblock\\venv\\lib\\site-packages\\<web3>\\_utils\\<transactions>.py\", line 121, in fill_transaction_defaults\n    default_val = default_getter(<web3>, transaction)\n  File \"C:\\Users\\usuario\\pyblock\\venv\\lib\\site-packages\\<web3>\\_utils\\<transactions>.py\", line 71, in <lambda>\n    <web3>.eth.max_priority_fee + (2 * <web3>.eth.get_block('latest')['baseFeePerGas'])\n  File \"C:\\Users\\usuario\\pyblock\\venv\\lib\\site-packages\\<web3>\\eth.py\", line 549, in max_priority_fee\n    return self._max_priority_fee()\n  File \"C:\\Users\\usuario\\pyblock\\venv\\lib\\site-packages\\<web3>\\module.py\", line 57, in caller\n    result = w3.manager.request_blocking(method_str,\n  File \"C:\\Users\\usuario\\pyblock\\venv\\lib\\site-packages\\<web3>\\manager.py\", line 198, in request_blocking\n    return self.formatted_response(response,\n  File \"C:\\Users\\usuario\\pyblock\\venv\\lib\\site-packages\\<web3>\\manager.py\", line 171, in formatted_response\n    raise ValueError(response[\"error\"])\nValueError: {'message': 'Method eth_maxPriorityFeePerGas not supported.', 'code': -32000, 'data': {'stack': 'Error: Method eth_maxPriorityFeePerGas not supported.\\n    at <geth>ApiDouble.handleRequest (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\lib\\\\subproviders\\\\<geth>_api_double.js:70:16)\\n    at next (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\index.js:136:18)\\n    at <geth>Defaults.handleRequest (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\lib\\\\subproviders\\\\<geth>defaults.js:15:12)\\n    at next (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\index.js:136:18)\\n  \n  at SubscriptionSubprovider.FilterSubprovider.handleRequest (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\subproviders\\\\filters.js:89:7)\\n    at SubscriptionSubprovider.handleRequest (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\subproviders\\\\subscriptions.js:137:49)\\n    at next (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\index.js:136:18)\\n    at DelayedBlockFilter.handleRequest (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\lib\\\\subproviders\\\\delayedblockfilter.js:31:3)\\n    at next (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\index.js:136:18)\\n    at RequestFunnel.handleRequest (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\lib\\\\subproviders\\\\requestfunnel.js:32:12)\\n    at next (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\index.js:136:18)\\n    at <web3>ProviderEngine._handleAsync (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\index.js:123:3)\\n    at Timeout._onTimeout (C:\\\\Program Files\\\\WindowsApps\\\\GanacheUI_2.5.4.0_x64__5dg5pnz03psnj\\\\app\\\\resources\\\\static\\\\node\\\\node_modules\\\\ganache-core\\\\node_modules\\\\<web3>-provider-engine\\\\index.js:107:12)\\n    at listOnTimeout (internal\/timers.js:531:17)\\n    at processTimers (internal\/timers.js:475:7)', 'name': 'Error'}}","53":"I have just started coding and it seems that there is something missing in the code, this is a compiled code. the error message that it gives me after running <python> deploy.py\nI checked it many times but still has the same error.\nthe code is from a lesson I am working on in this link:\nhttps:\/\/github.com\/PatrickAlphaC\/<web3>_py_simple_storage\nThe code in this link: https:\/\/github.com\/PatrickAlphaC\/<web3>_py_simple_storage\/blob\/main\/deploy.py\nhere's the code and the error message, thank you so much in advance :)\nCode:\nfrom solcx import compile_standard\n\nwith open(\"SimpleStorage.sol\", \"r\") as file:\n    simple_storage_file = file.read()\n\ncompiled_sol = compile_standard(\n    {\n        \"language\": \"solidity\",\n        \"sources\": {\"simpleStorage.sol\": {\"content\": simple_storage_file}},\n        \"settings\": {\n            \"outputSelection\": {\n                \"*\": {\"*\": [\"abi\", \"metadata\", \"evm.bytecode\", \"evm.sourceMap\"]}\n            }\n        },\n    },\n    solc_version=\"0.6.0\",\n)\n\nprint(compiled_sol)\n\nError:\nINFO: Could not find files for the given pattern(s).\nTraceback (most recent call last):\n  File \"C:\\Users\\user\\<web3>_py_simple_storage\\deploy.py\", line 8, in <module>\n    compiled_sol = compile_standard(\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\solcx\\main.py\", line 394, in compile_standard\n    raise SolcError(\nsolcx.exceptions.SolcError: Only \"Solidity\" or \"Yul\" is supported as a language.\n\ncommand: `C:\\Users\\user\\.solcx\\solc-v0.6.0\\solc.exe --standard-json`\nreturn code: `0`\nstdout:\n{\"errors\":[{\"component\":\"general\",\"formattedMessage\":\"Only \\\"Solidity\\\" or \\\"Yul\\\" is supported as a language.\",\"message\":\"Only \\\"Solidity\\\" or \\\"Yul\\\" is supported as a language.\",\"severity\":\"error\",\"type\":\"JSONError\"}]}","54":"I need to interact with <blockchain> network by API (by <python>)? but I have few problems with it.\nI have rpcuser, rpcpassword, ip, and port of rpc; api endpoint; and network such as wif_prefix_hex=, address_prefix_hex=, pay_to_script_prefix_hex= and so on. I tried to interact with it by following:\nserverURL = rpcUser + ':' + rpcPassword + '@' + rpcIP + ':' + rpcPort\nrequests.post(serverURL, json={'method': 'getnewaddress'}, )\n\nBut I get:\nrequests.exceptions.InvalidSchema: No connection adapters were found for\n\nHow can I solve this?","55":"In BSC (Binance Smart Chain) contracts I often meet a signature parameter but I have no idea where to get it.\nIf you think that it is a signature message which you need to sign with Metamask - it's not. It's just a one of parameters of the function I need to run.\nExample can be found there, just look at the purchase function and you'll see signature as a last parameter - https:\/\/bscscan.com\/address\/0xabc306ae80595f6c7748b81d6c2efc48b32a9e22#writeContract","56":"importError: dlopen(\/Users\/...\/.local\/pipx\/venvs\/eth-brownie\/lib\/<python>3.10\/site-packages\/cytoolz\/functoolz.c<python>-310-darwin.so, 2): Symbol not found: __PyGen_Send\nReferenced from: \/Users\/...\/.local\/pipx\/venvs\/eth-brownie\/lib\/<python>3.10\/site-packages\/cytoolz\/functoolz.c<python>-310-darwin.so\nExpected in: flat namespace\nin \/Users\/...\/.local\/pipx\/venvs\/eth-brownie\/lib\/<python>3.10\/site-packages\/cytoolz\/functoolz.c<python>-310-darwin.so\nI tried pip uninstall recordclass and re-install it but couldn't fix the problem.","57":"I would like some assistance in interpreting the transaction steps from this flash loan.  Obviously this was executed due to a % gain analysis.  Can we determine from the actions, what is the % difference\/gain and the actual profit, then deducting the transaction and gas fees?\nhttps:\/\/etherscan.io\/tx\/0x364d7b9c32c8b5eb6bc93a8f838b56a2ee9e64b984adf2c4809e9a5566fdefa2","58":"Can anyone understand how this guy sent the transaction without fees\nhttps:\/\/bscscan.com\/tx\/0x96d769ddb8725ded79eaf89e1a240948aa4b036e8188b8678298c19851407fdc","59":"Hello!\nHelp me please.\nI have just created own\ntokens on bsc testnet via PancakeFactory.\nThen I created liquidity pool with these tokens.\nI minted tokens and I want approve\nthis tokens to PancakeRouter\nand add liquidity in this pool.\nYou see my code below:\n\ndef approves(w3, token_contract, router_contract, my_account, my_pk):\n    allowance_value = token_contract.functions.allowance(\n        my_account, router_contract.address).call()\n    print('allowance_value: ', allowance_value)\n    if allowance_value <= 1000000000000000:\n        approve_est_gas = token_contract.functions.approve(\n            router_contract.address,\n            10000\n        ).estimateGas(\n            {\n                'from': my_account,\n                'nonce': w3.eth.get_transaction_count(my_account)\n            }\n        )\n\n        approve_tx_builder = token_contract.functions.approve(\n            router_contract.address,\n            10000\n        ).buildTransaction(\n            {\n                'from': my_account,\n                'nonce': w3.eth.get_transaction_count(my_account),\n                'gas': approve_est_gas\n            }\n        )\n\n        signed_tx = w3.eth.account.sign_transaction(approve_tx_builder, my_pk)\n        tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)\n        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)\n        print('tx_hash: ', tx_receipt['transactionHash'].hex())\n        print('tx_hash: ', tx_receipt['status'])\n\n\n\nI always received this mistake:\n\nraise ContractLogicError('execution reverted')\n<web3>.exceptions.ContractLogicError: execution reverted","60":"I have two parties (A and B).\nA sends to B a Corda State using SignTransactionFlow, so also obtains the counterparty signature for that transaction.\nIs it possibile to share a Corda State without using a SignTransactionFlow but using a sendAndReceive calls?\nIf so, will the counterparty receiving a Corda State through sendAndReceive be able to consume that state?","61":"is it possible to get portfolio balance data from any Coinbase account using only email or without using coinbase api.\nplease help me. i need this method to make an software . that help me to show my . all account balances without any api.","62":"I found this quickstart guide on how to do it locally. But there is no information about on how I can deploy my smartcontract to devnet or mainnet.\nSo I changed endpoint:\nconst client = new TonClient({\n    network: {\n        endpoints: [\"https:\/\/net.ton.dev\"]\n    }\n})\n\nAccording to comment, I removed useGiver:\n\/\/ Request contract deployment funds form a local TON OS SE giver\n\/\/ not suitable for other networks.\n\/\/ Deploy `hello` contract.\nawait helloAcc.deploy(\/*{ useGiver: true }*\/);\n\nAnd got this this error message:\nAccount does not exist. You need to transfer funds to this account first to have a positive balance and then deploy its code\n\nHow do I fund my account, is there any automatic method like airdrop?","63":"Due to security advantages through chaining of blocks and public key encryption, Is it possible to implement a transaction abort in <blockchain>s?","64":"I'm attempting to build a smart contract where you can send me a wave on the Eth <blockchain>, though every time I call the smart contract from the front-end. But I get a error every time I call the contract.\nJavascript Code Below:\nconst  App = () => {\n\n  const [currentAccount, setCurrentAccount] = useState(\"\")\n  const contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"\n  const contractABI = abi.abi\n\nconst checkIfWalletConnected = async () => { \n  let <web3>\n  try { \n    const {ethereum} = window; \n\nif(!ethereum) { \n  window.alert(\"Make sure you have metamask !\");\n  return;\n}else {\n  <web3> = new <web3>(window.ethereum)\n  console.log(\"We have the ethereum object\", ethereum)}\n\nconst accounts = await ethereum.request({method: 'eth_accounts'})\n  if(accounts.length !== 0) { \n    const account = accounts[0]\n  \n    console.log(\"Found an Authorized account:\", account, );\n    setCurrentAccount(account)\n\n  } else { \n    window.alert(\"NO authorized account found\")\n  }\n\n\n  const EthBalance = await <web3>.eth.getBalance(accounts[0])\n  console.log(EthBalance)\n\n\n\n\n\n\n }catch(err) {console.log(err)}\n  \n}\n \n\nSolidity Code:\nimport 'hardhat\/console.sol';\n\ncontract WavePort { \n\/\/TrackWaves\nuint totalWaves; \/\/State Variable, Permanetly Stored In Contract Storage\n\nconstructor() {\n    console.log(\"Yo, I am I contract\");\n    }\n\n\n\/\/Function Increments Waves On The <blockchain>\/ Immutable Never Decreasing \nfunction wave() public { \n    totalWaves += 1;\n    console.log(\"%s has waved!\", msg.sender);\n}\n\n\/\/Function Returns Us the The Total Waves To Be Viewed\nfunction getTotalWaves()public view returns(uint256) { \n    console.log(\"We have %d total waves\", totalWaves);\n    return totalWaves;\n}\n                \n\n}\ninpage.js:1 MetaMask - RPC Error: execution reverted {code: -32000, message: 'execution reverted'}\n(anonymous) @ inpage.js:1\n(anonymous) @ inpage.js:17\n_runReturnHandlers @ inpage.js:17\n_processRequest @ inpage.js:17\nawait in _processRequest (async)\n_handle @ inpage.js:17\nhandle @ inpage.js:17\n_rpcRequest @ inpage.js:1\n(anonymous) @ inpage.js:1\nrequest @ inpage.js:1\n(anonymous) @ <web3>-provider.ts:96\nsend @ <web3>-provider.ts:169\n(anonymous) @ json-rpc-provider.ts:560\n(anonymous) @ json-rpc-provider.ts:2\npush..\/node_modules\/@ethersproject\/providers\/lib.esm\/json-rpc-provider.js.__awaiter @ json-rpc-provider.ts:2\nperform @ json-rpc-provider.ts:535\n(anonymous) @ base-provider.ts:1405\nfulfilled @ base-provider.ts:2\nPromise.then (async)\nstep @ base-provider.ts:2\nfulfilled @ base-provider.ts:2\nPromise.then (async)\nstep @ base-provider.ts:2\n(anonymous) @ base-provider.ts:2\npush..\/node_modules\/@ethersproject\/providers\/lib.esm\/base-provider.js.__awaiter @ base-provider.ts:2\ncall @ base-provider.ts:1398\n(anonymous) @ index.ts:118\nfulfilled @ index.ts:2\nPromise.then (async)\nstep @ index.ts:2\n(anonymous) @ index.ts:2\npush..\/node_modules\/@ethersproject\/abstract-signer\/lib.esm\/index.js.__awaiter @ index.ts:2\ncall @ index.ts:115\n(anonymous) @ index.ts:389\nfulfilled @ index.ts:2\nPromise.then (async)\nstep @ index.ts:2\n(anonymous) @ index.ts:2\npush..\/node_modules\/@ethersproject\/contracts\/lib.esm\/index.js.__awaiter @ index.ts:2\n(anonymous) @ index.ts:371\nwave @ App.js:101\ncallCallback @ react-dom.development.js:3945\ninvokeGuardedCallbackDev @ react-dom.development.js:3994\ninvokeGuardedCallback @ react-dom.development.js:4056\ninvokeGuardedCallbackAndCatchFirstError @ react-dom.development.js:4070\nexecuteDispatch @ react-dom.development.js:8243\nprocessDispatchQueueItemsInOrder @ react-dom.development.js:8275\nprocessDispatchQueue @ react-dom.development.js:8288\ndispatchEventsForPlugins @ react-dom.development.js:8299\n(anonymous) @ react-dom.development.js:8508\nbatchedEventUpdates$1 @ react-dom.development.js:22396\nbatchedEventUpdates @ react-dom.development.js:3745\ndispatchEventForPluginEventSystem @ react-dom.development.js:8507\nattemptToDispatchEvent @ react-dom.development.js:6005\ndispatchEvent @ react-dom.development.js:5924\nunstable_runWithPriority @ scheduler.development.js:468\nrunWithPriority$1 @ react-dom.development.js:11276\ndiscreteUpdates$1 @ react-dom.development.js:22413\ndiscreteUpdates @ react-dom.development.js:3756\ndispatchDiscreteEvent @ react-dom.development.js:5889\nApp.js:120 Error: cannot estimate gas; transaction may fail or may require manual gas limit (error={\"code\":-32000,\"message\":\"execution reverted\"}, method=\"call\", transaction={\"from\":\"0xD49a9a33F180D1e35A30F0ae2Dbfe5716a740Ebc\",\"to\":\"0x5FbDB2315678afecb367f032d93F642f64180aa3\",\"data\":\"0x9a2cdc08\",\"accessList\":null}, code=UNPREDICTABLE_GAS_LIMIT, version=providers\/5.5.1)\n\n    Error: cannot estimate gas; transaction may fail or may require manual gas limit (error={\"code\":-32000,\"message\":\"execution reverted\"}, method=\"call\", transaction={\"from\":\"0xD49a9a33F180D1e35A30F0ae2Dbfe5716a740Ebc\",\"to\":\"0x5FbDB2315678afecb367f032d93F642f64180aa3\",\"data\":\"0x9a2cdc08\",\"accessList\":null}, code=UNPREDICTABLE_GAS_LIMIT, version=providers\/5.5.1) \n\nI thought made adding a set gas and gasPricelimit would work.\nmodule.exports = {\n  solidity: \"0.8.4\",\n  networks: {\n    rinkeby: {\n      url: \"My_URL\",\n      accounts: ['PrivateKey'],\n      gas: 21000000,\n      gasPrice: 80000000000\n    }\n  }\n};\n\nI tried adding gas and a gasPrice limit, but to no avail? Any suggestions?","65":"I need to get token holders count from contract without scraping... I tried many ways but unfortunately I was unsuccessful. How can I get it dynamically? (By the way I'm using c# and Nethereum sdk).","66":"is it possible to know for which price user is buying\/selling token on transfer function call?\nI want to store information on the contract for with user bought\/sold tokens on the transfer function.","67":"I am trying to implement a github project based on electronic medical records but I am facing issue on last step while executing docker \"docker compose up -d\" in dir. Downloads\/EHR\/explorer where docker compose is residing the issue is this file is executing successfully but its not displaying any server URL for accessing project's front-end.\nattach is the link to project. command error\nhttps:\/\/github.com\/Zzocker\/EHR-on-<blockchain>","68":"I know that 51% is the minimum percentage for confirming nodes for consensus.\nHowever, in ETH for example:\nETH 2.0 staking has breached 200,000 validators\nBut I was able to sell ETH when I get 15 nodes (or around that number) confirmation.\nSo number of validations to commit my transaction was way less than 51% of 200K.\nCan someone please explain to me what I'm getting wrong.","69":"I wonder if anyone has successfully requested ether on https:\/\/faucet.rinkeby.io\/? I followed the instruction and it kept saying Faucet offline. Any workaround for this? or then will it be fixed? just need to some eth to test :(\nThank you\nenter image description here","70":"I am trying to build a bot that listens to events on AMMs for various chains and I am running into issues when trying to build out my algorithm for the avalanche network. When calling the getLogs function for a particular event, the program will randomly crash with the following error\nValueError: {'code': -32000, 'message': 'requested to block ... after last accepted block ...'}\n\nMy program is only ever retrieves logs up to the latest block so I am not sure why this error is occurring (I assume it has something to do with the way avax nodes reach consensus).\nHow can I verify if a block is accepted prior to running getLogs?","71":"Development is a full - stack NFT marketplace. The contract .sol scope is primarily to allow users the ability to purchase clusters of pixels each representing an NFT - image for reference. Question lies in how to connect the NFT contracts and the frontend of the image as a world map.\nIdentical project\nhttps:\/\/pixel.inc\/\nhttps:\/\/github.com\/boringcrypto\/pixel\nSummary of what I am attempting to achieve:\nThe exact same thing, only  that the map is in this shape\n\nConsiderations\n\nCreate a React frontend that looks like the map image and connect the NFTs from the .sol - but how would this work?\nBuild the UI from the smart contract itself.\n\nCant find a satisfactory answer yet, I will appreciate any help. Thanks!","72":"i am getting this is undefined at BN while making RPC request to a function in solana smart contract\n'''\nlet token1Amount = BN(token1_amount);\nlet token2Amount = BN(token2_amount)\n  const add_liquidity = await router_program.rpc.addLiquidity(\n    token1Amount,\n    token2Amount,\n    {\n      accounts: {\n        \/\/ poolAccount: pool_Account.publicKey, \/\/account which stores the individual pair data\n        userToken1Account: usetoken1_account,\n        userToken2Account: usetoken2_account,\n        poolToken1Account: new PublicKey(tokenaccount_1),\n        poolToken2Account: new PublicKey(tokenaccount_2),\n        owner: provider.wallet.publicKey,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        \/\/ systemProgram : SystemProgram.programId ,\n        \/\/ associatedTokenProgram: spl.ASSOCIATED_TOKEN_PROGRAM_ID,\n        \/\/ rent: anchor.<web3>.SYSVAR_RENT_PUBKEY,\n        tokensProgram: TOKEN_ID,\n        \/\/ poolProgram: pair.programId,\n        \/\/ pairAccount: pairAccount.publicKey\n      },\n      \/\/ signers: [provider]\n    }\n  );\n\n'''","73":"This is my code,\nI want to know the reason why I am not able to change the value in the variable a.\nWould you please give me the reason or any information from solidity doc?\n\/\/ SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\ncontract simple {\n    uint public a = 3;\n    a = 16; \/\/ error occurred : parser Error expected identifier but got '='\n    }","74":"This question is about ton-solidity language of Everscale <blockchain> smart contracts.\nSometimes, I see the code relative to TL-B scheme.  For example, like this:\nfunction getInvokeMessage(address sender, address recipient, uint128 amount, bool bounce, TvmCell payload) public pure\n        returns(TvmCell message) {\n        TvmCell body = tvm.encodeBody(MsigDebot.invokeTransaction, sender, recipient, amount, bounce, payload);\n        TvmBuilder message_;\n        message_.store(false, true, true, false, address(0), address(this));\n        message_.storeTons(0);\n        message_.storeUnsigned(0, 1);\n        message_.storeTons(0);\n        message_.storeTons(0);\n        message_.store(uint64(0));\n        message_.store(uint32(0));\n        message_.storeUnsigned(0, 1); \/\/init: nothing$0\n        message_.storeUnsigned(1, 1); \/\/body: right$1\n        message_.store(body);\n        message = message_.toCell();\n    }\n\nI need explanations step by step, what does this code doing?  Or give me the refers to documentation that explain it.","75":"Can I get a list of all NFTs to an account on the Flow <blockchain>? There is account storage and the documentation says\n\n...Cadence represents each NFT as a resource object that users store in their accounts...\n\nOr does the respective user has to have a dedicated collection in order to allow others to have a look at their NFTs?","76":"Is it possible to authorize a server to sign <transactions> on user's behalf?\nFlow:\n\nUser connects wallet in the frontend\nUser authorizes server to sign <transactions> for their wallet\nServer listens for events on the chain\nServer signs and executes transaction on user's behalf\n\nI'm new to <web3> overall, so I don't even know where to start looking for a solution. I do know about approve on contracts. Do I have to deploy such a contract and use that?\nNaturally, I don't want to ask my users for their private key\/mnemonic.","77":"If a smart contract has the compiled bytecode for a contract can the first deploy a subsequent contract?\nAccording to Ethereum.org:\n\"To deploy a smart contract, you merely send an Ethereum transaction containing the compiled code of the smart contract without specifying any recipient.\"\nI looked for how to send a transaction via smart contracts and the closest I could find were examples for transferring ETH...\n    _to.transfer(msg.value);\n  \n    bool sent = _to.send(msg.value);\n   \n    (bool sent, bytes memory data) = _to.call{value: msg.value}(\"\");","78":"I want to ask about blockhain <hyperledger> Fabric. Is it possible to let Peer nodes to do Orderer node's task which is packing the transaction into new block?\nI kind of think the orderer node is kind of a redundant node since for example in Bitcoin network, the packing of the <transactions> into block and the verification of new transaction is solely done by the full node(miner node).\nCan anyone give me justification why there should be orderer's node in the <hyperledger> Fabric?\nAnd if I were to build my project on <hyperledger> network and forgo orderer node(which means the peer node will do both the verification of transaction and the packing of transaction) is it possible?\nPlease tell me your thoughts and ideas.\nThank you.","79":"Can we add validators in runtime in POA system??(clone node-template)\nIs this functionality available?? \nor we can only configure the validators before chain runs?","80":"I understand that Smart Contracts are immutable once deployed. But how do you make changes to things like minting prices, gas prices afterward? Are there variables that can be written as dynamic for updates to be implemented through an admin panel?","81":"I am running <hyperledger> Fabric 1.4.x, and release-1.4 of fabric-sdk-java. I am trying to use the following code to instantiate a chaincode:\nInstantiateProposalRequest instantiateProposalRequest = client.newInstantiationProposalRequest();\ninstantiateProposalRequest.setProposalWaitTime(180000);\ninstantiateProposalRequest.setChaincodeID(buildChaincodeID(name, version, path));\ninstantiateProposalRequest.setChaincodeLanguage(Type.JAVA);\ninstantiateProposalRequest.setFcn(\"init\");\ninstantiateProposalRequest.setArgs(new String[] {\"\"});\nCollection<ProposalResponse> responses = channel.sendInstantiationProposal(instantiateProposalRequest);\n\nThe instantiation seemed successful, but I don't see it listed when I check with peer chaincode list --instantiated -C deconeb-channel.\nThe following log is from the point I execute the code (with FABRIC_LOGGING_SPEC=DEBUG:msp=info:gossip=info):\n[root@vmdev2 createchannel]# docker logs $(docker ps -aqf name=fabric_peer1) -n 0 -f\n... [endorser] ProcessProposal -> DEBU 22d2 Entering: request from 192.168.50.126:3280\n... [protoutils] ValidateProposalMessage -> DEBU 22d3 ValidateProposalMessage starts for signed proposal 0xc003725b30\n... [protoutils] validateChannelHeader -> DEBU 22d4 validateChannelHeader info: header type 3\n... [protoutils] checkSignatureFromCreator -> DEBU 22d5 begin\n... [protoutils] checkSignatureFromCreator -> DEBU 22d6 creator is &{myMSP 0167d1f59420e22fb1032bc6a17b528414378511c23a07719d2b364842f862a7}\n... [protoutils] checkSignatureFromCreator -> DEBU 22d7 creator is valid\n... [protoutils] checkSignatureFromCreator -> DEBU 22d8 exits successfully\n... [protoutils] validateChaincodeProposalMessage -> DEBU 22d9 validateChaincodeProposalMessage starts for proposal 0xc001fb47e0, header 0xc0036cc870\n... [protoutils] validateChaincodeProposalMessage -> DEBU 22da validateChaincodeProposalMessage info: header extension references chaincode name:\"cscc\"\n... [endorser] preProcess -> DEBU 22db [deconeb-channel][db2d2e4f] processing txid: db2d2e4fef0b7cb0889fe6d0258b2f424426c180be62457c2f2cf5ec00bdd96c\n... [fsblkstorage] retrieveTransactionByID -> DEBU 22dc retrieveTransactionByID() - txId = [db2d2e4fef0b7cb0889fe6d0258b2f424426c180be62457c2f2cf5ec00bdd96c]\n... [endorser] SimulateProposal -> DEBU 22dd [deconeb-channel][db2d2e4f] Entry chaincode: name:\"cscc\"\n... [endorser] callChaincode -> INFO 22de [deconeb-channel][db2d2e4f] Entry chaincode: name:\"cscc\"\n... [chaincode] Execute -> DEBU 22df Entry\n... [cscc] Invoke -> DEBU 22e0 Invoke function: GetConfigBlock\n... [aclmgmt] CheckACL -> DEBU 22e1 acl policy not found in config for resource cscc\/GetConfigBlock\n... [policies] Evaluate -> DEBU 22e2 == Evaluating *policies.implicitMetaPolicy Policy \/Channel\/Application\/Readers ==\n... [policies] Evaluate -> DEBU 22e3 This is an implicit meta policy, it will trigger other policy evaluations, whose failures may be benign\n... [policies] Evaluate -> DEBU 22e4 == Evaluating *cauthdsl.policy Policy \/Channel\/Application\/myMSP\/Readers ==\n... [cauthdsl] func1 -> DEBU 22e5 0xc00059ec70 gate 1638419940859552678 evaluation starts\n... [cauthdsl] func2 -> DEBU 22e6 0xc00059ec70 signed by 0 principal evaluation starts (used [false])\n... [cauthdsl] func2 -> DEBU 22e7 0xc00059ec70 processing identity 0 with bytes of 115a2d0\n... [cauthdsl] func2 -> DEBU 22e8 0xc00059ec70 principal matched by identity 0\n... [cauthdsl] func2 -> DEBU 22e9 0xc00059ec70 principal evaluation succeeds for identity 0\n... [cauthdsl] func2 -> DEBU 22ea 0xc00059ec70 signed by 1 principal evaluation starts (used [true])\n... [cauthdsl] func2 -> DEBU 22eb 0xc00059ec70 skipping identity 0 because it has already been used\n... [cauthdsl] func2 -> DEBU 22ec 0xc00059ec70 principal evaluation fails\n... [cauthdsl] func2 -> DEBU 22ed 0xc00059ec70 signed by 2 principal evaluation starts (used [true])\n... [cauthdsl] func2 -> DEBU 22ee 0xc00059ec70 skipping identity 0 because it has already been used\n... [cauthdsl] func2 -> DEBU 22ef 0xc00059ec70 principal evaluation fails\n... [cauthdsl] func1 -> DEBU 22f0 0xc00059ec70 gate 1638419940859552678 evaluation succeeds\n... [policies] Evaluate -> DEBU 22f1 Signature set satisfies policy \/Channel\/Application\/myMSP\/Readers\n... [policies] Evaluate -> DEBU 22f2 == Done Evaluating *cauthdsl.policy Policy \/Channel\/Application\/myMSP\/Readers\n... [policies] Evaluate -> DEBU 22f3 Signature set satisfies policy \/Channel\/Application\/Readers\n... [policies] Evaluate -> DEBU 22f4 == Done Evaluating *policies.implicitMetaPolicy Policy \/Channel\/Application\/Readers\n... [chaincode] handleMessage -> DEBU 22f5 [db2d2e4f] Fabric side handling ChaincodeMessage of type: COMPLETED in state ready\n... [chaincode] Notify -> DEBU 22f6 [db2d2e4f] notifying Txid:db2d2e4fef0b7cb0889fe6d0258b2f424426c180be62457c2f2cf5ec00bdd96c, channelID:deconeb-channel\n... [chaincode] Execute -> DEBU 22f7 Exit\n... [endorser] callChaincode -> INFO 22f8 [deconeb-channel][db2d2e4f] Exit chaincode: name:\"cscc\"  (1ms)\n... [endorser] SimulateProposal -> DEBU 22f9 [deconeb-channel][db2d2e4f] Exit\n... [endorser] endorseProposal -> DEBU 22fa [deconeb-channel][db2d2e4f] Entry chaincode: name:\"cscc\"\n... [endorser] endorseProposal -> DEBU 22fb [deconeb-channel][db2d2e4f] escc for chaincode name:\"cscc\"  is escc\n... [endorser] EndorseWithPlugin -> DEBU 22fc Entering endorsement for {plugin: escc, channel: deconeb-channel, tx: db2d2e4fef0b7cb0889fe6d0258b2f424426c180be62457c2f2cf5ec00bdd96c, chaincode: cscc}\n... [endorser] EndorseWithPlugin -> DEBU 22fd Exiting {plugin: escc, channel: deconeb-channel, tx: db2d2e4fef0b7cb0889fe6d0258b2f424426c180be62457c2f2cf5ec00bdd96c, chaincode: cscc}\n... [endorser] endorseProposal -> DEBU 22fe [deconeb-channel][db2d2e4f] Exit\n... [endorser] func1 -> DEBU 22ff Exit: request from 192.168.50.126:3280\n... [comm.grpc.server] 1 -> INFO 2300 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=192.168.50.126:3280 grpc.code=OK grpc.call_duration=3.1014ms\n... [common.deliverevents] Deliver -> DEBU 2301 Starting new Deliver handler\n... [common.deliver] Handle -> DEBU 2302 Starting new deliver loop for 192.168.50.126:3285\n... [common.deliver] Handle -> DEBU 2303 Attempting to read seek info message from 192.168.50.126:3285\n... [aclmgmt] CheckACL -> DEBU 2304 acl policy not found in config for resource event\/Block\n... [policies] Evaluate -> DEBU 2305 == Evaluating *policies.implicitMetaPolicy Policy \/Channel\/Application\/Readers ==\n... [policies] Evaluate -> DEBU 2306 This is an implicit meta policy, it will trigger other policy evaluations, whose failures may be benign\n... [policies] Evaluate -> DEBU 2307 == Evaluating *cauthdsl.policy Policy \/Channel\/Application\/myMSP\/Readers ==\n... [cauthdsl] func1 -> DEBU 2308 0xc00373d130 gate 1638419941422542679 evaluation starts\n... [cauthdsl] func2 -> DEBU 2309 0xc00373d130 signed by 0 principal evaluation starts (used [false])\n... [cauthdsl] func2 -> DEBU 230a 0xc00373d130 processing identity 0 with bytes of 115a2d0\n... [cauthdsl] func2 -> DEBU 230b 0xc00373d130 principal matched by identity 0\n... [cauthdsl] func2 -> DEBU 230c 0xc00373d130 principal evaluation succeeds for identity 0\n... [cauthdsl] func2 -> DEBU 230d 0xc00373d130 signed by 1 principal evaluation starts (used [true])\n... [cauthdsl] func2 -> DEBU 230e 0xc00373d130 skipping identity 0 because it has already been used\n... [cauthdsl] func2 -> DEBU 230f 0xc00373d130 principal evaluation fails\n... [cauthdsl] func2 -> DEBU 2310 0xc00373d130 signed by 2 principal evaluation starts (used [true])\n... [cauthdsl] func2 -> DEBU 2311 0xc00373d130 skipping identity 0 because it has already been used\n... [cauthdsl] func2 -> DEBU 2312 0xc00373d130 principal evaluation fails\n... [cauthdsl] func1 -> DEBU 2313 0xc00373d130 gate 1638419941422542679 evaluation succeeds\n... [policies] Evaluate -> DEBU 2314 Signature set satisfies policy \/Channel\/Application\/myMSP\/Readers\n... [policies] Evaluate -> DEBU 2315 == Done Evaluating *cauthdsl.policy Policy \/Channel\/Application\/myMSP\/Readers\n... [policies] Evaluate -> DEBU 2316 Signature set satisfies policy \/Channel\/Application\/Readers\n... [policies] Evaluate -> DEBU 2317 == Done Evaluating *policies.implicitMetaPolicy Policy \/Channel\/Application\/Readers\n... [common.deliver] deliverBlocks -> DEBU 2318 [channel: deconeb-channel] Received seekInfo (0xc002fa3a40) start:<newest:<> > stop:<specified:<number:9223372036854775807 > >  from 192.168.50.126:3285\n... [fsblkstorage] Next -> DEBU 2319 Initializing block stream for iterator. itr.maxBlockNumAvailable=1\n... [fsblkstorage] newBlockfileStream -> DEBU 231a newBlockfileStream(): filePath=[\/var\/<hyperledger>\/production\/ledgersData\/chains\/chains\/deconeb-channel\/blockfile_000000], startOffset=[21642]\n... [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 231b Remaining bytes=[4671], Going to peek [8] bytes\n... [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 231c Returning blockbytes - length=[4669], placementInfo={fileNum=[0], startOffset=[21642], bytesOffset=[21644]}\n... [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 231d blockbytes [4669] read from file [0]\n... [common.deliver] deliverBlocks -> DEBU 231e [channel: deconeb-channel] Delivering block [1] for (0xc002fa3a40) for 192.168.50.126:3285\n... [fsblkstorage] waitForBlock -> DEBU 231f Going to wait for newer blocks. maxAvailaBlockNumber=[1], waitForBlockNum=[2]\n... [endorser] ProcessProposal -> DEBU 2320 Entering: request from 192.168.50.126:3280\n... [protoutils] ValidateProposalMessage -> DEBU 2321 ValidateProposalMessage starts for signed proposal 0xc0033d4fa0\n... [protoutils] validateChannelHeader -> DEBU 2322 validateChannelHeader info: header type 3\n... [protoutils] checkSignatureFromCreator -> DEBU 2323 begin\n... [protoutils] checkSignatureFromCreator -> DEBU 2324 creator is &{myMSP 0167d1f59420e22fb1032bc6a17b528414378511c23a07719d2b364842f862a7}\n... [protoutils] checkSignatureFromCreator -> DEBU 2325 creator is valid\n... [protoutils] checkSignatureFromCreator -> DEBU 2326 exits successfully\n... [protoutils] validateChaincodeProposalMessage -> DEBU 2327 validateChaincodeProposalMessage starts for proposal 0xc00014d5e0, header 0xc0033d53b0\n... [protoutils] validateChaincodeProposalMessage -> DEBU 2328 validateChaincodeProposalMessage info: header extension references chaincode name:\"lscc\"\n... [endorser] preProcess -> DEBU 2329 [deconeb-channel][bc1525c4] processing txid: bc1525c4a55b0d9115df62e094cc5f651a38bd1e037bf0675296f77f489585da\n... [fsblkstorage] retrieveTransactionByID -> DEBU 232a retrieveTransactionByID() - txId = [bc1525c4a55b0d9115df62e094cc5f651a38bd1e037bf0675296f77f489585da]\n... [lockbasedtxmgr] NewTxSimulator -> DEBU 232b constructing new tx simulator\n... [lockbasedtxmgr] newLockBasedTxSimulator -> DEBU 232c constructing new tx simulator txid = [bc1525c4a55b0d9115df62e094cc5f651a38bd1e037bf0675296f77f489585da]\n... [endorser] SimulateProposal -> DEBU 232d [deconeb-channel][bc1525c4] Entry chaincode: name:\"lscc\"\n... [endorser] callChaincode -> INFO 232e [deconeb-channel][bc1525c4] Entry chaincode: name:\"lscc\"\n... [chaincode] Execute -> DEBU 232f Entry\n... [chaincode] handleMessage -> DEBU 2330 [bc1525c4] Fabric side handling ChaincodeMessage of type: GET_STATE in state ready\n... [chaincode] HandleTransaction -> DEBU 2331 [bc1525c4] handling GET_STATE from chaincode\n... [chaincode] HandleGetState -> DEBU 2332 [bc1525c4] getting state for chaincode lscc, key productOwnership, channel deconeb-channel\n... [statecouchdb] GetState -> DEBU 2333 GetState(). ns=lscc, key=productOwnership\n... [couchdb] ReadDoc -> DEBU 2334 [deconeb-channel_lscc] Entering ReadDoc()  id=[productOwnership]\n... [couchdb] handleRequest -> DEBU 2335 Entering handleRequest()  method=GET  url=http:\/\/couchdb1.myorg.com:5984  dbName=deconeb-channel_lscc\n... [couchdb] handleRequest -> DEBU 2336 Request URL: http:\/\/couchdb1.myorg.com:5984\/deconeb-channel_lscc\/productOwnership?attachments=true\n... [couchdb] handleRequest -> DEBU 2337 HTTP Request: GET \/deconeb-channel_lscc\/productOwnership?attachments=true HTTP\/1.1 | Host: couchdb1.myorg.com:5984 | User-Agent: Go-http-client\/1.1 | Accept: multipart\/related | Authorization: Basic Y291Y2hkYjpjb3VjaGRiMTIz | Accept-Encoding: gzip |  |\n... [couchdb] handleRequest -> DEBU 2338 Error handling CouchDB request. Error:not_found,  Status Code:404,  Reason:missing\n... [couchdb] ReadDoc -> DEBU 2339 [deconeb-channel_lscc] Document not found (404), returning nil value instead of 404 error\n... [chaincode] HandleGetState -> DEBU 233a [bc1525c4] No state associated with key: productOwnership. Sending RESPONSE with an empty payload\n... [chaincode] HandleTransaction -> DEBU 233b [bc1525c4] Completed GET_STATE. Sending RESPONSE\n... [cauthdsl] func1 -> DEBU 233c 0xc00370e210 gate 1638419941463477320 evaluation starts\n... [cauthdsl] func2 -> DEBU 233d 0xc00370e210 signed by 0 principal evaluation starts (used [false])\n... [cauthdsl] func2 -> DEBU 233e 0xc00370e210 processing identity 0 with bytes of 115a2d0\n... [cauthdsl] func2 -> DEBU 233f 0xc00370e210 principal matched by identity 0\n... [cauthdsl] func2 -> DEBU 2340 0xc00370e210 principal evaluation succeeds for identity 0\n... [cauthdsl] func1 -> DEBU 2341 0xc00370e210 gate 1638419941463477320 evaluation succeeds\n... [chaincode] handleMessage -> DEBU 2342 [bc1525c4] Fabric side handling ChaincodeMessage of type: PUT_STATE in state ready\n... [chaincode] HandleTransaction -> DEBU 2343 [bc1525c4] handling PUT_STATE from chaincode\n... [chaincode] HandleTransaction -> DEBU 2344 [bc1525c4] Completed PUT_STATE. Sending RESPONSE\n... [lscc] putChaincodeCollectionData -> DEBU 2345 No collection configuration specified\n... [chaincode] handleMessage -> DEBU 2346 [bc1525c4] Fabric side handling ChaincodeMessage of type: COMPLETED in state ready\n... [chaincode] Notify -> DEBU 2347 [bc1525c4] notifying Txid:bc1525c4a55b0d9115df62e094cc5f651a38bd1e037bf0675296f77f489585da, channelID:deconeb-channel\n... [chaincode] Execute -> DEBU 2348 Exit\n... [chaincode] LaunchConfig -> DEBU 2349 launchConfig: executable:\"\/root\/chaincode-java\/start\",Args:[\/root\/chaincode-java\/start,--peerAddress,peer1.myorg.com:7052],Envs:[CORE_CHAINCODE_LOGGING_LEVEL=info,CORE_CHAINCODE_LOGGING_SHIM=warning,CORE_CHAINCODE_LOGGING_FORMAT=%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message},CORE_CHAINCODE_ID_NAME=productOwnership:1.0,CORE_PEER_TLS_ENABLED=true,CORE_TLS_CLIENT_KEY_PATH=\/etc\/<hyperledger>\/fabric\/client.key,CORE_TLS_CLIENT_CERT_PATH=\/etc\/<hyperledger>\/fabric\/client.crt,CORE_PEER_TLS_ROOTCERT_FILE=\/etc\/<hyperledger>\/fabric\/peer.crt],Files:[\/etc\/<hyperledger>\/fabric\/client.crt \/etc\/<hyperledger>\/fabric\/client.key \/etc\/<hyperledger>\/fabric\/peer.crt]\n... [chaincode] Start -> DEBU 234a start container: productOwnership:1.0\n... [chaincode] Start -> DEBU 234b start container with args: \/root\/chaincode-java\/start --peerAddress peer1.myorg.com:7052\n... [chaincode] Start -> DEBU 234c start container with env:\n        CORE_CHAINCODE_LOGGING_LEVEL=info\n        CORE_CHAINCODE_LOGGING_SHIM=warning\n        CORE_CHAINCODE_LOGGING_FORMAT=%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}\n        CORE_CHAINCODE_ID_NAME=productOwnership:1.0\n        CORE_PEER_TLS_ENABLED=true\n        CORE_TLS_CLIENT_KEY_PATH=\/etc\/<hyperledger>\/fabric\/client.key\n        CORE_TLS_CLIENT_CERT_PATH=\/etc\/<hyperledger>\/fabric\/client.crt\n        CORE_PEER_TLS_ROOTCERT_FILE=\/etc\/<hyperledger>\/fabric\/peer.crt\n... [container] lockContainer -> DEBU 234d waiting for container(productOwnership-1.0) lock\n... [container] lockContainer -> DEBU 234e got container (productOwnership-1.0) lock\n... [dockercontroller] stopInternal -> DEBU 234f stopping container id=dev-peer1.myorg.com-productOwnership-1.0\n... [dockercontroller] stopInternal -> DEBU 2350 stop container result error=\"No such container: dev-peer1.myorg.com-productOwnership-1.0\"\n... [dockercontroller] stopInternal -> DEBU 2351 killing container id=dev-peer1.myorg.com-productOwnership-1.0\n... [dockercontroller] stopInternal -> DEBU 2352 kill container result id=dev-peer1.myorg.com-productOwnership-1.0 error=\"No such container: dev-peer1.myorg.com-productOwnership-1.0\"\n... [dockercontroller] stopInternal -> DEBU 2353 removing container id=dev-peer1.myorg.com-productOwnership-1.0\n... [dockercontroller] stopInternal -> DEBU 2354 remove container result id=dev-peer1.myorg.com-productOwnership-1.0 error=\"No such container: dev-peer1.myorg.com-productOwnership-1.0\"\n... [dockercontroller] createContainer -> DEBU 2355 create container imageID=dev-peer1.myorg.com-productownership-1.0-8833aa49d3efc325e99f93399c3e02417a6d5a271b81e9013f3095580e89b308 containerID=dev-peer1.myorg.com-productOwnership-1.0\n... [dockercontroller] getDockerHostConfig -> DEBU 2356 docker container hostconfig NetworkMode: devbc\n... [dockercontroller] createContainer -> DEBU 2357 created container imageID=dev-peer1.myorg.com-productownership-1.0-8833aa49d3efc325e99f93399c3e02417a6d5a271b81e9013f3095580e89b308 containerID=dev-peer1.myorg.com-productOwnership-1.0\n... [dockercontroller] Start -> DEBU 2358 Started container dev-peer1.myorg.com-productOwnership-1.0\n... [container] unlockContainer -> DEBU 2359 container lock deleted(productOwnership-1.0)\n... [container] lockContainer -> DEBU 235a waiting for container(productOwnership-1.0) lock\n... [container] lockContainer -> DEBU 235b got container (productOwnership-1.0) lock\n... [container] unlockContainer -> DEBU 235c container lock deleted(productOwnership-1.0)\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 235d Dec 02, 2021 4:39:02 AM org.<hyperledger>.fabric.shim.ChaincodeBase processEnvironmentOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 235e INFO: <<<<<<<<<<<<<Enviromental options>>>>>>>>>>>>\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 235f Dec 02, 2021 4:39:02 AM org.<hyperledger>.fabric.shim.ChaincodeBase processEnvironmentOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2360 INFO: CORE_CHAINCODE_ID_NAME: productOwnership:1.0\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2361 Dec 02, 2021 4:39:02 AM org.<hyperledger>.fabric.shim.ChaincodeBase processEnvironmentOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2362 INFO: CORE_PEER_ADDRESS: 127.0.0.1\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2363 Dec 02, 2021 4:39:02 AM org.<hyperledger>.fabric.shim.ChaincodeBase processEnvironmentOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2364 INFO: CORE_PEER_TLS_ENABLED: true\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2365 Dec 02, 2021 4:39:02 AM org.<hyperledger>.fabric.shim.ChaincodeBase processEnvironmentOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2366 INFO: CORE_PEER_TLS_ROOTCERT_FILE: \/etc\/<hyperledger>\/fabric\/peer.crt\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2367 Dec 02, 2021 4:39:02 AM org.<hyperledger>.fabric.shim.ChaincodeBase processEnvironmentOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2368 INFO: CORE_TLS_CLIENT_KEY_PATH: \/etc\/<hyperledger>\/fabric\/client.key\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2369 Dec 02, 2021 4:39:02 AM org.<hyperledger>.fabric.shim.ChaincodeBase processEnvironmentOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 236a INFO: CORE_TLS_CLIENT_CERT_PATH: \/etc\/<hyperledger>\/fabric\/client.crt\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 236b Dec 02, 2021 4:39:02 AM org.<hyperledger>.fabric.shim.ChaincodeBase processEnvironmentOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 236c INFO: LOGLEVEL: INFO\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 236d Dec 02, 2021 4:39:03 AM org.<hyperledger>.fabric.shim.ChaincodeBase processCommandLineOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 236e INFO: <<<<<<<<<<<<<CommandLine options>>>>>>>>>>>>\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 236f Dec 02, 2021 4:39:03 AM org.<hyperledger>.fabric.shim.ChaincodeBase processCommandLineOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2370 INFO: CORE_CHAINCODE_ID_NAME: productOwnership:1.0\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2371 Dec 02, 2021 4:39:03 AM org.<hyperledger>.fabric.shim.ChaincodeBase processCommandLineOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2372 INFO: CORE_PEER_ADDRESS: peer1.myorg.com:7052\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2373 Dec 02, 2021 4:39:03 AM org.<hyperledger>.fabric.shim.ChaincodeBase processCommandLineOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2374 INFO: CORE_PEER_TLS_ENABLED: true\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2375 Dec 02, 2021 4:39:03 AM org.<hyperledger>.fabric.shim.ChaincodeBase processCommandLineOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2376 INFO: CORE_PEER_TLS_ROOTCERT_FILE: \/etc\/<hyperledger>\/fabric\/peer.crt\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2377 Dec 02, 2021 4:39:03 AM org.<hyperledger>.fabric.shim.ChaincodeBase processCommandLineOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2378 INFO: CORE_TLS_CLIENT_KEY_PATH: \/etc\/<hyperledger>\/fabric\/client.key\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2379 Dec 02, 2021 4:39:03 AM org.<hyperledger>.fabric.shim.ChaincodeBase processCommandLineOptions\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 237a INFO: CORE_TLS_CLIENT_CERT_PATH: \/etc\/<hyperledger>\/fabric\/client.crt\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 237b org.<hyperledger>\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 237c org.<hyperledger>.fabric.shim.ChaincodeBase\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 237d org.<hyperledger>\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 237e 04:39:03:119 INFO    org.<hyperledger>.fabric.shim.ChaincodeBase initializeLogging                      Loglevel set to INFO\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 237f 04:39:03:130 INFO    org.<hyperledger>.fabric.shim.ChaincodeBase getChaincodeConfig                     <<<<<<<<<<<<<Properties options>>>>>>>>>>>>\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2380 04:39:03:131 INFO    org.<hyperledger>.fabric.shim.ChaincodeBase getChaincodeConfig                     {CORE_CHAINCODE_ID_NAME=productOwnership:1.0, CORE_PEER_ADDRESS=peer1.myorg.com}\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2381 04:39:03:136 INFO    org.<hyperledger>.fabric.metrics.Metrics initialize                                Metrics disabled\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2382 04:39:03:840 INFO    org.<hyperledger>.fabric.shim.ChaincodeBase newChannelBuilder                      ()->Configuring channel connection to peer.peer1.myorg.com:7052 tlsenabled true\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2383 04:39:04:408 INFO    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager <init>                   Max Pool Size [TP_MAX_POOL_SIZE]5\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2384 04:39:04:408 INFO    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager <init>                   Queue Size [TP_CORE_POOL_SIZE]5000\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2385 04:39:04:413 INFO    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager <init>                   Core Pool Size [TP_QUEUE_SIZE]5\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2386 04:39:04:413 INFO    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager <init>                   Keep Alive Time [TP_KEEP_ALIVE_MS]5000\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2387 04:39:04:421 INFO    org.<hyperledger>.fabric.shim.impl.InnvocationTaskExecutor <init>                  Thread pool created\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2388 04:39:04:422 INFO    org.<hyperledger>.fabric.shim.impl.ChaincodeSupportClient start                    making the grpc call\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2389 04:39:04:596 INFO    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager register                 Registering new chaincode name: \"productOwnership:1.0\"\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 238a\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 238b 04:39:04:620 FINE    org.<hyperledger>.fabric.shim.impl.ChaincodeSupportClient$2 accept                 > sendToPeer\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 238c 04:39:04:636 FINE    org.<hyperledger>.fabric.shim.impl.ChaincodeSupportClient$2 accept                 < sendToPeer\n... [chaincode.accesscontrol] authenticate -> DEBU 238d Chaincode productOwnership:1.0 's authentication is authorized\n... [chaincode] handleMessage -> DEBU 238e [] Fabric side handling ChaincodeMessage of type: REGISTER in state created\n... [chaincode] HandleRegister -> DEBU 238f Received REGISTER in state created\n... [chaincode] Register -> DEBU 2390 registered handler complete for chaincode productOwnership:1.0\n... [chaincode] HandleRegister -> DEBU 2391 Got REGISTER for chaincodeID = name:\"productOwnership:1.0\" , sending back REGISTERED\n... [chaincode] HandleRegister -> DEBU 2392 Changed state to established for name:\"productOwnership:1.0\"\n... [chaincode] sendReady -> DEBU 2393 sending READY for chaincode name:\"productOwnership:1.0\"\n... [chaincode] sendReady -> DEBU 2394 Changed to state ready for chaincode name:\"productOwnership:1.0\"\n... [chaincode] Launch -> DEBU 2395 launch complete\n... [chaincode] Execute -> DEBU 2396 Entry\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2397 04:39:05:261 FINE    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager onChaincodeMessage       [        ] {\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2398   \"type\": \"REGISTERED\"\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 2399 }\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 239a 04:39:05:269 FINE    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager onChaincodeMessage       [        ] Received REGISTERED: moving to established state\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 239b 04:39:05:273 FINE    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager onChaincodeMessage       [        ] {\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 239c   \"type\": \"READY\"\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 239d }\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 239e 04:39:05:274 FINE    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager onChaincodeMessage       [        ] Received READY: ready for invocations\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 239f 04:39:05:288 FINE    org.<hyperledger>.fabric.shim.impl.InnvocationTaskManager onChaincodeMessage       [bc1525c4] {\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 23a0   \"type\": \"INIT\",\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 23a1   \"payload\": \"CgRpbml0CgA=\",\n... [peer.chaincode.dev-peer1.myorg.com-productOwnership-1.0] func2 -> INFO 23a2   \"txid\": \"bc1525c4a55b0d9115df62e094cc5f651a38bd1e037bf0675296f77f489585da\",\n\nI had to truncate the log above to fit post requirements; the full log can be found at https:\/\/pastebin.com\/XBUtQdwz\nI don't see any errors in the log so I'm not sure what the problem is. Can anyone point me in the right direction?","82":"I want make a popup which include a link . I want do it when the a button pressed. Can I add two onclick event? and if yes how?(LoL you're mean like instagram. i won't ever ask a joke question again).","83":"I am trying to get details on the most recent <transactions> from the ETH\/USDT .3% Uniswap V3 pool.\nUsing get_price_input() from Uniswap-<python> API I am able to read the most recent price for a given pool but the API does not have a function to read Total Value, Token Amount nor whether ETH is being swapped for USDT or USDT for ETH. This link has a good representation of what I'm looking for: https:\/\/info.uniswap.org\/#\/pools\/0x4e68ccd3e89f51c3074ca5072bbac773960dfa36\nI am aware that many use The Graph to get hourly or daily data, but that is not fast enough, as I'm looking for the most recent transaction.\nBeyond Uniswap-<python> API I'm not sure where to start for using <python> to read recent data directly from the <blockchain>. Can anyone point me in the right direction?\nEdit:\nI've been reading through the <web3>.py and Uniswap documentation.\nHere is a way to do it on Uniswap V1 that doesn't work as getEthToTokenInputPrice doesn't work for V3.\nimport json\nfrom <web3> import <web3>\n\n\ninfura_url = 'https:\/\/mainnet.infura.io\/v3\/XXXXXXX'\n<web3> = <web3>(<web3>.HTTPProvider(infura_url))\n\n# uniswap_ETH_USDT.v3\nabi = json.loads('[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]')\naddress = '0x4e68Ccd3E89f51C3074ca5072bbAC773960dFa36'\nexchange_contract = <web3>.eth.contract(address=address, abi=abi)\n\n# Prices\n\nETH_AMOUNT = <web3>.toWei('1', 'Ether')\nUSDCAmount = exchange_contract.functions.getEthToTokenInputPrice(ETH_AMOUNT).call()\nbid_price = <web3>.toWei(daiAmount, 'Ether')\nUSDCAmount = exchange_contract.functions.getTokenToEthOutputPrice(ETH_AMOUNT).call()\noffer_price = <web3>.toWei(daiAmount, 'Ether')\n\nprint(bid_price, offer_price)\n'''","84":"I have this code in a proxy fallback:\nassembly {\n    calldatacopy(mload(0x40), 0, calldatasize())\n    let result := delegatecall(gas(), destination, mload(0x40), calldatasize(), mload(0x40), 0)\n    returndatacopy(mload(0x40), 0, returndatasize())\n    switch result\n    case 1 { return(mload(0x40), returndatasize()) }\n    default { revert(mload(0x40), returndatasize()) }\n}\n\nThe problem arises when destination is a zero address (0x0000000000000000000000). delegatecall goes through, returns 1, then hits case 1 with return data completely empty which triggers ... did it run out of gas error (which is not really related to the question).\nI have just swapped to newest Hardhat and <web3> (v1.6.1) from Ganache where this would hit default case and revert. Is there something I do not know or was changed recently?","85":"I need a very simple way to sign data with Metamask and <web3>. I am very familiar with using eth account sign with <web3>, but I want to incorporate Metamask into it. I have read the Metamask docs on signing data, but the examples they gave are outdated.\nThe one thing I have done: Successfully enabled Ethereum and got access to the user's address who connected.\nAny suggestions on a very very simple way to sign data? I'm really just testing things out Metamask and want to get started.","86":"When moving a node (non validator) to a new IP:\nA) is it ok to use the same chain data with a new node key?\nB) would peers seeing the same node key on a new IP cause any issues with inbound connections to the node on a new IP?\nc) how\/when do peers update the IP under which they expect to find a known node key?","87":"I'm looking for a way to query the Zenon Network api to get the balance of specific addresses. How can this be done via the CLI?","88":"Is there an easy way to get all the statistics on the pillars on the Zenon Network?","89":"I saw a statement is that \"28-day holding period under the terms of the Ethereum smart contract\" explains the hacking case was solved because of this.\nBut I don't understand this holding period is coming from where.\nIs it related to eth contract or is this a special case?\nWhat I am also looking for is, to solving a scam, is there any holding period for any mainnet coin?\nsource: https:\/\/en.wikipedia.org\/wiki\/The_DAO_(organization)","90":"I am using Solidity to deploy smartcontract to a test Ethereum network launched by Ganache. I read some demo code of contract and one of them looks like:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity >=0.7.4;\npragma experimental ABIEncoderV2;\n\ncontract Ledger {\n    struct TransferRequest {\n        string title;\n        uint256 amount;\n        string bsb;\n        string accountName;\n        string accountNumber;\n    }\n\n    mapping(address => uint256) balances;\n\n    address payable owner;\n\n    event Transfered(bool _success, address _from, address _to, uint256 amount);\n\n    constructor() payable {\n        owner = payable(msg.sender);\n        balances[tx.origin] = 10000;\n    }\n\n    function sendCoin(address payable receiver, uint256 amount)\n        payable public\n    {\n        require(msg.sender == owner);\n        if (balances[msg.sender] < amount) return;\n        balances[msg.sender] -= amount;\n        balances[receiver] += amount;\n        emit Transfered(true, msg.sender, receiver, amount);\n    }\n\n    function getBalance(address addr) public view returns (uint256) {\n        return balances[addr];\n    }\n\n}\n\n\nAs you can see above that the contract manages the balance by itself rather than using the balance from the <blockchain>. There is no real ether transfer inside sendCoin method. Does this mean there is no real transaction in the <blockchain>. Then what the point of building a contract like that. What would be the relationship between balance managed by <blockchain> and balance managed by contract?","91":"I am using ganache-cli to launch a private <blockchain> in a remote ubuntu server. I'd like to use Ganache GUI to connect to that server from my desktop. By looking at the configuration it only supports launching a network on local. Does it work as a client to explorer remote <blockchain> network?","92":"I just started learning ethers, here is my code:\n(async () => {\n  const connection = new ethers.providers.JsonRpcProvider(\n    \"https:\/\/mainnet.infura.io\/v3\/key\"\n  );\n\n  const contract = new ethers.Contract(\n    \"0x7be8076f4ea4a4ad08075c2508e481d6c946d12b\",\n    abi,\n    connection\n  );\n\n  contract.on(\"atomicMatch_\", (...args) => {\n    console.log(args);\n  });\n})();\n\nso the contract is opensea main contract - link\nI would like to listen to sales <transactions>\/events. As I see in the contract name of that event is probably Atomic Match_ or atomicMatch_ in ABI.\nFor ABI I just copy pasted whole contract to https:\/\/remix.ethereum.org\/ website and copied abi code. The problem is I am getting this error now:\nError: no matching event (argument=\"name\", value=\"atomicMatch_\", code=INVALID_ARGUMENT, version=abi\/5.5.0)\nWhat is wrong here? I tried both names of event but I get the same error over and over...\n@edit here is sandbox for it,\nwhat is weird when I change event name to OrdersMatched for example it works totally fine...","93":"I am trying to call a contract via <web3> using sky winder wrapper.\nWhat I am trying to do is call a contract where I pass x amount of token coins and pass contract address and token address. However it's failing.\nthe Abi contract comes from web server which gives me the json string for the Abi contract.\nIt's failing on the call with NodeError\nJust to explain what I am doing here is we have coins on a token on the ether wallet.  Our Abi contract exchanges those token coins to another coin which is not on the ether <blockchain>.\nThis is why our value is 0 for ether but we pass our 3 parameters of\napproveAndCall(address _spender, uint256 _amount, string _destination)\nWhich is our API function\nOur ABI functions work fine on web but im struggling to get this running on iOS.  Any help would be most helpful.\nvar <web3> = <web3>.InfuraMainnet<web3>()\n    if AppDataModelManager.shared.testModeStatus() {\n        \n        <web3> = <web3>.InfuraRinkeby<web3>()\n    }\n\n    let abiContract = self.getDepositABIContract(completion: { abiJson in\n    \n        let value: String = \"0\" \/\/ Any amount of Ether you need to send\n        let walletAddress = EthereumAddress(wallet.address)! \/\/ Your wallet address\n        let contractMethod = \"approveAndCall\" \/\/ Contract method you want to write\n        let contractABI = abiJson\n        let contractAddress = EthereumAddress(AppDataModelManager.shared.getNetworkStatus().getDepositTokenAddress())!\n        let abiVersion = 2 \/\/ Contract ABI version\n        let parameters: [Any] = [walletAddress, UInt64(amountString) ?? 0,toAddress] \/\/ Parameters for contract method\n        let extraData: Data = Data() \/\/ Extra data for contract method\n        let contract = <web3>.contract(contractABI ?? \"\", at: contractAddress, abiVersion: abiVersion)!\n        var options = TransactionOptions.defaultOptions\n        options.value = <web3>.Utils.parseToBigUInt(value, units: .eth)\n        options.from = walletAddress\n        options.gasPrice = .automatic\n        options.gasLimit = .automatic\n\n        let txMessage = contract.write(\n            contractMethod,\n            parameters:  parameters as [AnyObject],\n            extraData: extraData,\n            transactionOptions: options)!\n        \n        DispatchQueue.global(qos: .userInitiated).async {\n            \n            do {\n                try txMessage.call()\n                \n            } catch let error as NSError {\n                \n                print(\"Failed to load: \\(error.localizedDescription)\")\n            }\n        }\n\n    })","94":"I looked into the opensea implements for polygon network. Users don't need to pay any fee on network as far as I know, but when I created my own smart contract and called a function (on remix) metamask asked to pay a gas fee on MATIC to call smart contract.\nHow can we create search system where use don't have to pay gas fee (as opensea has now)? I assumed that network itself didn't required gas fee but I guess it's not true.","95":"I have <web3> running in a Nodejs project.\nI have used this genesis.json:\n{\n\"config\": {\n    \"chainId\": 123456,\n    \"homesteadBlock\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"petersburgBlock\": 0\n},\n\"alloc\": {\n    \"0xa6B49C993142E**************************\": {\n        \"balance\": \"120000000000000000000000\"\n    },\n    \"0xfd2041dcdc815**************************\":{\n        \"balance\": \"120000000000000000000000\"\n    }\n},\n\"difficulty\": \"0\",\n\"gasLimit\": \"8000000\"\n\n}\nI have <geth> init with the previous genesis file.\nI have <geth> running on a remote instance.\nhere is the <geth> command:\nsudo <geth> --port 3001 --networkid 123456 --nodiscover --datadir=.\/blkchain --maxpeers=0 --keystore ~\/.ethereum\/keystore --http --miner.etherbase 0xa6B49C9931************** --miner.threads 1 --http.port 8545 --http.addr 0.0.0.0 --http.corsdomain \"*\" --http.api \"eth,net,<web3>,personal,miner\" --ws --ws.port 8545 --ws.addr 0.0.0.0 --ws.api \"eth,net,<web3>,personal,miner\" --allow-insecure-unlock --unlock 0xa6B49C9931************** --syncmode fast\n\nwhen trying to deploy a new contract from <web3> (I have tried many versions of <web3> including all stable versions), I got this error:\nError: Transaction has been reverted by the EVM,\nTransactionRevertedWithoutReasonError....\nbut on the other hand, the same contract in Truffle, I succeeded with migrating and also deploying the same contract.\nDoes anyone have this issue?","96":"Please find below my code snippet. Here credentialHash is not being set in the .then() call. Neither the \"In then\" or \"Callback rejected\" are being printed so I know that it is not running but I cant understand why. I've also included code for the setHash function in my smart contract.\nlet hash;\n    await ipfs.add(JSON.stringify(this.state.credential)).then((result, error) => {\n      hash = result.path;\n      if (error) {\n        console.error(error)\n        return;\n      }\n      \/\/ Store hash on <blockchain>\n      console.log(\"Hash before BC:\" + hash);\n      this.state.contract.methods.setHash(hash).send({from: this.state.account}).then((resolve) => {\n    console.log(\"In then\")\n    this.setState({credentialHash: hash});\n  }, (rejected) => {\n    console.log(\"Callback rejected\");\n  });\n      console.log(\"After setting:\" + this.state.credentialHash);\n    });\n\nfunction setHash(string memory _CredentialHash) public returns(string memory) { credentialHash = _CredentialHash; return _CredentialHash; }\nThe result returned from console.log(this.state.contract.methods.setHash(hash).send({from: this.state.account})) is :\nProxy {promise: Promise, eventEmitter: EventEmitter, resolve: \u00c6\u0092, reject: \u00c6\u0092}\n[[Handler]]: Object\nget: \u00c6\u0092 proxyHandler(target, name)\n[[Prototype]]: Object\n[[Target]]: PromiEvent\neventEmitter: EventEmitter\n_events: Events\n[[Prototype]]: Object\n_eventsCount: 0\n[[Prototype]]: Object\npromise: Promise\n[[Prototype]]: Promise\n[[PromiseState]]: \"pending\"\n[[PromiseResult]]: undefined\nreject: \u00c6\u0092 ()\nresolve: \u00c6\u0092 ()\n[[Prototype]]: Object\n[[IsRevoked]]: false","97":"I have launched a private network from Ganache and using truffle to deploy my contract to the network. The deployment works fine and I am able to call some methods from contract. But I got an error when try to transfer ether to another account.\nMy contract code is:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity >=0.7.4;\npragma experimental ABIEncoderV2;\n\ncontract Ledger {\n\n    mapping(address => uint256) balances;\n\n    address payable owner;\n\n    event Transfered(address _from, address _to, uint256 amount);\n\n    constructor() {\n        owner = payable(msg.sender);\n        balances[tx.origin] = 10000;\n    }\n\n    function sendCoin(address payable receiver, uint256 amount)\n        payable public\n        returns (bool sufficient)\n    {\n        require(msg.sender == owner);\n        if (balances[msg.sender] < amount) return false;\n        balances[msg.sender] -= amount;\n        balances[receiver] += amount;\n        receiver.transfer(amount);\n        emit Transfered(msg.sender, receiver, amount);\n        return true;\n    }\n\n    function getBalance(address addr) public view returns (uint256) {\n        return balances[addr];\n    }\n\n    function getBalanceInCoin(address addr)\n        public\n        view\n        returns (uint256)\n    {\n        return convert(getBalance(addr), 100);\n    }\n\n    function convert(uint256 amount, uint256 conversionRate)\n        public\n        pure\n        returns (uint256 convertedAmount)\n    {\n        return amount * conversionRate;\n    }\n}\n\n\nWhen I run it in truffle console:\ntruffle(development)> let ledger = await Ledger.deployed()\ntruffle(development)> let accounts = await <web3>.eth.getAccounts()\ntruffle(development)> (await ledger.sendCoin(accounts[1], 50))\nUncaught Error: Returned error: VM Exception while processing transaction: revert\n    at evalmachine.<anonymous>:1:17\n    at evalmachine.<anonymous>:2:49\n    at sigintHandlersWrap (vm.js:273:12)\n    at Script.runInContext (vm.js:142:14)\n    at runScript (\/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/core\/lib\/console.js:364:1)\n    at Console.interpret (\/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/core\/lib\/console.js:379:1)\n    at bound (domain.js:421:15)\n    at REPLServer.runBound [as eval] (domain.js:432:12)\n    at REPLServer.onLine (repl.js:909:10)\n    at REPLServer.emit (events.js:400:28)\n    at REPLServer.emit (domain.js:475:12)\n    at REPLServer.Interface._onLine (readline.js:434:10)\n    at REPLServer.Interface._line (readline.js:791:8)\n    at REPLServer.Interface._ttyWrite (readline.js:1136:14) {\n  data: {\n    '0xebf4283ab2e7ced42b27b67e8a25c73c7c29e26aa3c86a14c5d6bbaba2c5fc55': { error: 'revert', program_counter: 738, return: '0x' },\n    stack: 'RuntimeError: VM Exception while processing transaction: revert\\n' +\n      '    at Function.RuntimeError.fromResults (\/Applications\/Ganache.app\/Contents\/Resources\/static\/node\/node_modules\/ganache-core\/lib\/utils\/runtimeerror.js:94:13)\\n' +\n      '    at <blockchain>Double.processBlock (\/Applications\/Ganache.app\/Contents\/Resources\/static\/node\/node_modules\/ganache-core\/lib\/<blockchain>_double.js:627:24)\\n' +\n      '    at runMicrotasks (<anonymous>)\\n' +\n      '    at processTicksAndRejections (internal\/process\/task_queues.js:93:5)',\n    name: 'RuntimeError'\n  },\n  hijackedStack: 'Error: Returned error: VM Exception while processing transaction: revert\\n' +\n    '    at Object.ErrorResponse (\/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/<web3>-core-helpers\/lib\/errors.js:28:1)\\n' +\n    '    at \/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/<web3>\/node_modules\/<web3>-core-requestmanager\/lib\/index.js:302:1\\n' +\n    '    at \/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/provider\/wrapper.js:107:1\\n' +\n    '    at XMLHttpRequest.request.onreadystatechange (\/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/<web3>\/node_modules\/<web3>-providers-http\/lib\/index.js:98:1)\\n' +\n    '    at XMLHttpRequestEventTarget.dispatchEvent (\/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/xhr2-cookies\/dist\/xml-http-request-event-target.js:34:1)\\n' +\n    '    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._setReadyState (\/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/xhr2-cookies\/dist\/xml-http-request.js:208:1)\\n' +\n    '    at XMLHttpRequest.exports.modules.996763.XMLHttpRequest._onHttpResponseEnd (\/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/xhr2-cookies\/dist\/xml-http-request.js:318:1)\\n' +\n    '    at IncomingMessage.<anonymous> (\/Users\/joey\/.nvm\/versions\/node\/v14.18.0\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/xhr2-cookies\/dist\/xml-http-request.js:289:47)\\n' +\n    '    at IncomingMessage.emit (events.js:412:35)\\n' +\n    '    at IncomingMessage.emit (domain.js:537:15)\\n' +\n    '    at endReadableNT (internal\/streams\/readable.js:1334:12)\\n' +\n    '    at processTicksAndRejections (internal\/process\/task_queues.js:82:21)'\n\nAs you can see above errors which is from transfer method in sendCoin method. How do I know what the error comes from and how should I fix it?","98":"I am using truffle console to interactive smart contract deployed on Ganache network. And use below code to send coin to other accounts:\ntruffle(development)> let instance = await MetaCoin.deployed()\ntruffle(development)> let accounts = await <web3>.eth.getAccounts()\n\ninstance.sendCoin(accounts[1], 500)\n\nafter doing that, I see the transaction happens from account[0] to account[1]. What I don't understand is why it chooses account[0] as the source. Is it a default behaviour? How can I select a different account?\nThe contract code is:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity >=0.4.25 <0.7.0;\n\nimport \".\/ConvertLib.sol\";\n\n\/\/ This is just a simple example of a coin-like contract.\n\/\/ It is not standards compatible and cannot be expected to talk to other\n\/\/ coin\/token contracts. If you want to create a standards-compliant\n\/\/ token, see: https:\/\/github.com\/ConsenSys\/Tokens. Cheers!\n\ncontract MetaCoin {\n    mapping (address => uint) balances;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n\n    constructor() public {\n        balances[tx.origin] = 10000;\n    }\n\n    function sendCoin(address receiver, uint amount) public returns(bool sufficient) {\n        if (balances[msg.sender] < amount) return false;\n        balances[msg.sender] -= amount;\n        balances[receiver] += amount;\n        emit Transfer(msg.sender, receiver, amount);\n        return true;\n    }\n\n    function getBalanceInEth(address addr) public view returns(uint){\n        return ConvertLib.convert(getBalance(addr),2);\n    }\n\n    function getBalance(address addr) public view returns(uint) {\n        return balances[addr];\n    }\n}","99":"Literally everywhere I look (other stackoverflow posts, or official docs), the way to deploy a smart contract is always using a script\nnpx hardhat run scripts\/deploy.js --network ropsten\nI am looking for a way to deploy it only using the npm library \"hardhat\" without actually running a \"script\" in terminal.\nDoes anyone know how?","100":"I am new to smartcontract and start writing some demo code in Solidity to work with Ropsten testing network. I see that I can use send\/transfer method in the contract to transfer ether to other accounts. One question about it is that is contract the only way to transfer ether? Can I transfer ether without a contract?\nI understand the concept of the contract but not sure whether it is a required thing in Ethereum. When I deploy a contract to the network, it will be sitting in a new block and all <transactions> generated from this contract are in the same block? Am I understand correctly?","101":"I am attempting to Verify and Publish a smart contract that I have deployed to the rinkeby network using hardhat and hardhat-etherscan. When I am running the verify script I am getting an error.\nI run the following commands\nnpx hardhat clean \nnpx hardhat verify --network rinkeby 0xDDeE39Ae632760906d273B450493405Dc3C455Fe \"ipfs:\/\/QmX6MjxS5NsEFGe9WtKCskf5fhuifFvZ9Xi12tTBYPjEiH\"\n\nAfter running the script above I get the below error.\nCompiling 17 files with 0.8.4\nCompilation finished successfully\nCompiling 1 file with 0.8.4\nSuccessfully submitted source code for contract\ncontracts\/NFTCollectible.sol:NFTCollectible at 0xDDeE39Ae632760906d273B450493405Dc3C455Fe\nfor verification on Etherscan. Waiting for verification result...\n\nWe tried verifying your contract NFTCollectible without including any unrelated one, but it failed.\nTrying again with the full solc input used to compile and deploy it.\nThis means that unrelated contracts may be displayed on Etherscan...\nSuccessfully submitted source code for contract\ncontracts\/NFTCollectible.sol:NFTCollectible at 0xDDeE39Ae632760906d273B450493405Dc3C455Fe\nfor verification on Etherscan. Waiting for verification result...\nError in plugin @nomiclabs\/hardhat-etherscan: The contract verification failed.\nReason: Fail - Unable to verify\n\nhardhat.config.js\nrequire(\"@nomiclabs\/hardhat-waffle\");\nrequire(\"@nomiclabs\/hardhat-etherscan\");\nrequire('dotenv').config();\n\nconst { API_URL, PRIVATE_KEY, ETHERSCAN_API } = process.env;\n\n\/\/ This is a sample Hardhat task. To learn how to create your own go to\n\/\/ https:\/\/hardhat.org\/guides\/create-task.html\ntask(\"accounts\", \"Prints the list of accounts\", async (taskArgs, hre) => {\n  const accounts = await hre.ethers.getSigners();\n\n  for (const account of accounts) {\n    console.log(account.address);\n  }\n});\n\n\/\/ You need to export an object to set up your config\n\/\/ Go to https:\/\/hardhat.org\/config\/ to learn more\n\n\/**\n * @type import('hardhat\/config').HardhatUserConfig\n *\/\nmodule.exports = {\n  solidity: \"0.8.4\",\n  defaultNetwork: \"rinkeby\",\n  networks: {\n    rinkeby: {\n      url: API_URL,\n      accounts: [PRIVATE_KEY]\n    }\n  },\n  etherscan: {\n    apiKey: ETHERSCAN_API\n  }\n};\n\nMy smart contract included several imports from openzepplin.\n\/\/SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin\/contracts\/utils\/Counters.sol\";\nimport \"@openzeppelin\/contracts\/access\/Ownable.sol\";\nimport \"@openzeppelin\/contracts\/utils\/math\/SafeMath.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC721\/extensions\/ERC721Enumerable.sol\";\n\ncontract NFTCollectible is ERC721Enumerable, Ownable {\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIds;\n\n    uint256 public constant MAX_SUPPLY = 100;\n    uint256 public constant PRICE = 0.01 ether;\n    uint256 public constant MAX_PER_MINT = 5;\n\n    string public baseTokenURI;\n\n    constructor(string memory baseURI) ERC721(\"NFT Collectible\", \"NFTC\") {\n        setBaseURI(baseURI);\n    }\n\n    function reserveNFTs() public onlyOwner {\n        uint256 totalMinted = _tokenIds.current();\n        require(totalMinted.add(10) < MAX_SUPPLY, \"Not enough NFTs\");\n        for (uint256 i = 0; i < 10; i++) {\n            _mintSingleNFT();\n        }\n    }\n\nfunction _baseURI() internal view virtual override returns (string memory) {\n    return baseTokenURI;\n}\n\nfunction setBaseURI(string memory _baseTokenURI) public onlyOwner {\n    baseTokenURI = _baseTokenURI;\n}\n\nfunction mintNFTs(uint256 _count) public payable {\n    uint256 totalMinted = _tokenIds.current();\n    require(totalMinted.add(_count) <= MAX_SUPPLY, \"Not enough NFTs!\");\n    require(\n        _count > 0 && _count <= MAX_PER_MINT,\n        \"Cannot mint specified number of NFTs.\"\n    );\n    require(\n        msg.value >= PRICE.mul(_count),\n        \"Not enough ether to purchase NFTs.\"\n    );\n    for (uint256 i = 0; i < _count; i++) {\n        _mintSingleNFT();\n    }\n}\n\nfunction _mintSingleNFT() private {\n    uint256 newTokenID = _tokenIds.current();\n    _safeMint(msg.sender, newTokenID);\n    _tokenIds.increment();\n}\n\nfunction tokensOfOwner(address _owner)\n    external\n    view\n    returns (uint256[] memory)\n{\n    uint256 tokenCount = balanceOf(_owner);\n    uint256[] memory tokensId = new uint256[](tokenCount);\n    for (uint256 i = 0; i < tokenCount; i++) {\n        tokensId[i] = tokenOfOwnerByIndex(_owner, i);\n    }\n\n    return tokensId;\n}\n\nfunction withdraw() public payable onlyOwner {\n    uint256 balance = address(this).balance;\n    require(balance > 0, \"No ether left to withdraw\");\n    (bool success, ) = (msg.sender).call{value: balance}(\"\");\n    require(success, \"Transfer failed.\");\n}\n\n}","102":"I am deploying a contract to Ethereum EVM environment and using Ropsten test network. It sends 1 ether to another account which is passed from the method paratemter.\nAfter deploy, I set the target account's address 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 when call transfer method. But I see below error:\ntransact to Leger.transfer errored: VM error: revert.\n    The transaction has been reverted to the initial state.\nReason provided by the contract: \"Transfer failed.\".\nDebug the transaction to get more information.\n\n\nMy account has 99 ethers and why I got above error?\n\/\/ SPDX-License-Identifier: MIT\npragma solidity 0.7.4;\npragma experimental ABIEncoderV2;\n\ncontract Leger {\n\n    address payable owner;\n\n    constructor(){\n        owner = msg.sender;\n    }\n\n    function transfer(address payable _recipient) public payable {\n        \n        bool success = _recipient.send(1);\n        require(success, \"Transfer failed.\");\n    }\n\n\n    function getBalance() public view returns (uint256) {\n        return owner.balance;\n    }\n    \n\n}","103":"I'm trying to connect my frontend (Nextjs) with my contract on the Rinkeby Network (token on etherscan). I'm new to the crypto space, so I'm not sure what provider it's talking about... I thought the connection was made with the use<web3> hook, and everything was handled by Infura. I also want to note that I can connect to the Ethereum network with this setup, but not to my token on the Ethereum network.\nI have this setup on my frontend:\n.\/src\/pages\/index.tsx:\nimport type { NextPage } from \"next\";\nimport React, { useEffect, useState } from \"react\";\nimport { use<web3> } from \"@openzeppelin\/network\/react\";\nimport { createContract } from \"..\/lib\/herbie\";\n\nconst Index: NextPage<IndexProps> = () => {\n  const { networkId, networkName, providerName, accounts, lib } = use<web3>(\n    `wss:\/\/rinkeby.infura.io\/ws\/v3\/${process.env.INFURA_PROJECT_ID}`\n  );\n\n  useEffect(() => {\n    const fetchContract = async (): Promise<any> => {\n      if (networkId === 4 && accounts.length > 0) {\n        const contract = await createContract();\n\n        console.log({ contract });\n\n        console.log(contract.methods.balanceOf(accounts[0]).call()); \/\/ ERROR HERE\n      }\n    };\n\n    fetchContract();\n  }, [accounts, networkId]);\n\n  return (\n    <div>\n      <p>\n        {JSON.stringify({\n          networkId,\n          networkName,\n          providerName,\n          accounts,\n        })}\n      <\/p>\n    <\/div>\n  );\n};\n\nexport default Index;\n\n.\/src\/lib\/herbie.ts:\nimport <web3> from \"<web3>\";\n\nconst getAbi = async (): Promise<string> => {\n  const abi = await (await fetch(\"\/abi.json\")).json();\n\n  return abi;\n};\n\nconst createContract = async (): Promise<any> => {\n  const herbieContract = new <web3>().eth.Contract;\n\n  return new herbieContract(\n    (await getAbi()) as any,\n    \"0xe71c56d861f90bf96c9f006d25ce91da97ddb238\"\n  );\n};\n\nexport { getAbi, createContract };\n\nI get the following error:\n\nMy metamask:","104":"I am building a contract with Solidity and deployed it to Ethereum private network Ropsten. There is a payRequest method which transfers 1 ether to another account. I have deployed the contact and run the method successfully. (I set the recipient address and 1 as amount)\nI am able to view the transaction hash in Etherscan and its status is success. But the success in the response is false.\nThe value in the transaction is 0. The recipient address doesn't receive this transfer as well. What did I do wrong?\n\/\/ SPDX-License-Identifier: MIT\npragma solidity 0.7.4;\npragma experimental ABIEncoderV2;\n\ncontract Leger {\n    struct TransferRequest {\n        string title;\n        uint256 amount;\n        string bsb;\n        string accountName;\n        string accountNumber;\n    }\n\n    event PaymentReceive(address from, uint256 amount);\n    event TransactionBytes(bytes transactionBytes);\n    event RequestPaid(address receiver, uint256 amount);\n\n    function payRequest(address payable _recipient, uint256 _amount) public {\n        \n        (bool success, bytes memory transactionBytes) = _recipient.call{value:_amount}('');\n        \n        emit TransactionBytes(transactionBytes);\n        \n        emit RequestPaid(msg.sender, _amount);\n    }\n\n    receive() external payable {\n        emit PaymentReceive(msg.sender, msg.value);\n    }\n\n}","105":"I launched a private network by using <geth> --datadir data\/node1 --http --dev --http.corsdomain \"*\" --http.api <web3>,eth,debug,personal,net,miner --allow-insecure-unlock --mine  command.\nI am able to attach to it <geth> attach http:\/\/localhost:8545\nbut the balance of the default account is only 1.15 ether:\n\neth.getBalance(eth.accounts[0]) 1.15792089237316195423570985008687907853269984665640564039457582226449518702905e+77\n\nI'd like to give it more ethers so I run:\n\nminer.start()\nnull\nAnd I can see there is a warn in the node log:\n\nINFO [11-28|20:29:38.512] Transaction pool price threshold updated price=1\nINFO [11-28|20:29:38.512] Commit new mining work                   number=4 sealhash=73b6e7..5d8b72 uncles=0 txs=0 gas=0 fees=0 elapsed=\"174.436\u00c2\u00b5s\"\nWARN [11-28|20:29:38.512] Block sealing failed                     err=\"sealing paused while waiting for <transactions>\"\n\nI wonder what the issue could be?","106":"I am developing a dapp, in which I need to store a string of 140 chars in the <blockchain>. And I am surprised that the cost of this action is 157 924 gas.\nCurrent prices:\n1 gas = 100 Gwei\n157 924 x 100 = 15792400 Gwei = 0.0157924 ETH = 66 USD\nI have seen several dapps that store information in the <blockchain>. How can they handle such enormous costs, for relatively small operations? Am I making a mistake in the calculations of the actual cost? Is my contract extremely bad written?\npragma solidity ^0.8.0;\n\ncontract Upload{\n    \n    mapping(uint8=>string) internal info;\n\n    function setInfo(uint8 id, string calldata Input) external{\n\n        info[id] = Input;\n    }\n\n    function getInfo(uint8 id) external view returns (string memory){\n        return (info[id]);\n    }\n}\n\nI am pretty new into this, please understand","107":"I'm trying to write a simple Solana Program using Rust\/Anchor which uses a PDA, but I get a CPI error when I try to invoke it, even though there's no CPI happening (maybe the PDA account initialization?).\nHere is the Program code:\nuse anchor_lang::prelude::*;\n\ndeclare_id!(\"51v31qHaEQniLoYuvvtXByZcfiyvog3R2EKC39EPD52p\");\n\n#[program]\npub mod solana_sandbox {\n  use super::*;\n  pub fn initialize(ctx: Context<Initialize>, bump: u8) -> ProgramResult {\n    ctx.accounts.sandbox_account.bump = bump;\n    Ok(())\n  }\n}\n\n#[derive(Accounts)]\n#[instruction(bump: u8)]\npub struct Initialize<'info> {\n  #[account(mut)]\n  pub signer: Signer<'info>,\n  #[account(\n    init,\n    seeds = [b\"seed\".as_ref()],\n    bump,\n    payer = signer,\n  )]\n  pub sandbox_account: Account<'info, SandboxAccount>,\n  pub system_program: Program<'info, System>,\n}\n\n#[account]\n#[derive(Default)]\npub struct SandboxAccount {\n  pub bump: u8,\n}\n\nHere is the client code:\n  const [sandboxPda, sandboxBump] = await PublicKey.findProgramAddress([Buffer.from('seed')], SystemProgram.programId);\n\n  await program.rpc.initialize(\n    sandboxBump,\n    {\n      accounts: {\n        signer: keypair.publicKey,\n        sandboxAccount: sandboxPda,\n        systemProgram: anchor.<web3>.SystemProgram.programId,\n      },\n      signers: [keypair],\n      instructions: []\n    });\n\nWhen I run the above, I get the following:\nTransaction simulation failed: Error processing Instruction 0: Cross-program invocation with unauthorized signer or writable account \n    Program 51v31qHaEQniLoYuvvtXByZcfiyvog3R2EKC39EPD52p invoke [1]\n    8ZiyjNgnFFPyw39NyMQE5FGETTjyUhSHUVQG3oKAFZiU's signer privilege escalated\n    Program 51v31qHaEQniLoYuvvtXByZcfiyvog3R2EKC39EPD52p consumed 200000 of 200000 compute units\n    Program 51v31qHaEQniLoYuvvtXByZcfiyvog3R2EKC39EPD52p failed: Cross-program invocation with unauthorized signer or writable account\n\n8ZiyjNgnFFPyw39NyMQE5FGETTjyUhSHUVQG3oKAFZiU is the PDA address I pass in, and I'm using anchor-cli 0.18.0.","108":"I am trying to learn how to configure hardhat with Moralis, I wrote a smart contract that I now wanna test.\nI forked a Moralis Kovan network and also a Local network successfully, I have it running on my computer.\nNow I want to run some test on the forked kovan or local network from Moralis but neither of them seem to work.\nI get the following error when running npx hardhat test --network local or npx hardhat test --network kovan:      HardhatError: HH110: Invalid JSON-RPC response received: {\"error\":\"unauthorized\"}\nThis is my hardhat.config.js\n\n\nrequire(\"@nomiclabs\/hardhat-waffle\");\nrequire(\"@nomiclabs\/hardhat-etherscan\");\n\nconst ethers = require('ethers');\n\ntask(\"accounts\", \"Prints the list of accounts\", async (taskArgs, hre) => {\n  const accounts = await hre.ethers.getSigners();\n\n  for (const account of accounts) {\n    console.log(account.address);\n  }\n});\n\n\/\/ You need to export an object to set up your config\n\/\/ Go to https:\/\/hardhat.org\/config\/ to learn more\n\n\/**\n * @type import('hardhat\/config').HardhatUserConfig\n *\/\nmodule.exports = {\n  solidity: \"0.8.4\",\n  networks: {\n    kovan: {\n      url: \"https:\/\/vqvzzpqhdvnc.usemoralis.com:2053\/server\",\n      accounts: [\"03c1bd1681bf0baf5f32c0e182a23d676d8e645df90ae97613f66b7a6d97a8a3\"]\n    },\n    local: {\n      url: \"https:\/\/7oqyifz8onne.usemoralis.com:2053\/server\",\n      accounts: [\"03c1bd1681bf0baf5f32c0e182a23d676d8e645df90ae97613f66b7a6d97a8a3\"]\n    }\n  },\n  etherscan: {\n    apiKey: \"9E45864SC7JZPH4F9U3MX9QXHE9EGXM2ZN\"\n  }\n};\n\n\n\n\n\nconst { expect, assert } = require(\"chai\");\nconst { ethers } = require(\"hardhat\");\nconst hre = require('hardhat');\nconst Moralis = require('moralis\/node');\n\nconst NODE_URL = \"https:\/\/speedy-nodes-nyc.moralis.io\/6ee15640b2e5107f0e110d0e\/eth\/kovan\";\nconst provider = new ethers.providers.JsonRpcProvider(NODE_URL);\n\nconst signer = provider.getSigner();\n\nconst serverUrl = \"https:\/\/vqvzzpqhdvnc.usemoralis.com:2053\/server\";\nconst appId = \"WApLAvxmeBmgniXlx50T6SvKMk4FomQHhvXKHQZj\";\nMoralis.start({ serverUrl, appId });\n\ndescribe(\"Greeter\", function () {\n  it(\"Should return the new greeting once it's changed\", async function () {\n    const Greeter = await ethers.getContractFactory(\"Greeter\");\n    const greeter = await Greeter.deploy(\"Hello, world!\");\n    await greeter.deployed();\n\n    expect(await greeter.greet()).to.equal(\"Hello, world!\");\n\n    const setGreetingTx = await greeter.setGreeting(\"Hola, mundo!\");\n\n    \/\/ wait until the transaction is mined\n    await setGreetingTx.wait();\n\n    expect(await greeter.greet()).to.equal(\"Hola, mundo!\");\n  });\n});\n\ndescribe(\"UniSwap3\", () => {\n  let uniSwap3;\n\n  beforeEach(async () => {\n    const contractName = \"UniSwap3\";\n    await hre.run(\"compile\");\n    const smartContract = await ethers.getContractFactory(contractName);\n    uniSwap3 = await smartContract.deploy();\n    await uniSwap3.deployed();\n    console.log(`${contractName} deployed to: ${uniSwap3.address}`);\n  })\n\n  it(\"should return version 1\", async () => {\n    const version = await uniSwap3.version();\n    assert.equal(version, 1);\n  });\n\n  it(\"should return zero DAI balance\", async () => {\n    const daiBalance = uniSwap3.getDaiBalance();\n    assert.equal(daiBalance, 0);\n  })\n})","109":"There are various tutorials that teach how to activate and deactivate Metamask wallet, or probably any crypto wallet in general, but in all of them I have the same problem, as so:\nWhen I deactivate my account it is still displayed in Metamask GUI that you are connected, the problem with that is when you reload the page you get the connected behavior again, as though you never disconnected, you can verify this yourselves via this code example:\nUsing UseDapp framework:\nimport React from 'react'\nimport { useEthers } from '@usedapp\/core'\n\nconst TryUseDappExample = () => {\n\n  const { activateBrowserWallet, deactivate, account } = useEthers()\n\n  return (\n    <div>\n      {!account && <button onClick={activateBrowserWallet}> Connect <\/button>}\n      {account && <button onClick={deactivate}> Disconnect <\/button>}\n      {account && <p>Account: {account}<\/p>}\n    <\/div>\n  )\n}\n\nexport default TryUseDappExample\n\nplease try to hit connect -> disconnect -> reload the page, you will see you are still connected.\nUsing <web3>-react tutorial provides the same scenario, although when I reload the page it doesn't show that the wallet is connected, rather it is shown only on Metamask GUI.\nMy question is a general one, how do you properly disconnect the Metamask wallet from the dapp?\nThank You!\nYou can see the behaviour in the image provided, the wallet is disconnected via disconnect button, but you can still see it's connected in Metamask GUI","110":"I've been looking for a way to download all transaction from a specific contract since their start up until now. It's around 25k <transactions> as of today. I've tried different libraries such as ether and etherscanr but none seem to be working. I have extracted and adapted the code from etherscanr::etherscan_<transactions>() and I got this (API key removed!):\n\n      txns <- data.frame()\n      p <- data.frame()\n      more <- TRUE\n      page <- 1\n      \n      while(more == TRUE){\n        message(\"Getting page \", page)\n        while(dim(p)[1] == 0){\n          #message(\"DEBUG: Into the loop\")\n          url <- paste0(\"https:\/\/api.etherscan.io\/api?module=account&action=txlist\", \n                        \"&address=\", address, \n                        \"&page=\", page, \n                        \"&offset=\", 1000, \n                        \"&apikey=XXXXXXX\") # not real api key in this example\n          \n          res <- jsonlite::fromJSON(url)\n          \n          message(\" Results show message \", print(res$mes))\n          \n          p <- data.frame(blockNumber = as.integer(res$result$blockNumber), \n                              timeStamp = as.POSIXct(as.numeric(res$result$timeStamp), \n                                                     origin = \"1970-01-01\"), hash = res$result$hash, \n                              nonce = as.integer(res$result$nonce), blockHash = res$result$blockHash, \n                              transactionIndex = as.integer(res$result$transactionIndex), \n                              from = res$result$from, to = res$result$to, value = res$result$value, \n                              gas = res$result$gas, gasPrice = res$result$gasPrice, \n                              isError = res$result$isError == \"1\", input = res$result$input, \n                              contractAddress = res$result$contractAddress, cumulativeGasUsed = res$result$cumulativeGasUsed, \n                              gasUsed = res$result$gasUsed, confirmations = as.integer(res$result$confirmations), \n                              stringsAsFactors = FALSE)\n          message(\"Page \", page, \" retrieved is size \", dim(p)[1])\n          Sys.sleep(5)\n        }\n         # message(\"DEBUG: Out of the loop\")\n        \n        txns <- bind_rows(txns, p)\n        page <- page + 1\n        p <- data.frame() # reset\n        \n        Sys.sleep(7)\n        \n        \n        if(page == 25){\n          message(\"Done parsing up until page \", page, \".\")\n          page <- 1\n          p <- data.frame()\n          break\n        } \n      }\n\nThis works fine up to page 10, in which I get the following message from res$mes:\n[1] \"Result window is too large, PageNo x Offset size must be less than or equal to 10000\"\nI understand the error message, but could there be any workaround to this? I heard about using the block number and iterate through that but that would increase the number of API calls beyond than the free plan.\nAny other alternative is greatly appreciated, thanks!","111":"Wondering if anyone can explain this. I am following along in the \"Solidity, <blockchain>, and Smart Contract Course - Beginner to Expert <python> Tutorial\" by freeCodeCamp.org.\nIn lesson two we create a contract factory in which we store an array of contracts and then create a function to retrieve the contract by index and call a function on it.\nHere is how he did it: SimpleStorage(address(simpleStorages[_simpleStorageIndex])).store(_simpleStorageNumber)\nI do not understand the SimpleStorage(address(...)) part. I understand indexing into the array and getting the storage, but I tested it and this works the same: simpleStorages[_simpleStorageIndex].store(_simpleStorageNumber)\nWhat is this address function? I assume it gets the address of the contract instance. Then why do we pass it to a constructor(?) of SimpleStorage? Why do all this when calling store on the instance itself without going through addresses works.\nThanks!!\nEDIT: Entire contract:\n\/\/ SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \".\/SimpleStorage.sol\";\n\ncontract StorageFactory is SimpleStorage { \/\/ is SimpleStorgae = inheritance \n\n    SimpleStorage[] public simpleStorages;\n\n    function createSimpleStorageContract() public {\n        SimpleStorage simpleStorage = new SimpleStorage();\n        simpleStorages.push(simpleStorage);\n    }\n\n    function sfStore(uint256 _simpleStorageIndex, uint256 _simpleStorageNumber) public {\n        \/\/ Anytime you interact with a contract you need two things:\n        \/\/ Address\n        \/\/ ABI - Application Binary Interface\n        return simpleStorages[_simpleStorageIndex].store(_simpleStorageNumber);\n        \/\/return SimpleStorage(address(simpleStorages[_simpleStorageIndex])).store(_simpleStorageNumber);\n    }\n\n    function sfGet(uint256 _simpleStorageIndex) public view returns(uint256) {\n        return SimpleStorage(address(simpleStorages[_simpleStorageIndex])).retrieve();\n    }\n}","112":"I'm building a dapp based on substrate <blockchain> runtime and smart contracts. The pallet_membership rust module handles adding, removing and tracking accounts membership in a <blockchain>. Would I use the pallet_membership to handle this or should I create a smart contract instead and create the logic in there to handle user membership in my dapp?\nHaving trouble distinguishing between smart contracts and <blockchain> runtimes and what different roles they should assume for a dapp. I know smart contracts are deployed to <blockchain>s and the runtime is the underlying logic of a <blockchain>, but what are some examples of distinct use cases for each that would be used by the dapp itself.\nHere is a list of features my dapp would have and which component I believe should handle:\n\nUser posts, comments, upvotes | Smart contract\nUser membership | <blockchain> runtime\nUser posts sold and bought as NFT's | No idea...","113":"Let me know if I am on the right train of thought. I'm currently building a dapp that will be based on my own parachain, and I was wondering if by adding this pallet, it would be a way to allow users in my dapp to pay for membership.\nObviously I would have to have some extrinsic functions that are exposed through my dapp so that when they click and pay for membership, in the runtime, the membership pallet will add that user as a member. Can anyone confirm my thoughts on this?\nThis leads up to another question. Should I just create a smart contract to handle membership logic and deploy it on edgeware or some other parachain that already exists?","114":"Hope you're doing well.\nI am a developer and have a query regarding my 3d model preview on opensea testnet.\nI have created a metadata file https:\/\/pattirose.growwithsabrina.org\/nft\/1.json\nusing pinanta server for hosting the glb file. Opensea failed to fetch the model for  preview.\nAlternatively i have tried hosting the glb file on personal hosting and used the \"animation_url\" key in json file but that also did not work.\nAll the test <transactions> are done on rinkeby testnet.\nPlease guide on how to resolve this issue, really appreciate your support.\nThanks","115":"What are the main steps to be able to work with production-based networks?\nFor now, I'm able to build a simple network with 2 orgs, 1 or 3 orderers and invoke\/query <transactions> by using the terminal on my localhost. What should it be my next step? Trying to run this network on Cloud or I'd still have to do something more before taking this step?\nP.S: I'm working with <hyperledger> Fabric to develop <blockchain> networks.","116":"I am using Ethereum network to deploy smart contract. The contract is written in Solidity and I am using Remix IDE to do the deploy and testing. I am using testing network at the moment.\nWhat I don't understand is that when I deploy a smart contract to Ethereum network, does it create a new block on the <blockchain>? My contract may send transaction to different account when it is running. Whether this transaction is inside the block of the smart contract? Once I deploy the contract, it should be running inside the network. Whenever there is a method call on the contract, does it always generate a transaction in the block?","117":"I am new to <blockchain> and have a question about the performance.\nMiners in <blockchain> needs to solve a mathematic puzzle in order to create a block and the process may take a few minutes to finish.\nDoes this mean it takes a few minutes to complete a transaction?\nFor example, if I buy a pizza with bitcoin, do I need to wait for a few minutes before I can get the pizza?","118":"I am not sure what I don't know and if this is possible. I think this would be a similar issue for Ethereum, so that is the reason why I marked Ethereum on tags.\nI am going to describe on example what I want to achieve:\nThere is a token called \"Elonomics\".\nhttps:\/\/bscscan.com\/address\/0xd3ecc6a4ce1a9faec1aa5e30b55f8a1a4b84f938\nthere is owner with address \"0x3a78ea5c462f0afa76fa091a70a7bcd020b274d6\"\nthere are all txs from owner address: https:\/\/bscscan.com\/txs?a=0x3a78ea5c462f0afa76fa091a70a7bcd020b274d6\nwhen I take one of the transaction from the owner e.g. 0x6f81f2dbd285d772c6b34151b676f6749ef75ac9a6c76b5e4dfa844a0c6932d2\"\nI can read the logs from this transaction in:\nhttps:\/\/bscscan.com\/tx\/0x6f81f2dbd285d772c6b34151b676f6749ef75ac9a6c76b5e4dfa844a0c6932d2#eventlog\nso I can read that somebody set \"totalSupply :1500000800000\"\nand now are my questions:\n\nIs it possible to fetch all txs related to this specific owner address with these logs in json data (or any other data that can be updated dynamically on dAPPs)?\nAre data from txs logs are encrypted? (if yes what is the format of this and how to decrypt this how bscscan do)\nIs it possible to fetch these data directly from <blockchain> instead of using 3rd part application like bscscan?","119":"I want to update the value of \"amount\" using setter Function after mapping with data1\npragma solidity ^0.8.0;\ncontract acc_data{\nstruct person{\n\n    string name;\n    uint age;\n    address add;\n    uint amount;\n}\n \nperson public p1;\nmapping(address=>person) public data1;\n\n\n\nfunction map()public{\n      data1[p1.add]=p1;\n\n}\n\n\nfunction structsetter()public {\n    p1.name=\"rohit\";\n    p1.age=22;\n    p1.add=0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n    p1.amount=0;\n }    \n\n function setter() public {\n\n     p1.amount=7;\n     }","120":"I want to get informative data about the contract with using API.\nI found hash address with using Etherscan. I copied the contract to the R. But I don't know how to get informative data (such as  balance, token info etc.)\nMy screen look like this:","121":"I want to find a smart contract address and a hash code on the Ethereum <blockchain> using Etherscan.\nI clicked some random transaction https:\/\/etherscan.io\/tx\/0xf39612cbe8ddacdb00b81fa863fc11cbb5194233c50ddaab1a402dc092f7259d\nBut I don't know if its hash code on Ethereum <blockchain>. Can you answer, how can I be sure about it?","122":"I'm having an issue that i cant solve , i'm stuck on this for the last week...\ni'm trying to execute swapExactETHForTokens with UNISWAP router on a ropsten network.\nIm trying to buy USDC coin with 0.01 ETH.\nFirst of all , i approve uniswap to use the amount ETH.\nsecond , i execute the swap function , but it keeps reverting my <transactions>\nhttps:\/\/ropsten.etherscan.io\/tx\/0x176bae743bcc193b776a45b0389bc4934c5d1db5df85d991a37f2faca72db0c2\nwith Fail with error 'UniswapV2Router: EXPIRED'\nHere's my code: ( it says pancakeswap on someplaces but its uniswap router)\nconst ethers = require('ethers')\nconst to = '0xD5768aa815D590494277f558Ee5cbeC5FAF1501C'; \/\/ my account\nconst value = ethers.utils.parseUnits('0.01', 'ether')\nlet provider = new ethers.providers.InfuraProvider('ropsten', 'key');\nconst signer = new ethers.Wallet('privte_key');\nconst account = signer.connect(provider);\nconst config = {\n    wbnb: '0xc778417E063141139Fce010982780140Aa0cD5Ab', \/\/weth\n    safemoon: '0x07865c6E87B9F70255377e024ace6630C1Eaa37F', \/\/usdc\n    pancakeSwapRouter: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n    slippage: 12,\n}\n\nconst pancakeswap = new ethers.Contract(\n    config.pancakeSwapRouter,\n    [\n        'function getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts)',\n        'function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n        'function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)',\n    ],\n    account\n)\n\nconst wbnb = new ethers.Contract(\n    config.wbnb,\n    ['function approve(address spender, uint amount) public returns(bool)'],\n    account\n)\n\nconst buyToken = async () => {\n    try {\n        const deadline = Math.floor(Date.now() \/ 1000) + 60 * 10\n        const tokenIn = config.wbnb\n        const tokenOut = config.safemoon\n        const amountIn = value;\n        const ETHAmount = ethers.utils.parseEther('0.1').toHexString();\n        const gasPrice = ethers.utils.parseUnits('1.5', 'gwei');\n        const gas = {\n            gasPrice: gasPrice,\n            gasLimit: 6000000\n        }\n        const tx = await pancakeswap.swapExactETHForTokens(\n            0, \/\/ Degen ape don't give a fuxk about slippage\n            [tokenIn, tokenOut],\n            to,\n            Math.floor(Date.now() \/ 1000) + 60 * 20, \/\/ 10 minutes from now\n            {\n                ...gas,\n                value: ETHAmount\n            }\n        );\n        console.log(`Swapping WETH for tokens...`);\n        const receipt = await tx.wait();\n        console.log(`Transaction hash: ${receipt.transactionHash}`);\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nconst approve = async () => {\n    const ETHAmount = ethers.utils.parseEther('0.1').toHexString();\n    const gasPrice = ethers.utils.parseUnits('1.5', 'gwei');\n    const gas = {\n        gasPrice: gasPrice,\n        gasLimit: 6000000\n    }\n    const tx = await wbnb.approve(pancakeswap.address, ETHAmount, gas)\n    console.log('Approving...')\n    const receipt = await tx.wait()\n    console.log('Approve receipt')\n    console.log(receipt)\n}\n\nconst main = async () => {\n    await approve()\n    await buyToken()\n}\n\nmain()","123":"Is it possible to destroy (using selftDestruct function) and generate the same contract at the same time ?\nWe assume that the first contract is to have 1Eth and then withdraw all eth to another erc20 address, after the complete withdrawal, the first contract calls the selfdestruct function and then the same contract is redeployed, and that in a loop.\nMaybe the simply way is to use a conditional function?","124":"I want to build a Solidity smart contract in RSK and Ethereum that pays dividends every year.\nShould I use the block time or can I rely on the block number, assuming a the current average inter-block time in RSK and Ethereum?","125":"I've only started looking into solidity like a month ago and I'm trying to understand and run some tests on reducing gas consumption.\nI've read this (https:\/\/medium.com\/@novablitz\/storing-structs-is-costing-you-gas-774da988895e) and it seems like a super interesting way of reducing the number of storage\/read calls but when I try this I'm getting quite different results. Not sure if I'm doing something incorrectly or if maybe solidity recently updated the bit operators but it doesn't seem to be working.\nUsing solidity version 0.8.9.\nMy code:\nuint224 entryRange = uint224(uint160(msg.sender));\nentryRange |= ref.entryCount<<160;\nentryRange |= (ref.entryCount + amount)<<192;\nref.raffleEntries.push(entryRange);\n\nentryCount is a uint32 so if I understand correctly, address takes up 160 bytes, so can be converted to a uint160, each uint32 is 32 bytes on in total I would need 224 bytes.\nSo a uint224 should be enough to fit my data.\nMy read is as follows:\nconsole.log(address(uint160(entryRange)));\nconsole.log(uint32(entryRange>>160));\nconsole.log(uint32(entryRange>>192));\n\nThe result is, the address is being read nicely but the two uints are always 0.\nI've tried to place console logs in the storing and I noticed the result doesn't change so:\n    uint224 entryRange = uint224(uint160(msg.sender));\n    console.log(entryRange);\n    entryRange |= ref.entryCount<<160;\n    entryRange |= (ref.entryCount + amount)<<192;\n    ref.raffleEntries.push(entryRange);\n    console.log(entryRange);\n\nThis outputs twice the same value almost like the |= is simply not doing anything, either that or the console.log is only taking the result due to some... async if any? even tho I believe that's not the case in solitidy.\nNever the less, on the read I'm getting 0 for both uints and a correct address. Any ideas what the issue could be here?\nThanks,\nJo\u00c3\u00a3o.","126":"Good afternoon,\nI'm studying a little bit about <blockchain> and Solidity, researching some videos I found an ethereum IDE called Remix, where we can create smart contracts and put them on the network.\nI would like to know if creating contracts in Solidity and placing them on the Ethereum network generates any monetary costs? If it generates any costs, can I create my own network with Solidity so as not to generate costs?\nBest regards. Flavio.","127":"Hey guys I am trying to deploy my project on the rinkeby chain using infura, but I am getting a ValueError\nHere is my trackback:\nINFO: Could not find files for the given pattern(s).\nBrownie v1.17.1 - <python> development framework for Ethereum\n\n  File \"c:\\users\\allow\\appdata\\local\\programs\\<python>\\<python>39\\lib\\site-packages\\brownie\\_cli\\__main__.py\", line 64, in main\n    importlib.import_module(f\"brownie._cli.{cmd}\").main()\n  File \"c:\\users\\allow\\appdata\\local\\programs\\<python>\\<python>39\\lib\\site-packages\\brownie\\_cli\\run.py\", line 44, in main\n    network.connect(CONFIG.argv[\"network\"])\n  File \"c:\\users\\allow\\appdata\\local\\programs\\<python>\\<python>39\\lib\\site-packages\\brownie\\network\\main.py\", line 40, in connect\n    <web3>.connect(host, active.get(\"timeout\", 30))\n  File \"c:\\users\\allow\\appdata\\local\\programs\\<python>\\<python>39\\lib\\site-packages\\brownie\\network\\<web3>.py\", line 52, in connect\n    uri = _expand_environment_vars(uri)\n  File \"c:\\users\\allow\\appdata\\local\\programs\\<python>\\<python>39\\lib\\site-packages\\brownie\\network\\<web3>.py\", line 183, in _expand_environment_vars\n    raise ValueError(f\"Unable to expand environment variable in host setting: '{uri}'\")\nValueError: Unable to expand environment variable in host setting: 'https:\/\/rinkeby.infura.io\/v3\/$<web3>_INFURA_PROJECT_ID'\n\nHere is my deploy.py code\nfrom brownie import accounts, config, SimpleStorage, network\nimport os\n\ndef deploy_simple_storage():\n    account = get_account()\n    simple_storage = SimpleStorage.deploy({\"from\": account})\n    stored_value = simple_storage.retrieve()\n    print(stored_value)\n    transaction = simple_storage.store(15, {\"from\": account})\n    transaction.wait(1)\n    updated_stored_value = simple_storage.retrieve()\n    print(updated_stored_value)\n\n\ndef get_account():\n    if network.show_active() == \"development\":\n        return accounts[0]\n    else:\n        return accounts.add(config[\"wallets\"][\"from_key\"])\n\n\ndef main():\n    deploy_simple_storage()\n\nI have a really little experience in coding. I think the problem is related to .env, but I don't know what I should now. FYI I am using windows n follow this course\nhttps:\/\/www.youtube.com\/watch?v=M576WGiDBdQ\nstuck at 4:48:00","128":"{\"address\":\"5CVVapxEBkvGnK2t1xMd2rbg2P1EekRnNNzPZPWFxwpzcJbv\",\"encoded\":\"0xbf3c994369b9d481cb42e25e7a4e39961ef40c0c60d1bb0d6bcf589bbff62d69961c5c9baeca0c2c884c2fff6fea48665e24652d7c8078e505338ded954e41e2453f37937d4afbf84573178f511ae5b84e903ff989f852b70c967ddddbd223a7fd1985a25690cdd632521e45049ec882ca4ca01caf5691d4fd0fdc6375e1b3d74146e5ed9d40de4b32f35757d8685642ed6db0cabfd49b1bc09b369624\",\"encoding\":{\"content\":[\"pkcs8\",\"ed25519\"],\"type\":\"xsalsa20-poly1305\",\"version\":\"2\"},\"meta\":{\"name\":\"aravind\",\"tags\":[\"a\"],\"whenCreated\":1637583415090}}\nThis is one of the account file downloaded from substrate.... What is key-value pair encoded denotes above??\nare there any docs on how accounts are created on substrate??(detailed docs)","129":"All.\nI'm new to <blockchain> and currently in a course of learning it.\nWhile I was reading books about DEX(Decentralized Exchanges), I have got a questions regarding liquidity and pair.\nIs it possible to create the same pair on difference DEXes?\nMeaning, if I have just created a token called \"MYT\", can I create ETH\/MYT on Uniswap and Sushiswap at the same time?\nIf then, how can I keep the same rate across these 2 platforms?","130":"I want to build a webapp that uses the wallet address as  account, but yet I want to store the user in my db to allow specifying a nickname.\nThe problem I'm dealing with is that I want to call different apis, where the user needs to be authenticated \/ authorized in order to gain access .\nSince the authentication happens 100% client side in my case (through the tronlink extension and TronWeb), I don't see another way as to add supplementary authentication for my webapp specifically.\nIf the user logs in to my app with a different password (not using the private key of the wallet), it seems like bad user experience as the user needs to authenticate twice (through Tronweb AND my webapp with a password).\nHow do you solve this problem?","131":"I would like to get USD price of DeFi tokens from Chainlink.\nHowever, it looks like, I can get the price of an asset through either the Chainlink API calls, or Chainlink price feeds.\nWhat are the costs associated with each and the differences and tradeoffs?","132":"I want to see the total time in msec for each step of the smart contract while deploying in REMIX ide (online). Any help will be appreciated.","133":"I'm getting this error in remix:\n\nInvalid type for argument in function call. Invalid implicit conversion from address to address payable requested\n\nIt refers to msg.sender on line number 9 below. Here is the code I'm writing:\nfunction startProject(\n        string calldata title,\n        string calldata description,\n        uint durationInDays,\n        uint amountToRaise\n    ) external {\n        uint raiseUntil = block.timestamp.add(durationInDays.mul(1 days));\nProject newProject = new Project(\n    msg.sender,\n    title,\n    description,\n    raiseUntil,\n    amountToRaise\n);\nprojects.push(newProject);\n\nWhy am I getting this error? How can I resolve it?","134":"This is my first attempt at minting NFT's. I am using ERC1155 contract to mint a full collection. Getting the following error when trying to deploy:\nGas estimation errored with the following message (see below). The transaction execution will likely fail. Do you want to force sending?\nexecution reverted\n\nUsing the following code:\npragma solidity 0.8.0;\n\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC1155\/ERC1155.sol\";\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/utils\/math\/SafeMath.sol\";\n\ncontract NFT is ERC1155 {\n    using SafeMath for uint256;\n    \n    constructor() ERC1155(\"ipfs:\/\/[IPFS_HASH]\/{id}.json\") {\n        _mint(msg.sender, 0, 1, \"\");\n        _mint(msg.sender, 1, 1, \"\");\n        _mint(msg.sender, 2, 1, \"\");\n        _mint(msg.sender, 3, 1, \"\");   \n        \/\/ ... The above line repeats 3,686 more times with the ID incrementing accordingly\n    }\n}\n\nWhat am I doing wrong?","135":"So, whenever I am trying to approve my smart contract using the approve function of the ERC20 token contract the owner and the spender are being set the same.\nfunction getValues(address _token) external {\n       \n        MyToken token = MyToken(0xd9145CCE52D386f254917e481eB44e9943F39138);\n        token.approve(address(this),10);\n                   \n}\nfunction transfer(address _token) external {\n      MyToken token = MyToken(0xd9145CCE52D386f254917e481eB44e9943F39138);\n    token.transferFrom(msg.sender,address(this),10);\n}\n\nThe output to the code is coming something like this [\n{\n\"from\": \"0xd9145CCE52D386f254917e481eB44e9943F39138\",\n\"topic\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n\"event\": \"Approval\",\n\"args\": {\n\"0\": \"0xf8e81D47203A594245E36C48e151709F0C19fBe8\",\n\"1\": \"0xf8e81D47203A594245E36C48e151709F0C19fBe8\",\n\"2\": \"10\",\n\"owner\": \"0xf8e81D47203A594245E36C48e151709F0C19fBe8\",\n\"spender\": \"0xf8e81D47203A594245E36C48e151709F0C19fBe8\",\n\"value\": \"10\"\n}\n}\n]","136":"When we want to mint an NFT with its own metadata, the asset file and JSON file should be uploaded to IPFS before the minting.\nAnd we mint a new NFT by sending <transactions> to the smart contract and within the transaction, the token URI(hashed URI from IPFS) would be set as JSON metadata URI of the token.\nNow I am wondering whether there is a way to import the attributes from JSON on IPFS into a smart contract and use the data like const variables in the contract.","137":"I have a for loop form range 1 to 4951 like this in solidity\n    for (uint256 i = 1; i <= _mintAmount; i++) {\n      _safeMint(_to, supply + i);\n    }\n\nI need to implement randomness in this loop such that the number is chosen between 1 to 4951 and doesnt repeat itself again and the supply increment by the total number selected","138":"I am trying to transfer ERC1155 tokens to another account. I have deployed the contract and have put down my contract code below.\nThe problem I am facing is I get the below error when I call getMyToken function from my frontend <web3>js code.\n{code: -32603, message: 'execution reverted: ERC1155: caller is not owner nor approved', data: {\u00e2\u0080\u00a6}}\n\nNot sure what is happening. I am calling the function as below from frontend. The isApproved function is returning true.\nconst selectedAccountIsApproved = await monkeysContract.methods.isApproved(selectedAccount).call();\nconsole.log('IS APPROVED RESULT: ', selectedAccountIsApproved);\nif(selectedAccountIsApproved) {\n    const result = await monkeysContract.methods.mintMyMonkey(selectedAccount, 0).call();\n    console.log('Transfer Result: ', result);\n} else {\n    console.log('Account not approved by owner for transfers');\n}\n\nNOTE:\n\nI have called the setApprovalForAll method and approved the receiver account.\nI am able to call isApprovedForAll and verify that the account is approved.\nI am able to transfer tokens to the receiver through Etherscan contract interface.\n\nContract Code:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin\/contracts\/token\/ERC1155\/ERC1155.sol\";\nimport \"@openzeppelin\/contracts\/access\/Ownable.sol\";\n\ncontract Monkeys is ERC1155, Ownable {\n    uint256 public constant CC1 = 0;\n    uint256 public constant CC2 = 1;\n\n    mapping (uint256 => string) private _uris;\n\n    constructor() public ERC1155(\"https:\/\/game.example\/api\/item\/{id}.json\") {\n        _mint(msg.sender, CC1, 1000, \"\");\n        _mint(msg.sender, CC2, 1000, \"\");\n    }\n\n    function uri(uint256 tokenId) override public view returns (string memory) {\n        return(_uris[tokenId]);\n    }\n    \n    function setTokenUri(uint256 id, string memory url) public onlyOwner {\n        require(bytes(_uris[id]).length == 0, \"Cannot set uri twice\"); \n        _uris[id] = url; \n    }\n\n    function transfer(address from, address to, uint256 id, uint256 amount, bytes memory data) public {\n        safeTransferFrom(from, to, id, amount, data);\n    }\n\n    function isApproved(address user) public view virtual returns (bool) {\n        return isApprovedForAll(owner(), user);\n    }\n\n    function getMyToken(address to, uint256 id) public {\n        transfer(owner(), to, id, 1, 'test');\n    }\n}","139":"I had built a staking contract but while testing the staking it's throwing The transaction has been reverted to the initial state. Note: The called function should be payable if you send value and the value you send should be less than your current balance. Debug the transaction to get more information. this error. My code is\n`\nfunction startGame(address secondPlayer, string memory phrase, uint _amount) external { \n\nrequire(token.balanceOf(msg.sender) >= _amount); uint _stakedAmountChallenger = stakeZug(_amount);\n    uint secret =uint(keccak256(abi.encodePacked(phrase)));\n\nmatchLists.push(matchUps(matchStatus.Start,msg.sender,secondPlayer,_stakedAmountChallenger,0,_stakedAmountChallenger,secret,false));\n                uint gameNumber = matchLists.length -1;\n                isValid[gameNumber] = true;\n                emit challengeInitiator(msg.sender, secondPlayer, false, gameNumber);\n            }\n\n`","140":"Following the guide from https:\/\/ethereum.org\/vi\/developers\/tutorials\/hello-world-smart-contract\/\nI am getting this error when trying to run my deploy script. I am absolutely lost as to why this is not working as I have copied every piece of code directly from the guide.\nMy hardhat.config.js\nrequire('dotenv').config();\n\nrequire(\"@nomiclabs\/hardhat-ethers\");\nconst { API_URL, PRIVATE_KEY } = process.env;\n\n\/**\n* @type import('hardhat\/config').HardhatUserConfig\n*\/\nmodule.exports = {\n   solidity: \"0.7.3\",\n   defaultNetwork: \"ropsten\",\n   networks: {\n      hardhat: {},\n      ropsten: {\n         url: API_URL,\n         accounts: [`0x${PRIVATE_KEY}`]\n      }\n   },\n}\n\nMy deploy.js\nasync function main() {\n    const HelloWorld = await ethers.getContractFactory(\"HelloWorld\");\n \n    \/\/ Start deployment, returning a promise that resolves to a contract object\n    const hello_world = await HelloWorld.deploy(\"Hello World!\");\n    console.log(\"Contract deployed to address:\", hello_world.address);}\n \n main()\n   .then(() => process.exit(0))\n   .catch(error => {\n     console.error(error);\n     process.exit(1);\n   });\n \n\nmy .env\nAPI_URL = \"https:\/\/eth-ropsten.alchemyapi.io\/v2\/[REDACTED]\"\nPRIVATE_KEY = \"[REDACTED]\".  \/\/ my private key goes here, not including the 0x\n\nIt compiles fine but gives me the error when I use the command\nnpx hardhat run scripts\/deploy.js --network ropsten","141":"I am using vue for solana development.\nThe library I use is @solana\/wallet-adapter\nerror shows:\n\/node_modules\/@toruslabs\/eccrypto\/index.js: 'return' outside of function \n\nSince the example is only for React, it's hard for me to find the root cause of the error.\nApp.vue\n<template>\n  <div id=\"app\">\n    <WalletConnectButton\/>\n  <\/div>\n<\/template>\n\n<script>\nimport { ConnectionProvider, WalletProvider } from '@solana\/wallet-adapter-vue';\nimport { WalletAdapterNetwork } from '@solana\/wallet-adapter-base';\nimport {\n    getLedgerWallet,\n    getPhantomWallet,\n    getSlopeWallet,\n    getSolflareWallet,\n    getSolletExtensionWallet,\n    getSolletWallet,\n    getTorusWallet,\n} from '@solana\/wallet-adapter-wallets';\nimport {\n    WalletDisconnectButton,\n    WalletMultiButton,\n    WalletConnectButton\n} from '@solana\/wallet-adapter-vue-ui';\nimport { clusterApiUrl } from '@solana\/<web3>.js';\n\n\nexport default {\n  name: \"App\",\n  components: {\n    \n  }\n};\n<\/script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n<\/style>\n\nCodesandbox\nhttps:\/\/codesandbox.io\/s\/strange-oskar-j1byt?file=\/src\/App.vue:0-906","142":"Given a Solana wallet address I would like to verify every single transaction ever confirmed to check other information, such as the receiver (or sender) and the amount sent (or received). So, as usual, I searched for some APIs. I found the following:\n\nSolana py\nPySolana\n\nAfter that, I went to look which methods they offer. The one that seems to be close to what I wish is solana_client.get_confirmed_signature_for_address2 (available in 1), however my results do not match what its documentation shows. Here it is:\nfrom solana.rpc.api import Client\nsolana_client = Client(\"https:\/\/api.devnet.solana.com\")\n\nsolana_client.get_signatures_for_address(\"2AQdpHJ2JpcEgPiATUXjQxA8QmafFegfQwSLWSprPicm\", limit=1)\n\nI get this:\n{'jsonrpc': '2.0', 'result': [], 'id': 1}\n\nHowever, I should get its last signature, which seems to be this:\n4SNQ4h1vL9GkmSnojQsf8SZyFvQsaq62RCgops2UXFYag1Jc4MoWrjTg2ELwMqM1tQbn9qUcNc4tqX19EGHBqC5u\nAnyways, we can use SolanaBeach and check. Further, if we code as the documentation explains:\nfrom solana.rpc.api import Client\nsolana_client = Client(\"https:\/\/api.devnet.solana.com\")\n\nsolana_client.get_signatures_for_address(\"Vote111111111111111111111111111111111111111\", limit=1)\n\nI get this:\n{'jsonrpc': '2.0', 'result': [{'blockTime': 1637328065, 'confirmationStatus': 'finalized', 'err': {'InstructionError': [0, {'Custom': 0}]}, 'memo': None, 'signature': '5yaeqDRCHWCGQMqNWhq3g6zqw63MBkri9i86hjK954YFFvnG2VCQJfszXsozDVUJbePagJieAzwsSY5H7Xd1jJhC', 'slot': 95301596}], 'id': 1}\n\nWeird thing is \"Vote111...11\" seems not to be an address. Nevertheless, I get expected results, that is a signature, even though such signature can't be found by Solana Explorer...\nPlease, tell me what to fix. I have no idea what to do. I even tried to check if all Solana Explorers have their own API, but they do not. Probably because Solana already shares it, right?\nEDIT\nWell, it seems I need to enter the \"account address as base-58 encoded string\", thus the address becomes: HLiBGYYxaQqQx8UTPHEahqcd7aZjkDgN3bihc3hYM3SDUBGU9LFrQSnx9eje.\nI also did that and I get:\n{'jsonrpc': '2.0', 'error': {'code': -32602, 'message': 'Invalid param: WrongSize'}, 'id': 1}","143":"I have a question, maybe a newbie question but, I would be glad if you guys help me.\nWell, I wish to do all my smart contracts interactions by server-side, for instance: An user wants to create his token, so he inputs the data (name, tick, decimals ...) and send it to server that will deploy an instance of ERC20, so far so good. The transaction has a charge (gas) that my server needs to pay in order to send the transaction, but I wanna \"transfer\" this charge to the user who intends to create the token. I was wondering if there is any way to my server send this transaction \"on behalf of someone else\" and the transaction charge be payed by this address? Maybe sign the transaction on client-side and send it on server-side (I need to pay here again right)?","144":"I'm trying to figure out how to send an NFT and display it on a website. Ideally the NFT can be dropped on the account linked to the website and therefore \"belongs\" to the website at least for a while, this is important for my project because I need to be able to burn the nft or send it back to the user. Actually im using @project-serum\/anchor and @solana\/<web3>.js but I can't even get a transfer between the user's wallet and another wallet.\nI've spent all day trying to figure out how to do it but I can't get a result. Ideally I would have a button that opens the wallet and shows the different NFT that can be deposited, the user chooses one that is sent to the wallet linked to the site.\nI thank you in advance","145":"I recently started <blockchain> and crypto. I started with ethereum and now on bitcoin. Today I run bitcoin daemon and while i was figuring out some other api related stuff related to bitcoin-cli, I lost about 110gb of data in just like 4 or 5 or max 6 hours.\nI just have 4gb left for the entire month. My job is to just create a node for bitcoin and check if data can be retreived from those nodes using curl.\nI am using ubuntu20 mint. If there is any config or something i can do about it.\nAny suggestions are appreciated.\nThanks in advance","146":"Substrate depends on finality for its block production by default. Looking also into the application database layer with blocks, it seems that block reverting isn't normally possible with arbitrary depth. Does that mean it's impossible to have probabilistic finality in substrate?\nContext to the problem:\nIn Bitcoin, Ethereum and other probabilistic-finality-based chains, the chain can reorg with as many blocks as the system needs. It can even be thousands of blocks if need be. Consequently, the state transition function (using substrate terminology) must be reversible. Hence, when a reorg happens, blocks are reverted in a way where (in bitcoin), outputs are removed and inputs become unspent in the UTXO set.\nIn the most abstract form, this can be functionally represented as:\nApply(StateA, blockX)  -> StateB\n\nRevert(StateB, blockX) -> StateA\n\nThis strictly requires that it's known how a revert is done, given a block. In bitcoin, this is easily achievable as we know exactly how to \"unspend\" inputs and delete outputs by a simple database change.\nThe current situation in substrate (as far as I understand it):\nBut in a general purpose chain like substrate, this cannot be done without storing the set of state changes per block over the whole <blockchain>, which has a huge diskspace\/memory requirement (called archive-pruning mode in substrate). Or, the developer has to provide the mechanism for reversibility, which doesn't seem to be a requirement in the pallet standard interface, as people are only required to provide the changes that have to be done in the database only when applying a block, not when removing\/reverting a block from the tip of the mainchain.\nAs can be seen in the database handling of a block, it's not possible to revert an arbitrary number of blocks the same way it's possible in probabilistic finality <blockchain>s (unless pruning mode is archive, which is impractical to assume for all users). Substrate seems to assume that finality is an inevitability, where in the technical underlying database\/storage, the concept of \"canonicalization\" is defined. A canonicalized block is a block that's technically irrevertible\/irreversible, because its state transaction function has been applied to the database. And given that pallets don't define any mechanism for reverting extrinsics\/<transactions> and hence blocks, there's absolutely no way to revert a block after it gets canonicalized. So, substrate stores a tree of all possible block candidates that are not yet canonicalized\/finalized.\nThis caused me lots of confusion because it seems that substrate does support proof-of-work consensus, but the canonicalization concept completely eradicates the possibility to revert blocks, which is typically a requirement in proof of work due to its probabilistic nature. (and on a humorous note, congratulations, 51% attacks with shadow mining are not possible anymore :-), but on a serious note, spontaneous contentious forks and chain-splits are possible if a group of honest nodes get isolated long enough, which is not that unrealistic, e.g., if a country decides to block the internet for a few days or block the node ports for political reasons, which should never be a problem in normal proof-of-work systems).\nThe question\nThis question is based on the requirement of building a substrate-based <blockchain> that follows bitcoin.\nIs it possible to make substrate consensus completely operate with correct probabilistic finality (without canonicalization and with proper definitions of reversible operations)? What would have to be changed? Is it a realistic change or is it drilled to the bones such that it's practically impossible? I honestly don't know where to start and would like to get an overview of the changes that have to be done to make the substrate <blockchain> work with probabilistic finality.","147":"I'm trying to edit the file ORG1MSPanchors.tx, so I've executed the following commands:\n-> configtxlator proto_decode --input .\/channel-artifacts\/ORG1MSPanchors.tx --type common.Envelope >channel-artifacts\/ORG1MSPanchors.json\n-> nano channel-artifacts\/ORG1MSPanchors.json\n-> configtxlator proto_encode --input .\/channel-artifacts\/ORG1MSPanchors.json --type common.Envelope >.\/channel-artifacts\/ORG1MSPanchors.tx\n\nBut the changes are not made in ORG1MSPanchors.tx. Does anyone know why this might be? Thanks...","148":"I have two contract that are separately deployed.\nFirstContract.sol\ncontract FirstContract is ERC721 {\n    using Counters for Counters.Counter;\n    Counters.Counter public _id;\n    address payable _admin;\n\n    constructor(address admin) ERC721(\"Token Name\", \"TOKEN\") {\n        _admin = payable(admin);\n    }\n\n    function incrementToken() public {\n        _id.increment();\n    }\n}\n\nSecondContract.sol\nimport \".\/FirstContract.sol\";\n\ncontract SecondContract {\n    FirstContract firstContract;\n\n    constructor(address _address) {\n        firstContract = FirstContract(_address);\n    }\n\n    function increment() external {\n        firstContract.incrementToken(); \n    }\n\n    function transferValue(uint value) external {\n        firstContract._admin.transfer(value); \/\/ error here\n    }\n}\n\nI'm getting the error:\n\nMember \"transfer\" not found or not visible after argument-dependent lookup in function () view external returns (address payable).\n\nI'm not sure why this error occurs because the function is marked public here.","149":"In Solidity we have four types of access. Two of them are private and internal.\nWhat is the difference if both of them can be used inside smart contract and both of them are not visible after deploying?","150":"I'm trying to commit Fabcar to my HF network, composed by 4 Orgs,with 2 peers each. I packaged the chaincode, installed it on peer0org1, peer0org2, peer0org3 and peer0org4, and approved for all orgs. In fact, checking the commit readiness, i get this:\n{\n        \"approvals\": {\n                \"Org1MSP\": true,\n                \"Org2MSP\": true,\n                \"Org3MSP\": true,\n                \"Org4MSP\": true\n        }\n}\n\nBut when  I try to launch:\npeer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com \\\n        --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA \\\n        --channelID $CHANNEL_NAME --name ${CC_NAME} \\\n        --collections-config $PRIVATE_DATA_CONFIG \\\n        --peerAddresses localhost:7051 --tlsRootCertFiles $PEER0_ORG1_CA \\\n        --peerAddresses localhost:9051 --tlsRootCertFiles $PEER0_ORG2_CA \\\n        --peerAddresses localhost:11051 --tlsRootCertFiles $PEER0_ORG3_CA \\\n        --peerAddresses localhost:13051 --tlsRootCertFiles $PEER0_ORG4_CA \\\n        --version ${VERSION} --sequence ${VERSION} --init-required\n\n\nI get this:\n2021-11-18 12:34:33.941 CET [chaincodeCmd] ClientWait -> INFO 002 txid [7f5d2a2d8f0c1a4082f11eca4c228beb1a01b3a3a50c3bbbe45bf91eb9844577] committed with status (ENDORSEMENT_POLICY_FAILURE) at localhost:13051\n2021-11-18 12:34:33.941 CET [chaincodeCmd] ClientWait -> INFO 001 txid [7f5d2a2d8f0c1a4082f11eca4c228beb1a01b3a3a50c3bbbe45bf91eb9844577] committed with status (ENDORSEMENT_POLICY_FAILURE) at localhost:7051\n2021-11-18 12:34:33.950 CET [chaincodeCmd] ClientWait -> INFO 003 txid [7f5d2a2d8f0c1a4082f11eca4c228beb1a01b3a3a50c3bbbe45bf91eb9844577] committed with status (ENDORSEMENT_POLICY_FAILURE) at localhost:11051\n2021-11-18 12:34:33.962 CET [chaincodeCmd] ClientWait -> INFO 004 txid [7f5d2a2d8f0c1a4082f11eca4c228beb1a01b3a3a50c3bbbe45bf91eb9844577] committed with status (ENDORSEMENT_POLICY_FAILURE) at localhost:9051\nError: transaction invalidated with status (ENDORSEMENT_POLICY_FAILURE)\n\nHere is my configtx.yaml with the policies, in case it was useful to understand the problem:\n################################################################################\n#\n#   Section: Organizations\n#\n#   - This section defines the different organizational identities which will\n#   be referenced later in the configuration.\n#\n################################################################################\nOrganizations:\n\n    # SampleOrg defines an MSP using the sampleconfig.  It should never be used\n    # in production but may be used as a template for other definitions\n    - &OrdererOrg\n        # DefaultOrg defines the organization which is used in the sampleconfig\n        # of the fabric.git development environment\n        Name: OrdererOrg\n\n        # ID to load the MSP definition as\n        ID: OrdererMSP\n\n        # MSPDir is the filesystem path which contains the MSP configuration\n        MSPDir: crypto-config\/ordererOrganizations\/example.com\/msp\n\n        # Policies defines the set of policies at this level of the config tree\n        # For organization policies, their canonical path is usually\n        #   \/Channel\/<Application|Orderer>\/<OrgName>\/<PolicyName>\n        Policies:\n            Readers:\n                Type: Signature\n                Rule: \"OR('OrdererMSP.member')\"\n            Writers:\n                Type: Signature\n                Rule: \"OR('OrdererMSP.member')\"\n            Admins:\n                Type: Signature\n                Rule: \"OR('OrdererMSP.admin')\"\n\n    - &Org1\n        # DefaultOrg defines the organization which is used in the sampleconfig\n        # of the fabric.git development environment\n        Name: Org1MSP\n\n        # ID to load the MSP definition as\n        ID: Org1MSP\n\n        MSPDir: crypto-config\/peerOrganizations\/org1.example.com\/msp\n\n        # Policies defines the set of policies at this level of the config tree\n        # For organization policies, their canonical path is usually\n        #   \/Channel\/<Application|Orderer>\/<OrgName>\/<PolicyName>\n        Policies:\n            Readers:\n                Type: Signature\n                Rule: \"OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')\"\n            Writers:\n                Type: Signature\n                Rule: \"OR('Org1MSP.admin', 'Org1MSP.client')\"\n            Admins:\n                Type: Signature\n                Rule: \"OR('Org1MSP.admin')\"\n            Endorsement:\n                Type: Signature\n                Rule: \"OR('Org1MSP.peer')\"\n\n        # leave this flag set to true.\n        AnchorPeers:\n            # AnchorPeers defines the location of peers which can be used\n            # for cross org gossip communication.  Note, this value is only\n            # encoded in the genesis block in the Application section context\n            - Host: peer0.org1.example.com\n              Port: 7051\n\n    - &Org2\n        # DefaultOrg defines the organization which is used in the sampleconfig\n        # of the fabric.git development environment\n        Name: Org2MSP\n\n        # ID to load the MSP definition as\n        ID: Org2MSP\n\n        MSPDir: crypto-config\/peerOrganizations\/org2.example.com\/msp\n\n        # Policies defines the set of policies at this level of the config tree\n        # For organization policies, their canonical path is usually\n        #   \/Channel\/<Application|Orderer>\/<OrgName>\/<PolicyName>\n        Policies:\n            Readers:\n                Type: Signature\n                Rule: \"OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')\"\n            Writers:\n                Type: Signature\n                Rule: \"OR('Org2MSP.admin', 'Org2MSP.client')\"\n            Admins:\n                Type: Signature\n                Rule: \"OR('Org2MSP.admin')\"\n            Endorsement:\n                Type: Signature\n                Rule: \"OR('Org2MSP.peer')\"\n\n        AnchorPeers:\n            # AnchorPeers defines the location of peers which can be used\n            # for cross org gossip communication.  Note, this value is only\n            # encoded in the genesis block in the Application section context\n            - Host: peer0.org2.example.com\n              Port: 9051\n\n    - &Org3\n        # DefaultOrg defines the organization which is used in the sampleconfig\n        # of the fabric.git development environment\n        Name: Org3MSP\n\n        # ID to load the MSP definition as\n        ID: Org3MSP\n\n        MSPDir: crypto-config\/peerOrganizations\/org3.example.com\/msp\n\n        # Policies defines the set of policies at this level of the config tree\n        # For organization policies, their canonical path is usually\n        #   \/Channel\/<Application|Orderer>\/<OrgName>\/<PolicyName>\n        Policies:\n            Readers:\n                Type: Signature\n                Rule: \"OR('Org3MSP.admin', 'Org3MSP.peer', 'Org3MSP.client')\"\n            Writers:\n                Type: Signature\n                Rule: \"OR('Org3MSP.admin', 'Org3MSP.client')\"\n            Admins:\n                Type: Signature\n                Rule: \"OR('Org3MSP.admin')\"\n            Endorsement:\n                Type: Signature\n                Rule: \"OR('Org3MSP.peer')\"\n\n        AnchorPeers:\n            # AnchorPeers defines the location of peers which can be used\n            # for cross org gossip communication.  Note, this value is only\n            # encoded in the genesis block in the Application section context\n            - Host: peer0.org3.example.com\n              Port: 11051\n\n    - &Org4\n        # DefaultOrg defines the organization which is used in the sampleconfig\n        # of the fabric.git development environment\n        Name: Org4MSP\n\n        # ID to load the MSP definition as\n        ID: Org4MSP\n\n        MSPDir: crypto-config\/peerOrganizations\/org4.example.com\/msp\n\n        # Policies defines the set of policies at this level of the config tree\n        # For organization policies, their canonical path is usually\n        #   \/Channel\/<Application|Orderer>\/<OrgName>\/<PolicyName>\n        Policies:\n            Readers:\n                Type: Signature\n                Rule: \"OR('Org4MSP.admin', 'Org4MSP.peer', 'Org4MSP.client')\"\n            Writers:\n                Type: Signature\n                Rule: \"OR('Org4MSP.admin', 'Org4MSP.client')\"\n            Admins:\n                Type: Signature\n                Rule: \"OR('Org4MSP.admin')\"\n            Endorsement:\n                Type: Signature\n                Rule: \"OR('Org4MSP.peer')\"\n\n        AnchorPeers:\n            # AnchorPeers defines the location of peers which can be used\n            # for cross org gossip communication.  Note, this value is only\n            # encoded in the genesis block in the Application section context\n            - Host: peer0.org4.example.com\n              Port: 13051\n\n################################################################################\n#\n#   SECTION: Capabilities\n#\n#   - This section defines the capabilities of fabric network. This is a new\n#   concept as of v1.1.0 and should not be utilized in mixed networks with\n#   v1.0.x peers and orderers.  Capabilities define features which must be\n#   present in a fabric binary for that binary to safely participate in the\n#   fabric network.  For instance, if a new MSP type is added, newer binaries\n#   might recognize and validate the signatures from this type, while older\n#   binaries without this support would be unable to validate those\n#   transactions.  This could lead to different versions of the fabric binaries\n#   having different world states.  Instead, defining a capability for a channel\n#   informs those binaries without this capability that they must cease\n#   processing transactions until they have been upgraded.  For v1.0.x if any\n#   capabilities are defined (including a map with all capabilities turned off)\n#   then the v1.0.x peer will deliberately crash.\n#\n################################################################################\nCapabilities:\n    # Channel capabilities apply to both the orderers and the peers and must be\n    # supported by both.\n    # Set the value of the capability to true to require it.\n    Channel: &ChannelCapabilities\n        # V2_0 capability ensures that orderers and peers behave according\n        # to v2.0 channel capabilities. Orderers and peers from\n        # prior releases would behave in an incompatible way, and are therefore\n        # not able to participate in channels at v2.0 capability.\n        # Prior to enabling V2.0 channel capabilities, ensure that all\n        # orderers and peers on a channel are at v2.0.0 or later.\n        V2_0: true\n\n    # Orderer capabilities apply only to the orderers, and may be safely\n    # used with prior release peers.\n    # Set the value of the capability to true to require it.\n    Orderer: &OrdererCapabilities\n        # V2_0 orderer capability ensures that orderers behave according\n        # to v2.0 orderer capabilities. Orderers from\n        # prior releases would behave in an incompatible way, and are therefore\n        # not able to participate in channels at v2.0 orderer capability.\n        # Prior to enabling V2.0 orderer capabilities, ensure that all\n        # orderers on channel are at v2.0.0 or later.\n        V2_0: true\n\n    # Application capabilities apply only to the peer network, and may be safely\n    # used with prior release orderers.\n    # Set the value of the capability to true to require it.\n    Application: &ApplicationCapabilities\n        # V2_0 application capability ensures that peers behave according\n        # to v2.0 application capabilities. Peers from\n        # prior releases would behave in an incompatible way, and are therefore\n        # not able to participate in channels at v2.0 application capability.\n        # Prior to enabling V2.0 application capabilities, ensure that all\n        # peers on channel are at v2.0.0 or later.\n        V2_0: true\n\n################################################################################\n#\n#   SECTION: Application\n#\n#   - This section defines the values to encode into a config transaction or\n#   genesis block for application related parameters\n#\n################################################################################\nApplication: &ApplicationDefaults\n\n    # Organizations is the list of orgs which are defined as participants on\n    # the application side of the network\n    Organizations:\n\n    # Policies defines the set of policies at this level of the config tree\n    # For Application policies, their canonical path is\n    #   \/Channel\/Application\/<PolicyName>\n    Policies:\n        Readers:\n            Type: ImplicitMeta\n            Rule: \"ANY Readers\"\n        Writers:\n            Type: ImplicitMeta\n            Rule: \"ANY Writers\"\n        Admins:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Admins\"\n        LifecycleEndorsement:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Endorsement\"\n        Endorsement:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Endorsement\"\n\n    Capabilities:\n        <<: *ApplicationCapabilities\n################################################################################\n#\n#   SECTION: Orderer\n#\n#   - This section defines the values to encode into a config transaction or\n#   genesis block for orderer related parameters\n#\n################################################################################\nOrderer: &OrdererDefaults\n\n    # Orderer Type: The orderer implementation to start\n    OrdererType: etcdraft\n\n    EtcdRaft:\n        Consenters:\n        - Host: orderer.example.com\n          Port: 7050\n          ClientTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt\n          ServerTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt\n\n    Addresses:\n        - orderer.example.com:7050\n\n    # Batch Timeout: The amount of time to wait before creating a batch\n    BatchTimeout: 2s\n\n    # Batch Size: Controls the number of messages batched into a block\n    BatchSize:\n\n        # Max Message Count: The maximum number of messages to permit in a batch\n        MaxMessageCount: 10\n\n        # Absolute Max Bytes: The absolute maximum number of bytes allowed for\n        # the serialized messages in a batch.\n        AbsoluteMaxBytes: 99 MB\n\n        # Preferred Max Bytes: The preferred maximum number of bytes allowed for\n        # the serialized messages in a batch. A message larger than the preferred\n        # max bytes will result in a batch larger than preferred max bytes.\n        PreferredMaxBytes: 512 KB\n\n    # Organizations is the list of orgs which are defined as participants on\n    # the orderer side of the network\n    Organizations:\n\n    # Policies defines the set of policies at this level of the config tree\n    # For Orderer policies, their canonical path is\n    #   \/Channel\/Orderer\/<PolicyName>\n    Policies:\n        Readers:\n            Type: ImplicitMeta\n            Rule: \"ANY Readers\"\n        Writers:\n            Type: ImplicitMeta\n            Rule: \"ANY Writers\"\n        Admins:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Admins\"\n        # BlockValidation specifies what signatures must be included in the block\n        # from the orderer for the peer to validate it.\n        BlockValidation:\n            Type: ImplicitMeta\n            Rule: \"ANY Writers\"\n\n################################################################################\n#\n#   CHANNEL\n#\n#   This section defines the values to encode into a config transaction or\n#   genesis block for channel related parameters.\n#\n################################################################################\nChannel: &ChannelDefaults\n    # Policies defines the set of policies at this level of the config tree\n    # For Channel policies, their canonical path is\n    #   \/Channel\/<PolicyName>\n    Policies:\n        # Who may invoke the 'Deliver' API\n        Readers:\n            Type: ImplicitMeta\n            Rule: \"ANY Readers\"\n        # Who may invoke the 'Broadcast' API\n        Writers:\n            Type: ImplicitMeta\n            Rule: \"ANY Writers\"\n        # By default, who may modify elements at this config level\n        Admins:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Admins\"\n\n    # Capabilities describes the channel level capabilities, see the\n    # dedicated Capabilities section elsewhere in this file for a full\n    # description\n    Capabilities:\n        <<: *ChannelCapabilities\n\n################################################################################\n#\n#   Profile\n#\n#   - Different configuration profiles may be encoded here to be specified\n#   as parameters to the configtxgen tool\n#\n################################################################################\nProfiles:\n\n    BasicChannel:\n        Consortium: SampleConsortium\n        <<: *ChannelDefaults\n        Application:\n            <<: *ApplicationDefaults\n            Organizations:\n                - *Org1\n                - *Org2\n                - *Org3\n                - *Org4\n            Capabilities:\n                <<: *ApplicationCapabilities\n\n    OrdererGenesis:\n        <<: *ChannelDefaults\n        Capabilities:\n            <<: *ChannelCapabilities\n        Orderer:\n            <<: *OrdererDefaults\n            OrdererType: etcdraft\n            EtcdRaft:\n                Consenters:\n                - Host: orderer.example.com\n                  Port: 7050\n                  ClientTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt\n                  ServerTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt\n                - Host: orderer2.example.com\n                  Port: 8050\n                  ClientTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer2.example.com\/tls\/server.crt\n                  ServerTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer2.example.com\/tls\/server.crt\n                - Host: orderer3.example.com\n                  Port: 9050\n                  ClientTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer3.example.com\/tls\/server.crt\n                  ServerTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer3.example.com\/tls\/server.crt\n                # - Host: orderer4.example.com\n                #   Port: 10050\n                #   ClientTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer4.example.com\/tls\/server.crt\n                #   ServerTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer4.example.com\/tls\/server.crt\n                # - Host: orderer5.example.com\n                #   Port: 11050\n                #   ClientTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer5.example.com\/tls\/server.crt\n                #   ServerTLSCert: crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer5.example.com\/tls\/server.crt\n            Addresses:\n                - orderer.example.com:7050\n                - orderer2.example.com:8050\n                - orderer3.example.com:9050\n                # - orderer4.example.com:10050\n                # - orderer5.example.com:11050\n\n            Organizations:\n            - *OrdererOrg\n            Capabilities:\n                <<: *OrdererCapabilities\n        Consortiums:\n            SampleConsortium:\n                Organizations:\n                - *Org1\n                - *Org2\n                - *Org3\n                - *Org4\n\nThanks a lot!","151":"Seems to be relatively simple question but I am not able to find a direct answer to it on the docs or online.\nIf in Solidity I please have a struct with a  structs mapping  I am trying to return it in a function I am reaching a dead-end, if I set it the return type as 'memory' I receive an error that because it is nested it must be declared as 'storage' type but 'storage' type can not be used to return data from functions :\npragma solidity ^0.8.0;\n\ncontract Nested {\n\n    struct Parent {\n        string parentPropertyA;\n        mapping(uint=>Child) childProperty;\n    }\n\n    struct Child {\n       string childPropertyA;\n    }\n\n    mapping(uint=>Parent) parents;\n\n    function getParent(uint parentId) public view returns (Parent memory) {\n        Parent memory parent = parents[parentId];\n        return parent;\n    }\n}   \n\nTypeError: Types containing (nested) mappings can only be parameters or return variables of internal or library functions.\n\nIs nested structures mapping return not support and I must flatten it in-order to return it?\nI saw questions regarding nested arrays but wanted to validate & verify!","152":"I created simple monitor to check a contract and its latest <transactions>. I know I can get this information by getting latest block like:\nblock = await this.<web3>.eth.getBlock(\"latest\");\n\nand later on check if receiver is the same as contract that I am monitoring.\nBut I would like to get history of that contract for example last 24 hours and see what <transactions> were made there. Is it possible to do that and if yes how can I achieve that?","153":"Hello there I have two smart contracts, one is an ERC1155 contract which mints a NFT from Moralis IPFS server, the other is a ERC20 token. I want users to be able to pay for the minted NFT using the ERC20 token but I'm receiving an error on the transferfrom() function:  brownie.exceptions.VirtualMachineError: revert: ERC20: transfer amount exceeds allowance. I did some research but nothing helped so far.\n\nThis is my ERC1155 contract\n\nimport \"@openzeppelin\/contracts\/token\/ERC1155\/ERC1155.sol\";\nimport \"@openzeppelin\/contracts\/access\/Ownable.sol\";\n\/\/ import \"@openzeppelin\/contracts\/utils\/math\/SafeMath.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC20\/IERC20.sol\";\nimport \"@chainlink\/contracts\/src\/v0.8\/VRFConsumerBase.sol\";\n\ncontract NFTPomoBots is ERC1155, Ownable {\n    IERC20 private _roboToken;\n\n    constructor(IERC20 roboToken)\n        ERC1155(\n            \"ipfs:\/\/QmcPjTnt33BRM5TPGyno7restoftheurl\/({id}.json\"\n        )\n    {\n        _roboToken = roboToken;\n    }\n\n    function mintPomoBot(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public {\n        require(_roboToken.transferFrom(msg.sender, address(this), 1));\n        _mint(account, id, amount, \"\");\n    }\n}\n\n\nthis is the ERC20 contract\n\/\/ SPDX-License-Identifier: MIT\n\nimport \"@openzeppelin\/contracts\/token\/ERC20\/ERC20.sol\";\nimport \"@openzeppelin\/contracts\/access\/Ownable.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC20\/extensions\/ERC20Burnable.sol\";\n\npragma solidity ^0.8.0;\n\ncontract RoboToken is ERC20, Ownable {\n    uint256 public maxSupply = 100000 * 10**18;\n\n    constructor() ERC20(\"Pomobots Token\", \"POMO\") {\n        _mint(msg.sender, maxSupply);\n    }\n\n    function transferToAccount(\n        address to,\n        uint256 amount,\n        bool completedTime\n    ) public onlyOwner {\n        require(completedTime == true);\n        _mint(to, amount);\n    }\n\n    function approveNFTContract(address _tokenAddress) public onlyOwner {\n        approve(_tokenAddress, maxSupply);\n    }\n}\n\n\nthis is the test script\ndef test_can_mint_new_nft():\n\n    # Arrange\n    account1 = get_account()\n    print(f\"account 1 {account1.address}\")\n    account2 = get_account(1)\n    print(f\"account 2 {account2.address}\")\n\n    robo_token = deploy_erc20_token()\n    pomobot_token = NFTPomoBots.deploy(robo_token, {\"from\": account1})\n    # Act\n    tx1 = robo_token.transferToAccount(account2, 10, True)\n    tx1.wait(1)\n\n    print(robo_token.balanceOf(account2.address))\n    tx2 = robo_token.approve(account2.address, robo_token.balanceOf(account2.address))\n    tx2.wait(1)\n\n    # assert\n    assert pomobot_token.mintPomoBot(account2.address, 20, 1, {\"from\": account2})\n    print(f\"nft minted to {account2.address}\")\n    print(robo_token.balanceOf(account2.address))\n\n\nAny help is appreciated, also should I make the function minPomobot() payable?","154":"This might be a dumb question but I cannot find an answer and I'm really curious about it.\nSo there are many test networks like Rinkeby, Kovan, Ropsten etc ... These testnets offer free tokens (Faucet), but many of them offer some small amounts that are not enough for a lot of testing.\nI have many questions ...\nWhere does this \"faucet\" come from ?\nIs it unlimited ? If not, why not ... ? If it is only for testing and has no value, why are we limited to get only specific (sometimes very small) amounts of test token ?\nCan anyone create a testnet with free tokens ?\nI have a lot of questions but I will limit myself to these ones for now.","155":"Did somebody verify as BSC testnet after nov 2021?\n-Issue Detail:\nMainet I can get api as https:\/\/bscscan.com\/myapikey\nHowever BSC testnet, doesn't support API.\nhttps:\/\/testnet.bscscan.com\/myapikey\n[ What I did ]\n1.Access API page on testnet.\nhttps:\/\/testnet.bscscan.com\/apidoc\nHowever I can't find\n2.I did just tried without testnet API\nHowever, shows error\n\"Error in plugin @nomiclabs\/hardhat-etherscan: testnet is an invalid address.\"\n3.BSC testnet register page is not working as well.\n[ What I expected ]\nVerify contract by hardhat","156":"I have a <hyperledger>-fabric project with 3 separate hosts and each host includes 1 Organization. Each Organization has 2 Peers, 2 Orderers, 1 CA Service(I don't have a separate CA for orderers and all the nodes in each organization get their certificates from the same CA service).\nAll the channels and chaincodes and everything else work correctly. I use an API service to communicate with the network, and I can add users with API correctly to the network. But the problem is:\nWhen I'm trying to invoke the chaincode with API, e.g: adding an asset or querying the ledger (submitting and evaluating <transactions>), the asset will be added after a while(about 20 seconds), but I get the following error:\nE1116 07:17:03.978929679       1 ssl_transport_security.cc:1245] Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.\n\n\n2021-11-16T07:17:06.893Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Committer- name: orderer0.org2.example.com:9050, url:grpcs:\/\/orderer0.org2.example.com:9050\n\n\n2021-11-16T07:17:06.894Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server orderer0.org2.example.com:9050 url:grpcs:\/\/orderer0.org2.example.com:9050 timeout:3000\n\n\n2021-11-16T07:17:06.894Z - error: [DiscoveryService]: _buildOrderer[mychannel] - Unable to connect to the discovered orderer orderer0.org2.example.com:9050 due to Error: Failed to connect before the deadline on Committer- name: orderer0.org2.example.com:9050, url:grpcs:\/\/orderer0.org2.example.com:9050\n\n\nE1116 07:17:06.909267625       1 ssl_transport_security.cc:1245] Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.\n\n\n2021-11-16T07:17:09.897Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Committer- name: orderer1.org2.example.com:10050, url:grpcs:\/\/orderer1.org2.example.com:10050\n\n\n2021-11-16T07:17:09.898Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server orderer1.org2.example.com:10050 url:grpcs:\/\/orderer1.org2.example.com:10050 timeout:3000\n\n\n2021-11-16T07:17:09.898Z - error: [DiscoveryService]: _buildOrderer[mychannel] - Unable to connect to the discovered orderer orderer1.org2.example.com:10050 due to Error: Failed to connect before the deadline on Committer- name: orderer1.org2.example.com:10050, url:grpcs:\/\/orderer1.org2.example.com:10050\n\n\nE1116 07:17:09.928123699       1 ssl_transport_security.cc:1245] Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.\n\n\n2021-11-16T07:17:12.901Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Committer- name: orderer0.org3.example.com:11050, url:grpcs:\/\/orderer0.org3.example.com:11050\n\n\n2021-11-16T07:17:12.902Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server orderer0.org3.example.com:11050 url:grpcs:\/\/orderer0.org3.example.com:11050 timeout:3000\n\n\n2021-11-16T07:17:12.902Z - error: [DiscoveryService]: _buildOrderer[mychannel] - Unable to connect to the discovered orderer orderer0.org3.example.com:11050 due to Error: Failed to connect before the deadline on Committer- name: orderer0.org3.example.com:11050, url:grpcs:\/\/orderer0.org3.example.com:11050\n\n\nE1116 07:17:12.952061671       1 ssl_transport_security.cc:1245] Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.\n\n\n2021-11-16T07:17:15.948Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Committer- name: orderer0.org3.example.com:11050, url:grpcs:\/\/orderer0.org3.example.com:11050\n\n\n2021-11-16T07:17:15.949Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server orderer0.org3.example.com:11050 url:grpcs:\/\/orderer0.org3.example.com:11050 timeout:3000\n\n\n2021-11-16T07:17:15.949Z - error: [DiscoveryService]: _buildOrderer[mychannel] - Unable to connect to the discovered orderer orderer0.org3.example.com:11050 due to Error: Failed to connect before the deadline on Committer- name: orderer0.org3.example.com:11050, url:grpcs:\/\/orderer0.org3.example.com:11050\n\n\nE1116 07:17:16.120702832       1 ssl_transport_security.cc:1245] Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.\n\nThanks in advance for your help","157":"I heard that we can add only one validator from one node on polkadot(Heard this from one of the substrate core developer). But , In substrate we are able to add more than one validator from same node which leads to below problem---- \nAfter adding 3 validators from same node(in staging) the finalization has been stopped and blocks are not being produced.\n\nHow to solve the above problem?\nhow polkadot is able to stop adding many validators from same node?(If the above bold text is true)","158":"Submit Registration request\nThe execution failed due to an exception.\n\nTrying to register my keeper contracts and getting this error. Has anyone navigated it? or should I just wait?","159":"In an online <blockchain> developer course I am participating in, one prerequisite was javascript object oriented & async programming, which I do not have experience in. However, having some experience in programming, I figured I would just learn as I go.\nA practice activity (not a graded one, those I can not get help on) on <blockchain> hashing wants us to create an async hashing function using promises to hash data with SHA256. There are 2 main files: app.js, and block.js .\napp.js (this was given to us, it is the main file we run):\n\/**\n * Importing the Block class\n *\/\n\/\/\nconst BlockClass = require('.\/block.js');\n\n\/**\n * Creating a block object\n *\/\nconst block = new BlockClass.Block(\"Test Block\");\n\n\/\/ Generating the block hash\nblock.generateHash().then((result) => {\n    console.log(`Block Hash: ${result.hash}`);\n    console.log(`Block: ${JSON.stringify(result)}`);\n}).catch((error) => {console.log(error)});\n\n\/**\n * Step 3: Run the application in <node.js>\n * \n *\/\n\n\/\/ From the terminal: cd into Project folder\n\/\/ From the terminal: Run node app.js to run the code\n\nblock.js ( the arrows indicate the part I added myself, everything else was given.\n\/**\n * Import crypto-js\/SHA256 library\n *\/\nconst SHA256 = require('crypto-js\/sha256');\n\n\/**\n * Class with a constructor for block \n *\/\nclass Block {\n\n    constructor(data){\n        this.id = 0;\n        this.nonce = 144444;\n        this.body = data;\n        this.hash = \"\";\n    }\n    \n    \/**\n     * Step 1. Implement `generateHash()`\n     * method that return the `self` block with the hash.\n     * \n     * Create a Promise that resolve with `self` after you create \n     * the hash of the object and assigned to the hash property `self.hash = ...`\n     *\/\n    \/\/ \n    generateHash() {\n        \/\/ Use this to create a temporary reference of the class object\n        let self = this;\n\n> \/\/Implement your code here\n>         self.hash = SHA256(JSON.stringify(self.body));\n>           const promise = new Promise(function(myResolve,myReject){\n>           if(self.hash = SHA256(JSON.stringify(self.body))){\n>           myResolve(self);\n>           }else{\n>            myReject(Error(\"It Broke\")); \n>           }\n>         \n>         });\n>       \n>           promise.then(\n>         function(result){this.hash = result.hash;},\n>         function(error){console.log(error);}\n>         );\n>     }\n}\n\n\/\/ Exporting the class Block to be reuse in other files\nmodule.exports.Block = Block;\n\nUtilizing online resources, I do sort of understand promises, but not really- and definitely not how to apply them here. I was hoping I could get some help on this.","160":"When a market transaction is happening, on the ERC20 token interface approve and transferFrom return true, so, after these two returns I know I can do some stuff like execute a NFT transfer.\nBut on ERC777 send method dont return nothing. How could I realize if anyone paid in order to forward in my operation?\nEx.:\n\/\/ERC20\nif (token.approve(address(this), amount)) {\n      if (token.transferFrom(msg.sender, idToMarketItem[itemId].seller, amount)) {\n        IERC721(nftContract).transferFrom(address(this), msg.sender, tokenId);\n      }\n    }\n\n\/\/ERC777\n\n token.send(idToMarketItem[itemId].seller, amount, \"\");\n \/\/????\n IERC721(nftContract).transferFrom(address(this), msg.sender, tokenId);","161":"I wonder how to freeze token account with update authority.\n(I don't have freeze authority. The MasterEdition has freeze authority, I think. I know that only freeze authority can freeze token account, but how can I use master edition account?)\nThis is my code.\nexport const freezeAccount = async (nftMintAccount : PublicKey, tokenAccount : PublicKey) => {\n  const tokenAccountOwner = loadWalletKey(keyfile_tokenAccountOwner);\n  const authority = loadWalletKey(keyfile);\n  const token = new Token(solConnection, nftMintAccount, TOKEN_PROGRAM_ID, authority);\n  let result = await token.freezeAccount(tokenAccount, tokenAccountOwner, []);\n}\n\n\nauthority: nftMintAccount's update authority keypair\n(nftMintAccount's mint & freeze authority is MasterEdition now. but how can I use it to freeze account?)\ntokenAccountOwner: owner of tokenAccount\ntokenAccount: nftMintAccount's tokenAccount which is owned by tokenAccountOwner\n\nThe result says:\n    Program log: Instruction: FreezeAccount\n    Program log: Error: owner does not match\n\nbut I checked authority and tokenAccountOwner several times.\nThey were sure. but what's the matter?\nwhose owner dismatches?\nPlease help me.","162":"Let's say there existed a <blockchain> that recorded the history of a rental real estate property. If I wanted to add a review of my experience living in that property, how would the <blockchain> verify that the review is genuine? Let's assume that any review coming from a person who really lived there, or who really visited there is genuine. What we want to avoid is someone who has not lived there or who had not visited leaving a review that is permanently added to the <blockchain>.\nMy guess is nodes of the <blockchain> who are attempting to verify the review would connect to databases that would have information on whether a person lived or visited the property. But I may also be missing how <blockchain> works alto<geth>er.\nThanks in advance","163":"I want to run a blogging site like Blogger.com on Ethereum network, I found IPFS is currently being used for data and image storage in <blockchain> but is it the best option or shall I go with legacy RDBMS for data and image storage and just map location with <blockchain> using hashes?\nPlease advise what is the best option, both from economic and technical perspective?","164":"We want to create a crypto exchange website by using Binance API for sending and receiving crypto assets. But the problem is that we cannot generate unique addresses per user per coin and all the users are sending theirs assets into the same deposit address.\nHow can we generate new deposit address per user per coin ?","165":"I have setup a chainlink oracle on kovan as well as bnb testnet, and have funded both of them with ETH and BNB. Now I would like to move towards mainnet deployment but I still haven't found a way to fetch my oracle's private key so that I can reclaim my ETH and BNB on mainnet once the job of oracle is completed. I have searched about it and found that the private key is stored encrypted in some keys.json file but I am unable to find such file. I can only find a secrets file but not sure how to fetch the private key from that. Any help would really be helpful. Thank you","166":"I was reading the 04.token-contract(https:\/\/github.com\/near-examples\/workshop--exploring-assemblyscript-contracts\/blob\/master\/assembly\/A.sample-projects\/04.token-contract\/assembly\/index.ts).\nWhat's the concept difference between the exported functions:\nexport function transfer(to: string, tokens: u64): boolean\nand\nexport function transferFrom(from: string, to: string, tokens: u64): boolean ?\nAnd please, would it be okay to include a little documentation for this smart contract?\nThank you!","167":"I'm trying to send <transactions> to the polygon network using ethers.js. After submitting the transaction, i await tx.wait(), but it fails to resolve 50% of the time.  I saw other people were having similar issues but was due to their gas price being too low.  I currently have this code:\nconst getWallet = (): Wallet => {\n  return new ethers.Wallet(PRIVATE_KEY, HTTP_PROVIDER);\n};\nconst wallet = getWallet();\nconst gasPrice = 50000000000;\nconst swap1 = await wallet.sendTransaction({\n      data: tx1.data,\n      chainId: tx1.chainId,\n      from: tx1.from,\n      gasLimit: 350449, \n      gasPrice: gasPrice, \n      value: '0x' + new BigNumber(tx1.value).toString(16),\n      to: tx1.to,\n      nonce: nonce,\n    });\n\n\nI've always returned an object that has the tx hash, but when I go to look up that hash on polyscan it never appears. After waiting sometimes up to an hour tx.wait() still does not resolve and the transaction still doesn't appear in polyscan.\nI cancel my script, bump the gasPrice up by 20% and try to run it again w\/ the same nonce (hoping to replace it). At that point I'm usually told the replacement gas fee is too low.\nCan someone explain what I'm doing wrong here?","168":"I'm using Hive-<blockchain> SDK for NodeJS, hive-js\nI can successfully connect to the <blockchain>, retrieves blocks and <transactions> via getBlockStream API, but I reach the end of the stream event, I do not find a standard way to restart the stream:\nclient.<blockchain>.getBlockStream({ mode: dhive.<blockchain>Mode.Latest })\n                    .on('data', handleBlock)\n                    .on('error', errorBlock)\n                    .on('end', () => {\n                        console.log('Reached end of stream')\n                        \/\/ restart stream here?\n                    \n                    });\n\nIn fact, it is possibile to pause the stream and resume:\n\/\/pause stream\npauseStream = async () => {\n    state = stream.pause();\n};\n\n\/\/resume stream\nresumeStream = async () => {\n    state = state.resume();\n};\n\nbut apparently not to restart.","169":"https:\/\/kctheservant.medium.com\/exploring-the-behaviour-of-<hyperledger>-fabric-when-world-state-is-tampered-764676fe90f2\nI am trying a similar approach as in this link but with some changes. I want to examine the same scenario with only one organisation and two peers.\nI looked it up and people had suggested to make both the peers and endorsing peers or either just create one more organisation. Couldn't find anything helpful in the <hyperledger> docs as well. Can someone please help me with this. Also, I am fairly new to all of this.\nUsing <hyperledger>-fabric version 2.3.0","170":"This code prints the most recent result that it fetches from api_url whenever I run the code, but I want it to check if result is same as last then do not print it.\nNote: This is my first time asking a question here so please forgive, If I made any mistake in the question.\n api_url= \"https:\/\/api.bscscan.com\/api? module=account&action=tokentx&contractaddress=smartcontract&address=\" + person1[\"address\"] + \\\n    \"&startblock=10290674&endblock=999999999&page=1&offset=1&sort=desc&apikey=APIKEY\"\n\n response = requests.get(api_url)\n address_content = response.json()\n result = address_content.get(\"result\")  \n\n for n, transaction in enumerate(result):\n    block = transaction.get(\"blockNumber\")\n    hash = transaction.get(\"hash\")\n    tx_from = transaction.get(\"from\")\n    tx_to = transaction.get(\"to\")\n    value = transaction.get(\"value\")\n    confirmations = transaction.get(\"confirmations\")\n\n    coin_value = Decimal(value)\/1000000000000000000\n\n    coin_value = int(value)\/1000000000\n    print(\"COIN\", coin_value)\n    print(\"\\n\")\n    \n    if tx_to in (tx_sell, tx_sell2):\n        print(\"sell\")\n    elif tx_from in (tx_sell, tx_sell2):\n        print(\"buy\")","171":"I made a folder.  Then cloned code from GH into it.  so it's a folder inside my folder.  I run (node index.js) and it throws 'error, module not found.  What can I do differently?\n`josh@Joshs-MBP random % node index.js\nnode:internal\/modules\/cjs\/loader:927\n  throw err;\n  ^\n\nError: Cannot find module '\/Users\/josh\/Desktop\/random\/index.js'\n    at Function.Module._resolveFilename (node:internal\/modules\/cjs\/loader:924:15)\n    at Function.Module._load (node:internal\/modules\/cjs\/loader:769:27)\n    at Function.executeUserEntryPoint [as runMain] (node:internal\/modules\/run_main:76:12)\n    at node:internal\/main\/run_main_module:17:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}josh@Joshs-MBP random % `","172":"using <web3> (<python>3) I am trying to decode InputData of the BSC transaction as seen on BscScan\n\nIn some solutions I've found code below is being used:\nimport <web3>\nfrom <web3>.contract import Contract\n...\ncontract = <web3>.eth.contract(address=<web3>.toChecksumAddress(tokenAddress), abi=abi)\ncontract.functions.decode_function_input(transaction.input)\n\nHowever, the abi's doesn't seem to have this function \"decode_function_input\" defined, as I am getting an error:\n\"<web3>.exceptions.ABIFunctionNotFound: (\"The function 'decode_function_input' was not found in this contract's abi. \", 'Are you sure you provided the correct contract abi?')\"\n\nI am 100% that the abi is correct. Also, on BscScan contract raw view, the function 'decode_function_input' indeed is not present.\nAny other solutions, how to decode the Input Data?","173":"I was reading about the <blockchain>, as I wanted to make a small implementation.\nWhat I did not understand is what happens if a miner adds valid PoW to a block with <transactions> that have an invalid digital signature, why doesn't the <blockchain> just continue with the forged block and keep stacking blocks on top of it? How is it \"corrected\"?","174":"I've just started to study substrate, and the Add a Pallet tutorial already has me seriously confused:\n\nIt is important to note that the Substrate runtime compiles to both a native Rust std binary and a WebAssembly (Wasm) binary. For more information about compiling std and no_std features, see XXX.\n\nThis is fine, I'm familiar with std and no_std. My impression is that you either have std enabled and compile to native Rust binary, or you don't and compile to WASM binary.\nBut then, when I check out the runtime's lib.rs, I find the following:\n#![cfg_attr(not(feature = \"std\"), no_std)]\n\/\/ `construct_runtime!` does a lot of recursion and requires us to increase the limit to 256.\n#![recursion_limit = \"256\"]\n\n\/\/ Make the WASM binary available.\n#[cfg(feature = \"std\")]\ninclude!(concat!(env!(\"OUT_DIR\"), \"\/wasm_binary.rs\"));\n\n\/\/ ...\n\nThis confuses me: Why is the WASM binary \"made available\" when std is enabled? I would have expected the opposite. And what exactly does \"made available\" mean in this context?\nI dug a little deeper and found the following in an older version of the tutorial, which goes a little more into detail, causing even more grievous mental confusion:\n\nThis is important to enable the Substrate runtime to compile to both native binaries (which support Rust std) and Wasm binaries (which do not: no_std).\n\n(Again, this is fine, although I'm not sure what they mean by \"support\".) And then later, refering to the file whose first lines I've posted above:\n\nYou can see that at the top of the file, we define that we will use no_std when we are not using the std feature. A few lines lower you can see #[cfg(feature = \"std\")] above the wasm_binary.rs import, which is a flag saying to only import the WASM binary when we have enabled the std feature.\n\nWhat?!\nSo, if std is enabled, then we use the Rust std library and WASM? And when std is not enabled, then we only use libcore? This seems to completely contradict the earlier statements.\nI am absolutely certain that all of this is the result of a seriously stupid mistake on my part, but I can't figure it out.\nEdit. I've had an extremely enlightening conversation with Shawn Tabrizi on this topic: https:\/\/github.com\/substrate-developer-hub\/substrate-docs\/issues\/531","175":"I'm trying to run node compile.js but it's throwing me this error and idea what I am doing wrong:\n\nnode:assert:400 throw err; ^ AssertionError [ERR_ASSERTION]: Invalid callback object specified\n\n\nmy inbox.sol\npragma solidity ^0.8.9;\n\ncontract Inbox{\n    string public message;\n\n    function Inbox(string intialMessage) public {\n        message = intialMessage;\n    }\n\n    function setMessage(string newMessage) public {\n        message = newMessage;\n    }\n}\n\nmy package.json\n{\n  \"dependencies\": {\n    \"ganache-cli\": \"^6.12.2\",\n    \"mocha\": \"^9.1.3\",\n    \"solc\": \"^0.8.9\",\n    \"<web3>\": \"^1.6.0\"\n  }\n}","176":"Please pardon me if this question sounds dumb, but I am a little new to this concept and there are not many resources out there I could find. Thanks.\nSuppose I have created a ERC721 smart contract and used that to mint an NFT token. Now I want to be able to transfer that token from one network to another. I know to mint transfer the NFT to another user, the owner needs to approve the transaction. I have already tried this on rinkeby testnet. But I have no idea how to transfer from say rinkeby testnet to another network. Please see my mint and transfer functions below:\nfunction _transfer(\n        address _from,\n        address _to,\n        uint256 _tokenId\n    ) external payable {\n        require(ownerOf(_tokenId) == _from);\n        _owners[_tokenId] = _to;\n        _balances[_from]--;\n        _balances[_to]++;\n\n        emit Transfer(_from, _to, _tokenId);\n    }\n\n    function _mint(address _to, uint256 _tokenId)\n        internal\n        uniqueToken(_tokenId)\n        notZeroAddress(_to)\n    {\n        _owners[_tokenId] = _to;\n        _balances[_to] += 1;\n        tokenExist[_tokenId] = true;\n       \n        emit Transfer(address(0), msg.sender, _tokenId);\n    }\n\nI would appreciate any assistance. Thanks.","177":"I am making a dex using 0x API. I did the swap and allow token spend with <web3> But I am facing an issue. Whenever I am swapping tokens I need to allow token spend every time but when you look at PancakeSwap they ask for spending only once, I want to achieve that in my dex.\n  const BscABI = await axios.get(`https:\/\/api.bscscan.com\/api`, {\n     params: {\n          module: 'contract',\n          action: 'getabi',\n          address: receipt.sellTokenAddress,\n        }\n    })\n    const TokenAbi = JSON.parse(BscABI.data.result);\n    const Tokencontract = new <web3>.eth.Contract(TokenAbi, receipt.sellTokenAddress);\n    const maxApproval = new BigNumber(2).pow(256).minus(1);\n    await Tokencontract.methods.approve(receipt.allowanceTarget, maxApproval).send({from: metaMaskAddress, chainId: 56})\n    .then((data: any) => {\n      alert(\"Token Spend Allowed\");\n    })\n    .then(async () => {\n      const txHash = await <web3>.eth.sendTransaction({\n        from: metaMaskAddress,\n        data: receipt.data,\n        gas: receipt.gas,\n        to: receipt.allowanceTarget,\n        chainId: 56\n      });\n    )\n    .catch(() => {\n        setMessage(\"Token Spend Allowance Failed\");\n        setError(true);\n    });","178":"I have already synced sp-io in all of the cargo.toml to same file and also tried cargo clean and deleting cargo.lock but still getting the same error. Can someone please help me.\nThis is the screenshot containing the error","179":"I am getting into a Token project. Can I append more functions to the token and more smartcontract after compiling the token to the BSC, or is there nothing else to be done at that point?","180":"My problem is that i get an Error while trying to use the chaincode for the test-network but running my application instead of the application-javascript provided at fabric-samples\/asset-transfer-basic.\nThe steps that I follow are:\n1.  .\/network.sh up createChannel -c mychannel -ca\n2.  .\/network.sh deployCC -ccn basic -ccp ..\/asset-transfer-basic\/chaincode-javascript\/ -ccl javascript\n3.  run my application thats is exaclty same with the one provided at docs (fabric-samples\/asset-transfer-basic) to InitLedger and they query or update it.\n\nThe error I get is the following:\n--> Submit Transaction: InitLedger, function creates the initial set of assets on the ledger\n2021-11-09T15:54:16.248Z - error: [Transaction]: Error: No valid responses from any peers. Errors:\n******** FAILED to run the application: Error: No valid responses from any peers. Errors:\nThe code in my application is exactly the same as the one at docs:\nconst ccp = buildCCPOrg1();\nconst caClient = buildCAClient(FabricCAServices, ccp, 'ca.org1.example.com');\n\nconst wallet = await buildWallet(Wallets, walletPath);\n\nawait enrollAdmin(caClient, wallet, mspOrg1);\nawait registerAndEnrollUser(caClient, wallet, mspOrg1, org1UserId, 'org1.department1');\n\nconst gateway = new Gateway();\n\nawait gateway.connect(ccp, {\n    wallet,\n    identity: org1UserId,\n    discovery: { enabled: false, asLocalhost: true } \/\/ using asLocalhost as this gateway is using a fabric network deployed locally\n});\n\nconst network = await gateway.getNetwork(channelName);\nconst contract = network.getContract(chaincodeName);\nawait contract.submitTransaction('InitLedger');","181":"Hello there I'm trying to use a contract made on solidity and deployed with brownie on my front end using React and typescript. also using the framework usedapp, as the documentation here says in order to interact with a contract function I should create a new contract, providing the address and the ABI. Here is my code:\nimport {useContractFunction, useEthers} from '@usedapp\/core'\nimport TokenFarm from \"..\/chain-info\/contracts\/TokenFarm.json\"\nimport ERC20 from \"..\/chain-info\/contracts\/MockERC20.json\"\nimport networkMapping from \"..\/chain-info\/deployments\/map.json\"\nimport {constants, utils} from \"ethers\"\nimport {Contract} from '@ethersproject\/contracts'\n\nexport const useStakeTokens = (tokenAddress: string) => {\n    \/\/ chainId \n    const {chainId} = useEthers()\n    \/\/ abi\n    const {abi} = TokenFarm\n    \/\/ address\n    \/\/ const dappTokenAddress = chainId ? networkMapping[String(chainId)][\"DappToken\"][0] : constants.AddressZero\n    const tokenFarmAddress = chainId ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero\n    \/\/ approve\n    const tokenFarmInterface = new utils.Interface(abi)\n    const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface)\n\n    const erc20ABI = ERC20.abi\n    const erc20Interface = new utils.Interface(erc20ABI)\n    const erc20Contract = new Contract(tokenAddress, erc20Interface)\n    \/\/ approve\n    const { send: approveErc20Send, state: approveAndStakeErc20State } =\n        useContractFunction(erc20Contract, \"approve\", {\n            transactionName: \"Approve ERC20 transfer\",\n        })\n\n}\n\nThe error occurs on useContractFunctionwith erc20Contract:\nVscode error\nThis is the complete error message\nArgument of type 'import(\"\/home\/cromewar\/Solidity-Projects\/full_defi_app\/dev\/front_end\/node_modules\/@ethersproject\/contracts\/lib\/index\").Contract' is not assignable to parameter of type 'import(\"\/home\/cromewar\/Solidity-Projects\/full_defi_app\/dev\/front_end\/node_modules\/@usedapp\/core\/node_modules\/@ethersproject\/contracts\/lib\/index\").Contract'.\n  Types of property '_runningEvents' are incompatible.\n    Type '{ [eventTag: string]: RunningEvent; }' is not assignable to type '{ [eventTag: string]: RunningEvent; }'. Two different types with this name exist, but they are unrelated.\n      'string' index signatures are incompatible.\n        Type 'RunningEvent' is not assignable to type 'RunningEvent'. Two different types with this name exist, but they are unrelated.\n          Types have separate declarations of a private property '_listeners'.  TS2345\n\n    23 |     \/\/ approve\n    24 |     const { send: approveErc20Send, state: approveAndStakeErc20State } =\n  > 25 |         useContractFunction(erc20Contract, \"approve\", {\n       |                             ^\n    26 |             transactionName: \"Approve ERC20 transfer\",\n    27 |         })\n    28 |\n\nArgument of type 'import(\"\/home\/cromewar\/Solidity-Projects\/full_defi_app\/dev\/front_end\/node_modules\/@ethersproject\/contracts\/lib\/index\").Contract' is not assignable to parameter of type 'import(\"\/home\/cromewar\/Solidity-Projects\/full_defi_app\/dev\/front_end\/node_modules\/@usedapp\/core\/node_modules\/@ethersproject\/contracts\/lib\/index\").Contract'.\n  Types of property '_runningEvents' are incompatible.\n    Type '{ [eventTag: string]: RunningEvent; }' is not assignable to type '{ [eventTag: string]: RunningEvent; }'. Two different types with this name exist, but they are unrelated.\n      'string' index signatures are incompatible.\n        Type 'RunningEvent' is not assignable to type 'RunningEvent'. Two different types with this name exist, but they are unrelated.\n          Types have separate declarations of a private property '_listeners'.  TS2345\n\nIt says the types are not compatible but they are actually the exact same, does anyone has a clue about what is happening?","182":"Looking at OpenSea's API, Retreiving Events:\nhttps:\/\/docs.opensea.io\/reference\/retrieving-asset-events\nonly_opensea\nis a boolean that can be true\/false\nThe API description is:\n\"Restrict to events on OpenSea auctions. Can be true or false\"\nDoes anyone know exactly what this does?\nIf true, does it only return OpenSea Auctions...\nAnd if false, returns all events (auctions or not)?","183":"I was implementing the fabric v2.2 <hyperledger> fabric sample > test-network, all the binaries and module versions are updated and satisfied but while creating channel getting this error as highlighted as shown click to see error","184":"I want to publish files on ipfs but it's showing me an error.\nHere is my code...\nconst ipfsClient = require('ipfs-http-client');\nconst ipfs = ipfsClient({host: 'ipfs.infura.io', port: 5001, protocol: \n'https'});\n\nfunction App() {\nconst [buffer, setBuffer] = useState();\n\nconst handleChange = (event) => {\n  event.preventDefault();\n  const file = event.target.files[0];\n  const reader = new window.FileReader();\n  reader.readAsArrayBuffer(file);\n  reader.onloadend = () =>{\n    setBuffer(reader.result);\n  }\n\n}\n\nconst handleSubmit = async(event) => {\n    event.preventDefault();\n    console.log('submitting...')\n    await ipfs.add({buffer}, (error, result) => {\n      console.log('ipfs results');\n      if(error){\n        console.error(error);\n        return;\n      }\n    });\n}\n\nI am getting this error in browser...\n\nTypeError: ipfsClient is not a function","185":"So I am building an android\/windows app for a library management system that is close to release, as of now the app stores the data either locally (on device) or in the cloud (Gdrive, Onedrive).\nI have been studying about <blockchain> and I was wondering if an existing android app like mine can integrate with <blockchain> to store data? If so, How do you do that?\nMind you, I do not want to build a new dapp, I just want to store the data generated by the users of my app in a <blockchain>.","186":"So basically, what's happening is, a Smart Contract is the business logic\/backend code you write for your decentralized app, or Dapp, and deploy it to the Ethereum <blockchain>. Then, whenever you want to perform computation on the Dapp (like changing a variable or executing a function that changes a certain parameter of the Smart Contract), you send a Contract Transaction to the Ethereum network which routes it to the appropriate Node, and alongside with that, you send some Ether.\nA volunteer on the Ethereum network lends their computing power to add that Contract Transaction to the Ethereum <blockchain>, \"like mining\", and receives the ether you sent as a reward for completing the task. This is much like how Bitcoin mining works, except, in this case, the miners lend their hardware to perform computing tasks for your Dapp.\nSo what is ultimately happening is, you change data on your Dapp by adding entries into the <blockchain> itself, every time you call a function that changes a variable\/data inside the Smart Contract instance? So you could say, this is like an AWS server, except the computing power doesn't come from Amazon but from regular people looking to mine some Ether?","187":"I am new to the world of <web3> and have found the explanations of some concepts fuzzy. Can someone explain to me in simple terms what MetaMask does? I've seen that it acts as a gateway to DApps but my question is; does it simulate us running an Ethereum node on our local machine? Secondly, why can't regular browsers access DApps without it?","188":"Trying to run Metaplex with locally hosted test validator. The wallet seems to be connecting correctly and showing the balance as expected. But it fails to initialize the store. Whenever I press \"init store\" I run into a timeout waiting for the transaction confirmation.\nTo enable connecting to localhost I've modified ENDPOINTS in 'connection.ts by adding the following to the array:\n{\n    name: 'localnet' as ENV,\n    endpoint: 'http:\/\/127.0.0.1:8899',\n    ChainId: ChainId.Devnet,\n} \n\nUpon a closer investigation it seems that the init store does not actually deploy the programs to the local <blockchain>.","189":"I am going to build my own <hyperledger> fabric network , but I cannot see how to start my project without the fabric-sample, because all the tutorials I found did not tell me how. How can I get those folders and stuffs for my own project? .","190":"I am trying to run my java <blockchain> program and print the output in JSON (using gson library).\npackage <blockchain>;\nimport java.util.ArrayList;\nimport com.google.gson.GsonBuilder;\nimport com.google.gson.*;\nimport java.sql.Time;\n\npublic class NoobChain {\n        public static ArrayList<Block> <blockchain> = new ArrayList<Block>(); \n        \/\/main method\n        public static void main(String[] args) {\n            <blockchain>.add(new Block(\"Hi im the first block\", \"0\"));        \n            <blockchain>.add(new Block(\"Yo im the second block\",<blockchain>.get(<blockchain>.size()-1).hash)); \n            <blockchain>.add(new Block(\"Hey im the third block\",<blockchain>.get(<blockchain>.size()-1).hash));\n            \n            String <blockchain>Json = new GsonBuilder().setPrettyPrinting().create().toJson(<blockchain>);      \n            System.out.println(<blockchain>Json);  \n    \n\n        }\n        \/\/check <blockchain>'s validity\n        public static Boolean isChainValid() {\n            Block currentBlock; \n            Block previousBlock;\n            \n            \/\/loop through <blockchain> to check hashes:\n            for(int i=1; i < <blockchain>.size(); i++) {\n                currentBlock = <blockchain>.get(i);\n                previousBlock = <blockchain>.get(i-1);\n                \/\/compare registered hash and calculated hash:\n                if(!currentBlock.hash.equals(currentBlock.calculateHash()) ){\n                    System.out.println(\"Current Hashes not equal\");         \n                    return false;\n                }\n                \/\/compare previous hash and registered previous hash\n                if(!previousBlock.hash.equals(currentBlock.previousHash) ) {\n                    System.out.println(\"Previous Hashes not equal\");\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\nhere is my module-info.java. it is outside of the package <blockchain>\nmodule noobChain {\n    requires gson;\n    requires java.sql;\n}\n\nI get this error:\nException in thread \"main\" java.lang.reflect.InaccessibleObjectException: Unable to make field public java.lang.String <blockchain>.Block.hash accessible: module noobChain does not \"exports <blockchain>\" to module gson\n\nAny thoughts? I've imported the gson jar into my classpath in eclipse","191":"What does ExtrinsicPayload exactly do? I want to replicate the logic but something is missing.\nimport {\n    getRegistry\n} from '@substrate\/txwrapper-polkadot';\n\nconst registry = getRegistry({\n        chainName: 'Polkadot',\n        specName,\n        specVersion,\n        metadataRpc,\n    });\n\nconst extrinsicPayload = registry.createType('ExtrinsicPayload', unsigned, {version: unsigned.version});\nconst extrinsicPayloadU8a = extrinsicPayload.toU8a({method: true})\nconst actualPayload = extrinsicPayloadU8a.length > 256 ? registry.hash(extrinsicPayloadU8a) : extrinsicPayloadU8a;\n\nconst s1 = u8aToHex(alice.sign(actualPayload));\nconsole.log(\"s1\", s1, s1.length);\nconst s2 = extrinsicPayload.sign(alice).signature;\nconsole.log(\"s2\", s2, s2.length);\n\ns1 and s2 should have the same length but they don't. What's the reason?","192":"fn pre_dispatch(\n        self,\n        who: &Self::AccountId,\n        call: &Self::Call,\n        info: &DispatchInfoOf<Self::Call>,\n        len: usize\n    ) -> Result<Self::Pre, TransactionValidityError> {\n        let (_fee, imbalance) = self.withdraw_fee(who, call, info, len)?;\n        Ok((self.0, who.clone(), imbalance))\n    }\n\n(The above code is copied from txn-payment-pallet)\nHere can we get function name and parameters from the call(one of the parameter), And based on the function-name , pallet , parameters passed by user, I want to compute fee.\nFor example , If it is call from pallet-staking::bond(x : amount_of_tokens_to_be_bonded) and I want to set fee for txn based on x.\nIs that possible??\nLike wise I want to set fee based on function-call parameters entered by user.","193":"I am trying to transfer SPL tokens and am getting the error from the function\nmintToken.getOrCreateAssociatedAccountInfo(wallet.publicKey);\n\nError: Invalid seeds, address must fall off the curve\n\nMy wallet variable a an AnchorWallet\nToWallet is obtained via:\nvar toWallet = anchor.<web3>.Keypair.fromSecretKey(DEMO_TO_WALLET);\n\n   \n try {\n    if (wallet) {\n      const mintPublicKey = new anchor.<web3>.PublicKey(\"Token address\");    \n      const mintToken = new Token(\n        props.connection,\n        mintPublicKey,\n        TOKEN_PROGRAM_ID,\n        toWallet \n      );\n\n      const fromTokenAccount = await mintToken.getOrCreateAssociatedAccountInfo(\n        wallet.publicKey\n      );\n    \n      const destPublicKey = new anchor.<web3>.PublicKey(toWallet);\n    \n      \/\/ Get the derived address of the destination wallet which will hold the custom token\n      const associatedDestinationTokenAddr = await Token.getAssociatedTokenAddress(\n        mintToken.associatedProgramId,\n        mintToken.programId,\n        mintPublicKey,\n        destPublicKey\n      );\n    \n      const receiverAccount = await props.connection.getAccountInfo(associatedDestinationTokenAddr);\n            \n      const instructions: anchor.<web3>.TransactionInstruction[] = [];  \n    \n      if (receiverAccount === null) {\n    \n        instructions.push(\n          Token.createAssociatedTokenAccountInstruction(\n            mintToken.associatedProgramId,\n            mintToken.programId,\n            mintPublicKey,\n            associatedDestinationTokenAddr,\n            destPublicKey,\n            wallet.publicKey\n          )\n        )\n    \n      }\n      \n      instructions.push(\n        Token.createTransferInstruction(\n          TOKEN_PROGRAM_ID,\n          fromTokenAccount.address,\n          associatedDestinationTokenAddr,\n          wallet.publicKey,\n          [],\n          1\n        )\n      );\n    \n      const transaction = new anchor.<web3>.Transaction().add(...instructions);\n      transaction.feePayer = wallet.publicKey;\n      transaction.recentBlockhash = (await props.connection.getRecentBlockhash()).blockhash;\n      \n      const <transactions>ignature = await props.connection.sendRawTransaction(\n        transaction.serialize(),\n        { skipPreflight: true }\n      );\n    \n      await props.connection.confirmTransaction(<transactions>ignature);","194":"How to generate same wallet address(same public key) in both BEP20(Binance Smart Chain) and ERC20(Ethereum) using <web3>?\nI want to use one single key pair for both networks. I can see some exchange website provide same wallet address for both networks.","195":"pragma solidity >=0.4.16 <0.9.0;\n\ncontract Wallet {\n\n    uint balance = 0;\n    \n    bool a = true;\n    \n    \n    function deposit(uint dep_amt) public {\n        balance += dep_amt;\n    }\n\n    function withdraw (uint wdraw_amt) public view returns(string memory error){\n        if(wdraw_amt<=balance){\n         balance -= wdraw_amt;\n        }\n        \n        else{\n        error = \"Insufficient Balance\";\n        return error;\n        }\n\n    }\n\n    function getBalnce() public view returns (uint) {\n       \n        return balance;\n    }\n    \n\n}\n\nI'm very new to solidity and I'm trying to code a simple bank system which shows the balance and updates the balance according to the deposits and withdraws. I want to display an error in withdraw function when the amount to be withdrawn is greater than the balance but it shows an error saying:\nTypeError: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.\n\nIs there a way to possibly show the error from the same function?\nIf not, Please let me know an alternative.\nThanks in advance!!.","196":"I successfully connect ganache <blockchain> to <web3> php, this is some source code in laravel controller :\npublic function DecetralizeID(){\n$contractABI = \/\/[{*some abi*}]\n\n$contract = new Contract('http:\/\/127.0.0.1:7545\/', $contractABI);\n$contractAddress = \"0xc17E4f191Fb9000262698eE4cDDE8bF66bFb6AA3\";\n$fromAccount = \"0x9cdc1E3F896dD416660b7359A0bC81EAE5e1b93a\"; \/\/accounts[0] -\n\n\/\/SHOWLOGSBYOWNER\n$contract->at($contractAddress)->call(\"showLogsByOwner\", $fromAccount, function($err,$data) {\n  if ($err !== null) {\n    echo 'Error: ' . $err->getMessage();\n    return;\n  }\n  echo 'showLogsByOwner : show id logs by address user :<br>';\n  foreach ($data as $dt) {\n      foreach($dt as $t) {\n        echo $t;\n        echo \"<br>\";\n      }\n  }\n\n});\n}\n\nThis worked perfectly, I can echo the function showLogsByOwner within the <blockchain>. The problem is how to connect it with ropsten test net.\ni did this but failed, I change this line :\n$contract = new Contract('http:\/\/127.0.0.1:7545\/', $contractABI);\n\nto something like this :\n$contract = new Contract('https:\/\/ropsten.infura.io\/v3\/a3491ed6ac7a4c3a87a914bbe5a1xxxx\/', $contractABI);\n\nThen I run laravel again and I got an error:\n\ncURL error 28: Operation timed out after 1000 milliseconds with 0 out of 0 bytes received (see https:\/\/curl.haxx.se\/libcurl\/c\/libcurl-errors.html) for https:\/\/ropsten.infura.io\/v3\/a3491ed6ac7a4c3a87a914b\n\nIs there something I'm missing?\nI get ropsten id from metamask extention -> settings -> Networks (Ropsten Test Net RPC URL)","197":"I created a testchannel and tried to join peer to it using the codes below.\nexport CORE_PEER_LOCALMSPID=\"Org1MSP\"\nexport CORE_PEER_TLS_ROOTCERT_FILE=\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/peerOrganizations\/org1.example.com\/peers\/peer1.org1.example.com\/tls\/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/peerOrganizations\/org1.example.com\/users\/Admin@org1.example.com\/msp\nexport CORE_PEER_ADDRESS=peer1.org1.example.com:7051\n\npeer channel join -b testchannel.block\n\nBut connection error occured as below.\nError: error getting endorser client for channel: endorser client failed to connect to peer1.org1.example.com:7051: failed to create new connection: connection error: desc = \"transport: error while dialing: dial tcp 172.18.0.3:7051: connect: connection refused\"\n\nI tried the solutions mentioned in other similar posts such as changing the CORE_PEER_TLS_ENABLED but it still occured. How to solve it? Thanks!","198":"Brownie doesn't automatically attach to local ganache when I have Ganache open in the background. It is stuck with ganache-cli (1st image) (2nd image is what I am looking for). Can someone help?","199":"I'm trying to use the chainlink price feed. Are we supposed to type all of our code in the PriceconsumerV3 contract? Can we use inheritance to access the value? I tried putting the PriceconsumerV3 contract and my contract in the same file. What is the conventional setup?","200":"I'm a newbie here. We are currently developing a token but we need to test it as if we are trading on mainnet. Is there any testnet for trading on BSC testnet? Our token is now registered on testnet in bscscan. I also set the liquidity for my test token.\nThank you for answering my question.","201":"I'm trying to implement chainlink feed aggregator just like it is for ETH and other price feed provided by chainlink.\nI have found this FluxAggregator in version 0.6 but currently chainlink has version 0.8 and there is no FluxAggregator in 0.8.\nhttps:\/\/github.com\/smartcontractkit\/chainlink\/blob\/develop\/contracts\/src\/v0.6\/FluxAggregator.sol\nAlso I found this FeedRegistry Repo https:\/\/github.com\/smartcontractkit\/feed-registry\nThis repo has FeedRegistry.sol contract which is implementing 'AggregatorV2V3Interface.sol' from version 0.7 of chainlink.\nSo its all mixed up and I'm not sure what is the right path to look for implementation of Aggregator","202":"I have two contracts, one for handling staking and one for minting a NFT. The flow I want is for the user to stake in frontend react app which will invoke the staking contract. The user will then be eligible to mint a NFT when staked.\nNow the issue I am facing is that because the minting role is called from stakingExample contract, which requires the user to invoke this, but as it has a critical function (mint) of the other contract, it should be protected with permissions such that only StakingExample can call NFTExample contract.\nIs there a way to allow the user to run NFTExample with elevated permissions temporary in smart contract?\nExample of staking contract:\n\/\/ SPDX-License-Identifier: unlicensed\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin\/contracts\/access\/AccessControl.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC20\/IERC20.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC20\/utils\/SafeERC20.sol\";\n\ncontract StakingExample is AccessControl {\n\n    bytes32 public constant CONTRACT_ROLE = keccak256(\"CONTRACT_ROLE\");\n    NFTExample public _NFTExample;\n\n    ...\n\n    function someStakingFunction() {\n        \/\/ code that stakes and \n        \/\/ set some variable that tracks if user have minted\n    }\n\n    function claimNFT(uint256 _pid, string memory _tokenURI) public onlyRole(CONTRACT_ROLE) {\n        \/\/ checks if user have unclaimed NFT\n        if (haveUnclaimed) {\n            _NFTExample.mintItem(msg.sender, _tokenURI)\n        }\n    }\n}\n\nExample of NFT contract:\n\/\/ SPDX-License-Identifier: unlicensed\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin\/contracts\/access\/AccessControl.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC721\/extensions\/ERC721URIStorage.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC721\/extensions\/ERC721Enumerable.sol\";\nimport \"@openzeppelin\/contracts\/utils\/Counters.sol\";\n\ncontract CMRGachaSeedNFT is ERC721URIStorage, AccessControl, ERC721Enumerable {\n    bytes32 public constant CONTRACT_ROLE = keccak256(\"CONTRACT_ROLE\");\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    ...\n    \n    \/\/ Only Contract Role can call mint item, which mint item and transfers it to user's address\n    function mintItem(address _address, string memory _tokenURI)\n        public\n        onlyRole(CONTRACT_ROLE)\n        returns (uint256)\n    {\n        \/\/ Do some checks\n\n        \/\/ Mint\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _mint(_address, newItemId);\n        _setTokenURI(newItemId, _tokenURI);\n\n        return newItemId;\n    }\n}","203":"when I call ethers.Wallet.fromMnemonic('....') my application freeze for 5\/10 seconds and go next (is slow but work). If run application on emulator, work fine, but on android or ios I have this problem.\nI tried to follow the docs on https:\/\/docs.ethers.io\/v5\/cookbook\/react-native\/ but i have the same problem\nimport \"react-native-get-random-values\"\nimport \"@ethersproject\/shims\"\nimport { ethers } from \"ethers\";\n\nconst account = ethers.Wallet.fromMnemonic(mnemonic);","204":"I'm working on a personal project focusing on Solana NFT's, and I'm struggling to wrap my head around how I should approach getting the data regarding buyer\/seller accounts for a in a particular transaction from the result of a call to their rpc to get transaction data.\nI'm using nodeJS and the @solana\/<web3>js module to get the signatures of all <transactions> for a particular collection, and then getting the <transactions> from those signatures  using the getConfirmedParsedTransaction(signature) method then attempting to grab the data I need from them.\nTaking this signature on explorer.solana.com for example - it is using the data returned by an API call similar to this -\ncurl 'https:\/\/explorer-api.mainnet-beta.solana.com\/' \\ -H 'Connection: keep-alive' \\ -H 'content-type: application\/json' \\ -H 'Accept: *\/*' \\ -H 'Origin: https:\/\/explorer.solana.com' \\ -H 'Sec-Fetch-Site: same-site' \\ -H 'Sec-Fetch-Mode: cors' \\ -H 'Sec-Fetch-Dest: empty' \\ -H 'Referer: https:\/\/explorer.solana.com\/' \\ -H 'Accept-Language: en-GB,en-US;q=0.9,en;q=0.8' \\ --data-raw '{\"method\":\"getConfirmedTransaction\",\"jsonrpc\":\"2.0\",\"params\":[\"3sRxEfGD2VmrJmw3YsULDER42HW3W2eiAv74Tn41MoL1YQmtELDcEiRf29cBPfsxRVcqXCEkCmwPJNihxAtfRZ4S\",{\"encoding\":\"jsonParsed\",\"commitment\":\"confirmed\"}],\"id\":\"b70247d9-75ef-429a-bf27-ab2519dd75b8\"}' \\ --compressed\nI could see from the returned JSON that there are multiple arrays with 21 indexes - in these arrays, data for the buyer is at index 0, and data for the seller is at index 3. I know that this will not always be the case due to the fact that there are different marketplaces which may use different instructions, or different tokens having different splits for royalties - as a result I looked for a more logical method.\nThe first thing I'm currently doing is looking at pre\/post token balances to get the actual token (mint property) that was transferred. These objects look something like this :\n{\"postTokenBalances\":[{\"accountIndex\":1,\"mint\":\"7t2PCc8WAE14dE58yYogBXBspoL8o8PXesAag3zMse3h\",\"uiTokenAmount\":{\"amount\":\"1\",\"decimals\":0,\"uiAmount\":1.0,\"uiAmountString\":\"1\"}}],\"preBalances\":[413842981566,0,2039280,22184812910,1398960,13264655885039,5616720,0,212257097061,135958021650,135956740765,599225381740,1000,1461600,1,1089991680,1,11352771574,1141440,898174080,1141440],\"preTokenBalances\":[{\"accountIndex\":2,\"mint\":\"7t2PCc8WAE14dE58yYogBXBspoL8o8PXesAag3zMse3h\",\"uiTokenAmount\":{\"amount\":\"1\",\"decimals\":0,\"uiAmount\":1.0,\"uiAmountString\":\"1\"}}]}\nI thought I had figured out an easy way to figure things out based on this - the accountIndex must be the index in the aforementioned arrays, but unfortunately that didn't seem to be correct.\nI've looked at the documentation here regarding what the accountIndex actually represents, and it says it represents the index in the array like I thought ('Index of the account in which the token balance is provided for') but this does not appear to be correct :\nAs I've said, the buyer for this transaction is at index 0 and the accountIndex in the postTokenBalances is 1, while the seller is at index 3, and the accountIndex in preTokenBalances is 2 - so my question is what do these accountIndex properties actually represent?\nSorry for the relatively long question, but I wanted to try and provide a bit of detail!","205":"I need some help to code an in-game currency (off chain) swap. Explaining: I need to swap a token to an in-game currency, like it's done in many games, like PvU (Plant vs Undead) where you can swap PvU (the token) to LE (the in-game currency), how can this be done? Should I use an Oracle or I should fetch the block chain <transactions> in my back end to add the in-game currency? Any ideas?\nAny help will be very welcome!","206":"I was trying to follow a tutorial from devto.io and to send <transactions> to the smart contract, I would need to connect my MetaMask wallet using one of the accounts created when I ran npx hardhat node command.\nTo do so, I opened MetaMask and updated the network to be Localhost 8545, but Metamask didn't connect to it and showed errors like the following screenshot.","207":"What is Hashing - from blockgeeks.com\nI came across this article explaining that to determine the original input from a 128-bit hash value, using brute force, the worst case scenario would be 2^128 \u00e2\u0080\u0093 1 attempts (meaning there are 2^128 possible answers - from what I understand).\nBut... Isn't 128 bits the length of the hash - not the length of the original input? Wouldn't you have to try all possible cases of input data? And wouldn't that be a totally different number of possibilities unless the input data were also exactly 128 1s or 0s?","208":"I am implementing the <web3>.py with Django and <python>. But I fail to link with <web3>.py\nHere is the error;\n\ninpage.js:1 MetaMask no longer injects <web3>. For details, see:\nhttps:\/\/docs.metamask.io\/guide\/provider-migration.html#replacing-window-<web3>\nUncaught TypeError: Cannot read properties of undefined (reading\n'contract')\nat login.js:192\nncaught ReferenceError: <web3> is not defined\nat login.js:176\n\nHere is the code::\nwindow.addEventListener('load', () => {\n\nif (window.ethereum) {\n\n<web3> = new <web3>(window.ethereum)\nreturn true\n} else if (window.<web3>) {\n<web3> = window.<web3>\nreturn true\n}\nreturn false\n});","209":"I want to have orderer beside each organization and NOT to create a separate organization for orderers. Is it possible? If yes, how can I do it?","210":"I am quite new to Chainlink. I have read the Whitepaper v1 and several articles about Chainlink, but I can't understand how the explained architecture really works.\nWhere does the reputation contract, order matching contract and aggregation contract come into the picture? Where and with whom do they interact? From what I could test in API calls and price feeds, I can only choose nodes and jobs, but not reputation.\nAlso, do the nodes actually bid to receive requests? I didn't find anything about node bid in the documentation. Only payments for running jobs.\nThank you!","211":"I am new to <blockchain> and i am trying to play with <blockchain> so I used metaplex and candy-machine to upload and mint dummy nft's which is working fine. The opensource repositories that I am playing with are below:\n\nhttps:\/\/github.com\/metaplex-foundation\/metaplex\nhttps:\/\/github.com\/exiled-apes\/candy-machine-mint\n\nThen for learning purposes, I wanted to divide minting and secondary sales into more than one wallet so I changed JSON and added three test wallets into the creator's array.\n{\n  \"name\": \"#0\",\n  \"symbol\": \"%$%\",\n  \"description\": \"description goes here\",\n  \"seller_fee_basis_points\": 500,\n  \"image\": \"image.png\",\n  \"external_url\": \"\",\n  \"edition\": 0,\n  \"attributes\": [\n    {\n      \"trait_type\": \"Background\",\n      \"value\": \"Street\"\n    }\n  ],\n  \"properties\": {\n    \"files\": [\n      {\n        \"uri\": \"image.png\",\n        \"type\": \"image\/png\"\n      }\n    ],\n    \"category\": \"image\",\n    \"creators\": [\n      {\n        \"address\": \"<public address 1>\",\n        \"share\": 34\n      },\n      {\n        \"address\": \"<public address 1>\",\n        \"share\": 33\n      },\n      {\n        \"address\": \"<public address 1>\",\n        \"share\": 33\n      }\n    ]\n  }\n}\n\nBut the problem is splitting is happening on secondary sales and not on minting. On minting the wallet set as treasury resource is getting all amount. I want to split the transaction amount on minting too.","212":"I keep getting this problem i don't know why it keeps on telling me import <web3> can't be resolved no matter how many times i try to reinstall and install it\nplease help me out if anyone can\nthis is the code\nfrom solcx import compile_standard, install_solc\nimport json\nfrom ***<web3>*** import <web3>\n\n\nwith open(\".\/SimpleStorage.sol\") as file:\n    simple_storage_file = file.read()\n    print(simple_storage_file)\n\n# Compile our solidity code\ninstall_solc(\"0.6.0\")\ncompiled_sol = compile_standard(\n    {\n        \"language\": \"Solidity\",\n        \"sources\": {\"SimpleStorage.sol\": {\"content\": simple_storage_file}},\n        \"settings\": {\n            \"outputSelection\": {\n                \"*\": {\"*\": [\"abi\", \"metadata\", \"evm.bytecode\", \"evnm.sourceMap\"]}\n            }\n        },\n    },\n    solc_version=\"0.6.0\",\n)\nwith open(\"compiled_code.json\", \"w\") as file:\n    json.dump(compiled_sol, file)\n\n# get bytecode\nbytecode = compiled_sol[\"contracts\"][\"SimpleStorage.sol\"][\"SimpleStorage\"][\"evm\"][\n    \"bytecode\"\n]\n\n# get abi\nabi = compiled_sol[\"contracts\"][\"SimpleStorage.sol\"][\"SimpleStorage\"][\"abi\"]\n\n# for connecting to ganache\nw3 = <web3>(<web3>.HTTPProvider(\"http:\/\/127.0.0.1:7545\"))\nchain_id = 5777\nmy_address = \"0x1973268d75BaFcf21C6D2dFF604a0d64d0158E50\"\nprivate_key = \"0x842565ffcef56f602eb72494a4bde5e1c45192069b7a5bc9775ac1a00a58aa51\"\n\n# Create our first contract\n\nSimpleStorage = w3.eth.contract(abi=abi, bytecode=bytecode)\nprint(SimpleStorage)\n\ni get a problem at line 3 which is <web3>  i had put these stars to recognise i have not included in actual code","213":"The contract function is\nfunction _removeFlag(address sender) internal {\n    \/\/remove if in record\n    if (mapping1[sender] > 0) {\n       mapping1[sender] = 0;\n    }\n}        \n\nwhen my test case running into this function , show an error like:\ntruffle>: truffle test\n Error: Returned error: VM Exception while processing transaction: out of gas\nIf I set it with mapping1[sender] = 1; the error disappears.\nVersion information:\n\u00c2\u00a0\u00c2\u00a0Truffle v5.4.0 (core: 5.4.0)\n\u00c2\u00a0\u00c2\u00a0Solidity v0.5.16 (solc-js)\n\u00c2\u00a0\u00c2\u00a0Node v16.4.2\n\u00c2\u00a0\u00c2\u00a0<web3>.js v1.4.0","214":"Is there a way to get Avalanche C-Chain contract Abi's like etherscan API?\nI checked AvalancheGo API, but there was no Api's that gives me the data.","215":"I have a security problem in my Solidity contracts and I can't figure out how to fix it.\nThe flow goes like this:\n\nFirst, we create an instance of contract A;\nCreate an instance of contract B, which receives the contract A instance in the constructor (its address);\nAt some point, contract B calls a function 'foo' from contract A which tells contract A to send money to an address (the address is received as a parameter);\nContract A sees the msg.sender as the address of contract B;\n\nMy problem is:\n\nI want to restrict the access for the function 'foo' in contract B only to be called by contract A (no calls made by humans manually);\nI cannot make a modifier to check the address. Since I create Contract A before Contract B, I cannot know the address of Contract B in Contract A;\nI cannot make the function internal as the contracts are not derived;\n\nCan you please offer me advice on how to fix this problem or explain another approach on this? I am new to Solidity.\nThank you!","216":"I am trying to follow the Chainlink VRF tutorial found here: https:\/\/docs.chain.link\/docs\/intermediates-tutorial\/ with hardhat and am running into this issue when calling the rollDice function:\nError: cannot estimate gas; transaction may fail or may require manual gas limit (error={\"reason\":\"cannot estimate gas; transaction may fail or may require manual gas limit\",\"code\":\"UNPREDICTABLE_GAS_LIMIT\",\"method\":\"estimateGas\",\"transaction\":{\"from\":\"0x014Da1D627E6ceB555975F09D26B048644382Ac6\",\"maxPriorityFeePerGas\":{\"type\":\"BigNumber\",\"hex\":\"0x9502f900\"},\"maxFeePerGas\":{\"type\":\"BigNumber\",\"hex\":\"0x9502f90e\"},\"to\":\"0x5887946875A01D1BB79d6Fb357BceeA5A0096D2e\",\"data\":\"0xdd02d9e5000000000000000000000000014da1d627e6ceb555975f09d26b048644382ac6\",\"type\":2,\"accessList\":null}}, tx={\"data\":\"0xdd02d9e5000000000000000000000000014da1d627e6ceb555975f09d26b048644382ac6\",\"to\":{},\"from\":\"0x014Da1D627E6ceB555975F09D26B048644382Ac6\",\"type\":2,\"maxFeePerGas\":{\"type\":\"BigNumber\",\"hex\":\"0x9502f90e\"},\"maxPriorityFeePerGas\":{\"type\":\"BigNumber\",\"hex\":\"0x9502f900\"},\"nonce\":{},\"gasLimit\":{},\"chainId\":{}}, code=UNPREDICTABLE_GAS_LIMIT, version=abstract-signer\/5.5.0)\n    at Logger.makeError (\/Users\/matt\/Desktop\/hardhat\/randomDay\/node_modules\/@ethersproject\/logger\/src.ts\/index.ts:225:28)\n    at Logger.throwError (\/Users\/matt\/Desktop\/hardhat\/randomDay\/node_modules\/@ethersproject\/logger\/src.ts\/index.ts:237:20)\n    at \/Users\/matt\/Desktop\/hardhat\/randomDay\/node_modules\/@ethersproject\/abstract-signer\/src.ts\/index.ts:301:31\n    at processTicksAndRejections (node:internal\/process\/task_queues:96:5)\n    at async Promise.all (index 7)\n\nI am able to deploy to the Kovan testnet, I was able to verify the contract, and I have sent the contract LINK tokens, but am still running into the issue. The contract can be viewed here: https:\/\/kovan.etherscan.io\/address\/0x7b72d80670512c87605ab8ac7e6113fda9c57de4#code\nI am using version 0.8 of the Chainlink Contracts.\nRandomDay.sol\npragma solidity ^0.8.9;\n\nimport \"@chainlink\/contracts\/src\/v0.8\/VRFConsumerBase.sol\";\n\ncontract RandomDay is VRFConsumerBase {\n    \n    uint256 private constant ROLL_IN_PROGRESS = 42;\n    bytes32 private s_keyHash;\n    uint256 private s_fee;\n\n    mapping(bytes32 => address) private s_rollers;\n    mapping(address => uint256) private s_results;\n\n    event DiceRolled(bytes32 indexed requestId, address indexed roller);\n    event DiceLanded(bytes32 indexed requestId, uint256 indexed result);\n\n    constructor(address vrfCoordinator, address link, bytes32 keyHash, uint256 fee) VRFConsumerBase(vrfCoordinator, link) {\n        s_keyHash = keyHash;\n        s_fee = fee;\n   \n    }\n\n    function rollDice (address roller) public returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= s_fee, \"Not enough LINK to pay fee\");\n        require(s_results[roller] == 0, \"Already rolled\");\n        requestId = requestRandomness(s_keyHash, s_fee);\n        s_rollers[requestId] = roller;\n        s_results[roller] = ROLL_IN_PROGRESS;\n        emit DiceRolled(requestId, roller);\n        return requestId;\n    }\n\n    function fulfillRandomness (bytes32 requestId, uint256 randomness) internal override {\n        uint256 dayOfWeek = (randomness % 7) + 1;\n        s_results[s_rollers[requestId]] = dayOfWeek;\n        emit DiceLanded(requestId, dayOfWeek);\n    }\n\n    function weekday (address player) public view returns (string memory) {\n        require(s_results[player] != 0, \"Dice not rolled\");\n        require(s_results[player] != ROLL_IN_PROGRESS, \"Roll in progress\");\n        return getWeekdayName(s_results[player]);\n    }\n\n    function getWeekdayName (uint256 id) private pure returns (string memory) {\n        string[7] memory weekdays = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        return weekdays[id - 1];\n    }\n\n}\n\nhardhat.config.js\n\/**\n * @type import('hardhat\/config').HardhatUserConfig\n *\/\n\n require(\"@nomiclabs\/hardhat-waffle\")\n require(\"@nomiclabs\/hardhat-etherscan\")\n\n const ALCHEMY_API_KEY = \"*************************\";\n const ROPSTEN_PRIVATE_KEY = \"*********************\";\n \n module.exports = {\n   solidity: \"0.8.9\",\n   networks: {\n     kovan: {\n       url: `https:\/\/eth-kovan.alchemyapi.io\/v2\/${ALCHEMY_API_KEY}`,\n       accounts: [`0x${ROPSTEN_PRIVATE_KEY}`],\n       gas: 2700000000,\n       maxFeePerGas: 30000000000,\n     }\n   },\n   etherscan: {\n    \/\/ Your API key for Etherscan\n    \/\/ Obtain one at https:\/\/etherscan.io\/\n    apiKey: \"****************************\"\n  }\n };\n\ndeploy.js\nconst { ethers } = require(\"hardhat\");\n\nasync function main() {\n    const [deployer] = await ethers.getSigners();\n  \n    console.log(\"Deploying contracts with the account:\", deployer.address);\n  \n    console.log(\"Account balance:\", (await deployer.getBalance()).toString());\n  \n    const Token = await ethers.getContractFactory(\"RandomDay\");\n    const token = await Token.deploy(\"0xa36085F69e2889c224210F603D836748e7dC0088\", \"0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9\", \"0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4\", \"100000000000000000\");\n  \n    console.log(\"Token address:\", token.address); \n  }\n  \n  main()\n    .then(() => process.exit(0))\n    .catch((error) => {\n      console.error(error);\n      process.exit(1);\n    });\n\nquickRun.js\nvar ethers = require('ethers');\nvar provider = ethers.providers.getDefaultProvider('kovan');\nvar address  = '0x7b72d80670512c87605aB8aC7E6113Fda9c57de4';\nvar abi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"DiceLanded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"roller\",\"type\":\"address\"}],\"name\":\"DiceRolled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"roller\",\"type\":\"address\"}],\"name\":\"rollDice\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"weekday\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\nvar privateKey = '*******************************';\nvar wallet = new ethers.Wallet(privateKey, provider);\nvar contract = new ethers.Contract(address, abi, wallet);\n\nvar sendPromise = contract.rollDice('0x014Da1D627E6ceB555975F09D26B048644382Ac6');\n\nsendPromise.then(function(transaction){\n  console.log(transaction);\n});","217":"I am going to work on a project in which we want to build a bitcoin wallet, like for example mycelium, coinbase etc, but I have no knowledge of which apis we should use to connect directly to the bitcoin <blockchain> 1could you give me recommendations for documentation on this. Thanks","218":"I have a question about NFT usage in NEAR <blockchain>. For example I have NFT on some marketplace (let's name it contract A). I add another contract (let's name it contract B) to approvals list on my Token (using NEP-178 and Approvals). Now this contract B can call nft_tansfer on my token and transfer it to itself account B. Is there a way to create method so I call it on contract B that will transfer NFT from B to me? It looks like if I call nft_transfer it will not work because I am not the owner of NFT and I do not have approval right.\nI mean that contract B is ready to transfer NFT back to me but it has to do it when I ask contract B for it. Thanks in advance!","219":"Person A holds a bitcoin and he wants to transfer it to Person B. This transaction will have a input which holds the unlocking script and output which holds the locking script. So in the transaction's locking scrip(ScriptPubkey) a public key has to be added. My understanding is this locking script will contain Person B's public key. But how will person A  get person B's public key to create the transaction?","220":"tried running npx hardhat node\nthis is the error I got\nError HH604: Error running JSON-RPC server: error:0308010C:digital envelope routines::unsupported\n\nFor more info go to https:\/\/hardhat.org\/HH604 or run Hardhat with --show-stack-traces\n\nhere is my config file.\n\n\nrequire('dotenv').config();\nrequire(\"@nomiclabs\/hardhat-ethers\");\n\nconst KOVAN_RPC_URL = process.env.KOVAN_RPC_URL;\nconst PRIVATE_KEY = process.env.PRIVATE_KEY;\n\nmodule.exports = {\n  defaultNetwork: \"hardhat\",\n  networks: {\n    hardhat: {\n    },\n    kovan: {\n      url: KOVAN_RPC_URL,\n      accounts: [PRIVATE_KEY]\n    }\n  },\n  solidity: {\n    version: \"0.8.0\",\n    settings: {\n      optimizer: {\n        enabled: true,\n        runs: 200\n      }\n    }\n  },\n  paths: {\n    sources: \".\/contracts\",\n    tests: \".\/test\",\n    cache: \".\/cache\",\n    artifacts: \".\/artifacts\"\n  },\n  mocha: {\n    timeout: 20000\n  }\n}","221":"static async Task SendTx(Wallet wallet, string toAddress, double amountOfCoins)\n        {\n            var accountFrom = new Account(wallet.GetAccount(0).PrivateKey, 137);\n            \n                        \n            var <web3> = new <web3>(accountFrom, network);\n            var wei = <web3>.Convert.ToWei(amountOfCoins);\n            decimal amt = 2.99m;\n           var tx = await <web3>.Eth.GetEtherTransferService().TransferEtherAsync(toAddress, amt);\n\nThrows an error for invalid sender: eth_sendRawTransaction. I create the Wallet in another function. When I try to debug it, the information looks correct. The from and to Addresses look good, I know the wallet has a balance....etc. Is there something special I have to do other than declaringthe chainID(137) when I'm transacting on Polygon network?\nAnyone tell me what I'm doing wrong?","222":"I am trying to create one node through docker with my custom configuration file [config.toml], but i didn't succeed at all.\nCan anyone guide me how to do this?\nThanks......","223":"I'm attempting to use the private key I generated using the Solana command-line to create a wallet in JavaScript \/ Node.\nI want to use the <web3>.Keypair.fromSeed() method.\nHere are the steps I've take so far.\n\ncreated a solana wallet : solana-keygen new -o keyfile.json\ndisplay what is in that file -- it's a 64 byte array (this is a test key so no worries that this is the private key\n\n[237,158,92,107,132,192,1,57,8,20,213,108,29,227,37,8,3,105,196,244,8,221,184,199,62,253,98,131,33,165,165,215,14,7,46,23,221,242,240,226,94,79,161,31,192,163,13,25,106,53,34,215,83,124,162,156,8,97,194,180,213,179,33,68]\nHowever, the call to fromSeed() only wants 32 bytes.\n3. check the solana address so I know when everything is working properly  :\n>  solana address -->\nwm4MapPtFaUoSsyBJppVnChYMGvHzTeAL6BNZ5GmSqH\n\nThat's the public key\nHow do I call <web3>.Keypair.fromSeed() to load that private key and get my public address (aka public key)?","224":"I am using solidity ^0.8.7. When I try to create a Struct that contains mapping, I revied an error: \"Struct containing a (nested) mapping cannot be constructed.\" I think it is something to do with documentation changes in version 0.7.0. But I cannot find a solution.\nThe code:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\n...\n\n struct Transaction {\n        address to;\n        uint value;\n        bytes data;\n        bool executed;\n        mapping(address => bool) isConfirmed;\n        uint numConfirmations;\n    }\n\n...\n\n function submitTransaction (address _to, uint _value, bytes memory _data) public onlyOwner{\n        \n        uint txIndex = <transactions>.length;\n        \n        <transactions>.push(Transaction({to: _to, value: _value, data: _data, executed: false, numConfirmations: 0}));\n            \n            emit SubmitTransaction(msg.sender, txIndex, _to, _value, _data);\n    }\n\n...\n\nUsing an older version of Solidity compiles it with no problems.","225":"Is there a function in solidity to get a count of specific address <transactions> made on a chain between specific blocks? Let say it's a BSC or ETH chain.","226":"I've set up a sample network with three organizations:\n\nOrg0 with two orderers;\nOrg1 with one peer and one admin identity;\nOrg2 with one peer, one admin identity and two user identities.\n\nI've also set two CA, the second one gives certificates for TLS.\nIn the docker-compose.yaml, I've created two cli containers for Org1 and Org2 where I can act as admin joining a channel and installing the chaincode. In this way, I am able to deploy the chaincode without any problem. If I invoke the chaincode from the cli container of Org1 or Org2, it is always invoked with the role of admin of the organization (the certificate of the requestor is always the one of the admin of the org).\nHow can I invoke a smart contract with the role of a user that I've already registered on my CA (with the user certificate of one of the users of Org2) without implementing an application? This is useful for me only for testing purposes.\nCurrently I run this command:\npeer chaincode invoke -C mychannel -n basic -c '{\"Args\":\\[\"InsertData\", \"asset1\",\"1300\"\\]}' -o orderer1.org0.com:7050 --tls true --cafile Org0\/tls\/cacerts\/localhost-8054.pem --peerAddresses peer1.org1.com:7051 --tlsRootCertFiles \/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org1\/peer1\/tls\/cacerts\/localhost-8054.pem --peerAddresses peer1.org2.com:7056 --tlsRootCertFiles \/chaincode\/certs\/Org2\/tls\/cacerts\/localhost-8054.pem --clientauth --certfile \/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org1\/peer1\/tls\/signcerts\/cert.pem --keyfile \/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org1\/peer1\/tls\/keystore\/server.key\n\nfrom this container (this is the corresponding service in the docker-compose.yaml file):\ncli_org2:\ncontainer_name: cli_org2\nimage: <hyperledger>\/fabric-tools:2.3\n#1.4.2\ntty: true\nstdin_open: true\n\nenvironment:\n  - GOPATH=\/opt\/gopath\n  - CORE_VM_ENDPOINT=unix:\/\/\/host\/var\/run\/docker.sock\n  - FABRIC_LOGGING_SPEC=INFO\n  - CORE_PEER_ID=cli_org2 \n  - CORE_PEER_LOCALMSPID=org2\n  \n  - CORE_PEER_MSPCONFIGPATH=\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org2\/peer1\/msp\/user\/admin\n  - CORE_PEER_ADDRESS=peer1.org2.com:7056\n\n  ##TLS\n  - CORE_PEER_TLS_ENABLED=true\n  - CORE_PEER_TLS_ROOTCERT_FILE=\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org2\/peer1\/tls\/cacerts\/localhost-8054.pem\n  - CORE_PEER_TLS_CERT_FILE=\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org2\/peer1\/tls\/signcerts\/cert.pem    #\/tlsca\/server.crt\n  - CORE_PEER_TLS_KEY_FILE=\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org2\/peer1\/tls\/keystore\/server.key\n  - CORE_PEER_TLS_CLIENTAUTHREQUIRED=true\n  - CORE_PEER_TLS_CLIENTCERT_FILE=\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org2\/peer1\/tls\/signcerts\/cert.pem\n  - CORE_PEER_TLS_CLIENTKEY_FILE=\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\/org2\/peer1\/tls\/keystore\/server.key\n\nworking_dir: \/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\ncommand: \/bin\/bash\nvolumes:\n    - .\/tlsca:\/tlsca\n    - \/var\/run\/:\/host\/var\/run\/\n    - .\/peerOrgs:\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/crypto\n    - .\/channel-artifacts:\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\/channel-artifacts\n    - .\/chaincode:\/chaincode\nnetworks:\n  fabric:","227":"I am new to Ethereum and generally to <blockchain>. I learned that Ethereum <blockchain> works on Kademlia. The distributed hash table and its working was beautiful and nicely explained by Eleuth P2P.\nNow I used <geth> to connect to the Ethereum Mainnet and it discovered 2 to 3 maximum peers in 5 to 6 minutes.\nNow I know the algorithm but my concern is how the first peer is discovered? Because internet is just a big set of routers and different type of computers (server, computer, etc ) and if you broadcast the discovery like in ARP. The internet will be flooded with these peer discovery broadcast messages and this doesn't seems right. So how initially the connections are made? Also we cannot trust a single network for first time connection because this will make the system server and client based and not decentralised so how the initial connections and peer discovery happens?\nAre the broadcast message like have TTL like to prevent the circular loop like in TCP I guess? But this also seems a horrible idea to me.\nPlease explain.","228":"Im using the hyperleger fabric as business network and every commands done correctly.but when need to generating a REST server (create the REST API) run the command :\nubuntu@ubuntu-VirtualBox:~\/EHRUsing<blockchain>-master\/healthcare$ composer-rest-server\nbut i get this error :\n \/home\/ubuntu\/.nvm\/versions\/node\/v8.17.0\/lib\/node_modules\/composer-rest-server \n \/node_modules\/formdata-node\/lib\/cjs\/Blob.js:80\n for await (const chunk of (0, blobHelpers_1.consumeBlobParts)  \n (__classPrivateFieldGet(this, _Blob_parts, \"f\"))) {\n        ^^^^^\n\nSyntaxError: Unexpected reserved word\nat createScript (vm.js:80:10)\nat Object.runInThisContext (vm.js:139:10)\nat Module._compile (module.js:617:28)\nat Object.Module._extensions..js (module.js:664:10)\nat Module.load (module.js:566:32)\nat tryModuleLoad (module.js:506:12)\nat Function.Module._load (module.js:498:3)\nat Module.require (module.js:597:17)\nat require (internal\/module.js:11:18)\nat Object.<anonymous> (\/home\/ubuntu\/.nvm\/versions\/node\/v8.17.0\/lib\/node_modules\/composer-rest-server\/node_modules\/formdata-node\/lib\/cjs\/File.js:16:16)\n\nhow can fix it ... Thank you","229":"I am currently developing an app which interacts with uniswap, and I have developed a Wrapper class to contain the info and variables I'll need about some pair (e.g DAI\/WETH).\nAs some of this values are asynchronous, I have coded a build() async function to get those before calling the constructor, so I can store them. I want to store the result of this build function, which is an instance of the class I have defined, inside a variable to use it later, but I need to know whether the Promise that that build function returns is resolved before using it, so how can I make it?\nHere is the code of the class:\n'use strict'\nconst { ChainId, Fetcher, WETH, Route, Trade, TokenAmoun, TradeType, TokenAmount } = require('@uniswap\/sdk')\nconst { toChecksumAddress } = require('ethereum-checksum-address')\nconst <web3> = require('<web3>')\nconst <web3> = new <web3>()\nconst chainId = ChainId.MAINNET;\nlet tok1;\nlet tok2;\nlet pair;\nlet route;\nlet trade;\n\nclass UniswapTokenPriceFetcher\n{\n    constructor(async_params)\n    {\n        async_params.forEach((element) => {\n            if (element === 'undefined')\n            {\n                throw new Error('All parameters must be defined')\n            }\n        });\n\n        this.trade = async_params[0];\n        this.route = async_params[1];\n        this.pair = async_params[2];\n        this.tok1 = async_params[3];\n        this.tok2 = async_params[4];\n    }\n\n    static async build(token1, token2)\n    {\n        \n        var tok1 = await Fetcher.fetchTokenData(chainId, toChecksumAddress(token1))\n        var tok2 = await Fetcher.fetchTokenData(chainId, toChecksumAddress(token2))\n        var pair = await Fetcher.fetchPairData(tok1, tok2)\n        var route = new Route([pair], tok2)\n        var trade =  new Trade(route, new TokenAmount(tok2, <web3>.utils.toWei('1', 'Ether')), TradeType.EXACT_INPUT)\n        return new UniswapTokenPriceFetcher([trade, route, pair, tok1, tok2])\n\n    }\n\n    getExecutionPrice6d = () =>\n    {\n        return this.trade.executionPrice.toSignificant(6);     \n    }\n\n    getNextMidPrice6d = () =>\n    {\n        return this.trade.nextMidPrice.toSignificant(6);     \n    }\n}\n\n\n\n\nmodule.exports = UniswapTokenPriceFetcher\n\nThank you everybody!\nEDIT: I know Uniswap only pairs with WETH so one of my token variables is unneccesary, but the problem remains the same! Also keep in mind that I want to store an instance of this class for latter use inside another file.","230":"I am new to <blockchain> and learning about bitcoin & <blockchain>. As I understood that miners discovered new BLOCK and get the rewards as bitcoin and these BLOCKS are used to keep record of various <transactions>.\nI also learned that there is a cap on max number of bitcoins (21 million) can be mined. This means there won't be any BLOCK left to record any new transaction. Does it mean that once all bitcoins are mined the <blockchain> will not be operational and no further <transactions> can be done.","231":"This script fails to deserialize my Object. Error was TypeError: this.buf.readUInt32LE is not a function \nTypeError: this.buf.readUInt32LE is not a function\n    at BinaryReader.readU32 (index.js:165)\n    at BinaryReader.propertyDescriptor.value (index.js:136)\n    at BinaryReader.readString (index.js:194)\n    at BinaryReader.propertyDescriptor.value (index.js:136)\n    at deserializeField (index.js:341)\n    at deserializeStruct (index.js:385)\n    at Object.deserialize (index.js:403)\n    at hello (App.js:52)\n    at HTMLUnknownElement.callCallback (react-dom.development.js:3945)\n    at Object.invokeGuardedCallbackDev (react-dom.development.js:3994)\n    at invokeGuardedCallback (react-dom.development.js:4056)\n    at invokeGuardedCallbackAndCatchFirstError (react-dom.development.js:4070)\n    at executeDispatch (react-dom.development.js:8243)\n    at processDispatchQueueItemsInOrder (react-dom.development.js:8275)\n    at processDispatchQueue (react-dom.development.js:8288)\n    at dispatchEventsForPlugins (react-dom.development.js:8299)\n    at react-dom.development.js:8508\n    at batchedEventUpdates$1 (react-dom.development.js:22396)\n    at batchedEventUpdates (react-dom.development.js:3745)\n    at dispatchEventForPluginEventSystem (react-dom.development.js:8507)\n    at attemptToDispatchEvent (react-dom.development.js:6005)\n    at dispatchEvent (react-dom.development.js:5924)\n    at unstable_runWithPriority (scheduler.development.js:468)\n    at runWithPriority$1 (react-dom.development.js:11276)\n    at discreteUpdates$1 (react-dom.development.js:22413)\n    at discreteUpdates (react-dom.development.js:3756)\n    at dispatchDiscreteEvent (react-dom.development.js:5889)\n\nThis works fine on CodesandBox but fails on the local machines.\nconst borsh = require(\"borsh\");\n\nclass Assignable {\n  constructor(properties) {\n    Object.keys(properties).map((key) => {\n      return (this[key] = properties[key]);\n    });\n  }\n}\n\nclass Task extends Assignable { }\n\nexport default function App() {\n  const example = {\n    id: \"12\",\n    assignee: \"Sai\",\n    project_id: \"ABX\",\n    name: \"Hello\",\n    description: \"Sample task Example\",\n    status: \"NOT DONE\"\n  };\n\n  const schema = new Map([\n    [\n      Task,\n      {\n        kind: \"struct\",\n        fields: [\n          [\"id\", \"string\"],\n          [\"name\", \"string\"],\n          [\"description\", \"string\"],\n          [\"assignee\", \"string\"],\n          [\"project_id\", \"string\"],\n          [\"status\", \"string\"]\n        ]\n      }\n    ]\n  ]);\n  function hello() {\n    const task = new Task({\n      id: example.id,\n      name: example.name,\n      description: example.description,\n      assignee: example.assignee,\n      project_id: example.project_id,\n      status: example.status\n    });\n    console.log(task);\n    const buf = borsh.serialize(schema, task);\n    console.log(buf);\n    try {\n      const newValue = borsh.deserialize(schema, Task, buf);\n      console.log(newValue);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return (\n    <div className=\"APPLE\">\n      <button onClick={hello}>Create<\/button>\n    <\/div>\n  );\n}","232":"I'm building a todoList Web-App using <blockchain>. I'm stuck when I tried to connect the <blockchain> server to metamask.\nWhen I try to add new network as mentioned in my Ganache(HTTP:\/\/127.0.0.1:7545) then I miss chainID and When I fill the chainID with Genache network Id it shows the given error.\n\nWhen I try to connect to localhost8545 then it returns this error:\n\ntrufle-config.js\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"127.0.0.1\",\n      port: 7545,\n      network_id: \"*\" \/\/ Match any network id\n    }\n  },\n  solc: {\n    optimizer: {\n      enabled: true,\n      runs: 200\n    }\n  }\n}\n\nHow can I connect my <blockchain> network with my localhost?","233":"I am developing a simple Dapp in which the line charts will be shown and the data will be obtained for each day. However, when fetching the data I realized that it is really slow to get the historic data from different blocks mined at different times.\nMy first naive solution was just to make read function call for each block mined in the given day, but I quickly realized this is very slow. I am using RPC provider.\nconst blocksPerDay = 20 * 60 * 24;\nconst startingBlock = 1446905; \nconst lastBlock = await provider.getBlockNumber();\n\nlet day = (await provider.getBlock(startingBlock)).timestamp;\nconst secondsPerDay = 60 * 60 * 24;\n\nconst result: LineChartData = [];\nfor (\n    let currentBlock = startingBlock;\n    currentBlock <= lastBlock;\n    currentBlock += blocksPerDay\n) {\n    const valueAtBlock = await contract.getData({ blockTag: currentBlock });\n    result.push({x: day, y: fromWeiNumber(valueAtBlock)});\n    day += secondsPerDay;\n}\nreturn result;\n\nThen I did a little research and found Multicall.js. Unfortunately, I did not found a way to batch read function calls for different blocks using Multicall(as it's probably not possible).\nIs there any way to send multiple read calls for different blocks in one function call or make it faster? How do the web apps showing charts (like poocoin) do it? Do I need to get my own archive node?","234":"Hey I am currently starting on my first dapp but when I try and compile any of my code I get this error on hover on my\npragma solidity ^0.5.0;\n\nError:\nSource file requires different compiler version (current compiler is 0.8.9+commit.e5eed63a.Emscripten.clang) - note that nightly builds are considered to be strictly less than the released version\n\nI can't deploy my contracts correctly any one know a fix?","235":"Concat two or more string values-\npragma solidity 0.8.9;\n\ncontract StringConcatation{\n    function AppendString(string memory a, string memory b) public pure returns (string memory) {\n        return string(abi.encodePacked(a,\"-\",b));\n    }\n}","236":"I'm tweaking with ink! Smart contracts and deployed some test contracts through https:\/\/polkadot.js.org\/. However, despite setting conditional statements within smart contracts, calls to them still pass without reverting. Am I doing something wrong with the error handling?\nExample code:\n  #[ink(message)]\n    pub fn withdraw_(&mut self, value: Balance) -> Result<()>  {\n        let caller= self.env().caller();\n        let contract_address = self.env().account_id();\n        let ticket_count = self.tickets_of_or_zero(caller);\n\n    \n\n        if ticket_count <= 0 {\n            return  Err(Error::InsufficientTickets)\n        }\n\n        self.tickets.insert(caller, ticket_count - 1);\n\n      let transfer_status =  self.transfer_from_to_reentrant(contract_address,caller,value);\n\n      if !transfer_status {\n          return Err(Error::UnsucceededTransfer)\n      }\n\n        \n\n        Ok(())\n    }","237":"I want to assign an array as a value type of a map named dictBasic after function _mint and _setTokenURI from erc721. something like this:\ncontract Implement721 is ERC721URIStorage{\nuint256 public tokenCounter;\nmapping(address => uint[]) public dictBasic;\n\n\nconstructor() ERC721(\"alvinChris\", \"ACH\")  {\n    tokenCounter = 100;\n}\n\nfunction saveData(address _address_sender, string memory _tokenURI)\npublic returns(address, uint256){\n    uint256 newItemId = tokenCounter;\n    _mint(_address_sender, newItemId); \/\/mint function\n    _setTokenURI(newItemId, _tokenURI); \/\/setTokenURI\n    \n    \/\/inserting to map\n    dictBasic[_address_sender].push(tokenCounter);\n    \n    tokenCounter = tokenCounter + 1;\n    \n    return (_address_sender, newItemId);\n}\n\nI can assign successfully, but the question is can I make sure that the _mint and _setTokenURI is done before inserting array to Map. can someone give me the example on handling this case.\nThe idea that come in my mind is like IF logic, when _mint and _setTokenURI is not done, then pending assigning value to Map until its done.\nThankyou for the help","238":"I have already start a local Fabric network 2.2 by following the official guide (fabcar project).\nThis is the output of docker ps -a:\ndocker ps\nNow, I have these questions:\n\nWhere is the ledger file which stores the transaction history?\nHow can I see the historical <transactions> and the created blocks?\n\nI have read the doc in Fabric Website, that doesn't really help.","239":"I'm getting two token addresses  address as input for a function in my solana program. How can fetch the balance for the two token. using getTokenSupply in solana webjs i can get it in javascript how can i get that in rust.\n const data = await Connection.getTokenSupply(from_pairs);\n const data2 = await Connection.getTokenSupply(to_pairs);\n console.log(data, data2)\n\nwhat is similar approach in anchor rust?","240":"I am setting up hardhat in Linux. I have set up the react app first using these commands.\nnpx create-react-app react-dapp\n\ncd react-dapp \n\nThen I have installed some hardhat dependencies using this command.\nnpm install ethers hardhat @nomiclabs\/hardhat-waffle \\\n        ethereum-waffle chai \\\n        @nomiclabs\/hardhat-ether\n\nThis all done correctly.\nThen I have created the hardhat configs and setup.\nnpx hardhat \n\nThen I have edited the hardhat.config.js file.\nI have places this.\nmodule.exports = {\nsolidity: \"0.8.4\",\npaths: {                         \n   artifacts: '.\/src\/artifacts',  \n},\nnetworks: {                 \n  hardhat: {\n   chainId: 1337                \n }\n\n}\n};\nAfter that I have created the node.\nnpx hardhat node \n\nI got this error:\nError HH604: Error running JSON-RPC server: error:0308010C:digital envelope routines::unsupported","241":"I realize that this a rather service specific subject, but I think that the reason for my problem is a general one, since I'm a novice in the gRPC arena.\nI'm attempting to call a simple method PeerVersion in the Concordium <blockchain> gRPC API (https:\/\/github.com\/Concordium\/concordium-grpc-api) from a .NET Core 3.1 app, but I get what seems to be a rather general error in regard to SSL.\nI can add that I have testet this call and others with BloomRPC (https:\/\/github.com\/uw-labs\/bloomrpc) and it works just fine.\nYou wont be able to call the API successfully without access to a Concordium node, but I recon that someone with better insight into gRPC than me, could maybe see what I'm doing wrong.\nC# code\nstatic async Task Main(string[] args)\n{\n    using var channel = GrpcChannel.ForAddress(\"https:\/\/192.168.1.18:10001\"); \/\/ my local node running on the Concordium testnet\n\n    var client = new Concordium.P2P.P2PClient(channel);\n\n    var metadata = new Grpc.Core.Metadata() \/\/ required token for the API\n    {\n        { \"authentication\", \"rpcadmin\" }\n    };\n\n    var request = new Concordium.Empty();\n\n    var reply = client.PeerVersion(request, metadata);\n\n    Console.WriteLine(\"peer version: \" + reply.Value);\n\n    Console.WriteLine(\"press any key to exit...\");\n\n    Console.ReadKey();\n}\n\nWhen I run this I get the following exception. (Danish text reads \"An existing connection was forcibly disconnected by an external host\" or something like that).\n-       $exception  {\"Status(StatusCode=\\\"Unavailable\\\", Detail=\\\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. IOException: Unable to read data from the transport connection: En eksisterende forbindelse blev tvangsafbrudt af en ekstern v\u00c3\u00a6rt.. SocketException: En eksisterende forbindelse blev tvangsafbrudt af en ekstern v\u00c3\u00a6rt.\\\", DebugException=\\\"System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.\n ---> System.IO.IOException: Unable to read data from the transport connection: En eksisterende forbindelse blev tvangsafbrudt af en ekstern v\u00c3\u00a6rt..\n ---> System.Net.Sockets.SocketException (10054): En eksisterende forbindelse blev tvangsafbrudt af en ekstern v\u00c3\u00a6rt.\n   --- End of inner exception stack trace ---\n   at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request)\n   at System.Net.Security.SslStream.ThrowIfExceptional()\n   at System.Net.Security.SslStream.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\n   at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\n   at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__65_1(IAsyncResult iar)\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.<geth>ttp2ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)\\\")\"}  Grpc.Core.RpcException\n\nIs anyone able to give me some pointers as to what could be the problem here?\nFor anyone that knows BloobRPC, here is a screenshot of request and response.","242":"I have developed an app that swaps eth for dai in ropsten network using uniswap, but when I get to check the price of eth in dai I get a strange value, 95.9...\nIs it beacuse I am in Ropsten test Network? I can't manage to figure out if it is because of that or If i am doing my calculations wrong, so I'd appreciate any help you guys could give me. The actual line where I check the price of 1 ether in dai goes like this (<node.js>):\nawait exchangeContract.methods.getEthToTokenInputPrice(<web3>.utils.toWei('1', 'Ether')).call()\nAlso I have developed a test on the mainnet, but get a strange result too:\nconst <web3> = new <web3>('https:\/\/mainnet.infura.io\/v3\/c1d623fecf4a4ef785085de5cf9eaf18')\n\n\n\n\/\/ Uniswap factory contract\nconst factoryABI = ABI(Not going to copy the line)\nconst FACTORY_ADDR = '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95'\nconst factoryContract = new <web3>.eth.Contract(factoryABI,FACTORY_ADDR)\n\n\/\/Uniswap dai exchange contract\nconst exchangeAbi = ABI(Not going to copy the line)\n\nasync function checkEthPrice() {\n\n    const exchangeAddr = await factoryContract.methods.getExchange('0x09cabec1ead1c0ba254b09efb3ee13841712be14').call()     \n    const exchangeContract = new <web3>.eth.Contract(exchangeAbi, exchangeAddr)\n    const daiAmount = await exchangeContract.methods.getEthToTokenInputPrice(<web3>.utils.toWei('1', 'Ether')).call()\n    console.log('Eth price:', daiAmount, 'DAI')\n}\n\ntest = setInterval(async () => { await checkEthPrice(); }, 1000)\n\nThe result I get when executing this file:\nEth price: 136478377597734366 DAI\nMaybe I am not using the contract I should with dai?\nThank you everybody!","243":"const solana<web3> = require(\"@solana\/<web3>.js\");\n    const solanatoken = require(\"@solana\/spl-token\");\n    \n      var wallet = solana<web3>.Keypair.generate();\n      console.log(\"public key...\", wallet.publicKey);\n      console.log(\"secret key...\", wallet.secretKey);\n    \n      console.log(\"secret key...\", JSON.stringify(wallet.secretKey.toString()));`enter preformatted text here`\n\nI got\npublic key... PublicKey {\n  _bn: <BN: b5ec974285759f4004555c6890e045a4ce857c6a056895d77dd209c054e76556>\nsecret key... \"211,55,244,72,160,174,33,152,24,226,97,172,91,91,47,3,148,83,99,188,150,111,153,248,253,237,31,223,194,194,199,0,181,236,151,66,133,117,159,64,4,85,92,104,144,224,69,164,206,133,124,106,5,104,149,215,125,210,9,192,84,231,101,86\"\n\nhow I can get private key, like\n\nkNykCXNxgePDjFbDWjPNvXQRa8U12Ywc19dFVaQ7tebUj3m7H4sF4KKdJwM7yxxb3rqxchdjezX9Szh8bLcQAjb\n\nfor use on the phantom wallet?\ndocs: https:\/\/solana-labs.github.io\/solana-<web3>.js\/classes\/Keypair.html","244":"I have a simple event subscription using <web3>:\ncontract.events.EventName().on('data', async event => {console.log(event)})\n\nFor some reason though, the event fires twice using <web3> (in other words, the event is logged twice in this example), even though the event only fires once on the <blockchain>.\nThis also occurs for getPastEvents:\n  contract.getPastEvents(\"Event\").then(events => console.log(events))\n  contract.getPastEvents(\"Event\").then(console.log('a'))\n\nOddly enough, the first is fired twice, the second only once","245":"In the near indexer, only the gas price of blocks and action_receipts are available. Does NEAR have a gas price for every transaction like ETH?\nnear-indexer-for-explorer-db\nETH transaction example","246":"In Solana you can get your own balance with the CLI\n$ spl-token accounts\n\nBut how do I get the token balance of a foreign account if I have the account ID or his pubkey? When I use the solana explorer I can see the information I need when I search for the foreign account ID and then click on the Tokens tab (next to \"History\"):\nhttps:\/\/explorer.solana.com\/address\/DNuqHBGxzm96VLkLWCUctjYW9CX68DBY6jQ1cVuYP2Ai\/tokens?cluster=devnet\nSo if the explorer website can do it, everybody can, all info on the <blockchain> is public, right?","247":"Please can any one help me understand the best and possible ways to create ether wallet. What is the significance of creating ether wallet using mnemonic. What is BIP-0039 and BIP-0044 ? how does creating wallet using mnemonic work and its uses ?","248":"Can someone please explain the specifics of how NFT metadata is stored (both on and off chain examples?) and how it's called by apps like Opensea or Decentlraland?\nAdditionally, would it be especially challenging to utilize dynamic metadata for an NFT, which updates regularly based on changing smart contract variables, which themselves change due to user interactions with the smart contracts? E.g. imagine an updatable \"Countdown\" NFT where the jpeg shows a picture of the integer \"days until X\", which updates each day as time passes but can also updated based on changing X in the NFT smart contacts... made this up on the spot but actually an interesting idea? :)\nIs this doable? Are there storage challenges? Do apps call metadata repeatedly or would they call it once and never reflect updates?","249":"using getTokenSupply in solana web 3 i was able to get amount and decimals, how can get the name of the token and other metadata?\nlet from_pairs = new anchor.<web3>.PublicKey(\"DUru78GcRB8Ucg24Gy6WNTyufuyBhqcL5wppZJkckQHz\")\nconst NETWORK = anchor.<web3>.clusterApiUrl('devnet');\nconst Connection = new anchor.<web3>.Connection(NETWORK);\nconst data = await Connection.getTokenSupply(from_pairs)\nconsole.log(data, data2)\n\noutput","250":"Suppose I have two organizations on the same channel, A and B, and a chaincode including these methods:\n\nqueryA;\nqueryB (that returns a different set of data as output than queryA);\ncreate;\nupdate;\nsubmitNewData.\n\nHow can I restrict access of the single methods so that, for example, a member of A can only access create, update and queryA; a member of B can only access submitNewData and queryB. So, a member of A can create the asset and modify a subset of fields (with \"update\"), a member of B can only modify another subset of fields (according to \"submitNewData) and cannot create the asset.\nIf a peer of B executes a \"peer chaincode invoke\" to create or queryA, the access is denied.\nShould I use ACLs? But how can I refer to the specific smart contract inside the chaincode?","251":"I have cloned the repository from this link\ninto my PC https:\/\/github.com\/<hyperledger>\/composer\nI need to use composer playground on my pc","252":"I am trying to create a contract for an ERC20 token and am getting this error when I try to deploy it:\ncontracts\/YourToken.sol:11:33: ParserError: Expected ';' but got identifier\nconst yourToken = await deployments.get(\"plonCoin\");\nAny thoughts on why this might be happening?","253":"\/\/ SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ncontract CrowdFunding \n{\n    \n    struct Investor\n    {\n        address addr;\n        uint amount;\n    }\n    \n    address public owner;       \n    uint public NumOfInvestors; \n    uint public deadline;       \n    string public status;       \n    bool public isOver;         \n    uint public goalAmount;     \n    uint public totalAmount;    \n    mapping (uint => Investor) public investors; \n    \n    modifier onlyOwner () \n    {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    \n    function crowdfunding(uint _duration, uint _goalAmount) public\n    {\n        owner == msg.sender;\n        deadline = now + _duration;\n        \n        goalAmount = _goalAmount;\n        status = \"Funding\";\n        isOver = \"false\";\n        NumOfInvestors = 0;\n        totalAmount = 0;\n    }\n    \n    \n    function fund() payable public\n    {\n       \n        require(!isOver);\n        \n        Investor inv = investors[NumOfInvestors++]; \n        inv.addr = msg.sender;                      \n        inv.amount = msg.value;                     \n        totalAmount += inv.amount;\n    }\n    \n   \n    function checkGoalReached () public onlyOwner \n    {\n        \n        \n        require(!isOver);\n        \n        \n        require(now >= deadline);\n        \n        if(totalAmount >= goalAmount) \n        {  \n            status = \"Campaign succeeded.\";\n            isOver = true;\n            \n            \n            if(!owner.send(this.balance)) \n            {\n                throw;\n            }\n            else \n            { \n                \n                uint i = 0;\n                status = \"Campaign Failed.\";\n                isOver = true;\n                \n                while (i <= NumOfInvestors) \n                {\n                    \n                    if(!investors[i].addr.send(investors[i].amount)) \n                    {\n                        throw;   \n                    }\n                    \n                    i++;\n                }\n            }\n        }\n        \n        function kill() public onlyOwner \n        {\n            selfdestrct(owner);\n        }\n\n    }\n}\n\nI wrote a contract but got errors in the first and second lines of function kill().\nIt shows \" Expected '(' but got identifier\" at the first line, and \" Parse error: mismatched input '{' expecting { ';' , '=' } [undefined] \" at the second line.\nI double-checked my code structure and also read some articles from StackOverflow.\nFor the problems shows in the first line, those articles said that might miss a \"{\" or \"}\". But I didn't miss for sure. (If I really missed them I'm a damn fool.\nAs to the problem shows in the second line, I just can't tell why it's wrong.\nWould it be a version issue??\nPls help me. Beg for help.","254":"Assalamualaikum,\nI am new to <blockchain>. So I was thinking of deploying  a smart contract as rest api, and use it in my another smart contract.\nIs it possible?\nI know oracle  helps to fetch data but can it help interacting  two deployed contracts?\nThank in advance.","255":"I need to be able to get public and private keys for NEAR wallet by providing it's seed-phrase. I've found a specific library\/repo in NEAR's GitHub account that looks very promising for my case :) :\nhttps:\/\/github.com\/near\/near-seed-phrase\nBut, after some testing it looks like the results provided by this library (parseSeedPhrase function) don't match the actual keys which can be obtained by using near-cli utility.\nI have an assumption that maybe NEAR's Testnet is using different value for a derivationPath parameter, and the one that is included as a default one inside the library is for the Mainnet only. Maybe I just missing something, any help would be appreciated.","256":"In the field of <blockchain> programming we need to create a network of peers connected using websocket in <node.js>.\nA lot of presentations are using websockets on the same machine to make connection between two peers like (ws:\/\/localhost:8080) and (ws:\/\/localhost:8081).\nIf you want to implement it on two different machenes you need to change localhost to your local IP like (ws:\/\/192.168.10.1:8080) and (ws:\/\/192.168.10.2:8081), but they have to share the same wifi network.\nNow I wonder if the above is the only thing we can do with websocket.\nWhat if I need to connect two peers, one in US and other in UK using websocket. Is that possible ?","257":"I had a few Very Specific doubts, answers to which I looked for in various places but couldn't find. Hence I'd be thankful if someone who understands <blockchain> Development can help me.\n\nPeople say Cryptocurrency is an application of <blockchain>, and <blockchain> is an seperate technology of it's own. But every Dapp tutorial (todolist, supply chain management, etc.) still require Ethereum when communicating with a <blockchain>. Can <blockchain> be implemented without cryptocurrency ?\n\nEvery tutorial uses Ganache. These tutorials never mention anything about Peer to Peer Nodes system. Does Ganache simulate a P2P Node system in the background ? Are apps built on Ganache centralized or decentralized ?\n\nWhen Dapps are deployed, they are deployed in the Ethereum Main Network. Does every smart contract, Decentralized application, Ethereum Transaction, all of it live on One Giant <blockchain> which is the Ethereum Main Network ? How is that manageable. Just some guidance will be helpful ? Where can I learn more about this. There are so many resources but I don't know where to start.","258":"im new with <blockchain> and solidity and im trying to check 2 mapping result with the same key on one address, suppose i have this code\ncontract EventConfirmAccess{\n\nstruct eventStruct{\n    string event_log_time;\n    string event_name;\n    string event_id;\n    uint data_nik;\n}\nmapping(uint => eventStruct) public dictConfirmAccess;\nuint[] public arrayOfData;\n\nfunction loggingAccess(\n    uint _nik, string memory _event_log_time,\n    string memory _event_name, string memory _event_id,\n    uint _data_nik\n) public{\n    dictConfirmAccess[_nik] = eventStruct(\n      {\n        event_log_time : _event_log_time,\n        event_name : _event_name,\n        event_id : _event_id,\n        data_nik : _data_nik\n      }\n    );\n\n    arrayOfData.push(_nik);\n}\nfunction checkData(uint _nik) view public returns(\n        string memory ,string memory,\n        string memory ,uint\n    ){\n        return (\n            dictConfirmAccess[_nik].event_log_time,\n            dictConfirmAccess[_nik].event_name,\n            dictConfirmAccess[_nik].event_id,\n            dictConfirmAccess[_nik].data_nik\n        );\n    }\n }\n\nsupposed I insert 1st data to <blockchain> :\n\nloggingAccess(10001, \"2020-10-11 08:10:00\", \"CONFIRM_1\", \"C_1\", 10001)\n\nafter that I insert 2nd data :\n\nloggingAccess(10001, \"2020-10-11 08:20:00\", \"CONFIRM_2\", \"C_2\", 10002)\n\nwhen I check the array with checkData function I get result like this :\n    Result {\n  '0': '2020-10-11 08:20:00',\n  '1': 'CONFIRM_2',\n  '2': 'C_2',\n  '3': BN {\n    negative: 0,\n    words: [ 51784655, 4, <1 empty item> ],\n    length: 2,\n    red: null\n  }\n}\n\nthe question is where is the result of 1st array ? how to retrieve it from <blockchain>? is this removed from <blockchain> (as far as i know  <blockchain> data recorded forever ) ?\nthankyou for you help and answer :)","259":"I was able to implement an ERC-1155 random mint on Polygon with the help of Chainlink VRF (to get the random number), Price Feeds (to query the MATIC\/LINK price), Quickswap (to buy the 0.0001 link fee), PegSwap (to turn the LINK into ERC-677 LINK). I tested it and it's working fine. However I don't know if this is the recommended approach or if I'm missing something. I would appreciate any opinions or recommendations.\n\/\/ SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"@openzeppelin\/contracts\/token\/ERC1155\/ERC1155.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC20\/ERC20.sol\";\nimport \"@chainlink\/contracts\/src\/v0.8\/VRFConsumerBase.sol\";\nimport \"@chainlink\/contracts\/src\/v0.8\/interfaces\/AggregatorV3Interface.sol\";\n\ncontract Router {\n    function swapETHForExactTokens(\n        uint amountOut,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable returns (uint[] memory amounts) {}\n}\n\ncontract PegSwap {\n    function swap(\n        uint256 amount,\n        address source,\n        address target\n    ) external {}\n}\n\ncontract MyNFT is ERC1155, VRFConsumerBase {\n    uint256 SLIPPAGE_PERCENTAGE = 20;\n    address CREATOR = 0x0000000000000000000000000000000000000000;\n    uint256 public PRICE = 0.1 ether;\n\n    bytes32 VRF_KEYHASH = 0xf86195cf7690c55907b2b611ebb7343a6f649bff128701cc542f0569e2c549da;\n    uint256 VRF_FEE = 0.0001 ether;\n    address VRF_COORDINATOR = 0x3d2341ADb2D31f1c5530cDC622016af293177AE0;\n\n    Router quickswap = Router(0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff);\n    PegSwap peg_swap = PegSwap(0xAA1DC356dc4B18f30C347798FD5379F3D77ABC5b);\n    ERC20 WMATIC_token  = ERC20(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\n    ERC20 LINK_token  = ERC20(0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39);\n    ERC20 LINK_ERC677_token  = ERC20(0xb0897686c545045aFc77CF20eC7A532E3120E0F1);\n    AggregatorV3Interface MATIC_LINK_price_feed = AggregatorV3Interface(0x5787BefDc0ECd210Dfa948264631CD53E68F7802);\n\n    mapping(bytes32  => address) public sender_request_ids;\n\n    constructor()\n        ERC1155(\"https:\/\/YOURURL\/{id}.json\")\n        VRFConsumerBase(\n            VRF_COORDINATOR,\n            address(LINK_token)\n        )\n    {\n    }\n\n    function mintNFT(address to) public payable\n    {\n        require(msg.value >= PRICE, \"Value below price\");\n        swapMATICToLINK();\n        sender_request_ids[requestRandomness(VRF_KEYHASH, VRF_FEE)] = to;\n    }\n\n    function swapMATICToLINK() public payable\n    {\n        address[] memory path = new address[](2);\n        path[0] = address(WMATIC_token);\n        path[1] = address(LINK_token);\n\n        quickswap.swapETHForExactTokens{value: getMaticPrice() * VRF_FEE * (100+SLIPPAGE_PERCENTAGE) \/ 100}(\n            VRF_FEE,\n            path,\n            address(this),\n            block.timestamp\n        );\n        LINK_token.approve(address(peg_swap), VRF_FEE);\n        peg_swap.swap(\n            VRF_FEE,\n            address(LINK_token),\n            address(LINK_ERC677_token)\n        );\n    }\n\n    function getMaticPrice() public view returns (uint) {\n        (\n            uint80 roundID, \n            int price,\n            uint startedAt,\n            uint timeStamp,\n            uint80 answeredInRound\n        ) = MATIC_LINK_price_feed.latestRoundData();\n        roundID;\n        startedAt;\n        timeStamp;\n        answeredInRound;\n        return uint(price);\n    }\n\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        uint token_id = randomness % 2 + 1;\n        uint amount = 1;\n        _mint(sender_request_ids[requestId], token_id, amount, \"\");\n    }\n\n    function withdraw() public\n    {\n        payable(CREATOR).transfer(address(this).balance);\n        LINK_token.transfer(payable(CREATOR), LINK_token.balanceOf(address(this)));\n        LINK_ERC677_token.transfer(payable(CREATOR), LINK_ERC677_token.balanceOf(address(this)));\n    }\n}","260":"With this method app is listening for chain change:\n    ethereum.on('chainChanged', (chainId) => {\n})\n\nbut if the chain to which the user is going is not added yet into metamask it throws :\ninpage.js:1 MetaMask - RPC Error: Unrecognized chain ID \"0x89\".\nTry adding the chain using wallet_addEthereumChain first. Object\n\nof course, there is a method to add a new chain into metamask but how to catch this metamask error? try and catch outside ethereum.on gives nothing\nThanks!","261":"var transaction = new <web3>.Transaction({\n    feePayer: new <web3>.PublicKey(\n      '2joML3MhVLPmASMDBYuaMzsFiCtdm3aityWu1pJZ1wg8',\n    ),\n   \n  }).add(\n    splToken.Token.createTransferInstruction(\n      programId,\n      user1TokenAccount.address,\n      user2TokenAccount.address,\n      user1Wallet.publicKey,\n      [],\n      1,\n    ),\n  ); let blockhashObj = await connection.getRecentBlockhash();\n  transaction.recentBlockhash = await blockhashObj.blockhash;\n\n\n  let endocdeTransction = transaction.serialize({\n    requireAllSignatures: false,\n    verifySignatures: false,\n  });\n\nlet newconnectionTransction = <web3>.Transaction.from(newEncodedBuffer);\ni want to get amount from newconnectionTransction\ni was getting amount in buffer  data: <Buffer 03 01 00 00 00 00 00 00 00> which i was unable to decode","262":"when executing\ngo get -u github.com\/<hyperledger>\/fabric-ca\/cmd\/\n\nI get the following error:\ngo get: installing executables with 'go get' in module mode is deprecated.\nUse 'go install pkg@version' instead.   \nFor more information, see https:\/\/golang.org\/doc\/go-get-install-deprecation\n    or run 'go help get' or 'go help install'.\n# github.com\/<hyperledger>\/fabric-ca\/internal\/pkg\/util\n\/opt\/go\/pkg\/mod\/github.com\/<hyperledger>\/fabric-ca@v1.5.2\/internal\/pkg\/util\/csp.go:117:12: undefined: bccsp.RSA2048KeyGenOpts\n\/opt\/go\/pkg\/mod\/github.com\/<hyperledger>\/fabric-ca@v1.5.2\/internal\/pkg\/util\/csp.go:119:12: undefined: bccsp.RSA3072KeyGenOpts\n\/opt\/go\/pkg\/mod\/github.com\/<hyperledger>\/fabric-ca@v1.5.2\/internal\/pkg\/util\/csp.go:121:12: undefined: bccsp.RSA4096KeyGenOpts\n# github.com\/<hyperledger>\/fabric-ca\/lib\/server\/operations\n\/opt\/go\/pkg\/mod\/github.com\/<hyperledger>\/fabric-ca@v1.5.2\/lib\/server\/operations\/system.go:173:23: not enough arguments in call to s.statsd.SendLoop\n    have (<-chan time.Time, string, string)\n    want (context.Context, <-chan time.Time, string, string)\n\ngo version\ngo version go1.17.2 linux\/amd64","263":"I have already made my normal 3D Game and need to be integrated with NFT.\nSo the first thing I need to do is connecting metamask in Standalone\/Mobile Platform.\nI tried using <web3> but only works in WebGL.","264":"In polygon chain, the latest chainlink version not support.\nIf I remove chainlink library, it deploy sucessfully.\nChainlink 0.8 working fine in 'ropston test' network. But in 'Mumbai test net', not able to deploy contract.\nhardhat.config.js [edit:1]\n\nerror log:\n\nremix error log:","265":"In my DApp, I want to check whether the MetaMask in connected to BSC Minnet RPC network using JQuery. Is it possible to check the Connected RPC network in MetaMask using JQuery?\nThanks a bunch in advance!!","266":"I'm currently studying smart contracts and chain-link tech (currently watching and learning from freecodecamp) and I have been stuck apparently at this stage, I've written the codes following the clip and also have replaced them with the ones the author wrote from GitHub to make sure I didn't mistype, but it seems I can't get my Fund_Me codes to import the @chainlink line even though I have my AggregatorV3 and SafeMath file ready and downloaded.\nThis is the Brownie-config.yaml codes:\n    dependencies:\n  - smartcontractkit\/chainlink-brownie-contracts@1.1.1\ncompiler:\n  solc:\n    remappings:\n      - '@chainlink=smartcontractkit\/chainlink-brownie-contracts@1.1.1'\n\n\nAnd this is the line with the problem:\nimport \"@chainlink\/contracts\/src\/v0.6\/interfaces\/AggregatorV3Interface.sol\";\nimport \"@chainlink\/contracts\/src\/v0.6\/vendor\/SafeMathChainlink.sol\";","267":"Is there any way to get the size of a Corda State?\nI need to know how much space my State takes up in the ledger but I don't know how to get that information.","268":"\/\/ <web3> code\nlet amount = 55;\nlet messageToSign = `Please sign the message for claiming the reward amount of \n${amount} tokens!`;\n\nlet signature = await <web3>_obj.eth.personal.sign(messageToSign, account.toString());\n\n\/\/ Smart contract code to verify the signed message to get the signer's address\n    function getSigner(uint _amount, bytes memory _signature) \n    public \n    pure \n    returns(address) {\n        bytes32 _prefixHash = \n         ECDSA.toEthSignedMessageHash(keccak256(abi.encodePacked(\"Please sign the \n         message for claiming the reward amount of \", _amount, \" tokens!\")));\n        \n        return ECDSA.recover(_prefixHash, _signature);\n    }","269":"I want to create app like uniswap using brownie and react how can i access all tokens addresses and abi for my project and use it in frontend. How can i implement this in best optimized way ?","270":"I'm working on a <blockchain> project where I'm implementing a wallet using Django. A user logs in and get's to generate an address. Now, I want to store the user's private key\/public key pair in a file locally on the user's machine every time a user generates an address, and be able to read that file again in the next session (at the user's will). I'm doing this because the app itself is a supernode of the <blockchain> and all users are virtual nodes. All communication between users happen through the supernode, thus the wallet functionality isn't the core function of the app.\nEverything is working perfectly except I can't find a way to create files locally on the client's machine. I've perused the Django documentation but I can't seem to find anything useful (maybe I'm not looking in the right place).\nIs there a way I can achieve that?\nNote: I'm trying as much as possible to avoid JavaScript, and I don't want users to download\/upload files manually.","271":"Any time I try to deploy the contract I  get this error\nimage; https:\/\/ibb.co\/SfzQ1MW\ngitpod \/workspace\/luck $ npx hardhat run scripts\/deploy.js --network testnet\n\nDownloading compiler 0.8.4\nCompiling 16 files with 0.8.4\nCompilation finished successfully\nFetchError: request to https:\/\/moeing.tech:9545\/ failed, reason: unable to verify the first certificate\n    at ClientRequest.<anonymous> (\/workspace\/luck\/node_modules\/node-fetch\/lib\/index.js:1461:11)\n    at ClientRequest.emit (node:events:390:28)\n    at TLSSocket.socketErrorListener (node:_http_client:447:9)\n    at TLSSocket.emit (node:events:390:28)\n    at emitErrorNT (node:internal\/streams\/destroy:157:8)\n    at emitErrorCloseNT (node:internal\/streams\/destroy:122:3)\n    at processTicksAndRejections (node:internal\/process\/task_queues:83:21) {\n  type: 'system',\n  errno: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n  code: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE'\n\nI will really appreciate your help","272":"I'm working on a web app that can connect to Phantom Wallet. I've established the connection and have successfully retrieved the wallet's public key. The problem is, I can't seem to find any solution to get the account balance.\nFor reference, I wanted to display the account balance just like how solanart.io displays it.\nNote that I've gone through all related docs (Solana\/<web3>.js, Solana JSON RPC API etc). Please guide me as I'm still new to JSON RPC API.\nFor a heads up, I'm using vanilla js.\n\n\ntry {\n      const resp = window.solana.request({\n        method: \"getAccountTokenBalance\",\n        params: [\n          id, \/\/wallet's public key\n          {\n            encoding: \"base58\",\n          },\n        ],\n      });\n      console.log(resp);\n    } catch(err) {\n      \/\/ error message\n    }","273":"I am trying to understand the \"getAmountOut\"-function in this contract (it's SushiSwaps-router-contract):\nhttps:\/\/etherscan.io\/address\/0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F#readContract\nThere are 2 parameters:\namountIn (uint256)\npath (address[])\n\nLet's say I want to compare WETH to another token. When I enter 1000 in amountIn. What unit are the 1000?\nWETH has 18 decimals so would 1000 mean 0.0000000000001000 WETH?","274":"hello I am using <python> <web3> to send <transactions> but nonce is the problem my code is\nw3 = <web3>(<web3>.HTTPProvider(\"https:\/\/rpc.tomochain.com\/\"))\nmainWallet = '0xAad6a88877E6AB7FbC33fdAce672780A85Fc88a8'\nnonce = w3.eth.getTransactionCount(mainWallet)\namount_to_send = 0.01\nprivate_key = 'xxxxxxxx'\n\ntx = {\n        'nonce': nonce,\n        'to': to_address,\n        'value': w3.toWei(amount_to_send, 'ether'),\n        'gas': 21000,\n        'gasPrice': w3.toWei('0.3', 'gwei')\n    }\n\nsign_tx = w3.eth.account.signTransaction(tx, private_key)\ntran_hash = w3.eth.sendRawTransaction(sign_tx.rawTransaction)\ntxn = w3.toHex(tran_hash)\nprint(txn)\n\nThe Above code handle <transactions> well but the problem is when more than 1 user tries to withdraw nonce problem come suppose\nuser 1 request withdraw of 0.001 & user 2 request withdraw of 0.002 and both of them request at the same time then the 0.001 <transactions> got canceled and only 0.002 passed\nWhat can I do so the both of them pass","275":"I mean, when I hear the word transaction the only thing that pops into my mind is a financial transaction. I don't quite get what a transaction means in the <blockchain>.\nDoes it always have to be a financial transaction to be recorded as a transaction?","276":"I have installed cardano-wallet using this documentation. Everything is OK, Just I don't know how to run it so I can have interaction with it via node js:\nconst { WalletServer } = require('cardano-wallet-js');\n\nlet walletServer = WalletServer.init('http:\/\/127.0.0.1:1337\/v2');\nasync function test() {\n  let information = await walletServer.getNetworkInformation();\n  console.log(information);\n}\ntest()\n\nDoes's anyone have an idea?","277":"When ganache calls eth_getTransactionByHash I get this error - \"UnhandledPromiseRejectionWarning: Error: Incompatible EIP155-based V 1 and chain id 1. See the second parameter of the Transaction constructor to set the chain id.\" Other <web3> calls are working fine. This is how I'm calling the <web3> function to get a transaction\n<web3>.eth.getTransaction('<txn-hash>')\n  .then(result => {\n    console.log('result: ', result);\n  }).catch(err => {\n    console.log('error: ', err);\n  })\n\nand this is how I'm running ganache\nganache-cli --fork https:\/\/mainnet.infura.io\/v3\/<project-id>\n\nI've seen other people having this issue and it's a ganache issue but none of the solutions worked for me and I haven't seen it for eth_getTransactionByHash. I've tried passing a chain id however that hasn't done anything either. Thanks!","278":"I use Anchor Wallet.\nThis is init code\nconst privateKeys = [\"myprivatekey\"];\n\nconst signatureProvider = new JsSignatureProvider(privateKeys);\nconst rpc = new JsonRpc(config.mainnet, { fetch });\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n\nreturn {rpc, api};\n\nThen i try to push transaction\n    const transaction = await api.transact({\n   actions: [{\n     account: 'eosio',\n     name: 'buyrambytes',\n     authorization: [{\n       actor: 'username',\n       permission: 'active',\n     }],\n     data: {\n       payer: 'username',\n       receiver: 'username',\n       bytes: 8192,\n     },\n   }]\n  }, {\n   blocksBehind: 3,\n   expireSeconds: 30,\n  });\n\n(docs example)\nand receive error\ndetails: [\n    {\n      message: `transaction declares authority '{\"actor\":\"username\",\"permission\":\"active\"}', but does not have signatures for it.`,\n      file: 'authorization_manager.cpp',\n      line_number: 643,\n      method: 'get_required_keys'\n    }\n  ],\n  json: {\n    code: 401,\n    message: 'UnAuthorized',\n    error: {\n      code: 3090003,\n      name: 'unsatisfied_authorization',\n      what: 'Provided keys, permissions, and delays do not satisfy declared authorizations',\n      details: [Array]\n    }\n  }\n}\n\nMaybe i enter wrong private key (Anchor -> Export private key -> Copy key) or something else, idk.\nAll other functions (for exampe get_block etc.) works fine","279":"We are trying to call an API(Deployed on my machine using ngrok for testing) from Chainlink. We are following the tutorial at https:\/\/docs.chain.link\/docs\/advanced-tutorial\/ and using Rinkeby network. The only things we have changed are job id, oracle id and API URL which returns a simple json.\nWe can see the transaction happening and even a fee of 0.1 LINK is deducted.\nBut the API is not called(We know this because I can see the realtime logs of the API) and hence the response value is also not fetched in smart contract.\nHow to debug this? Is there a way to check logs of the job?\nBelow is my contract code:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.7.6;\n\nimport \"@chainlink\/contracts\/src\/v0.7\/ChainlinkClient.sol\";\n\n\/**\n * THIS IS AN EXAMPLE CONTRACT WHICH USES HARDCODED VALUES FOR CLARITY.\n * PLEASE DO NOT USE THIS CODE IN PRODUCTION.\n *\/\ncontract APIConsumer is ChainlinkClient {\n    using Chainlink for Chainlink.Request;\n  \n    uint256 public temperature;\n    \n    address private oracle;\n    bytes32 private jobId;\n    uint256 private fee;\n    \n    constructor () {\n        setPublicChainlinkToken();\n        oracle = 0x46cC5EbBe7DA04b45C0e40c061eD2beD20ca7755;\n        jobId = \"60803b12c6de4443a99a6078aa59ef79\";\n        fee = 0.1 * 10 ** 18; \/\/ 0.1 LINK (Varies by network and job)\n    }\n    \n    function requestVolumeData() public returns (bytes32 requestId) \n    {\n        Chainlink.Request memory request = buildChainlinkRequest(jobId, address(this), this.fulfill.selector);        \n        request.add(\"get\", \"http:\/\/my-api.com\");\n        request.add(\"path\", \"temperature\");\n\n        \/\/ Multiply the result by 1000000000000000000 to remove decimals\n        \/\/ int timesAmount = 10**18;\n        \/\/ request.addInt(\"times\", timesAmount);\n        \/\/ Sends the request\n        return sendChainlinkRequestTo(oracle, request, fee);\n    }\n    \n    \/**\n     * Receive the response in the form of int\n     *\/ \n    function fulfill(bytes32 _requestId, uint256 _temperature) public recordChainlinkFulfillment(_requestId) {\n        temperature = _temperature;\n    }\n    \/\/ function withdrawLink() external {} - Implement a withdraw function to avoid locking your LINK in the contract\n}","280":"I want to know if there is a way to get the dimension of the <transactions> of a node.\nI know that there is the NODE_<transactions> table but I don't know how to query it. It is possible to do it via Corda API? there is another way?","281":"I am developing a smart contract that holds user information. The problem is that when I try to update the user information from the address that did not deployed the contract, the request is successful but there is no change in the user information. But when I change the user information from the address that deployed the contract it changes the user's information for all the users. Like the change is reflected on all the accounts regardless of the account being different.\nfunction setUserName(string memory _userName) public {\n    users[msg.sender].userName = _userName;\n}\n\nThis is my function that updates the user info. I believe that \"msg.sender\" is the one that is calling the contract and not the one that deployed the contract. I am using metamask and ganache for accounts. The first account is added to metamask in chrome browser and the second account is added to metamask in mozilla firefox.\nSteps to reproduce username bug:\n\nOpen two different browsers\nStart ganache server\nIn browser one add first address's private key to the metamask in\norder to add ETH\nIn browser two add second address's private key to the metamask in\norder to add ETH\nDeploy the contracts with \" truffle migrate --reset \"\nIt will migrate the contracts with the first address in ganache\nFrom the browser two try to update the username. You will se that\nthe update was successful but the username was not update (even\nafter refresh).\nNow from browser one update the username by going to the settings\npage. You will see that the username is updated and this change is\nalso reflected on the browser two, regardless of the address being\nchanged from the browser one's.\nSame happens when we try to obtain points by exchanging tokens. From browser one the request is successful but from browser two it throws an error indicating that \"ERC20: transfer amount exceeds balance\". Even the user has token in their account.","282":"I'm using ethers to call balanceOf method on all contracts to check if user has any balance there, if not, the token will not show up in his dashboard, but it takes a lot of time, is there a more finesse way to achieve the same goal?\nmy code:\n        for (let key in tokens) {\n        if (tokens.hasOwnProperty(key)) {\n            let contract_address_to_check = tokens[key].address;\n            if (contract_address_to_check != \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\") {\n                const Contract = new ethers.Contract(contract_address_to_check, Abi, provider);\n                let balance_wei = await Contract.balanceOf(address);\n                \n                if (balance_wei > 0) {\n                    let decimals = await Contract.decimals();\n                    let balance = balance_wei \/ 10 ** decimals;\n                    console.log(tokens[key].address);\n                    console.log(tokens[key].decimals);\n                    console.log(tokens[key].symbol);\n                    console.log(balance);\n                }\n            }\n        }","283":"I am working on a thesis proposal how to optimize big data architecture using <blockchain>\/IPFS, by comparing the amount of data availability on <blockchain>\/IPFS and Hadoop\/HDFS, the challenge is how do I calculate or measure availability on both architectures?","284":"I am trying to get the contract ABI using the Etherscan API, and then create a contract instance and call a method. I am able to get the ABI from Etherscan but when creating the contract object I am getting this error: \"You must provide the json interface of the contract when instantiating a contract object.\"\nThis is what my code looks like\nlet url = 'https:\/\/api.etherscan.io\/api?module=contract&action=getabi&address=0x672C1f1C978b8FD1E9AE18e25D0E55176824989c&apikey=<api-key>';\nrequest(url, (err, res, body) => {\n  if (err) {\n    console.log(err);\n  }\n  let data = JSON.parse(body);\n  let contract_abi = data.result;\n  console.log(contract_abi)\n  let contract_address = '0x672C1f1C978b8FD1E9AE18e25D0E55176824989';\n  const contract = new <web3>.eth.Contract(contract_abi);\n  const contract_instance = contract.at(contract_address);\n  \/\/ Call contract method\n})\n\nWhen I console.log the contract_abi I see the ABI data. I've also tried creating the contract by doing\nconst contract = new <web3>.eth.Contract(contract_abi, contract_address)\n\nThanks!","285":"i made a bitcoin transaction and it generateed a hash (txid)\n6572dc66810b4710a0db5e00cd46704f80be7fee1b0603ad15724e63ded994f7\nwhen search for it\nhttps:\/\/www.<blockchain>.com\/btc\/tx\/6572dc66810b4710a0db5e00cd46704f80be7fee1b0603ad15724e63ded994f7\nit shows like 10 different addresses with values between 0 and 32.31404275 BTC\nwhy is that? because of the platform i use that send like pakages of <transactions> or why?\nIt says\n\nThis transaction was first broadcast to the Bitcoin network on October\n04, 2021 at 12:07 PM GMT+2.  The transaction currently has 183\nconfirmations on the network.  At the time of this transaction,\n33.11857777 BTC was sent with a value of $1,579,691.42. The current value of this transaction is now $1,654,672.04.  Learn more about how\n<transactions> work.\n\nCan anyone explain please?\nThanks","286":"I try to create interaction with smart-contract through back-end. \nI wrote this script from the tutorial: click me. \nTell me please, why I get an error from sending my signed transaction? And how can I fix it?\nconst <web3> = require('<web3>');\nrequire('dotenv').config();\nconst MyContract = require('.\/build\/contracts\/HelloWorld.json');\nconst address = '0xD7cE788A5bA84b53932780DfCf98F7430ce5d3e1';\nconst private_key = process.env.PRIVATE_KEY;\nconst infuraUrl = process.env.INFURA_URL;\n\nconst init = async () => {\n    var <web3> = new <web3>(new <web3>.providers.HttpProvider(infuraUrl));\n\n    const networkId = await <web3>.eth.net.getId();\n    const myContract = new <web3>.eth.Contract(\n        MyContract.abi,\n        MyContract.networks[networkId].address\n    );\n\n    const tx = myContract.methods.update(\"LoremIpsum\");\n    const gas = await tx.estimateGas({from: address});\n    const gasPrice = await <web3>.eth.getGasPrice();\n    const data = tx.encodeABI();\n    const nonce = await <web3>.eth.getTransactionCount(address);\n\n    const signedTx = await <web3>.eth.accounts.signTransaction(\n        {\n            to: myContract.options.address,\n            data,\n            gas,\n            gasPrice,\n            nonce,\n            chain: networkId,\n            hardfork: 'newRule'\n        },\n        private_key\n    ).catch(e => e.message);\n    console.log(`Old data value ${await myContract.methods.message().call()}`);\n    const receipt = await <web3>.eth.sendSignedTransaction(signedTx.rawTransaction).catch(e => e.message); \/\/error\n    console.log(`Transaction hash ${receipt}`);\n    console.log(`New data value ${await myContract.methods.message().call()}`);\n};\n\ninit();","287":"I am trying to get a random number in solidity in 1 transaction with Chainlink VRF.\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"@chainlink\/contracts\/src\/v0.8\/VRFConsumerBase.sol\";\ncontract RandomNumberConsumer is VRFConsumerBase {\n    \n    bytes32 internal keyHash;\n    uint256 internal fee;\n    \n    uint256 internal randomResult;\n    \n    constructor() \n        VRFConsumerBase(\n            0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9, \/\/ VRF Coordinator\n            0xa36085F69e2889c224210F603D836748e7dC0088  \/\/ LINK Token\n        )\n    {\n        keyHash = 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4;\n        fee = 0.1 * 10 ** 18; \/\/ 0.1 LINK (Varies by network)\n    }\n    function getRandomNumber() public returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= fee, \"Not enough LINK - fill contract with faucet\");\n        return requestRandomness(keyHash, fee);\n    }\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        randomResult = randomness;\n    }\n\n    function letsGo() public {\n        bytes32 requestId;\n        requestId = getRandomNumber();\n        fulfillRandomness(requestId, 123456);\n    }\n}\n\nIs there a way in <blockchain> to get the randomResult?\nI'm looking specifically at my letsGo function.","288":"I'm looking at updating the Coinmarketcap listing for a token on the Solana <blockchain>.\nFor Total Supply Coinmarketcap asks to provide:\n\"API endpoint that displays ONLY 'Total Supply' as a numerical value (e.g. http:\/\/chainz.cryptoid.info\/grs\/api.dws?q=totalcoins)\"\nHow would I go about doing this?","289":"In the near_primitives::views, the args field on the FunctionCall is represented as a String type. From the chain data model, which is transaction::Action::FunctionCall, its args field there is a `Vec.\nThe question is, does this args field will always content a valid JSON payload as the content? We assume the answer is probably a No since the underlying field contains pure bytes.\nIn which circumstances this would a valid JSON string and in which circumstances it would be a binary format?\nFinally, if binary format is possible (likely), how is it possible to decode it? Is this in developers hand and could be any binary format?\nSee\n\nhttps:\/\/github.com\/near\/nearcore\/blob\/14711926391d3ec1d23116658a295a62e77bc701\/core\/primitives\/src\/views.rs#L768\n\n\nhttps:\/\/github.com\/near\/nearcore\/blob\/14711926391d3ec1d23116658a295a62e77bc701\/core\/primitives\/src\/transaction.rs#L113","290":"I'd like to download all the transfer events of tokens under a given contract address.\nI know etherscan provides an API endpoint for this, however it is limited to the latest 10,000 transfers (even if paginating). https:\/\/docs.etherscan.io\/api-endpoints\/accounts#get-a-list-of-erc721-token-transfer-events-by-address\nIs there a third party who can provide this data, or is my only option to get it directly from a node (Infura, <geth>, etc.)?\nThanks!","291":"I'm trying to orchestrate an NFT presale on Solana, such that the collectible is revealed at a specific time after purchase. Is that possible on Solana and how?","292":"I am using stellar-sdk in nodejs to make a sell offer and it is showing the error below:\nError: TypeError: Cannot read property 'toXDRObject' of undefined\n\nMy code:\nimport StellarSdk from 'stellar-sdk';\n\nconst stellarServer = new StellarSdk.Server(\n    'https:\/\/horizon-testnet.stellar.org'\n);\n\nconst account = await stellarServer.loadAccount(testAccount.publicKey);\n\nconst fee = await stellarServer.fetchBaseFee();\n\nconst SLTIssuerId = GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP;\n\nconst XLMAsset = new StellarSdk.Asset('XLM');\nconst SLTAsset = new StellarSdk.Asset('SLT', SLTIssuerId);\n\nconst transaction = new StellarSdk.TransactionBuilder(account, {\n    fee,\n    networkPassphrase: StellarSdk.Networks.TESTNET\n})\n    .addOperation(\n        StellarSdk.Operation.manageSellOffer({\n            selling: SLTAsset,\n            buy: XLMAsset,\n            price: { n: numerator, d: denominator },\n            amount: '2'\n        })\n    )\n    .setTimeout(180)\n    .build();\n\nCan anyone help? I am new to <blockchain>.","293":"I have installed electrum and run it as a daemon in my ubuntu server.\nI'm trying to pull BTC address balance, my curl code:\n<?php\n\n$ch = curl_init();\n\ncurl_setopt($ch, CURLOPT_URL, \"http:\/\/127.0.0.1:7777\");\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\ncurl_setopt($ch, CURLOPT_POST , 1);\ncurl_setopt($ch, CURLOPT_USERPWD , 'user:RZrelBOuhdFsD2BDhDKPOg==');\ncurl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, \"{\\\"id\\\":\\\"curltext\\\",\\\"method\\\":\\\"getaddressbalance\\\",\\\"params\\\":[1CxEFYV4jfKH4WYPc3tNdxUEUQqBNG7veg]}\");\n\n$result = curl_exec($ch);\n\n\/\/if (curl_errno($ch)) { echo 'Error:' . curl_error($ch); }\n\/\/curl_close ($ch);\n\nvar_dump(json_decode($result,1));\n\n?>\n\nI'm getting: NULL when I execute it.\nmy question is: how can I use php+curl with electrum daemon to get btc address balance into an array?","294":"`Error: EPERM: operation not permitted, \n\nrename 'C:\\Users...\\workspaces\\smiling-cover\\Settings.2447570826'\n-> 'C:\\Users...\\workspaces\\smiling-cover\\Settings'`\n\nAlready tried npm cache clean --force","295":"What is generally best practice way to set up a <web3> instance?\n\nuseRef\nuseState\nUsing\/not using useEffect\n\n\nUsing props\/context to pass a single instance to other components, or re-instantiating it in each component\n\n\nBackground: I tried setting up a <web3> instance with useRef, however it only passed null through context. I found though that using useState and not using useEffect worked. Curious about best practice though.\nexport default function MyApp({ Component, pageProps }) {\n\n  \/* \u00e2\u00a8\u00af Passed through context as null *\/\n  const <web3> = useRef(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      <web3>.current = new <web3>(window.ethereum)\n    }\n  }, [])\n\n  \/* \u00e2\u009c\u0093 Passed through context as <web3> instance *\/\n  const [<web3>, set<web3>] = useState(null)\n  useEffect(() => {\n    if (window.ethereum) {\n      const w3 = new <web3>(window.ethereum)\n      set<web3>(w3)\n    }\n  }, [])\n\n  \/* \u00e2\u009c\u0093 Passed through context as <web3> instance *\/\n  if (window.ethereum) {\n    const w3 = new <web3>(window.ethereum)\n    set<web3>(w3)       \/\/ \u00e2\u009c\u0093\n    <web3>.current = w3 \/\/ \u00e2\u009c\u0093\n  }\n\n  return (\n    <<web3>Context.Provider value={<web3>.current ?? <web3>}>\n      <Component {...pageProps} \/>\n    <\/<web3>Context.Provider>\n  )\n}","296":"I need to make API call over Polygon network. I did follow the tutorials and was trying to find the Job Id and oracle Id. I was able to find the job\nhttps:\/\/market.link\/jobs\/56666c3e-534d-490f-8757-521928739291. However, I cannot find the Oracle Id after clicking on Node as mentioned in the docs. Where can I find it?","297":"Like the title says, i need to integrate these technologies to<geth>er.\nI instantiate WalletConnectProvider like this, as per docs:\nconst provider = new WalletConnectProvider({\nrpc:'https:\/\/bsc-dataseed.binance.org\/'\n});\n\n\/\/  Enable session (triggers QR Code modal)\nawait provider.enable();\n<web3>=new <web3>(provider);\n\nBut whenever i make a call to a Smart Contract deployed in there, it won'be called. Also, it uses the Trust Wallet ETH account, not the BSC one.\nAny help would be appreciated.","298":"Can someone explain or drop a link on how the MetaMask plugin works?\nInteresting to create something verbose, but a little misunderstood, this plugin is not server-specific (decentralized). But if we want to restore our wallet and enter a secret phrase, then where does the request go? How does MetaMask know that our secret phrase actually exists and is correct? Who does MetaMask eventually communicate with and where does MetaMask receive information about this?","299":"when i want to bring up the Org3 peer in <hyperledger> fabric network and run command :\ndocker-compose -f docker\/docker-compose-org3.yaml up -d\nI have some errors as fallow:\nWARNING: The DOCKER_SOCK variable is not set. Defaulting to a blank string.\nCreating peer0.org3.example.com ... error\nERROR: for peer0.org3.example.com  Cannot create container for service peer0.org3.example.com: create .: volume name is too short, names should be at least two alphanumeric characters\nERROR: for peer0.org3.example.com  Cannot create container for service peer0.org3.example.com: create .: volume name is too short, names should be at least two alphanumeric characters\nERROR: Encountered errors while bringing up the project.\nHow I can solve that .\nThanks","300":"Hello I want to transfer bep20 token one address to another address,using ankr api and provider for <web3>, but got error like\n\nInvalid Sender\n\nHere is code which i used for transfer token, i have used chaind id for binanace like bnb, bsc binance smart chain mainnet\nlet tokenAddress = '0x41XXXXXXXXXXXXXXXXXXXXXXXXXXXXXbce' \/\/  contract address\n \n  let toAddress = req.params.toaddress \/\/ where to send it\n  let fromAddress = req.params.fromaddress \/\/ your wallet\n  let pKey = req.params.privatekey.split('0x');\n  let privateKey = Buffer.from(pKey[1],'hex');\n  \n  let contractABI = [\n    \/\/ transfer\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_to',\n          'type': 'address'\n        },\n        {\n          'name': '_value',\n          'type': 'uint256'\n        }\n      ],\n      'name': 'transfer',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'type': 'function'\n    }\n  ]\n\n  let contract = new <web3>2.eth.Contract(contractABI, tokenAddress, {from: fromAddress})\n\n  \/\/ 1e18 === 1 HST\n  let amount1 = req.params.amount;\n\n  let amount = <web3>2.utils.toBN(amount1*1000000000000000000)\n  \/\/ console.log(amount);\n  <web3>2.eth.getTransactionCount(fromAddress)\n    .then((count) => {\n      let rawTransaction = {\n        'from': fromAddress,\n        'gasPrice': <web3>2.utils.toHex(20 * 1e9),\n        'gasLimit': <web3>2.utils.toHex(210000),\n        'to': tokenAddress,\n        'value': 0x0,\n        'data': contract.methods.transfer(toAddress, amount).encodeABI(),\n        'nonce': <web3>2.utils.toHex(count),\n        \"chainId\": 56\n      }\n      let transaction = new EthereumTx(rawTransaction,{chain:'bsc'})\n      transaction.sign(privateKey)\n      <web3>2.eth.sendSignedTransaction('0x' + transaction.serialize().toString('hex'),(err,hash) => {\n        console.log(err)\n        var url = \"https:\/\/etherscan.io\/tx\/\"+hash\n        res.json({hash: hash, status_url: url,success:'true',message : 'Transaction has been pushed.'});\n      })\n        \n    })","301":"I have 2 Contracts. One is an ERC721 Token (NFTCollectables). The other one is a market including an auction system (NFTMarket).\nAn auction can be claimed after it ended and only by the highest bidder.\nWhen claiming an auction the transfer method of the NFTCollectables contract is called to transfer the NFT from the markets address to the address of the highest bidder.\nI do not exactly understand why the exception comes, but it occurs at\/inside the transfer method of the NFTCollectables contract. The strange thing is that even the last line of code inside the transfer method is getting executed (tested by putting a require(false, 'test') after _transfer(msg.sender, to, nftId)). But nothing after ctr.transfer(auction.highestBid.bidder, auction.nftId) is getting executed (tested by putting a require(false, 'test') after it).\nCould it have to do with the gas limit?\nAny idea is appreciated, thanks!\nNFTMarket\nfunction claimAuction(uint auctionIndex) external {\n    require(auctionIndex < auctions.length, \"no auction\");\n    Auction memory auction = auctions[auctionIndex];\n    require(block.timestamp <= auction.end, \"auction still active\");\n\n    NFTCollectables ctr = NFTCollectables(nftCollectablesAddress);\n    ctr.transfer(auction.highestBid.bidder, auction.nftId);\n\n    \/\/ deleting auction from active auctions list\n    for (uint i; i < activeAuctionIndexes.length; i++) {\n      if (activeAuctionIndexes[i] == auctionIndex) {\n        delete activeAuctionIndexes[i];\n        break;\n      }\n    }\n\n    emit AuctionEnd(auction.highestBid.bidder, auction.highestBid.price, auction.nftId);\n}\n\nNFTCollectables\nfunction transfer(address payable to, uint nftId) external payable {\n    require(_exists(nftId), \"transfer of non existing token\");\n    require(_isApprovedOrOwner(msg.sender, nftId), \"Sender not approved nor owner\");\n    _transfer(msg.sender, to, nftId);\n}","302":"I'm working with a Solidity using Brownie Framework running on WSL2 Ubuntu 20.04 on Windows 10 host machine.\nAnd I have to import chainlink dependecies to my project, so I have the following importors\nimport \"@chainlink\/contracts\/src\/v0.6\/interfaces\/AggregatorV3Interface.sol\";\nimport \"@chainlink\/contracts\/src\/v0.6\/vendor\/SafeMathChainlink.sol\"; \n\nTo get them work properly I added the folling code to brownie-config.yaml\ndependencies:\n  # - <organization\/repo>@<version>\n  - smartcontractkit\/chainlink-brownie-contracts@1.1.1\ncompiler:\n  solc:\n    remappings:\n      - \"@chainlink=smartcontractkit\/chainlink-brownie-contracts@1.1.1\"\n\nSo running brownie compile, the compiler works just fine, however visual studio code complains about the imports\nVscode error\nAdditional Info: I'm using the romote compiler version, and if I change it to \"localNodeModule\" Vscode stops complaining about the import but it starts to complain about solidity version:\nSolidity error\nAnd I not able to compile the project anymore.\nI read some other post like this one: VScode Solidity extension - not finding openzepplin imports with similar problems, but unfornatelly the problems still unresolve.","303":"I'm currently trying to solve a problem in a Ethereum <blockchain> running in kubernetes (EKS). I do not posses knowledge on BC besides the basic but I do have access to all the configuration of this environment and I want to learn from this.\nThe problem I'm facing is that, when a new signer pod is created, the genesis initContainer fails with the following error:\n\nINFO [10-01|13:48:58.132] Maximum peer count ETH=25 LES=0 total=25\nINFO [10-01|13:48:58.132] Allocated cache and file handles\ndatabase=\/ethereum\/<geth>\/chaindata cache=16 handles=16\nFatal: Failed to open database: resource temporarily unavailable\nFatal: Failed to open database: resource temporarily unavailable\n\nThe signer deployment is configured so it has a shared volume between the pods:\nspec:\n  volumes:\n    - name: config\n      configMap:\n        name: genesis-config-6hbt7fcf72\n        items:\n          - key: genesis.json\n            path: genesis.json\n        defaultMode: 420\n    - name: chaindata\n      persistentVolumeClaim:\n        claimName: volume-signer1\n  initContainers:\n    - name: genesis\n      image: 'ethereum\/client-go:alltools-v1.8.27'\n      command:\n        - <geth>\n      args:\n        - '--datadir=\/ethereum'\n        - init\n        - \/tmp\/json\/genesis.json\n      resources: {}\n      volumeMounts:\n        - name: config\n          readOnly: true\n          mountPath: \/tmp\/json\/genesis.json\n          subPath: genesis.json\n        - name: chaindata\n          mountPath: \/ethereum\n      terminationMessagePath: \/dev\/termination-log\n      terminationMessagePolicy: File\n      imagePullPolicy: IfNotPresent\n\nI think this error may be caused exactly by this shared volume, as it's trying to init a new BC database that already exists but I'm not sure of this as this is my first time working with this (I didn't configure this, I'm just trying to fix it).\nAs this is a production environment I can't test this so easily but I do have non-production environments where I can test stuff.\nEDIT 1\nAdding the PVC definition:\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: volume-signer1\n  namespace: production\n  labels:\n    owner: ChaiVault\n  annotations:\n    pv.kubernetes.io\/bind-completed: 'yes'\n    pv.kubernetes.io\/bound-by-controller: 'yes'\n    volume.beta.kubernetes.io\/storage-provisioner: kubernetes.io\/aws-ebs\n  finalizers:\n    - kubernetes.io\/pvc-protection\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 30Gi\n  volumeName: pvc-35404d2c-e3c9-11e9-b77c-02da19f13e4c\n  storageClassName: gp2\n  volumeMode: Filesystem\nstatus:\n  phase: Bound\n  accessModes:\n    - ReadWriteOnce\n  capacity:\n    storage: 30Gi","304":"I have the following url:\nhttps:\/\/<blockchain>.info\/multiaddr?active=1AT4ES3ee1N6iBzzbdK8xvcAV3CBTRKcbS|1FHcYth4LRJMwNx2y8NR5DH7sYCiVzXs3Y&n=1\n\nI want to access the final_balance from the output of the url.\nI have the following code:\n $value = file_get_contents($url);\n    $FinalBalance = $value[\"final_balance\"];\n    var_dump($FinalBalance);\n\nError PHP Warning:  Illegal string offset 'final_balance'\n\nI also tried the following code:\n $value = file_get_contents($url);\n    $json = json_decode($value);\n    var_dump($json);\n        $FinalBalance = $json[\"final_balance\"];\n    var_dump($Final_Balance);\nError PHP Fatal error:  Uncaught Error: Cannot use object of type stdClass as array","305":"I've created my own BEP20 token on BinanceSmartChain. After token creation with myWallet I added liquidity on PancakeSwap to a new liquidity pool (myToken, WBNB -> myPool).\nThere should be two <transactions> (token transfers) at the BSC explorer (BscScan):\n\ninitial token creation (0x00 -> myWallet)\nfunction addLiquidityETH(myWallet, myToken, WBNB -> myPool)\n\nBut at the same time (exact same timestamp) there were more <transactions>:\n\nmyToken transaction (function Safe Buy) from myPool to a \"public\" PancakeSwap wallet that records a lot of <transactions>.\nmyToken transaction (function Safe Buy) from this public wallet back to myPool (amount: a small fraction of the value before)\n\nA few seconds later there were more <transactions> I never called via function order PancakeSwap myself:\n5.. swapExactETHForTokens called a few times swapping myToken and WBNB to various wallets.\nDoes anyone have any idea as to the purpose of the other <transactions> and why PancakeSwap is doing this?","306":"I have the same smart contract deployed on mumbai as I do on ropsten to mint nfts, nothing too fancy. I then set up some <python> code with the <web3> library to call the minting function. The code works properly when I test on ropsten but it fails when I try on mumbai. I have concerns about this failing on the polygon main net as well. I think I am using the proper chainId for each respective network. The error code I get when signing a transaction and sending the raw version is: {\u00e2\u0080\u0098code\u00e2\u0080\u0099: -32000, \u00e2\u0080\u0098message\u00e2\u0080\u0099: \u00e2\u0080\u0098invalid sender\u00e2\u0080\u0099} . Do you know what could be going on?\nimport os\nfrom <web3> import <web3>\nfrom <web3>.middleware import <geth>_poa_middleware\nfrom eth_account import Account\n\nw3 = <web3>(<web3>.HTTPProvider(f\"https:\/\/polygon-mumbai.infura.io\/v3\/{os.environ['<web3>_INFURA_PROJECT_ID']}\"))\n#w3 = <web3>(<web3>.HTTPProvider(f\"https:\/\/polygon-mainnet.infura.io\/v3\/{os.environ['<web3>_INFURA_PROJECT_ID']}\"))\n#w3 = <web3>(<web3>.HTTPProvider(f\"https:\/\/ropsten.infura.io\/v3\/{os.environ['<web3>_INFURA_PROJECT_ID']}\"))\n\nw3.middleware_onion.inject(<geth>_poa_middleware, layer=0)\nprint(w3.isConnected())\n\naddr = \"0x0D3C0D1C13a973DEFAe0dBA184081bDE0eD55B4C\" # DMT on Polygon Mumbai\n#addr = \"0x74a4bf35Ec669A500541c1137A1fcDfa5f45194c\" # DMT on Ropsten\n\nacct = Account.privateKeyToAccount(os.environ['PRIVATE_KEY'])\n\n#abi = ... # lots of stuff\n\ncontract_instance = w3.eth.contract(address=w3.toChecksumAddress(addr), abi=abi)\nprint(contract_instance.functions.lastTokenId().call())\n\nnonce = w3.eth.get_transaction_count(acct.address)\ntest = 'https:\/\/ipfs.io\/ipfs\/mydata'\ntx_hash = contract_instance.functions.autoMint(acct.address, test).buildTransaction({\n    'from': acct.address,\n    'chainId': 80001, # mumbai\n    #'chainId': 3, # ropsten\n    'gas': int(1e6),\n    'maxFeePerGas': w3.toWei('2', 'gwei'),\n    'maxPriorityFeePerGas': w3.toWei('1', 'gwei'),\n    'nonce': nonce\n})\n\nsigned_txn = w3.eth.account.sign_transaction(tx_hash, private_key=acct.privateKey)\ntx_sent = w3.eth.send_raw_transaction(signed_txn.rawTransaction)\n\nThe provider I'm using is infura to access the <blockchain> over http. Do you think this error originates with their api?","307":"I just started learning solidity, but I am not able to deploy the contract successfully.\nWhen I npm run test I get:\nSyntaxError: Unexpected token o in JSON at position 1\nMy contract Inbox.sol:\n\/\/ SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Inbox {\n    string public message;\n\n    constructor(string memory initialMessage) {\n        message = initialMessage;\n    }\n\n    function setMessage(string memory newMessage) public {\n        message = newMessage;\n    }\n}\n\nMy compiler compile.js:\nconst path = require('path');\nconst fs = require('fs');\nconst solc = require('solc');\n\nconst inboxPath = path.resolve(__dirname, 'contracts', 'Inbox.sol');\nconst source = fs.readFileSync(inboxPath, 'utf8');\n\nvar input = {\n    language: 'Solidity',\n    sources: {\n        'Inbox.sol' : {\n            content: source\n        }\n    },\n    settings: {\n        outputSelection: {\n            '*': {\n                '*': [ '*' ]\n            }\n        }\n    }\n}; \n\nvar output = JSON.parse(solc.compile(JSON.stringify(input)))\n\nmodule.exports = output.contracts[\"Inbox.sol\"][\"Inbox\"];\n\nMy mocha test Inbox.test.js:\nconst assert = require('assert');\nconst ganache = require('ganache-cli');\nconst <web3> = require('<web3>');\nconst <web3> = new <web3>(ganache.provider());\nconst { abi, evm } = require('..\/compile.js')\n\nvar accounts;\nvar inbox;\n\nbeforeEach(async () => {\n    accounts = await <web3>.eth.getAccounts();\n\n    inbox = await new <web3>.eth.Contract(JSON.parse(evm))\n        .deploy({ data: abi, arguments: ['Hi there!'] })\n        .send({ from: accounts[0], gas: '1000000' })\n})\n\ndescribe('Inbox Contract', ()=> {\n    it('Can test', ()=> {\n        console.log(inbox)\n    })\n})\n\nI am not sure what part of JSON is wrong since it can't parse it correctly.\nWhen I log abi in Inbox.test.js I get this:\nInbox Contract\n[ { inputs: [ [Object] ],\n    stateMutability: 'nonpayable',\n    type: 'constructor' },\n  { inputs: [],\n    name: 'message',\n    outputs: [ [Object] ],\n    stateMutability: 'view',\n    type: 'function' },\n  { inputs: [ [Object] ],\n    name: 'setMessage',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function' } ]\n\nLogging evm gives me a very large block of code I won't be pasting here.","308":"I want to get a list of tokens I currently own, for a given wallet public key.\nCurrently I am using https:\/\/api.solscan.io\/account\/tokens?address=\"PUBLIC_KEY\">&price=1 to get the tokens I own.\nOkay. So I found this. Using the SPL Token ID as the program ID will return all the user owned tokens.\nconnection\n  .getParsedTokenAccountsByOwner(\n    new PublicKey(\"PUBLIC_KEY\"),\n    {\n      programId: new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\")\n    }\n  )","309":"I recently launch NFT on Polygon main net.  I tested before on testnet, local, and Mumbai testnet.  I was able to buy, sell, and create my own NFT.\nProblem:\nAfter deployed the smart contract on the polygon main network I am unable to sell my own NFT functionality.\nTechnology stack:\nJavascript, Ethereum, React, solidity and Next.js\nError\ninpage.js:1 MetaMask - RPC Error: Internal JSON-RPC error.","310":"This is my second day in Solidity and I have no clue what's wrong with this code here. (I have never done any coding except some newbie level C and HTML in high school) so any help is appreciated!\npragma solidity ^0.6.0;\ncontract SimpleStorage {\n    \n    \/\/this will get initialized as zero\n\n    uint256 public favoritNumber;\n    \n    function store(uint256 _favoritNumber) public {\n            favoritNumber = _favoritNumber;\n    }\n \n function retrieve() public view returns(unit256) {\n     return favoritNumber;\n }   \n}","311":"I am trying to connect the metamask wallet to my react-app. But in the process I am getting a few errors as mentioned below please help.\nget<web3>.js\nimport <web3> from '<web3>';\nimport {useEffect, useState} from 'react';\n\n\/\/ Wallet connect code\n\n\n\n\nconst use<web3> = () => {\n    const [<web3>,set<web3>] = useState(null);\n\n    useEffect(() => {\n        var instance;\n        if(window.ethereum) {\n            try{\n                instance = new <web3>(window.ethereum);\n            }catch(error){\n                console.error(error);\n            };\n        }else if (window.<web3>) {\n            instance =  new <web3>(window.<web3>);\n        }else{\n            const provider = new <web3>.provider.HttpProvider('http:\/\/127.0.0.1:8545')\n            instance = new <web3>(provider);\n        }set<web3>(instance);\n     \n    },[]);\n\n    return <web3>;\n\n};\n\nexport {use<web3>};\n\nstore.js\nimport React, {useReducer, useContext, createContext} from 'react';\n\nconst StoreContext = createContext();\n\nconst initialState = {\n    message: '',\n    address: null,\n    balance: 0\n};\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case \"NEW-ADDRESS\":\n            return {\n                ...state,\n                address: action.newAddress,\n                message: action.message\n            }\n        default:\n            throw new Error('Unknown type of action ${action.type');\n    }\n};\n\nexport const StoreProvider = ({children}) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <StoreContext.Provider value = {{state, dispatch}}>\n            {children}\n        <\/StoreContext.Provider>\n        );\n};\n\nexport const useStore = () => useContext(StoreContext);\n\nstoreApi.js\nimport {useStore} from '.\/store'\n\nconst useStoreApi = () => {\n    const {state, dispatch} = useStore();\n\n    return {\n        address: state.address,\n        balance: state.balance,\n        message: state.message,\n        setBalance: (newBalance) => {\n            dispatch({\n                type: \"SET-BALANCE\",\n                newBalance\n            });\n        },\n        setAddress: newAddress => {\n            dispatch({\n                type: \"New-Address\",\n                newAddress,\n                message: \"New account added successfully!\"\n            });\n        }\n    };\n};\n\nexport {useStoreApi};\n\napp.js\nimport { useStoreApi } from '.\/storeApi';\nimport { use<web3> } from '.\/get<web3>';\nimport logo from '.\/logo.svg';\nimport '.\/App.css';\nimport {Button} from '@material-ui\/core';\n\nfunction App() {\n  const {address,balance,message, setBalance,setAddress} = useStoreApi();\n  const <web3> = use<web3>();\n\n  const setUserAccount = async (e) => {\n    console.log(\"rhis add\");\n\n    if(window.ethereum) {\n      await window.ethereum.enable();\n      <web3>.eth.getAccounts().then(accounts => {\n        setAddress(accounts[0]);\n        console.log(\"rhis add\");\n      });\n\n    }\n\n\n  };\n  setUserAccount();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" \/>\n        <p>\n           <code>src\/App.js<\/code> \n        <\/p>\n        {\n          address ? (\n            <>\n            <p> Your add: {address}<\/p><\/>\n          ): \"s\"\n         }\n        {\/* <Button variant=\"outlined\" color=\"primary\" onClick={() => setUserAccount()}>Conn<\/Button> *\/}\n        {\/* <form action=\"http:\/\/localhost:3000\/\">\n          <button type=\"submit\" onClick={() => setUserAccount()}>Submit<\/button>\n        <\/form> *\/}\n\n\n      <\/header>\n    <\/div>\n  );\n}\n\nexport default App;\n\nindex.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '.\/index.css';\nimport App from '.\/App';\nimport reportWebVitals from '.\/reportWebVitals';\nimport {StoreProvider} from '.\/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App \/>\n    <\/StoreProvider>\n  <\/React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n\nErrors:\n\nApp.js:16 Uncaught (in promise) TypeError: Cannot read properties of null (reading 'eth')\nat setUserAccount (App.js:16)\n\nstore.js:20 Uncaught Error: Unknown type of action ${action.type\n\nindex.js:1 The above error occurred in the  component:\nat StoreProvider (http:\/\/localhost:3000\/static\/js\/main.chunk.js:847:3)","312":"The eventual thing that I want to achieve is to migrate\/deploy a smart contract using truffle through an API call. I would prefer to do it in NodeJs.\nThis question is related to deployment of smart contracts on Ethereum and Polygon network. I am able to deploy using command line interface truffle commands. For example truffle migrate --network matic. How do I run these commands through code?\nDo I need to use chile_proces.exec function to execute the truffle commands? Or is there a different way that devs are already doing it?","313":"I saw that Deterministic is one of the property of Hashing. So can we predict the data on which we performed hasing algo by checking the hash output value?\nEg. If me and my friend uses the same hashign algo on our individual data. And at some point we both got ABCD as hash output value. So in that We can get to know on each other on which data we are performing hashing, right?","314":"I was doing some research over the weekend on some <blockchain> dev in the Solana <blockchain> and came across a construct called Compact-u16.  The definition of this in the documentation says the following: \"A compact-u16 is a multi-byte encoding of 16 bits. The first byte contains the lower 7 bits of the value in its lower 7 bits. If the value is above 0x7f, the high bit is set and the next 7 bits of the value are placed into the lower 7 bits of a second byte. If the value is above 0x3fff, the high bit is set and the remaining 2 bits of the value are placed into the lower 2 bits of a third byte.\".\nI have been coding for 30+ years.  Maybe I'm just old school on this, but why is there a construct to store 16 bits of data in 3 bytes?  This is just vastly inefficient from my standpoint.  Is there a reason for this?  On further research, I found a doc related to assembly instruction pointers, which referenced 7 instruction pointers that are useful for caching values when context switching in and out of the processor stack.  But this construct is used for a web app platform.  Like, literally, there is no reason that I have been able to find that justifies using 3 bytes to store 16 bits of data.  If the developers wanted to use an elegant bit mapping solution to compress space, why not just use a semaphore?  Why create a brand new construct that increases the storage requirements for the data by 33%.\nWhat am I missing?","315":"We've deployed a smart contract on ethereum <blockchain>. You can check it out on etherscan website. This contract is called xarb. Now the problem is all tokens minted by this contract has xarb as the creator of token in opensea. I know a solution could be having a contract factory, But I also know that foundation marketplace has one and only one smart contract for minting and has no trouble with token creator address. Anybody knows what method is used by opensea to find the creator of token out?\nAny helps will be appreciated.","316":"I'm trying to compile my code on my token smart contract on solidity but this line is causing an error:\naddress public immutable BUSD = address(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56); \/\/BUSD\n\nError message:\ncontracts\/Work Protocol.sol:32:20: ParserError: Expected identifier but got reserved keyword 'immutable'\naddress public immutable BUSD = address(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56); \/\/BUSD\n^-------^","317":"If I call the transaction endpoint from the API gateway:\nhttps:\/\/testnet-gateway.elrond.com\/transaction\/89a15e2ea521764d21ac2de83064dd7c1848f83dff4dcbad0518fdf41a70d889\nI get the following data:\n\n\"data\":\"RVNEVE5GVFRyYW5zZmVyQDRkNDU1ODQ2NDE1MjRkMmQ2MjM5MzM2NTM2MzBAMDEyMzRmQDA1OWUxZDQ2YTljM2I4OWNhMkAwMDAwMDAwMDAwMDAwMDAwMDUwMDRmNzllYzQ0YmIxMzM3MmI1YWM5ZDk5NmQ3NDkxMjBmNDc2NDI3NjI3Y2ViQDYzNmY2ZDcwNmY3NTZlNjQ1MjY1Nzc2MTcyNjQ3Mw==\"\n\nWhat does it represent?","318":"Background: Suppose I want to verify the ownership of some tweet or some picture by looking up the data in the <blockchain>. If my understanding is correct, I need to be able to assign a unique tokenId that represents that tweet\/picture.\nQuestion 1: Is there some standardization on how this ID is assigned? Do different platform perform this mapping in a unique way? I feel like without such a standardization, the non-fungibility becomes questionable (e.g., do you really own this tweet, or do you only own it if you apply the tweet->token ID mapping you crafted yourself?).\nQuestion 2: Could you provide a few examples of how exactly is the token ID assigned to some (well-known) NFTs?","319":"I am trying to deploy smart contract to mint NFTs on mainnet, after successful tests on rinkeby. While trying to deploy to mainnet the folowing error occured:\nValueError: insufficient funds for gas * price + value\nI'm using brownie with Infura,and trying to mint ERC-721 tokens.\nI would be grateful for any help!\nHere's my console output:\nBrownie v1.16.2 - <python> development framework for Ethereum\n\nNftProject is the active project.\n\nRunning 'scripts\/simple_collectible\/deploy_simple.py::main'...\nmainnet\nFile \"\/usr\/local\/lib\/<python>3.8\/dist-packages\/brownie\/_cli\/run.py\", line 49, in main\n    return_value, frame = run(\n  File \"\/usr\/local\/lib\/<python>3.8\/dist-packages\/brownie\/project\/scripts.py\", line 103, in run\n    return_value = f_locals[method_name](*args, **kwargs)\n  File \".\/scripts\/simple_collectible\/deploy_simple.py\", line 10, in main\n    SimpleCollectible.deploy({\"from\": dev}, publish_source=publish_source)\n  File \"\/usr\/local\/lib\/<python>3.8\/dist-packages\/brownie\/network\/contract.py\", line 599, in __call__\n    return tx[\"from\"].deploy(\n  File \"\/usr\/local\/lib\/<python>3.8\/dist-packages\/brownie\/network\/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"\/usr\/local\/lib\/<python>3.8\/dist-packages\/brownie\/network\/account.py\", line 743, in _make_transaction\n    exc = VirtualMachineError(e)\n  File \"\/usr\/local\/lib\/<python>3.8\/dist-packages\/brownie\/exceptions.py\", line 85, in __init__\n    raise ValueError(exc[\"message\"]) from None\nValueError: insufficient funds for gas * price + value```","320":"PS D:\\Projects\\ANIS\\Decentralized_Bank> truffle compile\nCompiling your contracts...\n\nCompiling .\\src\\contracts\\Migrations.sol\nCompiling .\\src\\contracts\\Migrations.sol\nCompiling .\\src\\contracts\\Tether.sol\nCompiling .\\src\\contracts\\Tether.sol\nArtifacts written to D:\\Projects\\ANIS\\Decentralized_Bank\\src\\truffle_abis\nCompiled successfully using:\n\n\nsolc: 0.5.16+commit.9c3226ce.Emscripten.clang\n\nPS D:\\Projects\\ANIS\\Decentralized_Bank> [truffle migrate]\nCompiling your contracts...\nError: Unsupported compiler: [object Object]\nat C:\\Users\\OMEN\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\workflow-compile\\index.js:28:1\nat Array.map (<anonymous>)\nat compile (C:\\Users\\OMEN\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\workflow-compile\\index.js:26:1)\nat Object.compile (C:\\Users\\OMEN\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\workflow-compile\\index.js:68:47)\nat Object.compileAndSave (C:\\Users\\OMEN\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\workflow-compile\\index.js:95:47)\nat Object.run (C:\\Users\\OMEN\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\core\\lib\\commands\\migrate.js:199:1)\nat Command.run (C:\\Users\\OMEN\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\core\\lib\\command.js:183:1)\n\nTruffle v5.4.11 (core: 5.4.11)\nNode v14.17.2","321":"I am trying to install Solana:\n\nsh -c \"$(curl -sSfL https:\/\/release.solana.com\/v1.7.12\/install)\"\n\nI am getting:\ndownloading v1.7.12 installer\n\n\n\n\/tmp\/tmp.uKtHJnlk2o\/solana-install-init: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory\n\n\n\nplease help me","322":"i'm working on document verification project.\nwhen the document issued by the user exists,the program returns correct JSON result.\nhere is the output when i run\n<% console.log('fit', JSON.parse(documents, null, '\\t')) %>\nand when the document exists(expected output),\nOutput\nfit [ { Key: 'DOCUMENT0', Record: { name: 'bachelor of science degree', url: 'https:\/\/bitcoin.org\/ggg.pdf', issuedBy: 'sol123', dateOfIssuance: '12:18 PM, 25 September, 2021', hashedDoc: 'dac729a8acf4b8a88f73f5bd84206c34e01e0992efa251b772f68696e2c2539c9ed0090e73ef6b87dc24e3177c6fd5341c3e9e24ef14267ce07ab9428aeed897', docType: 'Whitepaper' } } ]\nbut,when the document is not issued by the user,for example,if the user is new and logged for the first time,\nit returns the following error.\nSyntaxError: \/home\/verification\/fabcar\/javascript\/views\/pages\/dashboard.ejs:15\n13|     \n14|\n\n\n15|     <% JSON.parse(documents).forEach(document => { %>\n16|         <a class=\"list-group-item list-group-item-action\" id=\"<%= document.Key %>\" data-bs-toggle=\"tab\"\n17|           href=\"#list-<%= document.Key %>\" role=\"tab\" aria-controls=\"list-<%= document.Key %>\" style=\"min-width: 200px;\"><%= document.Key %>\n18|     <% }) %>\n\n\nUnexpected end of JSON input\nat JSON.parse (\ni tried to check the content  of documents when there is no document  issued by the user or when a user logged to the system for the first time,\ncontent of json object when there is no document issued by the user,\n{\nmatch: true,\n_locals: [Object: null prototype] {},\nusername: 'uuu123',\npassword: '09283ba5752cf589bad68e1d60d8165183386b1c75ba01c1d662719bbb571580bc7647667975c9d0410ae48d5e2e97bc3af206e7c21a2bc5624309bb237bdddd',\ndocuments: Buffer\n}\nmy question is,how can i display \"No document issued\" message on EJS when there is no document issued by the user?\nhow can i use  value set for documents when there is no document issued by the user in if else statements in ejs?\nplease i need your help","323":"When i run test network at <hyperledger> fabric i have this error\nrror: Post \"https:\/\/localhost:7053\/participation\/v1\/channels\": dial tcp 127.0.0.1:7053: connect: connection refused\nChannel creation failed\nHow to solve it","324":"When I try to install erdpy, it fails with the following message:\n\nModuleNotFoundError: No module named 'ledgercomm'\nCRITICAL:installer:Could not install erdpy.\n\nI follow the steps from here.\nRunning:\n$ wget -O erdpy-up.py https:\/\/raw.githubusercontent.com\/ElrondNetwork\/elrond-sdk-erdpy\/master\/erdpy-up.py\n\noutputs:\n--2021-09-25 11:04:20--  https:\/\/raw.githubusercontent.com\/ElrondNetwork\/elrond-sdk-erdpy\/master\/erdpy-up.py\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.111.133, 185.199.110.133, ...\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 8902 (8.7K) [text\/plain]\nSaving to: \u00e2\u0080\u0098erdpy-up.py\u00e2\u0080\u0099\n\nerdpy-up.py                       100%[=============================================================>]   8.69K  --.-KB\/s    in 0.003s  \n\n2021-09-25 11:04:20 (2.82 MB\/s) - \u00e2\u0080\u0098erdpy-up.py\u00e2\u0080\u0099 saved [8902\/8902]\n\nThen, running:\n$ <python>3 erdpy-up.py\n\noutputs:\nINFO:installer:Checking user.\nINFO:installer:Checking <python> version.\nINFO:installer:<python> version: sys.version_info(major=3, minor=6, micro=9, releaselevel='final', serial=0)\nINFO:installer:Checking operating system.\nINFO:installer:Operating system: linux\nINFO:installer:Removed previous installation (virtual environment).\nINFO:installer:Packages found: <module 'ensurepip' from '\/usr\/lib\/<python>3.6\/ensurepip\/__init__.py'>, <module 'venv' from '\/usr\/lib\/<python>3.6\/venv\/__init__.py'>.\nINFO:installer:Creating virtual environment in: \/home\/user\/elrondsdk\/erdpy-venv.\nINFO:installer:Virtual environment has been created in: \/home\/user\/elrondsdk\/erdpy-venv.\nINFO:installer:Installing erdpy in virtual environment...\nCollecting pip\n  Using cached https:\/\/files.<python>hosted.org\/packages\/ca\/31\/b88ef447d595963c01060998cb329251648acf4a067721b0452c45527eb8\/pip-21.2.4-py3-none-any.whl\nInstalling collected packages: pip\n  Found existing installation: pip 9.0.1\n    Uninstalling pip-9.0.1:\n      Successfully uninstalled pip-9.0.1\nSuccessfully installed pip-21.2.4\nCollecting erdpy\n  Downloading erdpy-1.0.17-py3-none-any.whl (142 kB)\n     |################################| 142 kB 1.6 MB\/s \n  Downloading erdpy-1.0.16-py3-none-any.whl (142 kB)\n     |################################| 142 kB 5.1 MB\/s \nCollecting bottle\n  Downloading bottle-0.12.19-py3-none-any.whl (89 kB)\n     |################################| 89 kB 4.5 MB\/s \nCollecting pycryptodomex\n  Downloading pycryptodomex-3.10.4-cp35-abi3-manylinux2010_x86_64.whl (1.9 MB)\n     |################################| 1.9 MB 5.4 MB\/s \nCollecting pynacl\n  Downloading PyNaCl-1.4.0-cp35-abi3-manylinux1_x86_64.whl (961 kB)\n     |################################| 961 kB 4.7 MB\/s \nCollecting requests\n  Downloading requests-2.26.0-py2.py3-none-any.whl (62 kB)\n     |################################| 62 kB 6.8 MB\/s \nCollecting prettytable\n  Downloading prettytable-2.2.0-py3-none-any.whl (23 kB)\nCollecting toml>=0.10.2\n  Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\nCollecting <cryptography>>=3.2\n  Downloading <cryptography>-3.4.8-cp36-abi3-manylinux_2_24_x86_64.whl (3.0 MB)\n     |################################| 3.0 MB 5.5 MB\/s \nCollecting cffi>=1.12\n  Downloading cffi-1.14.6-cp36-cp36m-manylinux1_x86_64.whl (401 kB)\n     |################################| 401 kB 6.1 MB\/s \nCollecting pycparser\n  Downloading pycparser-2.20-py2.py3-none-any.whl (112 kB)\n     |################################| 112 kB 6.9 MB\/s \nCollecting importlib-metadata\n  Downloading importlib_metadata-4.8.1-py3-none-any.whl (17 kB)\nCollecting wcwidth\n  Downloading wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)\nCollecting zipp>=0.5\n  Downloading zipp-3.5.0-py3-none-any.whl (5.7 kB)\nCollecting typing-extensions>=3.6.4\n  Downloading typing_extensions-3.10.0.2-py3-none-any.whl (26 kB)\nCollecting six\n  Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\nCollecting idna<4,>=2.5\n  Downloading idna-3.2-py3-none-any.whl (59 kB)\n     |################################| 59 kB 8.6 MB\/s \nCollecting certifi>=2017.4.17\n  Downloading certifi-2021.5.30-py2.py3-none-any.whl (145 kB)\n     |################################| 145 kB 6.5 MB\/s \nCollecting charset-normalizer~=2.0.0\n  Downloading charset_normalizer-2.0.6-py3-none-any.whl (37 kB)\nCollecting urllib3<1.27,>=1.21.1\n  Downloading urllib3-1.26.7-py2.py3-none-any.whl (138 kB)\n     |################################| 138 kB 5.6 MB\/s \nInstalling collected packages: zipp, typing-extensions, pycparser, wcwidth, urllib3, six, importlib-metadata, idna, charset-normalizer, cffi, certifi, toml, requests, pynacl, pycryptodomex, prettytable, <cryptography>, bottle, erdpy\nSuccessfully installed bottle-0.12.19 certifi-2021.5.30 cffi-1.14.6 charset-normalizer-2.0.6 <cryptography>-3.4.8 erdpy-1.0.16 idna-3.2 importlib-metadata-4.8.1 prettytable-2.2.0 pycparser-2.20 pycryptodomex-3.10.4 pynacl-1.4.0 requests-2.26.0 six-1.16.0 toml-0.10.2 typing-extensions-3.10.0.2 urllib3-1.26.7 wcwidth-0.2.5 zipp-3.5.0\nTraceback (most recent call last):\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/bin\/erdpy\", line 5, in <module>\n    from erdpy.cli import main\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/cli.py\", line 7, in <module>\n    import erdpy.cli_accounts\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/cli_accounts.py\", line 4, in <module>\n    from erdpy import cli_shared, utils\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/cli_shared.py\", line 8, in <module>\n    from erdpy import config, errors, scope, utils\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/scope.py\", line 6, in <module>\n    from erdpy.testnet.config import TestnetConfiguration\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/testnet\/__init__.py\", line 2, in <module>\n    from erdpy.testnet.setup import clean, configure, install_dependencies\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/testnet\/setup.py\", line 8, in <module>\n    from erdpy.testnet import (genesis_json, genesis_smart_contracts_json,\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/testnet\/genesis_json.py\", line 6, in <module>\n    from erdpy.testnet.genesis import (get_delegation_address,\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/testnet\/genesis.py\", line 2, in <module>\n    from erdpy.contracts import SmartContract\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/contracts.py\", line 10, in <module>\n    from erdpy.<transactions> import Transaction\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/<transactions>.py\", line 11, in <module>\n    from erdpy.ledger.ledger_app_handler import SIGN_USING_HASH_VERSION\n  File \"\/home\/user\/elrondsdk\/erdpy-venv\/lib\/<python>3.6\/site-packages\/erdpy\/ledger\/ledger_app_handler.py\", line 1, in <module>\n    from ledgercomm import Transport\nModuleNotFoundError: No module named 'ledgercomm'\nCRITICAL:installer:Could not install erdpy.\n\nDetails:\n$ <python>3 --version\n<python> 3.6.9\n\nHow can I fix this?","325":"I'm working on <blockchain> based document verification system.\nThe system works perfectly when there is a document issued by the user. The problem is when there is no issued document by the user(for example, when the user is new), the error is with the following code,\n\n<% console.log('fit', JSON.parse(documents, null, '\\t')) %>\n\nWhen a document is issued by the user, it returns the following JSON data:\nfit\n[\n  {\n    Key: 'DOCUMENT0',\n    Record: {\n      name: 'bachelor of science degree',\n      url: 'https:\/\/bitcoin.org\/ggg.pdf',\n      issuedBy: 'sol123',\n      dateOfIssuance: '12:18 PM, 25 September, 2021',\n      hashedDoc: 'dac729a8acf4b8a88f73f5bd84206c34e01e0992efa251b772f68696e2c2539c9ed0090e73ef6b87dc24e3177c6fd5341c3e9e24ef14267ce07ab9428aeed897',\n      docType: 'Whitepaper'\n    }\n  }\n]\n\nThe problem is when a user creates account(signup) and login to the system for the first time or when there is no document issued by the user,it returns the following error:\nSyntaxError: \/home\/bishoftu\/fabcar\/javascript\/views\/pages\/dashboard.ejs:13\n11| \n12|     <div class=\"list-group\" id=\"list-tab\" role=\"tablist\" style=\"margin-top: 10px;\">\n\n\n\n13| <% console.log('fit', JSON.parse(documents, null, '\\t')) %>\n14|\n\n\n\nUnexpected end of JSON input at JSON.parse ()\n\nWhat i want is to display  the message \"NO DOCUMENT ISSUED\", when there is no document issued by the user.","326":"I made an external adapter from the Javascript External Adapter Template from Chainlink, trying to use the Client Credentials flow for Spotify's API to return artist data, documentation listed below.\nhttps:\/\/developer.spotify.com\/documentation\/general\/guides\/authorization-guide\/#client-credentials-flow\nhttps:\/\/developer.spotify.com\/console\/get-artist\/\nand I am able to make the call just fine with this code through Axios \nbut when I try to run the same call through the External Adapter which uses Axios for it's API calls as well, I get this error.\n\nHere is a snippet of the main code of the external adapter from index.js\n\n\nconst customParams = {\n  artist: [''],\n  \n  endpoint: false\n}\n\nconst createRequest = (input, callback) => {\n  \/\/ The Validator helps you validate the Chainlink request data\n\n  const apiID = process.env.API_ID\n  const apiKey = process.env.API_KEY\n\n  let token = 'BQDlkzka093OuR4tL7XyaI-Tag4R166FQGBSogBP6hEBxhsCjH8XfMRqs_apKFk0T87FGIrwPtT1bkuGCeE';\n\n\n  const validator = new Validator(callback, input, customParams)\n  const jobRunID = validator.validated.id\n  const endpoint = validator.validated.data.endpoint\n  const artistID = validator.validated.data.artist.toUpperCase()\n  const url = `https:\/\/api.spotify.com\/v1\/artists\/${artistID}`\n\n  const params = {\n    artistID\n  }\n\n  \/\/ curl -X \"GET\" \"https:\/\/api.spotify.com\/v1\/artists\/5K4W6rqBFWDnAN6FQUkS6x\" -H \"Accept: application\/json\" -H \"Content-Type: application\/json\" -H \"Authorization: Bearer authtoken\" \n\n  \n  \/\/ This is where you would add method and headers\n  \/\/ you can add method like GET or POST and add it to the config\n  \/\/ The default is GET requests\n  \/\/ method = 'get' \n  \/\/ headers = 'headers.....'\n  const head = {\n    'Accept' : 'application\/json',\n    'Content-Type' : 'application\/json',\n    'Authorization' : 'Bearer ' + token\n  }\n \n  const config = {\n    url,\n    headers: head\n  }\n  console.log(\"config:\", config)\n\n\n\nand this is the command I am running in the terminal to pass in the Spotify Artist ID\n\n\ncurl -X POST -H \"content-type:application\/json\" \"http:\/\/localhost:8080\/\" --data '{ \"id\": 0, \"data\": { \"\": \"5K4W6rqBFWDnAN6FQUkS6x\"} }'\n\n\n\n-Edit-\nJust to show that the code isn't all totally wrong, I am able to make a call through the external adapter to this url https:\/\/jsonplaceholder.typicode.com\/posts\/5, passing in the 5 with this command.\n\n\ncurl -X POST -H \"content-type:application\/json\" \"http:\/\/localhost:8080\/\" --data '{ \"id\": 0, \"data\": { \"\": \"5\"} }'","327":"My question is quite simple, why can't every node in the network follow the same principle for verifying <transactions>:\n\nCheck that the transaction has a unique ID\nCheck that the digital signature is correct using the public-key of the person sending money\n\n\nNo one can fake sending money on the behalf of someone else because\nthey do not have that person's private-key and hence cannot create a\nvalid digital signature for that transaction. No one can copy a\nprevious transaction with a valid digital signature and broadcast to\nother nodes again because the ID must be unique.\n\nThis would also remove the notion of \"blocks\" in a \"chain\" and lead\nto a simple ledger.\n\n\nI am aware that <blockchain>s already implement this simple system of digital signatures. What I don't understand is, what is the necessity of further verification through proof-of-work? How could someone possibly create an illegitimate block (with one or more illegitimate <transactions>) which would require this further layer of security? What am I missing here?","328":"I'm trying to make a program that continuously detects new tokens on the polygon <blockchain> as soon as liquidity has been added (PairCreated event). Below is the main section of the code.\nI am using quickSwap factory address (0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32) as that seems to be the pancakeswap equivalent for polygon network (theres references in the code for pancakeswap, I mean quickswap). Also using the same ABI as BSC which seems to be fine.\nI have managed to get this working fine on the binance smart chain but nothing is ever detected when running with polygon. I however read somewhere that apparently Polygon does not support the current method.\nCould anyone shed some light on what needs to be done to get this working?\nThanks!\n#import <web3> and all other modules\n\n<web3> = <web3>(<web3>.WebsocketProvider(bscNode))\n\ncontract = <web3>.eth.contract(address=pancakeSwapFactoryAddress, abi=listeningABI)\n\ndef foundToken(event):\n    jsonEventContents = json.loads(<web3>.toJSON(event))\n    #process token data etc\n        \n\n        \nasync def tokenLoop(event_filter, poll_interval):\n    while True:\n        try:\n            for PairCreated in event_filter.get_new_entries():\n                foundToken(PairCreated)\n            await asyncio.sleep(poll_interval)\n        except:\n            pass\n            \n            \ndef listenForTokens():\n    event_filter = contract.events.PairCreated.createFilter(fromBlock='latest')\n    loop = asyncio.get_event_loop()\n    try:\n        loop.run_until_complete(\n            asyncio.gather(\n                tokenLoop(event_filter, 2)))       \n                 \n    finally:\n        listenForTokens()\n\n\nlistenForTokens()","329":"I've mapping of addresses and need to somehow set bulk data at contract deployment or able to update it later\nmapping (address => bool) private accounts;\n\nthis is current solution to set addresses\n function setAccounts(address[] memory _accounts) public onlyOwner { \n    for(uint i=0; i< _accounts.length; i++){\n       accounts[_accounts[i]] = true;\n    } \n\n}\nThe problem is that I need to set about 10,000 addresses and doing it with loop requires lots of gas and too expensive.\nProbably, it's not possible to pass an array directly, but what could be a solution to get 10K list of addresses in 1 transaction without loop (or decrease gas fee)\nShould I use array instead and keep the address index to filter it later?\nPlease advise\nThanks in advance","330":"I wanna each machine that in a network of <hyperledger> fabric (using docker swarm) can execute the cli service. But, i don't found any reference for this issues. If someone know the solution of this issue, please help me","331":"Unexpected error calling ethereum contract using <web3>.js\nMyContract.methods.actual_balance(\"0xE8D.........\").call({})\n.then(r=>{\n    console.log(r)\n}).catch(err=>{\n    console.log(err)\n})\n\nI'm getting error:\n{ Error: Returned error: err: max fee per gas less than block base fee: address 0x4..., maxFeePerGas: 3000000000 baseFee: 42784084648 (supplied gas 4700000)...\n\nThat is nonsense, I'm not sending transaction (send) but just querying state from local ledger. How is this posible?\nMoreover, it was working an suddenly broke\n<geth> version  1.10.8-stable-26675454\n<web3> version 1.5.3\nfull error msg:\n at Object.ErrorResponse (...\/node_modules\/<web3>-core-helpers\/lib\/errors.js:28:19)\n    at Object.<anonymous> (...\/node_modules\/<web3>-core-requestmanager\/lib\/index.js:302:36)\n    at callback (...\/node_modules\/<web3>-providers-ipc\/lib\/index.js:56:40)\n    at Array.forEach (<anonymous>)\n    at Socket.<anonymous> (...\/node_modules\/<web3>-providers-ipc\/lib\/index.js:67:51)\n    at emitOne (events.js:116:13)\n    at Socket.emit (events.js:211:7)\n    at addChunk (_stream_readable.js:263:12)\n    at readableAddChunk (_stream_readable.js:250:11)\n    at Socket.Readable.push (_stream_readable.js:208:10)\n    at Pipe.onread (net.js:597:20) data: null }","332":"Does <blockchain> with proof of stake consensus have special nodes to choose a winner or does each node solve this task?\nI don't know the special nodes choose winner or distributed p2p network <blockchain> solves this task?\nIf you have some links on info, I would like to read the info.","333":"I want to iterate over all token ids of a ethereum ERC-721 contract.\nSome contracts have counting ids (0, 1, 2, 3, ...) which is easy, but some have random ids, e.g. https:\/\/etherscan.io\/token\/0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d#inventory\nSadly etherscan only shows the last 10000 token ids used, but I want to iterate over all 79490.\nIs there a way to accomplish this? For me, everything is fine. Setup my own ethereum node, using some API.","334":"Actually, I know that one node connects to server socket of other node by IP and port.\nHow a <blockchain> node can find the IPs of other nodes in the network? Does it connects to some server with the addresses?","335":"IM new to the <blockchain>\/DAPP\/NFT thing and need to get the process straight\nAssuming my smart contract is setup and pretty standard, I need users to login to the dapp and buy an NFT; IE not on Opensea\nIv created the artwork and stored it on the server where the DAPP resides.\nHow do I correlate the ID of the unique NFT to the ID and address on the smart contract?\nAll the contracts Iv reviewed, the NFT ID is just stepped on incrementally. Does the contracts ID have to correlate to the image ID?","336":"If I want to get the herotag for a given wallet address, I can simply call the following endpoint:\nhttps:\/\/api.elrond.com\/accounts\/erd1hw78kxyj353x52hmmq6dzxgexynwt4m29q2uvpq6xdm90z3halvsl7cn6g\nand I get:\n{\n   \"address\":\"erd1hw78kxyj353x52hmmq6dzxgexynwt4m29q2uvpq6xdm90z3halvsl7cn6g\",\n   \"nonce\":4,\n   \"balance\":\"0\",\n   \"rootHash\":\"QU6o17Qw4KUPnpU6e6QbEuvKUTA8SPy52QFseslWsG4=\",\n   \"txCount\":4,\n   \"username\":\"event.elrond\",\n   \"shard\":1\n}\n\nwhere I see the username.\nBut now I'd like to obtain the wallet address for a given herotag.\nIs there any API endpoint for this purpose?","337":"While trying to import\n\nopenZeppelin\n\nlibrary in remix IDE (the online version), it always return this error\n\nContract not found\n\nand this is how I tried to import it\nimport \"github\/OpenZeppelin\/openzeppelin-contracts\/contracts\/math\/SafeMath. sol\";\n\nand it doesn't work and i tried this as well\npragma solidity ^0.4.24;\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/v2.5.0\/contracts\/math\/SafeMath.sol\"; \n\nand it still didn't work as well\nHow do I import it correctly","338":"Is there any other alternative to HDWalletProvider that imports MetaMask's accounts via the 12 word mnemonic? Thanks in advance for the info.","339":"Hi guys i'm new at Solidity development, I'm currently learning and reading a project called SporesToken https:\/\/github.com\/Spores-Labs\/spores-token-contracts\/blob\/master\/contracts\/SporesToken.sol\nAnd i have a question about some kind of implementation\nimport \"@openzeppelin\/contracts\/presets\/ERC20PresetMinterPauser.sol\";\nimport \"@openzeppelin\/contracts\/access\/Ownable.sol\";\nimport \".\/UsingLiquidityProtectionService.sol\";\n\ncontract SporesToken is\n    UsingLiquidityProtectionService(0xBA2bF7693E0903B373077ace7b002Bd925913df2),\n    ERC20PresetMinterPauser,\n    Ownable\n\nFrom where comes the hash provided to UsingLiquidityProtectionService?\nMaybe this is a noob question but i didn't get it..\nPart of the content of .\/UsingLiquidityProtectionService.sol\nimport \".\/external\/UniswapV2Library.sol\";\nimport \".\/external\/UniswapV3Library.sol\";\nimport \".\/IPLPS.sol\";\n\nabstract contract UsingLiquidityProtectionService {\n    bool private unProtected = false;\n    IPLPS private plps;\n    uint64 internal constant HUNDRED_PERCENT = 1e18;\n    bytes32 internal constant UNISWAP =\n        0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f;\n    bytes32 internal constant PANCAKESWAP =\n        0x00fb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5;\n    bytes32 internal constant QUICKSWAP =\n        0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f;\n\n    enum UniswapVersion {\n        V2,\n        V3\n    }\n\n    enum UniswapV3Fees {\n        _005, \/\/ 0.05%\n        _03, \/\/ 0.3%\n        _1 \/\/ 1%\n    }\n\n    modifier onlyProtectionAdmin() {\n        protectionAdminCheck();\n        _;\n    }\n\n    constructor(address _plps) {\n        plps = IPLPS(_plps);\n    }\n\n    function LiquidityProtection_setLiquidityProtectionService(IPLPS _plps)\n        external\n        onlyProtectionAdmin()\n    {\n        plps = _plps;\n    }\n\nI hope anyone here can answer me,\nKind Regards and thank you for your time.","340":"I have deployed the <hyperledger> fabric <blockchain> on k8s with 3 peer nodes and 2 orderer nodes and 2 external chaincodes.\n<hyperledger> Fabric v2.3.3 | Fabric-Peer v2.3\nFor the peers I have assigned resources as:\nresources:\n        limits:\n          memory: \"800Mi\"\n          cpu: \"350m\"\n        requests:\n          memory: \"750Mi\"\n          cpu: \"300m\"\n\nWhile doing some performance testing I have noticed the following:\n\nThe memory usage keeps increasing with the number of concurrent <transactions>, which is expected given that the messages are basically protobufs and wrapped in an envelop.\nI invoked about 500 concurrent <transactions> and soon the peer pods hit the memory limit and became unavailable which led to multiple failures - greylisting of peers, failure of endorsement policies etc.\n\nNow after sometimes, when there's no more <transactions> in the queue, then peer should release the memory? But, that's not happening, the peer pod is still using the maximum memory. Even after 1 hour the peer memory usage is maximum\nAlso I have prometheus scraping all the metrics endpoints of peer and orderer nodes at an interval of 15s. And the client invokes one of the chaincode every 5 minutes (for some running total).\nAre there any any environment settings which can be configured to get the optimal performance?","341":"I'm facing some issues with cardano-cli. I'm using the Daedalus socket and trying to query the testnet.\nWhen running this command cardano-cli query tip --testnet-magic 1097911063 it returns the following:\ncardano-cli: DecoderFailure (LocalStateQuery HardForkBlock (': * ByronBlock (': * (ShelleyBlock (ShelleyEra StandardCrypto)) (': * (ShelleyBlock (ShelleyMAEra 'Allegra StandardCrypto)) (': * (ShelleyBlock (ShelleyMAEra 'Mary StandardCrypto)) ('[] *))))) Query (HardForkBlock (': * ByronBlock (': * (ShelleyBlock (ShelleyEra StandardCrypto)) (': * (ShelleyBlock (ShelleyMAEra 'Allegra StandardCrypto)) (': * (ShelleyBlock (ShelleyMAEra 'Mary StandardCrypto)) ('[] *))))))) ServerAgency TokQuerying QueryHardFork GetCurrentEra) (DeserialiseFailure 3 \"EraIndex: invalid index 4\")\n\nHowever when executing cardano-cli get-tip --testnet-magic 1097911063 it works fine.\nWhat could be causing this? Any thoughts on what I might be missing?","342":"I export JSON interface from compile.js file but deploy.js file not work\nit shows error as\n\nRuntimeError: abort(Error: You must provide the JSON interface of the contract when instantiating a contract object.). Build with -s ASSERTIONS=1 for more info.\n\nhere is compile.js\n  const path = require('path');\nconst fs = require('fs');\nconst solc = require('solc');\n\nconst lotteryPath = path.resolve(__dirname, 'contracts', 'lottery.sol');\nconst source = fs.readFileSync(lotteryPath, 'utf-8');\n\n\/\/console.log(solc.compile(source,1));\n\n\nvar input = JSON.stringify({\n    language: 'Solidity',\n    sources: {\n        'lottery.sol': {\n            content: source\n        }\n    },\n    settings: {\n        outputSelection: {\n\n            \/\/ Enable the metadata and bytecode outputs of every single contract.\n            \"*\": {\n                \"*\": [\"metadata\", \"evm.bytecode\"]\n            },\n            \/\/ Enable the abi and opcodes output of MyContract defined in file def.\n            \"def\": {\n                \"Lottery\": [\"abi\"]\n            },\n           \n\n\n        }\n    }\n})\n\nconst output = JSON.parse(solc.compile(input));\n\nconst interface = output.contracts['lottery.sol'].Lottery.abi;\nconst bytecode = output.contracts['lottery.sol'].Lottery.evm.bytecode.object;\n\nmodule.exports = {\n    interface,\n    bytecode,\n};\n\nafter that export this to deploy.js file\n \nconst HDwalletProvider = require(\"truffle-hdwallet-provider\");\nconst <web3> = require(\"<web3>\");\nconst {interface,bytecode}= require('.\/compile.js');\n\n\nconst provider = new HDwalletProvider(\n    '',\n    'https:\/\/ropsten.infura.io\/v3\/9ba5113757f648aaaab4d53e65898119'\n);\n\nconst <web3> = new <web3>(provider);\n\nconst deploy = async()=>{\n    const accounts = await <web3>.eth.getAccounts();\n    console.log(accounts);\n    console.log(\"contract is deployed by manager with address\",accounts[0]);\n\n    const result = await new <web3>.eth.Contract(interface)\n     .deploy({data : '0x'+bytecode})\n     .send({gas : '2000000' , from : accounts[0]});\n\n     console.log('contract deployed to address ', result.options.address);\n}\n\ndeploy();\n\n\n\nfinally, show error\nJSON interface error\nPlease help me,I am just a beginner at <web3>.js.I follow old tutorial to know the workflow\nBut it does not match with updated versions\nhere is depend\n \"dependencies\": {\n    \"next\": \"^11.1.2\",\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"solc\": \"^0.8.6\",\n    \"truffle-hdwallet-provider\": \"^1.0.17\",\n    \"<web3>\": \"^1.5.2\"\n  }\n\nI need someone help to get deployed address to set here\nlottery.js file\n import <web3> from '.\/<web3>.js';\nconst address = '';\nconst abi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"enterLottery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];\n\nexport default new <web3>.eth.Contract(abi,address);","343":"I deployed a contract on bscscan recent using remix but I forgot to copy the abi code...\nPlease how can I get it back...\nI need to communicate with the contract using <web3>\nThanks.","344":"Full error message:-\nError: Service(Telemetry(IoError(Custom { kind: Other, error: \"Error parsing resolv.conf: ProtoError { kind: Msg(\\\"Malformed label: --\\\") }\" })))\n\nGot the above error while running the node in staging mode and it is working fine in dev mode.\nHow did I run it in staging mode:-\nFirstly extracted customspec file using below command-\n.\/target\/release\/substrate build-spec --disable-default-bootnode --chain staging > customSpec.json\n\nAfter I have made few changes to it (changed staking,session and balances configurations)\nand then I have converted it into customSpecRaw file using below command\n.\/target\/release\/substrate build-spec --chain=customSpec.json --raw --disable-default-bootnode > customSpecRaw.json\n\nThen I got the output as\n2021-09-21 02:46:00 Low open file descriptor limit configured for the process. Current value: 4096, recommended value: 10000.    \n2021-09-21 02:46:01 Building chain spec    \n2021-09-21 02:46:01 [0] \u00f0\u009f\u0092\u00b8 generated 1 npos voters, 1 from validators and 0 nominators    \n2021-09-21 02:46:01 [0] \u00f0\u009f\u0092\u00b8 generated 1 npos voters, 1 from validators and 0 nominators    \n2021-09-21 02:46:01 [0] \u00f0\u009f\u0092\u00b8 new validator set of size 1 has been processed for era 1\n\nand after this I started the node using-\n.\/target\/release\/substrate   --base-path \/tmp\/node01   --chain .\/customSpecRaw.json   --port 30333   --ws-port 9945   --rpc-port 9933   --telemetry-url 'wss:\/\/telemetry.polkadot.io\/submit\/ 0'   --validator   --rpc-methods Unsafe   --name MyNode01\n\nthen got this error-\n2021-09-21 08:46:29 Low open file descriptor limit configured for the process. Current value: 4096, recommended value: 10000.    \n2021-09-21 08:46:29 Substrate Node    \n2021-09-21 08:46:29 \u00e2\u009c\u008c\u00ef\u00b8\u008f  version 3.0.0-dev-e30db04a7-x86_64-linux-gnu    \n2021-09-21 08:46:29 \u00e2\u009d\u00a4\u00ef\u00b8\u008f  by Parity Technologies <admin@parity.io>, 2017-2021    \n2021-09-21 08:46:29 \u00f0\u009f\u0093\u008b Chain specification: Staging Testnet    \n2021-09-21 08:46:29 \u00f0\u009f\u008f\u00b7 Node name: MyNode01    \n2021-09-21 08:46:29 \u00f0\u009f\u0091\u00a4 Role: AUTHORITY    \n2021-09-21 08:46:29 \u00f0\u009f\u0092\u00be Database: RocksDb at \/tmp\/node01\/chains\/staging_testnet\/db\/full    \n2021-09-21 08:46:29 \u00e2\u009b\u0093  Native runtime: node-267 (substrate-node-1.tx2.au10)    \nError: Service(Telemetry(IoError(Custom { kind: Other, error: \"Error parsing resolv.conf: ProtoError { kind: Msg(\\\"Malformed label: --\\\") }\" })))\n\nI am not able to solve this error ..... any useful hacks??","345":"I'm new to <blockchain> and trying two create two nodes and execute a transaction using <geth>. However, when I try to run the <geth> --mine command, it keeps of printing \"Looking for Peers\". Can someone please help?\n<geth> account new --datadir node1\n<geth> account new --datadir node2\n<geth> init mynetwork.json --datadir node1\n<geth> init mynetwork.json --datadir node2\n<geth> --datadir node1 --mine --miner.threads 1\n<geth> --datadir node2 --port 30304 --rpc --bootnodes \"enode:\/\/@127.0.0.1:30303\"","346":"I'm trying to implement a token and list it in pancakeswap. I got the code from babyusdt contract. I'm using truffle tool for compiling and deploying. This is the constructor:\n\nThe problem I'm having is first when I compile the contract this is shown:\n\nBut everything is fine. When I try to migrate the contract to the bsc testnet I see the following error:\n\nWhat I'm doing wrong? I have the interface in my project and I just call the implementation like in the picture. Should I use libraries? When I remove these lines the error disappears. Please, any help?\nThanks","347":"Here is the link to a documentation: https:\/\/projectopensea.github.io\/opensea-js\/\nIs it possible to integrate it into a Kotlin App, and make every user able to create their own NFT from their account within my app?","348":"guys please guide what changes should I do?? I am deploying my own coin on testnet but getting this issue always when I try what step I am missing\nMy code:\npragma solidity ^0.8.0;\n\nimport \"github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/\u00e2\u0080\u00a6\";\n\ncontract VIRUSONE is ERC20 {\n    constructor(uint256 initialSupply) public ERC20 (\"VIRUSONE\", \"VONE\") {\n        _mint(msg.sender, initialSupply);\n    }\n}\n\nThe warning (screenshot):\nWarning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","349":"I am not understanding, does the smart contract have 1 NFT or many NFTs.\nOr is it that I deploy one smart contract for each type of my NFTs like dogs, cats... ? or it doesn't matter ?\nAnd when I own a NFT, is it that I own a mapping in the contract token id => my eth wallet adress?","350":"I'm creating a simple <blockchain> application, I have a method for mining new blocks and a method where I can submit mining tasks.\nHere is the method that I use for submitting new tasks using ExecutorService#submit:\npublic void executeCommand(int noOfStartingZero) throws ExecutionException, InterruptedException {\n        for (int i = 0; i < NO_OF_BLOCKS; i++) {\n            executor.submit(() -> {\n                Block prevBlock = this.<blockchain>.getBlocks().peekLast();\n                Block block = this.minerCommand.mine(prevBlock, noOfStartingZero);\n                System.out.println(\"block: \" + block);\n                String minedBy = Thread.currentThread().getName();\n                block.setMinedBy(minedBy);\n                try {\n                    this.<blockchain>.addNewBlock(block);\n                } catch (InvalidBlockException e) {\n                    e.printStackTrace();\n                }\n            });\n        }\n        executor.shutdown();\n }\n\nThe problem is, on this line, it always returns the same block:  Block block = this.minerCommand.mine(prevBlock, noOfStartingZero);\nHere is my mine() method, each time it gets called it will create a new block:\n public Block mine(Block prevBlock, int noOfStartingZero) {\n        if (prevBlock == null) {\n            return getGenesisBlock(noOfStartingZero);\n        }\n        long startTime = System.currentTimeMillis();\n        var block = new Block();\n        block.setId(prevBlock.id() + 1);\n        block.setTimestamp(new Date().getTime());\n        block.setPrevHash(prevBlock.hash());\n\n        BlockHashContainer hashContainer = generateHash(block, noOfStartingZero);\n        block.setMagicNumber(hashContainer.getMagicNumber());\n        block.setHash(hashContainer.<geth>ash());\n        block.setTimeGenerated((new Date().getTime() - startTime) \/ 1000);\n        return block;\n }\n\nI tried to print out the block for each iteration, and here is what I got, it always returns the first block, and no other block is added to the <blockchain>:\nblock: Block[id=1, timestamp=1632128365538, prevHash=0, hash=818b72956bdb163b5b51b848c2988378cb03bd58649511186ac9a5339d9e392c]\nblock: Block[id=1, timestamp=1632128365538, prevHash=0, hash=818b72956bdb163b5b51b848c2988378cb03bd58649511186ac9a5339d9e392c]\nblock: Block[id=1, timestamp=1632128365537, prevHash=0, hash=a840f8f7922fae5b974e1a4e286dbd7247ed19efb12629ba8b0533b117c9451d]\nblock: Block[id=1, timestamp=1632128365538, prevHash=0, hash=818b72956bdb163b5b51b848c2988378cb03bd58649511186ac9a5339d9e392c]\nblock: Block[id=1, timestamp=1632128365516, prevHash=0, hash=336385001bb8a9f7b16800fd94e09347dac1a2566bd0edfd0ea6c941b722dd4d]\n\nWhy it behaves like this? Any help would be much appreciated.","351":"I have generated  accounts using the Solana CLI, but I am getting the public and private keys as\npublicKey: Uint8Array(32) [\n  102, 255,  46,  44,  90, 176, 207,  98,\n  251,  66, 136, 190, 240,  59, 198, 177,\n  169,  35, 153,   3, 163,  68, 188, 214,\n  225,  46,  55, 111, 159, 157, 182, 111\n], \n\nbut I want readable format to sustain key for next transaction.","352":"I am trying to get proper public address for Solana wallet using solana-<web3>.js at my react-native test project\nimport { Keypair} from '@solana\/<web3>.js';\nimport * as bip39 from 'bip39';\nimport * as bip32 from 'bip32';\n\nconst derivePath = \"m\/44'\/501'\/0'\/0'\";\nconst mnemonic = \"...12 word phrase\"\n\nconst seed: Buffer = yield bip39.mnemonicToSeed(mnemonic);\n\/\/ also tried to slice seed.slice(0, 32);\nconst derivedSeed = bip32.fromSeed(seed).derivePath(derivePath).privateKey;\nconst keypair = Keypair.fromSeed(derivedSeed);\nconst publicKey = keypair.publicKey.toString();\n\nI took derive path that is supposed to be for Phantom wallet (and could be chosen at Solflare wallet)\nBut the problem is - I do not get the same public key as I get at these browser wallets.\nSo where am I possibly making mistake at code above?\nUPDATE:\nWhen I use 'ed25519-hd-key' lib instead of 'bip32' to get derived seed problem disappears.\nimport * as ed25519 from 'ed25519-hd-key';\n\nconst derivedSeed = ed25519.derivePath(derivePath, seed.toString('hex')).key;","353":"I have below query criteria to fetch State based on linearId. I am trying below code\n\/\/query criteria\nQueryCriteria queryCriteria = new LinearStateQueryCriteria(\n    null,\n    ImmutableList.of(UUID.fromString(linearId)) \n);\n\nHowever, I am getting a compile time error asking to change QueryCriteria to QueryCriteria.LinearStateQueryCriteria. If I do that, then vaultService.queryBy() does not accept the queryCriteria and throws a compile time error.\n\nAs per documentation, API: Vault Query - Custom queries in Java it should have worked. Can someone help ?","354":"Hello I'm trying to mint an NFT using Polygon and it works just fine on Mumbai but as soon as i switch over to the mainnet the transaction doesn't go through instead of going through in 5 seconds on mumbai. Even though im using the exact same contract just deployed on the mainnet instead of Mumbai and the code is the same too. All im doing is switching the contract address and rpc url but for some reason it just doesn't work on the Polygon mainnet below is the code im using.\n\/\/ Init contract\n        const contractABI = require('..\/..\/contract-abi.json');\n        const contractAddress = config.mintingContractAddress;\n        const contract = await new this.<web3>.eth.Contract(contractABI, contractAddress);\n        \/\/ Mint NFT\n        const nft = contract.methods.mintNFT(user.walletAddress, metadataUploadURL, user.paymentAddress).encodeABI();\n        \/\/ Get gas pricing\n        const priorityFees = await axios.get('https:\/\/gasstation-mainnet.matic.network');\n        const estBaseGas = await this.<web3>.eth.estimateGas({\n          data: nft,\n          to: contractAddress,\n        });\n        console.log('USING GAS: ' + estBaseGas);\n        \/\/ Sign NFT minting transaction\n        const totalGas = estBaseGas + priorityFees.data.standard;\n        console.log('TOTALGAS: ', Math.round(totalGas).toString());\n        const transaction = await this.<web3>.eth.accounts.signTransaction(\n          {\n            from: user.walletAddress,\n            to: contractAddress,\n            nonce: await this.<web3>.eth.getTransactionCount(user.walletAddress, 'pending'), \/\/ Get count of all <transactions> sent to the contract from this address including pending ones\n            data: nft,\n            \/\/ maxPriorityFee: priorityFees.data.average, Not supported on Polygon MATIC yet\n            gas: Math.round(totalGas).toString(),\n            gasPrice: await this.<web3>.eth.getGasPrice(),\n          },\n          wallet.privateKey,\n        );\n        this.logger.silly('Finished signing NFT transaction');\n        \/\/ Send the transaction that we signed\n        const mintT = await this.<web3>.eth.sendSignedTransaction(transaction.rawTransaction);\n        this.logger.silly('Sent transaction');\n        console.log(mintT);\n\nAlso tried this for signing\n\/\/ Get gas pricing\n        const priorityFees = await axios.get('https:\/\/gasstation-mainnet.matic.network');\n        const estBaseGas = await this.<web3>.eth.estimateGas({\n          data: nft,\n          to: contractAddress,\n        });\n        console.log('USING GAS: ' + estBaseGas);\n        \/\/ Sign NFT minting transaction\n        const totalGas = estBaseGas + priorityFees.data.standard;\n        console.log('TOTALGAS: ', Math.round(totalGas).toString());\n        console.log('P', priorityFees.data.standard);\n        const gp = this.<web3>.utils.toWei(priorityFees.data.standard.toString(), 'Gwei').toString();\n        console.log('GP', gp);\n        const transaction = await this.<web3>.eth.accounts.signTransaction(\n          {\n            from: user.walletAddress,\n            to: contractAddress,\n            nonce: await this.<web3>.eth.getTransactionCount(user.walletAddress, 'pending'), \/\/ Get count of all <transactions> sent to the contract from this address including pending ones\n            data: nft,\n            \/\/ maxPriorityFee: priorityFees.data.average, Not supported on Polygon MATIC yet\n            gas: '1000000',\n            gasPrice: gp,\n          },\n          wallet.privateKey,\n        );\n\nMempool explorer for transaction that takes forever and nearly instant one.\nForever:\n\nInstant:\n\nOne on mainnet that used 30 gwei of gas:\n\nDoes anybody know why this is happening?\nAlso yes i do know that the fast one does have 2 extra gwei in gas but even setting it to that manually it still takes forever and according to https:\/\/polygonscan.com\/gastracker even with one gwei it should be processed within 30 seconds. Even when using 50 Gwei it seems to take hours to process or maybe it's being dropped? The <transactions> don't even seem to be getting to the contract they are just stuck somewhere in the chain.\ncontract address: 0xa915E82285e6F82eD10b0579511F48fD716a2043\ncontract source code:\n\/\/SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin\/contracts\/token\/ERC721\/extensions\/ERC721URIStorage.sol\";\nimport \"@openzeppelin\/contracts\/utils\/Counters.sol\";\n\ncontract MyNFT is ERC721URIStorage {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    event MintedNFT(address recipent,string tokenURI,address artist, uint256 tokenID);\n\n    mapping(uint256 => address) private artists; \/\/ Used to store token ids => artist addresses\n    \/\/ mapping(uint256 => uint256) private royalties; \/\/ tokenId => royaltyPercentage\n    \/\/ mapping(uint256 => address) private nftMintInitators; \/\/ Used to store token ids => sender addresses\n    \/\/ mapping(uint256 => bool) private royaltiesSet;\n\n    constructor(string memory name_, string memory symbol_)\n        ERC721(name_, symbol_) {\n        }\n\n    \/\/ \/\/ Support for https:\/\/eips.ethereum.org\/EIPS\/eip-2981\n    \/\/ \/\/\/ @notice Called with the sale price to determine how much royalty\n    \/\/ \/\/          is owed and to whom.\n    \/\/ \/\/\/ @param _tokenId - the NFT asset queried for royalty information\n    \/\/ \/\/\/ @param _salePrice - the sale price of the NFT asset specified by _tokenId\n    \/\/ \/\/\/ @return receiver - address of who should be sent the royalty payment\n    \/\/ \/\/\/ @return royaltyAmount - the royalty payment amount for _salePrice\n    \/\/ function royaltyInfo(\n    \/\/     uint256 _tokenId,\n    \/\/     uint256 _salePrice\n    \/\/ ) external view returns (\n    \/\/     address receiver,\n    \/\/     uint256 royaltyAmount\n    \/\/ ) {\n    \/\/     return (\n    \/\/         artists[_tokenId],\n    \/\/         _salePrice * royalties[_tokenId] \/\/ Take percentage\n    \/\/     );\n    \/\/ }\n\n    \/\/ function updateRoyaltyPercentage(\n    \/\/     uint256 royaltyPercentage, \/\/ In decimal like 0.5 or 0.25 (Send 0.0 for no royalties)\n    \/\/     uint256 tokenID\n    \/\/ ) public {\n    \/\/     if (msg.sender == nftMintInitators[tokenID] && royaltiesSet[tokenID] == false) {\n    \/\/         royalties[tokenID] = royaltyPercentage;\n    \/\/         royaltiesSet[tokenID] = true;\n    \/\/     }\n    \/\/ }\n\n    function mintNFT(address recipient,\n     string memory tokenURI,\n     address artist \/\/ Address for the artist not using _msgSender() because this transaction is sent by the users NFT holding account\n     )\n        public\n        returns (uint256)\n    {\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _mint(recipient, newItemId);\n        _setTokenURI(newItemId, tokenURI);\n        artists[newItemId] = artist;\n        \/\/ nftMintInitators[newItemId] = msg.sender;\n        \/\/ royaltiesSet[newItemId] = false;\n\n        emit MintedNFT(recipient,tokenURI,artist,newItemId);\n\n        return newItemId;\n    }\n}","355":"I installed ganache with yarn, but when I check the version to see if correctly installed, I get the error:  \"The term 'ganache-cli' is not recognized as the name of a cmdlet, function, script file, or operable program\".","356":"I am currently working at a <blockchain> project with <hyperledger> Fabric, and I'm facing some issues.\nThe scenario I would like to achieve is the following:\n\nthree organizations (Org1, Org2, Org3) with one peer each\na private channel between Org1 and Org2, say channel12\na private channel between Org2 and Org3, say channel23\n\nMy problem is that I can't understand how to customize the provided <hyperledger> Fabric test network, in order to achieve the described scenario.\nHow can I proceed?","357":"I am using this code to implement <blockchain>.\nconst sha256 =require('crypto-js\/sha256');\n\n\nclass block{\n\n   constructor(timestamp,nonce,value,prevhash)\n   {\n       this.timestamp=timestamp;\n       this.nonce=nonce;\n       this.value=value;\n       this.prevhash=prevhash;\n   } \n    calculate(){\n   return String(sha256(this.timestamp,this.nonce,this.value,this.prevhash));\n    }\n\n\n}\nconst block1=new block(22,345,\"changebro\",345);\nconst block2 =new block(4385,545,45,2)\nconsole.log(block1.calculate());\nconsole.log(block1);\nconsole.log(block2.calculate());\nconsole.log(block2);\n\n\nwhy the ans for both is coming same.\nfor both I am getting same ans\n4ea5c508a6566e76240543f8feb06fd457777be39549c4016436afda65d2330e","358":"I have been working on custom local <blockchain> testnet and want to show pending <transactions> on custom block explorer.\nSo whenever GET request from frontend arrives, the api-server(Express) should response with pending <transactions>.\nI first tried with <web3>.eth's getPending<transactions> method but it always returned with an empty array.\nNext, I tried with <web3>.eth.subscribe's 'pending<transactions>' option like the docs.\nBelow is the code what I tried.\ntransactionController.js\nconst <web3> = require(\"<web3>\");\nconst <web3> = new <web3>(\"ws:\/\/192.168.112.82:7001\");\nvar pndTxns = [];\n\nexports.pending<transactions> = (req, res) => {\n<web3>.eth\n      .subscribe(\"pending<transactions>\", function (error, result) {\n        if (!error) console.log(result);\n        console.log(pndTxns);\n      })\n      .on(\"data\", function (transaction) {\n        pndTxns.push(transaction);\n}\n\nres.status(200).json({\n  success: true,\n  txns: pndTxns,\n});\n\n\n(Here, transactionController.js a controller for pending <transactions> router.)\nBut pndTxns in response always returns with empty arrary even though pndTxns in <web3>.eth.subscribe exist.\nI think this is because <web3>.eth.subscribe actually build a web socket connection with the RPC node so that pndTxns can not go out of this method.\nFinally, I tried with etherjs module like this blog and following is the code.\nvar ethers = require(\"ethers\");\nvar url = \"ws:\/\/192.168.112.82:7001\";\n\nvar init = function () {\n  var customWsProvider = new ethers.providers.WebSocketProvider(url);\n  \n  customWsProvider.on(\"pending\", (tx) => {\n    customWsProvider.getTransaction(tx).then(function (transaction) {\n      console.log(transaction);\n    });\n  });\n\n  customWsProvider._websocket.on(\"error\", async () => {\n    console.log(`Unable to connect to ${ep.subdomain} retrying in 3s...`);\n    setTimeout(init, 3000);\n  });\n  customWsProvider._websocket.on(\"close\", async (code) => {\n    console.log(\n      `Connection lost with code ${code}! Attempting reconnect in 3s...`\n    );\n    customWsProvider._websocket.terminate();\n    setTimeout(init, 3000);\n  });\n};\n\ninit();\n\nres.status(200).json({\n  success: true,\n  txns: pndTxns,\n});\n\nAlso I could see pending <transactions> inside init() function but could not send those <transactions> with a reponse.\nHere is sample output of transaction inside init function.\n[\n  {\n    hash: '0x4c34186e0e6fee5c83406660cf8ef830c36548bb3b8cc14a0fb1eb29fe438331',\n    type: 0,\n    accessList: null,\n    blockHash: '0x000000c9000004c2e8c3585c051b49972b1de6a64c40ce7310a2a994b00483e4',\n    blockNumber: 40964,\n    transactionIndex: 0,\n    confirmations: 1,\n    from: '0x8734CB972d36a740Cc983d5515e160C373A4a016',\n    gasPrice: BigNumber { _hex: '0x3b9aca00', _isBigNumber: true },\n    gasLimit: BigNumber { _hex: '0x5208', _isBigNumber: true },\n    to: '0x9651819cfa16c8F3Ba927d5350Ca25417591166B',\n    value: BigNumber { _hex: '0x01236efcbcbb340000', _isBigNumber: true },\n    nonce: 224,\n    data: '0x',\n    r: '0xed3d1d5b94a413ce45a06de77851865281cc41c8cdbbcbc4b96356b4d9e49e5c',\n    s: '0x2d05d609590c1d5ff7e3ff69111cc6d3caf6f517c2e0229a10de8e938ccee1ba',\n    v: 535,\n    creates: null,\n    chainId: 250,\n    wait: [Function (anonymous)]\n  }\n]\n\nI don't care whatever way you use but can you tell me how can I response pending <transactions>?","359":"I have a transaction ID, however sometimes it takes a little bit of time for a monetary transaction to show up on <blockchain>s.\nI'm using GraphQL to query the <blockchain> with this transaction ID. If it returns true, that means the transaction was successful, if not, unsuccessful.\nCan anyone provide me with a template?","360":"I have setup for 3 organisations on Kubernetes cluster and it is giving me following error when I restart peer node pod and tried command -> peer channel list on bash shell,\n[comm.tls] ClientHandshake -> ERRO 026 Client TLS handshake failed after 2.997205009s with error: context canceled remoteaddress=10.0.94.178:7051\n\n[grpc] WarningDepth -> DEBU 027 [core]grpc: addrConn.createTransport failed to connect to {peer0-org1:7051 peer0-org1:7051 <nil> 0 <nil>}. Err: connection error: desc = \"transport: authentication handshake failed: context canceled\". Reconnecting...\nError: error getting endorser client for channel: endorser client failed to connect to peer0-org1:7051: failed to create new connection: context deadline exceeded\n\nAfter some time (nearly 10-15 minutes) if I tried same command,\n[comm.tls] ClientHandshake -> DEBU 024 Client TLS handshake completed in 1.48399ms remoteaddress=10.0.94.178:7051\n[grpc] InfoDepth -> DEBU 025 [core]Subchannel Connectivity change to READY\n\nIt seems working and give me channel list. I am not able to find out what is reason behind this, Please help for this.","361":"My understanding is that bitcoin minors are all essentially searching for a secret number, which is added to each block of <transactions> to make the guessing work more difficult. Once plugged into a hash function, the block and the secret number to<geth>er generate the correct hash, and whoever finds the correct hash gets rewarded.\nMy question is: where does this secret number come from? Who gets to decide it?","362":"i am using stable <geth>.\n<geth> \nversion <geth> Version: 1.10.7-stable\nArchitecture: amd64\nGo Version: go1.16.6 \nOperating System: darwin \nGOPATH= GOROOT=go\n\ni am having issues with calling the eth_protocolVersion :\npostman error ==> \"error\": {\n\"code\": -32601,\n\"message\": \"the method eth_protocolVersion does not exist\/is not available\"\n}\ni attached the <geth> console and printed all eth functions, where i am getting \"protocolVersion: undefined\"\ni tried with building the <geth> of current master branch, getting the same issues.\nINIT genesis file by :\n<geth> --identity \"dappslab\" --http --http.addr 0.0.0.0 --http.port 8545 --http.corsdomain \"*\" --http.api txpool,admin,eth,net,<web3>,personal --ws --ws.addr 0.0.0.0 --ws.port 8546 --ws.origins \"*\" --ws.api txpool,admin,eth,net,<web3>,personal --graphql --graphql.corsdomain \"*\" --datadir \/Users\/$(whoami)\/DappsChain\/node1 --port 30303 --networkid 13936 init \/Users\/$(whoami)\/DappsChain\/Genesis.json\n\nrunning <geth> by :\n<geth> --identity \"dappslab\" --syncmode full --http --http.addr 0.0.0.0 --http.port 8545 --http.corsdomain \"*\" --http.api miner,txpool,admin,eth,net,<web3>,personal --ws --ws.addr 0.0.0.0 --ws.port 8546 --ws.origins \"*\" --ws.api miner,txpool,admin,eth,net,<web3>,personal --graphql --graphql.corsdomain \"*\" --datadir \/Users\/$(whoami)\/DappsChain\/node1 --port 30303 console\n\nI have googled this issue but i can't find any solution for this.\nAm i doing this wrong or the <geth> have bug or removed this function?","363":"I am learning to use Chain Link to get price conversions and also to implement other functions provided by Chainlink. I have 2.9992 ETH on Rinkeby Test Net and I am successfully able to compile and deploy the code using Remix IDE using Injected <web3> Environment.\nWhenever I call the function getVersion or any other function defined in ChainLink. I get an error like this\n\n\"call to FundMe.getVersion errored: execution reverted\"\n\n    pragma solidity >=0.6.6 <0.9.0;\n    \n    import \"@chainlink\/contracts\/src\/v0.6\/interfaces\/AggregatorV3Interface.sol\";\n    \n    contract FundMe {\n        \n        mapping(address => uint256) public addressToAmountFunded;\n        function fund() public payable {\n            addressToAmountFunded[msg.sender] += msg.value;\n        }\n        \n        function getVersion() public view returns(uint256) {\n            AggregatorV3Interface priceFeed = AggregatorV3Interface(0x01BE23585060835E02B77ef475b0Cc51aA1e0709);\n            return priceFeed.version();\n        }\n    }","364":"After reading the documentation for Solidity v0.6.0 docs, I still don't understand the meaning of the fallback functions. I read that it was split into 2 functions: fallback () external payable and receive () external payable. That they are anonymous and do not accept any parameters, and in the overwhelming majority of cases, receive () external payable is used to receive funds. Can you please explain with the example of my code, some use cases for these functions, in order to understand all their features, otherwise somehow everything is in a vacuum, but I understand that this is an important concept? Even the meaning of the receive () external payable function is not clear, in which I call on the buyToken () method, why is it needed if I call on the buyToken () in the Remix directly, bypassing the receive () external payable since she is not visible and anonymous.\npragma solidity ^0.7.0;\n    \/\/ SPDX-License-Identifier: MIT\n    \n    contract BuyToken {\n      mapping(address => uint256) public balances;\n      address payable wallet;\n    \n      event Purchase(\n        address indexed buyer,\n        uint256 amount\n      );\n    \n      constructor(address payable _wallet) {\n        wallet = _wallet;\n      }\n    \n    \n      fallback() external payable {\n      }\n    \n    \n      receive() external payable {\n        buyToken();\n      }\n    \n      function buyToken() public payable {\n        balances[msg.sender] += 1;\n        wallet.transfer(msg.value);\n        emit Purchase(msg.sender, 1);\n      }\n    }","365":"I have an issue setting up local node.\nThere is a docker-compose which launches Kusama network with some minor changes (like epoch time and proposal voting\/enacting time) with custom chain-spec for 6 validators, and it runs with 2 collator nodes of moonbeam (default moonbeam-local chain-spec, where Alice and Bob addresses replaced with custom ones).\nI successfully launch the parachain on relay chain, and it produces blocks (besides, it triggers something like \"Skipping because we are not eligible\", not sure if it is ok, but still, the blocks are being produced). Btw, I've manually set all the session keys for the validators and collators, sending the RPC calls (for the collators it's only nmbs???). I can connect to metamask,\nI can query some info through RPC, etc. But the problem is that I cannot send any <transactions>, it all fails with the following error:\nValueError: {'code': -32603, 'message': 'submit transaction to pool failed: Pool(InvalidTransaction(InvalidTransaction::Call))'}.\nThe same transation works on moonbase testnet, and it also works with --dev collator. What could be the issue? Thank you in advance\nHere is my docker-compose:\nversion: '3'\nservices:\n  node_david:\n    ports:\n      - \"30333:30333\"\n      - \"9933:9933\"\n      - \"9944:9944\"\n    image: kusama-custom:0.9.5\n    volumes:\n      - ..\/chain-specs\/kusama-custom.json:\/kusama-custom.json\n    command: polkadot --chain=\/kusama-custom.json --base-path \/tmp\/node_david --validator --rpc-methods Unsafe --rpc-cors all --unsafe-ws-external --unsafe-rpc-external --name NodeDavid --node-key 0000000000000000000000000000000000000000000000000000000000000001\n    networks:\n      testing_net:\n        ipv4_address: 172.28.1.1\n\n  node_daniel:\n    image: kusama-custom:0.9.5\n    volumes:\n      - ..\/chain-specs\/kusama-custom.json:\/kusama-custom.json\n    command: polkadot --chain=\/kusama-custom.json --base-path \/tmp\/node_daniel --validator --rpc-methods Unsafe --rpc-cors all --unsafe-ws-external --unsafe-rpc-external --name NodeDaniel --bootnodes '\/ip4\/172.28.1.1\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp'  -ldebug\n    networks:\n      testing_net:\n        ipv4_address: 172.28.1.2\n\n  node_jack:\n    image: kusama-custom:0.9.5\n    volumes:\n      - ..\/chain-specs\/kusama-custom.json:\/kusama-custom.json\n    command: polkadot --chain=\/kusama-custom.json --base-path \/tmp\/node_jack --validator --rpc-methods Unsafe --rpc-cors all --unsafe-ws-external --unsafe-rpc-external --name NodeJack --bootnodes '\/ip4\/172.28.1.1\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp'\n    networks:\n      testing_net:\n        ipv4_address: 172.28.1.3\n\n  node_john:\n    image: kusama-custom:0.9.5\n    volumes:\n      - ..\/chain-specs\/kusama-custom.json:\/kusama-custom.json\n    command: polkadot --chain=\/kusama-custom.json --base-path \/tmp\/node_john --validator --rpc-methods Unsafe --rpc-cors all --unsafe-ws-external --unsafe-rpc-external --name NodeJohn --bootnodes '\/ip4\/172.28.1.1\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp'\n    networks:\n      testing_net:\n        ipv4_address: 172.28.1.4\n\n  node_judy:\n    image: kusama-custom:0.9.5\n    volumes:\n      - ..\/chain-specs\/kusama-custom.json:\/kusama-custom.json\n    command: polkadot --chain=\/kusama-custom.json --base-path \/tmp\/node_judy --validator --rpc-methods Unsafe --rpc-cors all --unsafe-ws-external --unsafe-rpc-external --name NodeJudy --bootnodes '\/ip4\/172.28.1.1\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp'\n    networks:\n      testing_net:\n        ipv4_address: 172.28.1.5\n\n  node_max:\n    image: kusama-custom:0.9.5\n    volumes:\n      - ..\/chain-specs\/kusama-custom.json:\/kusama-custom.json\n    command: polkadot --chain=\/kusama-custom.json --base-path \/tmp\/node_max --validator --rpc-methods Unsafe --rpc-cors all --unsafe-ws-external --unsafe-rpc-external --name NodeMax --bootnodes '\/ip4\/172.28.1.1\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp'\n    networks:\n      testing_net:\n        ipv4_address: 172.28.1.6\n\n  para_daniel:\n    image: purestake\/moonbeam:v0.11.2\n    depends_on:\n      - node_daniel\n    volumes:\n      - ..\/chain-specs\/kusama-custom.json:\/kusama-custom.json\n      - ..\/chain-specs\/moonbeam.json:\/moonbeam.json\n    command: --collator --log debug --chain .\/moonbeam.json --base-path \/tmp\/para_daniel --name \"CollatorDaniel\" --force-authoring --parachain-id 2000 --rpc-cors all --rpc-methods Unsafe --unsafe-ws-external --unsafe-rpc-external --node-key 0000000000000000000000000000000000000000000000000000000000000001 -- --execution wasm --chain \/kusama-custom.json\n    networks:\n      testing_net:\n        ipv4_address: 172.28.2.1\n\n  para_david:\n    image: purestake\/moonbeam:v0.11.2\n    depends_on:\n      - node_david\n    volumes:\n      - ..\/chain-specs\/kusama-custom.json:\/kusama-custom.json\n      - ..\/chain-specs\/moonbeam.json:\/moonbeam.json\n    command: --collator --chain .\/moonbeam.json --base-path \/tmp\/para_david --name \"CollatorDavid\" --force-authoring --parachain-id 2000 --rpc-cors all --rpc-methods Unsafe --unsafe-ws-external --unsafe-rpc-external --bootnodes \/ip4\/172.28.2.1\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp -- --execution wasm --chain \/kusama-custom.json --bootnodes \/ip4\/172.28.1.1\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp\n    networks:\n      testing_net:\n        ipv4_address: 172.28.2.2\n\nnetworks:\n  testing_net:\n    #    driver_opts:\n    #      com.docker.network.bridge.host_binding_ipv4: 172.28.0.1\n    ipam:\n      driver: default\n      config:\n        - subnet: 172.28.0.0\/16","366":"I'm working on a <blockchain> application using react function components. The application would allow people to deposit ERC20 tokens.\nI've been trying for the last few days to get the useEffect hook to watch for state changes coming in from the <blockchain> and display them once they occur, but have not had success.\nI know this fundamentally working with my useEffect hook as the application updates its displayed state when an account is loaded from a wallet\/on an account state variable change, which it's watching for. However, because I believe there is a delay when it's making a contract call, it seems to run through and update itself before that new updated information comes from the <blockchain>.\nI'm trying to get it so that when the user deposits their token, the app calls the smart contract to deposit using await, then once the token is deposited it calls for the new balance and sets the state, this is then displayed in the app without having to refresh the page.\nI tried several methods including promises, having a shorterm loop run until the data is updated (which just spammed my app with calls), etc.\nAny advice or links to guides that cover updating state using useEffect, especially for <blockchain> calls, would be much appreciated!\nfunction App() {\n  \n  const [tether, setTether] = React.useState([undefined]);\n  const [tetherAddress, setTetherAddress] = React.useState(\"\");\n  \n  const [tetherBalance, setTetherBalance] = React.useState(\"0\");\n  \n  const [amountDeposited, setAmountDeposited] = React.useState(\"0\");\n  \n  window.<web3> = new <web3>(window.<web3>.currentProvider);\n\nSkipping the load web 3 & contract instances for brevity...\n  useEffect(() => {\n\n    const init = async () => {\n\n        \/\/Load our staking state and other account data\n\n        if (account !== undefined){\n          let tetherBalance = await tether.methods.balanceOf(account).call().then()\n          setTetherBalance(tetherBalance.toString())\n         \n          let amountDeposited = await chadsVault.methods.amountDeposited(account).call();\n          setAmountDeposited(amountDeposited.toString());\n\n        } \n        \n    }\n    init();\n  }, [account, tetherBalance, amountDeposited]);","367":"I have recently developed an intrest in crypro currency and am currently working on a program that listens to emitted events from smart contracts.\nit worked alright when tested on binance and ethereum <blockchain>s but on polygon\/matic i have encoutered a prblem - i get couple of errors which are either filter not found or that eth_newfilter does not exist depending on my rpc address is there any way to view events without showing all log entries (maybe web sockets)?","368":"When testing contracts on Hardhat Mocha stack, every single test js file requires to deploy a set of contracts. Many times this set is exactly the same between different js files. I would like to find a way to deploy them just once for all, and set them back to the initial status on each test file by using a pattern like Waffle fixtures.\nDo you think it make sense? Has anybody gone this route? Any hint on how to do that? Thx!\nRef.: Implementing fixtures with @nomiclabs\/hardhat-waffle","369":"I've been testing Substrate with my own configuration (latest node-template v3 fork, with an additional basic pallet) and trying to understand a drop in performances.\nIn this screenshot 2, you can see 5 times the exact same test (sending ~ 200tx\/sec). I've tested multiple times and each time it looks like, when hitting a state cache of 20MB, the total transaction finished rate performances decrease and aren't stable at all like the first test.\n\nWhat is happening? Why 5 times the same tests we don't get the same result?\nIs there a link between state cache and performances?\nIf increasing --state-cache-size increases performances?\n\nMy node command line looks like:\nnode-template \\\n--base-path \/datas\/substrate-0 \\\n--name Node0 \\\n--chain \/genesis\/customSpecRaw.json \\\n--port 30333 \\\n--ws-port 9944 \\\n--rpc-port 9933 \\\n--node-key 0000000000000000000000000000000000000000000000000000000000000001 \\\n--unsafe-ws-external \\\n--unsafe-rpc-external \\\n--rpc-cors=all \\\n--prometheus-external \\\n--log info \\\n--wasm-execution Compiled \\\n--ws-max-connections 1000 \\\n--pool-limit 10000 \\\n--pool-kbytes 20480 \\\n--validator \\\n--max-runtime-instances 100\n\nScreenshot:","370":"Can you send a signed nested message within another signed message (with the signatories being different) in ethers?\nThe idea is to 'co sign' a message, and decode it on the smart contract (essentially moving some validation logic off chain to save gas).","371":"While trying to build the first network with Windows this error keeps coming!\nError: Failed to get client TLS config: Failed to read 'C:\\c\\Users\\User\\fabric-samples\\test-network\\organizations\\peerOrganizations\\org1.example.com\\c\\Users\\User\\fabric-samples\\test-network\\organizations\\fabric-ca\\org1\\tls-cert.pem': open C:\\c\\Users\\User\\fabric-samples\\test-network\\organizations\\peerOrganizations\\org1.example.com\\c\\Users\\User\\fabric-samples\\test-network\\organizations\\fabric-ca\\org1\\tls-cert.pem: The system cannot find the path specified.\norganizations\/fabric-ca\/registerEnroll.sh: line 26: \/c\/Users\/User\/fabric-samples\/test-network\/organizations\/peerOrganizations\/org1.example.com\/msp\/config.yaml: No such file or directory\n[Error reading configuration: Unsupported Config Type \"\"\n2021-09-12 20:49:43.710 +06 [common.tools.configtxgen] func1 -> ERRO 003 Could not find configtx.yaml. Please make sure that FABRIC_CFG_PATH or -configPath is set to a path which contains configtx.yaml\n\nres=1\nFailed to generate orderer genesis block...\n]1","372":"Hardhat noob here\nSo I want to check my local <transactions> running on hardhat localnet after they have done executing. Like use the transaction hash and check the transaction details later.\nIs there a good way to do it? Or is this possible?\nDo I need to use ganache for this? Or is the hardhat local node from hardhat node enough?\nEDIT: Could see the <transactions> in the metamask wallet itself. So that was a dumb question. Thanks.","373":"Returned error: VM Exception while processing transaction: revert ERC20: transfer amount exceeds allowance\nCode:\nERC20Tokens[tokenTicker].token.approve(ERC20Tokens[tokenTicker].tokenHolder, 10);\n    \nemit tokenOwnerBalance(ERC20Tokens[tokenTicker].token.balanceOf(ERC20Tokens[tokenTicker].tokenHolder));\n    \nERC20Tokens[tokenTicker].token.transferFrom(ERC20Tokens[tokenTicker].tokenHolder, address(this), 1);\n\nLogs:\n[\n   {\n      \"from\":\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n      \"topic\":\"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n      \"event\":\"Approval\",\n      \"args\":{\n         \"0\":\"0x7A2946b37399fa3F1C9EF81c7Bcf94AE1099D18F\",\n         \"1\":\"0x95Ba4cF87D6723ad9C0Db21737D862bE80e93911\",\n         \"2\":\"10\",\n         \"owner\":\"0x7A2946b37399fa3F1C9EF81c7Bcf94AE1099D18F\",\n         \"spender\":\"0x95Ba4cF87D6723ad9C0Db21737D862bE80e93911\",\n         \"value\":\"10\"\n      }\n   },\n   {\n      \"from\":\"0x7A2946b37399fa3F1C9EF81c7Bcf94AE1099D18F\",\n      \"topic\":\"0xcff530ae4ada35c1dd7ac314ef643b9eb7ae40665958ad5899e2fbc18865444a\",\n      \"event\":\"tokenOwnerBalance\",\n      \"args\":{\n         \"0\":\"31000000\"\n      }\n   }\n]","374":"I am in Mac OS X Big Sur and would like to run Bitcoin Core on an external SSD for the first time, to download the <blockchain>. According to instructions, the default location for the <blockchain> is \/Users\/${USER}\/Library\/Application Support\/Bitcoin\/. How do I change this, so the <blockchain> is stored in an external SSD? For example \/Volumes\/My SSD?","375":"I've been working on converting a simple yield farming DAPP from class to function components.\nSo far so good for loading the contracts and getting the data, but I'm stuck on two pieces - the part where I call the staking smart contract's deposit function, and how I can initiate that from my button.\nThis is working entirely in the class components, but not the function conversation. I'll paste the class\/function versions both for comparison.\nI've been going through the react documentation and trying to fill in the gaps with pure testing, but have not been able to get past this last part of updating the codebase.\nAny insights into what I'm missing here?\nREACT FUNCTION CALLING STAKING SMART CONTRACT FUNCTION\nClass Comp. Version:\nstakeTokensVault = (amount) => {\n    this.setState({loading: true })\n    this.state.tether.methods.approve(this.state.chadsVault._address, amount).send({from: this.state.account}).on('transactionHash', (hash) => {\n      this.state.chadsVault.methods.stake(amount).send({from: this.state.account}).on('transactionHash', (hash) => {\n        this.setState({loading:false})\n      })\n    }) \n  }\n\nFunction Comp. Version:\nfunction stakeTokensVault(amount) {\n    \/\/ this.setState({loading: true })\n    tether.methods.approve(chadsVault._address, amount).send({from: account[0]}).on('transactionHash', (hash) => {\n      chadsVault.methods.stake(amount).send({from: account[0]}).on('transactionHash', (hash) => {\n        \/\/ this.setState({loading:false})\n      })\n    }) \n  }\n\nUI BUTTON FOR CALLING DEPOSIT FUNCTION\nClass Comp. Version:\n<input class=\"form-control\" ref={(input)=> {this.input = input} } id=\"exampleInputText1\" type=\"text\" placeholder=\"Amount\" required \/>\n                                <button \n                                    type='submit'\n                                    onClick={(event) => {\n                                    event.preventDefault()\n                                    let amount\n                                    amount = this.input.value.toString()\n                                    amount = window.<web3>.utils.toWei(amount, 'Ether')\n                                    this.props.stakeTokensVault(amount)\n                                    }}\n                                    className='btn btn-primary btn-lg btn-block'>DEPOSIT\n                                <\/button>\n                                \n\nFunction Comp. Version:\n<input type=\"number\" ref={inputRef} className=\"form-control\" \/>\n                                \n                                <button \n                                    type='submit'\n                                    onClick={(event) => {\n                                    event.preventDefault()\n                                    let amount\n                                    amount = inputRef.value.toString() \n                                    amount = window.<web3>.utils.toWei(amount, 'Ether')\n                                    props.stakeTokensVault(amount)\n                                    }}\n                                    className='btn btn-primary btn-lg btn-block'>DEPOSIT\n                                <\/button>\n\nCurrently for the function comp. version, as displayed in the code above, I'm getting the error: \"TypeError: Cannot read properties of undefined (reading 'toString').\"","376":"pragma solidity ^0.5.17; \n\ncontract MyConstructor {\n    \n    \/\/ string str; \/\/declaring state variable ; \n    \n    \/\/ constructor() public {    \/\/creating constructor to set value for \"str\"\n    \/\/     str = \"bye\" ; \n    \/\/ }\n    \n    \/\/ function getValue() public view returns(string memory) {\n    \/\/      return str;  \n    \/\/ }\n    \n    \/\/DIRECT INITIALIZATION \n    \n     uint data ; \n     \n     constructor(uint _data) public {\n         data = _data ; \n     }\n     \n     function getData() public returns(string memory) {\n         return \"hello world\"; \n     }\n}\n\ncreation of MyConstructor errored:\nError encoding arguments: Error: invalid BigNumber string (argument=\"value\", value=\"\", code=INVALID_ARGUMENT, version=bignumber\/5.4.1)","377":"I have my <hyperledger> fabric <blockchain> deployed on k8s in the namespace: hlf-<blockchain> and my client app is deployed is in another namespace: hlf-app\nThe cpp-profile template is below. url-> grpcs:\/\/<service-name>.<namespace>:<port> which enables cross namespace communication.\n{\n    \"name\": \"test-network\",\n    \"version\": \"1.0.0\",\n    \"client\": {\n        \"organization\": \"MyOrg\",\n        \"connection\": {\n            \"timeout\": {\n                \"peer\": {\n                    \"endorser\": \"10000\"\n                }\n            }\n        }\n    },\n    \"organizations\": {\n        \"TboxOrg\": {\n            \"mspid\": \"MyOrg\",\n            \"peers\": [\n                \"peer0\",\n                \"peer1\",\n                \"peer2\"\n                ],\n            \"certificateAuthorities\": [\n                \"ca-myorg\"\n            ]\n        }\n    },\n    \"peers\": {\n        \"peer0\": {\n            \"url\": \"grpcs:\/\/peer0.hlf-<blockchain>:${P0PORT}\",\n            \"tlsCACerts\": {\n                \"pem\": \"${PEERPEM}\"\n            },\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"peer0\",\n                \"hostnameOverride\": \"peer0\",\n                \"request-timeout\": 10000,\n                \"grpc.keepalive_time_ms\": 60000\n            }\n        },\n        \"peer1\": {\n            \"url\": \"grpcs:\/\/peer1.hlf-<blockchain>:${P1PORT}\",\n            \"tlsCACerts\": {\n                \"pem\": \"${PEERPEM}\"\n            },\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"peer1\",\n                \"hostnameOverride\": \"peer1\",\n                \"request-timeout\": 10000,\n                \"grpc.keepalive_time_ms\": 60000\n            }\n        },\n        \"peer2-tbox\": {\n            \"url\": \"grpcs:\/\/peer2.hlf-<blockchain>:${P2PORT}\",\n            \"tlsCACerts\": {\n                \"pem\": \"${PEERPEM}\"\n            },\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"peer2\",\n                \"hostnameOverride\": \"peer2\",\n                \"request-timeout\": 10000,\n                \"grpc.keepalive_time_ms\": 60000\n            }\n        }\n    },\n    \"certificateAuthorities\": {\n        \"ca-tboxorg\": {\n            \"url\": \"https:\/\/ca-myorg.hlf-<blockchain>:${CAPORT}\",\n            \"caName\": \"ca-myorg\",\n            \"tlsCACerts\": {\n                \"pem\": [\"${CAPEM}\"]\n            },\n            \"httpOptions\": {\n                \"verify\": false\n            }\n        }\n    }\n}\n\nFrom my client-app using fabrid-sdk-go I am able to connect to the network using the gateway. While invoking the chaincode I am getting the following error:\nEndorser Client Status Code: (2) CONNECTION_FAILED. Description: dialing connection on target [peer0:7051]: connection is in TRANSIENT_FAILURE\\nTransaction processing for endorser\n\nI am able to invoke the <transactions> using cli command from the same namespace: hfl-<blockchain>\nMy peer service configuration:\nkind: Service\napiVersion: v1\nmetadata:\n  name: peer0\n  labels:\n    app: peer0\nspec:\n  selector:\n    name: peer0\n  type: ClusterIP\n  ports:\n    - name: grpc\n      port: 7051\n      protocol: TCP\n    - name: event\n      port: 7061\n      protocol: TCP\n    - name: couchdb\n      port: 5984\n      protocol: TCP\n\nI believe this error is due to communication error between different namespace, which the client apps gets from the cpp-profile.\nWhat's the correct way to configure the peer service or the cpp connection profile?","378":"I am trying to understand the internal logic of adding development keys to the local keystore in Substrate for development purposes. For example I can see that the session keys for Alice are being generated and added to the genesis config in \/bin\/node\/cli\/src\/chain_spec.rs file as follows:\npub fn development_config() -> Result<ChainSpec, String> {\n    let wasm_binary =\n        WASM_BINARY.ok_or_else(|| \"Development wasm binary not available\".to_string())?;\n\n    Ok(ChainSpec::from_genesis(\n        \/\/ Name\n        \"Development\",\n        \/\/ ID\n        \"dev\",\n        ChainType::Development,\n        move || {\n            testnet_genesis(\n                wasm_binary,\n                \/\/ Initial PoA authorities\n                vec![authority_keys_from_seed(\"Alice\")],\n                \/\/ Sudo account\n                get_account_id_from_seed::<sr25519::Public>(\"Alice\"),\n                \/\/ Pre-funded accounts\n                vec![\n                    get_account_id_from_seed::<sr25519::Public>(\"Alice\"),\n                    get_account_id_from_seed::<sr25519::Public>(\"Bob\"),\n                    get_account_id_from_seed::<sr25519::Public>(\"Alice\/\/stash\"),\n                    get_account_id_from_seed::<sr25519::Public>(\"Bob\/\/stash\"),\n                ],\n                true,\n            )\n        },\n        \/\/ Bootnodes\n        vec![],\n        \/\/ Telemetry\n        None,\n        \/\/ Protocol ID\n        None,\n        \/\/ Properties\n        None,\n        \/\/ Extensions\n        None,\n    ))\n}\n\nFrom my understanding the session keys for development also includes ImOnlineId. My question is how exactly are the keys added to the local keystore so that I am able to access my keys as such in the im-online pallet:\n    fn local_authority_keys() -> impl Iterator<Item=(u32, T::AuthorityId)> {\n        \/\/ on-chain storage\n        \/\/\n        \/\/ At index `idx`:\n        \/\/ 1. A (ImOnline) public key to be used by a validator at index `idx` to send im-online\n        \/\/          heartbeats.\n        let authorities = Keys::<T>::get();\n\n        \/\/ local keystore\n        \/\/\n        \/\/ All `ImOnline` public (+private) keys currently in the local keystore.\n        let mut local_keys = T::AuthorityId::all();\n\n        local_keys.sort();\n\n        authorities.into_iter()\n            .enumerate()\n            .filter_map(move |(index, authority)| {\n                local_keys.binary_search(&authority)\n                    .ok()\n                    .map(|location| (index as u32, local_keys[location].clone()))\n            })\n    }\n\nWhile debugging I can find the public key for Alice in local_keys.\nAsking because I want to develop something similar and testing in development is made easier this way rather than manually putting keys into the keystore.","379":"I'm trying to make possible payments in all ERC20 tokens for example USDC - 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48. How would I get some tokens after instantiating this token?\nI'm using openzeppelin ERC20 token implementation.\nHere is my code\nevent tokenBalance(uint);\n  function exchangeOneEtherToERC20(address tokenAddress) public payable {\n   require(msg.value == 1 ether, \"Should be sent for exchanging exactly 1 ether\");\n   \n   ERC20 token = ERC20(tokenAddress);\n\n   token.approve(msg.sender, 1);\n   token.transfer(msg.sender, 1);\n   emit tokenBalance(token.balanceOf(msg.sender));\n}","380":"I have written a simple while loop to return the total transaction value of a block, however, it can sometimes take almost 30 seconds depending on the number of <transactions> on the block.\nTherefore I am looking to the community for help with a much faster way of retrieving said info.\nBelow is my script and I thank you all for taking the time to read - I am very new to <blockchain>:\nfrom <web3> import <web3>\nimport pandas as pd\n    \n    \nw3 = <web3>(<web3>.HTTPProvider(config.INFURA_URL)\n\nblock_hegiht = 13179360\nblock = w3.eth.get_block(block_height)\nblock_tranasctions = (block['<transactions>'])  \ntransLen = len(block['<transactions>'])\n        \ncount = transLen\ntransValue_eth_list = []\n        \nwhile count >0:\n            \n    count = count - 1\n    transId = w3.eth.get_transaction_by_block(block_height,count)\n    transValue_wei = transId['value'] # get transaction value in wei\n    transValue_eth = w3.fromWei(transValue_wei, 'ether') # convert transaction value from wei to eth\n    transValue_eth = pd.to_numeric(transValue_eth) # convert from hex decimal to numeric\n\n    if transValue_eth > 0: # where value of transaction is greater than 0.00 eth\n\n        transValue_eth_list.append(transValue_eth) # append eth transaction value to list\n    \nblock_transValue_eth = sum(transValue_eth_list) # sum of all <transactions> in block\nprint(block_transValue_eth)","381":"I'm trying to call a specific endpoint on a Solana smart contract using @solana-<web3> and I can't quite figure out how todo that. Iv'e seen it done like this:\nconst buffer = Buffer.from(\"hello\");\n  const instruction = new <web3>.TransactionInstruction({\n    keys: [{ pubkey: fromWallet.publicKey, isSigner: false, isWritable: true }],\n    programId: new <web3>.PublicKey(metaDataProgramID),\n    data: buffer,\n  });\n  const confirmation = await <web3>.sendAndConfirmTransaction(\n    connection,\n    new <web3>.Transaction().add(instruction),\n    [fromWallet],\n    {\n      commitment: \"singleGossip\",\n      preflightCommitment: \"singleGossip\",\n    }\n  );`\n\nBut I'm not sure how todo it will a smart contract like this with multiple end points. Because how would one tell the smart contract what endpoint to use and what data to pass to that endpoint?:\npub fn process_instruction<'a>(\n    program_id: &'a Pubkey,\n    accounts: &'a [AccountInfo<'a>],\n    input: &[u8],\n) -> ProgramResult {\n    let instruction = MetadataInstruction::try_from_slice(input)?;\n    match instruction {\n        MetadataInstruction::CreateMetadataAccount(args) => {\n            msg!(\"Instruction: Create Metadata Accounts\");\n            process_create_metadata_accounts(\n                program_id,\n                accounts,\n                args.data,\n                false,\n                args.is_mutable,\n            )\n        }\n        MetadataInstruction::UpdateMetadataAccount(args) => {\n            msg!(\"Instruction: Update Metadata Accounts\");\n            process_update_metadata_accounts(\n                program_id,\n                accounts,\n                args.data,\n                args.update_authority,\n                args.primary_sale_happened,\n            )\n        }\n        MetadataInstruction::DeprecatedCreateMasterEdition(args) => {\n            msg!(\"Instruction: Deprecated Create Master Edition\");\n            process_deprecated_create_master_edition(program_id, accounts, args.max_supply)\n        }\n        MetadataInstruction::DeprecatedMintNewEditionFromMasterEditionViaPrintingToken => {\n            msg!(\"Instruction: Deprecated Mint New Edition from Master Edition Via Token\");\n            process_deprecated_mint_new_edition_from_master_edition_via_printing_token(\n                program_id, accounts,\n            )\n        }\n        MetadataInstruction::UpdatePrimarySaleHappenedViaToken => {\n            msg!(\"Instruction: Update primary sale via token\");\n            process_update_primary_sale_happened_via_token(program_id, accounts)\n        }\n        MetadataInstruction::MintNewEditionFromMasterEditionViaVaultProxy(args) => {\n            msg!(\"Instruction: Mint New Edition from Master Edition Via Vault Proxy\");\n            process_mint_new_edition_from_master_edition_via_vault_proxy(\n                program_id,\n                accounts,\n                args.edition,\n            )\n        }\n        MetadataInstruction::PuffMetadata => {\n            msg!(\"Instruction: Puff Metadata\");\n            process_puff_metadata_account(program_id, accounts)\n        }\n    }\n}\n\nHere is the full code for the smart contract: https:\/\/github.com\/metaplex-foundation\/metaplex\/tree\/master\/rust\/token-metadata\/program","382":"After following the Guide on the chain-link doc for building a node I got stuck,\nGoing through this https:\/\/docs.chain.link\/docs\/jobs\/migration-v1-v2\/ I notice that lots have changed How do I create a new JOBID with V2 that will suit the Alarm clock oracle contract as seen here will I just copy and paste it here just like the V1? IMAGE\n\n\ntype                = \"directrequest\"\nschemaVersion       = 1\nname                = \"Get > Bytes32\"\ncontractAddress     = \"0x19f7f3bF88CB208B0C422CC2b8E2bd23ee461DD1\"\nexternalJobID       = \"0EEC7E1D-D0D2-476C-A1A8-72DFB6633F47\" # OPTIONAL - if left unspecified, a random value will be automatically generated\nobservationSource   = \"\"\"\n    decode_log   [type=ethabidecodelog\n                  abi=\"OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)\"\n                  data=\"$(jobRun.logData)\"\n                  topics=\"$(jobRun.logTopics)\"]\n\n    decode_cbor  [type=cborparse data=\"$(decode_log.data)\"]\n    fetch        [type=http method=get url=\"$(decode_cbor.url)\"]\n    parse        [type=jsonparse path=\"$(decode_cbor.path)\"]\n    encode_data  [type=ethabiencode abi=\"(uint256 value)\" data=<{ \"value\": $(parse) }>]\n    encode_tx    [type=ethabiencode\n                  abi=\"fulfillOracleRequest(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes32 data)\"\n                  data=<{\n                      \"requestId\": $(decode_log.requestId),\n                      \"payment\": $(decode_log.payment),\n                      \"callbackAddress\": $(decode_log.callbackAddr),\n                      \"callbackFunctionId\": $(decode_log.callbackFunctionId),\n                      \"expiration\": $(decode_log.cancelExpiration),\n                      \"data\": $(encode_data)\n                  }>]\n    submit       [type=ethtx to=\"$(jobSpec.contractAddress)\" data=\"$(encode_tx)\"]\n\n    decode_log -> decode_cbor -> fetch -> parse -> encode_data -> encode_tx -> submit\n\"\"\"\n\n\n\nYour help will go a long way.","383":"I'm trying to use a wallet seed on the backend, using nodejs, to connect in blokchain. The Keypair module from \"@solana\/<web3>.js\" library has a fromSeed method, that I use with input from another method, from the bip39 library, that converts my mnemonic to a seed. This my code\nconst mnemonic = <My-mnemonic>\nconsole.log(bip39.validateMnemonic(mnemonic)) \/\/ true\nbip39.mnemonicToSeed(mnemonic).then(buffer => Keypair.fromSeed(buffer)).catch(err => console.log(err))\n\nThis is my error\nError: bad seed size\n    at Function.nacl.sign.keyPair.fromSeed (\/home\/diazrock\/Carrera\/Elasbit\/NFT's\/mint-nft-solana\/node_modules\/tweetnacl\/nacl-fast.js:2329:11)\n    at Function.fromSeed (\/home\/diazrock\/Carrera\/Elasbit\/NFT's\/mint-nft-solana\/node_modules\/@solana\/<web3>.js\/lib\/index.cjs.js:5625:53)\n    at bip39.mnemonicToSeed.then.buffer (repl:1:55)","384":"I have been struggling for quite some time with finding an explanation to what events are in Solidity (or in the <blockchain> context). As far as I understand, they are a way of storing (or logging) information on the particular contract that can then be updated throughout the life of that contract. But how is this different than a plain ol' variable? Why can't I just create a variable that is then simply updated with new information?","385":"I am trying to run a chainlink multiword request adapting the code in the docs but I keep getting an error:\ntransact to MultiWordConsumer.fulfillMultipleParameters errored: Error encoding arguments: Error: invalid arrayify value (argument=\"value\", value=\"\", code=INVALID_ARGUMENT, version=bytes\/5.4.0)\n\nMy code is pretty similar to the one in the example docs:\nfunction requestMultipleParameters(\nbytes32 specId, \nuint256 payment) public{\nspecId = 0x3934636531316335393937643432336338646331383761653431306536653163;\npayment = 100000000000000;\nChainlink.Request memory req = buildChainlinkRequest(specId, address(this), this.fulfillMultipleParameters.selector);\nreq.addUint(\"times\", 10000);\nrequestOracleData(req, payment);}\n\nwith:\nevent RequestMultipleFulfilled(\nbytes32 indexed requestId,\nuint256 indexed usd,\nuint256 indexed eur,\nuint256 jpy);\n\nand:\nfunction fulfillMultipleParameters(\nbytes32 requestId,\nuint256 usdResponse,\nuint256 eurResponse,\nuint256 jpyResponse)\npublic\nrecordChainlinkFulfillment(requestId){\nemit RequestMultipleFulfilled(requestId, usdResponse, eurResponse, jpyResponse);\nusd = usdResponse;\neur = eurResponse;\njpy = jpyResponse;}\n\nWhat am I doing wrong? thanks !","386":"Hello I want to handle WTRX (WETH but on tronchain) token inside of my smart contract.\ndeposit seems to work, but the problem is on withdraw and both functions, those two fail with REVERT opcode executed. .\nBefore I call withdraw I have approved contract address from WTRX smart contract.\nFrom my investigation I suppose that is from msg.sender.transfer(sad) inside the wtrx.withdraw function.\nDoes somebody know how to solve this problem and make this functions work? Thanks!\nWTRX contract can be found here: https:\/\/tronscan.io\/#\/token20\/TNUC9Qb1rRpS5CbWLmNMxXBjyFoydXjWFR\/code\nMy contract code:\ncontract TestTransfer {\nfunction deposit(address payable wtrxAddr) public payable{\n    WTRX wtrx = WTRX(wtrxAddr);\n\n    \/\/ TRX to WTRX Token\n    wtrx.deposit.value(msg.value)();\n\n    \/\/ Transfer TRX to caller\n    wtrx.transfer(msg.sender, msg.value);\n}\n\nfunction withdraw(address payable wtrxAddr, uint sad) public{\n    WTRX wtrx = WTRX(wtrxAddr);\n\n    \/\/ Transfer WTRX Token from owner to contract\n    wtrx.transferFrom(msg.sender, address(this), sad);\n\n    \/\/ WTRX Token to TRX\n    wtrx.withdraw(sad);\n    \n    \/\/ Transfer TRX to caller\n    msg.sender.transfer(sad);\n}\n\nfunction both(address payable wtrxAddr) public payable{\n    WTRX wtrx = WTRX(wtrxAddr);\n    \/\/ TRX to WTRX Token\n    wtrx.deposit.value(msg.value)();\n    \n    \/\/ WTRX Token to TRX\n    wtrx.withdraw(msg.value);\n\n    \/\/ Transfer TRX to caller\n    msg.sender.transfer(msg.value);\n}\n\n}","387":"I am trying to setup a job for a Chainlink MultiWord response on my local test node, using the documentation's example job spec here. Just would need confirmation that the address param:\n\"params\": {\n    \"address\": \"0xc57b33452b4f7bb189bb5afae9cc4aba1f7a4fd8\"\n  }\n\nis the one for my oracle contract address right? Also, where on the smart contract for the API call should I then specify the jobId and the oracle address to use?","388":"I'm trying to use ERC20 implementation of openzeppelin, but getting an error. tokenAddress is an address of the existing ERC20 token, for example USDC - 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/v3.4.0-solc-0.7\/contracts\/token\/ERC20\/ERC20.sol\";\n\nERC20 token = ERC20(tokenAddress);\ntoken.balanceOf(msg.sender);\n\nAn error\n\nrevert    The transaction has been reverted to the initial state. Note:\nThe called function should be payable if you send value and the value\nyou send should be less than your current balance. Debug the\ntransaction to get more information.","389":"I want to test our token incl. naming, icon, price etc. on the Solana Devnet but was only able to find the token-list PR which is currently only available for the Solana mainnet (as far as I can tell)\nCan someone tell me if there's a \"token-list pull request\" on the devnet or an alternative way to handle that, pls.?","390":"I'm attempting to transfer tokens from one Solana address to another, while I was able to prompt the data, the amount is always blank.\nWith many tweaks and changes, it seems like the amount stays null. If I don't include the amount, the row doesn't appear but when I do, there's no amount to be shown.\nfunction writeBigU_Int64LE(buf, value, offset, min, max) {\n    let lo = Number(value & BigInt('0xffffffff'))\n    buf[offset++] = lo\n    lo = lo >> 8\n    buf[offset++] = lo\n    lo = lo >> 8\n    buf[offset++] = lo\n    lo = lo >> 8\n    buf[offset++] = lo\n    let hi = Number((value >> BigInt(32)) & BigInt('0xffffffff'))\n    buf[offset++] = hi\n    hi = hi >> 8\n    buf[offset++] = hi\n    hi = hi >> 8\n    buf[offset++] = hi\n    hi = hi >> 8\n    buf[offset++] = hi\n    return offset\n  }\n\n  let AMOUNT = BigInt(1000)\n  const b = buffer.Buffer.alloc(10)\n  b.writeUInt8(3, 0)\n  writeBigU_Int64LE(b, AMOUNT, 1, BigInt(0), BigInt('0xffffffffffffffff'))\n\n  const instruction = new solana<web3>.TransactionInstruction({\n    keys: [ \n        { pubkey: token, isSigner: false, isWritable: true },\n        { pubkey: provider.publicKey, isSigner: false, isWritable: true },\n        { pubkey: provider.publicKey, isSigner: true, isWritable: true },\n    ],\n    programId : program_id,\n    data: b\n  });\n\n  let transaction = new solana<web3>.Transaction()\n  transaction.add(instruction);\n\n  let { blockhash } = await connection.getRecentBlockhash();\n  transaction.recentBlockhash = blockhash;\n  transaction.feePayer = provider.publicKey;\n\n  let signed = await provider.signTransaction(transaction, connection);\n  console.log(signed);\n  let signature = await connection.sendRawTransaction(signed.serialize());\n  console.log(signature);\n  await connection.confirmTransaction(signature);","391":"I have been able to create custom tokens using custom wallets generated using <web3>.Keypair.generate(), but how do I now cap the supply of these tokens or remove the minting authority of these SPL tokens?","392":"I'm newcomer to <blockchain> and i'm starting to develop a new token, and i've seen many places telling the similarities between the two <blockchain>s. And i read that BSC have a EVM(Ethereum Virtual Machine) compatibility\nMy question is if that means If I follow a tutorial to learn do deploy a smart contract on the Ethereum <blockchain>, written in Solidity. Will the same contract work in the Binance Smart Chain too? If not, what are the major diferrences when writting contracts for one and the other?\nThank you","393":"I am digging into ipfs field in order to start a NFT project so that I am working with frontend with ipfs-http-client npm package (npm i ipfs-http-client).\nMy simple test code is like below:\nconst { create } = require('ipfs-http-client')\n\nconst ipfsClient = create(\"https:\/\/ipfs.infura.io:5001\/api\/v0\")\n\nconst cid = await ipfsClient.add(urlSource(\"https:\/\/camo.githubusercontent.com\/e92540c54c9b47f684b0e4dd5442ebe20ddbbe2e9699c29ce8400c055fa46e6a\/68747470733a2f2f697066732e696f2f697066732f516d65364b4a644b637038355459624c78754c56376f517a4d694c72656d4437484d6f584c5a456d676f36526e682f6a732d697066732d737469636b65722e706e67\"))\n\n\/\/https:\/\/ipfs.io\/ipfs\/QmUQeyhy7yY9yZUXKbKLCnPAoGKCeuhH3XxzprcJfYiz1h\n\nSo far so good without any problem and the data is accesable on ipfs network. The question of mine is very conceptual and fundamental I believe.\nApparently, the image uploaded to ipfs is stored in the ipfs nodes. And the image will be accessible as long as there is at least one node holding the image data. or we will need to pin it. Otherwise, the data will be no longer seen.\nAnd I found the article from the following link saying that the add() execution with default pin with infura API. I am not sure if it is correct because I event does not provide any infura API secret key for this operation. Or is it a free service?\nHow to pin a hash for IPFS through Infura's gateway using ipfs-http-client API","394":"I want to create a smart contract that can run API and I don't want to use chainlink so is it possible to do that without using it?\nCan anyone help me?","395":"while I'm researching how the ethereum <blockchain> works. I have come across a problem.\nusually blocks contain the transaction data. chaining those blocks will create a <blockchain>. I learned that ethereum smart contracts are also stored in the <blockchain> if the block contains the transaction data how does the smart contract stored in the <blockchain>.\nalso, I can't figure out the relationship between the ethereum <blockchain> and EVM.","396":"I just working with the \"Quick-start Guide\" in the last part \"invoking methods\" when i try to call any method always see the error:\nFailure [xxxx.testnet]\nError: Contract method is not found\nAn error occured\nError: Contract method is not found\n\nI have all the methods becase is only copy paste tutorial.\n** UPDATE **\nI just follow the steps.\nDeploy is correct:\nnear deploy --wasmFile target\/wasm32-unknown-unknown\/release\/rust_counter_tutorial.wasm --accountId josedlujan.testnet \n\nThe msg:\nStarting deployment. Account id: josedlujan.testnet, node: https:\/\/rpc.testnet.near.org, helper: https:\/\/helper.testnet.near.org, file: target\/wasm32-unknown-unknown\/release\/rust_counter_tutorial.wasm\nTransaction Id 5LiJSuaso4XJ85gYcMopgECgAMvK4BxAHGgfTuGxYHAY\n\nTo see the transaction in the transaction explorer, please open this url in your browser\nhttps:\/\/explorer.testnet.near.org\/<transactions>\/5LiJSuaso4XJ85gYcMopgECgAMvK4BxAHGgfTuGxYHAY\n\nBut, when i execute methods.\nnear call josedlujan.testnet increment --accountId josedlujan.testnet\n\nI always see:\nScheduling a call: josedlujan.testnet.increment()\nReceipt: 7GsyvaVGErEr7rXkQdBQSu5F3FRFCQ2BG2LJuDT3t4Gx\n    Failure [josedlujan.testnet]: Error: Contract method is not found\nAn error occured\nError: Contract method is not found\n\nBut i have the methods lib.rs:\npub fn increment(&mut self) {\n        \/\/ note: adding one like this is an easy way to accidentally overflow\n        \/\/ real smart contracts will want to have safety checks\n        \/\/ e.g. self.val = i8::wrapping_add(self.val, 1);\n        \/\/ https:\/\/doc.rust-lang.org\/std\/primitive.i8.html#method.wrapping_add\n        self.val += 1;\n        let log_message = format!(\"Increased number to {}\", self.val);\n        env::log(log_message.as_bytes());\n        after_counter_change();\n    }\n\n    \/\/\/ Decrement (subtract from) the counter.\n    \/\/\/\n    \/\/\/ In (\/src\/main.js) this is also added to the \"changeMethods\" array\n    \/\/\/ using near-cli we can call this by:\n    \/\/\/\n    \/\/\/ ```bash\n    \/\/\/ near call counter.YOU.testnet decrement --accountId donation.YOU.testnet\n    \/\/\/ ```\n    pub fn decrement(&mut self) {\n        \/\/ note: subtracting one like this is an easy way to accidentally overflow\n        \/\/ real smart contracts will want to have safety checks\n        \/\/ e.g. self.val = i8::wrapping_sub(self.val, 1);\n        \/\/ https:\/\/doc.rust-lang.org\/std\/primitive.i8.html#method.wrapping_sub\n        self.val -= 1;\n        let log_message = format!(\"Decreased number to {}\", self.val);\n        env::log(log_message.as_bytes());\n        after_counter_change();\n    }\n\nlib.rs\n\n\/\/! This contract implements simple counter backed by storage on <blockchain>.\n\/\/!\n\/\/! The contract provides methods to [increment] \/ [decrement] counter and\n\/\/! [get it's current value][get_num] or [reset].\n\/\/!\n\/\/! [increment]: struct.Counter.html#method.increment\n\/\/! [decrement]: struct.Counter.html#method.decrement\n\/\/! [get_num]: struct.Counter.html#method.get_num\n\/\/! [reset]: struct.Counter.html#method.reset\n\nuse near_sdk::borsh::{self, BorshDeserialize, BorshSerialize};\nuse near_sdk::{env, near_bindgen};\n\nnear_sdk::setup_alloc!();\n\n\/\/ add the following attributes to prepare your code for serialization and invocation on the <blockchain>\n\/\/ More built-in Rust attributes here: https:\/\/doc.rust-lang.org\/reference\/attributes.html#built-in-attributes-index\n#[near_bindgen]\n#[derive(Default, BorshDeserialize, BorshSerialize)]\npub struct Counter {\n    \/\/ See more data types at https:\/\/doc.rust-lang.org\/book\/ch03-02-data-types.html\n    val: i8, \/\/ i8 is signed. unsigned integers are also available: u8, u16, u32, u64, u128\n}\n\n#[near_bindgen]\nimpl Counter {\n    \/\/\/ Returns 8-bit signed integer of the counter value.\n    \/\/\/\n    \/\/\/ This must match the type from our struct's 'val' defined above.\n    \/\/\/\n    \/\/\/ Note, the parameter is `&self` (without being mutable) meaning it doesn't modify state.\n    \/\/\/ In the frontend (\/src\/main.js) this is added to the \"viewMethods\" array\n    \/\/\/ using near-cli we can call this by:\n    \/\/\/\n    \/\/\/ ```bash\n    \/\/\/ near view counter.YOU.testnet get_num\n    \/\/\/ ```\n    pub fn get_num(&self) -> i8 {\n        return self.val;\n    }\n\n    \/\/\/ Increment the counter.\n    \/\/\/\n    \/\/\/ Note, the parameter is \"&mut self\" as this function modifies state.\n    \/\/\/ In the frontend (\/src\/main.js) this is added to the \"changeMethods\" array\n    \/\/\/ using near-cli we can call this by:\n    \/\/\/\n    \/\/\/ ```bash\n    \/\/\/ near call counter.YOU.testnet increment --accountId donation.YOU.testnet\n    \/\/\/ ```\n    pub fn increment(&mut self) {\n        \/\/ note: adding one like this is an easy way to accidentally overflow\n        \/\/ real smart contracts will want to have safety checks\n        \/\/ e.g. self.val = i8::wrapping_add(self.val, 1);\n        \/\/ https:\/\/doc.rust-lang.org\/std\/primitive.i8.html#method.wrapping_add\n        self.val += 1;\n        let log_message = format!(\"Increased number to {}\", self.val);\n        env::log(log_message.as_bytes());\n        after_counter_change();\n    }\n\n    \/\/\/ Decrement (subtract from) the counter.\n    \/\/\/\n    \/\/\/ In (\/src\/main.js) this is also added to the \"changeMethods\" array\n    \/\/\/ using near-cli we can call this by:\n    \/\/\/\n    \/\/\/ ```bash\n    \/\/\/ near call counter.YOU.testnet decrement --accountId donation.YOU.testnet\n    \/\/\/ ```\n    pub fn decrement(&mut self) {\n        \/\/ note: subtracting one like this is an easy way to accidentally overflow\n        \/\/ real smart contracts will want to have safety checks\n        \/\/ e.g. self.val = i8::wrapping_sub(self.val, 1);\n        \/\/ https:\/\/doc.rust-lang.org\/std\/primitive.i8.html#method.wrapping_sub\n        self.val -= 1;\n        let log_message = format!(\"Decreased number to {}\", self.val);\n        env::log(log_message.as_bytes());\n        after_counter_change();\n    }\n\n    \/\/\/ Reset to zero.\n    pub fn reset(&mut self) {\n        self.val = 0;\n        \/\/ Another way to log is to cast a string into bytes, hence \"b\" below:\n        env::log(b\"Reset counter to zero\");\n    }\n}\n\n\/\/ unlike the struct's functions above, this function cannot use attributes #[derive(\u00e2\u0080\u00a6)] or #[near_bindgen]\n\/\/ any attempts will throw helpful warnings upon 'cargo build'\n\/\/ while this function cannot be invoked directly on the <blockchain>, it can be called from an invoked function\nfn after_counter_change() {\n    \/\/ show helpful warning that i8 (8-bit signed integer) will overflow above 127 or below -128\n    env::log(\"Make sure you don't overflow, my friend.\".as_bytes());\n}\n\n\/*\n * the rest of this file sets up unit tests\n * to run these, the command will be:\n * cargo test --package rust-counter-tutorial -- --nocapture\n * Note: 'rust-counter-tutorial' comes from cargo.toml's 'name' key\n *\/\n\n\/\/ use the attribute below for unit tests\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use near_sdk::Mocked<blockchain>;\n    use near_sdk::{testing_env, VMContext};\n\n    \/\/ part of writing unit tests is setting up a mock context\n    \/\/ in this example, this is only needed for env::log in the contract\n    \/\/ this is also a useful list to peek at when wondering what's available in env::*\n    fn get_context(input: Vec<u8>, is_view: bool) -> VMContext {\n        VMContext {\n            current_account_id: \"alice.testnet\".to_string(),\n            signer_account_id: \"robert.testnet\".to_string(),\n            signer_account_pk: vec![0, 1, 2],\n            predecessor_account_id: \"jane.testnet\".to_string(),\n            input,\n            block_index: 0,\n            block_timestamp: 0,\n            account_balance: 0,\n            account_locked_balance: 0,\n            storage_usage: 0,\n            attached_deposit: 0,\n            prepaid_gas: 10u64.pow(18),\n            random_seed: vec![0, 1, 2],\n            is_view,\n            output_data_receivers: vec![],\n            epoch_height: 19,\n        }\n    }\n\n    \/\/ mark individual unit tests with #[test] for them to be registered and fired\n    #[test]\n    fn increment() {\n        \/\/ set up the mock context into the testing environment\n        let context = get_context(vec![], false);\n        testing_env!(context);\n        \/\/ instantiate a contract variable with the counter at zero\n        let mut contract = Counter { val: 0 };\n        contract.increment();\n        println!(\"Value after increment: {}\", contract.get_num());\n        \/\/ confirm that we received 1 when calling get_num\n        assert_eq!(1, contract.get_num());\n    }\n\n    #[test]\n    fn decrement() {\n        let context = get_context(vec![], false);\n        testing_env!(context);\n        let mut contract = Counter { val: 0 };\n        contract.decrement();\n        println!(\"Value after decrement: {}\", contract.get_num());\n        \/\/ confirm that we received -1 when calling get_num\n        assert_eq!(-1, contract.get_num());\n    }\n\n    #[test]\n    fn increment_and_reset() {\n        let context = get_context(vec![], false);\n        testing_env!(context);\n        let mut contract = Counter { val: 0 };\n        contract.increment();\n        contract.reset();\n        println!(\"Value after reset: {}\", contract.get_num());\n        \/\/ confirm that we received -1 when calling get_num\n        assert_eq!(0, contract.get_num());\n    }\n}\n\n```","397":"I'm running ethereum private node on my system, I forgot my account password.\nAnyone, please help me to get a private key based on the Keystore UTC file.","398":"I'm new to <blockchain>, I have setup on private node using <geth>.\nNow I want to know, which kind of chain it is called PoA based chain or PoW?\nbelow is my command to start private node:\n<geth> --nodiscover --networkid 1111 --datadir node1 --unlock ADD --rpccorsdomain=\"\" --mine --rpc --rpcapi \"admin,debug,eth,miner,net,personal,txpool,<web3>,clique\" --nousb --rpc --rpcaddr 0.0.0.0 --ws.api \"eth,net,<web3>,debug,txpool\" --ws --ws.addr 0.0.0.0 --ws.port 8546 --ws.origins \"\" --syncmode=full --gcmode=archive --rpcvhosts=* --allow-insecure-unlock console","399":"I have to recover Dogecoin and Litecoin wallets from mnemonic passphrase, I have done for Ethereum and Bitcoin but I can't figure out for these two.\nHere is my approach for generating Bitcoin wallet from mnemonic, which is being generated from BIP39 in a separate function:\nconst generateBtcWalletFromMnemonic = async (mnemonic) => {\n    const DERIVE_PATH_PREFIX = \"m\/44'\/0'\/0'\/0\/\";\n    const MNEMONIC = mnemonic;\n    const seed = await bip39.mnemonicToSeed(MNEMONIC);\n    const root = bip32.fromSeed(seed);\n    const children = root.derivePath(DERIVE_PATH_PREFIX + 0);\n    const address = getAddress(children);\n    privateKey = children.toWIF();\n    console.log({ address, privateKey });\n}","400":"I am trying to use OpenSea API and I noticed that I need to set a limit before retrieving assets\nhttps:\/\/docs.opensea.io\/reference\/getting-assets\nI figured I can use the offset to navigate through all the items, even though that's tedious. But the problem is offset itself has a limit, so are assets beyond the max offset inaccessible ?\nI read that you that the API is \"rate-limited\" without an API key, so I assume that related to the number of requests you can make in a certain time period, am I correct about that? Or does it lift the limit of returned assets ? The documentation isn't clear about that https:\/\/docs.opensea.io\/reference\/api-overview\nWhat can I do to navigate through all the assets ?","401":"So I've started learning solidity and I want to make a function that return the total amount of coins created.\nHere are the important parts of the contract\naddress public owner;\n    mapping(address => uint) public balances;\n    uint totalSupply;\n\n\nfunction mint(address receiver, uint amount) public {\nrequire(msg.sender == owner);\n        \/\/ balances[receiver] = balances[receiver] + amount;\n        totalSupply += amount;\n        balances[receiver] += amount;\n    }\n\nfunction CheckTotalSupply(uint supply) public {\n        returns supply;\n    }\n\nWhen I compile it gives me this error.\nParserError: Expected primary expression.\n--> subcurrency.sol:47:9:\n|\n47 | returns supply;\n| ^^^^^^^\n\nWhat is the issue?\nAlso if I use return it says\nTypeError: Different number of arguments in return statement than in returns declaration.\n--> subcurrency.sol:47:9:\n|\n47 | return supply;\n| ^^^^^^^^^^^^^","402":"I want to create hash from data sent in postman. I send some data and it works, it is added to the database. But when i want to post something next my Shipment which is in database is verified if it's hash is correct and then the hash that is saved in database is different from calculated.\nIs there some difference when I post data from postman and when i read it from database?\npublic class BlockExtension : IBlock\n{\n    public byte[] CalculateHash(Shipment shipment)\n    {\n        var dataToHash = new DataToHash(shipment.Data, shipment.index, shipment.PrevHash, shipment.TimeStamp);\n\n        using (SHA256 hash = SHA256.Create())\n        {\n            Encoding enc = Encoding.UTF8;\n            Byte[] result = hash.ComputeHash(ObjectToByteArray(dataToHash));\n\n            return result;\n        }\n    }\n\n    private byte[] ObjectToByteArray(DataToHash data)\n    {\n        if (data == null)\n            return null;\n\n        var options = new JsonSerializerOptions()\n        {\n            ReferenceHandler = ReferenceHandler.Preserve\n        };\n\n        var result = JsonSerializer.SerializeToUtf8Bytes(data, options);\n        return result;\n    }\n\n    public Shipment CreateGenesisBlock(CreateShipmentCommand request)\n    {\n        var block = new Shipment()\n        {\n            ProductId = request.ProductId,\n            index = 0,\n            TimeStamp = DateTime.Now,\n            PrevHash = BitConverter.GetBytes('0'),\n            Data = new Data()\n            {\n                PlaceOfArrivalId = request.Data.PlaceOfArrivalId,\n                PlaceOfDepartureId = request.Data.PlaceOfDepartureId\n            }\n        };\n\n        block.Hash = CalculateHash(block);\n\n        return block;\n    }\n\n    public Shipment GetLatestBlock(Product product) => product.SupplyChain.Last();\n\n    public bool IsChainValid(List<Shipment> shipments)\n    {\n        for (var i = 1; i < shipments.Count; i++)\n        {\n            var currentBlock = shipments[i];\n            var previousBlock = shipments[i - 1];\n\n\n            if (!(currentBlock.Hash.SequenceEqual(CalculateHash(currentBlock))))\n            {\n                return false;\n            }\n\n            if (!currentBlock.PrevHash.SequenceEqual(previousBlock.Hash))\n            {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    public List<Shipment> AddBlock(Shipment shipment, Product product)\n    {\n        shipment.PrevHash = GetLatestBlock(product).Hash;\n        shipment.Hash = CalculateHash(shipment);\n        product.SupplyChain.Add(shipment);\n\n        return product.SupplyChain.ToList();\n    }\n}","403":"Store 2 image in IPFS and pin it.\nThe IPFS URI should be like\n\nipfs:\/\/ipfs.io\/hashCID\/O.png\nipfs:\/\/ipfs.io\/hashCID\/1.png\n\nHere hashCID should be same.\nJust change the next token id and you should be able to retrieve the image.","404":"I have a question regarding the theory behind the concept of private data collection in <hyperledger> Fabric.\nHow the fabric implement it ? I mean is it considered a form of access control method ? Or based on some type of encryption? Or via gossip protocol?\nCould any one explain ?\nThank you for the answers, however you stated that private data collection is achieving data privacy on organization  level, then how to protect privacy on user level?","405":"I am looking to grab historical data from our Solana Devnet feeds. Can you let me know if get_submissions is the function that should be called for historical data for the Solana contracts? And if not, can you tell me what is?\nAlso, are there perhaps instructions I'm missing somewhere for this?","406":"I installed <geth> in my local environment, and successfully synchronized with ETH Mainnet. The command I used to start <geth> is as follows:\n<geth> --ethash.dagdir F:\\Ethereum\\Ethash --datadir F:\\Ethereum --http --graphql --http --http.corsdomain \"*\" --http.api personal,eth,net,<web3>\n\nHowever, when I try to connect to this local Ethereum node using ethers provider:\nlet provider = new ethers.providers.JsonRpcProvider();\n\nAnd then try to use this provider to fetch pair information with Uniswap SDK:\nvar pair = await uniswap.Fetcher.fetchPairData(tokens.WETH, tokens.DAI, provider);\n\nBelow error message was shown:\n(node:32252) UnhandledPromiseRejectionWarning: Error: call revert exception (method=\"getReserves()\", errorArgs=null, errorName=null, errorSignature=null, reason=null, code=CALL_EXCEPTION, version=abi\/5.4.0)  \n\nCould someone help to advise whether it is related to the incorrect setup of the <geth> Ethereum node, or related to the incorrect use of ethers local ETH node provider with the uniswap SDK (above works perfectly fine when I used an Infura endpoint) ?","407":"I am doing a custom bitcoin miner for a school project.\nWhat I have below is the code I use to create the new hash but I do not know how to create or submit a candidate block for validation. I have tried over 40 different websites and none yeileded any results.\nAlso if there are any tips on how to improve code, it is greatly appreciated.\nfrom hashlib import sha256\nimport time\nfrom transactiongetter import inp, inpbit, out, outbit\n\n\nMAX_NONCE = 100000000000\n\ndef SHA256(text):\n    return sha256(text.encode(\"ascii\")).hexdigest()\n\ndef mine(block_number, <transactions>, previous_hash, prefix_zeros):\n    prefix_str = '0'*prefix_zeros\n    for nonce in range(MAX_NONCE):\n        text = str(block_number) + <transactions> + previous_hash + str(nonce)\n        new_hash = SHA256(text)\n        if new_hash.startswith(prefix_str):\n            print(f\"Yay! Successfully mined bitcoins with nonce value:{nonce}\")\n            return new_hash\n\n    raise BaseException(f\"Tried {MAX_NONCE} times and faield\")\n\nif __name__=='__main__':\n    <transactions>= '''inp -> out -> inpbit'''\n\n    difficulty= 5 # higher number more difficulty\n    start = time.time()\n    print(\"start mining\")\n    new_hash = mine(5,<transactions>,'0000000xa036944e29568d0cff17edbe038f81208fecf9a66be9a2b8321c6ec7', difficulty)\n    total_time = str((time.time() - start))\n    print(f\"end mining. Mining took: {total_time} seconds\")\n    print(new_hash)","408":"I am developing smart contracts on terra network.\nI am bored and sick of building them using dirty docker commands.\nI am using houston for toolchain but it doesn't seem to work well.\nIs there any better toolchain to build, test, deploy cosmwasm contracts with just one single command?","409":"What am i doing wrong\/missing? When trying to connect my project's id from https:\/\/infura.io\/ I am getting the following error after running:\n$  npx hardhat run scripts\/deploy.js --network mumbai  \n\nerror:\nProviderError: project ID does not have access to polygon l2\nhere is my file\nrequire(\"@nomiclabs\/hardhat-waffle\");\nrequire(\"dotenv\").config();\nconst privateKey = process.env.PRIVATE_KEY;\nconst projectId = process.env.PROJECT_ID;\n\nif (privateKey.error) {\n  throw privateKey.error;\n}\n\nif (projectId.error) {\n  throw projectId.error;\n}\n\nmodule.exports = {\n  networks: {\n    hardhat: {\n      chainId: 1337,\n    },\n    mumbai: {\n      url: `https:\/\/polygon-mumbai.infura.io\/v3\/${projectId}`,\n      accounts: [privateKey],\n    },\n    mainnet: {\n      url: `https:\/\/arbitrum-mainnet.infura.io\/v3\/${projectId}`,\n      accounts: [privateKey],\n    },\n    matic: {\n      url: \"https:\/\/rpc-mainnet.maticvigil.com\",\n      accounts: [privateKey],\n    },\n  },\n  solidity: \"0.8.4\",\n};","410":"I am develop a small ethereum website project . I know I am very new at this. I started to learn the basics of solidity but I have an issue I do not know how to solve . I hope I got someone how can help me .\nHere the code I want to use the Person data as struct to the HistoryRecode inorder to track his\/her information . but I got this error .\nproject:\/contracts\/Passport.sol:102:47: TypeError: This type is only supported in the new experimental ABI encoder. Use \"pragma experimental ABIEncoderV2;\" to enable the feature.\n  function getPassport() public view returns (Person memory) {\n                                              ^-----------^\n,project:\/contracts\/Passport.sol:108:41: TypeError: This type is only supported in the new experimental ABI encoder. Use \"pragma experimental ABIEncoderV2;\" to enable the feature.\n  (uint256 incidentTime, address owner, Person memory person) {\n                                        ^------------------^\n\nCompilation failed. See above.\nTruffle v5.4.3 (core: 5.4.3)\nNode v16.3.0\n\ncontract Compeny{\n  address constant  ADMIN_ADDRESS = 0x8c0199C5D6e4B22A1948358F1bf48dD095Ae5300; \n\n  struct Person {\n    uint ppNo ;\n    bytes32  firstName;\n    string gender ;\n    string dayOfbirth ;\n    string country ;\n  }\n   mapping(address => Person) private PersoneDictionary;\n   HistoryRecord[] private historyRecords;\n  function createOrUpdatePassport(\n        address _owner,\n        uint _ppNo ,\n        bytes32 _firstName ,\n        string memory _gender ,\n        string memory _dayOfbirth ,\n        string memory _country \n        ) public \n  {     \n     checkAdminPermission();\n    Person memory person = Person(\n        _ppNo ,\n     _firstName ,\n     _gender ,\n     _dayOfbirth, \n     _country \n     ) ;\n\n      PersoneDictionary[_owner] = person;\n      historyRecords.push(HistoryRecord({\n          incidentTime : block.timestamp ,\n          owner : _owner,\n          person : person \n     }));\n  }\n\n  function getPerson() public view returns (Person memory) {\n      return PersoneDictionary[msg.sender];\n  }\n\n \n  function <geth>istoryRecord(uint index) public view returns \n  (uint256 incidentTime, address owner, Person memory person) {\n      checkAdminPermission();\n      return (historyRecords[index].incidentTime, \n              historyRecords[index].owner, historyRecords[index].person);\n  }\n\n  struct HistoryRecord {\n      uint256 incidentTime;\n      address owner;\n      Person  person;\n  }\n\n  \/\/ utility functions\n  function <geth>istoryRecordLength() public view returns (uint) {\n      checkAdminPermission();\n      return historyRecords.length;\n  }\n\n  function checkAdminPermission() private view {\n      if (msg.sender != ADMIN_ADDRESS) {\n          revert();\n      }\n  }\n\n}","411":"How can I call 'createBuyOrder' function for buy NTF token?\nI use the following function :\nconst createBuyOrder = async (orders) => {\n\n    const res = await instOpenSea.api.postOrder({ orders })\n    .then(res => console.log(res))\n    .catch(err => console.log(err));\n};\ncreateBuyOrder(orderJson);\n\nResult of this code is error like this:\nError: API Error 500: Internal server error. OpenSea has been alerted, but if the problem persists please contact us via Discord: https:\/\/discord.gg\/ga8EJbv - full message was ....\nHow can I fix this error?","412":"I was trying to deploy the following smart contract on Remix IDE:\nRemix deployment, can't share as an image yet\nAs you may see, Remix doesn't let me work on the deployed functions. The only thing I can do is interacting via calldata. I checked on other links like this one: Remix IDE does not show the deployed functions under the deployed contracts option but there's no issue regarding the web browser. I've already deployed it using Chrome and Brave, but didn't work. Can anyone give me a hint on this? I'd really appreciate it.\nKind regards!","413":"I have succeeded deploy the ION SIDETREE testnet.\nI followed this install instruction. But when I created DID, it returned DID for mainnet.\nI don't know where it's wrong.\nHere is my configuration:\nStep 1: I run bitcoin with this command:\nroot@ion:~\/bitcoin-0.20.1# .\/bin\/bitcoind -testnet -rpcuser=admin -rpcpassword=admin -fallbackfee=0.0002 -txindex=1 -server\n\nAnd here is the output log\n\nStep 2: I config ION Sidetree\nHere is my configuration:\nroot@ion:~\/ion\/json# cat testnet-bitcoin-config.json\n{\n   \"bitcoinDataDirectory\": \"\/root\/.bitcoin\/testnet3\",\n   \"bitcoinFeeSpendingCutoffPeriodInBlocks\": 1,\n   \"bitcoinFeeSpendingCutoff\": 0.001,\n   \"bitcoinPeerUri\": \"http:\/\/localhost:18332\",\n   \"bitcoinRpcUsername\": \"admin\",\n   \"bitcoinRpcPassword\": \"admin\",\n   \"bitcoinWalletOrImportString\": \"cMj4VE3WyJt6RAQVGboDATFQ6YAVKo6fCVXw7oKuSpaAfNJqCuV1\",\n   \"databaseName\": \"ion-testnet-bitcoin\",\n   \"genesisBlockNumber\": 1900000,\n   \"logRequestError\": true,\n   \"mongoDbConnectionString\": \"mongodb:\/\/127.0.0.1:27017\/\",\n   \"port\": 3002,\n   \"sidetreeTransactionFeeMarkupPercentage\": 1,\n   \"sidetreeTransactionPrefix\": \"ion:test\",\n   \"transactionPollPeriodInSeconds\": 60,\n   \"valueTimeLockUpdateEnabled\": false,\n   \"valueTimeLockAmountInBitcoins\": 0,\n   \"valueTimeLockPollPeriodInSeconds\": 600,\n   \"valueTimeLockTransactionFeesAmountInBitcoins\": 0.0001\n}\n\nAnd\nroot@ion:~\/ion\/json# cat  testnet-core-config.json\n {\n   \"batchingIntervalInSeconds\": 600,\n   \"<blockchain>ServiceUri\": \"http:\/\/127.0.0.1:3002\",\n   \"databaseName\": \"ion-testnet-core\",\n   \"didMethodName\": \"ion:test\",\n   \"ipfsHttpApiEndpointUri\": \"http:\/\/127.0.0.1:5001\",\n   \"maxConcurrentDownloads\": 20,\n   \"mongoDbConnectionString\": \"mongodb:\/\/127.0.0.1:27017\/\",\n   \"observingIntervalInSeconds\": 60,\n   \"port\": 3000\n}\n\nStep 3: I run bitcoin\nroot@ion:~\/ion# npm install\nroot@ion:~\/ion\/json# npm run build\nroot@ion:~\/ion\/json# npm run bitcoin\n\nAnd here is the output log\n\nStep 4: I run core\nroot@ion:~\/ion# npm run core\n\nAnd here is the output log\n\nStep 5: I build ION\nroot@ion:~# cd ion\/\nroot@ion:~\/ion# npm install\nroot@ion:~\/ion# npm run build\nroot@ion:~\/ion# npm install -g .\n\nStep 6: I generate DID\nroot@ion:~\/ion# ion operation create\n\nHere is the output log\n\nHere is my problem, I don't know why I am running testnet but it created DID as mainnet. So, when I resolved DID, it proved this error\n\nThank you.","414":"I run 2 private nodes follow this tutorial of Substrate. When I send funds from one account to another or execute a contract function. <transactions> include a fee. However, I don't know who will receive these fees and how to withdraw these rewards.","415":"I'm building some Wallet functionality for Ethereum ERC-20 Tokens. I just have a few questions:\n\nLet's say I want to test an ERC-20 Token (BAT) for example. How can I send test BAT or AAVE or any other token to myself? I only have access to both Rinkeby and Ropsten and can't find a faucet for these, only Kovan.\n\nCan I reuse the same generated Eth address for all ETH Tokens? Are there any gotcha's I've gotta think about?\n\n\nThanks","416":"In <hyperledger>-fabric node js sdk.\nIs there any possibility to search an asset with partial id?\nfor example my id is 'abc123'.\nI can search with bc12 or abc or 123..and get the matching results.","417":"I have been trying to deploy my first contract on Remix using Ropsten Network with metamask but i am always seeing this\nCreation of my_smart_contract pending\nPlease how can i resolve this","418":"I'm using couchDB in the fabric for state database in peers. I have a json data that is stored inside the ledger\nJSON DATA\n  \"Company\": {\n    \"Associate\": {\n      \"entity\": {\n        \"name\": \"foo\",\n          \"role\": \"admin\"\n      },\n      \"access\": [\n        {\n          \"create\": \"allowed\"\n        }\n      ]\n    }\n  }\n}\n\nI have to query the data based on access json object, like these have values like \"create\",\"readonly\",\"delete\" etc..\nCurrently I tried this but none of the records came up.\n{\n  \"selector\": {\n    \"Company\": {\n      \"Associate\": {\n        \"access\": {\n          \"$elemMatch\": {\n            \"$eq\": \"create\"\n          }\n        }\n      }\n    }\n  }\n}\n\nHow can I query the data's ?","419":"ERC721 - how do I generate nfts from different characteristics? Like punks, apes, bored bananas, wicked craniums...\nDo these projects only generate all of the 1000s of images at first mint? Or are they already created and stored somewhere?\nDo they actually create the image or is it stored as separate elements that only puts it all to<geth>er when someone calls a function to see that image\nI believe these projects are created using erc721 contracts","420":"I'm learning to write smart contract. I've written code in solidity and fully tested (change and read both methods) in localhost using hardhat .\nThe problem arises when I deployed the contract on Binance Smart Chain (testnet) and calling (change) method of my smart-contract, the error occurs and it says \"unknown account\".\nI can see my deployed contract on testnet.bscscan.com But I'm not sure about the user I'm creating via code and I also tried my other user public\/private key where I have BNB faucet, in both ways I'm receiving same error \"unknown account\".\nI think the error is related to user.\nIn below code I'm just trying to create a post that will save the data in <blockchain>.\nconst <web3> = require('<web3>')\nconst <web3> = new <web3>(new <web3>.providers.HttpProvider('https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/'))\n\n\/\/const account = <web3>.eth.accounts.create(); <-- also tried public\/private key obtained by this\n\/\/console.log(account);\n\n<web3>.eth.accounts.privateKeyToAccount(USER_PRIVATE_KEY)\nconst SC = new <web3>.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS)\n\nSC.methods.addPost().send({ from: USER_PUBLIC_KEY }, function (err, res) {\n    if (err) {\n      console.log('An error occured', err)\n      return\n    }\n    console.log('Post: ', res)\n})","421":"I have been trying to write some data with struct type to solana <blockchain> but have been stuck at an error which says ->\nTransaction simulation failed: Error processing Instruction 0: Program failed to complete \n    Program 2qCpEJASM553foMRmd4MHRLxEFywKwvaUXRtypXJp4zv invoke [1]\n    Program consumption: 199505 units remaining\n    Program log: Instruction_data message object LoveRecord { groom: \"a\", created_on: \"0\" }\n    Program log: libstd rust_begin_panic\n    Program log: panicked at 'called `Option::unwrap()` on a `None` value', src\/lib.rs:67:98\n    Program 2qCpEJASM553foMRmd4MHRLxEFywKwvaUXRtypXJp4zv consumed 200000 of 200000 compute units\n    Program failed to complete: BPF program panicked\n    Program 2qCpEJASM553foMRmd4MHRLxEFywKwvaUXRtypXJp4zv failed: Program failed to complete\n\nCode for solana program entrypoint in Rust language is ->\nuse borsh::{ BorshDeserialize, BorshSerialize };\nuse solana_program::{\n    account_info::{ next_account_info, AccountInfo },\n    entrypoint,\n    entrypoint::ProgramResult,\n    msg,\n    program_error::ProgramError,\n    pubkey::Pubkey,\n};\nuse std::io::ErrorKind::InvalidData;\n\n#[derive(BorshSerialize, BorshDeserialize, Debug)]\npub struct LoveRecord {\n    pub groom: String,\n    pub created_on: String\n}\n\nconst DUMMY_TX_ID: &str = \"a\";\nconst DUMMY_CREATED_ON: &str = \"0\"; \/\/ milliseconds, 16 digits\npub fn get_init_love_record() -> LoveRecord {\n    LoveRecord{ groom: String::from(DUMMY_TX_ID), created_on: String::from(DUMMY_CREATED_ON) }\n}\npub fn get_init_love_records() -> Vec<LoveRecord> {\n    let mut records = Vec::new();\n    for _ in 0..10 {\n        records.push(get_init_love_record());\n    }\n    return records;\n}\n\nentrypoint!(process_instruction);\n\npub fn process_instruction(\n    program_id: &Pubkey,\n    accounts: &[AccountInfo],\n    instruction_data: &[u8]\n) -> ProgramResult {\n    let accounts_iter = &mut accounts.iter();\n    let account = next_account_info(accounts_iter)?;\n    if account.owner != program_id {\n        msg!(\"Greeted account does not have the correct program id\");\n        return Err(ProgramError::IncorrectProgramId);\n    }\n\n\n    let instruction_data_message = LoveRecord::try_from_slice(instruction_data).map_err(|err| {\n        msg!(\"Attempt to deserialize instruction data has failed. {:?}\", err);\n        ProgramError::InvalidInstructionData\n    })?;\n    solana_program::msg!(\"pass\");\n    msg!(\"pass\");\n    msg!(\"Instruction_data message object {:?}\", instruction_data_message);\n\n    let mut existing_data_messages = match <Vec<LoveRecord>>::try_from_slice(&account.data.borrow_mut()) {\n        Ok(data) => data,\n        Err(err) => {\n            if err.kind() == InvalidData {\n                msg!(\"InvalidData so initializing account data\");\n                get_init_love_records()\n            } else {\n                msg!(\"Unknown error decoding account data {:?}\", err)\n            }\n        }\n    };\n    let index = existing_data_messages.iter().position(|p| p.groom == String::from(DUMMY_TX_ID)).unwrap(); \/\/ find first dummy data entry\n    msg!(\"Found index {}\", index);\n    existing_data_messages[index] = instruction_data_message; \/\/ set dummy data to new entry\n    let updated_data = existing_data_messages.try_to_vec().expect(\"Failed to encode data.\"); \/\/ set records object back to vector data\n    msg!(\"Final existing_data_messages[index] {:?}\", existing_data_messages[index]);\n\n    \/\/ data algorithm for storing data into account and then archiving into Arweave\n    \/\/ 1. Each LoveRecord object will be prepopulated for txt field having 1 characters (length of a arweave tx).\n    \/\/ Each LoveRecordContainer will be prepopulated with 10 LoveRecord objects with dummy data.\n    \/\/ 2. Client will submit an arweave tx for each message; get back the tx id; and submit it to our program.\n    \/\/ 3. This tx id will be saved to the Solana program and be used for querying back to arweave to get actual data.\n    let data = &mut &mut account.data.borrow_mut();\n    msg!(\"Attempting save data.\");\n    data[..updated_data.len()].copy_from_slice(&updated_data);    \n    let saved_data = <Vec<LoveRecord>>::try_from_slice(data)?;\n    msg!(\"LoveRecord has been saved to account data. {:?}\", saved_data[index]);\n    msg!(\"End program.\");\n    Ok(())\n}\n\nCode to send transaction using Borsch Serialize is ->\nstatic async sayHello(data) {\n\n            let config = DappLib.getConfig();\n            console.log(data);\n\n            let DUMMY_TX_ID = \"a\";\n            let DUMMY_CREATED_ON = \"0\";\n\n            class LoveRecord {\n                constructor(fields = undefined) {\n                    this.groom = DUMMY_TX_ID;\n                    this.created_on = DUMMY_CREATED_ON; \/\/ max milliseconds in dat\n                    if (fields) {\n                        this.groom = fields.groom;\n                        this.created_on = fields.created_on;\n                    }\n                }\n            }            \n              \n        \n            const LoveRecordSchema = new Map([[\n                LoveRecord,\n                    {\n                        kind: \"struct\",\n                        fields: [\n                            [\"groom\", \"string\"],\n                            [\"created_on\", \"string\"],\n                        ],\n                    },\n                \n            ]]);\n            \n\n\n            const loveobj = new LoveRecord();\n            loveobj.groom = \"a\";\n            loveobj.created_on = \"0\";\n            const res = borsh.serialize(LoveRecordSchema,loveobj);\n\n\n            let result = await <blockchain>.put({ config }, 'greeting', res);\n            console.log(\"Pass\")\n            return {\n                type: DappLib.DAPP_RESULT_OBJECT,\n                label: 'Transaction Result',\n                result                \n            }\n        }\n\n\nCode to send and sign transaction has been taken care of.\nAny help would be really appreciated.","422":"I want to issue a token on Tron <blockchain> and I got it's template from the address below :\nhttps:\/\/github.com\/TRON-Developer-Hub\/TRC20-Contract-Template\nThe problem is that I want to set my token to automatically mint a specified number of tokens daily. (For example mint 2000 tokens per day)\nWhat should I add to the template?","423":"I'm pretty new with Substrate and Rust for <blockchain> development. I'm very interested in learning <blockchain> development. I was following this Substrate tutorial: https:\/\/substrate.dev\/docs\/en\/tutorials\/build-a-dapp\/pallet for creating a DApp. However, I keep getting errors about a dependency when running cargo build --release even though I was following every single steps in the tutorial. These are the exact error messages:\nerror[E0432]: unresolved imports `node_template_runtime::AccountId`, `node_template_runtime::AuraConfig`, `node_template_runtime::BalancesConfig`, `node_template_runtime::GenesisConfig`, `node_template_runtime::GrandpaConfig`, `node_template_runtime::SudoConfig`, `node_template_runtime::SystemConfig`, `node_template_runtime::WASM_BINARY`, `node_template_runtime::Signature`\n --> node\/src\/chain_spec.rs:3:2\n  |\n3 |     AccountId, AuraConfig, BalancesConfig, GenesisConfig, GrandpaConfig,\n  |     ^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^ no `GrandpaConfig` in the root\n  |     |          |           |               |\n  |     |          |           |               no `GenesisConfig` in the root\n  |     |          |           no `BalancesConfig` in the root\n  |     |          no `AuraConfig` in the root\n  |     no `AccountId` in the root\n4 |     SudoConfig, SystemConfig, WASM_BINARY, Signature\n  |     ^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^ no `Signature` in the root\n  |     |           |             |\n  |     |           |             no `WASM_BINARY` in the root\n  |     |           no `SystemConfig` in the root\n  |     no `SudoConfig` in the root\n\nerror[E0432]: unresolved imports `node_template_runtime::opaque`, `node_template_runtime::RuntimeApi`\n --> node\/src\/service.rs:6:35\n  |\n6 | use node_template_runtime::{self, opaque::Block, RuntimeApi};\n  |                                   ^^^^^^         ^^^^^^^^^^ no `RuntimeApi` in the root\n  |                                   |\n  |                                   could not find `opaque` in `node_template_runtime`\n\nerror[E0432]: unresolved imports `node_template_runtime::opaque`, `node_template_runtime::AccountId`, `node_template_runtime::Balance`, `node_template_runtime::Index`\n  --> node\/src\/rpc.rs:10:29\n   |\n10 | use node_template_runtime::{opaque::Block, AccountId, Balance, Index};\n   |                             ^^^^^^         ^^^^^^^^^  ^^^^^^^  ^^^^^ no `Index` in the root\n   |                             |              |          |\n   |                             |              |          no `Balance` in the root\n   |                             |              no `AccountId` in the root\n   |                             could not find `opaque` in `node_template_runtime`\n\nerror[E0433]: failed to resolve: could not find `api` in `node_template_runtime`\n  --> node\/src\/service.rs:20:25\n   |\n20 |     node_template_runtime::api::dispatch,\n   |                            ^^^ could not find `api` in `node_template_runtime`\n\nerror[E0425]: cannot find function `native_version` in crate `node_template_runtime`\n  --> node\/src\/service.rs:21:25\n   |\n21 |     node_template_runtime::native_version,\n   |                            ^^^^^^^^^^^^^^ not found in node_template_runtime\n\nerror[E0282]: type annotations needed\n  --> node\/src\/chain_spec.rs:27:33\n   |\n27 | pub fn get_account_id_from_seed<TPublic: Public>(seed: &str) -> AccountId where\n   |                                 ^^^^^^^ cannot infer type for type parameter TPublic\n\nerror[E0283]: type annotations needed\n  --> node\/src\/rpc.rs:33:5\n   |\n33 |     C: HeaderBackend<Block> + HeaderMetadata<Block, Error=<blockchain>Error> + 'static,\n   |        ^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter C\n   | \n  ::: \/home\/ubuntu\/.cargo\/git\/checkouts\/substrate-7e08433d4c370a21\/70ef0af\/primitives\/<blockchain>\/src\/backend.rs:33:41\n   |\n33 | pub trait HeaderBackend<Block: BlockT>: Send + Sync {\n   |                                         ---- required by this bound in HeaderBackend\n   |\n   = note: cannot satisfy C: std::marker::Send\n\nerror: aborting due to 7 previous errors\n\nSome errors have detailed explanations: E0282, E0283, E0425, E0432, E0433.\nFor more information about an error, try rustc --explain E0282.\nerror: could not compile `node-template`\n\nI have tried renaming the references of node_template_runtime to substrate_node_template_runtime, but still no luck. It was mentioned here in this link https:\/\/github.com\/paritytech\/substrate\/issues\/2241 that I may have to rename the node_template_runtime with my project name, which was substrate_node_template (because of following the tutorial).\nI tried updating my parity-db by running cargo update -p parity-db but no luck with that as well, although I had a lot of updates after running that.\nAny tips what might be causing this? I currently have no new leads on what to try next as I think I have followed the tutorial step by step, and I'm new to Rust and Substrate. Thank you in advanced!\nBelow are my code updates from following the tutorial:\nlib.rs\n#![cfg_attr(not(feature = \"std\"), no_std)]\n\n\/\/ Re-export pallet items so that they can be accessed from the crate namespace.\npub use pallet::*;\n\n#[frame_support::pallet]\npub mod pallet {\n    use frame_support::{dispatch::DispatchResultWithPostInfo, pallet_prelude::*};\n    use frame_system::pallet_prelude::*;\n    use sp_std::vec::Vec; \/\/ Step 3.1 will include this in `Cargo.toml`\n\n    \/\/\/ Configure the pallet by specifying the parameters and types on which it depends.\n    #[pallet::config]\n    pub trait Config: frame_system::Config {\n        \/\/\/ Because this pallet emits events, it depends on the runtime's definition of an event.\n        type Event: From<Event<Self>> + IsType<<Self as frame_system::Config>::Event>;\n    }\n\n    \/\/ Pallets use events to inform users when important changes are made.\n    \/\/ Event documentation should end with an array that provides descriptive names for parameters.\n    \/\/ https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events\n    #[pallet::event]\n    #[pallet::metadata(T::AccountId = \"AccountId\")]\n    #[pallet::generate_deposit(pub(super) fn deposit_event)]\n    pub enum Event<T: Config> {\n        \/\/\/ Event emitted when a proof has been claimed. [who, claim]\n        ClaimCreated(T::AccountId, Vec<u8>),\n        \/\/\/ Event emitted when a claim is revoked by the owner. [who, claim]\n        ClaimRevoked(T::AccountId, Vec<u8>),\n    }\n    \n    #[pallet::error]\n    pub enum Error<T> {\n        \/\/\/ The proof has already been claimed.\n        ProofAlreadyClaimed,\n        \/\/\/ The proof does not exist, so it cannot be revoked.\n        NoSuchProof,\n        \/\/\/ The proof is claimed by another account, so caller can't revoke it.\n        NotProofOwner,\n    }\n    \n    #[pallet::pallet]\n    #[pallet::generate_store(pub(super) trait Store)]\n    pub struct Pallet<T>(_);\n    \n    #[pallet::storage] \n    pub(super) type Proofs<T: Config> = StorageMap<_, Blake2_128Concat, Vec<u8>, (T::AccountId, T::BlockNumber), ValueQuery>;   \n    \n    #[pallet::hooks]\n    impl<T: Config> Hooks<BlockNumberFor<T>> for Pallet<T> {}\n    \n    \/\/ Dispatchable functions allows users to interact with the pallet and invoke state changes.\n    \/\/ These functions materialize as \"extrinsics\", which are often compared to <transactions>.\n    \/\/ Dispatchable functions must be annotated with a weight and must return a DispatchResult.\n    #[pallet::call]\n    impl<T: Config> Pallet<T> {\n        #[pallet::weight(1_000)]\n        pub(super) \n        fn create_claim(\n            origin: OriginFor<T>,\n            proof: Vec<u8>,\n        ) -> DispatchResultWithPostInfo {\n\n            \/\/ Check that the extrinsic was signed and get the signer.\n            \/\/ This function will return an error if the extrinsic is not signed.\n            \/\/ https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/origin\n            let sender = ensure_signed(origin)?;\n        \n            \/\/ Verify that the specified proof has not already been claimed.         \n            ensure!(!Proofs::<T>::contains_key(&proof), Error::<T>::ProofAlreadyClaimed);\n\n            \/\/ Get the block number from the FRAME System module.\n            let current_block = <frame_system::Module<T>>::block_number();\n\n            \/\/ Store the proof with the sender and block number.\n            Proofs::<T>::insert(&proof, (&sender, current_block));\n\n            \/\/ Emit an event that the claim was created.\n            Self::deposit_event(Event::ClaimCreated(sender, proof));\n\n            Ok(().into())\n        }\n\n        #[pallet::weight(10_000)]\n        fn revoke_claim(\n            origin: OriginFor<T>,\n            proof: Vec<u8>,\n        ) -> DispatchResultWithPostInfo {\n            \/\/ Check that the extrinsic was signed and get the signer.\n            \/\/ This function will return an error if the extrinsic is not signed.\n            \/\/ https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/origin\n            let sender = ensure_signed(origin)?;\n\n            \/\/ Verify that the specified proof has been claimed.\n            ensure!(Proofs::<T>::contains_key(&proof), Error::<T>::NoSuchProof);\n\n            \/\/ Get owner of the claim.\n            let (owner, _) = Proofs::<T>::get(&proof);\n\n            \/\/ Verify that sender of the current call is the claim owner.\n            ensure!(sender == owner, Error::<T>::NotProofOwner);\n\n            \/\/ Remove claim from storage.\n            Proofs::<T>::remove(&proof);\n\n            \/\/ Emit an event that the claim was erased.\n            Self::deposit_event(Event::ClaimRevoked(sender, proof));\n\n            Ok(().into())\n        }\n    }\n}\n\ncargo.tml\n[package]\nauthors = ['Substrate DevHub <https:\/\/github.com\/substrate-developer-hub>']\nedition = '2018'\nhomepage = 'https:\/\/substrate.dev'\nlicense = 'Unlicense'\nname = 'node-template-runtime'\nrepository = 'https:\/\/github.com\/substrate-developer-hub\/substrate-node-template\/'\nversion = '3.0.0'\n\n[package.metadata.docs.rs]\ntargets = ['x86_64-unknown-linux-gnu']\n\n[build-dependencies]\nsubstrate-wasm-builder={version = '4.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\n\n[dependencies]\n# external dependencies\ncodec = {default-features = false, features = ['derive'], package = 'parity-scale-codec', version = '2.0.0'}\nhex-literal= {optional = true, version = '0.3.1'}\n\n# Substrate dependencies\nframe-benchmarking = {default-features = false, optional = true, version = '3.1.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nframe-executive = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nframe-support = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nframe-system = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nframe-system-benchmarking = {default-features = false, optional = true, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nframe-system-rpc-runtime-api = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\npallet-aura = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\npallet-balances = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\npallet-nicks = { default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05' }\npallet-grandpa = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\npallet-randomness-collective-flip = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\npallet-sudo = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\npallet-timestamp = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\npallet-transaction-payment = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\npallet-transaction-payment-rpc-runtime-api = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-api = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-block-builder = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-consensus-aura = {default-features = false, version = '0.9.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-core = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-inherents = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-offchain = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-runtime = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-session = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\n# sp-std = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-std = { default-features = false, version = '3.0.0' }\nsp-transaction-pool = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\nsp-version = {default-features = false, version = '3.0.0', git = 'https:\/\/github.com\/paritytech\/substrate.git', tag = 'monthly-2021-05'}\n\n# local dependencies\npallet-template = {default-features = false, version = '3.0.0', path = '..\/pallets\/template'}\n\n[features]\ndefault = ['std']\nruntime-benchmarks = [\n    'frame-benchmarking',\n    'frame-support\/runtime-benchmarks',\n    'frame-system-benchmarking',\n    'frame-system\/runtime-benchmarks',\n    'hex-literal',\n    'pallet-balances\/runtime-benchmarks',\n    'pallet-template\/runtime-benchmarks',\n    'pallet-timestamp\/runtime-benchmarks',\n    'sp-runtime\/runtime-benchmarks',\n]\nstd = [\n    'codec\/std',\n    'frame-executive\/std',\n    'frame-support\/std',\n    'frame-system-rpc-runtime-api\/std',\n    'frame-system\/std',\n    'pallet-aura\/std',\n    'pallet-balances\/std',\n    'pallet-nicks\/std',\n    'pallet-grandpa\/std',\n    'pallet-randomness-collective-flip\/std',\n    'pallet-sudo\/std',\n    'pallet-template\/std',\n    'pallet-timestamp\/std',\n    'pallet-transaction-payment-rpc-runtime-api\/std',\n    'pallet-transaction-payment\/std',\n    'sp-api\/std',\n    'sp-block-builder\/std',\n    'sp-consensus-aura\/std',\n    'sp-core\/std',\n    'sp-inherents\/std',\n    'sp-offchain\/std',\n    'sp-runtime\/std',\n    'sp-session\/std',\n    'sp-std\/std',\n    'sp-transaction-pool\/std',\n    'sp-version\/std',\n]","424":"I'm kind of a starter here in the <blockchain> ecosystem, and I have some questions, but one really seems to bother me since is kind of contradictory.\nWhen you generate a block, each block contains the Header, that contains the previous hash, and hash representation of the current block data, and some other things.\nBut if every block references the previous block with the hash that was generated with the current data of that block, and every block is immutable...\nHow can every block in a <blockchain> can have every other block data if the block is immutable, and also if you change the data, the identity hash of the block immediately changes?\nAnd another one...\nWhich is the detailed process that happens when there is a transaction available, and how does it incorporates to the <blockchain>?\nMaybe this questions seems kind of dumb to some, but I've been searching and no articles or videos have solved my doubts.\nThanks to all, and have a nice day :)","425":"want to show contract information for some people but  don't want to use meta mask-before  used meta mask and <web3> and it work-now  want  when customer check our site(html\/java scrips Front end for contract) they never install meta mask and just look at information that load from contract. please help me.\nbefore i used this code but in the other browser people see error for ethereum :\n\n\n<script>\n\n            if (typeof window.ethereum !== 'undefined') \n            {\n                console.log('MetaMask is installed!');                  \n            }else{\n                console.log('MetaMask not installed!');\n                alert(\"Please install Metamsk wallet first, then try again\");\n                 }  \n            const accounts = ethereum.request({ method: 'eth_requestAccounts' });\n            const account = accounts[0];\n            const showAccount = document.querySelector('.showAccount');\n<\/script>\n\n\n\nenter image description here","426":"I am attempting to swap ETH for DAI using the Uniswap Router, but am facing a problem where the transaction gets reverted, along with the following message: Transaction has been reverted by the EVM.\nI am testing this on the Rinkeby Testnet.\nHere is the full message, along with the accompanying block information:\nTransaction has been reverted by the EVM:\n    {\n      \"blockHash\": \"0xfaa3effa60d646ef4db959cba460dac74aafd1c0b667c91758be71a735f949ce\",\n      \"blockNumber\": 9146763,\n      \"contractAddress\": null,\n      \"cumulativeGasUsed\": 1678679,\n      \"effectiveGasPrice\": \"0x3b9aca09\",\n      \"from\": \"0xbd8b57fdbd794f125a9d6a3a7bd8958d46201b37\",       \n      \"gasUsed\": 30348,\n      \"logs\": [],\n      \"logsBloom\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n      \"status\": false,\n      \"to\": \"0x7a250d5630b4cf539739df2c5dacb4c659f2488d\",\n      \"transactionHash\": \"0x7c5b33a7a751430ba0e0347a29b01a12db0b1da71a17a36deb4c773ea5ff483c\",\n      \"transactionIndex\": 6,\n      \"type\": \"0x0\"\n    }\n\n      at Object.TransactionError (..\/node_modules\/<web3>-core-helpers\/lib\/errors.js:87:21)\n      at Object.TransactionRevertedWithoutReasonError (..\/node_modules\/<web3>-core-helpers\/lib\/errors.js:98:21)\n      at ..\/node_modules\/<web3>-core-method\/lib\/index.js:394:57\n\nI will also provide the NodeJS code I am running:\nimport <web3> from \"<web3>\";\n\nconst IERC20 = require('@uniswap\/v2-periphery\/build\/IERC20.json')\nconst IPair = require('@uniswap\/v2-core\/build\/IUniswapV2Pair.json')  \nconst IFactory = require('@uniswap\/v2-core\/build\/IUniswapV2Factory.json')\nconst IRouter = require('@uniswap\/v2-periphery\/build\/IUniswapV2Router02.json')\n\nexport class <transactions>ervice {\n\nasync transact() {\n    const privKey = \"<privkey ommitted>\";\n    var <web3> = new <web3>('https:\/\/rinkeby.infura.io\/v3\/<infura-rinkeby-path>');\n    var factory = new this.<web3>.eth.Contract(IFactory.abi, \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\");\n    var address = \"0xbd8B57fdBD794f125a9D6A3A7bd8958D46201b37\";\n    var daiExchangeAddress = \"0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735\";\n    var ethExchangeAddress = '0xc778417E063141139Fce010982780140Aa0cD5Ab';\n    var rinkebyRouterAddress = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\n    var router = new this.<web3>.eth.Contract(IRouter.abi, rinkebyRouterAddress);\n    var token0 = new this.<web3>.eth.Contract(IERC20.abi, ethExchangeAddress) \/\/henceforth T0\n    var token1 = new this.<web3>.eth.Contract(IERC20.abi, daiExchangeAddress) \/\/and T1    \n    var pair = new this.<web3>.eth.Contract(IPair.abi,\n      (await factory.methods.getPair(token0.options.address, token1.options.address).call()));\n    \n      const gasPrice = await <web3>.eth.getGasPrice()\n      const gasNeeded = (0.15*10**6)*2 \n      const path = [token0.options.address,token1.options.address]\n      var amountIn = 999999999999;\n      var tx0 = {\n        to: token0.options.address, \n        gas: gasNeeded, \n        data: token0.methods.approve(router.options.address,amountIn).encodeABI()\n    }\n\n    var signedTx0 = await <web3>.eth.accounts.signTransaction(tx0, privKey);\n    var receipt0 = await <web3>.eth.sendSignedTransaction(signedTx0.rawTransaction)\n    \n    console.log(\n        `Tx mined\\n`+\n        `Tx hash: ${receipt0.transactionHash}\\n`\n        )\n    const tx1 = {\n        to: router.options.address, \n        gas: gasNeeded,\n        data: router.methods.swapExactTokensForTokens(\n            amountIn,\n            0,\n            path,\n            address,\n            (Date.now() + 250)\n        ).encodeABI()\n    }\n\n    var signedTx1 = await <web3>.eth.accounts.signTransaction(tx1, privKey);\n    var receipt1 = await <web3>.eth.sendSignedTransaction(signedTx1.rawTransaction);\n}\n\n}\n\nAs you can see, there are two <transactions> made. Anapprove and a swapExactTokensForTokens. The contract ABI can be found here. Some documentation on the Router02 is here. The contract itself can be found here. Thank you for any help you can provide.","427":"I've been using the testnet lately and I encounter issues: they reset it very often and the service is down for multiple hours and sometimes have bugs.\nShould I use the devnet? From what I've understood it's more stable and they reset it less often?\nI have a backend in js that uses the elrond-sdk-erdjs and I'm confused because there is no function that initializes the https:\/\/devnet-gateway.elrond.com only the testnet. Is there a reason?\nutils.ts\n\/\/ TODO: Adjust with respect to current terminology (localnet instead of devnet).\nfunction getDevnetProvider() {\n    return new proxyProvider_1.ProxyProvider(\"http:\/\/localhost:7950\", { timeout: 5000 });\n}\nexports.getDevnetProvider = getDevnetProvider;\nfunction getTestnetProvider() {\n    return new proxyProvider_1.ProxyProvider(\"https:\/\/testnet-gateway.elrond.com\", { timeout: 5000 });\n}\nexports.getTestnetProvider = getTestnetProvider;\nfunction getMainnetProvider() {\n    return new proxyProvider_1.ProxyProvider(\"https:\/\/gateway.elrond.com\", { timeout: 20000 });\n}","428":"I'm working on integrating Nethereum into my .NET 5 C# API and can do read queries against my chosen <blockchain> (BSC), but cannot get a SendTransactionAsync or SendRequestAsync to successfully execute.  I'm consistently getting the following exception:\nNethereum.JsonRpc.Client.RpcResponseException: 'transaction type not supported: eth_sendRawTransaction'.\nHere are code snippets of what I have tried:\n\/\/ Setup\nvar account = new Account(privateKey, chainId);\nvar rpcUrl = \"https:\/\/data-seed-prebsc-2-s2.binance.org:8545\/\";\nvar client = new RpcClient(new Uri(rpcUrl));\nvar <web3> = new <web3>(account, client);\n\nvar mediaTokenAddress = \"0x1E4d1BFDa5d55C2176E9E3e8367BAe720525a8e0\";\nvar mtSvc = new MediaTokenService(<web3>, mediaTokenAddress);\nvar mintMsg = new MintNftFunction\n{\n    FromAddress = account.Address,\n    Recipient = \"REDACTED\",\n    MetadataHash = \"TestMetaDataHash\",\n    MediaHash = \"TestMediaHash\",\n    SeasonId = 1\n};\n\n\/\/ Attempt #1:  Using C# classes generated by the Nethereum CodeGen library\nvar txReceipt = await mtSvc.MintNftRequestAndWaitForReceiptAsync(mintMsg);\n\n\/\/ Attempt #2\nvar txHandler = <web3>.Eth.GetContractTransactionHandler<MintNftFunction>();\nvar signedTx = await txHandler.SignTransactionAsync(mediaTokenAddress, mintMsg);\nvar txReceipt = await <web3>.Eth.<transactions>.SendTransaction.SendRequestAsync(signedTx);\n\n\/\/ Attempt #3\nvar txInput = mintMsg.CreateTransactionInput(mediaTokenAddress);\nvar txReceipt = await <web3>.Eth.TransactionManager.SendTransactionAsync(txInput);\n\nIs there a configuration step I'm missing?  Any help is appreciated!\nEDIT: I want to call a contract method that will change values within the contract, rather than sending currency.  So I need help figuring out how to do that.","429":"I wrote a simple smart contract but it has an error in the transfer function Member \"sub\" not found or not visible after argument-dependent lookup in uint256. what could be causing the error? is it due to the solidity version?\npragma solidity ^0.5.16;\n\ncontract Token {\n    string public name = \"Token\";\n    string public symbol = \"TK\";\n    uint256 public decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf; \/\/Track balance\n\n    constructor() public {\n        totalSupply = 1000000 * (10 ** decimals);\n        balanceOf[msg.sender] = totalSupply;\n    }\n\n     \/\/Send Token\n    function transfer(address _to, uint256 _value) public returns(bool success){\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value); \/\/error on this line\n        balanceOf[_to] = balanceOf[_to].add(_value);\n        return true;\n    } \n}","430":"I get this error where I run anchor deploy:\nDeploying workspace: http:\/\/127.0.0.1:8899\nUpgrade authority: \/home\/<user>\/.config\/solana\/id.json\nDeploying program \"faucet\"...\nProgram path: \/home\/<user>\/Workspace\/<project_path>\/target\/deploy\/xxx.so...\nError: RPC request error: cluster version query failed: error sending request for url (http:\/\/127.0.0.1:8899\/): error trying to connect: tcp connect error: Connection refused (os error 111)\nThere was a problem deploying: Output { status: ExitStatus(ExitStatus(256)), stdout: \"\", stderr: \"\" }.\n\n\nBefore deploying, I have already run the following to change the cluster config in local:\nsolana config set --url https:\/\/api.devnet.solana.com\n\nHow can I solve the problem?","431":"I tried command truffle migrate --reset, but it is unable to connect to Ganche\nhere is the error:\n\nThis is the code inside truufle-config.js file:\n\nAnd these are the RPC server details:","432":"Idle (0 peers), best: #0 (0xed0a\u00e2\u0080\u00a62e72), finalized #0 (0xed0a\u00e2\u0080\u00a62e72), \u00e2\u00ac\u0087 0 \u00e2\u00ac\u0086 0\nIdle (0 peers), best: #0 (0xed0a\u00e2\u0080\u00a62e72), finalized #0 (0xed0a\u00e2\u0080\u00a62e72), \u00e2\u00ac\u0087 0 \u00e2\u00ac\u0086 0\n\nI am getting above output if i run (.\/target\/release\/substrate --chain=staging) this command in substrate full node.\nI also tried to run a private network for staging , the result was same.\nIn either of the case the network is not producing the blocks.\nCan I get any guide how to use staging?\nNeed to run in production network and I have seen that for production purposes we should use --staging but not --dev and --local. Is this right?","433":"I want to create a transaction receipt in which I can add all transaction detail like to and from address, the transaction hash, timestamp to my web page and download in any format like pdf\/CSV.\nI search about this and got this link http:\/\/peterchauyeg.github.io\/dao-datascraper\/. It works fine but needs a console to start npm.","434":"What is the maximum size of data we can \u00e2\u0080\u0098GET\u00e2\u0080\u0099 by using adapters within chainlink? The data I am planning to use maybe JSON data, an array, or a simple text file.","435":"I am looking more specifically at <web3>, in the aim of creating a script to send off <blockchain> <transactions> four times - three times before the intended 'starting block', and then finally sending one when it reaches the starting block. Firstly, i produced the first code, my thinking behind this is that it checks the latest_block every 0.1 seconds, in turn running thorough the if statements, and if the latest_block is either of the 4 defined variables, it will run the function \"run_wallets\". However, from trialling it, it works correctly for the first block which it encounters (the three_before variable) and then stops checking the statements once it has found one 'True' statement.\nstarting_block = 10079310\none_before = 10079309\ntwo_before = 10079308\nthree_before = 10079307\n\n\ndef update():\n    while True:\n\n        time.sleep(0.1)\n        latest_block = <web3>.eth.blockNumber\n        print(latest_block)\n\n        if latest_block == three_before:\n            run_wallets()\n\n        elif latest_block == two_before:\n            run_wallets()\n\n        elif latest_block == one_before:\n            run_wallets()\n\n        elif latest_block == starting_block:\n            run_wallets()\n\nupdate()\n\nThis is understandable as the loop will stop once it has a 'true' statement. I therefore tried to create a list, and make a loop that will keep running until the list is empty. So this time, once the first IF statement was true, it would remove the variable from the list so that it is no longer in the list, and therefore will run the wallets on the other 3 blocks until the list is empty. I had a go and produced the following, which still isn't working..\nstarting_block = 10079310\none_before = 10079309\ntwo_before = 10079308\nthree_before = 10079307\n\n\nlist = [ three_before, two_before, one_before, starting_block ]\n\ndef update():\n      while list:\n\n        time.sleep(0.1)\n        latest_block = <web3>.eth.blockNumber\n        print(latest_block)\n\n        if latest_block in list:\n            run_wallets()\n            list.remove(three_before)\n\n        if latest_block in list:\n            run_wallets()\n            list.remove(two_before)\n\n        if latest_block in list:\n            run_wallets()\n            list.remove(one_before)\n\n        if latest_block in list:\n            run_wallets()\n            list.remove(starting_block)\n\nupdate()\n\nTherefore overall, can someone show me what I'm doing wrong and kindly point me in the right direction?","436":"I'm trying to run some analysis on cryptocurrency(e.g. Bitcoin, Ethereum) data but having trouble finding data sources. For example, I'd like to collect transaction data such as input address, output address, transaction time, transaction amount, etc. for Ethereum.\nI've found that I can access Ethereum data with <web3>py but is it possible to get data for \"ALL\" <transactions> that have made recently in the entire Ethereum network, not just the <transactions> connected to my own wallet(address)? For example, I'd like to get data on all Ethereum transaction occurred today.\nAlso, do I must have my own Ethereum wallet(address) in order to access their data with <web3>py? I wonder whether I need a specific address as a starting point or I can just scrape the data without creating a wallet.\nThanks.","437":"I am trying to create multiple sell orders for my NFTs on the rinkeby testnet. I am using the  script provided by OpenSea from this repo called sell.js\nThe issue is after I run the script, the method createSellOrder seems to run because I get the following output on my terminal but nothing else appears or happens. \nThe first two lines are my own logging and the third line is what I guess is from createSellOrder.\nMy question is, what is the expected outcome\/output of createSellOrder and how can I know it succeeded? For me it just prints the last line: creating proxy for acc... and stops.\nWhen I check opensea, it doesn't have my nfts listed for sale so it obviously didn't work...","438":"I am running a <geth> node on one machine and trying to connect to its RPC (http:\/\/127.0.0.1:8545) on my Metamask from another machine but in Metamask it always gives the following error: \"Could not fetch chain ID. Is your RPC URL correct?\"\nI can connect to that RPC just fine on the same machine that is running the node, but not the other machine.\nI'm running the <geth> node with these parameters <geth> --datadir D:\\Programs\\Ethereum --http\nI have already tried opening these ports in firewall on both machines inbound\/outbound tcp\/udp but nothing helped.","439":"We have developed the front end to buy and sell Binance chain tokens. It's working fine on Web Metamask extension when interacting with smart contract. We are using infura API to get connectwallet interface for other wallets on mobile. It's connecting successfully but the transaction is not getting confirmed. Showing this error when I press confirm button, getting Internal JSON-RPC error\nWe are getting this issue\nThis is the function we are running on confirm:\nasync function change_transfer() {\n  if (globalObj.typeTxn == \"a\") {\n    var receiver = payableAmountObjectt.address_to;\n  } else {\n    var receiver = receiverCoin;\n  }\n\n  console.log(\"receiver\", receiver);\n\n  \/\/ check address is valid or if not then catch\n  await <web3>Global.utils.toChecksumAddress(receiver);\n\n  if (selectedAccount.toLowerCase() == receiver.toLowerCase()) {\n    swal(\"You cannot transfer to same address\").then((value) => {});\n    toastr.error(\"You cannot transfer to same address\");\n    return false;\n  }\n\n  \/\/ const balanceOf_ = await <web3>Global.eth.getBalance(selectedAccount);\n  const balanceOf_ = await getBnbBalance(selectedAccount);\n  console.log(\"balanceOf_\", balanceOf_);\n  var balance_ = 0;\n  if (balanceOf_ > 0) {\n    balance_ = balanceOf_ \/ 1e18;\n  }\n  \/\/ console.log(balance_);\n\n  var minBal = 0.001;\n  console.log(\"balance : \", balance_);\n  console.log(\"min balance : \", minBal);\n\n  if (balance_ < minBal) {\n    swal(\n      \"Balance Low\",\n      \"You must have BNB \" + minBal + \" for transaction.\"\n    ).then((value) => {});\n    return false;\n  }\n\n  \/\/ Get connected chain id from Ethereum node\n  const chainId = await <web3>Global.eth.getChainId();\n  \/\/ Load chain information over an HTTP API\n  const chainData = evmChains.getChain(chainId);\n  console.log(\"chainData = \", chainData.name);\n  console.log(\"chainData = \", chainData);\n\n  var network = chainData.networkId;\n  console.log(network);\n  payableAmountObjectt.network = network;\n  if (checkNetwork(network) == false) {\n    return false;\n  }\n\n  const contract = new <web3>Global.eth.Contract(abi, contractAddress);\n\n  \/\/ var weiAmount = payableAmountObjectt.coin_amount * 1e9;\n  var weiAmount = payableAmountObjectt.coin_amount * decimalVal;  var weiAmount2 = weiAmount;\n  var value = weiAmount2;\n  value = toFixed(value);\n\n  payableAmountObjectt.coin_amount_raw = value;\n  var from_account = selectedAccount;\n\n  const balanceOf = await contract.methods.balanceOf(from_account).call();\n  console.log(\"value\", value);\n  console.log(\"balanceOf\", balanceOf);\n  if (value > balanceOf) {\n    swal(\"Balance Low\", \"Your Token balance is low.\").then((value) => {});\n    toastr.error(\"Your Token balance is low.\");\n    return false;\n  }\n\n  payableAmountObjectt.from_address = from_account;\n  payableAmountObjectt.to_address = receiver;\n\n  console.log(\"from_account\", from_account);\n  console.log(\"receiver\", receiver);\n  console.log(\"value\", value);\n  $(\".payBtn\").hide();\n  $(\".payBtn\").attr(\"disabled\", true);\n  $(\"#showLoaderAjax<web3>Modal\").show();\n\n  var gasPrice_gwei = \"10\";\n\n  var estimateGasRaw = await contract.methods\n    .transfer(receiver, value.toString())\n    .estimateGas({\n      from: from_account,\n      gasPrice: await <web3>Global.utils.toHex(\n        <web3>Global.utils.toWei(gasPrice_gwei, \"gwei\")\n      ),\n    });\n\n  var estimateGas = estimateGasRaw;\n  console.log(\"estimateGas\", estimateGas);\n\n  const transfer = await contract.methods\n    .transfer(receiver, value.toString())\n    .send({\n      from: from_account,\n      gas: await <web3>Global.utils.toHex(estimateGas), \/\/ Raise the gas limit to a much higher amount\n      gasLimit: await <web3>Global.utils.toHex(800000), \/\/ Raise the gas limit to a much higher amount\n      gasPrice: await <web3>Global.utils.toHex(\n        <web3>Global.utils.toWei(gasPrice_gwei, \"gwei\")\n      ),\n\n      value: \"0x0\",\n    })\n    .on(\"transactionHash\", function (hash) {\n      console.log(\"transactionHash\", hash);\n      $(\"#showLoaderAjax<web3>Modal\").hide();\n      toastr.success(hash);\n      payableAmountObjectt.hash = hash;\n      if (payableAmountObjectt.type == \"admin\") {\n        transferTokenUpdate(hash);\n      } else {\n        transferTokenUpdate_purchase(hash);\n      }\n    })\n    .on(\"receipt\", function (receipt) {\n      console.log(\"receipt\", receipt);\n    })\n    .on(\"confirmation\", function (confirmationNumber, receipt) {\n      console.log(\"confirmation\", confirmationNumber, receipt);\n    })\n    .on(\"error\", function (error, receipt) {\n      console.log(\"error\", error, receipt);\n      console.log(\"error.message\", error.message);\n      console_(error.message, \"status\");\n      toastr.info(error.message);\n\n      if (\n        error.message == \"User rejected the transaction\" ||\n        error.message ==\n          \"MetaMask Tx Signature: User denied transaction signature.\"\n      ) {\n        $(\".payBtn\").show();\n        $(\".payBtn\").attr(\"disabled\", false);\n        $(\"#showLoaderAjax<web3>Modal\").hide();\n      }\n    });\n}","440":"My question is:\n\nHow do i capture the current block number?\nHow do I convert the current block number to a u32?\n\nI am trying to write a function inside the template pallet that takes a u32 (input parameter) and adds that number to the current block number.\n#[pallet::weight(10_000 + T::DbWeight::get().writes(1))]\n    pub fn revoke(origin: OriginFor<T>, number: u32) -> DispatchResult {\n        let caller = ensure_signed(origin)?;\n\n        \/\/ GET CURRENT BLOCK NUMBER\n        \/\/ CONVERT CURRENT BLOCK NUMBER TYPE TO U32\n        \/\/ TARGET_BLOCK = CURRENT_BLOCK_NUMBER + NUMBER\n        \/\/ STORE TARGET_BLOCK\n\n        Ok(())\n    }\n\nI have read the following document (and many more), but I cannot get the code to work.\n\nhttps:\/\/substrate.dev\/rustdocs\/latest\/sp_runtime\/offchain\/storage_lock\/trait.BlockNumberProvider.html#tymethod.current_block_number\nhttps:\/\/substrate.dev\/rustdocs\/latest\/frame_system\/pallet\/struct.Pallet.html#method.current_block_number\nHow can I convert the block number into the Integer type in substrate module?\nhttps:\/\/medium.com\/paritytech\/utxo-on-substrate-7f0e0576768e\n\nThis is a list of my attempts:\nlet y = System::block_number() as u32;\nlet z = sp_std::alloc::System::block_num() as u32;\nlet p = Self::block_number();\nlet h = BlockNumberProvider::current_block_number();\nlet h: BlockNumberFor<T> = BlockNumberProvider::current_block_number();\nlet p = BlockNumberProvider::current_block_number() as u32;\ntarget_block = target_block + p;\nlet x = <T as sp_runtime::offchain::storage_lock::BlockNumberProvider>::current_block_number();\nlet x = <T as BlockNumberProvider>::current_block_number();\nlet j = frame_system::Pallet<Config>::block_number();\ntarget_block = target_block + h;\nlet y = Self::BlockNumber;\nlet yy = <T as frame_system::Config>::BlockNumber;\nlet xc = frame_system::block_number();\nlet current_block = System::block_number()\n.saturated_into::<u64>()\n.saturating_sub(1);\nlet u = Number::<T>::get(T::BlockNumber);\nlet w = T::BlockNumber::block_number();\nlet n = <T as frame_system::Config>::BlockNumber::block_number();\nlet m = frame_system::<T>::BlockNumber;\nlet un = BlockNumberFor;\nlet current_block_number: u32 = <frame_system::Pallet<T>>::block_number();\nlet now_block_number = <frame_system::Module<T>>::block_number();\nlet now_block_number = <frame_system::Pallet<T>>::block_number();\nlet now_block_number_b: <T as frame_system::Config>::BlockNumber = <frame_system::Pallet<T>>::block_number();\nT::BlockNumber;\nlet xp = now_block_number_b + 10;\nlet h: BlockNumberFor<T> = BlockNumberProvider::current_block_number();\nlet x: <T as Config>::BlockNumber = BlockNumberProvider::current_block_number();\nlet x = frame_system::Config::block_number();\nlet c = block_number();\nlet v = <T as frame_system::Config>::BlockNumber;\nlet x = block;\nlet q = block.into();\nlet x: Number<T> = block.into();\nlet f: u32 = x.into();\nlet v = 10.into();\nlet w: BlockNumber_<T> = block.into();\nlet target_block = target_block + f;\nlet current_block_number: Number<T> = <frame_system::Pallet<T>>::block_number();\nlet h: BlockNumberFor<T> = BlockNumberProvider::current_block_number();\nlet x: BlockNumber_<T> = frame_system::pallet::Pallet::current_block_number();\nlet y: BlockNumberFor<T> = frame_system::pallet::Pallet::current_block_number();\nlet z: T::BlockNumber = frame_system::pallet::Pallet::current_block_number();\n\nI would appreciate any help you can offer.","441":"I want to fork Binance smart chain so that i can have a whole new <blockchain>.\nBy this i mean it will have a new name, ticker, users will be able to develop on top of it just like BSC.\nHow do i go about it?","442":"Good day, everyone!\nI'm currently developing smart contracts and using Chainlink oracles to obtain external data; I've searched the Chainlink market for oracle addresses and job ids, but no oracles are currently responding or providing data in kovan, rinkeyby testnetwork, i.e. when I fetch a URL in a smart contract, Chainlink oracles are failing to provide any data to the smart contract. I'm not sure how to fix this problem, and I'm not sure if the problem is for me or any one else?","443":"I am creating a <blockchain> for a school project, and I have to use MySQL, but I am getting some errors when I try to add a foreign key that refers to the same table, what should I do to fix it?\nCREATE DATABASE IF NOT EXISTS <blockchain>;\nuse <blockchain>;\n\nCREATE TABLE IF NOT EXISTS Users(\n    Public_Key CHAR(64) PRIMARY KEY,\n    Hashed_Private_Key CHAR(64) UNIQUE KEY NOT NULL,\n    Balance FLOAT,\n    <transactions>_Done INT,\n    Rewards_Won INT\n);\n\nCREATE TABLE IF NOT EXISTS Blocks(\n    Block_ID CHAR(4) PRIMARY KEY,\n    Previous_Block_Hash CHAR(64),\n    <transactions> JSON,\n    Nonce VARCHAR(64),\n    Block_Hash CHAR(64),\n    Submitter_ID CHAR(64)\n);\n\n\nCREATE TABLE IF NOT EXISTS Unmined_<transactions>(\n    Transaction_ID CHAR(4) PRIMARY KEY,\n    Sender_ID CHAR(64) NOT NULL,\n    Reciever_ID CHAR(64) NOT NULL,\n    Amount FLOAT NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS Mined_<transactions>(\n    Transaction_ID CHAR(4) PRIMARY KEY,\n    Sender_ID CHAR(64) NOT NULL,\n    Reciever_ID CHAR(64) NOT NULL,\n    Amount FLOAT NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS All_<transactions>(\n    Transaction_ID CHAR(4) PRIMARY KEY,\n    Sender_ID CHAR(64) NOT NULL,\n    Reciever_ID CHAR(64) NOT NULL,\n    Amount FLOAT NOT NULL,\n    Mined BOOLEAN NOT NULL\n);\n\nALTER TABLE Unmined_<transactions> ADD FOREIGN KEY (Sender_ID) REFERENCES Users(Public_Key);\nALTER TABLE Unmined_<transactions> ADD FOREIGN KEY (Reciever_ID) REFERENCES Users(Public_Key);\n\nALTER TABLE Mined_<transactions> ADD FOREIGN KEY (Sender_ID) REFERENCES Users(Public_Key);\nALTER TABLE Mined_<transactions> ADD FOREIGN KEY (Reciever_ID) REFERENCES Users(Public_Key);\n\nALTER TABLE All_<transactions> ADD FOREIGN KEY (Sender_ID) REFERENCES Users(Public_Key);\nALTER TABLE All_<transactions> ADD FOREIGN KEY (Reciever_ID) REFERENCES Users(Public_Key);\n\n\nALTER TABLE Blocks ADD FOREIGN KEY (Previous_Block_Hash) REFERENCES Blocks(Block_Hash);\nALTER TABLE Blocks ADD FOREIGN KEY (Submitter_ID) REFERENCES Users(Public_Key);\n\nThe 2nd last Alter Statement is causing the error, i.e.\nALTER TABLE Blocks ADD FOREIGN KEY (Previous_Block_Hash) REFERENCES Blocks(Block_Hash);\nRunning this line is as follows:\nOutput\nAll other statements work well","444":"I have an example running which deposits the Aave token into Aave.  I'm using the Code Contracts examples provided by Aave v2 github\n\/\/ Fork Kovan\nawait hre.network.provider.request({\n    method: 'hardhat_reset',\n    params: [{ forking: { jsonRpcUrl: KOVAN_JSON_RPC } }],\n});\n\n\/\/ Act like AAVE_HOLDER\nawait hre.network.provider.request({\n    method: 'hardhat_impersonateAccount',\n    params: [AAVE_HOLDER],\n});\nconst signer = await hre.ethers.getSigner(AAVE_HOLDER);\nconsole.log('signer:', signer.address);\n\n\/\/ AAVE token on Kovan network\nconst aavetoken = IERC20__factory.connect(AAVE_TOKEN_ADDRESS, signer);\nconsole.log('token balance:', (await aavetoken.balanceOf(signer.address)).toString());\n\nconst MyV2CreditDelegation = new MyV2CreditDelegation__factory(signer);\nconst delegation = await MyV2CreditDelegation.deploy({ gasLimit: 1e7 });\nconsole.log('delegation:', delegation.address);\n\n\/\/ Set the allowance higher than the deposit amount\n\/\/ so we know we can make multiple <transactions>\nlet allowance = 100000\nlet despositAmount = 10;\n\nawait aavetoken.approve(delegation.address, allowance);\nconsole.log('allowance:', (await aavetoken.allowance(signer.address, delegation.address, { gasLimit: 1e6 })).toString());\n\nconst depositTrans = await delegation.depositCollateral(aavetoken.address, despositAmount, true, { gasLimit: 1e6 });\nconsole.log('depositTrans:', depositTrans.hash);\nconst depositReceipt = await depositTrans.wait();\n\nDeposit works fine,  However when I try to withdraw:\ntry  {\n    var withdrawTrans = await delegation\n        .withdrawCollateral(aavetoken.address,  { gasLimit: 1e6 })\n\n    console.log('withdrawTrans:', withdrawTrans.hash);\n    const withdrawReceipt = await withdrawTrans.wait();\n}\ncatch (err) {\n    console.log('Error:' + err);\n}\n\nI get an error:\n\nTransaction reverted: function returned an unexpected amount of data\n\nI'm pretty new to hardhat, I'm now sure of how to debug this any further.\nHow can I withdraw from Aave?","445":"Unable to launch Storage.sol on BSC Testnet but it works on Ropsten and I have no idea why. Using Brave Browser and Metamask however switching browsers and wallets doesn't seem to help. Have successfully launched on Polygon's Mumbai network so it has to be BSC Testnet, but I can see other people posting new contracts on the test explorer :\/. Any ideas on how to resolve this?\n    \/\/ SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n\/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n *\/\ncontract Storage {\n\n    uint256 number;\n\n    \/**\n     * @dev Store value in variable\n     * @param num value to store\n     *\/\n    function store(uint256 num) public {\n        number = num;\n    }\n\n    \/**\n     * @dev Return value \n     * @return value of 'number'\n     *\/\n    function retrieve() public view returns (uint256){\n        return number;\n    }\n}","446":"I am new to the field of <blockchain> and ethereum. I have been trying to create a simple testing network using truffle and ganache where I created a new workplace in truffle and tried to build a quick react frontend app to connect to the ethereum using <web3>.\nEverything works fine. I did install the MetaMask and created a new network to the port:7545 and every change that happened to the ganache affected the MetaMask.\nThis is the code of <web3>js.\nconst <web3> = new <web3>(\"http:\/\/127.0.0.1:7545\")\n    const accounts = await <web3>.eth.getAccounts()\n    setaccount(accounts)\n    const todoList = new <web3>.eth.Contract(TodoList.abi, ADRESS);\n    console.log('here the todo contract');\n    console.log(todoList);\n    setTodoList(todoList)\n    const taskCount = await todoList.methods.taskCount().call()\n\nThe contacts show fine and the account also.\nbut when I tried to call the function, it showed me this error which confused me.\nUncaught (in promise) Error: Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node that is not fully synced.\n    at ABICoder.push..\/node_modules\/<web3>-eth-abi\/lib\/index.js.ABICoder.decodeParametersWith (index.js:297)\n    at ABICoder.push..\/node_modules\/<web3>-eth-abi\/lib\/index.js.ABICoder.decodeParameters (index.js:284)\n    at Contract.push..\/node_modules\/<web3>-eth-contract\/lib\/index.js.Contract._decodeMethodReturn (index.js:469)\n    at Method.outputFormatter (index.js:759)\n    at Method.push..\/node_modules\/<web3>-core-method\/lib\/index.js.Method.formatOutput (index.js:147)\n    at sendTxCallback (index.js:523)\n    at index.js:307\n    at XMLHttpRequest.request.onreadystatechange (index.js:98)\npush..\/node_modules\/<web3>-eth-abi\/lib\/index.js.ABICoder.decodeParametersWith @ index.js:297\npush..\/node_modules\/<web3>-eth-abi\/lib\/index.js.ABICoder.decodeParameters @ index.js:284\npush..\/node_modules\/<web3>-eth-contract\/lib\/index.js.Contract._decodeMethodReturn @ index.js:469\noutputFormatter @ index.js:759\npush..\/node_modules\/<web3>-core-method\/lib\/index.js.Method.formatOutput @ index.js:147\nsendTxCallback @ index.js:523\n(anonymous) @ index.js:307\nrequest.onreadystatechange @ index.js:98\nasync function (async)\nload<blockchain>Date @ App.js:36\n(anonymous) @ App.js:20\ninvokePassiveEffectCreate @ react-dom.development.js:23487\ncallCallback @ react-dom.development.js:3945\ninvokeGuardedCallbackDev @ react-dom.development.js:3994\ninvokeGuardedCallback @ react-dom.development.js:4056\nflushPassiveEffectsImpl @ react-dom.development.js:23574\nunstable_runWithPriority @ scheduler.development.js:468\nrunWithPriority$1 @ react-dom.development.js:11276\nflushPassiveEffects @ react-dom.development.js:23447\n(anonymous) @ react-dom.development.js:23324\nworkLoop @ scheduler.development.js:417\nflushWork @ scheduler.development.js:390\nperformWorkUntilDeadline @ scheduler.development.js:157\n\n\nand this is my solidiy contracts\npragma solidity ^0.5.0;\n\ncontract TodoList {\n  uint public taskCount = 0;\n\nconstructor() public {\n     createTask(\"Check out dappuniversity.com\");\n   }\n\n  struct Task {\n    uint id;\n    string content;\n    bool completed;\n  }\n\n  mapping(uint => Task) public tasks;\n\n  function createTask(string memory _content) public {\n    taskCount ++;\n    tasks[taskCount] = Task(taskCount, _content, false);\n  }\n\n}\n\nand this is the ABI.\n[\n    {\n        \"inputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"taskCount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"tasks\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"id\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"content\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"completed\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_content\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"createTask\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\nand this is the contract that I get from <web3> when connecting to the abi and address.\nContract\nBatchRequest: \u00c6\u0092 ()\nclearSubscriptions: \u00c6\u0092 (keepIsSyncing)\ncurrentProvider: (...)\ndefaultAccount: (...)\ndefaultBlock: (...)\ndefaultChain: (...)\ndefaultCommon: (...)\ndefaultHardfork: (...)\nevents: {allEvents: \u00c6\u0092}\nextend: \u00c6\u0092 (extension)\ngivenProvider: Proxy {_events: {\u00e2\u0080\u00a6}, _eventsCount: 1, _maxListeners: 100, _log: a, _state: {\u00e2\u0080\u00a6}, \u00e2\u0080\u00a6}\nhandleRevert: (...)\nmethods:\n0x8d977672: \u00c6\u0092 ()\n0x111002aa: \u00c6\u0092 ()\n0xb6cb58a5: \u00c6\u0092 ()\ncreateTask: \u00c6\u0092 ()\ncreateTask(string): \u00c6\u0092 ()\ntaskCount: \u00c6\u0092 ()\ntaskCount(): \u00c6\u0092 ()\ntasks: \u00c6\u0092 ()\ntasks(uint256): \u00c6\u0092 ()\n[[Prototype]]: Object\noptions: {}\nproviders: {WebsocketProvider: \u00c6\u0092, HttpProvider: \u00c6\u0092, IpcProvider: \u00c6\u0092}\nsetProvider: \u00c6\u0092 ()\nsetRequestManager: manager => {\u00e2\u0080\u00a6}\ntransactionBlockTimeout: (...)\ntransactionConfirmationBlocks: (...)\ntransactionPollingTimeout: (...)\n_address: \"0x8c0199C5D6e4B22A1948358F1bf48dD095Ae5300\"\n_jsonInterface: (4) [{\u00e2\u0080\u00a6}, {\u00e2\u0080\u00a6}, {\u00e2\u0080\u00a6}, {\u00e2\u0080\u00a6}]\n_provider: HttpProvider {withCredentials: false, timeout: 0, headers: undefined, agent: undefined, connected: true, \u00e2\u0080\u00a6}\n_requestManager: RequestManager {provider: HttpProvider, providers: {\u00e2\u0080\u00a6}, subscriptions: Map(0)}\nget currentProvider: () => { return pkg._provider; }\nset currentProvider: value => { return pkg.setProvider(value); }\nget defaultAccount: \u00c6\u0092 ()\nset defaultAccount: \u00c6\u0092 (val)\nget defaultBlock: \u00c6\u0092 ()\nset defaultBlock: \u00c6\u0092 (val)\nget defaultChain: \u00c6\u0092 ()\nset defaultChain: \u00c6\u0092 (val)\nget defaultCommon: \u00c6\u0092 ()\nset defaultCommon: \u00c6\u0092 (val)\nget defaultHardfork: \u00c6\u0092 ()\nset defaultHardfork: \u00c6\u0092 (val)\nget handleRevert: \u00c6\u0092 ()\nset handleRevert: \u00c6\u0092 (val)\nget transactionBlockTimeout: \u00c6\u0092 ()\nset transactionBlockTimeout: \u00c6\u0092 (val)\nget transactionConfirmationBlocks: \u00c6\u0092 ()\nset transactionConfirmationBlocks: \u00c6\u0092 (val)\nget transactionPollingTimeout: \u00c6\u0092 ()\nset transactionPollingTimeout: \u00c6\u0092 (val)\n[[Prototype]]: Contract\n\nWhen I did the truffle version I get this\nTruffle v5.4.3 (core: 5.4.3)\nSolidity v0.5.16 (solc-js)\nNode v14.17.0\n<web3>.js v1.5.0\n\nand I installed the <web3> version 1.5.1 and also tried 1.5.0 but still faced the same error.\nthis is the tutorial that I am following https:\/\/www.dappuniversity.com\/articles\/ethereum-dapp-react-tutorial\nEdit : I am  using  the Ganache GUI and my Metamask custom sitting is.\n\nThe Issue : I used the address of the node instead of the address of the contract that after I applied the truffle migrate --reset all .","447":"I'm looking for a <blockchain> which has a modifiable consensus algorithm. Does anyone know if there are some available or should I start from scratch creating one? Thanks in advance for your help ;)","448":"This question already has answers here:\n                        \n                    \n                \n            \n                    \n                        How can I return an array of struct in solidity?\n                            \n                                (3 answers)\n                            \n                    \n                Closed 1 year ago.\n        \n\n\n    \n\nI'm learning about the struct data type and I want to know if:\n\nit's possible to return multiple instances of a struct object at the same time.\nan instance declared locally (inside a function) can return its value.\n\nI want to get the details of all the instances (book1, book2, and book3) returned to me at the SAME TIME. I ran the code and could only get the details for ONE INSTANCE at A GIVEN TIME. So, the two instances I declared at state-level (book1 and book2) returned values WHEN CALLED SEPARATELY. However, book3, which was declared locally, didn't return its value when called. What I got was a declaration error (DeclarationError: Undeclared Identifier).\n\nHow do I return all the values to<geth>er?\nWhy is book3 not returning its value? Can't a struct have a local instance?\n\npragma solidity >=0.4.0 <0.9.0;\n\n\/\/ Creating a struct contract\ncontract MyStruct {\n\n    \/\/ Declaring a struct\n    struct Book {\n        string name;\n        string writer;\n        uint id;\n        bool available;\n    }\n    \n    \/\/ Declaring a structure object, book1 (state variable of type struct; no values)\n    Book book1;\n    \n    \/\/ Assigning values to fields for another struct instance, book2\n    Book book2 = Book (\"Building Ethereum DApps\", \"Roberto Infante\", 2, false);\n\n\n    \/\/ Defining a function to set values for the fields for structures\n    function setBookDetails() public {\n        \/\/ Assigning values to book 1 (state struct above)      \n        book1 = Book(\"Introducing Ethereum and Solidity\", \"Chris Dannen\", 1, true);\n\n        \/\/ Defining a new book instance locally, book3 (local struct)\n        Book memory book3 = Book (\"Solidity Programming Essentials\", \"Ritesh Modi\", 3, true);\n    }\n        \n    \/\/ Defining function to print book1 details\n    function getBookDetails() public view returns (string memory, string memory, uint, bool) {\n          return (book1.name, book1.writer, book1.id, book1.available);\n        \/\/return (book2.name, book2.writer, book2.id, book2.available);\n        \/\/return (book3.name, book3.writer, book3.id, book3.available);\n    }\n}","449":"I have one VM (ubuntu) that runs a <blockchain> network (<hyperledger> Fabric) and another VM acts as a client and executes queries, such as retrieving and inserting data using Java SDK.\nI was able to retrieve the data in <blockchain> but I could not insert any new data into the <blockchain> network. I received \"No valid proposal responses received. 2 peer error responses.\"\nHere is my connection file and the results I received.\nConnection File:\n{\n    \"name\": \"test-network-org1\",\n    \"version\": \"1.0.0\",\n    \"client\": {\n        \"organization\": \"Org1\",\n        \"connection\": {\n            \"timeout\": {\n                \"peer\": {\n                    \"endorser\": \"300\"\n                }\n            }\n        }\n    },\n    \"organizations\": {\n        \"Org1\": {\n            \"mspid\": \"Org1MSP\",\n            \"peers\": [\n                \"peer0.org1.example.com\",\n                 \"peer0.org2.example.com\"\n            ],\n            \"certificateAuthorities\": [\n                \"ca.org1.example.com\",\n                \"ca.org2.example.com\"\n            ]\n        }\n    },\n    \"peers\": {\n        \"peer0.org1.example.com\": {\n            \"url\": \"grpcs:\/\/10.0.2.60:7051\",\n            \"tlsCACerts\": {\n                \"pem\": \"-----BEGIN CERTIFICATE-----\\nMIICJzCCAc2gAwIBAgIULb7\/j\/0GlwSPTEwcuD3ZwYqVhMMwCgYIKoZIzj0EAwIw\\ncDELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMQ8wDQYDVQQH\\nEwZEdXJoYW0xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMjEwODAzMTQwODAwWhcNMzYwNzMwMTQwODAw\\nWjBwMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGggQ2Fyb2xpbmExDzANBgNV\\nBAcTBkR1cmhhbTEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEcMBoGA1UEAxMT\\nY2Eub3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGdV\\nLG2bjY03kHqdHyO\/YUY0LGcs5LPWoL2a9Qf+abycQWBblGS+OjoIcQy+tpjaGfze\\nUUzX7PKCvu66MBA9ZFCjRTBDMA4GA1UdDwEB\/wQEAwIBBjASBgNVHRMBAf8ECDAG\\nAQH\/AgEBMB0GA1UdDgQWBBRoa\/rYznEUSQ6wxa3QBnYoJE0JiTAKBggqhkjOPQQD\\nAgNIADBFAiEA8U5EZTDg4gRvEk1t5P17AN33KBBEv11KMF0INZLSFOICIHIWnxsl\\naYsm5XHK0BtzO5esdrH7eAuSVfEm3IYR9lV4\\n-----END CERTIFICATE-----\\n\"\n            },\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"peer0.org1.example.com\",\n                \"hostnameOverride\": \"peer0.org1.example.com\"\n            }\n        },\"peer0.org2.example.com\": {\n            \"url\": \"grpcs:\/\/10.0.2.60:9051\",\n            \"tlsCACerts\": {\n                \"pem\": \"-----BEGIN CERTIFICATE-----\\nMIICHTCCAcWgAwIBAgIUa41oI62aIbM2s5nfGO\/sU6cNDukwCgYIKoZIzj0EAwIw\\nbDELMAkGA1UEBhMCVUsxEjAQBgNVBAgTCUhhbXBzaGlyZTEQMA4GA1UEBxMHSHVy\\nc2xleTEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEcMBoGA1UEAxMTY2Eub3Jn\\nMi5leGFtcGxlLmNvbTAeFw0yMTA4MDMxNDA4MDBaFw0zNjA3MzAxNDA4MDBaMGwx\\nCzAJBgNVBAYTAlVLMRIwEAYDVQQIEwlIYW1wc2hpcmUxEDAOBgNVBAcTB0h1cnNs\\nZXkxGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2NhLm9yZzIu\\nZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQ4jCi925YlDrwL\\nrIBljitpf7Gd8c5RIJBw9gn72zRc2+9h89l7a0U29bXcbKeKIKYNJ1lCghvpQl8o\\nqhSOTkt9o0UwQzAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH\/BAgwBgEB\/wIBATAd\\nBgNVHQ4EFgQUUTIWxF1E1xpGqm01rUJLNNIzG0kwCgYIKoZIzj0EAwIDRgAwQwIf\\nejZRhC3VLaq6pWz9SZf6LXfvhqSHpJ+XjU4rIByh6QIgQFu2dD4E0PprVueMt4Wk\\nmox6VIXeNgISzOn11lRl10g=\\n-----END CERTIFICATE-----\\n\"\n            },\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"peer0.org2.example.com\",\n                \"hostnameOverride\": \"peer0.org2.example.com\"\n            }\n        }\n    },\n    \"certificateAuthorities\": {\n        \"ca.org1.example.com\": {\n            \"url\": \"https:\/\/10.0.2.60:7054\",\n            \"caName\": \"ca-org1\",\n            \"tlsCACerts\": {\n                \"pem\": [\"-----BEGIN CERTIFICATE-----\\nMIICJzCCAc2gAwIBAgIULb7\/j\/0GlwSPTEwcuD3ZwYqVhMMwCgYIKoZIzj0EAwIw\\ncDELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMQ8wDQYDVQQH\\nEwZEdXJoYW0xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMjEwODAzMTQwODAwWhcNMzYwNzMwMTQwODAw\\nWjBwMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGggQ2Fyb2xpbmExDzANBgNV\\nBAcTBkR1cmhhbTEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEcMBoGA1UEAxMT\\nY2Eub3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGdV\\nLG2bjY03kHqdHyO\/YUY0LGcs5LPWoL2a9Qf+abycQWBblGS+OjoIcQy+tpjaGfze\\nUUzX7PKCvu66MBA9ZFCjRTBDMA4GA1UdDwEB\/wQEAwIBBjASBgNVHRMBAf8ECDAG\\nAQH\/AgEBMB0GA1UdDgQWBBRoa\/rYznEUSQ6wxa3QBnYoJE0JiTAKBggqhkjOPQQD\\nAgNIADBFAiEA8U5EZTDg4gRvEk1t5P17AN33KBBEv11KMF0INZLSFOICIHIWnxsl\\naYsm5XHK0BtzO5esdrH7eAuSVfEm3IYR9lV4\\n-----END CERTIFICATE-----\\n\"]\n            },\n            \"httpOptions\": {\n                \"verify\": false\n            }\n        },        \n        \"ca.org2.example.com\": {\n            \"url\": \"https:\/\/10.0.2.60:8054\",\n            \"caName\": \"ca-org2\",\n            \"tlsCACerts\": {\n                \"pem\": [\"-----BEGIN CERTIFICATE-----\\nMIICHTCCAcWgAwIBAgIUa41oI62aIbM2s5nfGO\/sU6cNDukwCgYIKoZIzj0EAwIw\\nbDELMAkGA1UEBhMCVUsxEjAQBgNVBAgTCUhhbXBzaGlyZTEQMA4GA1UEBxMHSHVy\\nc2xleTEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEcMBoGA1UEAxMTY2Eub3Jn\\nMi5leGFtcGxlLmNvbTAeFw0yMTA4MDMxNDA4MDBaFw0zNjA3MzAxNDA4MDBaMGwx\\nCzAJBgNVBAYTAlVLMRIwEAYDVQQIEwlIYW1wc2hpcmUxEDAOBgNVBAcTB0h1cnNs\\nZXkxGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2NhLm9yZzIu\\nZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQ4jCi925YlDrwL\\nrIBljitpf7Gd8c5RIJBw9gn72zRc2+9h89l7a0U29bXcbKeKIKYNJ1lCghvpQl8o\\nqhSOTkt9o0UwQzAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH\/BAgwBgEB\/wIBATAd\\nBgNVHQ4EFgQUUTIWxF1E1xpGqm01rUJLNNIzG0kwCgYIKoZIzj0EAwIDRgAwQwIf\\nejZRhC3VLaq6pWz9SZf6LXfvhqSHpJ+XjU4rIByh6QIgQFu2dD4E0PprVueMt4Wk\\nmox6VIXeNgISzOn11lRl10g=\\n-----END CERTIFICATE-----\\n\"]\n            },\n            \"httpOptions\": {\n                \"verify\": false\n            }        \n      }\n    }\n}\n\nThe results:\nAn identity for the admin user \"admin\" already exists in the wallet\nAn identity for the user \"Khaled\" already exists in the wallet\n[{\"Key\":\"CAR0\",\"Record\":{\"make\":\"Toyota\",\"model\":\"Prius\",\"colour\":\"blue\",\"owner\":\"Tomoko\"}},{\"Key\":\"CAR1\",\"Record\":{\"make\":\"Ford\",\"model\":\"Mustang\",\"colour\":\"red\",\"owner\":\"Brad\"}},{\"Key\":\"CAR2\",\"Record\":{\"make\":\"Hyundai\",\"model\":\"Tucson\",\"colour\":\"green\",\"owner\":\"Jin Soo\"}},{\"Key\":\"CAR3\",\"Record\":{\"make\":\"Volkswagen\",\"model\":\"Passat\",\"colour\":\"yellow\",\"owner\":\"Max\"}},{\"Key\":\"CAR4\",\"Record\":{\"make\":\"Tesla\",\"model\":\"S\",\"colour\":\"black\",\"owner\":\"Adriana\"}},{\"Key\":\"CAR5\",\"Record\":{\"make\":\"Peugeot\",\"model\":\"205\",\"colour\":\"purple\",\"owner\":\"Michel\"}},{\"Key\":\"CAR6\",\"Record\":{\"make\":\"Chery\",\"model\":\"S22L\",\"colour\":\"white\",\"owner\":\"Aarav\"}},{\"Key\":\"CAR7\",\"Record\":{\"make\":\"Fiat\",\"model\":\"Punto\",\"colour\":\"violet\",\"owner\":\"Pari\"}},{\"Key\":\"CAR8\",\"Record\":{\"make\":\"Tata\",\"model\":\"Nano\",\"colour\":\"indigo\",\"owner\":\"Valeria\"}},{\"Key\":\"CAR9\",\"Record\":{\"make\":\"Holden\",\"model\":\"Barina\",\"colour\":\"brown\",\"owner\":\"Shotaro\"}}]\nerror:org.<hyperledger>.fabric.gateway.ContractException: No valid proposal responses received. 2 peer error responses: Channel Channel{id: 1, name: mychannel} Sending proposal with transaction: 8283aefea22657d68203722cd96066fb48924ce754772627a5c47ba9d9c8d475 to Peer{ id: 9, name: peer0.org2.example.com:9051, channelName: mychannel, url: grpcs:\/\/peer0.org2.example.com:9051, mspid: Org2MSP} failed because of: gRPC failure=Status{code=UNAVAILABLE, description=Unable to resolve host peer0.org2.example.com, cause=java.lang.RuntimeException: java.net.UnknownHostException: peer0.org2.example.com\nat io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:420)\nat io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:256)\nat io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:213)\nat java.base\/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\nat java.base\/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\nat java.base\/java.lang.Thread.run(Thread.java:831)\nCaused by: java.net.UnknownHostException: peer0.org2.example.com\nat java.base\/java.net.InetAddress$CachedAddresses.get(InetAddress.java:800)\nat java.base\/java.net.InetAddress.getAllByName0(InetAddress.java:1507)\nat java.base\/java.net.InetAddress.getAllByName(InetAddress.java:1366)\nat java.base\/java.net.InetAddress.getAllByName(InetAddress.java:1300)\nat io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:640)\nat io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:388)\n... 5 more\n}; Channel Channel{id: 1, name: mychannel} Sending proposal with transaction: 8283aefea22657d68203722cd96066fb48924ce754772627a5c47ba9d9c8d475 to Peer{ id: 7, name: peer0.org1.example.com:7051, channelName: mychannel, url: grpcs:\/\/peer0.org1.example.com:7051, mspid: Org1MSP} failed because of: gRPC failure=Status{code=UNAVAILABLE, description=Unable to resolve host peer0.org1.example.com, cause=java.lang.RuntimeException: java.net.UnknownHostException: peer0.org1.example.com\nat io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:420)\nat io.grpc.internal.DnsNameResolver$Resolve.resolveInternal(DnsNameResolver.java:256)\nat io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:213)\nat java.base\/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\nat java.base\/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\nat java.base\/java.lang.Thread.run(Thread.java:831)\nCaused by: java.net.UnknownHostException: peer0.org1.example.com\nat java.base\/java.net.InetAddress$CachedAddresses.get(InetAddress.java:800)\nat java.base\/java.net.InetAddress.getAllByName0(InetAddress.java:1507)\nat java.base\/java.net.InetAddress.getAllByName(InetAddress.java:1366)\nat java.base\/java.net.InetAddress.getAllByName(InetAddress.java:1300)\nat io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:640)\nat io.grpc.internal.DnsNameResolver.resolveAll(DnsNameResolver.java:388)\n... 5 more\n}\n\norg.<hyperledger>.fabric.gateway.ContractException: CAR11 does not exist\n\nat org.<hyperledger>.fabric.gateway.impl.query.SingleQueryHandler.evaluate(SingleQueryHandler.java:50)\nat org.<hyperledger>.fabric.gateway.impl.TransactionImpl.evaluate(TransactionImpl.java:207)\nat org.<hyperledger>.fabric.gateway.impl.ContractImpl.evaluateTransaction(ContractImpl.java:55)\nat org.example.ClientApp.main(ClientApp.java:52)\nat org.example.ClientTest.testFabCar(ClientTest.java:32)\nat java.base\/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat java.base\/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)\nat java.base\/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.base\/java.lang.reflect.Method.invoke(Method.java:567)\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\nat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\nat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\nat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\nat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:221)\nat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n\n\nProcess finished with exit code 255","450":"I have installed chaincode fine, but when I want to uninstall the same chaincode from the machine how I will do it? please help me.\nI have used the command below to install\npeer chaincode install -n <chaincodename> -v 0 -p <chaincode path>\n\nwhat would be the uninstall command?","451":"My objective is to make a contract on PancakeSwap that allow people to buy tokens and only sell these after a predefined time.\nFor example the contract is deploy at 09:00 pm, people can buy it but don't sell it yet, and at 09:10 pm the sell is on.\nI was thinking about add a modifier on a sell function but i don't understand how to do a separate function.\nI was also thinking about add some checks in transfer function but this is still the same, i don't know how to check who is sell and who is the buyer.\nHere is one of my try to perform it:\npragma solidity ^0.8.2;\n\ncontract Token {\n    mapping(address => uint256) public balances;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    uint256 public decimals = 18;\n    uint256 public totalSupply = 1000000000000 * 10**decimals;\n    string public name = \"Maxi Pump Token Try 2\";\n    string public symbol = \"$MPT2\";\n    uint256 public allowedSellTime;\n    uint256 public totalTime = 30;\n\n    modifier sellNotAllowed() {\n        require(\n            block.timestamp > allowedSellTime,\n            \"You are not allowed to sell yet\"\n        );\n        _;\n    }\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    constructor() {\n        balances[msg.sender] = totalSupply;\n        allowedSellTime = block.timestamp + totalTime;\n    }\n\n    function balanceOf(address owner) public view returns (uint256) {\n        return balances[owner];\n    }\n\n    function transfer(address to, uint256 value)\n        public\n        sellNotAllowed\n        returns (bool)\n    {\n        require(balanceOf(msg.sender) >= value, \"balance too low buddy\");\n        \/\/ Check if user wants to sell his tokens, if true then check time\n\n        balances[to] += value;\n        balances[msg.sender] -= value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) public returns (bool) {\n        require(balanceOf(from) >= value, \"balance too low buddy\");\n        require(allowance[from][msg.sender] >= value, \"allowance too low\");\n        balances[to] += value;\n        balances[from] -= value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n\n    function approve(address spender, uint256 value) public returns (bool) {\n        allowance[msg.sender][spender] = value;\n        return true;\n    }\n}","452":"I know how to pass the current Unix time from the frontend:\n<web3>.js:\nanchor.<web3>.SYSVAR_CLOCK_PUBKEY\n\nRust:\nlet current_time = ctx.accounts.clock.unix_timestamp;\n\nI do not want that. I need the smart contract itself to get the current time.","453":"New to <python> and programming in general here, go easy on me lol.\nI have a script that polls a <blockchain> API every 60 seconds to get updated data from the JSON API. It polls the latest activity then prints out the new activity with updated numbers for the hotspots.\nFor the past 3-4 weeks it's been working flawlessly.  It was only the last 3-4 days or so that I started to get this error below.\nTraceback (most recent call last):\n  File \"c:\\Users\\hello\\Desktop\\Dev\\scripts\\script-polling1.py\", line 77, in <module>\n    data2 = res1.json()['data']\n  File \"C:\\Users\\hello\\AppData\\Local\\Packages\\<python>SoftwareFoundation.<python>.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\<python>39\\site-packages\\requests\\models.py\", line 900, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"C:\\Program Files\\WindowsApps\\<python>SoftwareFoundation.<python>.3.9_3.9.1520.0_x64__qbz5n2kfra8p0\\lib\\json\\__init__.py\", line 346, in loads        \n    return _default_decoder.decode(s)\n  File \"C:\\Program Files\\WindowsApps\\<python>SoftwareFoundation.<python>.3.9_3.9.1520.0_x64__qbz5n2kfra8p0\\lib\\json\\decoder.py\", line 337, in decode        \n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\Program Files\\WindowsApps\\<python>SoftwareFoundation.<python>.3.9_3.9.1520.0_x64__qbz5n2kfra8p0\\lib\\json\\decoder.py\", line 355, in raw_decode    \n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1)\n\nWhenever it errors out, I just restart it and it will work for another 1-4 hours then crash again.\nThe error above shows it stopped at line 77 which is where I have my json() call to the API, but it's not always consistent as I have multiple calls to different json() api URLs. It varies between json()'s when it errors.\nBut for the sake of troubleshooting, this is the json() for line 77 above.\nfor hotspotaddress in data:\n    foundaddress = hotspotaddress['address']\n    foundname = hotspotaddress['name']\n    res1 = requests.get('https:\/\/api.url\/' + foundaddress + '\/activity\/count?min_time=-1%20day&bucket=day')\n    data2 = res1.json()['data']   ##THIS IS LINE 77 where the script crashes##\n    previous_witness = str(data2['poc_receipts_v1'])\n    previous_rewards = str(data2['rewards_v2'])\n    previous_info.append([foundaddress,foundname,previous_witness,previous_rewards])\n\nThis is a small sample of the json it pulls from\n{\n  \"data\": {\n    \"vars_v1\": 0,\n    \"validator_heartbeat_v1\": 0,\n    \"unstake_validator_v1\": 0,\n    \"transfer_validator_stake_v1\": 0,\n    \"transfer_hotspot_v1\": 0,\na lot more inbetween.\n    \"assert_location_v2\": 1,\n    \"assert_location_v1\": 0,\n    \"add_gateway_v1\": 1\n  }\n}\n\nNow I'm guessing it must be something in the API data since the script 'does' work, and it must crash once it has data it doesn't recognized or something.\nI guess my question is how do I even troubleshoot this since the <blockchain> API data is consistently changing as every second\/minute goes.  Read dozens of other stackoverflow articles with the same topic but can't figure out if any of them apply to my issue.  Am I using json() wrong?\nAny help would be greatly appreciated for this newbie!","454":"There is a function in my smart contract which I have deployed on local <blockchain> called\nvote(uint _candidateId).\nWhen calling this from truffle console\napp.vote(1,{from : <web3>.eth.getAccounts().then(e=>{ return e[1]})})\nIt returns\nUncaught Error: Returned error: sender account not recognized\nAlthough\n<web3>.eth.getAccounts().then(e=>{ return e[1]})\nreturns an address that is provided by GANACHE and is known to GANACHE.\nI can't solve this issue.","455":"Getting this error while trying to run a eth-brownie script on MacOS\n\nModuleNotFoundError: No module named 'Users.xyz'\n\nRun command:\n\nbrownie run scripts\/mainnet\/poolUpdaterMainNet.py --network bsc-main\n\nWould be great if someone can help.","456":"I'm new to solidity (and coding in general) so please forgive me if this is a stupid question! I'm trying to understand the scope of the require statement across multiple contracts. I want to design a master contract that a user can set an allowance for that then interacts with several other subcontracts that costs a custom ERC20 token to interact with. The idea is that the user only needs to authorize the master contract that manages their tokens and makes sure that they are transferred to the other contracts for payment when interacted with it, rather than have to get the user to set an allowance for all the other contracts individually.\nSay for example we have two contracts, contract A is the master (in this scenario the user has already set the correct allowance), and contract B, the contract that the user wants to interact with. The user calls the function in contract A which checks that they have the required amount of tokens to use the function in b before execution. if everything checks out on the finance side, contract A calls the function in contract B which also needs to check certain variables to proceed.  Providing everything checks out, B adds the user to a mapping and returns, then A executes the transferfrom function.  (I hope this all makes sense);\nCould the user change the allowance to zero at some point during call_b's execution in a way that passed the first two require statements but fails when transferfrom executes and if that did happen would a require fail in A revert the storage changes made in B as a result?\nor\nthe other option I have considered is transferring the user's tokes immediately after passing the financial checks and relying on the require statement around  B.f(msg.sender)  to revert the transfer if it fails. (if continue get set to false)\nor\nis this all really dumb and there is much a better way to proceed.\nThanks in advance for all your help.\n\/\/ SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"Contract_B.sol\";\nimport \"Token.sol\";\n\ncontract Contract_A{\n\n  Contract_B public contract_B;\n  Token public token;\n\n   constructor(Contract_B _contract_B, Token _token){\n      contract_B =  Contract_B(_contract_B);\n      token = Token(_token);\n       \n    }\n\n    function call_b() public returns(bool){\n      \/\/financial checks - the cost against balance and allowance\n      uint costToUse = b.costToUse;\n      require(token.balanceOf(address(msg.sender)) >= costToUse ,\"You don't have enough!\");\n      require(token.allowance(address(msg.sender), address(this)) >= costToUse , \"Allowance to \n      low\");\n\n      \/\/Would transerfrom be better here?.Would (require b.f(msg.sender)) revert a transfer.\n\n      \/\/effects - set values  \n      require(b.f(msg.sender), \"failed!\");\n\n      require(token.transferFrom(address(msg.sender), address(this), costToUse ), \"Transfer \n      Error\");\n    }\n\n}\n\ncontract Contract_B{\n  \n  \/\/ insstance of master contract for security check\n  Contract_A public contract_A;\n  \n  bool public continue;\n  uint public costToUse;\n  uint public userCount;\n  mapping(uint => address) users;\n  \n  constructor(Contract_A _contract_A, uint _costToUse){\n    contract_A = new(_contract_A); \n    costToUse = _costToUse;\n    continue = true;\n  }\n\n  modifier onlyA(){\n      require(msg.sender == contract_A, \"not contract A!\");  \n    _;\n  }\n  \n  function f(address _user) public onlyA() returns (bool){\n    require(continue , \"Can not continue\");\n    users[userCount] = _user;\n    userCount++;\n    return true;\n  }\n   \n  function setContinue(bool _continue) public onlyA() returns(bool){\n      continue= _continue;\n      return true;\n  }\n\n\n}","457":"If i try to run the below command:\n.\/target\/release\/node-template build-spec --chain staging > stagingSpec.json\nfacing the below error:\nError: Input(\"Error opening spec file: No such file or directory (os error 2)\")\nIs there any guide how to use that staging flag??","458":"Ethereum <blockchain> is decentralized and we have 4-5 servers which are mainnet,rinkeby,Kovan,ropsten and local Server.\nIf I create a Web App on Rinkeby so can other Server Acccount holder users can access that website and perform <transactions>(from other server) on it or not?\nFor Example if i create a voting app on rinkeby server, can i vote someone using mainnet server?","459":"I click a button that run method approve(tokenID, myContract) in ERC721 so that my contract can transfer this token. After that, I need to wait until state in Ethereum to be updated before do anything else. So I need to know when state in Ethereum updated\nI find out 2 ways of doing this\n\nListen to event Approval in ERC721\nAfter call approve I receive response which contains txHash. I can then use this txHash to run library.getTransactionReceipt(txHash).then(receipt => {})   (library = <web3>Provider)\n\nMy questions is\n\nWhen tx.receipt != null does it also means that Ethereum state updated?\nIf it is, then which ways is more effective?","460":"I'm trying to send a transaction via fantom networkusing this code. This code for for me on polygon network but for some reason it doesn't work on fantom network. This token contract has transfer and transferFrom and none of them works with my code.\nToken contract: https:\/\/ftmscan.com\/address\/0x667afbb7d558c3dfd20fabd295d31221dab9dbc2#code\ndef sendToken(_from, _to, _balance, _from_privet):\ntransaction = contract.functions.transferFrom(_from,str(_to), w3.toWei(_balance, 'ether')) \\\n    .buildTransaction({'chainId': 250,\n                       'gas': 585901,\n                       'nonce': w3.eth.getTransactionCount(_from)})\nsigned_txn = w3.eth.account.signTransaction(transaction, private_key=_from_privet)\ntry:\n    tx_hash = w3.eth.sendRawTransaction(signed_txn.rawTransaction)\n    recipt_hash = w3.eth.wait_for_transaction_receipt(binascii.hexlify(tx_hash).decode())\n    print(binascii.hexlify(tx_hash).decode())\n\nbut for some reason transaction fail and I couldn't understand why.\nThere is hash for this transaction.\n0x9a87a2db4776dab986f18cd0e7f832ecdcaa48793be740c79c0f0b1a128f28b5","461":"Following the tutorials listed in https:\/\/github.com\/<hyperledger>HandsOn\/trade-network, I was able to create a trade network and connect to it. However, after a VS code restart, all the created FAbric environments and wallets disappeared. Additionally, I am unable to recreate them.\nUpon trying to manually add the Fabric environments\/wallets am trying to add a new Fabric environment the \"+\" sign does not works (unresponsive) nor does an option appear after right clicks.\nTried giving the extension a reinstall but no luck:-\n\nAdditionally, I see weird errors when trying to run the extension commands on VS code pallet - for example this is what I see when I run a \"View Prerequisite\" command -","462":"Describe the bug\nI try to interact with my contract function (transfer) of my BEP20 Token on Binance Smart Chain (Testnet) using <web3>.JS then the result is\nOn Metamask Extension PC : It works ! and transaction status is Success,\nBut ! on Metamask Mobile App : When I press comfirm button It always get Internal JSON-RPC error\nenter image description here\nand when I try to use more gas to 0.3 BNB (12 usd) now It can press Confirm button but instead of call transfer function on my contract, it deploy new contract with error 0xa9 not defined\nenter image description here\n<web3> Code\nenter image description here\n  async function sendTX() {\nconst myContract = new <web3>.eth.Contract(AbiOfContract, contractAddress);\n\n<web3>.eth\n  .sendTransaction({\n    from: account,\n    to: contractAddress,\n    data: myContract.methods\n      .transfer(\"0x8479E4B295414e27a0759Eb67aA3C33dA4598eD0\", 100 * 10 ** 9)\n      .encodeABI(),\n    gas: 75000,\n    gasPrice: 50 * 10 ** 9\n  })\n  .then(function (receipt) {\n    console.log(receipt);\n  });\n\nTo Reproduce this issues\nI created Codesanbox project, in order to reproduce this issues you can try to run this https:\/\/codesandbox.io\/s\/romantic-hoover-n1e95 on Metamask App Mobile\nDevices\n\nDevice: Samsung Galaxy S21 Ultra\nOS: Android 11 (OneUI 3.0)\nApp Version: v2.6.0","463":"I tried https:\/\/docs.opensea.io\/reference opensea.io docs to fetch data. However, I think there are 2 APIs.\ncurl --request GET \\\n     --url https:\/\/api.opensea.io\/api\/v1\/asset\/0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb\/1\/\n\nThis is for a single asset and it requires a token id as well. But I want data of all the NFTs of a particular smart contract address just by giving the smart contract address.\nAnd this is for a single contract.\ncurl --request GET \\\n     --url https:\/\/api.opensea.io\/api\/v1\/asset_contract\/0x06012c8cf97bead5deae237070f9587f8e7a266d","464":"I'm attempting to process a transaction in my solana contract. The way it seems I should do this is by using createAccountWithSeed to generate a transfer account owned by both the program (8DqELvN5TFeMtNJciUYvGqso2CyG5M6XNWxh3HRr3Vjv) and payer. So I create the new transfer account to send through to the solana program processor to execute the transaction. But when I pass the transfer account through to my Rust program the check_account_owner states that the account is owned by the System Program (11111111111111111111111111111111) rather than my program.\nSo my problem is two-fold:\n\nIs that the correct pattern to use in this instance?\nIf yes, how do I create an account that both the program and payer can execute?\n\nHere's the JS for the createAccountWithSeed in the client.\nconst transferAcc = await PublicKey.createWithSeed(\n    payer.publicKey,\n    \"payer\",\n    PROGRAM_ID,\n  );\n  await connection.requestAirdrop(transferAcc, 100000);\n  SystemProgram.createAccountWithSeed({\n    basePubkey: payer.publicKey,\n    fromPubkey: payer.publicKey,\n    lamports: 100000,\n    newAccountPubkey: transferAcc,\n    programId: PROGRAM_ID,\n    seed: \"payer\",\n    space: 1024,\n  });\n\n  const accInfo = await connection.getAccountInfo(transferAcc);\n  console.log(\n    `Paying from acc: ${transferAcc.toBase58()}, Owned by: ${accInfo?.owner.toBase58()}`\n  );\n\nAnd here's the Rust code which is attempting to make the transfer.\npub fn process_payment(\n        program_id: &Pubkey,\n        accounts: &[AccountInfo],\n        payment_fee: u64,\n    ) -> ProgramResult {\n        let account_info_iter = &mut accounts.iter();\n        let token_program = next_account_info(account_info_iter)?;\n        let payer_acc = next_account_info(account_info_iter)?;\n        let transfer_acc = next_account_info(account_info_iter)?;\n        let receiver_acc = next_account_info(account_info_iter)?;\n\n        if !payer_acc.is_signer {\n            return Err(ProgramError::MissingRequiredSignature);\n        }\n\n        if *token_program.key != id() {\n            return Err(SosolError::IncorrectTokenProgramId.into());\n        }\n\n        check_account_owner(payer_payment_acc, &program_id)?;\n\n        msg!(\"Calling the token program to transfer tokens to the receiver...\");\n        token_transfer(\n            token_program.clone(),\n            transfer_acc.clone(),\n            receiver_account_key.clone(),\n            payer_acc.clone(),\n            payment_fee,\n        )?;\n\n        Ok(())\n    }\n\n\/\/\/ Issue a spl_token `Transfer` instruction.\n#[allow(clippy::too_many_arguments)]\nfn token_transfer<'a>(\n    token_program: AccountInfo<'a>,\n    source: AccountInfo<'a>,\n    destination: AccountInfo<'a>,\n    authority: AccountInfo<'a>,\n    amount: u64,\n) -> Result<(), ProgramError> {\n    let ix = transfer(\n        token_program.key,\n        source.key,\n        destination.key,\n        authority.key,\n        &[],\n        amount,\n    )?;\n    invoke(&ix, &[source, destination, authority, token_program])\n}\n\nThe error logs state:\n    Program log: Expected account to be owned by program 8DqELvN5TFeMtNJciUYvGqso2CyG5M6XNWxh3HRr3Vjv, received 11111111111111111111111111111111\n    Program log: CUSTOM-ERROR: The account did not have the expected program id","465":"I was following the Creating Your Private Network tutorial.\nI have a running the bootnode in my local machine, and I want a new participant from AWS to  join in my network. But somehow, i keep getting 0 peers.\nI added the logs RUST_LOG=debug and found this:\n2021-08-04 02:06:40.563 DEBUG tokio-runtime-worker libp2p_dns: Dialing \/ip4\/130.105.xxx.xxx\/tcp\/30333\/p2p\/12D3KooxxxNr    \n2021-08-04 02:06:40.563 DEBUG tokio-runtime-worker libp2p_tcp: dialing 130.105.xxx.xxx:30333    \n2021-08-04 02:06:40.563 DEBUG tokio-runtime-worker libp2p_swarm: Connection attempt to PeerId(\"12D3KooxxxNr\") via \"\/ip4\/130.105.xxx.xxx\/tcp\/30333\/p2p\/12D3KooxxxNr\" failed with Transport(Other(Custom { kind: Other, error: Timeout })). Attempts remaining: 2.    \n2021-08-04 02:06:40.563 DEBUG tokio-runtime-worker libp2p_kad::behaviour: Last remaining address '\/ip4\/130.105.xxx.xxx\/tcp\/30333\/p2p\/12D3KooxxxNr' of peer '12D3KooxxxNr' is unreachable: Pending connection: Transport error: Timeout has been reached.\n\nI read it somewhere, that it takes 5 minutes to connect.\nHow do I increase the timeout period?","466":"My <hyperledger> fabric network consists of 1 orderer, 1 organization and 3 peers. I tampered ledger of first peer and then tried to do another transaction on the same peer, then the following error was thrown: \n\"Error: deliver completed with status (SERVICE_UNAVAILABLE) before txid received - proposal response: \" \nBut the transaction was executed and also the block was added in tampered ledger of peer. But the tampered data was not restored to previous state.\nWith the reference of the answer in this link - \"https:\/\/intellipaat.com\/community\/17752\/in-<hyperledger>-fabric-blocks-locations-and-validity-criteria\", I came to know that if the tampering is done, \"the state database can be dropped and rebuilt from the <blockchain>\". So this process of dropping and rebuilding the database is done automatically by peer or we need to do it manually?\nIn short, if tampering is done in ledger of peer, how can be the previous state of ledger restored?","467":"I have create a file with hash address. There any methods found this amount via API?","468":"\/\/ Attempt transfer tokens, when you have none\n     invalidAmount = tokens(10) \/\/ recipient has no tokens ??\n     await token.transfer(deployer, invalidAmount, { from: receiver }).should.be.rejectedWith(EVM_REVERT)\n\nFellow Developers , I am following a tutorial to make a standard ERC-20 token, wherein there is a test to check if user is sending zero tokens. but still in the code presented by tutor the test defines invalidAmount as 10 token.\nCan someone please let me know why is it so that we are passing 10 tokens and not 0 . Is it some kind of a convention?\nThank you in advance.","469":"dear friends when I was using the dark web I have seen the bitcoin payment option when buying the products. Like the image I attached here but my question is if I send the payment to this bitcoin address how the website owner recognise this was done by exactly me? Because I didn't enter any other informations to that site before. According they it will redirect me to the next page after they recognise my payment. But what if someone else paid that bitcoin address? Does it count as my payment? How this whole process happen?","470":"I made a simple <python> script that reads me the real-time price of the coins using <web3> and the ABI getAmountsOut function.\nrouter = w3.eth.contract(address=<web3>.toChecksumAddress(pancakeSwapADDRESS), abi=PancakeABI)\namountIn = w3.toWei(tokenToSell, 'ether')\n\nEverything works correctly but now I would like to add to the script the possibility to see the last <transactions> of the contract if in BUY or SELL.\nI am trying this method but I cannot distinguish the SWAP and IF value in BUY and SELL.\ncontract = w3.eth.contract(address=adr_chk, abi=PancakeABI)\ntransfer_filter = contract.events.Transfer.createFilter(fromBlock=\"latest\")\nt = transfer_filter.get_new_entries()\n\nHow could I solve?","471":"I am trying to understand the comparative differences between the Intel SGX and SubtraTEE SGX infrastructure in designing a threat model for SubstraTEE. Any pointers would be super helpful.","472":"I want to create a smart contract that locks tokens for a certain amount of time, however, I want the ability for this time period to be changed while the tokens are still locked up.\nFor example: the tokens are locked for 12 months initially, but governance votes to change that period to 8 months after the tokens have already been locked. Is this possible?","473":"How can I track tokens <transactions> of a list of wallets in the bsc network?\nI think about using websocket and filter function. I think it's possible to use the topics as a part of the filter parameters and reflect only the Transfer event to\/from watched address, so that my app doesn't have to handle unnecessary data.\nBut I'm doing something wrong and don't know how to correctly give list of wallets (or at least only one wallet) as a parameter to my filter function. How to do that?\nAnd I have problems with getting data from Transfer event as I don't know how to decode a HexBytes type. I saw <web3>.js functions for it but nothing with <web3>.py.\naddress_list = ['0x67fdE6D04a82689a59E5188f9B572CBeF53D4763', '...', '...']\n\n<web3> = <web3>(<web3>.WebsocketProvider('wss:\/\/bsc.getblock.io\/mainnet\/?api_key=your_api_key'))\n<web3>_filter = <web3>.eth.filter({'topics': address_list}) \nwhile True:\n    for event in <web3>_filter.get_new_entries():\n        print(<web3>.toJSON(<web3>.eth.wait_for_transaction_receipt(event).logs))","474":"First,I build a cosmos hub testnet for single and local node,just like this\nenter image description here\nenter image description here\nand then I use starport to build a <blockchain>. the new <blockchain> can work. But now I find that I have no idea to connect this new <blockchain> to cosmos hub\nenter image description here\nlike this picture above, I click the button \"connect to Cosmos Hub\", but it doesn't work.\nMy purpose is to build two <blockchain>s with ibc, and connect these <blockchain> to the hub. And in this way, the two <blockchain>s can transfer tokens to each other. Anyboby can help me?","475":"I have forked sprout token and I have changed basic things but I'm not sure that liquidity to pool is working or not please suggest me how I can sure that liquidity is working or also if is there any way to sending instead to pancakeswap liquidity pool to another wallet?\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n    function initialize(address, address) external;\n}\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n\ncontract CoinToken is Context, IERC20, Ownable {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _rOwned;\n    mapping (address => uint256) private _tOwned;\n    mapping (address => mapping (address => uint256)) private _allowances;\n    mapping (address => bool) private _isExcludedFromFee;\n    mapping (address => bool) private _isExcluded;\n    address[] private _excluded;\n    address public _devWalletAddress;     \/\/ TODO - team wallet here\n    uint256 private constant MAX = ~uint256(0);\n    uint256 private _tTotal;\n    uint256 private _rTotal;\n    uint256 private _tFeeTotal;\n    string private _name;\n    string private _symbol;\n    uint256 private _decimals;\n    uint256 public _taxFee;\n    uint256 private _previousTaxFee;\n    uint256 public _devFee;\n    uint256 private _previousDevFee;\n    uint256 public _liquidityFee;\n    uint256 private _previousLiquidityFee;\n    IUniswapV2Router02 public uniswapV2Router;\n    address public uniswapV2Pair;\n    bool inSwapAndLiquify;\n    bool public swapAndLiquifyEnabled = true;\n    uint256 public _maxTxAmount;\n    uint256 public numTokensSellToAddToLiquidity;\n    event MinTokensBeforeSwapUpdated(uint256 minTokensBeforeSwap);\n    event SwapAndLiquifyEnabledUpdated(bool enabled);\n    event SwapAndLiquify(\n        uint256 tokensSwapped,\n        uint256 ethReceived,\n        uint256 tokensIntoLiqudity\n    );\n    \n    modifier lockTheSwap {\n        inSwapAndLiquify = true;\n        _;\n        inSwapAndLiquify = false;\n    }\n    \n    constructor (string memory _NAME, string memory _SYMBOL, uint256 _DECIMALS, uint256 _supply, uint256 _txFee,uint256 _lpFee,uint256 _DexFee,address routerAddress,address feeaddress,address tokenOwner,address service) public payable {\n        _name = _NAME;\n        _symbol = _SYMBOL;\n        _decimals = _DECIMALS;\n        _tTotal = _supply * 10 ** _decimals;\n        _rTotal = (MAX - (MAX % _tTotal));\n        _taxFee = _txFee;\n        _liquidityFee = _lpFee;\n        _previousTaxFee = _txFee;\n        \n        _devFee = _DexFee;\n        _previousDevFee = _devFee;\n        _previousLiquidityFee = _lpFee;\n        _maxTxAmount = (_tTotal * 5 \/ 1000) * 10 ** _decimals;\n        numTokensSellToAddToLiquidity = (_tTotal * 5 \/ 10000) * 10 ** _decimals;\n        _devWalletAddress = feeaddress;\n        \n        _rOwned[tokenOwner] = _rTotal;\n        \n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(routerAddress);\n         \/\/ Create a uniswap pair for this new token\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\n            .createPair(address(this), _uniswapV2Router.WETH());\n\n        \/\/ set the rest of the contract variables\n        uniswapV2Router = _uniswapV2Router;\n        \n        \/\/exclude owner and this contract from fee\n        _isExcludedFromFee[tokenOwner] = true;\n        _isExcludedFromFee[address(this)] = true;\n    \n        _owner = tokenOwner;\n        payable(service).transfer(msg.value);\n        emit Transfer(address(0), tokenOwner, _tTotal);\n        \n        \n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view returns (uint256) {\n        return _decimals;\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return _tTotal;\n    }\n\n    function balanceOf(address account) public view override returns (uint256) {\n        if (_isExcluded[account]) return _tOwned[account];\n        return tokenFromReflection(_rOwned[account]);\n    }\n\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    function isExcludedFromReward(address account) public view returns (bool) {\n        return _isExcluded[account];\n    }\n\n    function totalFees() public view returns (uint256) {\n        return _tFeeTotal;\n    }\n\n    function deliver(uint256 tAmount) public {\n        address sender = _msgSender();\n        require(!_isExcluded[sender], \"Excluded addresses cannot call this function\");\n        (uint256 rAmount,,,,,,) = _getValues(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _rTotal = _rTotal.sub(rAmount);\n        _tFeeTotal = _tFeeTotal.add(tAmount);\n    }\n\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee) public view returns(uint256) {\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\n        if (!deductTransferFee) {\n            (uint256 rAmount,,,,,,) = _getValues(tAmount);\n            return rAmount;\n        } else {\n            (,uint256 rTransferAmount,,,,,) = _getValues(tAmount);\n            return rTransferAmount;\n        }\n    }\n\n    function tokenFromReflection(uint256 rAmount) public view returns(uint256) {\n        require(rAmount <= _rTotal, \"Amount must be less than total reflections\");\n        uint256 currentRate =  _getRate();\n        return rAmount.div(currentRate);\n    }\n\n    function excludeFromReward(address account) public onlyOwner() {\n        require(!_isExcluded[account], \"Account is already excluded\");\n        if(_rOwned[account] > 0) {\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\n        }\n        _isExcluded[account] = true;\n        _excluded.push(account);\n    }\n\n    function includeInReward(address account) external onlyOwner() {\n        require(_isExcluded[account], \"Account is already included\");\n        for (uint256 i = 0; i < _excluded.length; i++) {\n            if (_excluded[i] == account) {\n                _excluded[i] = _excluded[_excluded.length - 1];\n                _tOwned[account] = 0;\n                _isExcluded[account] = false;\n                _excluded.pop();\n                break;\n            }\n        }\n    }\n        function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tDev) = _getValues(tAmount);\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);        \n        _takeLiquidity(tLiquidity);\n        _takeDev(tDev);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n    \n    function excludeFromFee(address account) public onlyOwner {\n        _isExcludedFromFee[account] = true;\n    }\n    \n    function includeInFee(address account) public onlyOwner {\n        _isExcludedFromFee[account] = false;\n    }\n    \n    function setTaxFeePercent(uint256 taxFee) external onlyOwner() {\n        _taxFee = taxFee;\n    }\n\n    function setDevFeePercent(uint256 devFee) external onlyOwner() {\n        _devFee = devFee;\n    }\n    \n    function setLiquidityFeePercent(uint256 liquidityFee) external onlyOwner() {\n        _liquidityFee = liquidityFee;\n    }\n   \n    function setMaxTxPercent(uint256 maxTxPercent) public onlyOwner {\n        _maxTxAmount = maxTxPercent  * 10 ** _decimals;\n    }\n    \n    function setDevWalletAddress(address _addr) public onlyOwner {\n        _devWalletAddress = _addr;\n    }\n    \n\n    function setSwapAndLiquifyEnabled(bool _enabled) public onlyOwner {\n        swapAndLiquifyEnabled = _enabled;\n        emit SwapAndLiquifyEnabledUpdated(_enabled);\n    }\n    \n     \/\/to recieve ETH from uniswapV2Router when swaping\n    receive() external payable {}\n\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\n        _rTotal = _rTotal.sub(rFee);\n        _tFeeTotal = _tFeeTotal.add(tFee);\n    }\n\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256) {\n        (uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tDev) = _getTValues(tAmount);\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tLiquidity, tDev, _getRate());\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tLiquidity, tDev);\n    }\n\n    function _getTValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256) {\n        uint256 tFee = calculateTaxFee(tAmount);\n        uint256 tLiquidity = calculateLiquidityFee(tAmount);\n        uint256 tDev = calculateDevFee(tAmount);\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tLiquidity).sub(tDev);\n        return (tTransferAmount, tFee, tLiquidity, tDev);\n    }\n\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tLiquidity, uint256 tDev, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\n        uint256 rAmount = tAmount.mul(currentRate);\n        uint256 rFee = tFee.mul(currentRate);\n        uint256 rLiquidity = tLiquidity.mul(currentRate);\n        uint256 rDev = tDev.mul(currentRate);\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rLiquidity).sub(rDev);\n        return (rAmount, rTransferAmount, rFee);\n    }\n\n    function _getRate() private view returns(uint256) {\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\n        return rSupply.div(tSupply);\n    }\n\n    function _getCurrentSupply() private view returns(uint256, uint256) {\n        uint256 rSupply = _rTotal;\n        uint256 tSupply = _tTotal;      \n        for (uint256 i = 0; i < _excluded.length; i++) {\n            if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply) return (_rTotal, _tTotal);\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\n        }\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\n        return (rSupply, tSupply);\n    }\n    \n    function _takeLiquidity(uint256 tLiquidity) private {\n        uint256 currentRate =  _getRate();\n        uint256 rLiquidity = tLiquidity.mul(currentRate);\n        _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity);\n        if(_isExcluded[address(this)])\n            _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity);\n    }\n    \n    function _takeDev(uint256 tDev) private {\n        uint256 currentRate =  _getRate();\n        uint256 rDev = tDev.mul(currentRate);\n        _rOwned[_devWalletAddress] = _rOwned[_devWalletAddress].add(rDev);\n        if(_isExcluded[_devWalletAddress])\n            _tOwned[_devWalletAddress] = _tOwned[_devWalletAddress].add(tDev);\n    }\n    \n    function calculateTaxFee(uint256 _amount) private view returns (uint256) {\n        return _amount.mul(_taxFee).div(\n            10**2\n        );\n    }\n\n    function calculateDevFee(uint256 _amount) private view returns (uint256) {\n        return _amount.mul(_devFee).div(\n            10**2\n        );\n    }\n\n    function calculateLiquidityFee(uint256 _amount) private view returns (uint256) {\n        return _amount.mul(_liquidityFee).div(\n            10**2\n        );\n    }\n    \n    function removeAllFee() private { \n        _previousTaxFee = _taxFee;\n        _previousDevFee = _devFee;\n        _previousLiquidityFee = _liquidityFee;\n        \n        _taxFee = 0;\n        _devFee = 0;\n        _liquidityFee = 0;\n    }\n    \n    function restoreAllFee() private {\n        _taxFee = _previousTaxFee;\n        _devFee = _previousDevFee;\n        _liquidityFee = _previousLiquidityFee;\n    }\n    \n    function isExcludedFromFee(address account) public view returns(bool) {\n        return _isExcludedFromFee[account];\n    }\n\n    function _approve(address owner, address spender, uint256 amount) private {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) private {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(amount > 0, \"Transfer amount must be greater than zero\");\n        if(from != owner() && to != owner())\n            require(amount <= _maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\");\n\n        uint256 contractTokenBalance = balanceOf(address(this));\n        \n        if(contractTokenBalance >= _maxTxAmount)\n        {\n            contractTokenBalance = _maxTxAmount;\n        }\n        \n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\n        if (\n            overMinTokenBalance &&\n            !inSwapAndLiquify &&\n            from != uniswapV2Pair &&\n            swapAndLiquifyEnabled\n        ) {\n            contractTokenBalance = numTokensSellToAddToLiquidity;\n            swapAndLiquify(contractTokenBalance);\n        }\n        \n        bool takeFee = true;\n        if(_isExcludedFromFee[from] || _isExcludedFromFee[to]){\n            takeFee = false;\n        }\n        \n        _tokenTransfer(from,to,amount,takeFee);\n    }\n\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\n        uint256 half = contractTokenBalance.div(2);\n        uint256 otherHalf = contractTokenBalance.sub(half);\n        uint256 initialBalance = address(this).balance;\n        swapTokensForEth(half); \n        uint256 newBalance = address(this).balance.sub(initialBalance);\n        addLiquidity(otherHalf, newBalance);\n        emit SwapAndLiquify(half, newBalance, otherHalf);\n    }\n\n    function swapTokensForEth(uint256 tokenAmount) private {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapV2Router.WETH();\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0, \/\/ accept any amount of ETH\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\n            address(this),\n            tokenAmount,\n            0, \/\/ slippage is unavoidable\n            0, \/\/ slippage is unavoidable\n            owner(),\n            block.timestamp\n        );\n    }\n\n    function _tokenTransfer(address sender, address recipient, uint256 amount,bool takeFee) private {\n        if(!takeFee)\n            removeAllFee();\n        \n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\n            _transferFromExcluded(sender, recipient, amount);\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\n            _transferToExcluded(sender, recipient, amount);\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\n            _transferStandard(sender, recipient, amount);\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\n            _transferBothExcluded(sender, recipient, amount);\n        } else {\n            _transferStandard(sender, recipient, amount);\n        }\n        \n        if(!takeFee)\n            restoreAllFee();\n    }\n\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tDev) = _getValues(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\n        _takeLiquidity(tLiquidity);\n        _takeDev(tDev);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tDev) = _getValues(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);           \n        _takeLiquidity(tLiquidity);\n        _takeDev(tDev);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tDev) = _getValues(tAmount);\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);   \n        _takeLiquidity(tLiquidity);\n        _takeDev(tDev);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n    \n    function setRouterAddress(address newRouter) external onlyOwner {\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(newRouter);\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\n        uniswapV2Router = _uniswapV2Router;\n    }\n\n    function setNumTokensSellToAddToLiquidity(uint256 amountToUpdate) external onlyOwner {\n        numTokensSellToAddToLiquidity = amountToUpdate;\n    }\n}","476":"I have worked on different types of time locks in Ethereum, Polkadot, Aeternity, Algorand, Cosmos etc. I could not find a time lock contract or time lock bridge on NEAR protocol yet. Can anyone suggest the best way to implement time locks on NEAR protocol.","477":"I am developing a Fabric application, and I am facing the issue where gateway is not able to get the network\n366 | await gateway.connect(ccp, gatewayOpts);\n367 | const network = await gateway.getNetwork(channelName);\n| ^\n368 | const contract = network.getContract(chaincodeName);\nIn Line number 367 I am facing an error\nFollowing is the error :-\n2021-07-24T13:39:03.866Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer0.org1.example.com, url:grpcs:\/\/localhost:7051, connected:false, connectAttempted:true\n2021-07-24T13:39:03.867Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer0.org1.example.com url:grpcs:\/\/localhost:7051 timeout:3000\n2021-07-24T13:39:03.893Z - info: [NetworkConfig]: buildPeer - Unable to connect to the endorser peer0.org1.example.com due to Error: Failed to connect before the deadline on Endorser- name: peer0.org1.example.com, url:grpcs:\/\/localhost:7051, connected:false, connectAttempted:true\nat checkState (\/home\/user\/Documents\/Learnings\/aries-learning\/aries-javascript\/aries-framework-javascript\/node_modules\/@grpc\/grpc-js\/src\/client.ts:169:18)\nat Timeout._onTimeout (\/home\/user\/Documents\/Learnings\/aries-learning\/aries-javascript\/aries-framework-javascript\/node_modules\/@grpc\/grpc-js\/src\/channel.ts:579:9)\nat listOnTimeout (internal\/timers.js:554:17)\nat processTimers (internal\/timers.js:497:7) {\nconnectFailed: true\n}\n2021-07-24T13:39:07.452Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Discoverer- name: peer0.org1.example.com, url:grpcs:\/\/localhost:7051, connected:false, connectAttempted:true\n2021-07-24T13:39:07.452Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer0.org1.example.com url:grpcs:\/\/localhost:7051 timeout:3000\n2021-07-24T13:39:07.453Z - error: [ServiceEndpoint]: ServiceEndpoint grpcs:\/\/localhost:7051 reset connection failed :: Error: Failed to connect before the deadline on Discoverer- name: peer0.org1.example.com, url:grpcs:\/\/localhost:7051, connected:false, connectAttempted:true\n2021-07-24T13:39:07.453Z - error: [DiscoveryService]: send[mychannel] - no discovery results\nCan anyone help me in resolving this?\nThanks","478":"Please, help. How can I get details of pending <transactions> from the mempool by using <web3>.py? \"filter('pending').get_all_entries\" not work\".","479":"I searched solidity documentation and there's nothing on this:\nWhat does the caret ^ operator do?\nWhat is it doing here?\nsha3(sha3(valueA) ^ sha3(valueB))","480":"I am trying to deploy some program to my local solana and im stuck on this\n    -vote-tutorial\n> babel-node src\/client\/deploy_simplest.js\n\nDeploying...\n(node:11063) Warning: N-API is an experimental feature and could change at any time.\nOur account: Bfoj2PiwU4qvgHbdiQ7AysM4jKVQD73NF9GdwqMs7yzw\nConnection to cluster established: http:\/\/localhost:8899 { 'feature-set': 2068214666, 'solana-core': '1.3.15' }\n-----\nEstimated cost to program load: 407338560  lamports ( 0.40733856 ) Sol\nProgramAccount: Axx1mNZpXBSuHqRYv6Bt6r5H5aKMALH8SuWEs9VNJawJ\nError: failed to get recent blockhash: Error: failed to get recent blockhash: Invalid params: unknown variant `finalized`, expected one of `max`, `recent`, `root`, `single`, `singleGossip`.\n    at Connection.getRecentBlockhash (\/home\/radoslaw\/applications\/<blockchain>\/simple-vote-tutorial\/node_modules\/@solana\/<web3>.js\/src\/connection.js:2363:13)\n    at <anonymous>\n    at process._tickDomainCallback (internal\/process\/next_tick.js:228:7)\n\nI am going with this tutorial\nhttps:\/\/smith-mcf.medium.com\/a-simple-solana-dapp-tutorial-6dedbdf65444\nWhen I use . start_docker\n. start_docker\n\nStarting \"default\"...\n(default) Check network to re-create if needed...\n(default) Waiting for an IP...\nMachine \"default\" was started.\nWaiting for SSH to be available...\nDetecting the provisioner...\nStarted machines may have new IP addresses. You may need to re-run the `docker-machine env` command.\nexport DOCKER_TLS_VERIFY=\"1\"\nexport DOCKER_HOST=\"tcp:\/\/192.168.99.100:2376\"\nexport DOCKER_CERT_PATH=\"\/root\/.docker\/machine\/machines\/default\"\nexport DOCKER_MACHINE_NAME=\"default\"\n# Run this command to configure your shell: \n# eval $(docker-machine env default)\n\n> simplevotetutorial@0.0.1 localnet:up \/home\/radoslaw\/applications\/<blockchain>\/simple-vote-tutorial\n> set -x; solana-localnet down; set -e; solana-localnet up\n\n+ solana-localnet down\nDocker version 20.10.7, build f0df350\n++ docker ps --filter 'name=^\/solana-localnet$' -q\n+ [[ -n '' ]]\n+ set -e\n+ solana-localnet up\nDocker version 20.10.7, build f0df350\n+ RUST_LOG=solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=info,solana_bpf_loader=debug,solana_bpf_loader_program=info,solana_rbpf=trace\n+ ARGS=(--detach --name solana-localnet --rm --publish 8001:8001\/tcp --publish 8899:8899\/tcp --publish 8900:8900\/tcp --publish 8901:8901\/tcp --publish 8902:8902\/tcp --publish 9900:9900\/tcp --publish 8000:8000\/udp --publish 8001:8001\/udp --publish 8002:8002\/udp --publish 8003:8003\/udp --publish 8004:8004\/udp --publish 8005:8005\/udp --publish 8006:8006\/udp --publish 8007:8007\/udp --publish 8008:8008\/udp --tty --ulimit \"nofile=700000\" --env \"RUST_LOG=$RUST_LOG\")\n+ [[ -n '' ]]\n+ docker run --detach --name solana-localnet --rm --publish 8001:8001\/tcp --publish 8899:8899\/tcp --publish 8900:8900\/tcp --publish 8901:8901\/tcp --publish 8902:8902\/tcp --publish 9900:9900\/tcp --publish 8000:8000\/udp --publish 8001:8001\/udp --publish 8002:8002\/udp --publish 8003:8003\/udp --publish 8004:8004\/udp --publish 8005:8005\/udp --publish 8006:8006\/udp --publish 8007:8007\/udp --publish 8008:8008\/udp --tty --ulimit nofile=700000 --env RUST_LOG=solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=info,solana_bpf_loader=debug,solana_bpf_loader_program=info,solana_rbpf=trace solanalabs\/solana:v1.3.15\nb3e960613b640aedba3b35d18be03a4e327bab9296bd4e1dba59c0802bd1aecf\n+ for _ in 1 2 3 4 5\n+ curl -X POST -H 'Content-Type: application\/json' -d '{\"jsonrpc\":\"2.0\",\"id\":1, \"method\":\"getTransactionCount\"}' http:\/\/localhost:8899\ncurl: (52) Empty reply from server\n+ sleep 1\n+ for _ in 1 2 3 4 5\n+ curl -X POST -H 'Content-Type: application\/json' -d '{\"jsonrpc\":\"2.0\",\"id\":1, \"method\":\"getTransactionCount\"}' http:\/\/localhost:8899\n{\"jsonrpc\":\"2.0\",\"result\":0,\"id\":1}\n+ break\n\nWhen I run localhost:8899 in chrome there is response \"Used HTTP Method is not allowed. POST or OPTIONS is required\"\nI need to say im totally newbie about docker but the tutorial was requiring it.","481":"I have one product if the consumer want to buy my product he needs to pay 50 ERC20 Tokens. how to write this smart contract and how to know that he payed my tokens only ?","482":"I'm using fabric tools provided for composer to deploy fabric network as it deploys 1 peer, 1 orderer, 1 couchdb, & 1 fabric-ca. I am able to install chain code on peer but instantiation fails with following error. I am using command on fabric-peer.\n\nerror in simulation: failed to execute transaction\n2037ca1d4ec2682ad17499156de49aeb28053ad5b6943f1fe3520c407bac570e:\ncould not launch chaincode\nproduct_1.1.1:e2901eb986174a4ac9bb963b06db851ea347ed6b48930de813c3dbc38df94a82:\nchaincode registration failed: container exited with 2\n\nwhen i checked the logs of docker container it is returning me this error\n\n2021\/07\/29 08:41:29 Error create network chaincode chaincode: Contracts are required to have at least 1 (non-ignored) public method.\nContract PRODUCTChainCode has none. Method names that have been\nignored: GetAfterTransaction, GetBeforeTransaction, GetInfo, GetName,\nGetTransactionContextHandler, GetUnknownTransaction,\nGetIgnoredFunctions and GetEvaluate<transactions> panic: Error create\nnetwork chaincode chaincode: Contracts are required to have at least\n1 (non-ignored) public method. Contract PRODUCTChainCode has none.\nMethod names that have been ignored: GetAfterTransaction,\nGetBeforeTransaction, GetInfo, GetName, GetTransactionContextHandler,\nGetUnknownTransaction, GetIgnoredFunctions and GetEvaluate<transactions>\ngoroutine 1 [running]: log.Panicf(0xa40a03, 0x2e, 0xc00059ff68, 0x1,\n0x1)  \/usr\/local\/go\/src\/log\/log.go:358 +0xc5 main.main()\n\/chaincode\/input\/src\/main.go:18 +0x1b0\n\nhere is my main.go file\npackage main\n\nimport (\n    \"log\"\n    \"product-chaincode\/core\/messages\"\n\n    \"github.com\/<hyperledger>\/fabric-contract-api-go\/contractapi\"\n)\n\n\/\/ PRODUCTChainCode implementation\ntype PRODUCTChainCode struct {\n    contractapi.Contract\n}\n\nfunc main() {\n    PRODUCTChainCode, err := contractapi.NewChaincode(&PRODUCTChainCode{})\n    if err != nil {\n        log.Panicf(messages.ChaincodeCreateError, err.Error())\n    }\n\n    if err := PRODUCTChainCode.Start(); err != nil {\n        log.Panicf(messages.ChaincodeStartError, err.Error())\n    }\n}","483":"I am exploring ethereum and smart contract development in solidity. In a simple todo application smart contract, I'm getting the following error:\n\nMy code:\npragma solidity ^0.4.4;\n\ncontract ToDo {\n  struct Task{\n    uint id;\n    uint date;\n    string content;\n    string author;\n    bool completed;\n  }\n\n  Task[] tasks;\n\n  function createTask(string memory _content, string memory _author) public {\n    tasks.push(Task(tasks.length, block.timestamp, _content, _author, false));\n  }\n\n  function getTask(uint id) public view \n    returns(\n      uint,\n      uint,\n      string memory,\n      string memory,\n      bool\n   ) {\n     return(\n       id,\n       tasks[id].date,\n       tasks[id].content,\n       tasks[id].author,\n       tasks[id].completed\n     );\n   }\n\n   function getAllTasks() external view returns(Task[]){\n     return tasks;\n   }\n}\n\nError lines are 20 and 21 In the getTask() function which is trying to return string.","484":"I want to mint tokens on a time basis.\nEg: 1,000,000 tokens will be mint this year (1-Sep-2021)\n1,000,000 tokens will be mint next year (1-Sep-2022)\nand 1,000,000 tokens will mint on 1-Sep-2023.\nHow can I do that in the ERC-20 contract?","485":"Hi I was following http:\/\/0x-contract-wrappers-py.s3-website-us-east-1.amazonaws.com\/,\nbut can't figure out how i should sign the fill order transaction with my local private key using <python>. sign_hash() in zero_ex order_utils calls <web3>.eth.sign(), but where should I pass in private key? Can't find an example or any tutorial.\nI use infura so I have to sign the order using local private key.\nWith normal onchain transaction, these are the steps:\n\nbuild_transaction()\nsign_transaction() with private key\nsend_raw_transaction()\n\nSince 0x orders are not no chain until they are filled, how do I sign them?","486":"Can anyone help me?\nI created a basic contract.But don't know the withdrawal function.Please help me.Thanks everyone\nI tried creating a basic function but it doesn't work\nfunction withdraw() public {\n    msg.sender.transfer(address(this).balance);\n}","487":"Suppose we have a consortium <blockchain> like Food Trust IBM for supply chain. How can we be sure that the data entered to the <blockchain> by different parties (who are permissioned to add data) is trusted. I mean, some company may say that its fruits are grown organically, while it is not true. Or some other company might say that it received something at Monday, while the truth is it received it on Sunday.\nDoes the <blockchain> itself has an algorithm to prevent these kinds of issues, or there must be some other solution like using IoT sensors?","488":"I am running corda 4.5. My flows work perfectly when run using gradle task, deployNodes. But when I run the flow for the nodes created using the network bootstrapper, I run to the below exception.\nMon Jul 26 12:43:10 GMT 2021>>> start CreateAccount name: accountOne\n\n\u00e2\u0096\u00b6\u00ef\u00b8\u008e Starting\n    \u00e2\u009c\u0098 Requesting signature by notary service\n        \u00e2\u009c\u0098 Requesting signature by Notary service\n        \u00e2\u009c\u0098 Validating response from Notary service\n    \u00e2\u009c\u0098 Broadcasting transaction to participants\n\u00e2\u009c\u0098 Done\n\u00e2\u0098\u0082 java.lang.IllegalArgumentException: Flow sessions were not provided for the following transaction participants: [O=PartyA, L=New York, C=US]\n\nFrom the logs:\ninMemoryConfigSelectionLogger. - Did not detect a configuration for InMemory selection - enabling memory usage for token indexing. Please set stateSelection.inMemory.enabled to \"false\" to disable this \ninMemoryConfigSelectionLogger. - No indexing method specified. Indexes will be created at run-time for each invocation of selectTokens - Cordapp configuration is incorrect due to exception - empty config: No configuration setting found for key 'stateSelection'","489":"I'm trying to build a 5 node network (all validators and members of Aura & GRANPA) and my goal is to use custom keys, not the predefined Alice, etc. Thus added the SR and ED authority keys in the custom spec JSON file. The node-template version is an unchanged V3 from Github.\nI followed the tutorial (https:\/\/substrate.dev\/docs\/en\/tutorials\/start-a-private-network\/customchain) but this error shows up:\n\n2021-07-26 09:17:35 Substrate Node\n2021-07-26 09:17:35 \u00e2\u009c\u008c\u00ef\u00b8\u008f version 3.0.0-unknown-x86_64-linux-gnu\n2021-07-26 09:17:35 \u00e2\u009d\u00a4\u00ef\u00b8\u008f by Substrate DevHub <https:\/\/github.com\/substrate-developer-hub>, 2017-2021\n2021-07-26 09:17:35 \u00f0\u009f\u0093\u008b Chain specification: The Batman Chain\n2021-07-26 09:17:35 \u00f0\u009f\u008f\u00b7 Node name: Node1\n2021-07-26 09:17:35 \u00f0\u009f\u0091\u00a4 Role: AUTHORITY\n2021-07-26 09:17:35 \u00f0\u009f\u0092\u00be Database: RocksDb at \/peer-data-1\/chains\/TBC_testnet\/db\n2021-07-26 09:17:35 \u00e2\u009b\u0093 Native runtime: node-template-100 (node-template-1.tx1.au1)\n2021-07-26 09:17:36 \u00f0\u009f\u0094\u00a8 Initializing Genesis block\/state (state: 0x531c\u00e2\u0080\u00a6653b, header-hash: 0x4c1f\u00e2\u0080\u00a6570d)\n2021-07-26 09:17:36 \u00f0\u009f\u0091\u00b4 Loading GRANDPA authority set from genesis on what appears to be first startup.\n2021-07-26 09:17:36 \u00e2\u008f\u00b1 Loaded block-time = 6000 milliseconds from genesis on first-launch\n2021-07-26 09:17:36 Using default protocol ID \"sup\" because none is configured in the chain specs\n2021-07-26 09:17:36 \u00f0\u009f\u008f\u00b7 Local node identity is: 12D3KooWRzP2WuCbHENdXkf5ZvBStmgYn2N8mkwPofQparf58tkF\n2021-07-26 09:17:36 \u00f0\u009f\u0093\u00a6 Highest known block at #0\n2021-07-26 09:17:36 \u00e3\u0080\u00bd\u00ef\u00b8\u008f Prometheus server started at 0.0.0.0:9615\n2021-07-26 09:17:36 Listening for new connections on 0.0.0.0:9944.\n2021-07-26 09:17:37 \u00f0\u009f\u0094\u008d Discovered new external address for our node: \/ip4\/10.42.0.82\/tcp\/30333\/p2p\/12D3KooWRzP2WuCbHENdXkf5ZvBStmgYn2N8mkwPofQparf58tkF\n2021-07-26 09:17:37 GRANDPA voter error: Signing(\"Failed to sign GRANDPA vote for round 1 targetting 0x4c1f6404ff3236cbd58fa62dffe9b8e2b2ac670f06516541a641158c0a0a570d\")\n2021-07-26 09:17:37 Essential task `grandpa-voter` failed. Shutting down service.\nError: Service(Other(\"Essential task failed.\"))\n\nTo start the node I use this command:\nnode-template key insert \\\n    --base-path \/peer-data-1 \\\n    --chain local \\\n    --key-type aura \\\n    --suri \"0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37\";\n\nnode-template key insert \\\n    --base-path \/peer-data-1 \\\n    --chain local \\\n    --key-type gran \\\n    --suri \"0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37\";\nls -l \/peer-data-1\/chains\/local_testnet\/keystore;\n\nRUST_LOG=runtime=debug\nnode-template \\\n    --base-path \/peer-data-1 \\\n    --name Node1 \\\n    --node-key 0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37 \\\n    --chain \/genesis\/customSpecRaw.json \\\n    --keystore-path \/peer-data-1\/chains\/local_testnet\/keystore\/ \\\n    --port 30333 \\\n    --ws-port 9944 \\\n    --rpc-port 9933 \\\n    --unsafe-ws-external \\\n    --unsafe-rpc-external \\\n    --rpc-cors=all \\\n    --prometheus-external \\\n    --log info \\\n    --wasm-execution Compiled \\\n    --ws-max-connections 1000 \\\n    --pool-limit 10000 \\\n    --pool-kbytes 20480 \\\n    --max-runtime-instances 100 \\\n    --validator \\\n    --bootnodes \/ip4\/$SUBSTRATE_0_SERVICE_HOST\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp\n\nCustom spec JSON file is:\n{\n \"...\": \"...\",\n \"palletAura\": {\n        \"authorities\": [\n          \"5HVmrhNjMCfqRmjfcWTeEhgLMm1mgG9wAeQtKv1jZsUXrJjR\",\n          \"5ChaeMbZEqvCYkh6ZZudYEPdwqApTCQzhbUPyX6Hxs5VX6yd\",\n          \"5DB3vFrmvn49dpwzczYtFqxbfgn5U7DV8AHkkWFBcp3tWxwG\",\n          \"5GT9aamoicKpUNRkWzQs83kLzufWZGt7aHX8ZWaAxKLmBdCW\",\n          \"5CeaUtvsDQJHmuS1PJPns9kNuYEYCZdJE4ze8tdXSzgZkd4a\"\n        ]\n      },\n      \"palletGrandpa\": {\n        \"authorities\": [\n          [\n            \"5DvLRumQ8R9uSqV5xPmDsFBwQfjZCHzh6ebT5wqmARVRo9XE\",\n            1\n          ],\n          [\n            \"5CvYJbuiAyeGiBiPUtDp1Y5u3547f5AVai6qSXQBanR1j9m9\",\n            1\n          ],\n          [\n            \"5DPmV9GaQke2jUb7DmtRaf7fmrEX4aWSwzPzUsPtUNZUnYhU\",\n            1\n          ],\n          [\n            \"5FvcixYnySyxCEpv5QRQ9vj3h6QUH3ogpnXjGc4x4NahSXhH\",\n            1\n          ],\n          [\n            \"5CCuMSKoa13eeyKShzsNyGKMk5iicgnQn19zach8D2yznWgz\",\n            1\n          ]\n        ]\n      },\n   \"...\": \"...\",\n}","490":"I am running WSL Ubuntu 20.04 (Version 2 with Docker Desktop Support) within Windows 10 Pro Version 21H1\nThe steps are as follows:\n\ngit clone https:\/\/github.com\/textileio\/powergate.git\ncd powergate\/\ncd docker\/\nnano docker-compose.yaml where I added \"[\"lotus\", \"daemon\", \"--import-snapshot\", \"https:\/\/fil-chain-snapshots-fallback.s3.amazonaws.com\/mainnet\/minimal_finality_stateroots_latest.car\"]\" between lines 32 and 33.\nmake up\nWaited for the node to finish importing and then syncing.\n^C then make down then deleted the line \"[\"lotus\", \"daemon\", \"--import-snapshot\", \"https:\/\/fil-chain-snapshots-fallback.s3.amazonaws.com\/mainnet\/minimal_finality_stateroots_latest.car\"]\" from docker-compose.yaml\nmake up\nNow that the node was running I typed cd .. so I was in the repo's root directory, then make install-pow\nwith the pow command in my GOPATH I typed pow to make sure pow was linked fine to powd. It was.\npow admin users create\ncopied the token and ran export POW_TOKEN=<token copied to here>\nThen pow wallet addrs and funded the address\nI went to the directory behind the folder of my static website which is about 5GB in size.\nI typed pow data stage <my-static-site-folder>\nAfter it was finished staging and printed out the CID I typed pow config apply --watch <CID waited a long time while it said the job was executing and then I got...\n\n---------------------------------------+--------------------------------+-------+-------+--------------\n             <job id here>             | JOB_STATUS_FAILED executing    |       |       |\n                                       | cold-storage config: making    |       |       |\n                                       | deal configs: getting miners   |       |       |\n                                       | from minerselector: getting    |       |       |\n                                       | miners from reputation         |       |       |\n                                       | module: not enough miners from |       |       |\n                                       | reputation module to satisfy   |       |       |\n                                       | the constraints                |       |       |\n\nI don't understand what the problem is. I repeated the pow config apply --watch <CID command each time adding the --override flag with several different modifications to a custom config file. The content did appear briefly on IPFS (not Filecoin), but after I continued running the config apply command the site went down from IPFS.","491":"The title sums it up I was watching a tutorial on how to deploy a liquidity pool using just solidity and wanted to know if it can have more than 2 tokens","492":"I want to create ERC20 token, and I need callbacks, but <blockchain> does not support callback's.\nSo I need to connect with API and get all <transactions>.\nExample token:\nhttps:\/\/etherscan.io\/token\/0x259153f56e7cab5c2c31575adae5e9da8ee68e69When (I want to get all transaction IDs from this token)\nHere is API documentation: https:\/\/etherscan.io\/apis\nBut I can't find it, how it is possible.","493":"I am trying to make a simple \"text editor\" in solidity on an Ethereum network smart contract. I want to make a data entry function, which collects the text in a STRING and a BYTES10 variable that collects the position of the text. You must store the text neatly so that you can access it later. And you should be able to enter new text without replacing the old one. Then an output function that returns the text and the coordinates, all those entered into the network since the beginning of the contract. And a function that allows you to delete data, in case any is entered wrong. I have this code so far:\n    pragma solidity <0.9.0;\n    contract texteditor {\n        struct book {\n            string block;\n            bytes10 coordinates;\n        }\n        book [] public books;\n        function save(string calldata _blocks, bytes10   _coordinates) public{\n            books.push(book(_blocks, _coordinates));\n        }\n        function read()view public returns (string){\n            return books[_block][_coordinates];\n        }\n        function remove(string _blocks, bytes10 _coordinates) private {\n            delete book[_blocks][_coordinates];\n        }}\n\nThe function to save the text I think is fine, but with the other two I am having problems compiling, I don't know if because of the compiler version or because the functions are not right. The information that I find in blogs and other help about this topic, apparently is quite outdated in terms of the compiler version and tends to give me problems. I imagine that I have to do a mapping, but I have not found the way yet. I appreciate any help you can give me to move me forward on this. Thank you very much for your time.","494":"Do I need something like Solidity for DApp in my mobile wallet application (that I am currently programming with Flutter) or can I just hard-code it?","495":"I have read about ERC 1155 that how it can be used to mint both fungible(ERC20) and non-fungible(ERC721) tokens. So my question is:\n\nFungible tokens that we mint using ERC1155 will have exact same functions as a token minted from ERC20 contract will have or more functions can be added in it from ERC721 standard?\nI guess what I mean is that can functions of ERC20 and ERC721 be mixed to create kind of a semi fungable token?","496":"I have previously used this code to get events from PancakeSwapV2 factory on the Binance Smart Chain. I'd like now to use this code to get events from UniswapV2 factory on the Ethereum <blockchain> but I get the following error :\n(node:3544) UnhandledPromiseRejectionWarning: Error: resolver or addr is not configured for ENS name (argument=\"name\", value=\"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f \", code=INVALID_ARGUMENT, version=contracts\/5.4.0)\n    at Logger.makeError (C:\\Users\\aaaa\\WebstormProjects\\<web3>test\\node_modules\\@ethersproject\\logger\\lib\\index.js:187:21)\n    at Logger.throwError (C:\\Users\\aaaa\\WebstormProjects\\<web3>test\\node_modules\\@ethersproject\\logger\\lib\\index.js:196:20)\n    at Logger.throwArgumentError (C:\\Users\\aaaa\\WebstormProjects\\<web3>test\\node_modules\\@ethersproject\\logger\\lib\\index.js:199:21)\n    at C:\\Users\\aaaa\\WebstormProjects\\<web3>test\\node_modules\\@ethersproject\\contracts\\lib\\index.js:101:32\n    at step (C:\\Users\\aaaa\\WebstormProjects\\<web3>test\\node_modules\\@ethersproject\\contracts\\lib\\index.js:48:23)\n    at Object.next (C:\\Users\\aaaa\\WebstormProjects\\<web3>test\\node_modules\\@ethersproject\\contracts\\lib\\index.js:29:53)\n    at fulfilled (C:\\Users\\aaaa\\WebstormProjects\\<web3>test\\node_modules\\@ethersproject\\contracts\\lib\\index.js:20:58)\n    at processTicksAndRejections (internal\/process\/task_queues.js:95:5)\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:3544) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To\n terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https:\/\/nodejs.org\/api\/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\n(node:3544) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the <node.js> process with a non-zero exit code.\n\nProcess finished with exit code 0\n\nHere's the source code I'm trying to reuse :\nconst <web3> = require('<web3>');\nconst ethers = require('ethers');\n\nconst INFURA_BASE_URL = 'https:\/\/mainnet.infura.io\/v3\/';\nconst INFURA_API_KEY = 'REPLACE';\n<web3> = new <web3>(new <web3>.providers.HttpProvider(INFURA_BASE_URL + INFURA_API_KEY));\n\nconst privateKey = \"REPLACE\";\nconst account = <web3>.eth.accounts.privateKeyToAccount(privateKey)\nconsole.log(account.address)\n\nconst provider = new ethers.providers.JsonRpcProvider('https:\/\/mainnet.infura.io\/v3\/REPLACE');\nconst wallet = new ethers.Wallet(privateKey);\nconst account2 = wallet.connect(provider);\n\nconst addresses = {\n    WETH: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    factory: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f ',\n    router: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D ',\n    recipient: account.address\n};\n\n\/\/console.log(provider)\n\nconst factory = new ethers.Contract(\n    addresses.factory,\n    [\n        'event PairCreated(address indexed token0, address indexed token1, address pair, uint)',\n        'function getPair(address tokenA, address tokenB) external view returns (address pair)'\n    ],\n    account2\n);\n\nfactory.on('PairCreated', async (token0, token1, pairAddress) => { }\n\nWould you know what I'm doing wrong ? Thank you.","497":"Here is the transfer function of my erc20 token which called \"CBC\"\nfunction transfer(address receiver, uint numTokens) public payable returns (bool)  {\n        require(numTokens <= balances[msg.sender],\"Not Enough Balance\");\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\n        balances[receiver] = balances[receiver].add(numTokens);\n        emit Transfer(msg.sender, receiver, numTokens);\n        return true;\n    }\n\nAnd I called the transfer function in another ERC721 contract, here is my code\nfunction mint(string calldata _uri,uint value) external onlyOwner {\n    token.transfer(receiverAddress,value);\n    super._mint(msg.sender, tokenId);\n    super._setTokenUri(tokenId, _uri);\n    urlOf[tokenId] = _uri;\n    tokenId = tokenId + 1;\n    emit MintToken(msg.sender, tokenId, _uri,value);\n}\n\nIn My tests, it always failed with the exception of not enough user balance but i can confirm that the deployer has enough balance and here is the\nerror i am getting\nCan someone tell me how to fix it as I am new to <blockchain>, that is appreciated","498":"I'm trying to pull the <transactions> that took place on a specific block, and I get stuck here:\nfrom <web3> import <web3>\n\nbsc = \"https:\/\/bsc-dataseed.binance.org\/\"\n<web3> = <web3>(<web3>.HTTPProvider(bsc))\n\nblock = <web3>.eth.get_block('latest')\n\n<web3>.exceptions.ExtraDataLengthError: The field extraData is 97 bytes, but should be 32. It is quite likely that you are connected to a POA chain. Refer to http:\/\/<web3>py.readthedocs.io\/en\/stable\/middleware.html#<geth>-style-proof-of-authority for more details.\n\nI want to get the <transactions> that a certain wallet address was involved in, and I have no idea why <web3> isn't letting me pull that from the bsc node.","499":"I tried \"pip install <web3>\" , first on 3.7.6 version than changed it to the latest one 3.9.6 it has the same problem.Also fixed the PATH issue of the <python> folders in control panel but it is showing error.\nType:\n<python> -m venv env\npip install <web3>\non cmd you might see the same error.","500":"I am trying to convert k8s objects available with this git repo to the Helm chart (with four node quorum network)on GKE.\nhttps:\/\/github.com\/ConsenSys\/qubernetes\nI tried changing the following config map blocks for peers\n\"peer\": [\u00c2\u00a0{\n\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\"url\": \"http:\/\/{{ .Release.Name }}-quorum-node1:9001\"\n\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0},\u00c2\u00a0{\n\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\"url\": \"http:\/\/{{ .Release.Name }}-quorum-node2:9001\"\n\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0},\u00c2\u00a0{\n\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\"url\": \"http:\/\/{{ .Release.Name }}-quorum-node3:9001\"\n\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0},\u00c2\u00a0{\n\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\"url\": \"http:\/\/{{ .Release.Name }}-quorum-node4:9001\"\n\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0}],\n\nIf I create a helm chart with the name consensys-nw it should ideally be able to resolve these URLs\nBut when I check logs for tessera I got errors like\nc.q.t.partyinfo.PartyInfoPoller - Error javax.ws.rs.ProcessingException: java.net.UnknownHostException: consensys-quorum-node1 when connecting to http:\/\/consensys-quorum-node1:9001\/\n\nIdeally, it should connect http:\/\/consensys-nw-quorum-node1:9001\/ and not http:\/\/consensys-quorum-node1:9001\/","501":"I have deployed an IOTA tangle network on Hornet and it is running successfully on http:\/\/localhost:8081\/. How do I send a transaction to it?\nAre there any steps or could you please share any documents\/tutorials to do so?","502":"My question is how cryptocurrency exchanges like Binance or Coinbase record users trade into <blockchain> technically.\nFor example when Mr.X buys BTC\/USDT pair from Mr.Y, how does the exchange record these two <transactions> into the <blockchain>. as far as I know, We have two <transactions> now, Mr.X has to sign a USDT transaction to Mr. Y's account & Mr.Y has to sign a transaction for Mr. X's BTC wallet on that exchange. I was wondering how exchanges manage network fees? & how they record these trades into <blockchain>\nI also know Mr.X order will probably fulfill with different accounts but I just want to simplify my question\nthank you.","503":"Got this runtime error while implementing assets pallet\n\n1002: Verification Error: Runtime error: Execution failed: ApiError(FailedToConvertParameter\n\nMore info about error:\n\n1002: Verification Error: Runtime error: Execution failed: ApiError(FailedToConvertParameter { function: \"validate_transaction\", parameter: \"tx\", error: Error { cause: Some(Error { cause: Some(Error { cause: None, desc: \"Not enough data to fill buffer\" }), desc: \"Could not decode Call::create.2\" }), desc: \"Could not decode Call::Assets.0\" } }): RuntimeApi, Execution failed: ApiError, FailedToConvertParameter { function: \"validate_transaction\", parameter: \"tx\", error: Error { cause: Some, Error { cause: Some, Error { cause: None, desc: \"Not enough data to fill buffer\" }, desc: \"Could not\u00e2\u0080\u00a6\n\nImplementation of assets pallet config trait:\nlib.rs:\nparameter_types!{\n    pub const StringLimit: u32 = 50;\n    pub const MetadataDepositBase: Balance = 2 * DOLLARS ;\n    pub const MetaDataDepositPerByte: Balance = 2 * DOLLARS ;\n    \/\/pub const AssetDepositBase: Balance = 2;\n    pub const AssetDepositPerZombie: Balance = 2 * DOLLARS;\n    pub const AssetDeposit: Balance = 2 * DOLLARS ;\n    pub const ApprovalDeposit: Balance = 2 * DOLLARS ;\n}\n\n\nimpl pallet_assets::pallet::Config for Runtime {\n    \/\/ The ubiquitous event type.\n    type Event= Event;\n    type Balance= Balance;\n    type AssetId= u32;\n    type Currency = Balances;\n    type ForceOrigin = EnsureRoot<AccountId>;\n    type AssetDeposit = AssetDeposit;\n    type ApprovalDeposit = ApprovalDeposit;\n    type StringLimit = StringLimit;  \n    \/\/type AssetDepositBase=AssetDepositBase;\n    \/\/type AssetDepositPerZombie= AssetDepositPerZombie;\n    type MetadataDepositBase = MetadataDepositBase;\n    type MetadataDepositPerByte = MetaDataDepositPerByte;\n    type Freezer = ();\n    type Extra = ();\n    type WeightInfo = pallet_assets::weights::SubstrateWeight<Runtime>;\n  \n}","504":"I am working with React and getting some data from the <blockchain> in the App.js using useEffect and storing it with useState but when promises are to be resolved it catches this error:\nerror Error: Returned error: execution reverted\n    at Object.ErrorResponse (errors.js:28)\n    at index.js:303\n    at XMLHttpRequest.request.onreadystatechange (index.js:98)\n\nThis is the code in App.js\nconst data = mainnet.FairLaunch.pools.map((pool) => {\n  const loadingStakingData = async () => {\n    const stakedValue = await getStakeValue(pool);\n    console.log('Loop staking data', stakedValue); \/\/ logging correctly\n    return stakedValue;\n  };\n  return loadingStakingData();\n});\n\nPromise.all(data)\n  .then((values) => {\n    console.log('values', values); \/\/ error breaks app before console.log is triggered\n    setStakingData(values);\n  })\n  .catch((error) => console.error('error', error));\n\nThis is the code for the getStakeValue() which queries the <blockchain> for the data:\nexport async function getStakeValue(param = {}) {\n  const vault = get<web3>VaultContract(param.address); \n\n  const totalSupply = parseInt(await vault.methods.totalSupply().call());\n  const totalToken = parseInt(await vault.methods.totalToken().call());\n  \/\/getFairLaunch gets the address according to the environment prod or dev\n  const balance = await vault.methods.balanceOf(getFairLaunch()).call();\n\n  let stakeValue = (balance * 100 * totalToken) \/ totalSupply;\n  console.log('stakeValue: ' , typeof stakeValue); \/\/number\n  console.log('stakeValue: ' , parseInt(stakeValue)); \/\/ log correctly\n\n  return stakeValue;\n}\n\nAnd this is the ABI with the functions:\nexport default [\n  {\n    \"inputs\": [],\n    \"name\": \"totalToken\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n];\n\nAny idea what this error is and how to fix it?","505":"I've been studying <blockchain> from basics, and studying the TPCoin <python> codes line by line.\nWhile looking into the code, I found that there is no validation method that will prevent the double spending issues or reject the transaction request with invalid signatures.\nI was studying with article below:\nhttps:\/\/morioh.com\/p\/7bfc126c22c2\nclass Transaction:\n\n    def __init__( self, sender, recipient, value ):\n        self.sender = sender \n        self.recipient = recipient \n        self.value = value\n        self.time = datetime.datetime.now()\n        self.signer = \"\"\n    \n    def to_dict( self ):\n\n        if self.sender == \"Genesis\":\n            identity = \"Genesis\"\n        else:\n            identity = self.sender.identity\n\n        return collections.OrderedDict( { 'sender': identity, 'recipient': self.recipient, 'value': self.value, 'time' : self.time } )\n\n    def sign_transaction( self ):\n\n        private_key = self.sender._private_key\n        signer = PKCS1_v1_5.new( private_key )\n        h = SHA.new( str( self.to_dict( ) ).encode( 'utf8' ) )\n        self.signer = binascii.hexlify( signer.sign( h ) ).decode( 'ascii' )\n        return self.signer\n\n    def display_transaction( self ):\n        dict = self.to_dict( )\n        print (\"sender: \" + dict['sender'])\n        print ('-----')\n        print (\"recipient: \" + dict['recipient'])\n        print ('-----')\n        print (\"value: \" + str(dict['value']))\n        print ('-----')\n        print (\"time: \" + str(dict['time']))\n        print ('-----')\n        print (\"signature: \" + self.signer)\n        print ('-----')\n\n    def validate_transaction( self ):\n        ### Double spending? Signature Verification?\n        return\n\nI think there should be a sort of validation function within the Transaction class...but\nnot quite sure what to do.\nI would like to see some brilliant ideas on how to handle this.","506":"I am writing a simple <blockchain> using <python>, currently have some trouble syncing my <transactions> pools which are holding <transactions>! I wrote a method that gets the other nodes awaiting <transactions> and adds them to the self.<transactions>\nthen when I mine a new block this pool would be empty. I know there must be some bugs but I want to know how to handle confirmations.\ndef syn(self):\n         network=self.nodes\n         for node in network:\n                otherts = requests.get(f'http:\/\/{node}\/tspool')\n                response= otherts.json()\n         self.<transactions>+=response\n\nnote: the response has other nodes awaiting transaction","507":"I am following https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.1\/create_channel\/create_channel.html tutorial.\nfirst of all, i didnt find TwoOrgsChannel in profile in configtx.yaml in my version, so i added this section to the profile and got it work and successes in creating a channel creation transaction for channel1.\nbut the command after that which will create the channel using peer channel create, return an error that i searched for but didnt get any similar post, which is:\nEndorser and orderer connections initialized\nError: got unexpected status: BAD_REQUEST -- channel creation request not allowed because the orderer system channel is not defined\nthe section i had added to profile is:\nTwoOrgsChannel:\n    Consortium: SampleConsortium\n    <<: *ChannelDefaults\n    Application:\n        <<: *ApplicationDefaults\n        Organizations:\n            - *Org1\n            - *Org2\n        Capabilities:\n            <<: *ApplicationCapabilities","508":"I am kinda new to solidity and I have this error that keeps popping up after I deployed the contract and run the initTest() function.\nWhat I am trying to do is passing the string that I insert in the initTest() on the runTest so it runs and save the entire string on the <blockchain>.\nI don't have any error when I compile the contrct, only after I deployed it.\npragma solidity ^0.8.0;\nimport \"..\/contracts\/Code.sol\";\n\ncontract CodeTest {\n\n    ContrIdCard private _UniCode;\n    bytes[] private CustID;      \n    bytes[] private ContractID ;\n  \n   function pubblishCode (bytes memory _CustID, bytes memory _ContractID, bool _MultiCustID) private {\n       _UniCode.mkCode(_CustID, _ContractID, _MultiCustID);\n   }\n\n   function initTest() public {\n      uint i = 0;\n      CustID[i] = \"04wT9Os3uv7p\"; ContractID[i++] = \"e7tk6peihfcc6ece1ffbe8f8cd433ae61c1081ae6b94\";\n   }\n   \n   function runTest(bool _MultiCustID) public {\n        for (uint i = 0; i<CustID.length; i++)\n            pubblishCode (CustID[i], ContractID[i], _MultiCustID); \n   }\n   \n   function runTest() public {\n        runTest(false);\n   } \n}\n\nThe error given when I run initTest() is:\n\"transact to CodeTest.initTest errored: VM error: revert.\nrevert\nThe transaction has been reverted to the initial state.\nNote: The called function should be payable if you send value and the value you send should be less than your current balance.\nDebug the transaction to get more information.\"\nWhen I do the debug it gives me value 0  for the CustID e ContractID. What can I do to fix it?","509":"\/**\n* @dev Initializes the contract setting the deployer as the initial owner.\n*\/\nconstructor () internal {\naddress\"msgSender\" = _msgSender();\n_owner = msgSender;\nemit OwnershipTransferred(address(0), msgSender);\n}\n\/**\n * @dev Returns the address of the current owner.\n *\/\nfunction owner() public view returns (address) {\n    return _owner;\n}\n\n\/**\n * @dev Throws if called by any account other than the owner.\n *\/\nmodifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n}","510":"In the below code i have 2 URLs and each url has a path\n  These are 2 urls \n    api[0] = \"https:\/\/www.bitstamp.net\/api\/v2\/ticker\/ethusd\/\";\n    api[1] = \"https:\/\/api.pro.coinbase.com\/products\/eth-usd\/ticker\";\n\n  The path for URL 0 is last and the path for URL 1 is price\n\nI want chainlink nodes to get data(last and price) from these 2 urls and  calculates median of data from 2 urls\ni.e median = {last+price)\/2;\nHow to write code for this logic in Chainlink","511":"we are building a staking smart contract on the ethereum mainnet. All the stakes will need to have a timestamp attached to it, so our logic relies on time.\nThe logic is at the end of the month each stakeholders will have credits, and based on that the contract owner will attribute rewards to each stakeholders based on their creditsAmount. But in order to get the total creditsAmount we need to iterate through the list of stakeHolders, which is super expensive.\nHere is a very short example of our staking contract:\npragma solidity 0.8.6;\nimport \u00e2\u0080\u009c@openzeppelin\/contracts\/utils\/structs\/EnumerableSet.sol\u00e2\u0080\u009d;\n\ncontract Test {\n  using EnumerableSet for EnumerableSet.AddressSet;\n\n  struct Stake {\n    uint256 lockedToken;\n    uint256 creditsEarned; \/\/ numberOfDays * lockedToken = 15days * 1000 = 15000\n  }\n  \n  \/\/ Rewards = RatioOfCreditsEarnedByStakeholder * MonthlyRewards\n\n  EnumerableSet.AddressSet private stakeholders;\n  mapping(address => Stake) private stakeholderToStake;\n\n  function createStake(\n   address stakeholder,\n   uint256 lockedToken,\n   uint256 creditsEarned\n  ) public {\n   stakeholders.add(stakeholder);\n   stakeholderToStake[stakeholder] = Stake({\n     lockedToken: lockedToken,\n     creditsEarned: creditsEarned\n   });\n  }\n      \nfunction distributeRewards() public {\n  uint256 totalCredits = 0;\n  for (uint256 i = 0; i < stakeholders.length(); i++) {\n    totalCredits += stakeholderToStake[stakeholders.at(i)].creditsEarned;\n      }\n    }\n   }\n\nSo as you can imagine the very last loop is extremely costly but we did not find another way to do so for now. Do you have any idea proposition on how to avoid such loop? or other staking contract which relies on time like us?\nThanks","512":"Please forgive my stupid question here.\n\nTo launch my node-template under the TEST NETWORKS category, do I need to host my own polkadot\/apps like what GeekCash did?\nWhat is the correct command to perform on substrate-node-template? the examples are always--dev --tmp.","513":"For each token in a list of tokens, I want to (programatically) get a list of all historical trades of that token on Uniswap or Pancakeswap, with accompanying information such as block number, trade quantity, gas price, token reserves, etc... What is the best way to do this?\nI checked out etherscan.io, but its web interface only allows users to export the most recent DEX trades, not all of them, and its API doesn't seem to be able to solve my problem.","514":"In smart contract I have add function like shown below. How to write update function for this?\nfunction addEmployee(\n     int empid, string memory name, \n     string memory department, \n     string memory designation\n   ) public{\n       Employee memory e\n         =Employee(empid,\n                   name,\n                   department,\n                   designation);\n       emps.push(e);","515":"Running a test node in GCP, using Docker 9.9.4, Ubuntu, Postgres db, Infura. I had issues with public\/private IP, but once I cleared that up my node is up and running.  I am now throwing the error below repeatedly, potentially due to the <blockchain> connection. How do I fix this?\n[ERROR] HeadTracker: dropping head 26085153 with hash 0xf50e19099b7e343829935d70dd7d86c5bc0398286b7a4e4f32ac033ac60c3733 because queue is full. WARNING: Your node is overloaded and may start missing jobs. logger\/default.go:155 stacktrace=github.com\/smartcontractkit\/chainlink\/core\/logger.Errorf","516":"I am beginning a project that uses <hyperledger> Besu as its underlying <blockchain> and looking ahead to interoperability and cross-shard functionalities.\nThere are a number of 'internet-of-<blockchain>' projects (including Polkadot and <hyperledger> Cactus), but I am particularly interested in Cosmos and the Inter-<blockchain> communication (IBC) model.\nMy question is about the compatibility of Besu with Cosmos IBC. In most sources, IBC is said to be compatible with any <blockchain> that offers non-probabilistic consensus. Besu satisfies this when instantiated with, say, IBFT 2.0. Other documentation (see section \"What <blockchain>s are compatible with IBC?\") gives a more significant list of requirements.\nI do not know enough about Besu or the requirements linked to above to evaluate whether Besu can interoperate with IBC.\nIs there a simple answer to whether Besu is compatible with IBC?\nIf not, what aspects of a Besu-based project will influence compatibility?\nThanks-","517":"How can I check the account created by an owner is having a full Accesskey or function_call access key.","518":"I have a file name as \"registerUser.js\"\nthe data inside registerUser.js as follow\nasync function main(){\n \/\/some code\n}\nmodule.exports=main\n\nNow I am writing the testcases of registerUser.js, so how can I import \"main\" in my test file?\nP.S.- while importing registerUser file it is giving me an error in restoring the function in testcase","519":"i have been trying to connect metamask and ethers.js to fetch my current wallet balance\n\n\nconst provider = new ethers.providers.<web3>Provider(window.ethereum)\nconst signer = provider.getSigner()\nbalance =  provider.getBalance(\"0x7C76C63DB86bfB5437f7426F4C37b15098Bb81da\")\n\nwhen i try this i am getting a error\nReferenceError: window is not defined\nAnyone has idea how to do this?","520":"i would like to understand this assert condition in function send token.....i think the first assert for before adding tokenbalance is always gather then the up coming token but I don't sure about it....?\npragma solidity ^0.5.11;\ncontract EventExample {\n\n mapping(address => uint) public tokenBalance;\n\n event TokensSent(address _from, address _to, uint _amount);\n\n constructor() public {\n tokenBalance[msg.sender] = 100;\n }\n\n function sendToken(address _to, uint _amount) public returns(bool) {\n require(tokenBalance[msg.sender] >= _amount, \"Not enough tokens\");\n assert(tokenBalance[_to] + _amount >= tokenBalance[_to]);\n assert(tokenBalance[msg.sender] - _amount <= tokenBalance[msg.sender])\n;\n tokenBalance[msg.sender] -= _amount;\n tokenBalance[_to] += _amount;\n\n emit TokensSent(msg.sender, _to, _amount);\n\n return true;\n }\n\n}","521":"I have the above-mentioned error in s1=\"some very long string............\" \n\nDoes anyone know what I am doing wrong?","522":"I am using <web3> to connect to metamask using below method\nawait window.ethereum.request({ method: 'eth_requestAccounts' });\nvar address = await window.ethereum.request({ method: 'eth_accounts' });\n\nbut when i am refreshing screen it still shows as connected, i am not able to find any method in <web3> to disconnect it from website like pancackeswap have","523":"Hello I am currently working on a <blockchain> app . The problem is when I confirm the transaction with metamask notification, I need to refresh the page to see the changes. Is there is any way to avoid refreshing pages ?","524":"Module is not recognised when i try to build my node after creating my pallet","525":"Im connecting to BSC websocket with:\nlet options = {\n    filter: {\n        value: [],\n    },\n    fromBlock: 0\n};\n\nmyContract.events.Transfer(options)\n    .on('data', event => console.log(event))\n    .on('changed', changed => console.log(changed))\n    .on('error', err => throw err)\n    .on('connected', str => console.log(str))\n\nIn response on the 'Transfer' event I get the\n   data  {\n  address: 'xxxxx',\n  blockNumber: xxx,\n  transactionHash: 'xxxx',\n  transactionIndex: 17,\n  blockHash: 'xxx',\n  logIndex: 35,\n  removed: false,\n  id: 'xx',\n  returnValues: Result {\n    '0': 'xx',\n    '1': 'xx',\n    '2': '800000000000000000',\n    from: 'xx',\n    to: 'xxx',\n    value: '800000000000000000'\n  },\n  event: 'Transfer',\n  signature: 'xxx',\n  raw: {\n    data: 'xxx',\n    topics: [\n      'xxx',\n      'xx',\n      'xxx'\n    ]\n  }\n}\n\nI want to determine the SELL\/BUY transaction. How I can know if this is sell or a buy?","526":"intial_deploy_contract.js file\nconst DappToken = artifacts.require('DappToken.sol')\nconst DaiToken = artifacts.require('DaiToken.sol')\nconst TokenFarm = artifacts.require('TokenFarm.sol')\n\nmodule.exports = async function(deployer, network, accounts) {\n  \/\/Deploy Mock DAI Token\n  await deployer.deploy(DaiToken)\n  const daiToken = await DaiToken.deployed()\n\n  \/\/Deploy Dapp Token\n  await deployer.deploy(DappToken)\n  const dappToken = await DappToken.deployed()\n\n  \/\/Deploy TokenFarm\n  await deployer.deploy(TokenFarm, dappToken.address, daiToken.address)\n  const TokenFarm = await TokenFarm.deployed()\n\n  \/\/Transfer all tokens to TokenFarm(1 million)\n  await dappToken.transfer(tokenFarm.address, '1000000000000000000000000')\n\n  \/\/Transfer 100 Mock DAI tokens to investor\n  await daiToken.transfer(accounts[1], '100000000000000000000')\n\n };'\n\nTokenFarm.sol File\n pragma solidity ^0.5.0;\n\n import \".\/DappToken.sol\";\n import \".\/DaiToken.sol\";\n\n contract TokenFarm {\n   \/\/All code goes here...\n   string public name = \"Dapp Token Farm\";\n   DappToken public dappToken;\n   DaiToken public daiToken;\n\n  constructor(DappToken _dappToken, DaiToken _daiToken) public {\n      \/\/Storing reference to the DappToken and DaiToken\n      dappToken = _dappToken;\n      daiToken = _daiToken;\n  }\n}\n\nThe file gets compile successfully but when migrated using truffle migrate --reset it is showing the ReferenceError as\nReferenceError: Cannot access 'TokenFarm' before initialization\nat module.exports (C:\\Users\\NIHAL SINGH\\Desktop\\defi_tutorial\\migrations\\2_deploy_contracts.js:15:25)\nat processTicksAndRejections (internal\/process\/task_queues.js:93:5)\nat Migration._load (C:\\Users\\NIHAL SINGH\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\migrate\\Migration.js:55:1)\nat Migration.run (C:\\Users\\NIHAL SINGH\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\migrate\\Migration.js:171:1)\nat Object.runMigrations (C:\\Users\\NIHAL SINGH\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\migrate\\index.js:150:1)\nat Object.runFrom (C:\\Users\\NIHAL SINGH\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\migrate\\index.js:110:1)\nat Object.runAll (C:\\Users\\NIHAL SINGH\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\migrate\\index.js:114:1)\nat Object.run (C:\\Users\\NIHAL SINGH\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\migrate\\index.js:79:1)\nat runMigrations (C:\\Users\\NIHAL SINGH\\AppData\\Roaming\\npm\\node_modules\\truffle\\build\\webpack:\\packages\\core\\lib\\commands\\migrate.js:269:1)","527":"Wondering if anyone can help me with a error im getting within my solidity contract.\nIm getting the errir \"Stack too deep\". I understand the meaning behind the error however Im having trouble fixing it.\nThe Error is occuring here (3rd line):\nfunction _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256) {\n        (uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tMarketing, uint256 tBurn) = _getTValues(tAmount);\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tLiquidity, tMarketing, tBurn, _getRate());\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tLiquidity, tMarketing, tBurn);\n    }","528":"i am begginer can any one explain me what is balanceRecived in solidity? what it will be strore?\n\/\/ SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.1;\n\ncontract SendMoneyExample {\n\n    uint public balanceReceived;\n\n    function receiveMoney() public payable {\n        balanceReceived += msg.value;\n    }\n\n    function getBalance() public view returns(uint) {\n        return address(this).balance;\n    }\n\n    function withdrawMoney() public {\n        address payable to = payable(msg.sender);\n        to.transfer(getBalance());\n    }\n}","529":"I'm trying to follow Writing yout first application tutorial, but I always get some errors that I don't know how to solve. When creating network with .\/network.sh up createChannel -c mychannel -ca, I get error:\nError: Post \"https:\/\/localhost:7051\/participation\/v1\/channels\": dial tcp [::1]:7051: connectex: No connection could be made because the target machine actively refused it.\nI think that is because my docker images are not running at the moment and I can't start them manually because they immediately stop running.\nSo I started network with .\/network.sh up, and when the network is up I tried to make channel with CA with .\/network.sh up createChannel -c mychannel -ca, but I get next error.\n$ .\/network.sh createChannel -c mychannel -ca\n    Creating channel 'mychannel'.\n    If network is not up, starting nodes with CLI timeout of '5' tries and CLI delay of '3' seconds and using database 'leveldb\n    Generating channel genesis block 'mychannel.block'\n    \/c\/Users\/marij\/fabric-samples\/bin\/configtxgen\n    + configtxgen -profile TwoOrgsApplicationGenesis -outputBlock .\/channel-artifacts\/mychannel.block -channelID mychannel\n    2021-07-04 20:48:01.621 CEST [common.tools.configtxgen] main -> INFO 001 Loading configuration\n    2021-07-04 20:48:01.642 CEST [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002 orderer type: etcdraft\n    2021-07-04 20:48:01.642 CEST [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003 Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216\n    2021-07-04 20:48:01.642 CEST [common.tools.configtxgen.localconfig] Load -> INFO 004 Loaded configuration: C:\\Users\\marij\\fabric-samples\\test-network\\configtx\\configtx.yaml\n    2021-07-04 20:48:01.661 CEST [common.tools.configtxgen] doOutputBlock -> INFO 005 Generating genesis block\n    2021-07-04 20:48:01.661 CEST [common.tools.configtxgen] doOutputBlock -> INFO 006 Creating application channel genesis block\n    2021-07-04 20:48:01.664 CEST [common.tools.configtxgen] doOutputBlock -> INFO 007 Writing genesis block\n    + res=0\n    Creating channel mychannel\n    Using organization 1\n    + osnadmin channel join --channelID mychannel --config-block .\/channel-artifacts\/mychannel.block -o localhost:7051 --ca-file \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/msp\/tlscacerts\/tlsca.example.com-cert.pem --client-cert \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt --client-key \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.key\n    + res=1\n    + osnadmin channel join --channelID mychannel --config-block .\/channel-artifacts\/mychannel.block -o localhost:7051 --ca-file \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/msp\/tlscacerts\/tlsca.example.com-cert.pem --client-cert \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt --client-key \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.key\n    + res=1\n    + osnadmin channel join --channelID mychannel --config-block .\/channel-artifacts\/mychannel.block -o localhost:7051 --ca-file \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/msp\/tlscacerts\/tlsca.example.com-cert.pem --client-cert \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt --client-key \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.key\n    + res=1\n    + osnadmin channel join --channelID mychannel --config-block .\/channel-artifacts\/mychannel.block -o localhost:7051 --ca-file \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/msp\/tlscacerts\/tlsca.example.com-cert.pem --client-cert \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt --client-key \/c\/Users\/marij\/fabric-samples\/test-network\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.key\n    + res=1\n    Error: Post \"https:\/\/localhost:7051\/participation\/v1\/channels\": x509: certificate signed by unknown authority\n\nCan someone help me because I'm becoming desperate.\nDocker:\nCONTAINER ID   IMAGE                               COMMAND                  CREATED          STATUS                   PORTS                                                                                  NAMES\n7f0e3eede2ff   <hyperledger>\/fabric-tools:latest     \"\/bin\/bash\"              46 seconds ago   Up 45 seconds                                                                                                   cli\n75f54baf5b97   <hyperledger>\/fabric-orderer:latest   \"orderer\"                48 seconds ago   Up 47 seconds            0.0.0.0:7050->7050\/tcp, :::7050->7050\/tcp, 0.0.0.0:7053->7053\/tcp, :::7053->7053\/tcp   orderer.example.com\n7c27e21bcd91   <hyperledger>\/fabric-peer:latest      \"peer node start\"        48 seconds ago   Up 47 seconds            7051\/tcp, 0.0.0.0:9051->9051\/tcp, :::9051->9051\/tcp                                    peer0.org2.example.com\ndc39c53222d3   <hyperledger>\/fabric-peer:latest      \"peer node start\"        48 seconds ago   Up 45 seconds            0.0.0.0:7051->7051\/tcp, :::7051->7051\/tcp                                              peer0.org1.example.com\nc3ac36198cb8   graphprotocol\/graph-node:latest     \"\/bin\/sh -c start\"       7 days ago       Exited (1) 7 days ago                                                                                           relaxed_mahavira\n97ac82818ee5   postgres:12                         \"docker-entrypoint.s\u00e2\u0080\u00a6\"   2 weeks ago      Up 44 minutes            0.0.0.0:5432->5432\/tcp, :::5432->5432\/tcp                                              postgres\ndb02ee15750d   4885c2bc6c0e                        \"docker-entrypoint.s\u00e2\u0080\u00a6\"   6 weeks ago      Exited (0) 5 weeks ago                                                                                          nest-api\n57c878b18e20   docker\/getting-started              \"\/docker-entrypoint.\u00e2\u0080\u00a6\"   6 weeks ago      Exited (0) 6 weeks ago                                                                                          confi","530":"I have a conceptual question. The normal transaction lifecycle involves:\n\nA client sending a transaction to a few peers.\nThe peers simulate it and endorse it. The endorsement is sent back to the client.\nThe client upon receiving the endorsement, broadcasts it to the ordering service.\n\nWhy do we have the extra overhead of the peers sending the endorsement back to the client? Why can't they just directly send it back to the ordering service?","531":"I'm actually playing with <blockchain>s in nodejs (with WebStorm IDE).\nThe following code has produced a \"BAD_POOL_CALLER\" bluescreen on Win7. Could you know why ? Thanks.\nconst <web3> = require('<web3>');\nconst <web3> = new <web3>('https:\/\/bsc-dataseed1.binance.org:443');\n\n\/\/ Parcourir tous les blocs entre bloc courant et bloc-1000 et lister toutes les <transactions> de chaque bloc\n<web3>.eth.getBlockNumber().then(blockNumber => {\n    for(let i=blockNumber-1000; i<=blockNumber; i++) {\n        <web3>.eth.getBlock(i).then(block => {\n            block.<transactions>.forEach(function(t) {\n                <web3>.eth.getTransaction(t).then(transaction => {\n                    console.log(i + ' ' + transaction.hash + ' ' + transaction.from + ' ' + transaction.to)\n                })\n            })\n        })\n    }\n});","532":"I am very new to solidity. I am making a free token giver on my front end website where the user inputs his or her address and gets a free token.\nThe contract is linked to my <web3>js and everything is working well. But I can't automatically transfer tokens without having to approve the transaction on metamask. I really want to automate this process so I could implement a lot of new functions to my website.\nWhen I interact with my contract in remix it works well but in java it has to do metamask things.\nHere is my function code in javascript:\nfunction Coingiver()\n    {\n        const <web3> = new <web3>(window.ethereum);\n        var slotContract = new <web3>.eth.Contract(abi, address);\n\n        const addressreceive = document.getElementById(\"address\").value;    \n        const addressend = \"0x582077e61D52bB1Ae6FB9EcEDa1eb39153E9A269\";\n\n        window.ethereum.enable();\n\n        slotContract.methods.transferFrom(addressend, addressreceive, 1).send({from : addressend},function(err, res)\n        {\n            if(err)\n            {\n                console.log(\"error\", err)\n                return\n            }\n            console.log(\"Hash of the transaction: \", res)\n        });\n\n        checkBalance();\n    }\n\nHow do I automate this process so I don't have to approve the transaction every time?","533":"When I send a request from a Decentralized Application I don't want to appear metamask popup every time.\nPlease help me how can I avoid metamask popup every time.","534":"I need to clarify a doubt in the development of Dapp, when creating a mobile app with flutter can I use <web3> to connect with the wallet and the <blockchain>?","535":"I have created a 2 orgs 1 peer each and one orderer and deployed in docker swarm.\nInstead of using cryptogen i have used fabric-ca to generate the identities. I'm able to start the peers and orderers and able to create channel and join both the peers into the channel.\nAfter joining the peers to channel, I could see the orderer logs:\n2021-06-30 20:38:02.241 UTC [policies] SignatureSetToValidIdentities -> WARN 1ea invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:38:02.242 UTC [policies] SignatureSetToValidIdentities -> WARN 1eb invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:38:02.243 UTC [policies] SignatureSetToValidIdentities -> WARN 1ec invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:38:02.243 UTC [common.deliver] deliverBlocks -> WARN 1ed [channel: mychannel] Client 10.200.1.4:59232 is not authorized: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Readers' sub-policies to be satisfied: permission denied\n2021-06-30 20:38:02.243 UTC [comm.grpc.server] 1 -> INFO 1ee streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=10.200.1.4:59232 grpc.code=OK grpc.call_duration=2.409698ms\n2021-06-30 20:38:49.480 UTC [policies] SignatureSetToValidIdentities -> WARN 1ef invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:38:49.481 UTC [policies] SignatureSetToValidIdentities -> WARN 1f0 invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:38:49.481 UTC [policies] SignatureSetToValidIdentities -> WARN 1f1 invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:38:49.481 UTC [common.deliver] deliverBlocks -> WARN 1f2 [channel: mychannel] Client 10.200.1.4:37920 is not authorized: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Readers' sub-policies to be satisfied: permission denied\n2021-06-30 20:38:49.482 UTC [comm.grpc.server] 1 -> INFO 1f3 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=10.200.1.4:37920 grpc.code=OK grpc.call_duration=2.250383ms\n2021-06-30 20:40:58.639 UTC [policies] SignatureSetToValidIdentities -> WARN 1f4 invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:40:58.640 UTC [policies] SignatureSetToValidIdentities -> WARN 1f5 invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:40:58.640 UTC [policies] SignatureSetToValidIdentities -> WARN 1f6 invalid identity: certificate subject=CN=peer0.org1.example.com,OU=COP,L=San Francisco,ST=California,C=US serialnumber=268337738708423250738667250199689187829 error=\"the supplied identity is not valid: x509: certificate signed by unknown authority\"\n2021-06-30 20:40:58.641 UTC [common.deliver] deliverBlocks -> WARN 1f7 [channel: mychannel] Client 10.200.1.4:59250 is not authorized: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Readers' sub-policies to be satisfied: permission denied\n2021-06-30 20:40:58.641 UTC [comm.grpc.server] 1 -> INFO 1f8 streaming call completed grpc.service=orderer.AtomicBroadcast grpc.method=Deliver grpc.peer_address=10.200.1.4:59250 grpc.code=OK grpc.call_duration=16.793212ms\n\npeer logs:\n2021-06-30 20:40:58.641 UTC [peer.blocksprovider] DeliverBlocks -> WARN 094 Got error while attempting to receive blocks: received bad status FORBIDDEN from orderer channel=mychannel orderer-address=orderer.example.com:7050\n2021-06-30 20:44:30.298 UTC [peer.blocksprovider] func1 -> WARN 095 Encountered an error reading from deliver stream: EOF channel=mychannel orderer-address=orderer.example.com:7050\n2021-06-30 20:44:30.298 UTC [peer.blocksprovider] DeliverBlocks -> WARN 096 Got error while attempting to receive blocks: received bad status FORBIDDEN from orderer channel=mychannel orderer-address=orderer.example.com:7050\n2021-06-30 20:48:44.848 UTC [peer.blocksprovider] DeliverBlocks -> WARN 098 Got error while attempting to receive blocks: received bad status FORBIDDEN from orderer channel=mychannel orderer-address=orderer.example.com:7050\n2021-06-30 20:48:44.848 UTC [peer.blocksprovider] func1 -> WARN 097 Encountered an error reading from deliver stream: EOF channel=mychannel orderer-address=orderer.example.com:7050\n2021-06-30 20:53:49.733 UTC [peer.blocksprovider] func1 -> WARN 099 Encountered an error reading from deliver stream: EOF channel=mychannel orderer-address=orderer.example.com:7050\n2021-06-30 20:53:49.734 UTC [peer.blocksprovider] DeliverBlocks -> WARN 09a Got error while attempting to receive blocks: received bad status FORBIDDEN from orderer channel=mychannel orderer-address=orderer.example.com:7050\n\nconfigtx.yaml file:\n# Copyright IBM Corp. All Rights Reserved.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n---\n################################################################################\n#\n#   Section: Organizations\n#\n#   - This section defines the different organizational identities which will\n#   be referenced later in the configuration.\n#\n################################################################################\nOrganizations:\n\n    # SampleOrg defines an MSP using the sampleconfig.  It should never be used\n    # in production but may be used as a template for other definitions\n    - &OrdererOrg\n        # DefaultOrg defines the organization which is used in the sampleconfig\n        # of the fabric.git development environment\n        Name: OrdererOrg\n\n        # ID to load the MSP definition as\n        ID: OrdererMSP\n\n        # MSPDir is the filesystem path which contains the MSP configuration\n        MSPDir: \/var\/mynetwork\/organizations\/ordererOrganizations\/example.com\/msp\n\n        # Policies defines the set of policies at this level of the config tree\n        # For organization policies, their canonical path is usually\n        #   \/Channel\/<Application|Orderer>\/<OrgName>\/<PolicyName>\n        Policies:\n            Readers:\n                Type: Signature\n                Rule: \"OR('OrdererMSP.member')\"\n            Writers:\n                Type: Signature\n                Rule: \"OR('OrdererMSP.member')\"\n            Admins:\n                Type: Signature\n                Rule: \"OR('OrdererMSP.admin')\"\n\n        OrdererEndpoints:\n            - orderer.example.com:7050\n\n    - &Org1\n        # DefaultOrg defines the organization which is used in the sampleconfig\n        # of the fabric.git development environment\n        Name: Org1MSP\n\n        # ID to load the MSP definition as\n        ID: Org1MSP\n\n        MSPDir: \/var\/mynetwork\/organizations\/peerOrganizations\/org1.example.com\/msp\n\n        # Policies defines the set of policies at this level of the config tree\n        # For organization policies, their canonical path is usually\n        #   \/Channel\/<Application|Orderer>\/<OrgName>\/<PolicyName>\n        Policies:\n            Readers:\n                Type: Signature\n                Rule: \"OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')\"\n            Writers:\n                Type: Signature\n                Rule: \"OR('Org1MSP.admin', 'Org1MSP.client')\"\n            Admins:\n                Type: Signature\n                Rule: \"OR('Org1MSP.admin')\"\n            Endorsement:\n                Type: Signature\n                Rule: \"OR('Org1MSP.peer')\"\n\n    - &Org2\n        # DefaultOrg defines the organization which is used in the sampleconfig\n        # of the fabric.git development environment\n        Name: Org2MSP\n\n        # ID to load the MSP definition as\n        ID: Org2MSP\n\n        MSPDir: \/var\/mynetwork\/organizations\/peerOrganizations\/org2.example.com\/msp\n\n        # Policies defines the set of policies at this level of the config tree\n        # For organization policies, their canonical path is usually\n        #   \/Channel\/<Application|Orderer>\/<OrgName>\/<PolicyName>\n        Policies:\n            Readers:\n                Type: Signature\n                Rule: \"OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')\"\n            Writers:\n                Type: Signature\n                Rule: \"OR('Org2MSP.admin', 'Org2MSP.client')\"\n            Admins:\n                Type: Signature\n                Rule: \"OR('Org2MSP.admin')\"\n            Endorsement:\n                Type: Signature\n                Rule: \"OR('Org2MSP.peer')\"\n\n################################################################################\n#\n#   SECTION: Capabilities\n#\n#   - This section defines the capabilities of fabric network. This is a new\n#   concept as of v1.1.0 and should not be utilized in mixed networks with\n#   v1.0.x peers and orderers.  Capabilities define features which must be\n#   present in a fabric binary for that binary to safely participate in the\n#   fabric network.  For instance, if a new MSP type is added, newer binaries\n#   might recognize and validate the signatures from this type, while older\n#   binaries without this support would be unable to validate those\n#   transactions.  This could lead to different versions of the fabric binaries\n#   having different world states.  Instead, defining a capability for a channel\n#   informs those binaries without this capability that they must cease\n#   processing transactions until they have been upgraded.  For v1.0.x if any\n#   capabilities are defined (including a map with all capabilities turned off)\n#   then the v1.0.x peer will deliberately crash.\n#\n################################################################################\nCapabilities:\n    # Channel capabilities apply to both the orderers and the peers and must be\n    # supported by both.\n    # Set the value of the capability to true to require it.\n    Channel: &ChannelCapabilities\n        # V2_0 capability ensures that orderers and peers behave according\n        # to v2.0 channel capabilities. Orderers and peers from\n        # prior releases would behave in an incompatible way, and are therefore\n        # not able to participate in channels at v2.0 capability.\n        # Prior to enabling V2.0 channel capabilities, ensure that all\n        # orderers and peers on a channel are at v2.0.0 or later.\n        V2_0: true\n\n    # Orderer capabilities apply only to the orderers, and may be safely\n    # used with prior release peers.\n    # Set the value of the capability to true to require it.\n    Orderer: &OrdererCapabilities\n        # V2_0 orderer capability ensures that orderers behave according\n        # to v2.0 orderer capabilities. Orderers from\n        # prior releases would behave in an incompatible way, and are therefore\n        # not able to participate in channels at v2.0 orderer capability.\n        # Prior to enabling V2.0 orderer capabilities, ensure that all\n        # orderers on channel are at v2.0.0 or later.\n        V2_0: true\n\n    # Application capabilities apply only to the peer network, and may be safely\n    # used with prior release orderers.\n    # Set the value of the capability to true to require it.\n    Application: &ApplicationCapabilities\n        # V2_0 application capability ensures that peers behave according\n        # to v2.0 application capabilities. Peers from\n        # prior releases would behave in an incompatible way, and are therefore\n        # not able to participate in channels at v2.0 application capability.\n        # Prior to enabling V2.0 application capabilities, ensure that all\n        # peers on channel are at v2.0.0 or later.\n        V2_0: true\n\n################################################################################\n#\n#   SECTION: Application\n#\n#   - This section defines the values to encode into a config transaction or\n#   genesis block for application related parameters\n#\n################################################################################\nApplication: &ApplicationDefaults\n\n    # Organizations is the list of orgs which are defined as participants on\n    # the application side of the network\n    Organizations:\n\n    # Policies defines the set of policies at this level of the config tree\n    # For Application policies, their canonical path is\n    #   \/Channel\/Application\/<PolicyName>\n    Policies:\n        Readers:\n            Type: ImplicitMeta\n            Rule: \"ANY Readers\"\n        Writers:\n            Type: ImplicitMeta\n            Rule: \"ANY Writers\"\n        Admins:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Admins\"\n        LifecycleEndorsement:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Endorsement\"\n        Endorsement:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Endorsement\"\n\n    Capabilities:\n        <<: *ApplicationCapabilities\n################################################################################\n#\n#   SECTION: Orderer\n#\n#   - This section defines the values to encode into a config transaction or\n#   genesis block for orderer related parameters\n#\n################################################################################\nOrderer: &OrdererDefaults\n\n    # Orderer Type: The orderer implementation to start\n    OrdererType: etcdraft\n    \n    # Addresses used to be the list of orderer addresses that clients and peers\n    # could connect to.  However, this does not allow clients to associate orderer\n    # addresses and orderer organizations which can be useful for things such\n    # as TLS validation.  The preferred way to specify orderer addresses is now\n    # to include the OrdererEndpoints item in your org definition\n    Addresses:\n        - orderer.example.com:7050\n\n    EtcdRaft:\n        Consenters:\n        - Host: orderer.example.com\n          Port: 7050\n          ClientTLSCert: \/var\/mynetwork\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt\n          ServerTLSCert: \/var\/mynetwork\/organizations\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/tls\/server.crt\n\n    # Batch Timeout: The amount of time to wait before creating a batch\n    BatchTimeout: 2s\n\n    # Batch Size: Controls the number of messages batched into a block\n    BatchSize:\n\n        # Max Message Count: The maximum number of messages to permit in a batch\n        MaxMessageCount: 10\n\n        # Absolute Max Bytes: The absolute maximum number of bytes allowed for\n        # the serialized messages in a batch.\n        AbsoluteMaxBytes: 99 MB\n\n        # Preferred Max Bytes: The preferred maximum number of bytes allowed for\n        # the serialized messages in a batch. A message larger than the preferred\n        # max bytes will result in a batch larger than preferred max bytes.\n        PreferredMaxBytes: 512 KB\n\n    # Organizations is the list of orgs which are defined as participants on\n    # the orderer side of the network\n    Organizations:\n\n    # Policies defines the set of policies at this level of the config tree\n    # For Orderer policies, their canonical path is\n    #   \/Channel\/Orderer\/<PolicyName>\n    Policies:\n        Readers:\n            Type: ImplicitMeta\n            Rule: \"ANY Readers\"\n        Writers:\n            Type: ImplicitMeta\n            Rule: \"ANY Writers\"\n        Admins:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Admins\"\n        # BlockValidation specifies what signatures must be included in the block\n        # from the orderer for the peer to validate it.\n        BlockValidation:\n            Type: ImplicitMeta\n            Rule: \"ANY Writers\"\n\n################################################################################\n#\n#   CHANNEL\n#\n#   This section defines the values to encode into a config transaction or\n#   genesis block for channel related parameters.\n#\n################################################################################\nChannel: &ChannelDefaults\n    # Policies defines the set of policies at this level of the config tree\n    # For Channel policies, their canonical path is\n    #   \/Channel\/<PolicyName>\n    Policies:\n        # Who may invoke the 'Deliver' API\n        Readers:\n            Type: ImplicitMeta\n            Rule: \"ANY Readers\"\n        # Who may invoke the 'Broadcast' API\n        Writers:\n            Type: ImplicitMeta\n            Rule: \"ANY Writers\"\n        # By default, who may modify elements at this config level\n        Admins:\n            Type: ImplicitMeta\n            Rule: \"MAJORITY Admins\"\n\n    # Capabilities describes the channel level capabilities, see the\n    # dedicated Capabilities section elsewhere in this file for a full\n    # description\n    Capabilities:\n        <<: *ChannelCapabilities\n\n################################################################################\n#\n#   Profile\n#\n#   - Different configuration profiles may be encoded here to be specified\n#   as parameters to the configtxgen tool\n#\n################################################################################\nProfiles:\n\n    TwoOrgsOrdererGenesis:\n        <<: *ChannelDefaults\n        Orderer:\n            <<: *OrdererDefaults\n            Organizations:\n                - *OrdererOrg\n            Capabilities:\n                <<: *OrdererCapabilities\n        Consortiums:\n            SampleConsortium:\n                Organizations:\n                    - *Org1\n                    - *Org2\n    TwoOrgsChannel:\n        Consortium: SampleConsortium\n        <<: *ChannelDefaults\n        Application:\n            <<: *ApplicationDefaults\n            Organizations:\n                - *Org1\n                - *Org2\n            Capabilities:\n                <<: *ApplicationCapabilities\n\norg1 msp cert:\nopenssl x509 -in \/var\/mynetwork\/organizations\/peerOrganizations\/org1.example.com\/users\/Admin@org1.example.com\/msp\/signcerts\/cert.pem -noout -text\n\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            2f:f4:f1:84:51:df:a1:f1:f7:b2:6d:a2:01:5a:23:58:e3:f1:3d:53\n        Signature Algorithm: ecdsa-with-SHA256\n        Issuer: C = US, ST = North Carolina, O = Hyperledger, OU = Fabric, CN = fabric-ca-server\n        Validity\n            Not Before: Jun 29 17:51:00 2021 GMT\n            Not After : Jun 29 17:56:00 2022 GMT\n        Subject: C = US, ST = North Carolina, O = Hyperledger, OU = admin, CN = org1admin\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (256 bit)\n                pub:\n                    04:d4:19:a3:9b:d9:13:3b:37:03:55:61:46:4f:a5:\n                    f6:ff:e3:74:0d:f8:c4:eb:d9:5b:de:d6:06:dd:36:\n                    3a:bd:82:dc:b3:e3:a2:7e:0e:e7:45:b3:c1:3c:69:\n                    0b:ad:30:95:bb:dc:e8:b3:9a:88:09:5c:b7:d8:79:\n                    ba:58:b3:aa:48\n                ASN1 OID: prime256v1\n                NIST CURVE: P-256\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Subject Key Identifier: \n                42:19:31:0A:C0:08:48:C6:2D:5A:1D:85:FC:E6:42:02:9E:44:74:13\n            X509v3 Authority Key Identifier: \n                keyid:48:5D:23:A8:92:AE:71:00:E4:8A:2B:8D:13:D1:CA:62:28:08:5B:5C\n\n            X509v3 Subject Alternative Name: \n                DNS:ubuntupc\n            1.2.3.4.5.6.7.8.1: \n                {\"attrs\":{\"hf.Affiliation\":\"\",\"hf.EnrollmentID\":\"org1admin\",\"hf.Type\":\"admin\"}}\n    Signature Algorithm: ecdsa-with-SHA256\n         30:44:02:20:64:c9:28:09:8d:06:f0:b6:68:1a:60:9f:ea:ec:\n         aa:df:2e:1a:2e:2c:94:bd:0f:60:db:7d:fc:a8:ed:87:f0:9b:\n         02:20:42:93:f3:c6:b3:b8:40:d2:f7:23:c8:67:5d:ca:fd:a0:\n         2b:71:ac:1f:4b:f6:f9:ec:33:78:47:48:11:4a:04:eb\n\nNot sure where I'm missing. is anchor peer mandatory for orderer communication ?","536":"As the title said,\nI can't find any document that has a type column description,\nand don't know the value means.\nIs anyone has an idea?\n{\n    \"jsonrpc\":\"2.0\",\n    \"id\":1,\n    \"result\":{\n        \"blockHash\":\"0xf64a12502afc36db3d29931a2148e5d6ddaa883a2a3c968ca2fb293fa9258c68\",\n        \"blockNumber\":\"0x70839\",\n        \"from\":\"0x0000000000000000000000000000000000000000\",\n        \"gas\":\"0x30d40\",\n        \"gasPrice\":\"0xba43b7400\",\n        \"hash\":\"0x1e2910a262b1008d0616a0beb24c1a491d78771baa54a33e66065e03b1f46bc1\",\n        \"input\":\"0xfc36e15b0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000a4861636b65726e65777300000000000000000000000000000000000000000000\",\n        \"nonce\":\"0xa7\",\n        \"to\":\"0x03fca6077d38dd99d0ce14ba32078bd2cda72d74\",\n        \"transactionIndex\":\"0x0\",\n        \"value\":\"0x0\",\n        \"type\":\"0x0\", \/\/ <- here\n        \"v\":\"0x1c\",\n        \"r\":\"0xe7ccdba116aa95ae8d9bdd02f619a0cdfc1f60c5740b3899865822a80cd70218\",\n        \"s\":\"0xf200df1921ea988d16280a0873b69cb782a54e8a596d15e700710c820c8d2a9e\"\n    }\n}\n\n\nAnd an additional question here,\nas an above result, how can I know the transaction has been completed or failed?","537":"I want to do a couple of things. First, get the data of all the accounts to do a wealth distribution analysis. Second, get the data of all the accounts who have attached identity information.\nI am able to do basic stuff using py-substrate-interface but I am not able to figure out the commands for fetching the data of all the accounts or accounts with identity of some kind attached.","538":"Quick question, is there anyone knows how to upload or send a two-dimensional (2D) array from the Nodejs server application to the function declared in the smart contract (Solidity)?\nI wish to maintain the index of the 2D array because it will be accessed later for the searching purpose.\nThank you in advance!","539":"graph-node from TheGraph can get data from <blockchain>.\nFrom https:\/\/github.com\/graphprotocol\/graph-node\/blob\/master\/docs\/getting-started.md\ncargo run -p graph-node --release -- \\\n  --postgres-url postgresql:\/\/<USERNAME><:PASSWORD>@localhost:5432\/<POSTGRES_DB_NAME> \\\n  --ethereum-rpc <ETHEREUM_NETWORK_NAME>:https:\/\/mainnet.infura.io \\\n  --ipfs 127.0.0.1:5001 \\\n  --debug\n\nSo running with --ethereum-rpc mainnet:https:\/\/mainnet.infura.io \nBut how to have one graph-node to several <blockchain>s, e.g. one Ethereum mainnet and one Ethereum testnet ?","540":"I'm currently working on a <blockchain> type app in <python>. And I'm storing all my <transactions> and <blockchain> stuff in a Json file. And every user will have the copy of it. I want to keep updating the <blockchain> so every transaction is on it. How can I do that?","541":"I am trying to follow the instructions from this tutorial https:\/\/www.notion.so\/Smart-contracts-with-CosmWasm-c6fbcd584b78437a843e738b922dc108 in order to scaffold and set up a local <blockchain> node with CosmWasm smart contracts.\nThe error: unknown command \"add\" for \"starport\" , appears when I execute the command starport add wasm\nIs worth to be mentioned that the instructions prior to that command have been successfully executed","542":"from https:\/\/github.com\/fmerg\/pymerkle\n Defense against second-preimage attack consists in the following security measures:\n    - Before computing the hash of a leaf, prepend the corresponding record with 0x00\n    - Before computing the hash of any interior node, prepend both of its parents' hashes with 0x01\n\n(I understand that 0x00 and 0x01 are just \"specific byte values\" and they could be anything)\nWhy does this work?\nCan't an attacker theoretically find a leaf hash of a forged content that begins with 0x00 ?\nWhat good does prepending the parent's hash nodes do ?","543":"I just want to know that if there is any method or mechanics to deploy contract with a single click like REMIX IDE is doing. I just want to deploy new contract with different parameters. I don't want to use truffle or REMIX to deploy my contracts I just want my own deploy method.\nPlease let me know if possible. And I just want to know that how others are deploying contract instance for every new parameter.\nNote parameters means value in constructor.\nthanks in advance","544":"I am writing a contract where I want to transfer money to an account address passed to a function in the contract. I take three-parameter from, to, and value. Also, I added a screenshot to better understand.\nError Screenshot\ncontract Transaction{\n    \n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n    \n    event Transfer(address buyer, address seller,uint value);\n    \n\n\n    function _transfer(address _from, address payable _to, uint256 _value) internal {\n        require(balances[_from] >= _value, \"Insufficient balance\");\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        _to.transfer(_value);\n    }\n\n   \n\n    function transfer(address _from,address payable _to, uint256 _value) external payable returns (bool) {\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n}\n\nError:\ntransact to Transaction. transfer errored: VM error: revert.\nrevert\nThe transaction has been reverted to the initial state.\nThe reason provided by the contract: \"Insufficient balance\".\nDebug the transaction to get more information.\nPlease Help Where I am wrong?","545":"I'm a novice at React, so I apologize in advance if this is a very stupid and obvious mistake.\nI'm trying to create a Decentralized Application (DApp) for a simple file transfer-over-<blockchain>.\nI'm following the tutorial at : https:\/\/itnext.io\/build-a-simple-ethereum-interplanetary-file-system-ipfs-react-js-dapp-23ff4914ce4e (tl;dr version - basically a file transfer over the <blockchain> network. You upload file to IPFS and then send the IPFS location from one <blockchain> account to another). For the front-end, I am using React.\nTwo things to note -\n1. I am using Ropsten network instead of Rinkeby which has been used in this article\n2. In REMIX, I have set the environment for deploying as 'Injected <web3>'. (something the original project was ambiguous about)\nOne of the dependencies for this project is ipfs-api, but that is now deprecated. So I had to use ipfs-http-client instead. Successfully npm installed it. Upon compiling, however, I get the error\n.\/node_modules\/ipfs-http-client\/src\/lib\/to-url-search-params.js\nModule parse failed: Unexpected token (10:61)\nYou may need an appropriate loader to handle this file type.\n|  * @returns {URLSearchParams}\n|  *\/\n| module.exports = ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) => {\n|   if (searchParams) {\n|     options = {\n\nThe to-url-search-params.js file -\n'use strict'\n\nconst modeToString = require('.\/mode-to-string')\nconst { parseMtime } = require('ipfs-unixfs')\n\n\/**\n * @param {*} params\n * @returns {URLSearchParams}\n *\/\nmodule.exports = ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) => {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    }\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg\n  }\n\n  if (mtime != null) {\n    mtime = parseMtime(mtime)\n\n    options.mtime = mtime.secs\n    options.mtimeNsecs = mtime.nsecs\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode)\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    \/\/ server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = []\n  } else if (!Array.isArray(arg)) {\n    arg = [arg]\n  }\n\n  const urlSearchParams = new URLSearchParams(options)\n\n  arg.forEach((\/** @type {any} *\/ arg) => urlSearchParams.append('arg', arg))\n\n  return urlSearchParams\n}\n\nAll other files are the exact same as the ones provided in https:\/\/github.com\/mcchan1\/eth-ipfs .\nNot sure what the error is... Thanks in advance for the help.","546":"I'm developing a dapp with <node.js> and i have several wallets that I need to check their balances in a short amount of time. when I make a for loop in my wallet addresses and check them individually. I get 503 error from tronweb(I have tried the API too and it had given me the same error) because I'm trying to get so many wallet addresses at the same time. Now I'm searching for a tool or package or anything that can query multiple wallet addresses balance. but I didn't find anything at all. Can anyone help me with that ???","547":"I am a newbie in programming using solidity to create smart contracts. Could you please share some advice on what path i should follow if I wanted to be an expert within a year? I have experience in java. Thank you for your time.","548":"Within Ethereum <blockchain> ecosystem TheGraph https:\/\/thegraph.com\/ became almost standard solution to build GraphQL access to <blockchain> data (indexed in PostgreSQL)\nSubQuery https:\/\/www.subquery.network\/ does the same but for Polkadot chain.\nWhat are main differences between them? What can be reused when redeploying smart contracts to Polkadot chain?","549":"I notice when I try and use Borsh to serialize\/deserialize I'll get errors when the data sizes don't match. For example, if I have an array in the account data and then I go and try and add another element. If I don't already have a placeholder data item in there with dummy values in the fields the serialization attempt will fail. Am I doing something wrong or is this just the way that it is and I just have to accept that?","550":"does anyone know why introducing a simple line like \"Pubkey::new_unique()\" inside https:\/\/github.com\/solana-labs\/example-helloworld\/blob\/master\/src\/program-rust\/src\/lib.rs#L22 will make the program fail?","551":"Based on my limited knowledge for making a transaction you need to have a public address, a private key and a destination public address, to<geth>er, these three can form a transaction which we will broadcast to the <blockchain> for it to execute. Now what I want to do is to store both the public key and the private key on a computer that is not connected to the internet and then when I want to make a transaction I will give it the destination address and it will form a transaction then through QR code I will broadcast this transaction to the <blockchain> using my phone or another computer, this way my private key never touches any piece of equipment that is not safe.\nIs it possible?","552":"Description\nGetting a random number takes a really long time.  After executing the getRandomNumber function, a few minutes go by before I can interact with my random number.\nBasically I click getRandomNumber and have to wait 2-3 minutes until the random number shows up in the randomResult variable.\nSteps to Reproduce\n\nHead over to the documentation here : https:\/\/docs.chain.link\/docs\/get-a-random-number\/\nScroll down and click on \"Deploy this contract using Remix\" (blue outline btn)\nClick on one of the folders that looks like 536123b61468ad4442cfc4278e8de577 then RandomNumberConsumer.sol\nReplace the LINK Token, VRF Coordinator, and Key Hash to be unique to rinkeby https:\/\/docs.chain.link\/docs\/vrf-contracts\/\nNavigation to the Solidity Compiler Tab and click on Compile RandomNumber.sol.\nDeploy the contract on Rinkeby\nCopy to contract address and send LINK token to fund the contract.\nClick on the orange getRandomNumber btn in remix\nClick on randomResult and observe how long it takes for the value in randomResult to change. (Keep clicking until it finally changes)\n\nAdditional Information\nI am not sure if this behavior is intentional or if I need to change up the code.  Ideally I would like to have the value of randomResult once the getRandomNumber function finishes executing.  Right now I don't know when the value of randomResult will show up.","553":"Summary\nThe documentation for getting random numbers in chain-link doesn't work.\nDescription\nGenerating random numbers doesn't work when following the chain-link documentation.  I got an error after copy and pasting the code from the documentation into remix.  The contract does not compile due to the following error.\n\ngist-55c1263fcfc710f834aa38b7bbd21dc1\/VRFD20.sol:60:21: TypeError: Wrong argument count for function call: 3 arguments given but expected 2.\nrequestId = requestRandomness(s_keyHash, s_fee, userProvidedSeed);\n\nI get this error whenever I include the following line in my code.\nrequestRandomness(s_keyHash, s_fee, userProvidedSeed);\nThis error prevents me from generating random numbers using chain-link.\nSteps To Reproduce:\n\nHead over to the documentation here : https:\/\/docs.chain.link\/docs\/intermediates-tutorial\/\nScroll down and click on deploy contract using remix (blue outline button)\nClick on one of the folders that looks like 536123b61468ad4442cfc4278e8de577 then RandomNumberConsumer.sol\nNavigation to the Solidity Compiler Tab and click on Compile RandomNumber.sol.\n\nAdditional Information\nThis error happens for me whenever I call the following line of code.\nrequestRandomness(s_keyHash, s_fee, userProvidedSeed);","554":"I have been diving into Smart Contracts and dispute resolution platforms, such as Aragon, Kleros... The question I have right now is within the basic principle of immutability of Smart contracts.\nIf I have an sc about buying a product, a design of a webpage, and if I am not satisfied with it, and the developer thinks she\/he did the job well, there is a dispute. I will go to one of these platforms and ask for a dispute resolution, but what happens with my funds? They would be locked on the ESCROW Smart Contract, until the dispute is settled? After the court decided, for ex. in my favour, I would get my funds back, but isn't that the opposite of what my contract had to do? Isn't that changing the execution of the smart contract, and reversing the transaction?\nAnd also, if the sc is executed, and afterwards, I figure out oh it is missing some features I wanted, can I also then apply for a dispute resolution or no?","555":"This is chainlink sample code Here, in this code I added only 1 oracle and 1 job id but the problem is how can I add 2 nodes (2 oracles and 2 job ids) for getting a response from a single URL i.e 2 nodes must verify the URL data before coming into the <blockchain>.\npragma solidity ^0.6.0;\nimport \"@chainlink\/contracts\/src\/v0.6\/ChainlinkClient.sol\";\ncontract APIConsumer is ChainlinkClient {\nuint256 public volume;\naddress private oracle;\nbytes32 private jobId;\nuint256 private fee;\n\n\/**\n * Network: Kovan\n * Chainlink - 0x2f90A6D021db21e1B2A077c5a37B3C7E75D15b7e\n * Chainlink - 29fa9aa13bf1468788b7cc4a500a45b8\n * Fee: 0.1 LINK\n *\/\nconstructor() public {\n    setPublicChainlinkToken();\n    oracle = 0x2f90A6D021db21e1B2A077c5a37B3C7E75D15b7e;\n    jobId = \"29fa9aa13bf1468788b7cc4a500a45b8\";\n    fee = 0.1 * 10**18; \/\/ 0.1 LINK\n}\n\n\/**\n * Create a Chainlink request to retrieve API response, find the target\n * data, then multiply by 1000000000000000000 (to remove decimal places from data).\n *\/\nfunction requestVolumeData() public returns (bytes32 requestId) {\n    Chainlink.Request memory request =\n        buildChainlinkRequest(jobId, address(this), this.fulfill.selector);\n\n    \/\/ Set the URL to perform the GET request on\n    request.add(\n        \"get\",\n        \"https:\/\/min-api.cryptocompare.com\/data\/pricemultifull?fsyms=ETH&tsyms=USD\"\n    );\n\n    \/\/ Set the path to find the desired data in the API response, where the response format is:\n    request.add(\"path\", \"RAW.ETH.USD.VOLUME24HOUR\");\n\n    \/\/ Multiply the result by 1000000000000000000 to remove decimals\n    int256 timesAmount = 10**18;\n    request.addInt(\"times\", timesAmount);\n\n    \/\/ Sends the request\n    return sendChainlinkRequestTo(oracle, request, fee);\n}\n\n\/**\n * Receive the response in the form of uint256\n *\/\n\nfunction fulfill(bytes32 _requestId, uint256 _volume)\n    public\n    recordChainlinkFulfillment(_requestId)\n{\n    volume = _volume;\n}\n\n}","556":"Can somebody share with me a basic implementation of EIP-2981 on solidity?\nhttps:\/\/eips.ethereum.org\/EIPS\/eip-2981#examples","557":"I have cloned uniswap-interface from git. I ran the yarn start command and received the following output:\nyarn run v1.22.10\n$ yarn compile-contract-types && react-scripts start\n$ yarn compile-external-abi-types && yarn compile-v3-contract-types\n$ typechain --target ethers-v5 --out-dir src\/abis\/types '.\/src\/abis\/**\/*.json'\nSuccessfully generated 2 typings!\n$ typechain --target ethers-v5 --out-dir src\/types\/v3 '.\/node_modules\/@uniswap\/?(v3-core|v3-periphery)\/artifacts\/contracts\/**\/*.json'\n'v3-periphery)' is not recognized as an internal or external command,\noperable program or batch file.\nerror Command failed with exit code 255.\ninfo Visit https:\/\/yarnpkg.com\/en\/docs\/cli\/run for documentation about this command.\nerror Command failed with exit code 255.\ninfo Visit https:\/\/yarnpkg.com\/en\/docs\/cli\/run for documentation about this command.\nerror Command failed with exit code 255.\ninfo Visit https:\/\/yarnpkg.com\/en\/docs\/cli\/run for documentation about this command.\n\nWhat am I missing?","558":"I am developing a token transfer program with Nodejs. One question arose. I was wondering if there is a way to set the wallet address to send tokens to except for the truffle-hdwallet-provider library or metamask. Since this program is a backend service, it should not be sent via metamask.\nThank you.","559":"I have an understanding of how <blockchain> dAPPS are built, but I do not know which network I should use or which language to write the script in. Right now I am thinking about using AWS, but I am open to other suggestions.","560":"I am using the Cosmos SDK and run into an issue creating new <transactions>.\nI get the following error when I try to create a transaction with the CLI:\naccount sequence mismatch, expected 3787, got 3786: incorrect account sequence\nThis is on the cosmoshub-testnet, using the Cosmos SDK version from https:\/\/github.com\/b-harvest\/gravity-dex which mentions\ngithub.com\/tendermint\/tendermint v0.34.10\ngithub.com\/cosmos\/<cosmos-sdk> v0.42.5\nmodule github.com\/cosmos\/gaia\/v4\ngo 1.16\n\nI do not know why this happened or how to resolve. Any help is appreciated.","561":"import * as <web3> from \"<web3>\";\n    import { OpenSeaPort, Network } from \"opensea-js\";\n    import { OrderSide } from \"opensea-js\/lib\/types\";\n\n    \/\/ This example provider won't let you make <transactions>, only read-only calls:\n    const provider = new <web3>.providers.HttpProvider(\"https:\/\/mainnet.infura.io\");\n    const seaport = new OpenSeaPort(provider, {\n    networkName: Network.Main,\n    });\n    export const OpenSeaAsset = async () =>\n    await seaport.api.getAsset({\n        tokenAddress: \"0x...\", \/\/ CryptoKitties\n        tokenId: \"30830\", \/\/ Token ID\n    });\n\n    const asset = {\n    tokenAddress: \"0x...\", \/\/ CryptoKitties\n    tokenId: \"30830\", \/\/ Token ID\n    };\n\n    export const OpenSeaBalance = async () =>\n    await seaport.getAssetBalance({\n        accountAddress: \"0x...\", \/\/ string\n        asset: asset, \/\/ Asset\n    });\n\n    export const offer = async () =>\n    await seaport.createBuyOrder({\n        asset: {\n        tokenId: \"30830\",\n        tokenAddress: \"0x...\",\n        schemaName: \"ERD721\", \/\/ WyvernSchemaName. If omitted, defaults to 'ERC721'. Other options include 'ERC20' and 'ERC1155'\n        },\n        accountAddress: \"0x...\",\n        \/\/ Value of the offer, in units of the payment token (or wrapped ETH if none is specified):\n        startAmount: 1,\n    });\n\n    \/\/   https:\/\/opensea.io\/assets\/0x2a46f2ffd99e19a89476e2f62270e0a35bbf0756\/30830\n\n    const order = async () => await seaport.api.getOrder({ side: OrderSide.Sell });\n    const accountAddress = \"0x1105c90c745339675EE8535e06663e5537C25798\"; \/\/ The buyer's wallet address, also the taker\n    export const transaction = async () =>\n    await seaport.fulfillOrder({ order: order, accountAddress: accountAddress });\n\nAnybody used opensea.js?\nPlease help me out whats wrong Here.\nI have attached the error Image.\nThe error is on last part. Buy item code\nhttps:\/\/projectopensea.github.io\/opensea-js\/#buying-items\nI use this for my reference","562":"When I update corda contract app I got the error\n\njava.lang.IllegalArgumentException: An attachment has been explicitly set for contract com.fna.contracts.contract.InvoiceContract in the transaction builder which conflicts with the HashConstraint of a state.\n\nAnd about data in vault I found contract type is \"HashAttachmentConstraint\".but in dev env is \"Signature Constraints\". Can I change HashAttachmentConstraint to Signature Constraints in production env\nenter image description here","563":"Now I am using this dependency:\"@chainlink\/contracts\": \"^0.1.7\" and solc v0.8\nFacing this issue: Member \"add\" not found or not visible after argument-dependent lookup in struct Chainlink.Request memory\nIt's saying that Chainlink.Request doesn't have add function... please let me know how to fix it.\n...\nimport \"@chainlink\/contracts\/src\/v0.8\/dev\/ChainlinkClient.sol\";\n\ncontract ContractName is Ownable, ChainlinkClient {\n    constructor() {\n         setPublicChainlinkToken();\n    }\n\n    function requestData(\n        address _oracle,\n        bytes32 _jobId,\n        string memory _endpoint,\n        string memory _round,\n        string memory _seasonId\n    ) public {\n        Chainlink.Request memory req =\n            buildChainlinkRequest(_jobId, address(this), this.fulfill.selector);\n        req.add(req, \"endpoint\", _endpoint);\n        req.add(req, \"round\", _round);\n        req.add(req, \"season_id\", _seasonId);\n\n        sendChainlinkRequestTo(_oracle, req, fee_);\n    }\n\nenter image description here","564":"I am a beginner in smart contract development. I just create a smart contract for some analyze how it works, so I used the truffle suite with vs code to create a smart contract. I create a sample smart contract and build it successfully without errors.\nNow I trying to publish this smart contract in AWS. I have an AWS account (region - eu-west-2, Europe-London) and I already found the documentation about the Etherum network supported by the AWS link. And this documentation already mentioned the available regions too.\nBut when I try to create a new private network it only shows '<hyperledger> fabric network'.\n\nIn the documentation, it shows the 'Ethereum' network like the below image.","565":"I run a private network of 6 nodes using substrate node-template v3.0.0. During tests, I noticed a difference between \"submitted\" and \"finished\" <transactions> when sending at a constant transaction rate to the <blockchain>.\nI have sent valid <transactions> (picture) and there is very big difference between \"submitted\" and \"finished\" <transactions>, what does \"submitted\" and \"finished\" <transactions> actually mean ?\nPrometheus queries are respectively:\n\nsubstrate_sub_txpool_submitted_<transactions>\nsubstrate_sub_txpool_validations_finished\n\nAlso there aren't any invalid <transactions>.","566":"Is it possible to filter subgraph using \"where\" when properties are nested?\nFor example if we have query like this one, can we filter it by application name?\n{\n  challenges(where: {something?}) {\n    challenger\n    outcome\n    application {\n      id\n      name\n    }\n  }\n}\n\nI have tried it like this one but it doesn't work\n{\n  challenges(where: {application: {name: \"something\"}) {\n    challenger\n    outcome\n    application {\n      id\n      name\n    }\n  }\n}","567":"I am looking for a way to implement an increased tax fee for msg.sender if they sell a smart contract token within a certain time frame from the last time they received the token.\nIn Solidity, is it possible to get a timestamp from msg.sender to the last time they received the token? Or is there another way to achieve this?","568":"I'm hoping one of you guys can help me out with what I'm doing wrong :). I get this error every time I try to compile with truffle\nTruffle v5.3.9 (core: 5.3.9)\nNode v14.17.0\nPS C:\\Users\\andre\\Desktop\\****> cd .\\core\\\nPS C:\\Users\\andre\\Desktop\\****\\core> truffle migrate --reset --network binanceTestnet\n\nCompiling your contracts...\n===========================\n> Compiling .\\contracts\\Migration.sol\n> Compiling .\\contracts\\Migrations.sol\n> Compiling .\\contracts\\PancakeERC20.sol\n> Compiling .\\contracts\\PancakeFactory.sol\n> Compiling .\\contracts\\PancakePair.sol\n> Compiling .\\contracts\\Token1.sol\n> Compiling .\\contracts\\Token2.sol\n> Compiling .\\contracts\\interfaces\\IERC20.sol\n> Compiling .\\contracts\\interfaces\\IPancakeCallee.sol\n> Compiling .\\contracts\\interfaces\\IPancakeERC20.sol\n> Compiling .\\contracts\\interfaces\\IPancakeFactory.sol\n> Compiling .\\contracts\\interfaces\\IPancakePair.sol\n> Compiling .\\contracts\\libraries\\Math.sol\n> Compiling .\\contracts\\libraries\\SafeMath.sol\n> Compiling .\\contracts\\libraries\\UQ112x112.sol\n> Compiling .\\contracts\\test\\ERC20.sol\n> Compiling .\\contracts\\PancakeERC20.sol\n> Compiling .\\contracts\\PancakePair.sol\n> Compiling .\\contracts\\interfaces\\IERC20.sol\n> Compiling .\\contracts\\interfaces\\IPancakeCallee.sol\n> Compiling .\\contracts\\interfaces\\IPancakeERC20.sol\n> Compiling .\\contracts\\interfaces\\IPancakeFactory.sol\n> Compiling .\\contracts\\interfaces\\IPancakePair.sol\n> Compiling .\\contracts\\libraries\\Math.sol\n> Compiling .\\contracts\\libraries\\SafeMath.sol\n> Compiling .\\contracts\\libraries\\UQ112x112.sol\n> Compiling .\\node_modules\\@openzeppelin\\contracts\\GSN\\Context.sol\n> Compiling .\\node_modules\\@openzeppelin\\contracts\\math\\SafeMath.sol\n> Compiling .\\node_modules\\@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol\n> Compiling .\\node_modules\\@openzeppelin\\contracts\\token\\ERC20\\ERC20Detailed.sol\n> Compiling .\\node_modules\\@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol\n\n\/C\/Users\/andre\/Desktop\/****\/core\/contracts\/Token1.sol:1:1: ParserError: Expected pragma, import directive or contract\/interface\/library definition.\n\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdpragma solidity =0.5.16;\n^\n\nCompilation failed. See above.\nTruffle v5.3.9 (core: 5.3.9)\nNode v14.17.0\nPS C:\\Users\\andre\\Desktop\\****\\core>\n\nand here is the Token1.sol file:\npragma solidity =0.5.16;\n\nimport \"..\/node_modules\/@openzeppelin\/contracts\/token\/ERC20\/ERC20Detailed.sol\";\nimport \"..\/node_modules\/@openzeppelin\/contracts\/token\/ERC20\/ERC20.sol\";\n\ncontract Token1 is ERC20Detailed, ERC20 {\n    constructor() ERC20Detailed('Token 1', 'TK1', 18) public {}\n}\n\nI hope this makes any sense :) I have had some issues with importing @openzeppelin for some reason import \"@openzeppelin\/contracts\/token\/ERC20\/ERC20Detailed.sol\" does not work for me but if I add \"..\/node_modules\/\" in front it fixes the problem. or maybe it does I am not sure if that's the reason my compile is giving me error :).","569":"Please give me a solution to get 2 balance(HPB, ESR) from an account.","570":"Trying to desperately understand the dot notation of the following. From a <blockchain> basic.\nself.data = data self.prev_block_hash = previous_block_hash self.calculate_valid_hash()\n\nAs I'm new to it the data self and previous block hash have not been defined. And the fact there are two equal signs for the same statement. can someone please explain this as I'm guessing this is proof of work part? However, if these are inevitably not equal how will it run?\nIt also has two colon statements def is_hash_valid(self, hash): return (hash.startswith('0' * 3))  which I thought was for breaking up statements\nMany thanks","571":"I am trying to design fabric architecture for my organization and not able to find answers to following issue.\nThere are multiple organizations which will communicate over multiple channels along with private data in each peer of organization. Main organization wants to access all ledger data along with private data. Is there any possible way to get access to all existing ledger as well as private data?\nCan someone please help with this.","572":"Does it cost anything to call a Smart Contract on Tron that returns data from the contract but does NOT change any data?","573":"While using cargo install spl-stake-pool-cli\nI am getting issues with the last step. Please check the attached screenshot.","574":"Have a simple contract in solidity:\ncontract SellStuff{\n\n    address seller;\n    string name;\n    string description;\n    uint256 price;\n\n    function sellStuff(string memory _name, string memory _description, uint256 _price) public{\n        seller = msg.sender;\n        name = _name;\n        description = _description;\n        price = _price;\n    }\n    function getStuff() public view returns (\n        address _seller, \n        string memory _name, \n        string memory _description, \n        uint256 _price){\n            return(seller, name, description, price);\n    }\n}\n\nAnd running a javascript test as follows:\nvar SellStuff= artifacts.require(\".\/SellStuff.sol\");\n\n\/\/ Testing\ncontract('SellStuff', function(accounts){\n\n    var sellStuffInstance;\n    var seller = accounts[1];\n    var stuffName = \"stuff 1\";\n    var stuffDescription = \"Description for stuff 1\";\n    var stuffPrice = 10;\n\n    it(\"should sell stuff\", function(){\n        return SellStuff.deployed().then(function(instance){\n            sellStuffInstance= instance;\n            return sellStuffInstance.sellStuff(stuffName, stuffDescription, <web3>.utils.toWei(stuffPrice,'ether'), {from: seller});\n        }).then(function(){\n            \/\/the state of the block should be updated from the last promise\n            return sellStuffInstance.getStuff();\n        }).then(function(data){\n                assert.equal(data[0], seller, \"seller must be \" + seller);\n                assert.equal(data[1], stuffName, \"stuff name must be \" +  stuffName);\n                assert.equal(data[2], stuffDescription, \"stuff description must be \" + stuffDescription);\n                assert.equal(data[3].toNumber(), <web3>.utils.toWei(stuffPrice,\"ether\"), \"stuff price must be \" + <web3>.utils.toWei(stuffPrice,\"ether\")); \n        });\n    });\n});\n\nBut I am getting the following error:\nError: Please pass numbers as string or BN objects to avoid precision errors.\n\nThis seems to look like it pertains to the return type from the <web3>.utils.toWei call, so I have tried to cast it to a string:<web3>.utils.toWei(stuffPrice.toString(),\"ether\"); but this gives the Error: Number can only safely store up to 53 bits.\nNot sure if I need to simply change the var in the class from uint256 or if there is a better way to cast the toWei return variable?","575":"I am already done forking the smart contracts of the Uniswap, I am looking at forking the interface and then linking it up with the smart contract, is there a guide or way I can do this, I can't seem to find how to do this.","576":"so I'm looking at this api docs on polkadot.js https:\/\/polkadot.js.org\/docs\/substrate\/storage#staking\nbut I could not figure which one to use to actually query all the staking rewards given an account ID \/ publish address.\nI was thinking I would have to loop for each era. but which one returns the staking rewards. so than I can calculate a total overtime? thank you very much !","577":"I have created a counterparty session, issuer signs the transaction by passing in its key to the signInitialTransaction. Then when I call the CollectSignaturesFlow to get the buyer's signature, it throws 'Unable to match key(s)' exception.\nNo idea what went wrong.\nThis is my initiator flow.\npackage com.template.flows;\n\n@InitiatingFlow\n@StartableByRPC\npublic class InitiateTicketMovementFlow extends FlowLogic<String> {\nprivate final String buyer;\nprivate final String issuer;\nprivate final StateRef assetReference;\n\npublic InitiateTicketMovementFlow(String buyer, String issuer, String hash, int index) {\n    this.buyer = buyer;\n    this.issuer = issuer;\n    this.assetReference = new StateRef(SecureHash.parse(hash), index);\n}\n\n@Override\n@Suspendable\npublic String call() throws FlowException {\n\n    final Party notary = getServiceHub().getNetworkMapCache().getNotaryIdentities().get(0);\n\n    AccountInfo issuerAccountInfo = UtilitiesKt.getAccountService(this)\n            .accountInfo(issuer).get(0).getState().getData();\n\n    AccountInfo receiverAccountInfo = UtilitiesKt.getAccountService(this)\n            .accountInfo(buyer).get(0).getState().getData();\n\n    AnonymousParty buyerAccount = subFlow(new RequestKeyForAccount(receiverAccountInfo));\n\n    QueryCriteria.VaultQueryCriteria queryCriteria = new QueryCriteria.VaultQueryCriteria()\n            .withStateRefs(ImmutableList.of(assetReference));\n\n    StateAndRef<CustomTicket> ticketStateStateAndRef = getServiceHub().getVaultService()\n            .queryBy(CustomTicket.class, queryCriteria).getStates().get(0);\n\n    CustomTicket ticketState = ticketStateStateAndRef.getState().getData();\n\n    TransactionBuilder txBuilder = new TransactionBuilder(notary);\n\n    MoveTokensUtilities.addMoveNonFungibleTokens(txBuilder, getServiceHub(),\n            ticketState.toPointer(CustomTicket.class), receiverAccountInfo.<geth>ost());\n\n    FlowSession buyerSession = initiateFlow(receiverAccountInfo.<geth>ost());\n    buyerSession.send(ticketState.getValuation());\n\n    List<StateAndRef<FungibleToken>> inputs = subFlow(new ReceiveStateAndRefFlow<>(buyerSession));\n\n    List<FungibleToken> moneyReceived = buyerSession.receive(List.class).unwrap(value -> value);\n\n    MoveTokensUtilities.addMoveTokens(txBuilder, inputs, moneyReceived);\n\n    SignedTransaction selfSignedTransaction = getServiceHub().\n            signInitialTransaction(txBuilder, ImmutableList.of(issuerAccountInfo.<geth>ost().getOwningKey()));\n\n\n    SignedTransaction signedTransaction = subFlow(new CollectSignaturesFlow(\n            selfSignedTransaction, Arrays.asList(buyerSession), Collections.singleton(issuerAccountInfo.<geth>ost().getOwningKey())));\n\n    SignedTransaction stx = subFlow(new FinalityFlow(\n            signedTransaction, ImmutableList.of(buyerSession)));\n\n    subFlow(new UpdateDistributionListFlow(stx));\n\n    return \"\\nTicket is sold to \"+ buyer;\n    }\n}","578":"I'm working on <blockchain> explorer where two nodes are running.One to insert data from <blockchain> to postgres database and another one to fetch using api calls.\nNow database entries are reached over million records and single api tooks too much time to fetch data especially when I have to sort and fetch latest records.\nI have found redis can be best option but don't know how to place latest records in redis from postgres.\nAny idea how can I get latest records fast ?","579":"I've been learning the Chainlink API and trying to build a simple contract that will make an external call to an API and charge the user based on the result of the request from the Oracle.\nFor example, \"We will charge you $1 if the API results in true and $0.25 if it results in false\"\nI am running this on the Kovan Testnet, the contract is funded with LINK. The transaction is successful every time I run the \"requestCompletedData\" function. But the callback\/fulfill function never gets ran. I've checked it in various ways.\nFor reference, it should result completed == true based on the data from the URL.\nHere are the Contract Address and Job ID for Chainlink's Kovan test nodes: https:\/\/docs.chain.link\/docs\/decentralized-oracles-ethereum-mainnet\/\n\/\/ \nconstructor() public {\n        setPublicChainlinkToken();\n        oracle = 0x2f90A6D021db21e1B2A077c5a37B3C7E75D15b7e;\n        jobId = \"6d914edc36e14d6c880c9c55bda5bc04\";\n        fee = 0.1 * 10 * 18; \/\/ 0.1 LINK\n    }\n\n    \/\/ Make Chainlink request\n    function requestCompletedData() public returns (bytes32 requestId) {\n        Chainlink.Request memory request = buildChainlinkRequest(jobId, address(this), this.fulfill.selector);\n        \n        \/\/ URL for request\n        request.add(\"get\", \"https:\/\/jsonplaceholder.typicode.com\/todos\/4\");\n        \n        \/\/ Path to the final needed data point in the JSON response\n        request.add(\"path\", \"completed\");\n        \n        return sendChainlinkRequestTo(oracle, request, fee);\n    }\n\nfunction fulfill(bytes32 _requestId, bool _completed) public recordChainlinkFulfillment(_requestId) {\n        validateChainlinkCallback(_requestId);\n        completed = _completed;\n    }\n\nThank you for your help!","580":"I would like to use <web3> to exchange BNB into other tokens via Pancakeswap, so I came across this code which seems to be correct:\nimport time\nimport config as config\nfrom <web3> import <web3>\n \nPancakeABI = open('pancakeABI','r').read().replace('\\n','')\n \nbsc=\"https:\/\/bsc-dataseed.binance.org\/\"\n<web3> = <web3>(<web3>.HTTPProvider(bsc))\nprint(<web3>.isConnected())\n \n#My own address to swap from\nsender_address = \"YOUR OWN WALLET PUBLIC ADDRESS\"\n \n#This is global Pancake V2 Swap router address\nrouter_address = \"0x10ED43C718714eb63d5aA57B78B54704E256024E\"\n \n#always spend using Wrapped BNB\n#I guess you want to use other coins to swap you can do that, but for me I used Wrapped BNB\nspend = <web3>.toChecksumAddress(\"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\")\n \n#This is your private key info\nprivate=\"YOUR OWN WALLET PRIVATE KEY\"\n \n#Print out your balances just for checking\nbalance = <web3>.eth.get_balance(sender_address)\nprint(balance)\n \nhumanReadable = <web3>.fromWei(balance,'ether')\nprint(humanReadable)\n \n#Contract id is the new token we are swaping to\ncontract_id = <web3>.toChecksumAddress(\"THE Contract ID of the destination Token\")\n \n#Setup the PancakeSwap contract\ncontract = <web3>.eth.contract(address=router_address, abi=PancakeABI)\n \nnonce = <web3>.eth.get_transaction_count(sender_address)\n \nstart = time.time()\nprint(<web3>.toWei('0.02','ether'))\n \npancakeswap2_txn = contract.functions.swapExactETHForTokens(\n  1074184953676691292, # here setup the minimum destination token you want to have, you can do some math, or you can put a 0 if you don't want to care\n  [spend,contract_id],\n  sender_address,\n  (int(time.time()) + 1000000)\n).buildTransaction({\n  'from': sender_address,\n  'value': <web3>.toWei(0.02,'ether'),#This is the Token(BNB) amount you want to Swap from\n  'gas': 250000,\n  'gasPrice': <web3>.toWei('5','gwei'),\n  'nonce': nonce,\n})\n \nsigned_txn = <web3>.eth.account.sign_transaction(pancakeswap2_txn, private_key=private)\ntx_token = <web3>.eth.send_raw_transaction(signed_txn.rawTransaction)\nprint(<web3>.toHex(tx_token))\n\nThe problem I have is that my BNBs are sent but they don't arrive on the wallet. So my BNB are like \"lost\".","581":"How do I connect determine the netwoek i amm connected to in Ganache\nI tried this\nconst networkId = await <web3>.eth.net.getId()\nBut the errror that i get is this\nUnhandled Rejection (TypeError): Cannot read property 'net' of undefined","582":"I am dealing with corda accounts. I have two nodes. Seller and Receiver. Both nodes have some accounts, say sellerA, sellerB, receiverA, and receiverB. I want to send an NFT from sellerA to receiverA. But I'm unable to access the receiverA account info from Seller node. How can I do that?\nThis is what I tried.\nAccountInfo receiverAccountInfo = UtilitiesKt.getAccountService(this)\n            .accountInfo(buyer).get(0).getState().getData();\n\nBut it returned,\nEvent: Error(exception=java.lang.IndexOutOfBoundsException: Empty list doesn't contain element at index 0.)","583":"Good day. I need help again to do web scraping of the url https:\/\/bscscan.com\/token\/0x15a217c30b1303fbf64b8bdc3323fd3c14e9acb3#balances. There are still data that I wanted to display but cannot figure out how.\n    import re\n    import requests\n    from bs4 import BeautifulSoup\n    \n    cotractpage = requests.get(\"https:\/\/bscscan.com\/token\/0x722126182535a93fb70633ea09c228b43894bf84#balances\")\n    ca = BeautifulSoup(cotractpage.content, 'html.parser')\n    \n    #print holders\n    tokenholders = ca.find(id='ContentPlaceHolder1_tr_tokenHolders').get_text()\n    tokenholdersa = \"Total Holders: \" + ((((tokenholders.strip()).strip(\"Holders:\")).strip()).strip(\" a \")).strip()\n    print(tokenholdersa)\n    \n    #print transfers -> Not working\n    tokentransfers = ca.find(id='ContentPlaceHolder1_trNoOfTxns').get_text()\n    tokentransfersa = \"Total Transfers: \" + ((((tokentransfers.strip()).strip(\"Transfers:\")).strip()))\n    print(tokentransfersa)\n    \n    #print name\n    website = ca.find('span', class_='text-secondary small').get_text()\n    tokename = \"Name: \" + website\n    print(tokename)\n    \n    #print marketcap\n    mcapa = ca.find(id='ContentPlaceHolder1_tr_valuepertoken').get_text()\n    print(\"Market Cap: \" + re.search(r'Market Cap.*?([$\\d,.]+)', mcapa, flags=re.S).group(1))\n    \n    #print totalsupply\n    totalbox = ca.find('div', class_='col-md-8').get_text().split('(')[0].strip() \n    print(\"Total Supply: \" + totalbox)\n    \n    #Lock\n    lp = ca.find('i', class_='far fa-file-alt text-secondary').get_text()\n    print(lp)\n\nNeeds Help:\n\nHow to display the total transfers\n\nHow can I find the row with the icon(Lock) beside and print the percentage\n\nHow can I find the 0x000000000000000000000000000000000000dead and return the percentage\nThe code above displays:\n\n\n     Total Holders: 6\n     Name: FUCKTHEMOON \n     Market Cap: $0.00\n     Total Supply: 1,000,000,000,000,000 FUCKTHEMOON\n\n     Total Transfers: 7 <---- Does not work. Needs help\n     Lock: 83.5687% <---- Does not work. Needs help\n     Burn: 0x000000000000000000000000000000000000dead, 15.0000% <---- Does not work. Needs help","584":"Lets say i created an erc20 token. Now i want to make a smart contract that sends 1 coin to a user if they have X coins on another <blockchain> like bitcoin. Would that work? Can i read data from other <blockchain>s using a cardano\/ethereum\/any other smart contract?","585":"when I try to run my contracts by using:\n\ntruffle migrate --network infura\n\nI get thrown an error saying all my files require a higher pragma solidity version, in the error it says I'm currently using solc 0.5.16 yet I've ran\n\nnpm uninstall\n\nand then\n\ninstall\n\nand when I run\n\nNPM list or solcjs --version\n\nit shows solc@0.8.4, could anyone help me identify the issue thanks.","586":"I'm new to Lisk <blockchain> technology and I am looking for some technical guidance of how the details of it looks like.\nWhat is the preferred Lisk <blockchain> block size?","587":"I'am very new to the <blockchain> community and I have a new project that i'am starting to work on using the Cardano <blockchain> and its crypto ADA.\nI stumbeled upon the name \"ADA SDK\" and I tried to dig deeper and research it more but i can't find any clear information on what do you use it for exactly.\nI know what is an SDK in general but what is an ADA SDK ?\nIs it the development Kit you have to download to start working with ADA ? or what exactly ?\nI'am really confused is there anyone who could help me ? thank you !!","588":"I would like to know the difference between \"latest\" and \"earliest\" parameters in <web3>.eth.getBlock(), I couldn't find any explanation in the documentation.\nMy thoughts\nEarliest\nPassing \"earliest\" gives you the last available block on or before the code is executed.\nLatest\nPassing \"lastest\" only returns a new block after the code has been executed.\nPlease if anyone has information or documentation about this, kindly respond.","589":"I'm created a smart contract with ERC20 protocol and deployed in ropsten test network using RemixIDE. Now I want to show amount of custom token in my wallet on frontend, but when I trying to call to balanceOf function I'm getting error.\nMy code:\nconst contract = new <web3>.eth.Contract(contractAbi, contractAddress);\nconst balance = await contract.methods.balanceOf(walletAddress).call();\n\nGetting this console error:\n\nReturned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.\n\nI just started in <blockchain> development, so I'm quite newbee, my question is:\nCan I actually work on this testnet(ropsten) for custom token functions?","590":"I have a question about how EVM and Solidity work. In this example on the official Solidity website, there are two contracts ( Caller, C ). What happens and I didn't know is that I can host the \"Caller\" contract and still interact with the \"C\" contract even though it's not instantiated in the <blockchain>. Just so I understand, does \"Caller\" host under the hood the \"C\" contract with you? Because I'm imagining that if I wanted to create a contract that offered several services I would do it just like that, it's much better than passing instance of related contracts in the <blockchain>. Or is there something I don't understand?\nThe source code is in ( Getter Functions - https:\/\/docs.soliditylang.org\/en\/v0.8.4\/contracts.html )\ncontract C {\n    uint public data = 42;\n}\n\ncontract Caller {\n    C c = new C();\n    function f() public view returns (uint) {\n        return c.data();\n    }\n}","591":"I'm trying to perform swap via Pancakeswap router contract.\nHere is my code:\ndef swapTokens():\namountIn = (w3.toWei(0.00001,'ether')) \namount1  = contractR.functions.getAmountsOut(amountIn, path).call()\namountOutMin = int(amount1[1] *0.9) \nminAmountPrint = w3.fromWei(amountOutMin, 'ether')\nprint('Minimum recieved:',minAmountPrint)\nswap_TX = contractR.functions.swapExactTokensForTokens(\namountIn,\namountOutMin,\npath,\nmyAccount,\n(int(time.time()) + 1000000)\n).buildTransaction({\n'from': myAccount,\n'value': w3.toWei(0.0001,'ether'),\n'gas': 550000,\n'gasPrice': w3.toWei('5','gwei'),\n'nonce': nonce,\n})\nsigned_TX = w3.eth.account.sign_transaction(swap_TX, private_key = privateKey)\ntx_token = w3.eth.send_raw_transaction(signed_TX.rawTransaction)\nprint(w3.toHex(tx_token))\nprint('Your current balance:',w3.fromWei(w3.eth.get_balance(myAccount), 'ether'), 'BNB')\n\nBut transaction fails every time with error \"Execution reverted\"\nReverted <transactions> hashes:\nhttps:\/\/bscscan.com\/tx\/0xc3763879d31b34439e023e3dea2bce80472938b69eb22783c9f97c30d7bd8be9\nhttps:\/\/bscscan.com\/tx\/0xc786257bad753fbb65fde0a94fb9d45ac0e66becd675a5583a0183424ca02e75\nhttps:\/\/bscscan.com\/tx\/0xbc2cc37e42bcd682ca30f74b502bbb0fab9af5df39b1fcb3870e99515a706db4\nI've tried to debug these using tenderly.co but it doesn't seem to give any explanation on the error.","592":"We are using BlockCypher API to create transaction in a HD Wallet.\n\nAs a return object, you'll receive a TXSkeleton containing a\nslightly-more complete TX alongside data you need to sign in the\ntosign array. You'll need this object for the next steps of the\ntransaction creation process.\n\n\nLocally Sign Your Transaction\nWith your TXSkeleton returned from the New Transaction Endpoint, you\nnow need to use your private key(s) to sign the data provided in the\ntosign array.\n\n\n$PRIVATEKEY here is a hex-encoded private key corresponding to the input from address CEztKBAYNoUEEaPYbkyFeXC5v8Jz9RoZH9\n\nMy problem is how do we obtain the private key of each address in HD Wallet? With HD Wallet addresses are generated using the Derive Address Endpoint. This returns a HDWallet object which contains and HDChain object which contains an HDAddress Object. The HDAddress object contains address, path and public.\n\nAn HD Address object contains an address and its BIP32 HD path\n(location of the address in the HD tree). It also contains the\nhex-encoded public key when returned from the Derive Address in Wallet\nendpoint.\n\nAs you can see, the private key is not included in HDAddress object response. So how can we know the private key to use with tosign method if the private key is not included in HDAddress object response? And without access to private key, how can we sign the **tosign** array?\nThanks","593":"I have tried py<blockchain> package from emcpow2. But this package seems just return header information. What I really need is the transaction scripts and address. As in the picture shows, there is no transaction scripts method\nIs there any other way enter image description hereto parse blkxxxxx.dat files or am I using this package incorrectly?\nThanks in advance","594":"I am a newbie in Azure <blockchain> development. I have a corporate MSDN subscription. Now I trying to create a <blockchain> member in my Azure Portal.\nAfter input all required values it shows a validation progress status. But after the successful validation 'Create' button not enabled. I have enough subscription amounts in my account.","595":"I was chosen as a Spartan of a Parastate. Who did according to the technical characteristics indicated in the guide?\nCPU: 2.0 GHz x86-64 CPU\nMemory: 8GB RAM\nDisk: 500GB High-Speed Storage (SSD)\nFor your reference, we deploy our own ParaTime node on Azure D2s_v3 instances (2 VCPU, 8GB Memory, 500GB Disk space)\nDid you succeed?","596":"I made two react apps using create-react-app, but now I need to merge both apps as a single app. I need to link my second app with the first when a button is clicked in the first app. How can I do that?\nThe first app has a login, signup and dashboard page.The second app has a form written in Solidity <blockchain>. When I click 'Fill Details' button in Dashboard page, the second app form should be rendered!\nI have no idea to do this. Please help me","597":"I've been learning solidity, however, I am still very new. Currently I am making a ERC20 Token but I am having some difficulties with doing so. Here is what I have.\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC20\/ERC20.sol\";\n\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC20\/IERC20.sol\";\n\nContract GToken is ERC20 {\n    constructor(string memory name, string memory symbol)\n        ERC20(\"GToken\", \"GTKN\") public {\n            _mint(msg.sender, 1000000 * 10 ** uint(decimals));\n        \n}\n\nThe Error I recieve when trying to compile the contract is as follows:\nParserError: Expected ';' but got 'is' --> GToken.sol:7:21: | 7 | Contract GToken is ERC20 { | ^^","598":"I am trying to implement a faucet for my local testnet which consists of 5 node. To do that I followed the avalances github documentation as in the link,\nhttps:\/\/github.com\/ava-labs\/avalanche-faucet\nIn short, basically, I run my 5 nodes and all nodes runs successfully using an Ubuntu Sandbox. Also, the bootstrap is finished. Then tried to run the below command in the Ubuntu,\nPlatform Versions: Ubuntu 20.04.2 LTS\nnode-js v16.2.0\nnpm 7.15.0\nYarn 1.22.5\nCreating Faucet:\n\nClone the repository git clone https:\/\/github.com\/ava-labs\/avalanche-faucet.git\nGo to the root directory cd avalanche-faucet\nInstall javascript dependencies with yarn install.\nCreate a .env file by copying .env.example\nInstall AvalancheGo, our Avalanche node client written in Golang to spin up a network (https:\/\/github.com\/ava-labs\/avalanchego).\n\nRunning Project:\n\nMake sure you have installed and able to run an Avalanche node properly.\nAll environment variables are correct and your private key has funds in it.\nRun the project with hot reloading yarn serve\n\nEverything is goes ok but when I run yarn serve then the below Error pop up. \"Assertion `thread_id_key != 0x7777' failed.\"\n43% building 275\/282 modules 7 active ...cet\/node_modules\/babel-loader\/lib\/index.js!\/home\/avalanchelocal1\/Downloads\/avalanche-faucet\/node_modules\/vuetify\/lib\/services\/index.jsnode: ..\/src\/coroutine.cc:134: void* find_thread_id_key(void*): Assertion `thread_id_key != 0x7777' failed.\n\nAborted (core dumped)\nerror Command failed with exit code 134.\ninfo Visit https:\/\/yarnpkg.com\/en\/docs\/cli\/run for documentation about this command.","599":"I am new to corda token sdk. I want to create a cordapp for creating and selling tickets and are non-fungible. How do I store the ticketToken on the ledger?","600":"I'm trying to make a Student Management System in <blockchain> using Ethereum. I'm using Solidity for smart contract and trying to link it with React for the frontend. As of now, I'm getting the certificates, transcripts from the user.\nBut, I'm not knowing how to get the text input such as names, Department, phone number, house address from the user in React front end and store it in the smart contract, and also view the entered details.\nPlease help me with the code!\nIt will be really helpful if someone can give the code itself!!","601":"just started learning <blockchain> through IBM <blockchain> platform at VS code and facing issues with the code. I did everything according to the tutorial and had no clue how to resolve them.\nHere is the code\n\/*\n * SPDX-License-Identifier: Apache-2.0\n *\/\n\nimport { Context, Contract, Info, Returns, Transaction } from 'fabric-contract-api';\nimport { MyAsset } from '.\/my-asset';\n\n@Info({title: 'MyAssetContract', description: 'My Smart Contract' })\nexport class MyAssetContract extends Contract {\n\n    @Transaction(false)\n    @Returns('boolean')\n    public async myAssetExists(ctx: Context, myAssetId: string): Promise<boolean> {\n        const data: Uint8Array = await ctx.stub.getState(myAssetId);\n        return (!!data && data.length > 0);\n    }\n\n    @Transaction()\n    public async createMyAsset(ctx: Context, myAssetId: string, value: string): Promise<void> {\n        const exists: boolean = await this.myAssetExists(ctx, myAssetId);\n        if (exists) {\n            throw new Error(`The my asset ${myAssetId} already exists`);\n        }\n        const myAsset: MyAsset = new MyAsset();\n        myAsset.value = value;\n        const buffer: Buffer = Buffer.from(JSON.stringify(myAsset));\n        await ctx.stub.putState(myAssetId, buffer);\n    }\n\n    @Transaction(false)\n    @Returns('MyAsset')\n    public async readMyAsset(ctx: Context, myAssetId: string): Promise<MyAsset> {\n        const exists: boolean = await this.myAssetExists(ctx, myAssetId);\n        if (!exists) {\n            throw new Error(`The my asset ${myAssetId} does not exist`);\n        }\n        const data: Uint8Array = await ctx.stub.getState(myAssetId);\n        const myAsset: MyAsset = JSON.parse(data.toString()) as MyAsset;\n        return myAsset;\n    }\n\n    @Transaction()\n    public async updateMyAsset(ctx: Context, myAssetId: string, newValue: string): Promise<void> {\n        const exists: boolean = await this.myAssetExists(ctx, myAssetId);\n        if (!exists) {\n            throw new Error(`The my asset ${myAssetId} does not exist`);\n        }\n        const myAsset: MyAsset = new MyAsset();\n        myAsset.value = newValue;\n        const buffer: Buffer = Buffer.from(JSON.stringify(myAsset));\n        await ctx.stub.putState(myAssetId, buffer);\n    }\n\n    @Transaction()\n    public async deleteMyAsset(ctx: Context, myAssetId: string): Promise<void> {\n        const exists: boolean = await this.myAssetExists(ctx, myAssetId);\n        if (!exists) {\n            throw new Error(`The my asset ${myAssetId} does not exist`);\n        }\n        await ctx.stub.deleteState(myAssetId);\n    }\n\n}\n\nError 1\n\nError 2\n\nError 3\n\nError 4\n\nError 5","602":"I have recently discovered Sniper Bot Watcher feature on poocoin.app website(https:\/\/poocoin.app\/sniper-watcher).\nAny chance someone can give me an explanation on how it works?\nThanks in advance","603":"I am trying to create a fabric application using node.\nAnd so from the \/fabric-samples\/test-network directory, when I run the command - .\/network.sh up.\nIt starts the network and then the orderer is running on port 7053.\nNow, when I run the command - .\/network.sh createChannel -c channel1 -ca\nIt outputs,\nError: Post \"https:\/\/localhost:7053\/participation\/v1\/channels\": read tcp 127.0.0.1:60864->127.0.0.1:7053: read: connection reset by peer\nChannel creation failed\nWhy is it occuring and how can it be resolved?","604":"I would like to compile my solidity code on Parastate. Where can I get Parastate testnet tokens for that?\nI asked in parastate telegram channels, but havn't found an answer there.\nIs there any working faucet?","605":"I want to add Parastate tesnet to my metamask. I input this:\nNetwork name: Parastate testnet\nNew RPC URL: https:\/\/rpc.parastate.io:8545\/\nBut it also requires \"Chain Id\". Where can I find it or which one is correct?","606":"I set up a bitcoin lightning network on my local machine. How many channels can be created simultaneously with my lightning node. Will creating too many channel connection affect channel functionality? Does this depends on implementation (lnd, clightning or eclair)?","607":"I have a small script basically taken from this test script in bitcoinjs-lib\nfunction getAddress(node) {\n    const bitcoin = require('bitcoinjs-lib');\n    return bitcoin.payments.p2pkh({ pubkey: node.publicKey }).address;\n}\n\nfunction BIP44() {\n    \/* create a BIP44, rvn, account 0, external address *\/\n    const bip32 = require('bip32');\n    const root = bip32.fromSeed(\n        Buffer.from(\n        'dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd',\n        'hex',\n        ),\n    );\n    const childAuto = root.derivePath(\"m\/44'\/175'\/0'\/0\/0\");\n    const childManual = root\n        .deriveHardened(44)\n        .deriveHardened(175)\n        .deriveHardened(0)\n        .derive(0)\n        .derive(0);\n    return getAddress(childAuto);\n}\nconsole.log(BIP44());\n\nIt works perfectly for deriving a bitcoin address (derivation path \"m\/44'\/0'\/0'\/0\/0\") but when trying to derive any other address it doesn't seem to work. The output is this:\n16CzcgCURH83h3cLQ91ZpavDjXSfuNru4c\n\nThat address starts with a 1, whereas RVN addresses start with R.\nI mistakenly assumed that merely by changing the derivation path to match RVN (175) it would generate Raven addresses, but there must be something else I'm missing.\nCan you help me figure out where I'm going wrong?\nOther resources I've explored:\n\nhttps:\/\/github.com\/bitcoin\/bips\/blob\/master\/bip-0044.mediawiki\nhttps:\/\/github.com\/satoshilabs\/slips\/blob\/master\/slip-0044.md\nhttps:\/\/medium.com\/@harshagoli\/hd-wallets-explained-from-high-level-to-nuts-and-bolts-9a41545f5b0\nhttps:\/\/github.com\/topics\/bip44\nHow to validate HD wallet address to match BIP44","608":"I'm new to <blockchain> and I'm experimenting with <web3>.js.\nI tried to calculate gas for swapping WBNB for DAI and I keep getting error.\nHere is my code:\nlet routerContract = new pu<web3>.eth.Contract(Config.PANCAKESWAP_ROUTER_V2_ABI, Config.PANCAKESWAP_ROUTER_V2_ADDRESS);\nlet tokenContract = new pu<web3>.eth.Contract(Config.TOKEN_ABI, Config.WBNB_ADDRESS);\n\nlet amountIn = pu<web3>.utils.toWei('0.01', 'ether');\nlet amountOutMin = await routerContract.methods.getAmountsOut(amountIn, [Config.WBNB_ADDRESS, Config.DAI_ADDRESS]).call();\namountIn = amountOutMin[0];\namountOutMin = amountOutMin[1];\n\nconsole.log(amountIn+\" WBNB ----> \"+amountOutMin+\" DAI\");\n\n\/\/ Set deadline 1 minute from now\nlet now = parseInt(Date.now()\/1000);\nlet deadline = now + 60 \n\n\/\/ Encode data\nlet encodedABI = routerContract.methods.swapExactTokensForTokens(amountIn, amountOutMin, [Config.WBNB_ADDRESS, Config.DAI_ADDRESS], Config.ACCOUNT_ADDRESS, deadline).encodeABI();\n\n\/\/Estimate gas\nlet estimateGas = await pu<web3>.eth.estimateGas({\n    from: Config.ACCOUNT_ADDRESS,   \n    to: Config.PANCAKESWAP_ROUTER_V2_ADDRESS,    \n    data: encodedABI,\n});\n\nAnd the error is:\nReturned error: execution reverted: TransferHelper: TRANSFER_FROM_FAILED\nCan someone tell me what am I doing wrong ? Thanks.","609":"I have contract in solidity MasterChef.sol which can be seen at the link below\nhttps:\/\/github.com\/pancakeswap\/pancake-farm\/tree\/master\/contracts\nI want to deploy it using truffle on the Binance smart chain and the question is that the constructor of the MasterChef.sol takes in 5 args and two of them are contracts I want to know that how to pass the other two contracts i.e CakeToken.sol and SyrupBar.sol as the first two args in the deploy_contracts.js file.","610":"I am learning to build Dapps using <python>. I am using Flask for the web scripting part and Ganache as a local <blockchain>.\nCurrently, I am using this method to fetch account in <python>.\nganacheURL = \"HTTP:\/\/127.0.0.1:7545\"\n<web3> = <web3>(<web3>.HTTPProvider(ganacheURL))\n<web3>.eth.defaultAccount = <web3>.eth.accounts[0]   #First account in Ganache\n\nI am using a Custom RPC in Metamask which is connected to Ganache.\nI want to know if it is possible to fetch the current account address from Metamask using <python>-Flask. If possible, please tell.\nSomething like:\ncurrentAccountAddresss = getCurrentMetamaskAccount()  #Fetches Current Metamask account\n\nThis address should change whenever I choose another account in metamask.\nAny kind of help would be appreciated.","611":"I have delopyed the MasterChef.sol smart contract at the address 0x852741C58ca084154201691CeB5B9D3312415C18 on the Bsc test net. When I call any other function except the owner it gives the error \"call to MasterChef.poolLength errored: Error: Internal JSON-RPC error. { \"code\": -32000, \"message\": \"execution reverted\" }\".\nI am using remix IDE for this and I can't figure out what is the problem. It is something related to gas cost but I don't get what's wrong.\nThis is the contract code\nhttps:\/\/github.com\/sushiswap\/sushiswap\/blob\/master\/contracts\/MasterChef.sol\nwhile deploying the contract I first deployed the SushiToken.sol on BSC and then copied its address to pass as the first arg to the constructor, second arg dev was my copied clipboard metamask address third was 1000000000000000000000 fourth was 0 and the fifth was 1000000000000000000000 for the MasterChef.sol constructor.","612":"I have a contract running on the Near <blockchain>. It accepts a deposit as a payment and has the [payable] attribute on the method.\nCalling this contract from the Near cli with like this - near call sam2.testnet process_play_request --accountId sam2.testnet --deposit 0.005 works fine and returns hello world.\nlet res = await contract.process_play_request(\n    {},\n    undefined, \/\/ attached GAS (optional)\n    nearAPI.utils.format.parseNearAmount(\"0.005\")\n);\n\nHowever calling the same contract, with the same account logged in, using the above JS code throws the following error Error: {} at Object.parseRpcError\nOther methods on the same contract work fine it's only when i try to use the Deposit functionality that it seems to fall apart. Attaching the proper GAS amount still returns the same error.\nCan anyone see what I am doing wrong with the JS code.","613":"Say I wanna swap CVC for KEEP, Uniswap forntend will shows a path(route):cvc>eth>usdt>keep\u00ef\u00bc\u008c\nenter image description here\nHow does it get this path? Where can I get this part of code?","614":"Can anyone explain to me where the mapping or pegging takes place? Take PAXG the price of which is pegged to gold. How do I do that with my erc-20 token? Is it even written in the code or does it have something to do with the exchanges?","615":"Running on an add on called truffle, using ganache, mocha, and chai\nI am new to coding and unsure how most of this works but I am just reaching out if anyone could help that would be great. This was a test made for making a <blockchain> <web3>.0 Ethereum exchange as I was just messing around and learning how it works but I have been stuck with the same error message and no way to solve it and everything on the internet did not lead me in the right direcion but it also could be that I am not smart enough to understand.\nconst Token = artifacts.require('Token') \nconst EthSwap = artifacts.require('EthSwap') \n\ndont know what is wrong with this. Error says it is in line 5 character 99 if I am reading my terminal right\nrequire('chai')\n    .use(require('chai-as-promised'))\n    .should()\n\nfunction tokens(n){\n  return <web3>.utils.toWei(n, 'ether')\n}\n\n contract('EthSwap' , ([deployer, investor]) => {\n    let token, ethSwap\n\n    before(async() =>{\n        token = await Token.new()\n        ethSwap = await EthSwap.new(token.address)\n        \/\/ Transfer all tokens to EthSwap (1 million) \n        await token.transfer(ethSwap.address, tokens('1000000'))\n })\n\ndescribe('Token deployment', async () => {\n        it('contract has a name', async () => {\n            let token = await Token.new()\n            const name  = await token.name()\n            assert.equal(name, 'Renn Token')\n            })\n})\n\nalso think that the error is somehow tied to this as it is under the ethswap deployement and says contract has a name\ndescribe('EthSwap deployment', async () => {\n        it('contract has a name' , async () => {\n            let ethSwap = await EthSwap.new()\n            const name  = await ethSwap.name()\n            assert.equal(name, 'EthSwap Ethereum Exchange')\n        })\n\n        it('contract has tokens', async() => {\n            let balance = await token.balanceOf(ethSwap.address)\n            assert.equal(balance.toString(), tokens('1000000'))\n        })\n    })\n\ndescribe('buyTokens()', async () => {\n    it('Allows user to instantly purchase tokens from ethSwap for a fixed price', async () => {\n        await ethSwap.buyTokens({ from: investor, value: <web3>.utils.toWei('1', 'ether') })\n    })\n\n})\n\n\n\n\n })\n\nnew to coding so a dumbed down explanation would be greatly appreciated","616":"I was reading about the working of <blockchain> in a bitcoin transaction, I have understood a lot about it, that the blocks are interconnected, block contains the hash of previous block, whenever a block is created the miners tries to solve a math puzzle so called proof of work and whoever solve it first , earn a bitcoin and that block is added, the one having the longest will considered as valid <blockchain>\nWhat I didn't get is whenever there is a set of transaction, a block is created , suppose if one of the transaction in that is invalid, so what miners will start doing is to solve a puzzle , but what that puzzle has to do with checking of that invalid transaction??","617":"I am pretty new to the topic and I would like to understand or if you could re-direct me to the proper source of knowledge about on-chain data, where are they coming from?\nHow such websites as Glassnode or CryptoQuant are able to deliver such a sophisticated charts about wallets, <transactions>, exchanges, market indicators etc. ?\nAre all of those data publicly available on the <blockchain> and those companies are running kind of \"queries\" to get such data?\nI am just wondering how it works under the hood, to be able to get such on-chain data?\nI would very grateful for brief explanation or simply re-direction to good source of knowledge.\nBest Regards \u00f0\u009f\u0099\u008f","618":"I have researched some articles and videos as bellow, but want to hear more opinions.\nhttps:\/\/hedera.com\/hh_whitepaper_v2.1-20200815.pdf\nhttps:\/\/blog.eccouncil.org\/hashgraph-vs-<blockchain>-top-4-differences-you-need-to-know\/\nthis video is saying the 10000 per second is not accurate\nhttps:\/\/www.youtube.com\/watch?v=hIyL3d68Cg0","619":"I'm looking for a solution to get all available and new BEP-20 tokens on the Binance Smart Chain. I tried it with <web3>py to analyze all <transactions> and extract the token from the input field but looks not the right way. I tried the BSCscan API, Pancakeswap API und <web3>py but nobody provides that endpoint.\nHere are my current solution to get all <transactions>:\nfrom <web3> import <web3>\nimport time\n\n<web3> = <web3>(<web3>.HTTPProvider('https:\/\/bsc-dataseed.binance.org\/'))\n\ndef handle_event(event):\n    try:\n        transaction = <web3>.eth.getTransactionReceipt(event)\n        print ('\\n****************TRANSACTION****************')\n        print (transaction)\n        print ('*******************************************\\n')\n    except:\n        pass\n\ndef log_loop(event_filter, poll_interval):\n    while True:\n        for event in event_filter.get_new_entries():\n            handle_event(event)\n        time.sleep(poll_interval)\n\ndef main():\n    <transactions> = <web3>.eth.filter('pending')\n    log_loop(<transactions>, 1)\n\nif __name__ == '__main__':\n    main()\n\nwith transaction.input and inside logs I would see the transferred token...\nBTW: Anyone here who have a working solution to extract the token from input without slicing the string by hand?\nAnyone knows a better way to get all BEP-20 token? My goal would be something similar like: https:\/\/poocoin.app\/ape","620":"I have a bit weird situation..I was able to deploy my contract to local Ganache instance with:\n\ntruffle migrate --network develop\n\nHowever, now when I make any change to the contract and run the same command, my contract gets compiled but at the end I get\n\nNetwork up to date\n\nNow I'm not sure why this is happening ? The contract is not the same, although I have changed just a few lines of code and parameters and the return values are the same, could that be the reason ?\nAlso, I thought it would work with:\n\ntruffle deploy --reset\n\nHowever I get this:\nCompiling your contracts...\n===========================\nEverything is up to date, there is nothing to compile.\n\nSomething went wrong while attempting to connect to the network. Check your network configuration.\n\nCould not connect to your Ethereum client with the following parameters:\n    - host       > 127.0.0.1\n    - port       > 7545\n    - network_id > 5777\n\nNow its weird that is trying to use port 7545 when I run command with a --reset option...as my truffle-config points to port 8545:\nmodule.exports = {\n  \/\/ See <http:\/\/truffleframework.com\/docs\/advanced\/configuration>\n  \/\/ to customize your Truffle configuration!\n  contracts_build_directory: path.join(__dirname, \"client\/src\/contracts\"),\n  networks: {\n    develop: {\n      host: \"127.0.0.1\",\n      port: 8545,\n      network_id: \"*\",\n    }\n  },\n\n  \/\/ Configure your compilers\n  compilers: {\n    solc: {\n      version: \"0.8.4\",    \/\/ Fetch exact version from solc-bin (default: truffle's version)\n     }\n    }\n  },\n};\n\nI did previously have Ganuche running on 7545 as an experiment, but it hasn't been running on that port for a while, and\n\ntruffle migrate --network develop\n\nwas able to connect and execute initial migration. It's just that now it won't pick any new changes. Any ideas what is going on ?","621":"while building SAAS solutions based on Corda, who owns the certificates issued to each participant? Is it owned by SAAS provider \/ each node?","622":"I have already deployed a contract on Binance Smart Chain. I now would like to add time lock functionality to this contract to lock some of the tokens for a time period. I know that smart contracts are immutable so there is no way to change the already deployed contract. My question is that : Can I deploy a new contract that only has the time lock function that interacts with my already deployed contract and lock some tokens of the already deployed contract ? In a nutshell, what I want to do is to add a new function to an already deployed contract with a new contract. Is this possible ? I think it should, because otherwise there won't be any ways to add new functionalities to a deployed contract but I couldn't find any tutorials on that. If there is a way, can you guys point me in the right direction ?\nThank you very much.","623":"Does anyone know how to obtain the list of <transactions> from a contract' address\nI have tried the etherscan.io API https:\/\/etherscan.io\/apis#contracts\nI have followed the instructions to receive a response with a list of all transaction for a contract's address :\nwith the following url = https:\/\/api.etherscan.io\/api?module=account&action=txlist&address=<CONTRACT_ADDRESS>&startblock=0&endblock=99999999&sort=asc&apikey=\nBelow, my http request to the Etherscan API =\nexport const fetch<transactions> = () => {\n  return (dispatch, _, { TaskCounter: { _address } }) => {\n    const MYAPIKEY = \"XXXXX\";\n    dispatch(fetch<transactions>Pending());\n    axios\n      .get(\n        `https:\/\/api.etherscan.io\/api?module=account&action=txlist&address=${_address}&startblock=0&endblock=99999999&sort=asc&apikey=${MYAPIKEY}`\n      )\n      .then(console.dir)\n      .catch(console.error);\n  };\n};\n\nAnd, I get this response with status 200:\nconfig: {url: \"https:\/\/api.etherscan.io\/api?module=account&action\u00e2\u0080\u00a6ort=asc&apikey=13QNDPDD3AU1FY7K9V96S628AAPPRZK5T1\", method: \"get\", headers: {\u00e2\u0080\u00a6}, transformRequest: Array(1), transformResponse: Array(1), \u00e2\u0080\u00a6}\ndata: {status: \"0\", message: \"No <transactions> found\", result: Array(0)}\nheaders: {cache-control: \"private\", content-length: \"172\", content-type: \"application\/json; charset=utf-8\"}\nrequest: XMLHttpRequest {readyState: 4, timeout: 0, withCredentials: false, upload: XMLHttpRequestUpload, onreadystatechange: \u00c6\u0092, \u00e2\u0080\u00a6}\nstatus: 200\n\n\n\"No <transactions> found\"\nresult = []\n\nThis is very strange, although my contract has <transactions> visible when I visit the goerli etherscan. The contract is deployed on the Goerli tesnet.\nI need assistance with the Etherscan API unless there is a different method to fetch the complete list of <transactions> for a deployed contract on a testnet. I could not find anything with <web3>.eth ...\nthanks for the help","624":"is there any way to get pending transaction for a specified address? I can filter them on bscscan here, but I can't do the same in my <web3>py code. I can get all pending transaction for current pending block but I can't filter them. I can do:\ntxHashPending = w3.eth.filter('latest').get_all_entries()\n\nand I get transactionHashes for pending <transactions>. I tried doing:\ntxHashPending = w3.eth.filter({'fromBlock':'pending','toBlock':'pending','from':'0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56'}).get_all_entries()\n\nbut it returned already validated\/mined <transactions>.","625":"I am learning <hyperledger> sawtooth , I cloned simplewallet project and tried to run stuff and play with function to learn how is this project working.\nI could successfully create client function and add it properly. but changing or adding stuff to the transcation processor at simplewallet-tp.py isn't causing anything . i tried to change the deposit function to add the amount X2 , i even tried to create errors inside it but once i run docker, the deposit function works the same and nothing changed .\nWhat could I be possibly doing wrong ?","626":"i am working on an ico and i got this code, the crowdsale was with dai token but i want to work with ether,\nhow can i do that ?\nIERC20 public dai = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\nfunction buy(uint etherAmount)\n    external\n    icoActive() {\n    require(\n      etherAmount >= minPurchase && etherAmount <= maxPurchase, \n      'have to buy between minPurchase and maxPurchase'\n    );\n    uint tokenAmount = etherAmount.div(price);\n    \n    require(\n      tokenAmount <= availableTokens, \n      'Not enough tokens left for sale'\n    );\n    dai.transferFrom(msg.sender, address(this), etherAmount);\n    token.mint(address(this), tokenAmount);\n    sales[msg.sender] = Sale(\n        msg.sender,\n        tokenAmount,\n        false\n    );\n}","627":"Following a tutorial on Solidity and am working on the front end and end up getting hit with this error\nIt won't let me fetch the greeting but I can set the greeting everything else works except for the fetch greeting, it won't let me see it even if I set the greeting to something else I can't see it in the console only the error  here is the  Solidity tutorial\nHere is my solidity code\npragma solidity ^0.8.4;\n\nimport \"hardhat\/console.sol\";\n\n\ncontract Greeter {\n  string greeting;\n\n  constructor(string memory _greeting) {\n    console.log(\"Deploying a Greeter with greeting:\", _greeting);\n    greeting = _greeting;\n  }\n\n  function greet() public view returns (string memory) {\n    return greeting;\n  }\n\n  function setGreeting(string memory _greeting) public {\n    console.log(\"Changing greeting from '%s' to '%s'\", greeting, _greeting);\n    greeting = _greeting;\n  }\n}\n\nAnd here is my react code:\nimport '.\/App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers'\nimport Greeter from '.\/artifacts\/contracts\/Greeter.sol\/Greeter.json'\n\n\/\/ Update with the contract address logged out to the CLI when it was deployed \nconst greeterAddress = \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n\nfunction App() {\n  \/\/ store greeting in local state\n  const [greeting, setGreetingValue] = useState()\n\n  \/\/ request access to the user's MetaMask account\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  \/\/ call the smart contract, read the current greeting value\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.<web3>Provider(window.ethereum)\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider)\n      try {\n        const data = await contract.greet()\n        console.log('data: ', data)\n      } catch (err) {\n        console.log(\"Error: \", err)\n      }\n    }    \n  }\n\n  \/\/ call the smart contract, send an update\n  async function setGreeting() {\n    if (!greeting) return\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.<web3>Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer)\n      const transaction = await contract.setGreeting(greeting)\n      await transaction.wait()\n      fetchGreeting()\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={fetchGreeting}>Fetch Greeting<\/button>\n        <button onClick={setGreeting}>Set Greeting<\/button>\n        <input onChange={e => setGreetingValue(e.target.value)} placeholder=\"Set greeting\" \/>\n      <\/header>\n    <\/div>\n  );\n}\n\nexport default App;\n\nAny advice would help thx","628":"I am very new to <blockchain>-corda R3 and i have got one task to create some party node, put some constrain and get the digital signature from the UI.\nPlease help me to get started with this as I have gone through the corda docs but I didn't get the solution properly.\nRequest you to please help me with the flow.\nHow we can get the digital signature from UI and also how we can sign transaction and validate in other node.\nThank you","629":"I can access a <blockchain> Service based on Quorum, and I'm using Nethereum Library to interact with Smart Contract.\nWhen I deploy a new Smart Contract, Nethereum gives the address and the ABI of SmartContract.\nBut I can't access the ABI of SmartContract without deploying the process. How can I get ABI based on the address of Smart Contract?","630":"Most of the ERC721 examples using Open Zeppelin I see require the mint function to have an access control where only the owner of the contract is allowed to call the function. For example,\nfunction mint(address to) public virtual {\n    require(hasRole(MINTER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have minter role to mint\");\n\n    _mint(to, _tokenIdTracker.current());\n    _tokenIdTracker.increment();\n}\n\nor the following using the Ownable library.\nfunction mint(address receiver) external onlyOwner returns (uint256) {\n    _tokenIds.increment();\n\n    uint256 newTokenId = _tokenIds.current();\n    _mint(receiver, newTokenId);\n\n    return newTokenId;\n}\n\nDoes this mean a new contract has to be deployed each time a new token is minted? This seems not only excessive in terms of the gas fee, but also the ERC721 contract has properties for mapping different owners and tokens:\n\/\/ Mapping from token ID to owner address\nmapping (uint256 => address) private _owners;\n\n\/\/ Mapping owner address to token count\nmapping (address => uint256) private _balances;\n\nwhich wouldn't make sense if minting is restricted to the contract owner.\nIt makes more sense to me that you deploy a single ERC721 contract (and its dependencies) and have the users call the mint function. What is the best practice for the mint function of ERC721?","631":"i'm new to <blockchain> development and i was following a tutorial for making an ICO, but he uses openzipplin 2.x and crowdsale contracts that are already implemented on it, i saw on the doc that those contracts are not in the versions 3.x and 4.x, so i'm wondering what is the best way to create icos now, if its from scratch? or maybe i can run two versions of openzipplin in same project? or how can i create my token using OZ 4.x and then import it in an other project that uses OZ 2.x !\nthanks for your futur help","632":"Tron main net (TRC20) is about 500GB nowadays and needs much server config!\nI'm searching for a way to prune the network like the pruning method in Bitcoin nodes or light or fast sync modes in Ethereum <blockchain>.\nDoes anybody know a way to do that?","633":"I understand that smart contracts are converted into bytecode and stored on a block in the <blockchain>. Smart contracts could be used similarly to Kickstarter. A project team might set a funding goal that would only be paid out if backers donate enough money to meet the goal.\nBut how does the the smart contract know when to pay the project team? A block's hash changes wildly depending on its data. So, keeping track of the amount of donations and transaction IDs inside a block should not be possible because it would change the block's hash. Therefore, how does the smart contract know how much money has been funded, and how does it remember where to donations the money to if the funding goal is not met?\nIs it true that there is a ledger (or <blockchain>) and also a state database?\nIf so, I'm assuming that we store values associated with a smart contract on the state database.","634":"I'm trying to transfer token (smart contract) from non activated account in Tron with tronweb to another account, the source account does not have any TRX.\nIs it possible to pay fee for the transaction with another account?","635":"I'm running a web server, where I receive data in JSON format and planning to store it in a NoSQL database. Here is an example:\ndata_example = {\n    \"key1\": \"val1\",\n    \"key2\": [1, 2, 3],\n    \"key3\": {\n        \"subkey1\": \"subval1\",\n        .\n        .\n        }\n      }\n\nI had thoughts about using a Merkle tree to represent my data since JSON is also a tree-like structure.\nEssentially, what I want to do is to store my data in (or as) a more secure decentralized tree-like structure. Many entities will have access to create, read, update or delete (CRUD) a record from it. These CRUD operations will ideally need to be verified from other entities in the network, which will also hold a copy of the database. Just like in <blockchain>.\nI'm having a design\/concept problem and I'm trying to understand how can I turn my JSON into a Merkle tree structure. This is my Node class:\nclass Node:\n    \"\"\" class that represents a node in a merkle tree\"\"\"\n    def __init__(data):\n          self.data = data\n          self.hash = self.calculate_some_hash()  # based on the data or based on its child nodes\n\nI'm interested in the conception\/design of this as I couldn't figure out how this can work. Any idea how to save\/store my data_example object in a Merkle tree? (is it possible?)","636":"I'm trying to create an acount  following this steps on this wax tutorial () but when I run the command to create an account\ncleos -u https:\/\/chain.wax.io\/ system newaccount waxdappacct1 waxnftowner1 EOS7jEb46pDiWvA39faCoFn3jUdn6LfL51irdXbvfpuSko86iNU5x --stake-net '5.00000000 WAX' --stake-cpu '5.00000000 WAX' --buy-ram-kbytes 32\n\nI keep getting the error:\nError 3090003: Provided keys, permissions, and delays do not satisfy declared authorizations\nEnsure that you have the related private keys inside your wallet and your wallet is unlocked.\nError Details:\ntransaction declares authority '{\"actor\":\"waxdappacct1\",\"permission\":\"active\"}', but does not have signatures for it.\n\nI have created all the keys as per the tutorial above, I also try an different endpoint (https:\/\/wax.greymass.com\/) as the https:\/\/chain.wax.io\/ is return an error even for a simple get info request.\nI also try to use my wax cloud wallet created here (wallet.wax.io) with the development mode enabled, but I keep getting the same error.\nDoes anyone know how can I create an account to set my contract on the test net?","637":"I am setting up a service where users will pay by sending crypto to a particular address but i need some way to verify that the user is the owner of the address they say they sent it from without it being complicated on the users end.","638":"I already know that with this method \"tronweb.contract().at(contractAddress).Transfer.watch()\" I can listen to transfer events of a specific contract, but what I don`t know is that how can I listen for TRX intself?","639":"I have a token contract deployed on Binance Smart Chain and want to burn some of the tokens manualy, thus to execute following function call from some kind of console.\nmyContract.burn(10000);\n\nI have ABI and bytecode\nHow and where can I execute this?","640":"I need to integrate Pancakeswap into my company project to get price and implement buy\/sell transaction. I can see that Pancakeswap now only have Pancakeswap sdk v2. How can I connect that to nestjs to get the coin info and implement transaction? Thanks.","641":"Consider this is my simple smart contract.\nuint public value;\n\nfunction inputData(uint _value) public returns(uint){\n    value=_value;\n    return(value);\n}\n\nNow, i implement this smart contract on Ganache. Block-1 is formed on Ganache.\nWhen i call a function [inputData(43)] then Block-2 is formed.\nAgain, when i call the same function [inputData(57)] then Block-3 is formed.\nNow if i want to check the value of variable \"value\", it is 57, that is stored in block-3.\nBut, how can i check the value of variable \"value\" stored in block-2.??\nI know, i can easily do this using mapping and other stuff, but i want to know how exactly data are stored in blocks and how can i read them???","642":"Modern digital businesses work because, among other things, they can adapt to change. This is reflected in software development methods (Agile methodologies, etc.). Would Google have survived if it was still a simple search engine?\nA smart-contract-based distributed autonomous organisation (DAO) is (if I'm not mistaken), initial, unchangeable, deterministic etc. How can we possibly expect the initial trajectory of a DAO through the nonlinearity and chaos of the real world to result in a useful, valuable, competitive service in 20 years' time if it can't update itself?","643":"I'm trying to query the public Ethereum <blockchain> for gas data. I want my query to return the average amount of gas consumed per transaction over the course of a day, for each day since the <blockchain> went public to present day.\nThis is my query so far:\nSELECT receipt_gas_used, block_timestamp, block_number\nFROM `bigquery-public-data.crypto_ethereum.<transactions>`\nWHERE DATE(block_timestamp) BETWEEN \"2015-07-30\" AND \"2021-05-10\"\nLIMIT 2200\n\nWhen I wrap the receipt_gas_used in the AVG function, I only get on result. When I run the query as shown above, I get numerous results for the same day. How can I write this function so that I get an average per day?","644":"I am trying to write a subgraph for the contract which is deployed in the rinkeby test network.\nfor that I need to run the graph-node in the same rinkeby test network.\nWith the reference of the below repo\nhttps:\/\/github.com\/graphprotocol\/graph-node\nI am running it in my local machine using the below cargo command\ncargo run -p graph-node --release --  --postgres-url postgresql:\/\/postgres:postgres@localhost:5432\/graph-node  --ethereum-rpc 'rinkeby:https:\/\/rinkeby.infura.io\/v3\/2a46ac7cdb4c44acac4de87dadfd6e39'  --ipfs 127.0.0.1:5001\n\nI used infura.io for getting the rinkeby rpc url.\nbut its throws an error 401 Unauthorized. I don't know where i am making the mistake.\n\nI m unable to connect the rinkeby network.\nKindly please help me to resolve the issue.\nThanks in advance.","645":"When I -> cleos get info | it return: {\n\"server_version\": \"a48fa1d9\",\n\"chain_id\": \"cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f\",\n\"head_block_num\": 85,\n\"last_irreversible_block_num\": 84,\n\"last_irreversible_block_id\": \"000000542a41f5672077709d84ab2514867b3a19c215ffd79a0654841cce4c6d\",\n\"head_block_id\": \"0000005581138e1662b53fab496d1616103c21f4b322e132eeacc9eb96b29740\",\n\"head_block_time\": \"2021-05-10T15:39:59.000\",\n\"head_block_producer\": \"eosio\",\n\"virtual_block_cpu_limit\": 217493,\n\"virtual_block_net_limit\": 1140464,\n\"block_cpu_limit\": 200000,\n\"block_net_limit\": 1048576,\n\"server_version_string\": \"v2.0.5wax01\",\n\"fork_db_head_block_num\": 85,\n\"fork_db_head_block_id\": \"0000005581138e1662b53fab496d1616103c21f4b322e132eeacc9eb96b29740\",\n\"server_full_version_string\": \"v2.0.5wax01-a48fa1d9fb676f3b41b6c2e7d1682067a5024630\"\n}\nWhen I -> cleos -u https:\/\/testnet.waxsweden.org get info | it return: {\n\"server_version\": \"b5344cde\",\n\"chain_id\": \"f16b1833c747c43682f4386fca9cbb327929334a762755ebec17f6f23c9b8a12\",\n\"head_block_num\": 89637852,\n\"last_irreversible_block_num\": 89637524,\n\"last_irreversible_block_id\": \"0557c294756fea8e87c85838ca5e9cd535d7e333187987cc4cb1f669fed558ee\",\n\"head_block_id\": \"0557c3dc62b1d5377e30928fede5cab89b022a68ea3748ee7924be1ecfe0a009\",\n\"head_block_time\": \"2021-05-10T15:41:13.500\",\n\"head_block_producer\": \"eoseouldotio\",\n\"virtual_block_cpu_limit\": 200000000,\n\"virtual_block_net_limit\": 1048576000,\n\"block_cpu_limit\": 199900,\n\"block_net_limit\": 1048576,\n\"server_version_string\": \"v2.0.12wax01\",\n\"fork_db_head_block_num\": 89637852,\n\"fork_db_head_block_id\": \"0557c3dc62b1d5377e30928fede5cab89b022a68ea3748ee7924be1ecfe0a009\",\n\"server_full_version_string\": \"v2.0.12wax01-b5344cde06837726fef9e384fcedc207dcf6b160\"\n}\nBut When I -> cleos -u https:\/\/chain.wax.io get info | it return error: error 2021-05-10T15:42:27.953 cleos     main.cpp:4013                 main                 ] Failed with error: Parse Error (4)\nUnexpected char '101' in \"error\"\n\n\nWhy?. any bro help me. pls","646":"I would like to know the difference between indy-node and indy-sdk? When to use indy-node and when to use indy-sdk. Is indy-node using indy-sdk internally?","647":"I understood some basics of <blockchain> and Bitcoin by studying over the internet and asking questions to stake overflow. <blockchain>: It\u00e2\u0080\u0099s a distributed database where records are kept and shared to all connected nodes. Each block of <transactions> has a hash of its previous block and hence it\u00e2\u0080\u0099s immune to tempering. Blocks are added through some consensus mechanisms. Once a block is added to the chain, it cannot be deleted.\n\nBitcoin: Bitcoin is a cryptocurrency implemented over <blockchain> technology. It is also the first successful implementation of\n<blockchain> technology. The flow of Bitcoin transaction is like below-\n\nAny node connected to the Bitcoin <blockchain> network can generate <transactions> that are propagated to all connected nodes. As every node has all previous records, every node first validates the <transactions> comparing with the sender\u00e2\u0080\u0099s and receivers\u00e2\u0080\u0099 transaction history.\n\nAt a certain point in time, the nodes try to make a block with all\npending <transactions> by using the PoW consensus mechanism.\nHere the difficulty of the consensus mechanism is to find the hash\nof the to block having a number of leading zeros.\nIf a node gets that targeted number of leading zero in the hash,\nthat node's block will be added to the <blockchain>.  Then other nodes\nwill validate this block.\nAnd it will be finally added to the Bitcoin <blockchain> database.\nThen the similar work will continue to add next blocks.\n\nI\u00e2\u0080\u0099m unable to understand how Smart contract works on the <blockchain>. I know in smart contract each transaction is a kind of computer script\/program (e.g, if some condition, then execute something). But how the computer program is getting executed? how <transactions> are getting validated? and how consensus achieved? I\u00e2\u0080\u0099m not getting to understand all these questions.\n\nIt would be great if anyone can explain smart contract the way I understood Bitcoin <blockchain> as explained above.","648":"Trying to create my first smart contract with the REMIX IDE, however getting into a Declaration Error.\nHere is the code of my contract\n\/**** Code start **\/\n\/\/ SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.2;\n\nimport \".\/Context.sol\";\nimport \".\/IBEP20.sol\";\nimport \".\/SafeMath.sol\";\nimport \".\/Ownable.sol\";\n\ncontract SampleTaken is Context, IBEP20, Ownable {\n    \n    \n    mapping(address => unit) public balances;\n    \n    unit public totalSupply = 1000000 * 10 ** 18;\n    String public name =\"Sample Token\";\n    String public symbol =\"KJA\";\n    unit public decimals = 18;\n    \n    \/** Events aailable for the Contract**\/\n    \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    \n    constructor(){\n        balances[msg.sender] = totalSupply;\n    }\n    \n    function balanceOf(address _ownerAddress) public view returns (unit){\n        return balances[_ownerAddress];\n    }\n    \n  \n\n    \n    function transfer(address _toAddress, unit _noOfTokens) public view returns (bool){\n    require(balanceOf(msg.sender) >= _noOfTokens, \"Total balance is less than the number of Tokens asked for !!!\");\n    balances[_toAddress] +=_noOfTokens;\n    balances[msg.sender] -= _noOfTokens;\n    emit Transfer(msg.sender,_toAddress, _noOfTokens);\n    return true;\n    }\n    \n    function transferFrom(address _from, address _to, uint _value) public returns (bool){\n     require(balanceOf(_from) >= _value, \"Balance is less than the number of Tokens asked for !!!\");\n     require(allowance[_from][msg.sender] >= _value, \"Allowance too low\");\n     balances[_to] += _value;\n     balances[_from] -= _value;   \n     \n     emit Transfer (_from, _to, _value);\n     return true;\n     \n     \n    }\n    \n}\n\nWhile trying to compile it, I am getting the following error\nDeclarationError: Identifier not found or not unique. --> SampleToken.sol:13:24: | 13 | mapping(address => unit) public balances; | ^^^^\n\n\nWhat could be missing here?\nThanks\nSam","649":"I'm new to solidity and the whole <blockchain> concept and I'm trying to do a simple e-commerce website where a user can select some products, put them in his basket and place an order.\nThe problem is I don't know how to make this work. I'm trying to initialize the order contract with a mock order that contains an array of products, but I'm getting TypeErrors such as this:\n\"TypeError: Member \"createProduct\" not found or not visible after argument-dependent lookup in type(contract Products).\"\nHere is my Products.sol\npragma solidity ^0.5.0;\n\ncontract Products {\n    uint256 public productsCount = 0;\n\n    struct Product {\n        uint256 id;\n        string name;\n        string category;\n        int256 price;\n    }\n\n    mapping(uint256 => Product) public products;\n\n    event ProductCreated(\n        uint256 id,\n        string name,\n        string category,\n        int256 price\n    );\n\n    event ProductEdited(uint256 id, string name, string category, int256 price);\n\n    event ProductDeleted(\n        uint256 id,\n        string name,\n        string category,\n        int256 price\n    );\n\n    constructor() public {\n        createProduct(\"Test\", \"Test\", 53);\n    }\n\n    function createProduct(\n        string memory _name,\n        string memory _category,\n        int256 _price\n    ) public {\n        productsCount++;\n        products[productsCount] = Product(\n            productsCount,\n            _name,\n            _category,\n            _price\n        );\n\n        emit ProductCreated(productsCount, _name, _category, _price);\n    }\n\n    function editProduct(\n        uint256 _id,\n        string memory _name,\n        string memory _category,\n        int256 _price\n    ) public {\n        Product memory _product = products[_id];\n        _product.name = _name;\n        _product.category = _category;\n        _product.price = _price;\n        products[_id] = _product;\n\n        emit ProductEdited(_id, _name, _category, _price);\n    }\n\n    function deleteProduct(uint256 _id) public {\n        Product memory _product = products[_id];\n\n        delete products[_id];\n\n        productsCount--;\n\n        emit ProductDeleted(\n            _id,\n            _product.name,\n            _product.category,\n            _product.price\n        );\n    }\n}\n\nAnd here is my Orders.sol\npragma solidity ^0.5.0;\nimport \".\/Products.sol\";\n\ncontract Orders {\n    uint256 public ordersCount = 0;\n\n    struct Order {\n        uint256 id;\n        int256 totalPrice;\n        string date;\n        Products[] products;\n    }\n\n    mapping(uint256 => Order) public orders;\n\n    constructor() public {\n        createOrder(\n            150,\n            \"01.01.2021\",\n            [Products.createProduct(\"name\", \"category\", 1)]\n        );\n    }\n\n    function createOrder(\n        int256 _totalPrice,\n        string memory _date,\n        Products[] memory _products\n    ) public {\n        ordersCount++;\n        orders[ordersCount] = Order(ordersCount, _totalPrice, _date, _products);\n    }\n}\n\nProbably it's a simple question but I've never used solidity before and all the tutorials on youtube are too simple and don't explain this kind of nested datas.\nI'd really appreciate some help here :D","650":"How do I get contract's all holders with balances on BSC network?\n\nFrom bscsan.com you can export only top holders in CSV format\nFrom bitquery there's no ready method for holders. There's transfers, senders, receivers etc.. I guess you could solve the holders list somehow from this data but didn't find any example\nCovalentHQ's API has a method for this, but unfortunately it's giving timeout error if the holders list for the contract is huge (like SafeMoon with >1.7M holders). I asked their support for solution, but I guess they gave up because they stopped responding\nMy latest plan was to use ethereum-etl. This was showing promise and found an article about it. It seems I need to get traces and <transactions> to be able to query for balances. But when I tried to load the traces:\n\nethereumetl export_traces --start-block 0 --end-block 500000 --provider-uri https:\/\/bsc-dataseed1.ninicoin.io --batch-size 100 --output traces.csv\n\nI get following error message:\nValueError: {'code': -32601, 'message': 'the method trace_block does not exist\/is not available'}\n\nThis made me think that maybe the tool does not support BSC.\nSo any ideas? Have been banging my head to the wall for couple days now.","651":"I am using the code below to create a smart contract, which receives BNB and sends the token created by the contract back.\nI'm using Remix, and selecting the DEX contract to compile.\nHowever, when I do this, the Token information does not appear on BscScan.\nExample: https:\/\/testnet.bscscan.com\/token\/0xb570E6Fff85CBE695c9394bDa7d55fb38a009A28\nAnd I can't add it to my wallet either, it says that the token code doesn't recognize it.\n\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n}\n\n\ncontract ERC20Basic is IERC20{\n\n    string public constant name = \"ByeSeel\";\n    string public constant symbol = \"BYS\";\n    uint8 public constant decimals = 18;\n\n\n\/\/event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\/\/event Transfer(address indexed from, address indexed to, uint tokens);\n\n\nmapping(address => uint256) balances;\n\nmapping(address => mapping (address => uint256)) allowed;\n\nuint256 totalSupply_ = 10000000 * 10 ** 18;\n\nusing SafeMath for uint256;\n\nconstructor() {\n    balances[msg.sender] = totalSupply_;\n}\n\nfunction totalSupply() public override view returns (uint256) {\n    return totalSupply_;\n}\n\nfunction balanceOf(address tokenOwner) public override view returns (uint256) {\n    return balances[tokenOwner];\n}\n\nfunction transfer(address receiver, uint256 numTokens) public override returns (bool) {\n    require(numTokens <= balances[msg.sender]);\n    balances[msg.sender] = balances[msg.sender].sub(numTokens);\n    balances[receiver] = balances[receiver].add(numTokens);\n    emit Transfer(msg.sender, receiver, numTokens);\n    return true;\n}\n\nfunction approve(address delegate, uint256 numTokens) public override returns (bool) {\n    allowed[msg.sender][delegate] = numTokens;\n    emit Approval(msg.sender, delegate, numTokens);\n    return true;\n}\n\nfunction allowance(address owner, address delegate) public override view returns (uint) {\nreturn allowed[owner][delegate];\n}\n\nfunction transferFrom(address owner, address buyer, uint256 numTokens) public override returns (bool) {\nrequire(numTokens <= balances[owner]);\nrequire(numTokens <= allowed[owner][msg.sender]);\n\nbalances[owner] = balances[owner].sub(numTokens);\nallowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\nbalances[buyer] = balances[buyer].add(numTokens);\nemit Transfer(owner, buyer, numTokens);\nreturn true;\n}\n\nevent Received(address, uint);\n receive() external payable {\n emit Received(msg.sender, msg.value);\n}\n\n}\n\nlibrary SafeMath {\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n  assert(b <= a);\n  return a - b;\n}\n\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n   uint256 c = a + b;\n   assert(c >= a);\n   return c;\n} }\n\ncontract DEX {\n\n    event Bought(uint256 amount);\n    event Sold(uint256 amount);\n\n\n    IERC20 public token;\n\n    constructor() {\n        token = new ERC20Basic();\n    }\n\n    function buy() payable public {\n        uint256 amountTobuy = msg.value;\n        uint256 dexBalance = token.balanceOf(address(this));\n        require(amountTobuy > 0, \"You need to send some Ether\");\n        require(amountTobuy <= dexBalance, \"Not enough tokens in the reserve\");\n        token.transfer(msg.sender, amountTobuy);\n        emit Bought(amountTobuy);\n    }\n\n    function sell(uint256 amount) public {\n        require(amount > 0, \"You need to sell at least some tokens\");\n        uint256 allowance = token.allowance(msg.sender, address(this));\n        require(allowance >= amount, \"Check the token allowance\");\n        token.transferFrom(msg.sender, address(this), amount);\n        payable(msg.sender).transfer(amount);\n        emit Sold(amount);\n    }\n\n    receive() external payable {\n    buy();\n    }\n\n}","652":"I am creating this smart contract, it creates and adds all tokens to my wallet.\nThen I send all the tokens in my wallet to my contract.\nHowever, when from another wallet I send BNB for the contract I wanted him to return a number of tokens that are with my contract.\nWhen I do this the transfer fails and sends the following error message:\nWarning! Error encountered during contract execution [out of gas]\nQueria saber se estou fazendo algo errado, ou como devo fazer para que meu contrato tenha gas.\nTransaction Details: https:\/\/testnet.bscscan.com\/tx\/0x7ef36e49e3c6f77716aee79cefbde6c298c3ddeef16ed12dbe613573661135bb\nSmart Contract:\n\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n\nfunction totalSupply() external view returns (uint256);\nfunction balanceOf(address account) external view returns (uint256);\nfunction allowance(address owner, address spender) external view returns (uint256);\n\nfunction transfer(address recipient, uint256 amount) external returns (bool);\nfunction approve(address spender, uint256 amount) external returns (bool);\nfunction transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n\nevent Transfer(address indexed from, address indexed to, uint256 value);\nevent Approval(address indexed owner, address indexed spender, uint256 value); }\n\n\ncontract ERC20Basic is IERC20 {\n\nstring public constant name = \"ByeSeel\";\nstring public constant symbol = \"BYS\";\nuint8 public constant decimals = 18;\n\n\nevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\nevent Transfer(address indexed from, address indexed to, uint tokens);\n\n\nmapping(address => uint256) balances;\n\nmapping(address => mapping (address => uint256)) allowed;\n\nuint256 totalSupply_ = 100 * 10 ** 18;\n\nusing SafeMath for uint256;\n\nconstructor() public {\nbalances[msg.sender] = totalSupply_;\n}\n\nfunction totalSupply() public override view returns (uint256) {\nreturn totalSupply_;\n}\n\nfunction balanceOf(address tokenOwner) public override view returns (uint256) {\n    return balances[tokenOwner];\n}\n\nfunction transfer(address receiver, uint256 numTokens) public override returns (bool) {\n    require(numTokens <= balances[msg.sender]);\n    balances[msg.sender] = balances[msg.sender].sub(numTokens);\n    balances[receiver] = balances[receiver].add(numTokens);\n    emit Transfer(msg.sender, receiver, numTokens);\n    return true;\n}\n\nfunction approve(address delegate, uint256 numTokens) public override returns (bool) {\n    allowed[msg.sender][delegate] = numTokens;\n    emit Approval(msg.sender, delegate, numTokens);\n    return true;\n}\n\nfunction allowance(address owner, address delegate) public override view returns (uint) {\n    return allowed[owner][delegate];\n}\n\nfunction transferFrom(address owner, address buyer, uint256 numTokens) public override returns (bool) {\n    require(numTokens <= balances[owner]);\n    require(numTokens <= allowed[owner][msg.sender]);\n\n    balances[owner] = balances[owner].sub(numTokens);\n    allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\n    balances[buyer] = balances[buyer].add(numTokens);\n    emit Transfer(owner, buyer, numTokens);\n    return true;\n}\n\nevent Received(address, uint);\n receive() external payable {\n emit Received(msg.sender, msg.value);\n}\n\n }\n\nlibrary SafeMath {\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n  assert(b <= a);\n  return a - b;\n}\n\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n  uint256 c = a + b;\n  assert(c >= a);\n  return c;\n} }\n\ncontract DEX {\n\nevent Bought(uint256 amount);\nevent Sold(uint256 amount);\n\n\nIERC20 public token;\n\nconstructor() public {\n    token = new ERC20Basic();\n}\n\nfunction buy() payable public {\n    uint256 amountTobuy = msg.value;\n    uint256 dexBalance = token.balanceOf(address(this));\n    require(amountTobuy > 0, \"You need to send some Ether\");\n    require(amountTobuy <= dexBalance, \"Not enough tokens in the reserve\");\n    token.transfer(msg.sender, amountTobuy);\n    emit Bought(amountTobuy);\n}\n\nfunction sell(uint256 amount) public {\n    require(amount > 0, \"You need to sell at least some tokens\");\n    uint256 allowance = token.allowance(msg.sender, address(this));\n    require(allowance >= amount, \"Check the token allowance\");\n    token.transferFrom(msg.sender, address(this), amount);\n    msg.sender.transfer(amount);\n    emit Sold(amount);\n}\n\n}","653":"I am trying to do backup and restore of a <hyperledger> fabric network v2.2.0. To test this, I used test-network of fabric release - https:\/\/github.com\/<hyperledger>\/fabric-samples\/archive\/refs\/tags\/v2.2.0.tar.gz. First I brought up the network, created the channel, deployed CC and performed invoke, query. Then I took backup by following the article - https:\/\/www.devprovider.com\/how-to-take-backup-from-<hyperledger>-fabric. Once done with the backup, I have deleted the network. Then I tried to restore from the backup data (crypto-materials of orderer, peers, channel-artifacts, peer data and the orderer data). I confirmed that the restoration was successful by comparing the channel height from the network I have deleted and the restored network. It was 8 at the time when I took backup. So to check if everything is working from Chaincode perspective, I have tried query which resulted in error,\n\nError: endorsement failure during query. response: status:500\nmessage:\"error in simulation: failed to execute transaction\n392e33eaadd537650590479036a1018946dcbbebaf3d55cbddb288e243485e80:\ncould not launch chaincode\nbasic_1.0:4ec191e793b27e953ff2ede5a8bcc63152cecb1e4c3f301a26e22692c61967ad: error starting container: error starting container: API error (404):\nnetwork _test not found\"\n\nSame error for invoke. Can anyone please guide me on how to overcome the failure of CC invoke and query? Thanks in Advance!","654":"It seems like some of my truffle tests are not executed. Compilation and everything is working fine. I also get no error messages what so ever.\nAs Im learning dapp development with a book you can download the example code right here.\nAnd here is the corresponding book.\nThe code that I'm referring to is in Kap12\\Kap12_Security_Truffle_Project if I run truffle test only some of the tests are executed, same if I run only a specific test that wasn't executed with truffle test\nSo for example when I run truffle test .\\test\\TestReentrancy.sol the output is:\nCompiling your contracts...\n===========================\n> Compiling .\\contracts\\Delegation.sol\n> Compiling .\\contracts\\GasSiphoningWallet.sol\n> Compiling .\\contracts\\GasToken.sol\n> Compiling .\\contracts\\KingOfTheEther.sol\n> Compiling .\\contracts\\Migrations.sol\n> Compiling .\\contracts\\Reentrancy.sol\n> Compiling .\\contracts\\SmuggleEther.sol\n> Compiling .\\contracts\\UnderflowToken.sol\n> Compiling .\\contracts\\Utility.sol\n> Compiling .\\contracts\\GasToken.sol\n> Compiling .\\contracts\\Reentrancy.sol\n> Compiling .\\contracts\\Utility.sol\n> Compiling .\\test\\TestReentrancy.sol\n> Artifacts written to C:\\Users\\KONSTA~1\\AppData\\Local\\Temp\\test--15764-W3tQRszemoJS\n> Compiled successfully using:\n   - solc: 0.5.0+commit.1d4f565a.Emscripten.clang\n\n\n\n  0 passing (1ms)\n\n\nOutput: truffle version\nTruffle v5.3.4 (core: 5.3.4)\nSolidity - 0.5.0 (solc-js)\nNode v14.16.1\n<web3>.js v1.3.5\n\nWould be very helpful If someone else could test if the code works on his system.","655":"I am using cross-chaincode to take advantage of the fact that I can store data in isolation in different world states. However, I am not clear whether storing in different world states offers advantages with respect to data security over other mechanisms such as private data collections or creation of multiple channels.\nIs there any benchmark that compares these three features?\n\nStorage in different world states DB\nPrivate Data Collections\nDifferent Channels creation","656":"I have tried everyting to connect my Chainlink node up to my postgresql database with no luck. I have scoured the interwebs for answers to no avail...\nHere is the error message I am receiving:\n[ERROR] failed to initialize database, got error failed to connect to `host=\/tmp user=root database=`: dial error (dial unix \/tmp\/.s.PGSQL.5432: connect: no such file or directory)\n\nHere is my .env file:\nROOT=\/chainlink\nLOG_LEVEL=debug\nETH_CHAIN_ID=42\nMIN_OUTGOING_CONFIRMATIONS=2\nLINK_CONTRACT_ADDRESS=0xa36085F69e2889c224210F603D836748e7dC0088\nCHAINLINK_TLS_PORT=0\nSECURE_COOKIES=false\nGAS_UPDATER_ENABLED=true\nALLOW_ORIGINS=*\nETH_URL=wss:\/\/kovan.infura.io\/ws\/v3\/id...\nDATABASE_URL=https:\/\/chainlink-db-url:\/\/postgres:Password@chainlink-kovan:5432\n\nI have tried every configuration of the connection string. Also I am able to connect to the db via pgAdmin no problem and the dbs are publicaly accessible.\nThe postgresql database is on AWS.","657":"I'm using the ethereumjs library and when I go to call const address = ethUtil.toChecksumAddress(addr); and I seem to get the error : error to seed Error: This method only supports 0x-prefixed hex strings but input was: aa4c8571e8cb32a74abb302637b48b92e1a84452\nThe variable addr does NOT seem to start with 0x-prefixed. How can I add this?\nIf I look on https:\/\/iancoleman.io\/bip39\/#english I can see that the address I'm creating is correct but missing the 0x.\nAlso the public and privatekey, when compared with ian coleman is correct, except they're missing the 0x prefix too.\nHow can I add these?\ncode:\nvar bip39 = require('bip39');\nvar hdkey = require('hdkey');\nvar ethUtil = require('ethereumjs-util');\nvar tx = require('ethereumjs-tx');\nvar createHash = require('create-hash');\n\/\/var btcLib = require('bitcoinjs-lib');\nvar bs58check = require('bs58check');\n\nconst mnemonic = bip39.generateMnemonic();\n\nbip39.mnemonicToSeed(mnemonic)\n  .then(seed => {\n    console.log('Seed: ', seed.toString('hex'));\n    console.log('mnemonic: ', mnemonic);\n\n    \/\/knowledge of the master keys can recreate the addresses underneath\n    const root = hdkey.fromMasterSeed(seed);\n    const masterPrivateKey = root.privateKey.toString('hex');\n    console.log('masterPrivateKey: ' + masterPrivateKey);\n\n    const masterpublicKey = root.publicKey.toString('hex');\n    console.log('masterpublicKey: ' + masterpublicKey);\n    \n    const extendedPrivateKey = root.privateExtendedKey.toString('hex');\n    console.log('extendedPrivateKey: ' + extendedPrivateKey+'\\n')\n\n    const extendedPublicKey = root.publicExtendedKey.toString('hex');\n    console.log('extendedPublicKey: ' + extendedPublicKey+'\\n');\n    \n    \/\/ var addrNode = root.derive(\"m\/44'\/60'\/0'\/0\/0\"); \/\/ \"m \/ purpose' \/ coin_type' \/ account' \/ change \/ address_index\"\n    \/\/ var pubKey = ethUtil.privateToPublic(addrNode._privateKey);\n    \/\/ var addr = ethUtil.publicToAddress(pubKey).toString('hex');\n    \/\/ var address = ethUtil.toChecksumAddress(addr);\n    \n    for (i=0; i<10; i++){\n\n      const addrNode = root.derive(`m\/44'\/60'\/0'\/0\/${i}`);\n      console.log(`Creating address node : m\/44'\/60'\/0'\/0\/${i}`);\n      \n      var addrpubkey = ethUtil.privateToPublic(addrNode._privateKey);\n      var addrprivkey = addrNode._privateKey.toString('hex');\n\n      console.log('addrnodePublicKey: '+ addrpubkey.toString('hex'));\n      console.log('addrnodePrivateKey: '+ addrprivkey);\n\n      const addr = ethUtil.publicToAddress(addrpubkey).toString('hex');\n      console.log('addr: '+ addr);\n      const address = ethUtil.toChecksumAddress(addr);\n      console.log('ETH address is: ' + address+'\\n');\n\n    }\n  })\n  .catch(err => {\n    console.error('error to seed', err)\n  })\n\nOutput:\nSeed:  0bfcd3f0248e8d65c8f6fb13826b0cbb1afa61ffad0b15b75a0544d968ee5d559af973df56e67727a2d615190b9902f472e80371a84540bd0905962fece724e0\n\nmnemonic:  device toe hand tell outside dilemma seed alert mercy able actual wool\nmasterPrivateKey: 88c5ae7f279e717b6d31ef347f2957c89dda45769b2c38caef8686b6f638bbbb\nmasterpublicKey: 02213c39c1cf335c9b829ab9818b341a4341a6934c4c234c7d99533b1bbd9b7b1c\nextendedPrivateKey: xprv9s21ZrQH143K45CTK9VJ9X57n3kFRHNeFUnZR6qpkNxbDodkzGqhcL58d7BjhoEZcsxyuWSoi42fRjHQNToeoEbpTEQ6xzCs23A5NGTDHZh\nextendedPublicKey: xpub661MyMwAqRbcGZGvRB2JWf1rL5ajpk6VchiADVFSJiVa6bxuXp9xA8PcUMRuS8kHmymUh5dqaMuD8N9ktEn3Ky8oUybLFq7fEY2rWwsHqYv\nCreating address node : m\/44'\/60'\/0'\/0\/0\naddrnodePublicKey: fa580215fc380df81925ea2213f02a68b88f2122f2f516e78735c186ae417c7e7598b27eb1479ac901d9b634fe22c6c6cd98664d5bf8cdf65efe2f6d620e4ca6\naddrnodePrivateKey: bb48522c28346d7d05d48e7564a403af142ba9d838f267cf8257a294c6d71ff8\naddr: 462a193795de30696a0c9da05741655a8a8a9fc2\n\nIan coleman screenshot with mnemonic above showing the prefix missing for address pub\/priv key and the address:","658":"So i want to be able to buy\/sell the token, but also have the ability for users to send eth to my contract wallet and receive my tokens in exchange. I believe i have the code ready for buyers and sellers to make a transaction to<geth>er, dont think i have the pieces for someone to recieve tokens for sending me ethereum. I would like to make it so at the start people send me eth for a number of coins set at a base value\npragma solidity 0.4.22;\n\ncontract ERC20Basic {\n\n    string public constant name = \"Community Token\";\n    string public constant symbol = \"COMM\";\n    uint8 public constant decimals = 1;  \n\n\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n    event Transfer(address indexed from, address indexed to, uint tokens);\n\n\n    mapping(address => uint256) balances;\n\n    mapping(address => mapping (address => uint256)) allowed;\n    \n    uint256 totalSupply_;\n\n    using SafeMath for uint256;\n\n\n   constructor(uint256 total) public {  \n    totalSupply_ = total;\n    balances[msg.sender] = totalSupply_;\n    }  \n\n    function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n    }\n    \n    function balanceOf(address tokenOwner) public view returns (uint) {\n        return balances[tokenOwner];\n    }\n\n    function transfer(address receiver, uint numTokens) public returns (bool) {\n        require(numTokens <= balances[msg.sender]);\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\n        balances[receiver] = balances[receiver].add(numTokens);\n        emit Transfer(msg.sender, receiver, numTokens);\n        return true;\n    }\n\n    function approve(address delegate, uint numTokens) public returns (bool) {\n        allowed[msg.sender][delegate] = numTokens;\n        emit Approval(msg.sender, delegate, numTokens);\n        return true;\n    }\n\n    function allowance(address owner, address delegate) public view returns (uint) {\n        return allowed[owner][delegate];\n    }\n\n    function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\n        require(numTokens <= balances[owner]);    \n        require(numTokens <= allowed[owner][msg.sender]);\n    \n        balances[owner] = balances[owner].sub(numTokens);\n        allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\n        balances[buyer] = balances[buyer].add(numTokens);\n        emit Transfer(owner, buyer, numTokens);\n        return true;\n    }\n}\n\nlibrary SafeMath { \n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n      assert(b <= a);\n      return a - b;\n    }\n    \n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n      uint256 c = a + b;\n      assert(c >= a);\n      return c;\n    }\n}","659":"From the official documentation,\nAn identity should be classified as\n\nclient if it transacts on the network\nadmin if it handles administrative tasks such as joining a peer to a channel\npeer if it endorses or commits <transactions>\norderer if belongs to an ordering node\n\nSo what is the role of a member ?\nI know member is used in specifying policies (\"OR('Org1MSP.member', 'Org2MSP.member')\") but how does it relate to or differ from a peer or client?","660":"I need to deploy my smart contract to BSC Testnet\nI always got this :\nError: PollingBlockTracker - encountered an error while attempting to update latest block:\nError: ETIMEDOUT\n\nI tried to change the RPC specified here https:\/\/docs.binance.org\/smart-chain\/developer\/rpc.html#rate-limit\nAll of them, yet still the same.\nOne thing is, I tried to deploy it to ropsten instead just for fun.\nAnd it is success.\nIs there any problem with BSC Testnet RPC nowadays ?\nHere is my snip for truffle-config.js\n        testnet: {\n            provider: () => new HDWalletProvider(mnemonic, `https:\/\/data-seed-prebsc-1-s2.binance.org:8545`),\n            network_id: 97, \/\/ 3 for ropsten, 97 for bsc test\n            confirmations: 2,\n            timeoutBlocks: 2000,\n            skipDryRun: true,\n            networkCheckTimeout: 1000000\n        },\n\nI searched, some people use websocket (wss), some change the RPC Url, some add the networkCheckTimeout.\nI tried all of them (except wss, since I don't see it is provided by BSC Testnet).\nBut nothing work.\nAny suggestion ? Thank you","661":"I'm trying to play with <web3>js over the Binance Smart Chain <blockchain> and I hit a wall understanding the transaction data.\nLooking at this transaction for example there are three transaction transfers (Tokens Transferred) most of the time there are like two (I've seen 2, 3, and 5 so far).\nI don't understand what determines the number of transfers for a single transaction. And how to retrieve that data using <web3>js.\nI would like to know the amount of BNB paid and the amount of the Tokens received in that transaction and vice versa if the transaction was about selling the tokens instead of buying.\nI managed to get the Price paid and tokens amount but only for <transactions> where there are 2 Token transfers. But if there are 3 or more I can't manage to get this information.\n<web3>.eth.getTransaction('0x899e7f3c2138d051eb5246850ded99d519ab65eba58e5f806245cf346ab40e83').then((result) => {\n  console.log(result)\n  console.log(<web3>.utils.fromWei(result.value))\n\n  let tx_data = result.input;\n  let input_data = '0x' + tx_data.slice(10);  \/\/ get only data without function selector\n\n  let params = <web3>.eth.abi.decodeParameters([\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'ethReceived',\n        type: 'uint256'\n      },\n    ]\n    , input_data);\n  console.log(params)\n\n})\n\nThis portion of the code gives me data only for 2 token transfers. How to make it to return me always the amount of paid\/received cash\/tokens no matter how many transfers there are in the <transactions>?? Is it possible?? From what I can see always the 1st transfer and the last transfer in the transaction would be the values that I'm interested in. IS there an easy way to get those? I'm struggling with understanding this and getting work with the ABIs for decoding. Can they be somewhat generic??","662":"I have a erc20 token and in another contract I want to create a token swap function.\nSo very easily, one send a usdc token and swap my erc20 token in 1:1 ratio.\nProblem is how to approve to spend my erc20 token. I tried several times but can't find a way.\ninterface IERC20 {...} \n\ncontract AnotherContract {\n\nfunction approve(address _spender, uint256 _amount) public returns(bool) {\n    return IERC20(MyToken).approve(_spender, _amount);\n}\n\nI deployed this another contract and when I call approve function from it. So When I set '_spender' to this contract address. The result is weird. So this contract is owner and spender both.. As I think a user should be as a owner and this contract should be a spender. But function calling from onchain. the msg.sender is going to be this contract address self.\nI don't understand and am confusing. anybody knows or have some rescoures? Thank you.","663":"I am invoking a cross chaincode from the set method of my chaindode and it properly records the information I send. However, when I invoke the cross chaincode from the get method, then the data is not recorded.\nTo verify that it was not an implementation failure, I copied the function that goes in the get method into the set method as a test and it responded correctly, so I suspect that it is the fact of invoking the same cross-chaincode from another method.\nPart of the set method code that works properly including the function copied from get method:\nlog.SetFlags(0)\nuuid = uuidgen()\nTxID = stub.GetTxID()\ntimestamp = timeNow()\nlog.Println(\"[\"+timestamp+\"][\"+uuid+\"][\"+CHANNEL_ENV+\"][\"+TxID+\"][usecase_cc][Transaction] Transaction makes payment of X units from A to B\")\nre = captureOutput(func(){\n    log.Println(\"[\"+timestamp+\"][\"+uuid+\"][\"+CHANNEL_ENV+\"][\"+TxID+\"][usecase_cc][Transaction] Transaction makes payment of X units from A to B\")\n})\ninvokeArgs = prepareToInvoke(uuid, re)\nstub.InvokeChaincode(\"base_cc\", invokeArgs, CHANNEL_ENV)\n\n\/\/IMPORTED FROM GET METHOD\nAvalbytes, err = stub.GetState(A) \/\/ Get the state from the ledger\nlog.SetFlags(0)\nuuid = uuidgen()\nTxID = stub.GetTxID()\ntimestamp = timeNow()\njsonResp := \"{\\\"Name\\\":\\\"\" + A + \"\\\",\\\"Amount\\\":\\\"\" + string(Avalbytes) + \"\\\"}\"\nlog.Println(\"[\"+timestamp+\"][\"+uuid+\"][\"+CHANNEL_ENV+\"][\"+TxID+\"][Get] Query Response: \"+jsonResp)\nre = captureOutput(func(){\n    log.Println(\"[\"+timestamp+\"][\"+uuid+\"][\"+CHANNEL_ENV+\"][\"+TxID+\"][Get] Query Response: \"+jsonResp)\n})\ninvokeArgs = prepareToInvoke(uuid, re)\nstub.InvokeChaincode(\"base_cc\", invokeArgs, CHANNEL_ENV)\n\/\/IMPORTED FROM GET METHOD\n\nThe failure is that when querying the cross chaincode it returns that the asset has not been inserted. The first four logs have been inserted from the set method and the last one that fails has been tried to insert from the get method:\nresponse 3zjRkx5KXL65KPn4XGc9SjgWBRVS07i07ecWTMmCRf8=\nresponse A+Mq4UjLrvTRyVXEgBsgA5Pvk2WTUjKYa0NYKxMwtG0=\nresponse vlstiHrCz2tw3t8Ba4C9GbHo\/nYrVwstP8JnEPhRAJc=\nresponse KYE+acbDesekYslXT87EEZ546eVSIUREJlHI+8f8ZNY=\n\nTraceback (most recent call last):\nFile \"query.py\", line 91, in <module>\nresponse = loop.run_until_complete(cli.chaincode_query(\nFile \"\/usr\/lib\/<python>3.8\/asyncio\/base_events.py\", line 616, in run_until_complete\nreturn future.result()\nFile \"\/usr\/local\/lib\/<python>3.8\/dist-packages\/fabric_sdk_py-0.9.0-py3.8.egg\/hfc\/fabric\/client.py\", \nline 1328, in chaincode_query\nreturn await chaincode.query(requestor, channel_name, peers, args,\nFile \"\/usr\/local\/lib\/<python>3.8\/dist-packages\/fabric_sdk_py-0.9.0-py3.8.egg\/hfc\/fabric\/chaincode.py\", \nline 316, in query\nraise Exception(res)\nException: [response {\nstatus: 500\nmessage: \"Asset not found: 3280ca60-0352-40c4-83ab-b9c8e25d0f1f\"\n\nTo clarify the error, I have created this image where:\nCross-Chaincode\n1A) Invoke the transaction (usecase chaincode) via <python> SDK and set the method to add the peer (A, Aval) in the <blockchain>.\n2A) Add the peer (A, Aval) through the put state API (usecase chaincode). This action generates a log.\n3A) Collect the log on-chain and send it to another chaincode through a cross-chain invocation (from the usecase chaincode to the base chaincode).\n4A) Add the pair (logUUID, base64(sha256(log(SET(A)))) through the put state API (Base Chaincode).\n5A) Query the use case chaincode via the get method to retrieve Aval from A.\n6A) Query Aval of A through the get state API in usecase chaincode. This action generates a new record.\n7A) Collect the log in chaincode and send it to another chaincode via cross chaincode invocation.\n8A) Adds the pair (logUUID, base64(sha256(log(GET(A)))) via the put state API (chaincode base).\n1B) Query base chaincode via get method to retrieve base64(sha256(log(SET(A))).\n2B) Retrieve base64(sha256(log(SET(A))) from logUUID via get state API in chaincode base.\n3B) Query base chaincode via get method to retrieve base64(sha256(log(GET(A)))).\n4B) Retrieve base64(sha256(log(GET(A))) from logUUID via get state API in chaincode base (Here happens the error).","664":"I am new to <blockchain> and don't have an IT background.\nTrying to understand the technique of SHA256 of block header component\/paramters (i.e previous hash, merkel rule, difficulity level..etc) when appended to<geth>er.\nI noticed that most online SHA256 accepts only string (or text) as input. Thus, i am unable to verify the Block hash using combined block paramters, which are in hex, in these SHA256. There is some online converter which accept hex decimal entry. But since i already have a macro XML request established to one of the online SHA256 text converter, i am wondering if there is any way that i can convert the block hex parameters into string first then use that string into into SHA256 text converter and of course get the same result.\nI also understand some hex-decimal character are control character (e.g 00,01..etc) and may not be converted into string. I just wanted to confirm that ? Please note I am not looking into any decoding in any programming language just want to know if a conversion is possible\/ correct approach and if yes, what process\/method should be followed?\nExample, genesis block with appended parameters of 0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab5f49ffff001d1dac2b7c  >>> whether this can be converted into text\/string.\nMany thanks","665":"truffle migrate --compile-all --reset --network ganache\nCompiling your contracts...\n\nEverything is up to date, there is nothing to compile.\n\nUnknown network \"ganache\". See your Truffle configuration file for available networks.","666":"Our users create orders via an external online platform. This online platform sends our API any orders created by our users. How can we safely ensure that these orders were created by the user the online platform says?\nWe are investigating sending an authentication challenge for each order received via email\/sms. This could become tiresome for operators creating orders all day though. What is the ideal pattern?","667":"I started studying DID a few days ago but I have a doubt.\nA transaction is always associated with the public key of a DID right? Each transaction is written in the <blockchain> and is immutable. Suppose someone steals my private key and I want to revoke my DID.\nA bank application (for example) is not well designed and uses refers to the public key of an old transaction. In this case what happens?\nI don't know if my question is clear enough","668":"I setup a simple <geth> (v1.10.2-stable-97d11b01) private network (genesis.json config below). I compiled and deployed this simple test contract (solidity version: 0.8.4+commit.c7e474f2.Emscripten.clang):\n\/\/ SPDX-License-Identifier: UNLICENSED;\npragma solidity >=0.8;\n\ncontract CoinA {\n    \n    bytes32 public coinName = \"FAKE\";\n\n    mapping (address => uint) public balances;\n\n    function transfer(address receiver, uint amount) public {\n        require(balances[msg.sender] >= amount, \"Not enough amount\");\n        \n        balances[msg.sender] -= amount;\n        balances[receiver] += amount;\n    }\n\n    function set(uint amount) public {\n        require(amount >= 0);\n        balances[msg.sender] = amount;\n    }\n\n    function get() view public returns (uint) {\n        return balances[msg.sender];\n    }\n\n}\n\nHowever, upon invoking the set method, I received this error:\n\nUnhandledPromiseRejectionWarning: Error: Returned error: invalid opcode: SELFBALANCE\n\nPlease advice on how to fix this. Is it because the server doesn't have latest feature that support that opcode? Is there anyway I can compile the code without using that opcode?\nI invoked it using <web3>JS on Node if it's relevant:\n    async function setCoin() {\n        const contract = new w3.eth.Contract(abi, coinAddr);\n        const query = contract.methods.set(1000);\n\n        const tx: TransactionConfig = {\n            data: query.encodeABI(),\n            from: accPublicKey,\n        };\n        const gas = await w3.eth.estimateGas(tx);\n        console.log(\"Estimate Gas: \" + gas);\n        tx.gas = gas;\n\n        const signedTx = await w3.eth.accounts.signTransaction(tx, accPrivateKey);\n        const result = await w3.eth.sendSignedTransaction(signedTx.rawTransaction);\n\n        console.log(\"Done. Gas used: \" + result.gasUsed);\n    }\n\ngenesis.json config:\n{\n  \"config\": {\n    \"chainId\": 5777,\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"clique\": {\n      \"period\": 15,\n      \"epoch\": 30000\n    }\n  },\n  \"difficulty\": \"1\",\n  \"gasLimit\": \"10000000\",\n  \"extradata\": \"0x00000000000000000000000000000000000000000000000000000000000000001ac7d6c5ecdd24067221a44ee839ba0b847058a30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  \"alloc\": {\n    \"1ac7d6c5ecdd24067221a44ee839ba0b847058a3\": { \"balance\": \"300000000000000000000000\" },\n    \"485012dCc48219dbE955C39e1cee4b71F041d178\": { \"balance\": \"300000000000000000000000\" },\n    \"ea673022022Ea39a635C7336c6deA8BFa97778D9\": { \"balance\": \"300000000000000000000000\" }\n  }\n}","669":"I am developing the decentralized application of assy indexes where we swap tokens using uniswap sdk. To complete the transaction I need to connect the account with uniswap smart contract. To connect with uniswap it requires a signer and signer connect the wallet with the private key.\nYou can see the steps below.\n    provider = ethers.getDefaultProvider('rinkeby', {\n      infura: 'https:\/\/rinkeby.infura.io\/v3\/38a3d4450c784956877a1bd2fe75c406'\n    })\n    console.log('provider', provider)\n\n    const signer = new ethers.Wallet(privateKey)\n    console.log('signer', signer)\n\n    const account = signer.connect(provider)\n    console.log('account', account)\n\n    const uniswap = new ethers.Contract(\n      '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n      uniswapAbi,\n      **account**\n    )\n    console.log('Uniswap', uniswap)\n\n    const to = this.accountAddress","670":"I'm trying to use this method:\nfunction test(uint amount) public {\n        address(0xf5eA38B6b9644224dA1aECbC1219e8543c0689b2).call(abi.encodeWithSignature(\"deposit(uint)\",amount));\n    }\n\nbut the transaction gets reverted, this is because the amount is not hashed in some way, and I don't really know to do it, what should I do on the amount? these are <transactions>:\n-the failed one using the method: https:\/\/bscscan.com\/tx\/0x7fdd50cee23295ea866baa8961a2105c58162e77125df852a4fc5bf0fad2f507\nand this was the input data:\nFunction: test(uint256 tAmount) ***\nMethodID: 0x29e99f07\n[0]:  0000000000000000000000000000000000000000000000000000000000000001\n-the successfull one directly calling the contract from the site instead of using call inside another smart contract: https:\/\/bscscan.com\/tx\/0xfd4158766f25761fa5dddb0683c677085a04ea6db05e03794be375a8243d7128\nand this was the input data:\nFunction: deposit(uint256 _amount) ***\nMethodID: 0xb6b55f25\n[0]:  000000000000000000000000000000000000000000000000005427aedb41a400\ndo I need to hash amount in someway?","671":"I have a public uint variable denoting 'which round' it is and a function that advances rounds and does processing alongside the round advancement:\n       uint public round;\n\n       function completeRound() public inPaused() inRound() {\n            if (round == 6) {\n              \/\/ win\n          } else {\n            reduceByHalf();\n            round.add(1);\n          }\n          \n       }\n\nIf i run this in remix, it runs 4 times and then consistently fails on the 5th, indicating that a function suddenly needs to be payable:\ntransact to Playingwithsmartcontracts.completeRound errored: VM error: revert. revert The transaction has been reverted to the initial state. Note: The called function should be payable if you send value and the value you send should be less than your current balance. Debug the transaction to get more information.\nIf I comment out round.add(1) right under where reduceByHalf is called, the code works all day long. I can click it indefinitely with no errors in Remix.\nStrangely, this started as an Enum to track the rounds and that had the same exact problem. While advancing the enum, i could do it 5 times before the above failure and commenting it out made everything work.\nreduceByHalf code doesnt seem to be the offender, but it is shown below in case it has a bearing on the problem:\n\n    struct Foo {\n        address owner;\n        uint mintedRound;\n        uint winningRound;\n    }\n    struct FooOwner {\n        uint[] foos;\n        uint totalWinningFoos;\n    }\n\n    uint[][5] roundFoos;\n    uint[][5] roundWinners;\n\n    mapping(uint => Foo) public winningFoos;\n    mapping(address => FooOwner) public fooOwners;\n\n    uint totalWinningFoos;\n\n    function shuffleFoos (uint256[] memory _array) internal view returns(uint[] memory){\n        uint[] memory clone = cloneArray(_array, _array.length);\n    \n        for (uint256 i = 0; i < clone.length; i++) {\n            uint256 n = i + uint256(keccak256(abi.encodePacked(msg.sender, block.timestamp))) % (clone.length - i);\n            uint256 temp = clone[n];\n            clone[n] = clone[i];\n            clone[i] = temp;\n        }\n        \n        return clone;\n    }\n    \n    function cloneArray(uint256[] memory _array, uint256 _length) internal pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](_length);\n        for (uint256 i = 0; i < _length; i++) {\n            array[i] = _array[i];\n        }\n        return array;\n    }\n\n    function reduceByHalf() internal  {\n        uint[] memory clone = shuffleFoos(roundFoos[round]);\n      \n        uint halfLength = 0;\n\n        halfLength = roundFoos[round].length.div(2);\n        for (uint w = 0; w < halfLength; w++) {\n           \n           uint fooId = clone[w];\n           \n           roundWinners[round].push(fooId); \n           winningFoos[round].winningRound = round;\n           \n           address fooOwner = winningFoos[fooId].owner;\n           \n           fooOwners[fooOwner].totalWinningFoos = fooOwners[fooOwner].totalWinningFoos.add(1);    \n        }\n        \n        totalWinningFoos = totalWinningFoos.add(halfLength);\n    }\n\nAs far as I know, I am not sending value, and not sure why it only thinks im sending value on transaction execution 5.\nWould anyone be able to help me understand what Remix\/Solidity is mad about?\nI totally must not be understanding somehthing but it looks like it's something about the number 5... I can advance the round to 6, but as soon as I set the uint value to 5 is when I start seeing these problems.... so wierd....","672":"I want to implement the _burn(address account, uint256 amount) function provided by OpenZepplin's ERC20 library. The smart contract will call this function when some condition is true.\nThe Rust fungible token example has a on_tokens_burned() function, but it looks like a logger.\n    fn on_tokens_burned(&mut self, account_id: AccountId, amount: Balance) {\n        log!(\"Account @{} burned {}\", account_id, amount);\n    }\n\nHow to burn tokens of a particular user?","673":"I'm trying to install <hyperledger> Fabric in Windows10, my question is does All instructions in the <hyperledger> documentation are issued in the WSL Ubuntu terminal or Git bash in Windows?","674":"I am testing Running a Fabric Application tutorial. I deployed network on one host (let's say: HOST1).\nThen, on another host with different ip address (HOST2) I wanted to run application (like in tutorial).\nTo do this, I copied connection profile, which has been generated, when I run .\/network.sh deployCC script, and changed url of peer from localhost, to IP address of HOST1. So, the connection profile on HOST2 is as below:\n{\n\"name\": \"test-network-org1\",\n\"version\": \"1.0.0\",\n\"client\": {\n    \"organization\": \"Org1\",\n    \"connection\": {\n        \"timeout\": {\n            \"peer\": {\n                \"endorser\": \"300\"\n            }\n        }\n    }\n},\n\"organizations\": {\n    \"Org1\": {\n        \"mspid\": \"Org1MSP\",\n        \"peers\": [\n            \"peer0.org1.example.com\"\n        ],\n        \"certificateAuthorities\": [\n            \"ca.org1.example.com\"\n        ]\n    }\n},\n\"peers\": {\n    \"peer0.org1.example.com\": {\n        \"url\": \"grpcs:\/\/<HOST1IP>:7051\",\n        \"tlsCACerts\": {\n            \"pem\": \"-----BEGIN CERTIFICATE-----\\nCERTBODY\\n-----END CERTIFICATE-----\\n\"\n        },\n        \"grpcOptions\": {\n            \"ssl-target-name-override\": \"peer0.org1.example.com\",\n            \"hostnameOverride\": \"peer0.org1.example.com\"\n        }\n    }\n},\n\"certificateAuthorities\": {\n    \"ca.org1.example.com\": {\n        \"url\": \"https:\/\/<HOST1IP>:7054\",\n        \"caName\": \"ca-org1\",\n        \"tlsCACerts\": {\n            \"pem\": [\"-----BEGIN CERTIFICATE-----\\nCERTBODY\\n-----END CERTIFICATE-----\\n\"]\n        },\n        \"httpOptions\": {\n            \"verify\": false\n        }\n    }\n}\n\nAlso, I changed discovery option in gateway.connect() method in app.js file, to avoid looking fabric network in local network:\ntry {\n\n    const ccp = buildCCPOrg1();\n    const caClient = buildCAClient(FabricCAServices, ccp, 'ca.org1.example.com');\n    const wallet = await buildWallet(Wallets, walletPath);\n    await enrollAdmin(caClient, wallet, mspOrg1);\n    await registerAndEnrollUser(caClient, wallet, mspOrg1, org1UserId, 'org1.department1');\n\n    const gateway = new Gateway();\n\n    try {\n\n        await gateway.connect(ccp, {\n            wallet,\n            identity: org1UserId,\n            discovery: { enabled: true, asLocalhost: false } \n        });\n        \/\/first exception here\n\n        const network = await gateway.getNetwork(channelName);\n        \/\/second exception here, and app closes\n\n        const contract = network.getContract(chaincodeName);\n\n        console.log('\\n--> Submit Transaction: InitLedger...');\n        await contract.submitTransaction('InitLedger');\n        console.log('*** Result: committed');\n        \n        \/\/rest of method from original app.js was cut\n    } finally {\n\n        gateway.disconnect();\n    }\n\nOther than these changes, everything has remained the default.\nApplication can connect to CA and register and enroll admin and appUser (as in tutorial), but crashes when connecting to network.\nCopy of the logs and errors:\nLoaded the network configuration located at \\fabric-samples\\test-network\\conn\\connection-org1.json\nBuilt a CA Client named ca-org1\nBuilt a file system wallet at \\fabric-samples\\asset-transfer-basic\\application-javascript\\wallet\nSuccessfully enrolled admin user and imported it into the wallet\nSuccessfully registered and enrolled user appUser and imported it into the wallet\n2021-04-30T11:49:34.232Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer0.org1.example.com, url:grpcs:\/\/<HOST1IP>:7051, connected:false, connectAttempted:true\n2021-04-30T11:49:34.232Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer0.org1.example.com url:grpcs:\/\/<HOST1IP>:7051 timeout:3000\n2021-04-30T11:49:34.264Z - info: [NetworkConfig]: buildPeer - Unable to connect to the endorser peer0.org1.example.com due to Error: Failed to connect before the deadline on Endorser- name: peer0.org1.example.com, url:grpcs:\/\/<HOST1IP>:7051, connected:false, connectAttempted:true\n    at checkState (\\fabric-samples\\asset-transfer-basic\\application-javascript\\node_modules\\@grpc\\grpc-js\\build\\src\\client.js:69:26)\n    at Timeout._onTimeout (\\fabric-samples\\asset-transfer-basic\\application-javascript\\node_modules\\@grpc\\grpc-js\\build\\src\\channel.js:292:17)\n    at listOnTimeout (internal\/timers.js:549:17)\n    at processTimers (internal\/timers.js:492:7) {\nconnectFailed: true\n}\n2021-04-30T11:49:37.389Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Discoverer- name: peer0.org1.example.com, url:grpcs:\/\/<HOST1IP>:7051, connected:false, connectAttempted:true\n2021-04-30T11:49:37.391Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer0.org1.example.com url:grpcs:\/\/<HOST1IP>:7051 timeout:3000\n2021-04-30T11:49:37.393Z - error: [ServiceEndpoint]: ServiceEndpoint grpcs:\/\/mchm5pza:7051 reset connection failed :: Error: Failed to connect before the deadline on Discoverer- name: peer0.org1.example.com, url:grpcs:\/\/<HOST1IP>:7051, connected:false, connectAttempted:true\n2021-04-30T11:49:37.396Z - error: [DiscoveryService]: send[mychannel] - no discovery results\n******** FAILED to run the application: Error: DiscoveryService has failed to return results\n\nAs can be seen, user is enrolled successfully, but connection to the network cannot be established. I think there can be something under cover, but I don't know where should I look. There are for sure no conflicts with wallets, and certs.\nHow can I connect app to this network from another host?\n\/\/EDIT\nSometimes you can't even trust yourself. It turned out, that tlcCACerts were incorrect. But after correcting connection profile, there were some new errors:\n2021-04-30T15:10:02.760Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Committer- name: orderer.example.com:7050, url:grpcs:\/\/orderer.example.com:7050, connected:false, connectAttempted:true\n2021-04-30T15:10:02.760Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server orderer.example.com:7050 url:grpcs:\/\/orderer.example.com:7050 timeout:3000\n2021-04-30T15:10:02.760Z - error: [DiscoveryService]: _buildOrderer[mychannel] - Unable to connect to the discovered orderer orderer.example.com:7050 due to Error: Failed to connect before the deadline on Committer- name: orderer.example.com:7050, url:grpcs:\/\/orderer.example.com:7050, connected:false, connectAttempted:true\n2021-04-30T15:10:05.776Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer0.org1.example.com:7051, url:grpcs:\/\/peer0.org1.example.com:7051, connected:false, connectAttempted:true\n2021-04-30T15:10:05.778Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer0.org1.example.com:7051 url:grpcs:\/\/peer0.org1.example.com:7051 timeout:3000\n2021-04-30T15:10:05.780Z - error: [DiscoveryService]: _buildPeer[mychannel] - Unable to connect to the discovered peer peer0.org1.example.com:7051 due to Error: Failed to connect before the deadline on Endorser- name: peer0.org1.example.com:7051, url:grpcs:\/\/peer0.org1.example.com:7051, connected:false, connectAttempted:true\n2021-04-30T15:10:08.782Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer0.org2.example.com:9051, url:grpcs:\/\/peer0.org2.example.com:9051, connected:false, connectAttempted:true\n2021-04-30T15:10:08.782Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer0.org2.example.com:9051 url:grpcs:\/\/peer0.org2.example.com:9051 timeout:3000\n2021-04-30T15:10:08.782Z - error: [DiscoveryService]: _buildPeer[mychannel] - Unable to connect to the discovered peer peer0.org2.example.com:9051 due to Error: Failed to connect before the deadline on Endorser- name: peer0.org2.example.com:9051, url:grpcs:\/\/peer0.org2.example.com:9051, connected:false, connectAttempted:true\n\nIt seems, like app on HOST2 doesn't see peers and orderer on HOST1...","675":"https:\/\/github.com\/arefin97\/Medicine_Supply_Chain\nCan anyone plzz tell me how to run this project based on <hyperledger> fabric. what are the steps and how to connect multiple computers for testing and how to run this because I'm getting too many errors.","676":"I have the following test smart contract:\npragma solidity ^0.8.4;\n\ncontract Test {\n    \n    mapping(uint => S_Item) public items;\n    uint itemIndex;\n    \n    enum State {\n        Created,\n        Paid,\n        Delivered\n    }\n    \n    struct S_Item {\n        string _identifier;\n        uint _itemPrice;\n        State _state;\n    }\n    \n    State public state;\n    \n    event SupplyChainStep(uint _itemIndex, uint _step);\n    \n    function createItem(string memory _identifier, uint _itemPrice) public {\n        items[itemIndex]._identifier = _identifier;\n        items[itemIndex]._itemPrice = _itemPrice;\n        state = State.Created;\n        items[itemIndex]._state = state;\n        emit SupplyChainStep(itemIndex, uint(items[itemIndex]._state));\n        itemIndex++;\n        \n    }\n    \n    function triggerPayment(uint _itemIndex) public payable {\n        require(items[_itemIndex]._itemPrice == msg.value, \"Only full payments accepted\");\n        require(items[_itemIndex]._state == State.Created, \"Item is further in the chain\");\n        state = State.Paid;\n        items[itemIndex]._state = state;\n        \n        emit SupplyChainStep(itemIndex, uint(items[itemIndex]._state));\n\n    }\n    \n    function triggerDelivery(uint _itemIndex) public {\n        require(items[_itemIndex]._state == State.Paid, \"Item is further in the chain\");\n        state = State.Delivered;\n        items[itemIndex]._state = state;\n    \n        \n        emit SupplyChainStep(itemIndex, uint(items[itemIndex]._state));\n    }\n}\n\n\nThe createItem function correctly updates the items mappings _identifier and _itemPrice properties. The default value is 0 for the _state property, but if I change the order to make Created occupy position 1 instead of 0 in the enum, the item _state enum property gets updated to the number 1 like I expect.\nThe other two functions will not advance the state in the item mapping. It stays at whatever the current value is in the item mapping with the same code that works in the createItem function.\nNotice the...\n     state = State.XXX \n\n...assignments in each one of these functions - i threw that in to troubleshoot - when the triggerPayment or triggerDelivery functions are ran, state is correctly populated in the public variable named state. in all three functions this works, but the item mappings _state property refuses to be updated in the same way, and thats what I need to work.\nCan anyone help me understand what I can do to get all functions to advance the item mapping _state property as expected like the createItems function seems to be doing without issue?\nThank you!","677":"I'm checking on Sophia documentation (https:\/\/aeternity-sophia.readthedocs.io\/en\/latest\/contracts\/#calling-other-contracts) but I don't get how can I perform cross-contract calls from one Sophia contract to another Sophia contract(call another contract functions from one Sophia contract). Do I have to create an interface or something similar?","678":"I'm writing an NFT smart contract using the OpenZeppelin ERC721Full contract. I'm able to mint NFTs, but I want to have a button that enables them to be bought. I'm trying writing this function:\nfunction buyNFT(uint _id) public payable{\n    \/\/Get NFT owner address\n    address payable _seller = ownerOf(_id);\n\n    \/\/ aprove nft sell\n    approve(_seller, _id);\n    setApprovalForAll(msg.sender, true);\n\n    \/\/transfer NFT\n    transferFrom(_seller, msg.sender, _id);\n\n    \/\/ transfer price in ETH\n    address(_seller).transfer(msg.value);\n\n    emit NftBought(_seller, msg.sender, msg.value);\n\n  }\n\nThis does not work because function approve must be called by the owner or an already approved address. I have no clue on how a buy function should be built. I know that I must use some requirements but first I want the function to work on tests and then I'll write the requirements.\nHow should a buy function be coded? Because the only solution I have found is to overwrite the approve function and omit the require of who can call this function. But it looks like it isn't the way it should be done.\nThank you!","679":"Today I noticed that there is a big difference in <blockchain> fee between Bitcoin-Qt and <blockchain> API.\nWhen I get fee using <blockchain> API\nbitcoin-cli estimatesmartfee 6\n{\n  \"feerate\": 0.00149343,\n  \"blocks\": 6\n}\n\nWhen I get fee from Bitcoin-Qt it shows 0.00032476\nenter image description here","680":"I tried to create a separate channel and instantiate separate chaincodes onto the channel. I was able to create separate channels but when I instantiate the chaincode onto the cahnnels, both the chaincodes are being instantiated on both the channels created.\nEven though I have set the environment variable for CHANNEL_NAME: \"channel2\" and CHAINCODE_NAME: \"arm2\", both the chaincodes are instantiated on both channels.\nHere is the yaml code for chaincode instantiation of instantiating chaincode \"arm2\" on the channel \"channel2\".\n---\napiVersion: batch\/v1\nkind: Job\nmetadata:\n  name: chaincodeinstantiate2\nspec:\n  backoffLimit: 1\n  template:\n    metadata:\n      name: chaincodeinstantiate2\n    spec:\n      restartPolicy: \"Never\"\n      volumes:\n      - name: nfs\n        nfs:\n          server: %NFS_CLUSTER_IP%\n          path: \/\n      containers:\n      - name: chaincodeinstantiate2\n        image: <hyperledger>\/fabric-tools:x86_64-1.0.4\n        imagePullPolicy: Always\n        command: [\"sh\", \"-c\", \"peer chaincode instantiate -o <blockchain>-orderer:31010 -C ${CHANNEL_NAME} -n ${CHAINCODE_NAME} -v ${CHAINCODE_VERSION} -c '{\\\"Args\\\":[\\\"init\\\",\\\"a\\\",\\\"100\\\",\\\"b\\\",\\\"200\\\"]}'\"]\n        env:\n        - name: CHANNEL_NAME\n          value: channel2\n        - name: CHAINCODE_NAME\n          value: \"arm2\"\n        - name: CHAINCODE_VERSION\n          value: \"1.0\"\n        - name: FABRIC_CFG_PATH\n          value: \/etc\/<hyperledger>\/fabric\n        - name: CORE_PEER_MSPCONFIGPATH\n          value: \/shared\/crypto-config\/peerOrganizations\/org1.example.com\/users\/Admin@org1.example.com\/msp\n        - name: CORE_PEER_LOCALMSPID\n          value: Org1MSP\n        - name: CORE_PEER_ADDRESS\n          value: <blockchain>-org1peer1:30110\n        - name: GODEBUG\n          value: \"netdns=go\"\n        volumeMounts:\n        - mountPath: \/shared\n          name: nfs\n\nThe image attached shows the chaincodes database which contains four rows consisting of chaincodes \"arm1\" and \"arm2\" on both channels \"channel1\" and \"channel2\".\n\nHow do I instantiate the chaincode \"arm1\" onto only channel \"channel1\" and chaincode \"arm2\" onto only channel \"channel2\"?","681":"There are many public smart contracts on VeChain network, however, the ABI definition of those contracts is not publicly visible.\nIs there a registry or GitHub repo where I can quickly find the reference of a smart contract function definition or signature? This will greatly help the development.\nThanks!","682":"I was able to fetch proper trade result of swapping 1 WETH to DAI using Uniswap v2 SDK.\nNow I wanted to fetch how much DAI I need to provide, to get 1 WETH. To trigger this on the Uniswap Interface you simply create trade DAI -> WETH and then type 1 in the \"to\" input (then you get From (estimated) at the top). Unfortunately, it does not work the other way around for me. What I'm receiving is I guess result of selling 1 DAI for WETH.\nHow can I fix that?\nexport async function buySellUni() {\n        const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18)\n        const WETH = new Token(ChainId.MAINNET, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18)\n        const pair = await Fetcher.fetchPairData(DAI, WETH)\n    \n        const buyRoute = new Route([pair], WETH);\n        const buyTrade = Trade.exactIn(buyRoute, new TokenAmount(WETH, BigInt(1E18)));\n        const sellRoute = new Route([pair], DAI);\n        const sellTrade = Trade.exactOut(sellRoute, new TokenAmount(WETH, BigInt(1E18)));\n\n        console.log(\"Get \" + buyTrade.executionPrice.toSignificant(6) + \" DAI for 1 WETH\");\n        console.log(\"Need \" + sellTrade.executionPrice.toSignificant(6) + \" DAI to get 1 WETH\");\n };\n\nI'm using exactOut to get exact Out not In value with WETH token, but my route has been adjusted so the input is DAI not WETH.","683":"Can someone explain to me why it's not possible to split the initial total supply with the Transfer event to multiple address that are not the _msgSender() address ?\nThe goal here is to \"mint\" with the 0x00 address the tokens on multiple wallets (12% in devs wallet, 5% in marketing wallet and 3% in another wallet) but directly in the constructor not using an external function that I will have to call in a script during the deployment.\nBut it's not working and I'm not getting any errors... Really don't understand\nThis is my code :\nconstructor () public payable{\n    uint256 _tTotransfer = _tTotal;\n\n    uint256 _tToDevs = (_tTotal.mul(12)).div(100);\n    _tTotransfer = _tTotransfer.sub((_tTotal.mul(12)).div(100));\n\n    uint256 _tToMarketing = (_tTotal.mul(5)).div(100);\n    _tTotransfer = _tTotransfer.sub((_tTotal.mul(5)).div(100));\n\n    uint256 _tToApes = (_tTotal.mul(3)).div(100);\n    _tTotransfer = _tTotransfer.sub((_tTotal.mul(3)).div(100));\n\n    _rOwned[_msgSender()] = _rTotal;\n\n    emit Transfer(address(0), _msgSender(), _tTotransfer); \n    emit Transfer(address(0), _devsWallet, _tToDevs); \n    emit Transfer(address(0), _marketingWallet, _tToMarketing); \n    emit Transfer(address(0), _apesWallet, _tToApes);\n    \n}\n\nAlso I don't understand why it's not possible to directly \"mint\" the total supply on another wallet (not to split but the entire) than the _msgSender.\nThx guys hope someone would help me...","684":"The idea would be to have a distributed way to retrieve the existence, byte size, and file format from a solidity smart contract using a <blockchain> Oracle like Chainlink:\nExample of image stored on IPFS: https:\/\/ipfs.io\/ipfs\/QmYjh5NsDc6LwU3394NbB42WpQbGVsueVSBmod5WACvpte\nimport \"@chainlink\/contracts\/src\/v***\/IPFSConsumer.sol\";\n\ncontract VerifyFile is IPFSConsumer {\n    \/\/ hashIPFS: QmYjh5NsDc6LwU3394NbB42WpQbGVsueVSBmod5WACvpte\n    function verify(bytes32 hashIPFS) public returns (bool, uint256, string) {\n         bytes32 requestId = IPFSmetadata(hashIPFS);\n         \/\/ ... fulfill request with requestId\n    }\n}\n\nor\nimport \"@chainlink\/contracts\/src\/v***\/IPFSInterface.sol\";\n\ncontract VerifyFile {\n    IPFSInterface internal IPFSmetadata\n    \n    \/\/ hashIPFS: QmYjh5NsDc6LwU3394NbB42WpQbGVsueVSBmod5WACvpte\n    function verify(bytes32 hashIPFS) public returns (bool, uint256, string) {\n         (bool exists, uint256 size, string format) = IPFSmetadata.fromHash(hashIPFS);\n         return ...\n    }\n}","685":"So I do understand the concept of the Raft Protocol.\nBut I struggle with it in the use case of a <hyperledger> Fabric Ordering Service.\nWhat I understand so far:\nWhen a transaction is proposed and endorsed by peers the application forwards it to the ordering service.\nThe Raft Leader-Node receives this transaction and writes it to his Log then sends it to his Follower-Nodes that also update their Logs.\nWhat I don't understand:\n\nWhere and how are the blocks created?\nDo all Nodes create a Block and check if a majority has the same?\n\nI read somewhere that a Blockcutter-method is invoked by the Leader and the resulting Block is then proposed to the local Raft Finite State Machine (what is this?).","686":"What is wrong with this simulation code adding blocks in chain. I think the nonce value should be incremented in while loop before calculating the hash value in \"mineBlock\" function. Else once we get the proof of work succeeded. The nonce that we are going to assign to the block will be one number ahead of the correct nonce.\nimport hashlib\n\nclass Block:\n    def __init__(self, no, nonce, data, hashcode, prev):\n        self.no=no\n        self.nonce=nonce\n        self.data=data\n        self.hashcode=hash\n        self.prev=prev\n\n    def getStringVal():\n        return self.no, self.nonce, self.data, self.hashcode, self.prev\n\nclass <blockchain>:\n    def __init__(self):\n        self.chain=[]\n        self.prefix=\"0000\"\n\n    def addNewBlock(self, data):\n        no=len(self.chain)\n        nonce=0\n\n        if len(self.chain)==0:\n            prev=\"0\"\n        else:\n            prev=self.chain[-1].hashcode\n        \n        myHash hashlib.sha256(str(data).encode('utf-8')).hexdigest()\n        block=Block(no, nonce, data, myHash, prev)\n\n        self.chain.append(block)\n\n    def print<blockchain>(self):\n        chainDict={}\n        for no in range(len(self.chain)):\n            chainDict[no]=self.chain[no].getStringVal()\n        print(chainDict)\n\n    def mineChain(self):\n        brokenLink=self.checkIfBroken\n\n        if (brokenLink==None):\n            pass\n        else:\n            for block in self.chain[brokenLink.no:]:\n                print(\"Mining Block:\" block.getStringVal())\n                self.mineBlock(block)\n\n    def mineBlock(self, block):\n        nonce=0\n        myHash=hashlib.sha256(str(nonce)+str(block.data)).encode('utf-8').hexdigest()\n        while myHash[0:4]!=self.prefix:\n            myHash=hashlib.sha256(str(nonce)+str(block.data)).encode('utf-8').hexdigest()\n            nonce=nonce+1\n        else:\n            self.chain[block.no].hashcode=myHash\n            self.chain[block.no].nonce=nonce\n            if (block.no<len(self.chain)-1:\n                self.chain[block.no+1].prev=myHash\n\n\n    \n    def checkIfBroken(self):\n        for no in range(len(self.chain)):\n            if (self.chain[no].hashcode[0:4]==self.prefix):\n                pass\n            else self.chain[no]\n\n    def changeData(self, no, data):\n        self.chain[no].data=data\n        self.chain.[no].hashcode=myHash=hashlib.sha256(str(nonce)+str(block.data)).encode('utf-8').hexdigest()`enter code here`","687":"Everybody!\nI'd like to get the BNB price from Binance API in solidity.\nhttps:\/\/api.binance.com\/api\/v3\/klines?symbol=BNBBUSD&interval=1m&limit=1\nI can get candlestick data from the above link.\nIs available same data in solidity?\nPlease help me.","688":"I am new to <blockchain> Development. Right now i am thinking about creating a inter<blockchain> Communication way ,\nwhere to users from two seperate System can access into Cross Ledger system.User from system-1 can access data from  system-2 by getting authorized by the system.\nPlease give me some resources on this , how should i start my approach? if a system like this already exists, information would be very much appreciated.","689":"I have been researching this topic lately and most of the resources are saying that it's impossible to generate a random number on-chain. However, I have come across a post saying that this function can generate a unpredictable number. Is there any way to predict this function?\nfunction rand() public view returns(uint256) {\n    uint256 seed = uint256(keccak256(abi.encodePacked(\n        block.timestamp + block.difficulty +\n        ((uint256(keccak256(abi.encodePacked(block.coinbase)))) \/ (now)) +\n        block.gaslimit + \n        ((uint256(keccak256(abi.encodePacked(msg.sender)))) \/ (now)) +\n        block.number\n    )));\n\n    return (seed - ((seed \/ 1000) * 1000));\n}","690":"The scenario is when deploying a ATestnetConsumer.sol on mathchain via Remix, following the official tutorial to run a node on mathchain, which is a EVM-compatitable public chain. And I finish deploying the Oracle contract and LINKToken contract, and running the node on mathchain successfully, but when trying to deploy a TestnetConsumer contract, it shows that:\nGas estimation errored with the following message (see below). The transaction execution will likely fail. Do you want to force sending?\nInternal JSON-RPC error. { \"code\": -32603, \"message\": \"VM Exception while processing transaction: revert\", \"data\": \"\" }\n\nAnybody know why?\nThe TestnetConsumer contract is list as below:\npragma solidity 0.4.24;\n\nimport \"https:\/\/github.com\/smartcontractkit\/chainlink\/evm-contracts\/src\/v0.4\/ChainlinkClient.sol\";\nimport \"https:\/\/github.com\/smartcontractkit\/chainlink\/evm-contracts\/src\/v0.4\/vendor\/Ownable.sol\";\n\ncontract ATestnetConsumer is ChainlinkClient, Ownable {\n  uint256 constant private ORACLE_PAYMENT = 1 * LINK;\n\n  uint256 public currentPrice;\n  int256 public changeDay;\n  bytes32 public lastMarket;\n\n  event RequestEthereumPriceFulfilled(\n    bytes32 indexed requestId,\n    uint256 indexed price\n  );\n\n  event RequestEthereumChangeFulfilled(\n    bytes32 indexed requestId,\n    int256 indexed change\n  );\n\n  event RequestEthereumLastMarket(\n    bytes32 indexed requestId,\n    bytes32 indexed market\n  );\n\n  constructor() public Ownable() {\n    setPublicChainlinkToken();\n  }\n\n  function requestEthereumPrice(address _oracle, string _jobId)\n    public\n    onlyOwner\n  {\n    Chainlink.Request memory req = buildChainlinkRequest(stringToBytes32(_jobId), this, this.fulfillEthereumPrice.selector);\n    req.add(\"get\", \"https:\/\/min-api.cryptocompare.com\/data\/price?fsym=ETH&tsyms=USD\");\n    req.add(\"path\", \"USD\");\n    req.addInt(\"times\", 100);\n    sendChainlinkRequestTo(_oracle, req, ORACLE_PAYMENT);\n  }\n\n  function requestEthereumChange(address _oracle, string _jobId)\n    public\n    onlyOwner\n  {\n    Chainlink.Request memory req = buildChainlinkRequest(stringToBytes32(_jobId), this, this.fulfillEthereumChange.selector);\n    req.add(\"get\", \"https:\/\/min-api.cryptocompare.com\/data\/pricemultifull?fsyms=ETH&tsyms=USD\");\n    req.add(\"path\", \"RAW.ETH.USD.CHANGEPCTDAY\");\n    req.addInt(\"times\", 1000000000);\n    sendChainlinkRequestTo(_oracle, req, ORACLE_PAYMENT);\n  }\n\n  function requestEthereumLastMarket(address _oracle, string _jobId)\n    public\n    onlyOwner\n  {\n    Chainlink.Request memory req = buildChainlinkRequest(stringToBytes32(_jobId), this, this.fulfillEthereumLastMarket.selector);\n    req.add(\"get\", \"https:\/\/min-api.cryptocompare.com\/data\/pricemultifull?fsyms=ETH&tsyms=USD\");\n    string[] memory path = new string[](4);\n    path[0] = \"RAW\";\n    path[1] = \"ETH\";\n    path[2] = \"USD\";\n    path[3] = \"LASTMARKET\";\n    req.addStringArray(\"path\", path);\n    sendChainlinkRequestTo(_oracle, req, ORACLE_PAYMENT);\n  }\n\n  function fulfillEthereumPrice(bytes32 _requestId, uint256 _price)\n    public\n    recordChainlinkFulfillment(_requestId)\n  {\n    emit RequestEthereumPriceFulfilled(_requestId, _price);\n    currentPrice = _price;\n  }\n\n  function fulfillEthereumChange(bytes32 _requestId, int256 _change)\n    public\n    recordChainlinkFulfillment(_requestId)\n  {\n    emit RequestEthereumChangeFulfilled(_requestId, _change);\n    changeDay = _change;\n  }\n\n  function fulfillEthereumLastMarket(bytes32 _requestId, bytes32 _market)\n    public\n    recordChainlinkFulfillment(_requestId)\n  {\n    emit RequestEthereumLastMarket(_requestId, _market);\n    lastMarket = _market;\n  }\n\n  function getChainlinkToken() public view returns (address) {\n    return chainlinkTokenAddress();\n  }\n\n  function withdrawLink() public onlyOwner {\n    LinkTokenInterface link = LinkTokenInterface(chainlinkTokenAddress());\n    require(link.transfer(msg.sender, link.balanceOf(address(this))), \"Unable to transfer\");\n  }\n\n  function cancelRequest(\n    bytes32 _requestId,\n    uint256 _payment,\n    bytes4 _callbackFunctionId,\n    uint256 _expiration\n  )\n    public\n    onlyOwner\n  {\n    cancelChainlinkRequest(_requestId, _payment, _callbackFunctionId, _expiration);\n  }\n\n  function stringToBytes32(string memory source) private pure returns (bytes32 result) {\n    bytes memory tempEmptyStringTest = bytes(source);\n    if (tempEmptyStringTest.length == 0) {\n      return 0x0;\n    }\n\n    assembly { \/\/ solhint-disable-line no-inline-assembly\n      result := mload(add(source, 32))\n    }\n  }\n}","691":"I'm trying to implement a function in solidity that burns tokens in liquidity. e.g I add 10k tokens to pancakeswap, after some sales I have 15k tokens in liquidity and I want to burn 5K, so I decided to implement a counter to keep trace of the number of sold tokens and burn them with this snippet.\nfunction burnLiquidity() public onlyOwner returns (bool){\n        _burn(_exchangeAddress, _toBurn);\n        _toBurn = 0;\n    }\nfunction _burn(address account, uint amount) private {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n        _totalSupply = _totalSupply .sub(amount);\n        _rOwned[account] = _rOwned[account].sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\nThe burning goes through but after that it becomes impossible to buy new tokens as the pancake returns K error.","692":"I have deployed contract A.\nNow I am creating gateway contract B and I want to send some tokens of contract A to user address X using owner address.\nWorth to mention that contract A owner is the same as contract B.\nI do the following\ncontract A is Ownable { \/\/ this one already deployed by owner\n  constructor() {\n    owner = msg.sender; \/\/ owner address is 0x123\n    approve(msg.sender, totalSupply); \/\/ let's approve all tokens for owner\n  }      \n\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\n    require(value <= allowed[from][msg.sender], \"Not allowed!\");\n    \/\/ let's skip other logic\n  }\n}    \n\ncontract B is Ownable { \/\/ gateway contract will be deployed and executed by same owner\n  A contractA = ETC20(0x111);\n  address payable X = 0x333;\n\n  constructor() {\n    owner = msg.sender; \/\/ owner address is 0x123\n  }\n\n  function giveAwayTokens(uint256 value) {\n    contractA.transferFrom(owner, X, value);\n  }\n}\n\nWhen I execute \"giveAwayTokens\" function from owner address (0x123), I get error \"Not allowed!\".\nSo I am a bit confused right now, because the allowance of owner from owner is max supply.\nOr maybe the msg.sender is contractB itself?\nPlease enlighten me what I am doing wrong here, thank you","693":"I use ganache-cli to build local <blockchain> and truffle to deploy contract. To interact with deployed contracts i use truffle console. For example i transfer tokens from my current account(that is <web3>.eth.personal.getAccounts()[0]) to <web3>.eth.personal.getAccounts()[1] after this i want to change my current account to <web3>.eth.personal.getAccounts()[1] address.\nHow to do that?","694":"I am following the documentation give by <blockchain>. Successfully subscribe to the channel.\nBut how do I get the data? I want to retrieve historical data, and be able to receive real time data.\nThis is my <python> code:\n#!\/usr\/bin\/<python>\n# Simple <python> websocket client\n# https:\/\/github.com\/websocket-client\/websocket-client\nfrom websocket import create_connection\noptions = {}\noptions['origin'] = 'https:\/\/exchange.<blockchain>.com'\nurl = \"wss:\/\/ws.prod.<blockchain>.info\/mercury-gateway\/v1\/ws\"\nws = create_connection(url, **options)\n#msg = '{\"token\": \"sdwerdsf-bgft-345d-hfds-asdfghjkl\", \"action\": \"subscribe\", \"channel\": \"prices\"}'\n\n\nmsg = \"\"\"{\"token\": \"sdwerdsf-bgft-345d-hfds-asdfghjkl\",\n        \"action\": \"subscribe\",\n        \"channel\": \"prices\",\n        \"symbol\": \"BTC-USD\",\n        \"granularity\": 60\n        }\"\"\"\n\nws.send(msg)\nresult =  ws.recv()\nprint(result)\n# { \"seqnum\":0,\n#   \"event\":\"subscribed\",\n#   \"channel\":\"auth\",\n#   \"readOnly\":false }\nws.close()\n\nResponse:\n# .\/<blockchain>-apitest.py\n{\"seqnum\":0,\"event\":\"subscribed\",\"channel\":\"prices\",\"symbol\":\"BTC-USD\",\"granularity\":60}","695":"mv: cannot move '.\/starport' to '\/usr\/local\/bin\/starport': Permission denied","696":"Picture of the dataframe1\nHi! I've been trying to figure out how I could calculate wallet balances of erc-20 tokens, but can't get this to work.The idea is simple, when the \"Status\" columns row value is \"Sending\", the value would be negative, and when it is \"receiving\", it would be positive. Lastly I would use groupby and calculate sums by token symbols. The problem is, I can't get the conditional statement to work. What would be a way to do this? I've tried making loop iterations but they don't seem to work.","697":"I installed aeproject by doing:\n\n$ npm install -g aeproject\n\nInitiallized my project with\n\n$ aeproject init\n\nAnd when I want to test it with\n\n$ aeproject test\n\nI get the following error:\n\n(node:68448) UnhandledPromiseRejectionWarning:\n\/Users\/meli\/MyStuff\/MyAE\/ae_tutorial1\/node_modules\/aeproject-lib\/dist\/aeproject-deployer.js:1\nError: Cannot find module 'aeproject-utils' Require stack:\n\n\/Users\/meli\/MyStuff\/MyAE\/ae_tutorial1\/node_modules\/aeproject-lib\/dist\/aeproject-deployer.js\n\/Users\/meli\/MyStuff\/MyAE\/ae_tutorial1\/node_modules\/aeproject-lib\/dist\/index.js\n\/Users\/meli\/MyStuff\/MyAE\/ae_tutorial1\/test\/exampleTest.js\n\/usr\/local\/lib\/node_modules\/aeproject\/node_modules\/mocha\/lib\/mocha.js\n\/usr\/local\/lib\/node_modules\/aeproject\/node_modules\/mocha\/index.js\n\/usr\/local\/lib\/node_modules\/aeproject\/aeproject-test\/aeproject-test.js\n\/usr\/local\/lib\/node_modules\/aeproject\/aeproject-test\/test.js\n\/usr\/local\/lib\/node_modules\/aeproject\/commands.js\n\/usr\/local\/lib\/node_modules\/aeproject\/aeproject-cli.js\nat Object. (\/Users\/meli\/MyStuff\/MyAE\/ae_tutorial1\/node_modules\/aeproject-lib\/dist\/aeproject-deployer.js:21:43)\nat Object.Module._extensions..js (internal\/modules\/cjs\/loader.js:1092:10) (Use node --trace-warnings ... to show where the warning was created) (node:68448)\nUnhandledPromiseRejectionWarning: Unhandled promise rejection. This\nerror originated either by throwing inside of an async function\nwithout a catch block, or by rejecting a promise which was not handled\nwith .catch(). To terminate the node process on unhandled promise\nrejection, use the CLI flag --unhandled-rejections=strict (see\nhttps:\/\/nodejs.org\/api\/cli.html#cli_unhandled_rejections_mode).\n(rejection id: 2) (node:68448) [DEP0018] DeprecationWarning: Unhandled\npromise rejections are deprecated. In the future, promise rejections\nthat are not handled will terminate the <node.js> process with a\nnon-zero exit code.","698":"I've been searching for the way to derive cardano addresses from public keys since Daedalus added the ability to export my public key. I haven't found any resources saying how to do it programmatically. Can someone explain the steps needed to do so?\nI'm aware of the derivation path but what would be the steps before and after that?","699":"I am following the tutorial on GitHub for making an e-vote platform using IBM <blockchain> (<hyperledger> fabric, I followed the steps here for Cloud Deployment : https:\/\/github.com\/IBM\/evote\nOnly change being I used <hyperledger> fabric v2.2, and <node.js> v 15.4.0\nIn Step 6 \" Run the Application\" , when I try to run the node enrollAdmin.js command I receive an error.\nThe error I receive in terminal when I run it is as follows:\n2021-04-22T08:57:53.453Z - error: [FabricCAClientService.js]: Failed to enroll app-admin, error:%o message=Calling enroll endpoint failed, CONNECTION Timeout, stack=Error: Calling enroll endpoint failed, CONNECTION Timeout\n    at TLSSocket.<anonymous> (\/home\/h-ghazali\/node_modules\/fabric-ca-client\/lib\/FabricCAClient.js:315:13)\n    at TLSSocket.emit (node:events:381:22)\n    at TLSSocket.Socket._onTimeout (node:net:481:8)\n    at listOnTimeout (node:internal\/timers:557:17)\n    at processTimers (node:internal\/timers:500:7)\nFailed to enroll admin user ' + app-admin + : Error: Calling enroll endpoint failed, CONNECTION Timeout\n\n\n\nThe enrollAdmin.js file is as follows\n\/*\n * SPDX-License-Identifier: Apache-2.0\n *\/\n\n'use strict';\n\nconst FabricCAServices = require('fabric-ca-client');\nconst { FileSystemWallet, X509WalletMixin } = require('fabric-network');\nconst fs = require('fs');\nconst path = require('path');\n\n\/\/ capture network variables from config.json\nconst configPath = path.join(process.cwd(), '.\/config.json');\nconst configJSON = fs.readFileSync(configPath, 'utf8');\nconst config = JSON.parse(configJSON);\n\n\/\/ let connection_file = config.connection_file;\nlet appAdmin = config.appAdmin;\nlet appAdminSecret = config.appAdminSecret;\nlet orgMSPID = config.orgMSPID;\nlet caName = config.caName;\n\n\/\/ const ccpPath = path.join(process.cwd(), '.\/www\/<blockchain>\/ibpConnection.json');\n\/\/ const ccpPath = path.join(process.cwd(), '.\/ibpConnection.json');\n\/\/ const ccpJSON = fs.readFileSync(ccpPath, 'utf8');\n\/\/ const ccp = JSON.parse(ccpJSON);\n\nasync function main() {\n  try {\n\n    \/\/ Create a new CA client for interacting with the CA.\n    const caURL = caName;\n    const ca = new FabricCAServices(caURL);\n\n    \/\/ Create a new file system based wallet for managing identities.\n    const walletPath = path.join(process.cwd(), 'wallet');\n    const wallet = new FileSystemWallet(walletPath);\n    console.log(`Wallet path: ${walletPath}`);\n\n    \/\/ Check to see if we've already enrolled the admin user.\n    const adminExists = await wallet.exists(appAdmin);\n    if (adminExists) {\n      console.log('An identity for the admin user \"admin\" already exists in the wallet');\n      return;\n    }\n\n    \/\/ Enroll the admin user, and import the new identity into the wallet.\n    const enrollment = await ca.enroll({ enrollmentID: appAdmin, enrollmentSecret: appAdminSecret });\n    const identity = X509WalletMixin.createIdentity(orgMSPID, enrollment.certificate, enrollment.key.toBytes());\n    wallet.import(appAdmin, identity);\n    console.log('msg: Successfully enrolled admin user ' + appAdmin + ' and imported it into the wallet');\n\n  } catch (error) {\n    console.error(`Failed to enroll admin user ' + ${appAdmin} + : ${error}`);\n    process.exit(1);\n  }\n}\n\nmain();","700":"I can't find some website say Quorum maker support IBFT consensus . Maybe someone can recommend DashBoard for IBFT consensus  Thanks!","701":"Closed. This question needs details or clarity. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                    Want to improve this question? Add details and clarify the problem by editing this post.\n                \n                    \n                        Closed 1 year ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nI build four quorum node , i want to detect which node sync too low or out of sync.\nI think it can be compared using the block number. Can someone help me ?","702":"what is the most efficient way to split transfer amount of tokens to all holders so contract would not cost too much gas?\n\nHow to store\/update addresses array efficiently?\nHow to iterate holders addresses?\n\nOthers parts how to do actual transfer is clear for me, but I do not know how to get holders list and how to efficiently iterate so it would not cost too much gas.","703":"We want to scrape content from pages like this one:\nhttps:\/\/dxsale.app\/app\/pages\/defipresale?saleID=1000&chain=BSC\nIt has content from Binance Smart Chain (BSC) projects and in order to see it, the site is requesting a Metamask connection with the BSC MainNet.\nIf you access the Metamask connection without it(the BSC MainNet), you get \"No connected <web3> wallet detected!\"\n\nA quick parenthesis on Metamask and how to set it up for BSC Mainnet:\nhttps:\/\/metamask.io\/download.html (Available in Chrome, Firefox, Brave and Edge.)\nhttps:\/\/academy.binance.com\/en\/articles\/connecting-metamask-to-binance-smart-chain\n\nBTW I don't know if this is possible, but when the site is loading it says that is getting data from the <blockchain>. The platform is being used to launch decentralized projects. If the project's data is stored on the <blockchain> it probably should be openly available for everyone.\nHere is the platform ETH address:\nhttps:\/\/etherscan.io\/address\/0xf063fe1ab7a291c5d06a86e14730b00bf24cb589#code\nBelow the main contract is a section of the Contract ABI, probably related to the project's creation.\nSo how can we get the data? There are almost 1500 pages\/projects right now.","704":"using truffle@5.3.2, ganache@2.5.4, node@10.19.0, npm@7.10.0\nfor <blockchain> developers\n$ sudo truffle migrate --reset \n\nworks fine...consume gas from fake account in ganache.\n $ sudo truffle test\n\n     Using network 'development'.\n\nError: Cannot find module 'fs-extra'\n    at Function.Module._resolveFilename (internal\/modules\/cjs\/loader.js:636:15)\n    at Function.Module._load (internal\/modules\/cjs\/loader.js:562:25)\n    at Module.require (internal\/modules\/cjs\/loader.js:692:17)\n    at require (internal\/modules\/cjs\/helpers.js:25:18)\n    at Object.call (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/external \"fs-extra\":1:18)\n    at r (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:19:22)\n    at Object.call (\/home\/amal\/work\/truffle\/packages\/compile-common\/dist\/src\/profiler\/updated.js:33:26)\n    at r (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:19:22)\n    at Object.call (\/home\/amal\/work\/truffle\/packages\/compile-common\/dist\/src\/profiler\/profiler.js:20:19)\n    at r (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:19:22)\n    at Object.call (\/home\/amal\/work\/truffle\/packages\/compile-common\/dist\/src\/profiler\/index.js:3:18)\n    at r (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:19:22)\n    at Object.call (\/home\/amal\/work\/truffle\/packages\/compile-common\/dist\/src\/index.js:25:18)\n    at r (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:19:22)\n    at Object.call (\/home\/amal\/work\/truffle\/packages\/debugger\/lib\/session\/index.js:31:1)\n    at r (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:19:22)\n    at Object.call (\/home\/amal\/work\/truffle\/packages\/debugger\/lib\/debugger.js:4:1)\n    at r (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:19:22)\n    at Object.call (\/home\/amal\/work\/truffle\/packages\/debugger\/debugger.js:1:16)\n    at __webpack_require__ (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:19:22)\n    at \/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/bootstrap:83:10\n    at factory (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/debugger.js:1:1152)\n    at \/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/universalModuleDefinition:3:20\n    at Object.<anonymous> (\/usr\/local\/lib\/node_modules\/truffle\/node_modules\/@truffle\/debugger\/dist\/webpack\/universalModuleDefinition:1:1)\n    at Module._compile (internal\/modules\/cjs\/loader.js:778:30)\n    at Object.Module._extensions..js (internal\/modules\/cjs\/loader.js:789:10)\n    at Module.load (internal\/modules\/cjs\/loader.js:653:32)\n    at tryModuleLoad (internal\/modules\/cjs\/loader.js:593:12)\nTruffle v5.3.2 (core: 5.3.2)\nNode v10.19.0\n\nMeasure Taken\n1.\n    $ sudo npm ls fs-extra\n pet-shop@1.0.0 \/home\/phenomenal\/<blockchain>    \n\n    +-- fs-extra@3.0.1\n    \n          -- lite-server@2.6.1\n    \n          -- browser-sync@2.26.14\n    \n        `-- fs-extra@3.0.1 deduped\n\n\n*npm install -g npm-reinstall*\n*npm install -g npm@latest*\n\nBut nothing works!!!\nHere's the test file election.js\nvar Election = artifacts.require('.\/Election.sol');\n\ncontract(\"Election\",function(accounts){\n\n    it(\"Initializes with two candidates\",function(){            \/\/Mocha framework\n        return Election.deployed().then(function(instance){\n            return instance.candidatesCount();\n        }).then(function(count){\n            asserts equal(count,2); \/\/Chai Library Function\n        });\n    });\n\n});\n\nElection.sol file\ncontract Election {\n    \n    \/\/Model of Candidate\n    struct Candidate{\n        uint id;\n        string name;\n        uint voteCount;\n    }\n\n    \/\/Store Candidate\n    \/\/Fetch Candidate\n    mapping(uint => Candidate) public listOfCandidates;\n\n    \/\/Store Candidate Count\n    uint public candidatesCount;\n\n\n    \/\/construtor\n    constructor() public {\n        addCandidate(\"Candidate 1\");\n        addCandidate(\"Candidate 2\");\n    }\n    \n    function addCandidate(string memory _name) private{\n        candidatesCount++;\n        listOfCandidates[candidatesCount] = Candidate(candidatesCount,_name,0);\n    }   \n}\n\nPackage.json file\n {\n  \"name\": \"pet-shop\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"truffle.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"dev\": \"lite-server\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"lite-server\": \"^2.3.0\"\n  },\n  \"dependencies\": {\n    \"fs-extra\": \"^3.0.1\"\n  }\n}\n\nPlease help If require I would send you the complete project or required files.","705":"When the electoral process is over, how can the voter verify that the candidate\u00e2\u0080\u0099s choice has not changed?\nI want to add a function in the contractual contract, but I don't know how to construct this function\nI want an example when the voter puts his address, the system returns the name of the candidate who has been chosen since the election process.\ni need a function in smart contract  to do this please\npragma solidity ^0.6.0;\ncontract Voting {\n    \/\/ Model a Candidate\n     struct Candidate {\n        uint256 id;\n        string name;\n        uint256 voteCount;\n    }\n    mapping(address => bool) public voters;\n    mapping(uint256 => Candidate) public candidates;\n    \/\/ Store Candidates count\n    uint256 public candidatesCount;\n    \/\/ voted event\n    event votedEvent(uint256 indexed _candidateId);\n\n    constructor() public {\n        addCandidate(\"Candidate #1\");\n        addCandidate(\"Candidate #2\");\n        addCandidate(\"Candidate #3\");\n    }\n\n    function addCandidate(string memory _name) private {\n        candidatesCount++;\n        candidates[candidatesCount] = Candidate(candidatesCount, _name, 0);\n    }\n\n    function vote(uint256 _candidateId) public {\n        \/\/ require that they haven't voted before\n        require(!voters[msg.sender]);\n\n        \/\/ require a valid candidate\n        require(_candidateId > 0 && _candidateId <= candidatesCount);\n\n        \/\/ record that voter has voted\n        voters[msg.sender] = true;\n\n        \/\/ update candidate vote Count\n        candidates[_candidateId].voteCount++;\n\n        \/\/ trigger voted event\n        emit votedEvent(_candidateId);\n    }\n    function getCondidateName(address adr)  pure  public returns( string memory ){\n        \/\/ here i need to create thecode of the verify }}","706":"I can't mint token using ERC20PresetMinterPauserUpgradeable.\ni don't understand what's going on here, I'm trying to deploy a sort of simple ICO where I have a token contract, ERC20PresetMinterPauserUpgradeable Paddy. I try to deploy it from a second contract which will be granted the role MINTER, IcoSeller.\nthe error I get from remix is:\n\ncall to IcoSeller.getTokenNameFromPaddy errored: Error: Internal\nJSON-RPC error. { \"message\": \"VM Exception while processing\ntransaction: revert\", \"code\": -32000, \"data\": {\n\"0x04c0f0d7e658c964b706f47d7263bb9e291fd02ada2a683259efc397bde4aac3\":\n{ \"error\": \"revert\", \"program_counter\": 511, \"return\": \"0x\" },\n\"stack\": \"c: VM Exception while processing transaction: revert\\n at\nFunction.c.fromResults\n(\/Users\/fabri\/.nvm\/versions\/node\/v10.24.0\/lib\/node_modules\/ganache-cli\/build\/ganache-core.node.cli.js:4:192416)\\n\nat readyCall\n(\/Users\/fabri\/.nvm\/versions\/node\/v10.24.0\/lib\/node_modules\/ganache-cli\/build\/ganache-core.node.cli.js:42:50402)\",\n\"name\": \"c\" } }\n\nI think I'm missing something here but I can't really understand what.\nI am able to compile and deploy everything.\nPADDY:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin\/contracts-upgradeable\/proxy\/utils\/Initializable.sol\";\nimport \"@openzeppelin\/contracts-upgradeable\/token\/ERC20\/presets\/ERC20PresetMinterPauserUpgradeable.sol\";\n\n\/**\n* @title PadelCoin\n* @dev it is the coin itself. here I specify the name and the simbol\n* \n *\/\ncontract Paddy is Initializable, ERC20PresetMinterPauserUpgradeable {\n    \n    function initializePaddy(string memory _name, string memory _symbol) public initializer{\n        \/\/create token and gives admin, minter, pauser to who deploys the contract\n        ERC20PresetMinterPauserUpgradeable.initialize(_name, _symbol); \n    }\n}\n\nI can't even get the tokenName from IcoSeller contract.\nIcoSeller:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin\/contracts-upgradeable\/proxy\/utils\/Initializable.sol\";\nimport \"@openzeppelin\/contracts-upgradeable\/token\/ERC20\/presets\/ERC20PresetMinterPauserUpgradeable.sol\";\n\nimport \".\/Paddy.sol\";\n\n\/**\n* @dev \/\/initializes paddy and gives this contract minter, pauser and admin role\n**\/\ncontract IcoSeller is Initializable {\n    ERC20PresetMinterPauserUpgradeable paddy;\n\n    function initializeIcoDeployer() public initializer{ \n        paddy.initialize(\"PaddyCoin\", \"PADDY\"); \n    }\n\n    \/**\n    * @dev emits Transfer\n    **\/\n    function sellToPublic(address _to, uint _amount) public{\n        paddy.mint(_to, _amount);\n    }\n\n   \n    function getTokenNameFromPaddy() public view\n     returns(string memory name){\n        return paddy.name();\n    }\n}\n\nhere is the migration script:\nconst  { deployProxy,upgradeProxy } = require('@openzeppelin\/truffle-upgrades');\n\nconst IcoSeller = artifacts.require('IcoSeller');\n\nmodule.exports = async function (deployer) {\n  const ico = await deployProxy(IcoSeller, { deployer });\n  const icoUpgraded = await upgradeProxy(ico.address, IcoSeller, { deployer });\n  \n\n  console.log('Ico Deployed at address: ', ico.address);\n  console.log('Ico Upgraded at address: ', icoUpgraded.address);\n};","707":"I'm very new to <blockchain> technology. As a part of project, I am trying to develop a <blockchain> application for e-voting. In many projects which I've seen on github the solidity it was as shown below\npragma solidity ^0.4.11;\n\/\/ We have to specify what version of compiler this code will compile with\n\ncontract Voting {\n  \/* mapping field below is equivalent to an associative array or hash.\n  The key of the mapping is candidate name stored as type bytes32 and value is\n  an unsigned integer to store the vote count\n  *\/\n  \n  mapping (bytes32 => uint8) public votesReceived;\n  \n  \/* Solidity doesn't let you pass in an array of strings in the constructor (yet).\n  We will use an array of bytes32 instead to store the list of candidates\n  *\/\n  \n  bytes32[] public candidateList;\n\n\n\n  \/* This is the constructor which will be called once when you\n  deploy the contract to the <blockchain>. When we deploy the contract,\n  we will pass an array of candidates who will be contesting in the election\n  *\/\n  function Voting(bytes32[] candidateNames) {\n    candidateList = candidateNames;\n  }\n\n  \/\/ This function returns the total votes a candidate has received so far\n  function totalVotesFor(bytes32 candidate) returns (uint8) {\n    if (validCandidate(candidate) == false) throw;\n    return votesReceived[candidate];\n  }\n\n  \/\/ This function increments the vote count for the specified candidate. This\n  \/\/ is equivalent to casting a vote\n  function voteForCandidate(bytes32 candidate) {\n    if (validCandidate(candidate) == false) throw;\n    votesReceived[candidate] += 1;\n  }\n\n  function validCandidate(bytes32 candidate) returns (bool) {\n    for(uint i = 0; i < candidateList.length; i++) {\n      if (candidateList[i] == candidate) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nSo what data from this is created as a block in the <blockchain>? And how exactly does this code create <transactions> in the <blockchain>?","708":"[I opened terminal, I ran touch ~\/.zshrc, then I downloaded nvm curl -o- https:\/\/raw.githubusercontent.com\/nvm-sh\/nvm\/v0.37.2\/install.sh | bash\nOnce that was done, I chose nvm install 15.4.0 because it's the latest version. Woo whoo, it downloads. Everything is working great... I can even install truffle... I run that command. I type in truffle --version.. will you look at that.. it works... Okay, lets try running all of these same commands in a new Terminal. No. none of them work. Nothing works. I reinstall, over and over again. Still wont work. I touch the zshrc file and try doing it with bash instead, but why would I download truffle and nvm twice? why won't it run normally if I downloaded it without any issues. WHat's the problem here?\n]1","709":"I'm developing my first smart contract and I'm little concerned about security.\nI took ERC20.sol contract as a template and there is a function\nfunction approve(address spender, uint256 amount) public returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n}\n\nAfter I deploy the contract, who is default owner of the contract? Can anyone else use this contract and this public function to approve spender amounts w\/o any restrictions? Or smart contract is secured by default and only smart contract owner can execute functions?\nI know I can use Ownable.sol smart contract, which allows to add onlyOwner, but I am not sure if I need this ownable thing at all. Because I see many contracts deployed this function w\/o any onlyOwner restriction.\nSo, who can execute smart contract public\/external functions?\nlet contract = <web3>.eth.contract(minABI).at(tokenAddress);\ncontract.approve(address(hacker_address), 10000000);\n\nCan random user approve amount for himself or someone else?","710":"hello everybody I have an online vote application this application building on smart contracts, ganache, and <web3>.js . in this application each elector has an address from the ganache.\nI want when the elector goes to vote he will give his privatekey and metamask take this private key automatically without going to click on metamask and import the address I need this automatically.","711":"I want to invoke another chaincode in the same channel, but I don't know how to use the InvokeChainCode API. I tried to test it, but got some err.\nINVOKE_CHAINCODE failed: transaction ID:: cannot retrieve package for chaincode dealercc\/1.0, error open \/var\/<hyperledger>\/production\/chaincodes\/dealercc.1.0: no such file or directory\"\n\nAnd, I search online but find nothing, but I find this from https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-1.4\/developapps\/chaincodenamespace.html#considerations\n\nFor chaincode to chaincode interactions using the invokeChaincode() API, both chaincodes must be installed on the same peer.\n\nHowever, I am not sure what it means. Does he want me to install all the chaincodes on the peer which use ICC API? if he does, what should i do? I tried but got err, saying something had already installed.","712":"Hello guys I am working on submitting an extrinsic via the py-substrate-interface, but for some reason I keep getting an error while following the sample mentioned here.\nMy code is as follows:\n    def send_funds(self, destination, amount):\n        self.log.info(\"Sending {} DOT to {} ...\".format(amount, destination.strip()))\n        substrate = self.create_substrate_instance(self.node_ws_port[0])\n\n        keypair = Keypair.create_from_mnemonic('level payment mom grape proof display cause engage erupt rain hair arm')\n        print(keypair)\n\n        call = substrate.compose_call(\n            call_module='Balances',\n            call_function='transfer',\n            call_params={\n                'dest': destination,\n                'value': ceil(amount * DOT)\n            }\n        )\n\n        try:\n            extrinsic = substrate.create_signed_extrinsic(call=call, keypair=keypair)\n        except Exception as e:\n            print(e)\n\n        try:\n            receipt = substrate.submit_extrinsic(extrinsic, wait_for_inclusion=True)\n            self.log.info(\"Extrinsic '{}' sent and included in block '{}'\".format(receipt.extrinsic_hash, receipt.block_hash))\n            self.log.info(\"{} DOT sent to address: {}\".format(amount, destination))\n        except SubstrateRequestException as e:\n            self.log.error(\"Failed to send: {}\".format(e))\n\nI put a try and except block here:\n        try:\n            extrinsic = substrate.create_signed_extrinsic(call=call, keypair=keypair)\n        except Exception as e:\n            print(e)\n\nand I get the following error while running this code block:\nNo more bytes available (offset: 80 \/ length: 72)\n\nHow can I resolve this problem.","713":"here is a question I already ask on stackexchange - ethereum (https:\/\/ethereum.stackexchange.com\/questions\/97124\/truffle-test-doesnt-send-funds-to-msg-sender), but it doesn't look like there is many activity so I hope I can find here some help.\n\nIt seems like I have a wrong gnache or truffle setup ...\nI already ask a simular question here: https:\/\/ethereum.stackexchange.com\/questions\/96681\/owner-of-contract-is-set-to-contract-address\nBasicly there is some mess up with addresses on my local chain (it works on testnet).\nThe setup\/migration is the same like in the link.\nThe actual functions:\n    function claim(uint256 pid, uint256 cAmount, address test) external nonReentrant returns (bool){\n        return _claim(pid, cAmount, test);\n    }\n\n    function _claim(uint256 pid, uint256 cAmount, address test) internal returns (bool){\n        require(test == msg.sender, \"ERROR\");\n        bool success;\n        uint256 possibleClaim = _getClaimableAmount(pid, test);\n        require(possibleClaim >= cAmount, \"Claim: Not enough claimable amount\");\n        _reflow(pid);\n        uint256 tempDaoFee = cAmount.mul(_poolInfo[pid].claimFee);\n        uint256 daoFee = tempDaoFee.div(100);\n        success = IERC20(_poolInfo[pid].poolT.rewardToken).transfer(test, cAmount.sub(daoFee));\n        _poolInfo[pid].poolT.rewardToken.transfer(_poolInfo[pid].daoWallet, daoFee);\n        return success;\n    }\n\n\nthe test:\nit(\"7.1 Claim: ...\", async ()=> {\n        const adr = await irs.getRewardToken(\"0\");\n\n        console.log(\"Address: \",adr)\n        console.log(\"TokenAddress: \", iwbtc.address)\n        console.log(\"ContractAddress: \", irs.address)\n\n        const balanceOFContract0 = await iwbtc.balanceOf(irs.address);\n        const bal0 = await iwbtc.balanceOf(accounts[6])\n\n        console.log(\"balanceOFContract = \", balanceOFContract0.toString())\n        console.log(\"balanceBeforClaim = \", bal0.toString())\n\n        const claimable = await irs.getClaimableAmount(\"0\",accounts[6]);\n        const val = claimable \/ 2;\n\n        console.log(\"Val = \", val.toString())\n\n        const success = await irs.claim(\"0\",val,accounts[6], {from: accounts[6]});\n\n        const bal1 = await iwbtc.balanceOf(accounts[6])\n        const balanceOFContract1 = await iwbtc.balanceOf(irs.address);\n\n        console.log(\"balanceOFContract = \", balanceOFContract1.toString())\n        console.log(\"balanceBeforClaim = \", bal1.toString())\n        console.log(\"Transaction:\", success)\n\n    });\n\nthe output:\nAddress:  0xFFCb10BeEE65E616cc231e1760C1FdBcb70ce821\nTokenAddress:  0xFFCb10BeEE65E616cc231e1760C1FdBcb70ce821\nContractAddress:  0xdCA8a4625c00f739Adc6F245DaC8E1d5cB5fd06A\nbalanceOFContract =  154000\nbalanceBeforClaim =  70000\nVal =  70000\nbalanceOFContract =  84000\nbalanceAfterClaim =  70000\nTransaction: {\n  tx: '0xe455ce4e24fe1aaeaa0d82dec41ffe5fedb647832dcc5421babd25aae44f901e',\n  receipt: {\n    transactionHash: '0xe455ce4e24fe1aaeaa0d82dec41ffe5fedb647832dcc5421babd25aae44f901e',\n    transactionIndex: 0,\n    blockHash: '0x8538f51b7266acc730e3e5bd344e5bbe2c67f335f8c427c40454751dee42e73a',\n    blockNumber: 538,\n    from: '0xb8917e63f9d6603366ff30871610f9af48804557',\n    to: '0xdca8a4625c00f739adc6f245dac8e1d5cb5fd06a',\n    gasUsed: 218583,\n    cumulativeGasUsed: 218583,\n    contractAddress: null,\n    logs: [],\n    status: true,\n    logsBloom: '0xn    rawLogs: [ [Object], [Object] ]\n  },\n  logs: []\n}\n    \u00e2\u0088\u009a 7.1 Claim: ... (3795ms)\n\nSo ...\n\nThe transaction happen but the sender dont recieve the funds but the contract sended it.\nThe msg.sender is the givin parameter... (require in the _claim) dont get the fund and is not in the transaction\n\nTryed around with IERC20() and without ... no difference (would make me wonder anyway).\nAnyone any idea what is happening here?","714":"I wish to download every transaction that happened on <blockchain> since the genesis. In particular, I want to download data for BSC.\n\nHow do I download <blockchain> data?, e.g. Is there an API or a protocol I can use?\nOnce I've dowloaded the data to date... How do I subscribe to new <transactions>?","715":"I have set up my fabric network with 3 orderers in one organization and a consortium with 5 organizaitons successfully. Each organization has only one peer node and join in the same channel. And I have installed and instantiated two chaincodes in this channel. However, when I invoke chaincode by *channel.Client, sometimes it work correctly, and sometimes I get such an error:\nFailed to get endorsing peers: Discovery status Code: (11) UNKNOWN. Description: error getting endorsers: no endorsement combination can be satisfied\n\nthis's my dev environment:\n# os\nDarwin PANZVORHONG-MB0 20.3.0 Darwin Kernel Version 20.3.0: Thu Jan 21 00:07:06 PST 2021; root:xnu-7195.81.3~1\/RELEASE_X86_64 x86_64\n# golang\ngo version go1.15.6 darwin\/amd64\n# docker\nEngine Version: 20.10.5\n\nThe following is same the configuration of Fabric which I think may be useful:\nconfigtx.yaml\nOrganizations:\n  - &OrdererOrg\n    Name: OrdererMSP\n    ID: OrdererMSP\n    MSPDir: ..\/fabric\/organizations\/ordererOrganizations\/food.com\/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('OrdererMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('OrdererMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('OrdererMSP.admin')\"\n    OrdererEndpoints:\n      - orderer1.food.com:7050\n      - orderer2.food.com:7049\n      - orderer3.food.com:7048\n\n  - &Producer\n    Name: ProducerMSP\n    ID: ProducerMSP\n    MSPDir: ..\/fabric\/organizations\/peerOrganizations\/producer.food.com\/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('ProducerMSP.admin', 'ProducerMSP.peer', 'ProducerMSP.client')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('ProducerMSP.admin', 'ProducerMSP.client')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('ProducerMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('ProducerMSP.peer')\"\n    AnchorPeers:\n      - Host: peer0.producer.food.com\n        Port: 7051\n\n  - &Processor\n    Name: ProcessorMSP\n    ID: ProcessorMSP\n    MSPDir: ..\/fabric\/organizations\/peerOrganizations\/processor.food.com\/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('ProcessorMSP.admin', 'ProcessorMSP.peer', 'ProcessorMSP.client')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('ProcessorMSP.admin', 'ProcessorMSP.client')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('ProcessorMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('ProcessorMSP.peer')\"\n\n    AnchorPeers:\n      - Host: peer0.processor.food.com\n        Port: 7051\n\n...Similar configuration of other nodes\n\n\ndocker-compose.yaml\npeer0.producer.food.com:\n    container_name: peer0.producer.food.com\n    image: <hyperledger>\/fabric-peer:latest\n    environment:\n      - CORE_VM_ENDPOINT=unix:\/\/\/host\/var\/run\/docker.sock\n      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=food\n      - FABRIC_LOGGING_SPEC=DEBUG\n      - CORE_PEER_NETWORKID=food\n      - CORE_PEER_TLS_ENABLED=true\n      - CORE_PEER_PROFILE_ENABLED=true\n      - CORE_PEER_TLS_CERT_FILE=\/etc\/<hyperledger>\/fabric\/tls\/server.crt\n      - CORE_PEER_TLS_KEY_FILE=\/etc\/<hyperledger>\/fabric\/tls\/server.key\n      - CORE_PEER_TLS_ROOTCERT_FILE=\/etc\/<hyperledger>\/fabric\/tls\/ca.crt\n      # Peer specific variabes\n      - CORE_PEER_ID=peer0.producer.food.com\n      - CORE_PEER_ADDRESS=peer0.producer.food.com:7051\n      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051\n      - CORE_PEER_CHAINCODEADDRESS=peer0.producer.food.com:7052\n      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052\n      - CORE_PEER_ADDRESSAUTODETECT=true\n      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.producer.food.com:7051\n      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.producer.food.com:7051\n      - CORE_PEER_LOCALMSPID=ProducerMSP\n      - GODEBUG=netdns=go\n    volumes:\n      - \/var\/run\/docker.sock:\/host\/var\/run\/docker.sock\n      - ..\/fabric\/organizations\/peerOrganizations\/producer.food.com\/peers\/peer0.producer.food.com\/msp:\/etc\/<hyperledger>\/fabric\/msp\n      - ..\/fabric\/organizations\/peerOrganizations\/producer.food.com\/peers\/peer0.producer.food.com\/tls:\/etc\/<hyperledger>\/fabric\/tls\n      - peer0.producer.food.com:\/var\/<hyperledger>\/production\n    working_dir: \/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\n    command: peer node start\n    ports:\n      - 7051:7051\n    networks:\n      - food\n\n  peer0.processor.food.com:\n    container_name: peer0.processor.food.com\n    image: <hyperledger>\/fabric-peer:latest\n    environment:\n      - CORE_VM_ENDPOINT=unix:\/\/\/host\/var\/run\/docker.sock\n      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=food\n      - FABRIC_LOGGING_SPEC=DEBUG\n      - CORE_PEER_NETWORKID=food\n      - CORE_PEER_TLS_ENABLED=true\n      - CORE_PEER_PROFILE_ENABLED=true\n      - CORE_PEER_TLS_CERT_FILE=\/etc\/<hyperledger>\/fabric\/tls\/server.crt\n      - CORE_PEER_TLS_KEY_FILE=\/etc\/<hyperledger>\/fabric\/tls\/server.key\n      - CORE_PEER_TLS_ROOTCERT_FILE=\/etc\/<hyperledger>\/fabric\/tls\/ca.crt\n      # Peer specific variabes\n      - CORE_PEER_ID=peer0.processor.food.com\n      - CORE_PEER_ADDRESS=peer0.processor.food.com:7051\n      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051\n      - CORE_PEER_CHAINCODEADDRESS=peer0.processor.food.com:7052\n      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052\n      - CORE_PEER_ADDRESSAUTODETECT=true\n      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.processor.food.com:7051\n      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.processor.food.com:7051\n      - CORE_PEER_LOCALMSPID=ProcessorMSP\n      - GODEBUG=netdns=go\n    volumes:\n      - \/var\/run\/docker.sock:\/host\/var\/run\/docker.sock\n      - ..\/fabric\/organizations\/peerOrganizations\/processor.food.com\/peers\/peer0.processor.food.com\/msp:\/etc\/<hyperledger>\/fabric\/msp\n      - ..\/fabric\/organizations\/peerOrganizations\/processor.food.com\/peers\/peer0.processor.food.com\/tls:\/etc\/<hyperledger>\/fabric\/tls\n      - peer0.processor.food.com:\/var\/<hyperledger>\/production\n    working_dir: \/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\n    command: peer node start\n    ports:\n      - 9051:7051\n    networks:\n      - food\n\n...Similar configuration of other nodes\n\nconfig.yaml for fabric-sdk-go:\nchannels:\n  food-channel:\n    peers:\n      peer0.producer.food.com:\n        endorsingPeer: true\n        chaincodeQuery: true\n        ledgerQuery: true\n        eventSource: true\n\n      peer0.processor.food.com:\n        endorsingPeer: true\n        chaincodeQuery: true\n        ledgerQuery: true\n        eventSource: true\n......\n\npolicies:\n      queryChannelConfig:\n        minResponses: 1\n        maxTargets: 1\n        retryOpts:\n          attempts: 5\n          initialBackoff: 500ms\n          maxBackoff: 5s\n          backoffFactor: 2.0\n      discovery:\n        maxTargets: 1\n        retryOpts:\n          attempts: 4\n          initialBackoff: 500ms\n          maxBackoff: 5s\n          backoffFactor: 2.0\n      eventService:\n        resolverStrategy: PreferOrg\n        balancer: Random\n        blockHeightLagThreshold: 5\n        reconnectBlockHeightLagThreshold: 10\n        peerMonitorPeriod: 5s\n\n......\n\norganizations:\n  producer:\n    mspid: ProducerMSP\n\n    # This org's MSP store (absolute path or relative to client.cryptoconfig)\n    cryptoPath: peerOrganizations\/producer.food.com\/users\/{username}@producer.food.com\/msp\n\n    peers:\n      - peer0.producer.food.com\n  processor:\n    mspid: ProcessorMSP\n    cryptoPath: peerOrganizations\/processor.food.com\/users\/{username}@processor.food.com\/msp\n    peers:\n      - peer0.processor.food.com\n\n  transporter:\n    mspid: TransporterMSP\n......\n\npeers:\n  peer0.producer.food.com:\n    url: localhost:7051\n    grpcOptions:\n      ssl-target-name-override: peer0.producer.food.com\n      keep-alive-time: 5s\n      keep-alive-timeout: 20s\n      keep-alive-permit: false\n      fail-fast: false\n      allow-insecure: false\n\n    tlsCACerts:\n      path: .\/fixtures\/fabric\/organizations\/peerOrganizations\/producer.food.com\/tlsca\/tlsca.producer.food.com-cert.pem\n\n......\n\nentityMatchers:\n  peer:\n    # the below matcher will allow dynamic discovery to use the anchor peer (peer0.org1.example.com)\n    # as a template for all org1 discovered peers config\n    - pattern: (\\w+).producer.food.com:(\\d+)\n      urlSubstitutionExp: localhost:7051\n      sslTargetOverrideUrlSubstitutionExp: ${1}.producer.food.com\n      mappedHost: peer0.producer.food.com\n\n    - pattern: (\\w+).processor.food.com:(\\d+)\n      urlSubstitutionExp: localhost:9051\n      sslTargetOverrideUrlSubstitutionExp: ${1}.processor.food.com\n      mappedHost: peer0.processor.food.com\n\n    - pattern: (\\w+).transporter.food.com:(\\d+)\n      urlSubstitutionExp: localhost:7061\n      sslTargetOverrideUrlSubstitutionExp: ${1}.transporter.food.com\n      mappedHost: peer0.transporter.food.com\n\n    - pattern: (\\w+).seller.food.com:(\\d+)\n      urlSubstitutionExp: localhost:7071\n      sslTargetOverrideUrlSubstitutionExp: ${1}.seller.food.com\n      mappedHost: peer0.seller.food.com\n\n    - pattern: (\\w+).consumer.food.com:(\\d+)\n      urlSubstitutionExp: localhost:7081\n      sslTargetOverrideUrlSubstitutionExp: ${1}.consumer.food.com\n      mappedHost: peer0.consumer.food.com\n  orderer:\n    - pattern: (\\w+).food.com:(\\d+)\n      urlSubstitutionExp: localhost:7050\n      sslTargetOverrideUrlSubstitutionExp: orderer1.food.com\n      mappedHost: orderer1.food.com\n    - pattern: (\\w+).food.com:(\\d+)\n      urlSubstitutionExp: localhost:7049\n      sslTargetOverrideUrlSubstitutionExp: orderer2.food.com\n      mappedHost: orderer2.food.com\n    - pattern: (\\w+).food.com:(\\d+)\n      urlSubstitutionExp: localhost:7048\n      sslTargetOverrideUrlSubstitutionExp: orderer3.food.com\n      mappedHost: orderer3.food.com\n\nI've been troubled by this problem for a long time. Can someone help me?\n\nI have found the reason for this problem. That's because endorsers got from channel should be contained in the peers list which got by discovery, or it will be filtered.\nAnd there has always been only one endorser peer got from channel or discovery. So, unless the two are equal, the endorsement is not satisfied. As a result, it may take several retries to succeed, or an error will be returned when the channel.policies.discovery.retryOpts.attempts or channel.policies.discovery.retryOpts.maxBackoff is reached.\nNow the question is, why can only one endorser be obtained from the channel or found by discovery? I tried to fix it by modifying some possible configurations in yaml, but they all failed.","716":"For my little project I need help and if it's possible.\nThe project is about signing documents using <blockchain> and IPFS. I try to create a DApp with following features:\n\nSigner has to LogIn\nAfter LogIn has been successful you can upload a document.\nYou can sign uploaded document.\nDocumentHash is generated. DocumentHash should be stored on Ethereum <blockchain>. Signed document is stored on IPFS.\n\nNow I am trying to write my smart contract. The signature should be created as a object. So a signature is made of Name and actual time. This means signature should be created out of the information of the LogIn-process (first Name, last Name, SignerID (is unique, like password).\nIs this possible with a Smart Contract? I don't know what to do so I don't know how to create this Signature within a Smart Contract and put the signature to the document. Then I know what to do with hashing the whole document and push it to IPFS...\nThank you!","717":"When a transaction is submitted to a chaincode, read-write sets are returned along with the signature of the endorsing peer, and then the transaction proposal along with the endorsing singatures are sent to the ordering service. I want to know what happens when a query request is made to the chaincode.\nSay I want to query the world state of an asset. I call the evaluateTransaction method. Is the output of this method signed by the endorsing peers as well ?","718":"Currently i am working an a small dynamic nft example. Compiling, Deploying and to fund the Contract works well.\nIf i try to verify the contract with truffle and the truffle-verfiy-plugin, I got the following error:\nCannot find module '@chainlink\/contracts\/src\/v0.6\/VRFConsumerBase.sol'\nRequire stack:\n- \/usr\/lib\/node_modules\/truffle-plugin-verify\/verify.js\n- \/usr\/lib\/node_modules\/truffle\/node_modules\/original-require\/index.js\n- \/usr\/lib\/node_modules\/truffle\/build\/cli.bundled.js\nFailed to verify 1 contract(s): DynamicNft\n\nThis are the modules, I am importing in my contract:\n\nimport \"@openzeppelin\/contracts\/token\/ERC721\/ERC721.sol\";\nimport \"@chainlink\/contracts\/src\/v0.6\/VRFConsumerBase.sol\";\nimport \"@openzeppelin\/contracts\/access\/Ownable.sol\";\nimport \"@openzeppelin\/contracts\/utils\/Strings.sol\";\n\nMy package.json-dependencies looks like:\n    \"@chainlink\/contracts\": \"0.0.8\",\n    \"@openzeppelin\/contracts\": \"^3.1.0\",\n    \"@truffle\/hdwallet-provider\": \"^1.0.40\",\n    \"dotenv\": \"^8.2.0\"\n  }\n\nAnd at least the command I run for the verification:\ntruffle run verify DynamicNft --network kovan --license MIT\n\nThe contract\nHas anybody an idea?\nThanks for your help!","719":"I'm studing <blockchain> and I'm curently looking at how to DNS Seed Nodes work. I understand that crawler grabs nodes via magic messages but I can't figure out where one value came from Bitcoin source code and what is use of it.\n#define BITCOIN_SEED_NONCE  0x0539a019ca550825ULL\nProgram source: https:\/\/github.com\/team-exor\/generic-seeder\/blob\/f6c33d59b9a56a677364fbcdb9b2e30c51fc4a89\/bitcoin.cpp#L9\nCould you guys help me figure this out and point to correct place in Bitcoin source and let me know what is exacly use of that hex number?","720":"While creating a simple <blockchain> in <python> to understand the behind-the-scenes working myself, I came accross the pyrlp module. Using it is great for RLP serialization of <transactions> and accounts, and then they are stored in tries. However, an account's balance must be mutable, as does the nonce. I find that the rlp.Serializable class does not allow for mutable attributes in fields. Let me present some relevant application code using this class:\nrlp.Serializable objects are created as follows:\nimport rlp\nfrom rlp.sedes import binary, big_endian_int, List\n\nclass Account(rlp.Serializable):\n    fields = (\n        ('nonce', big_endian_int),\n        ('address', binary),\n        ('balance', big_endian_int)\n        )\n\naccount = Account(nonce=0, address='0x927492', balance=0)\n\nI expect to increase the balance by one (eg when receiving a transaction) through account.balance += 1\nHowever, trying to do this returns:\n\nAttributeError: can't set attribute\n\nIs there a way to change this seemingly immutable attribute?","721":"If bloackchain is designed to be decentralized, how a node can know the IP of at least one node of the <blockchain> in order to start communicating.\nFor example, if a bloackchain still does not have any node, and you add the first node of the network, when the second node is added, how does that node know the IP of the first node and vice versa?","722":"Suppose that I have a list of information to be stored in a <blockchain> and I would like certain parts of the information previously updated by the previous owner to be unmodified. The new owner of the token can only modify parts which he or she is allowed to. Which token would be suitable for such application? (Example given below)\nBased on what I have read, non-fungible tokens are suitable for unique data like digital arts and cannot be tampered with.\nI would like to seek clarifications pertaining to the below doubts:\n\nCan the owner of the NFT modify information on the NFT after creating it? Or can the information on an NFT only be written once?\n\nCan subsequent buyers of the same NFT append new information on the NFT?\n\n\nAn example of the situation for which I must choose a suitable token type:\nIdentification of asset: XJJHAKS1972 (unmodified) \nCurrent policy coverage of asset: In-forced (not in-forced) (modifiable by current owner)\nPeriod of coverage: 2021 to 2022 (modifiable by current owner)\nHistory of ownership:\nOwnership 1: Mr XJHGAK(unmodified)\nDates of ownership: 1st January 2019 to 6th June 2019(unmodified)\nOwnership 2: Mrs JHHUA(unmodified)\nDuration of ownership: 7th June 2019 to 6th June 2020(unmodified)\nOwnership 3: Mr Bee\nDuration of ownership: 7th June 2020 (modifiable by current owner)\n\nHistory of residency of asset:\nCountry: Country A (unmodified)\nDate: 1st January 2019 to 6th June 2019 (unmodified)\nCountry: Country B (unmodified)\nDate : 7th June 2019 to 6th June 2020 (unmodified)\nCountry: Country C (modifiable by current owner)\nDate : 7th June 2020 (end date not indicated which indicates that the asset is still in country C to date.) (modifiable by current owner)","723":"let me just clarify my question with an example:\nLet's say you want to transfer 1 eth from an account A to an account B, both on the binance exchange.\nWhen A goes to \"Withdrawal\" on his eth on binance to send his eth to B there is two options :\n\nTransfer on Ethereum <blockchain>\nTransfer on Binance Smart Chain\n\nSo here is my question: How is it possible to send your eth through the BSC, while they are not on it since they are eth so they are on ethereum's <blockchain>.\nWhat happens to the 1 eth being transfered, does it change <blockchain> on route to B or does it disappear and another one is created by the BSC on B's wallet ?\nThank you for your answers.","724":"Would you tell me, if fabric does manual transaction validation?\ni.e: Before a transaction could be archived in the ledger, it must be signed by the organization which evolved in the endorsement policies. This process of validation, by signing the transaction, could it be done manually by a decision of the user ( Clicking button )?\nThanks.","725":"I just uploaded a folder of 5 images to IPFS (using the Mac Desktop IPFS Client App, so it was a very simple drag and drop operation.)\nSo being that I\u00e2\u0080\u0099m the one that created and published this folder, does that mean that I\u00e2\u0080\u0099m the only one that\u00e2\u0080\u0099s allowed to make further modifications to it - like adding or deleting more images from it? Or can anyone out there on IPFS do that as well?\nIf they can, is there a way to prevent that from happening?\n=======================================\nUPDATED QUESTION:\nMy specific use-case has to do with updating the metadata of ERC721 Tokens - after  they\u00e2\u0080\u0099ve already been minted.\nImagine for example a game where certain objects - like say a magical sword - gains special powers after a certain amount of usage or after the completion of certain missions by its owner. So we\u00e2\u0080\u0099d want to update this sword\u00e2\u0080\u0099s attributes by editing it\u00e2\u0080\u0099s Metadata and re-committing this updated metadata file to the <blockchain>.\nIf our game has 100 swords for example, and we initially uploaded to IPFS a folder containing all 100 json files (one for each sword), then I\u00e2\u0080\u0099m pretty sure IPFS still let\u00e2\u0080\u0099s you access the specific files within the hashed-folder by their specific human-readable names (and not only by their hash.)\nSo if our sword happens to be sword #76, and our naming convention for our JSON files was of this format: \u00e2\u0080\u009csword000.json\u00e2\u0080\u009d , then sword#76\u00e2\u0080\u0099s JSON metadata file would have a path such as:\nhttp:\/\/ipfs.infura.io\/QmY2xxxxxxxxxxxxxxxxxxxxxx\/sword076.json\nIf we then edited the \u00e2\u0080\u009csword076.json\u00e2\u0080\u009c file and drag-n-dropped it back into our master JSON folder, it would obviously cause that folder\u00e2\u0080\u0099s Hash\/CID value to change. BUT, as long as we\u00e2\u0080\u0099re able update our Solidity Contract\u00e2\u0080\u0099s \u00e2\u0080\u009ctokenURI\u00e2\u0080\u009d method to look for and serve our \u00e2\u0080\u009c.json\u00e2\u0080\u009d files from this newly updated HASH\/CID folder name, we could still refer to the individual files within it by their regular English names. Which means we\u00e2\u0080\u0099d be good to go.\nWhether or not this is a good scheme to employ is something we can definitely discuss, but I FIRST want to go back to my original question\/concern, which is that I want to make sure that WE are the ONLY ones that can update the contents of our folder - and that no one else has permission to do that.\nDoes that make sense?","726":"I know it is important for <blockchain> to constantly checking whether the previous blocks have been altered or not but I don't know why does <blockchain> needs hash difficulty like zeros at the beginning of the hash value. From my perspective, since the previous blocks cannot be altered, if a database can memorize all the hash value of the previous blocks, once identify a change in those values, we can know which block has been altered due to a cyber attack(maybe). How is hash difficulty playing an important role here, is it necessary to use the method of constantly checking previous blocks' beginning sub string? Rehashing consumes a lot of computing power so I really don't understand why they are doing this.\nAlso besides cryptocurrency, in other implementations for <blockchain> like food supply chain, do we need this hash difficulty?","727":"I could run Substrate before based on this advise. Link\ncargo.toml\n[patch.crates-io]\nlibrocksdb-sys = { git = \n\"https:\/\/github.com\/hdevalence\/rustrocksdb\", branch = \"master\" }\n\n[workspace]\n members = [\n    'node',\n    'pallets\/*',\n    'runtime',\n]\n[profile.release]\n panic = 'unwind'\n\ncargo.lock\n[[package]]\nname = \"libc\"\nversion = \"0.2.90\"\nsource = \"registry+https:\/\/github.com\/rust-lang\/crates.io-index\"\nchecksum \n=\"ba4aede83fc3617411dc6993bc8c70919750c1c257c6ca6a502aed6e0e2394ae\"\n\nBut I got another error again. Like\n\n169 |                     (*cx.uc_mcontext).__ss.__rip as *const u8\n    |                                            ^^^^^ unknown field\n    |\n    = note: available fields are: `__x`, `__fp`, `__lr`, `__sp`, `__pc` ... and 2 others\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `wasmtime-runtime`\n\nTo learn more, run the command again with --verbose.\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n\nDo you know how to resolve this problem? Thank you so much!","728":"I am currently creating some custom flows, sending back and forth some data through the session. I noticed that in some cases (for example if a responder flow has a session.receive still unanswered when the initiating flow finishes), no exceptions are thrown and everything works smoothly, without even a warn log. Is there a way to force the check of send\/receive completeness?","729":"Trying to build Bitcoin raw transaction for Bitcoin Testnet in Golang, but when trying to send getting an error:\nmandatory-script-verify-flag-failed (Script evaluated without error but finished with a false\/empty top stack element)\n\nHere is raw transaction:\n01000000014071216d4d93d0e3a4d88ca4cae97891bc786e50863cd0efb1f15006e2b0b1d6010000008a4730440220658f619cde3c5c5dc58e42f9625ef71e8279f923af6179a90a0474a286a8b9c60220310b4744fa7830e796bf3c3ed9c8fea9acd6aa2ddd3bc54c4cb176f6c20ec1be0141045128ccd27482b3791228c6c438d0635ebb2fd6e78aa2d51ea70e8be32c9e54daf29c5ee7a3752b5896e5ed3693daf19b57e243cf2dcf27dfe5081cfcf534496affffffff012e1300000000000017a914de05d1320add0221111cf163a9764587c5a171ba8700000000\n\nTried to debug with btcdeb:\n.\/btcdeb --tx=01000000014071216d4d93d0e3a4d88ca4cae97891bc786e50863cd0efb1f15006e2b0b1d6010000008a4730440220658f619cde3c5c5dc58e42f9625ef71e8279f923af6179a90a0474a286a8b9c60220310b4744fa7830e796bf3c3ed9c8fea9acd6aa2ddd3bc54c4cb176f6c20ec1be0141045128ccd27482b3791228c6c438d0635ebb2fd6e78aa2d51ea70e8be32c9e54daf29c5ee7a3752b5896e5ed3693daf19b57e243cf2dcf27dfe5081cfcf534496affffffff012e1300000000000017a914de05d1320add0221111cf163a9764587c5a171ba8700000000 --txin=02000000000101394187cababd1c18dfc9d30d6325167aa654b1d35505ab77cd1b96562fda5d500000000017160014c0a4f9f451ea319f67c6d2535c1e41bd5d333214feffffff02f009aab80000000017a91455f5b5f3afa4751a54205941a45a14b27ad99be787ec8016000000000017a91435ac960b988964007c167c38ea724e034123e6b1870247304402205d6b22bcaf1a58bc41224eecc7437eef0db9b7e7fb709826314a8bd73adb330702204fbbbd49747d75331a89e2f7b486e0b7a786ecef3229b8e3fec0c4be491921c301210233eab1d60449c393c8f22d4b5d98ee103060d9644dc2af665e607a62e2151bbc30091e00\nbtcdeb 0.4.21 -- type `.\/btcdeb -h` for start up options\n    LOG: sign segwit taproot\n    notice: btcdeb has gotten quieter; use --verbose if necessary (this message is temporary)\n    input tx index = 0; tx input vout = 1; value = 1474796\n    got witness stack of size 0\n    14 op script loaded. type `help` for usage information\n    script                                                             |  stack\n    -------------------------------------------------------------------+--------\n    30440220658f619cde3c5c5dc58e42f9625ef71e8279f923af6179a90a0474a... |\n    045128ccd27482b3791228c6c438d0635ebb2fd6e78aa2d51ea70e8be32c9e5... |\n    <<< scriptPubKey >>>                                               |\n    OP_HASH160                                                         |\n    35ac960b988964007c167c38ea724e034123e6b1                           |\n    OP_EQUAL                                                           |\n    <<< P2SH script >>>                                                |\n    5128ccd2                                                           |\n    OP_DEPTH                                                           |\n    OP_SIZE                                                            |\n    OP_NOP4                                                            |\n    OP_PICK                                                            |\n    28c6c438d0635ebb2fd6e78aa2d51ea70e8b                               |\n    OP_UNKNOWN                                                         |\n    #0000 30440220658f619cde3c5c5dc58e42f9625ef71e8279f923af6179a90a0474a286a8b9c60220310b4744fa7830e796bf3c3ed9c8fea9acd6aa2ddd3bc54c4cb176f6c20ec1be01\n\nCan anybody give an advice on where to look at?","730":"I'm trying to learn more about dapps by using <python>'s <web3> module. <web3> connects to Ganache just fine, I can see my account by using <web3>.eth.accounts[0] and I can retrieve my contract. However when I try to call a function from my contract I get the following:\n\nHere is my <python> code:\nfrom <web3> import <web3>\nimport json\n\nw3 = <web3>(<web3>.HTTPProvider('http:\/\/127.0.0.1:7545'))\nw3.eth.defaultAccount = w3.eth.accounts[0]\nprint(w3.eth.defaultAccount)\n\ncompiled_contract_path = '.\/build\/contracts\/Greeter.json'\ndeployed_contract_address = '0x54BB58167CDB31A98F56E8Fc3CfbAC43bf867000'\n\nwith open(compiled_contract_path) as file:\n    contract_json = json.load(file)  # load contract info as JSON\n    contract_abi = contract_json['abi']\n\ncontract = w3.eth.contract(address=deployed_contract_address, abi=contract_abi)\n\nprint(contract.functions.greet().call())\n\nAnd here is my contract:\npragma solidity ^0.5.0;\n\ncontract Greeter {\n  uint public taskCount = 0;\n  string public greeting;\n\n  constructor() public {\n    greeting = 'Hello';\n  }\n\n  function greet() public returns (string memory) {\n    return greeting;\n  }\n}","731":"I am developing a smart contract using solidity. Every time I edit the contract and want to prove it I run truffle migrate --reset.\nBy doing so, I lose all the data that I had saved in the contract.\nI wonder if there is any way to migrate the contract while preserving the data, as it is done with traditional databases, since only by truffle migrate the contract is not migrated, it is only recompiled.\nThanks a lot!","732":"I have a simple Dapp and I want to sign a transaction but I don't have the private key as a string.\nThe user is using a MetaMask wallet. After they grant <web3> access to their account, how can I access the private key to sign a transaction?\nconst signPromise = <web3>.eth.accounts.signTransaction(tx, PRIVATE_KEY);\n\/\/ PRIVATE_KEY is what I'm trying to get.","733":"Everyone!\nI have a token contract that has a mint function.\nIt has only burn function and it deployed to the mainnet.\nI am going to add the mint function to the token.\nIt is available?\nHere is the current token contract.\ncontract MyToken is ERC20, ERC20Detailed, ERC20Burnable {\n    constructor () public ERC20Detailed(\"MyToken\", \"MY\", 18) {\n        _mint(msg.sender, 15000000 * (10 ** uint256(decimals())));\n    }\n}\n\nAbove contract used openzeppelin.\nI will be very thankful if you teach me how to change this contract.","734":"[eunsungahn@eunsungui-MacBookPro <blockchain> % <geth> version\n<geth>\nVersion: 1.10.1-stable\nGit Commit: c2d2f4ed8f232bb11663a1b01a2e578aa22f24bd\nGit Commit Date: 20210308\nArchitecture: amd64\nGo Version: go1.16\nOperating System: darwin\nGOPATH=\nGOROOT=go\n\n[eunsungahn@eunsungui-MacBookPro <blockchain> % puppeth\nzsh: command not found: puppeth\n\nI think that I installed <geth> well, but instruction \"puppeth\" doesn't work. I heard that puppeth is installed simultaneously when <geth> is installed. How can I solve this problem? Thanks a lot.","735":"class Block:\n   def __init__(self):\n      self.verified_<transactions> = []\n      self.previous_block_hash = \"\"\n      self.Nonce = \"\"\n\n   def mine(message, difficulty=1):\n      assert difficulty >= 1\n      prefix = '1' * difficulty\n      for i in range(1000):\n         digest = hashlib.sha256(str(hash(message)).encode('utf-8') + str(i).encode('utf-8'))\n         if digest.startswith(prefix):\n            print (\"after \" + str(i) + \" iterations found nonce: \"+ digest)\n         return digest\n\nerror: Traceback (most recent call last):\n  File \"c:\/Users\/thoma\/Desktop\/Client.py\", line 113, in <module>\n    Block.mine (\"test message\", 2)\n  File \"c:\/Users\/thoma\/Desktop\/Client.py\", line 94, in mine\n    if str(digest.startswith(prefix)):\nAttributeError: '_hashlib.HASH' object has no attribute 'startswith'\n\n---- complete code-----\n# import libraries\nimport hashlib\nimport random\nimport string\nimport json\nimport binascii\nimport numpy as np\nimport pandas as pd\nimport pylab as pl\nimport logging\nimport datetime\nimport collections\n# following imports are required by PKI\nimport Cryptodome\nimport Cryptodome.Random\nfrom Cryptodome.Hash import SHA\nfrom Cryptodome.PublicKey import RSA\nfrom Cryptodome.Signature import PKCS1_v1_5\n\n\n<transactions> = []\nlast_block_hash = \"\"\nTPCoins = []\n\ndef sha256(message):\n      return hashlib.sha256(message.encode('ascii')).hexdigest()\n\nclass Client:\n   def __init__(self):\n      random = Cryptodome.Random.new().read\n      self._private_key = RSA.generate(1024, random)\n      self._public_key = self._private_key.publickey()\n      self._signer = PKCS1_v1_5.new(self._private_key)\n\n   @property\n   def identity(self):\n      return binascii.hexlify(self._public_key.exportKey(format='DER')).decode('ascii')\n\nclass Transaction:\n   def __init__(self, sender, recipient, value):\n      self.sender = sender\n      self.recipient = recipient\n      self.value = value\n      self.time = datetime.datetime.now() \n\n   def to_dict(self):\n      if self.sender == \"Genesis\":\n         identity = \"Genesis\"\n      else:\n         identity = self.sender.identity\n\n      return collections.OrderedDict({\n         'sender': identity,\n         'recipient': self.recipient,\n         'value': self.value,\n         'time' : self.time})\n\n   def sign_transaction(self):\n      private_key = self.sender._private_key\n      signer = PKCS1_v1_5.new(private_key)\n      h = SHA.new(str(self.to_dict()).encode('utf8'))\n      return binascii.hexlify(signer.sign(h)).decode('ascii')\n\n   def display_transaction(transaction):\n      #for transaction in <transactions>:\n      dict = transaction.to_dict()\n      print (\"sender: \" + dict['sender'])\n      print ('-----')\n      print (\"recipient: \" + dict['recipient'])\n      print ('-----')\n      print (\"value: \" + str(dict['value']))\n      print ('-----')\n      print (\"time: \" + str(dict['time']))\n      print ('-----')\n\n   def dump_<blockchain> (self):\n      print (\"Number of blocks in the chain: \" + str(len (self)))\n      for x in range (len(TPCoins)):\n         block_temp = TPCoins[x]\n         print (\"block # \" + str(x))\n         for transaction in block_temp.verified_<transactions>:\n            Transaction.display_transaction (transaction)\n            print ('--------------')\n         print ('=====================================')\n\nclass Block:\n   def __init__(self):\n      self.verified_<transactions> = []\n      self.previous_block_hash = \"\"\n      self.Nonce = \"\"\n\n   def mine(message, difficulty=1):\n      assert difficulty >= 1\n      prefix = '1' * difficulty\n      for i in range(1000):\n         digest = hashlib.sha256(str(hash(message)).encode('utf-8') + str(i).encode('utf-8'))\n         if digest.startswith(prefix):\n            print (\"after \" + str(i) + \" iterations found nonce: \"+ digest)\n         return digest\n\n\n#genesis block & users initialisation\nThomas = Client()\nIoT_Sensor = Client()\nNode = Client()\nIoT_Device = Client()\nt0 = Transaction(\"Genesis\",Thomas.identity,200.0)\nblock0 = Block()\nblock0.previous_block_hash = None\nNonce = None\nblock0.verified_<transactions>.append (t0)\ndigest = hash (block0)\nlast_block_hash = digest\nTPCoins.append (block0)\nTransaction.dump_<blockchain>(TPCoins)\nBlock.mine (\"test message\", 2)\n\nAny thoughts? I am working off a tutorial @ <python> <blockchain> tutorial\nI believe the issue is the variable digest is not a str but rather a hashlib.sha256 object and thus .startswith() is not recognised. I have tried casting to str() without any luck.\nThanks for any help everyone.\nSolution thanks to furas :)\ndef mine(message, difficulty=1):\n      assert difficulty >= 1\n      prefix = '1' * difficulty\n      for i in range(1000):\n         digest = sha256(str(hash(message)) + str(i))\n         if digest.startswith(prefix):\n            print (\"after \" + str(i) + \" iterations found nonce: \"+ digest)\n            return digest\n\noutput:\nafter 303 iterations found nonce: 11337d455c3d425b33cbeeb23fc87d6a3e7c05bf0d27f648e6c9df2f87eea2fb","736":"For an arbitrary <blockchain> (ie not BTC, ETH), is there someplace to look for general information about where the publicly available raw <blockchain> data is... publicly available?  And how to read it?  EG in order to perform analytics on the <transactions>.\nThanks","737":"pragma solidity >=0.5.1 <0.6.0;\ncontract HelloWorld {\n\n    mapping(address => uint) public balance;\n    uint public countOfInvestors = 0;\n    mapping(address => uint) public time;\n    event Invest(address investor, uint256 amount);\n    \n     function deposit() private {\n        if (msg.value > 0) {\n            if (balance[msg.sender] == 0) {\n                countOfInvestors += 1;\n            }\n            balance[msg.sender] = msg.value;\n            time[msg.sender] = now;\n            emit Invest(msg.sender, msg.value);\n        }\n    }\n   function() external payable {\n       deposit();\n   }\n}\n\nWhen i SEND SOME TRX ON CONTRACT i have no new data on tronscan, contract balance increased but not display any transaction\n\nHow to make contract should what i need?\n\nNo one events and <transactions> but i sent few times","738":"Hi I am developing a runtime using Substrate-FRAME and I would like to know how can I write a system test for my runtime?\nThe main purpose of writing a system test is to ensure that the final build is fulfilling all of the required specifications and also to ensure nothing is compromised on a runtime upgrade.\nThe idea for me is something similar to point no. 2 mentioned in this thread.\nAny documentation regarding this type of tests would be greatly helpful.\nUpdate:\nI ended up using py-substrate-interface to make test scenarios. Now I can automatically deploy nodes to form a network (thanks to <python>) and run my custom system test scenarios. Very useful tool for developing runtimes in Substrate.","739":"I'm learning how to use cardano-rosetta and I'd like to make the send-transaction-example.ts script work with addresses that I've derived beforehand. The addresses have been derived using the cardano-addresses tool, which I then convert to Uint8 arrays. This is because we need to derive batches of addresses that may be used in future.\nThe transaction is constructed and signed, seemingly without any issue. The server log is below. However, the transaction is rejected. The API response isn't very descriptive, I get only a 500 error, but the server log is below. The issue seems to be in this line:\n[53047783:cardano.node.Mempool:Info:38002] [2021-03-30 15:55:43.90 UTC] fromList [(\"tx\",Object (fromList [(\"txid\",String \"txid: TxId {_unTxId = \\\"831f0e898a7d6653149bf2f6fc6ea7b482deb04f49251a1edd612051f42617b2\\\"}\")])),(\"kind\",String \"TraceMempoolRejectedTx\"),(\"mempoolSize\",Object (fromList [(\"numTxs\",Number 0.0),(\"bytes\",Number 0.0)])),(\"err\",Object (fromList [(\"kind\",String \"InvalidWitnessesUTXOW\"),(\"invalidWitnesses\",Array [String \"VKey (VerKeyEd25519DSIGN (PublicKey \\\"\\\\158\\\\238W\\\\128\\\\184$:E\\\\231\\\\FSa\\\\152I$\\\\EM\\\\b\\\\134\\\\CAN\\\\140\\\\157N\\\\154\\\\238r\\\\EOT\\\\173\\\\204\\\\172c4cr\\\"))\"])]))]\n\nI don't know why the witness is invalid. could anyone help?\n{\"level\":30,\"time\":1617119743744,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1392,\"msg\":\"[constructionCombine] Request received to sign a transaction\",\"v\":1}\n{\"level\":30,\"time\":1617119743745,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1392,\"msg\":\"[buildTransaction] About to signed a transaction with 1 signatures\",\"v\":1}\n{\"level\":30,\"time\":1617119743745,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1392,\"msg\":\"[getWitnessesForTransaction] Extracting witnesses from signatures\",\"v\":1}\n{\"level\":30,\"time\":1617119743745,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1392,\"msg\":\"[getWitnessesForTransaction] 1 witnesses were extracted to sign transaction\",\"v\":1}\n{\"level\":30,\"time\":1617119743745,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1392,\"msg\":\"[buildTransaction] Instantiating transaction body from unsigned transaction bytes\",\"v\":1}\n{\"level\":30,\"time\":1617119743745,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1392,\"msg\":\"[buildTransaction] Creating transaction using transaction body and extracted witnesses\",\"v\":1}\n{\"level\":30,\"time\":1617119743745,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1392,\"signedTransaction\":\"83a400818258204bc397faa17b5f7972cfd6acf2729eb950b5756c8ea2f704ec8ef11d8a3718fb000181825839000c6d3e4ad14b5ac97656fe56cae3d46e4474af25f6f4d25268b8a168474ac229ab36f3ebb93da86e068f35f5a64bcc0e4ed40cc295fca2df1a389fd980021a02faf080031a015b291ba100818258209eee5780b8243a45e71c61984924190886188c9d4e9aee7204adccac633463725840b2e842c390b4142c46e9d08dd5fc366cb37fc960ab48bdeb083134d79858928775e8304f8c25a5cd5d531f9fd7579188fdb659a27e8f418c12a6aada0fda7600f6\",\"msg\":\"[constructionCombine] About to return signed transaction\",\"v\":1}\n{\"level\":30,\"time\":1617119743747,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1392,\"res\":{\"statusCode\":200},\"responseTime\":3.006010055541992,\"msg\":\"request completed\",\"v\":1}\n{\"level\":30,\"time\":1617119743887,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1393,\"req\":{\"method\":\"POST\",\"url\":\"\/construction\/submit\",\"hostname\":\"35.214.159.230:8080\",\"remoteAddress\":\"84.247.50.48\",\"remotePort\":55196},\"msg\":\"incoming request\",\"v\":1}\n{\"level\":30,\"time\":1617119743888,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1393,\"msg\":\"[constructionSubmit] About to submit 83a400818258204bc397faa17b5f7972cfd6acf2729eb950b5756c8ea2f704ec8ef11d8a3718fb000181825839000c6d3e4ad14b5ac97656fe56cae3d46e4474af25f6f4d25268b8a168474ac229ab36f3ebb93da86e068f35f5a64bcc0e4ed40cc295fca2df1a389fd980021a02faf080031a015b291ba100818258209eee5780b8243a45e71c61984924190886188c9d4e9aee7204adccac633463725840b2e842c390b4142c46e9d08dd5fc366cb37fc960ab48bdeb083134d79858928775e8304f8c25a5cd5d531f9fd7579188fdb659a27e8f418c12a6aada0fda7600f6\",\"v\":1}\n[53047783:cardano.node.Mempool:Info:38002] [2021-03-30 15:55:43.90 UTC] fromList [(\"tx\",Object (fromList [(\"txid\",String \"txid: TxId {_unTxId = \\\"831f0e898a7d6653149bf2f6fc6ea7b482deb04f49251a1edd612051f42617b2\\\"}\")])),(\"kind\",String \"TraceMempoolRejectedTx\"),(\"mempoolSize\",Object (fromList [(\"numTxs\",Number 0.0),(\"bytes\",Number 0.0)])),(\"err\",Object (fromList [(\"kind\",String \"InvalidWitnessesUTXOW\"),(\"invalidWitnesses\",Array [String \"VKey (VerKeyEd25519DSIGN (PublicKey \\\"\\\\158\\\\238W\\\\128\\\\184$:E\\\\231\\\\FSa\\\\152I$\\\\EM\\\\b\\\\134\\\\CAN\\\\140\\\\157N\\\\154\\\\238r\\\\EOT\\\\173\\\\204\\\\172c4cr\\\"))\"])]))]\n{\"level\":50,\"time\":1617119743909,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1393,\"shortMessage\":\"Command failed with exit code 1: \/usr\/local\/bin\/cardano-cli transaction submit --tx-file \/tmp\/6edd9e54-ea83-420c-b5b8-c0c2ea722dc6 --testnet-magic 1097911063\",\"command\":\"\/usr\/local\/bin\/cardano-cli transaction submit --tx-file \/tmp\/6edd9e54-ea83-420c-b5b8-c0c2ea722dc6 --testnet-magic 1097911063\",\"exitCode\":1,\"stdout\":\"\",\"stderr\":\"Shelley command failed: transaction submit  Error: Error while submitting tx: ApplyTxError [LedgerFailure (UtxowFailure (InvalidWitnessesUTXOW [VKey (VerKeyEd25519DSIGN (PublicKey \\\"\\\\158\\\\238W\\\\128\\\\184$:E\\\\231\\\\FSa\\\\152I$\\\\EM\\\\b\\\\134\\\\CAN\\\\140\\\\157N\\\\154\\\\238r\\\\EOT\\\\173\\\\204\\\\172c4cr\\\"))]))]\",\"failed\":true,\"timedOut\":false,\"isCanceled\":false,\"killed\":false,\"msg\":\"[submitTransaction] Command failed\",\"stack\":\"Error: Command failed with exit code 1: \/usr\/local\/bin\/cardano-cli transaction submit --tx-file \/tmp\/6edd9e54-ea83-420c-b5b8-c0c2ea722dc6 --testnet-magic 1097911063\\nShelley command failed: transaction submit  Error: Error while submitting tx: ApplyTxError [LedgerFailure (UtxowFailure (InvalidWitnessesUTXOW [VKey (VerKeyEd25519DSIGN (PublicKey \\\"\\\\158\\\\238W\\\\128\\\\184$:E\\\\231\\\\FSa\\\\152I$\\\\EM\\\\b\\\\134\\\\CAN\\\\140\\\\157N\\\\154\\\\238r\\\\EOT\\\\173\\\\204\\\\172c4cr\\\"))]))]\\n    at makeError (\/cardano-rosetta-server\/node_modules\/execa\/lib\/error.js:59:11)\\n    at handlePromise (\/cardano-rosetta-server\/node_modules\/execa\/index.js:114:26)\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (internal\/process\/task_queues.js:93:5)\",\"type\":\"Error\",\"v\":1}\n{\"level\":50,\"time\":1617119743910,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1393,\"msg\":\"Shelley command failed: transaction submit  Error: Error while submitting tx: ApplyTxError [LedgerFailure (UtxowFailure (InvalidWitnessesUTXOW [VKey (VerKeyEd25519DSIGN (PublicKey \\\"\\\\158\\\\238W\\\\128\\\\184$:E\\\\231\\\\FSa\\\\152I$\\\\EM\\\\b\\\\134\\\\CAN\\\\140\\\\157N\\\\154\\\\238r\\\\EOT\\\\173\\\\204\\\\172c4cr\\\"))]))]\",\"stack\":\"Error: Shelley command failed: transaction submit  Error: Error while submitting tx: ApplyTxError [LedgerFailure (UtxowFailure (InvalidWitnessesUTXOW [VKey (VerKeyEd25519DSIGN (PublicKey \\\"\\\\158\\\\238W\\\\128\\\\184$:E\\\\231\\\\FSa\\\\152I$\\\\EM\\\\b\\\\134\\\\CAN\\\\140\\\\157N\\\\154\\\\238r\\\\EOT\\\\173\\\\204\\\\172c4cr\\\"))]))]\\n    at Object.<anonymous> (\/cardano-rosetta-server\/dist\/src\/server\/utils\/cardano\/cli\/cardanonode-cli.js:60:31)\\n    at Generator.throw (<anonymous>)\\n    at rejected (\/cardano-rosetta-server\/dist\/src\/server\/utils\/cardano\/cli\/cardanonode-cli.js:6:65)\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (internal\/process\/task_queues.js:93:5)\",\"type\":\"Error\",\"v\":1}\n{\"level\":50,\"time\":1617119743910,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1393,\"code\":5006,\"retriable\":true,\"details\":{\"message\":\"Shelley command failed: transaction submit  Error: Error while submitting tx: ApplyTxError [LedgerFailure (UtxowFailure (InvalidWitnessesUTXOW [VKey (VerKeyEd25519DSIGN (PublicKey \\\"\\\\158\\\\238W\\\\128\\\\184$:E\\\\231\\\\FSa\\\\152I$\\\\EM\\\\b\\\\134\\\\CAN\\\\140\\\\157N\\\\154\\\\238r\\\\EOT\\\\173\\\\204\\\\172c4cr\\\"))]))]\"},\"msg\":\"[errorHandler] An error ocurred and will be sent as response\",\"stack\":\"Error: Error when sending the transaction\\n    at Object.exports.buildApiError (\/cardano-rosetta-server\/dist\/src\/server\/utils\/errors.js:86:56)\\n    at Object.sendTransactionError (\/cardano-rosetta-server\/dist\/src\/server\/utils\/errors.js:108:51)\\n    at \/cardano-rosetta-server\/dist\/src\/server\/controllers\/construction-controller.js:170:46\\n    at Generator.throw (<anonymous>)\\n    at rejected (\/cardano-rosetta-server\/dist\/src\/server\/controllers\/construction-controller.js:6:65)\",\"type\":\"Error\",\"v\":1}\n{\"level\":30,\"time\":1617119743911,\"pid\":106,\"hostname\":\"530477839db5\",\"reqId\":1393,\"res\":{\"statusCode\":500},\"responseTime\":23.158724784851074,\"msg\":\"request completed\",\"v\":1}","740":"I trying to create a NFT in a contract on Tron <blockchain>, my function is this:\nasync function createNFT()  {\n        let contract = await tronWeb.contract().at('address of contract'); \n        let result = await contract.mintWithTokenURI(\"my wallet\", id, \"urlToNFT\").send({\n            feeLimit:100_000_000,\n            callValue:0,\n            tokenId:1000036,\n            tokenValue:100,\n            shouldPollResponse:true\n        });\n}\n\nbut I always get this error:\nerror printscreen\nerror: \"CONTRACT_VALIDATE_ERROR\", message: \"contract validate error : Owner no asset!\"","741":"I tried to deploy a chaincode to test-network(fabric sample\/<hyperledger> fabric 2.2). I followed these steps mentioned in documentations https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.0\/deploy_chaincode.html.\nthis is the smart contract ::\n 'use strict';\n\nconst { Contract } = require('fabric-contract-api');\nclass RegisterUser extends Contract {\nasync initLedger(ctx) {\n    console.info('============= START : Initialize Ledger ===========');\n    const users = [\n        {\n            UserId: 'admin',\n            \n            FirstName : 'network',\n            LastName : 'supervisor',\n            BillFold : 'none',\n        },\n       \n    ];\n\n    for (let i = 0; i < users.length; i++) {\n        users[i].docType = 'user';\n        await ctx.stub.putState('USER' + i, Buffer.from(JSON.stringify(users[i])));\n        console.info('Added <--> ', users[i]);\n    }\n    console.info('============= END : Initialize Ledger ===========');\n}\n\n\nasync queryUser(ctx, userId) {\n    const userAsBytes = await ctx.stub.getState(userId); e\n    if (!userAsBytes || userAsBytes.length === 0) {\n        throw new Error(`${userId} does not exist`);\n    }\n    console.log(userAsBytes.toString());\n    return userAsBytes.toString();\n}\n\nasync createUser(ctx, userId, first_name, last_name,billfoldId) {\n    console.info('============= START : Create User ===========');\n\n    const user = {\n        UserId: userId,\n        doctype : 'user',\n        FirstName : first_name,\n        LastName : last_name,\n        BillFold : billfoldId,\n    };\n\n    await ctx.stub.putState(userId, Buffer.from(JSON.stringify(user)));\n    console.info('============= END : Create User ===========');\n}\n\n}\nmodule.exports = RegisterUser;\nRuning a node application that implement the chaincode gives this error:\n2021-03-30T10:55:42.115Z - error: [Transaction]: Error: No valid responses from any peers. Errors:\npeer=peer0.org1.example.com:7051, status=500, message=error in simulation: failed to execute transaction 112a4c6dbf49bdea7aaa4ca5e24a03eeebf89a0989d278319cf6aecae061d310: could not launch chaincode usercontract_1.0:995a82a19e6a5e211d6ca52dff9eccb5cfd79249418657e0c9f599c9b1ffe9f0: chaincode registration failed: container exited with 1\npeer=peer0.org2.example.com:9051, status=500, message=error in simulation: failed to execute transaction 112a4c6dbf49bdea7aaa4ca5e24a03eeebf89a0989d278319cf6aecae061d310: could not launch chaincode usercontract_1.0:995a82a19e6a5e211d6ca52dff9eccb5cfd79249418657e0c9f599c9b1ffe9f0: chaincode registration failed: container exited with 1","742":"I'm building a decentralized application where users can connect their cryptocurrency wallet (Metamask) to my website.\nThey can initiate a connection request by clicking a button. On success, the wallet is connected and my website can interact with it.\nIs there any way to initiate a disconnect request? Similar to a 'Log out' button. Currently, the users have to manually disconnect their wallet within Metamask settings which is not a straightforward process.","743":"I am working on a project to develop a <blockchain>-based solution for Supply chain management. As I intend to make a privileged, permissioned network, I started the development on <hyperledger> Fabric. I wish to ask 2 broad questions about this:\n\nIs <hyperledger> Fabric a good choice for highly dynamic networks, which are permissioned and secure? What <blockchain> solutions are commonly used in the industry for such problems?\nIf <hyperledger> Fabric is to be used, are there any free, open-source developer tools, to simplify the network creation, updating, and management, such that only the Smart contracts and applications need to be made by the developer? Something similar to IBM <blockchain> Cloud, but completely unpaid to use for the amateur, student developers. Are there any free substitutes for scalable <hyperledger> fabric composer now?\n\nThanks in advance!","744":"I am playing with Ethereum smart contracts and noticed some strange behavior of some <transactions>.\nTransaction is visible and it states that tokens are sent to an address but when I check balance on Metamask it's not here (Token contract is added to MetaMask). What could be the reason of such contract behavior?\nThis is example transaction: https:\/\/ropsten.etherscan.io\/tx\/0xf3316c497fd47ee79be57be7b91cb96cc0414003a155d8ff8bc83b3a090594c9\n200,000 tokens is sent to https:\/\/ropsten.etherscan.io\/address\/0x9DEF8C013eb590aFf09c8c76F9A74A3055fAA177#tokentxns and it's displayed on ropsten network explorer, but I can't see them or manipulate on MetaMask.\nThis is part of my smart contract which does transfer, I marked line with comment \"invisible\" which does not work for me:\nfunction transfer(address to, uint256 value) public returns (bool) {\n  require(value <= _balances[msg.sender]);\n  require(to != address(0));\n\n  uint256 tokensToBurn = findOnePercent(value);\n  uint256 tokensToStack = findOnePercent(value);\n  uint256 tokenstoDeduct = tokensToBurn.add(tokensToStack);\n  uint256 tokensToTransfer = value.sub(tokenstoDeduct);\n\n  _balances[msg.sender] = _balances[msg.sender].sub(value);\n  _balances[to] = _balances[to].add(tokensToTransfer);\n\n  _totalSupply = _totalSupply.sub(tokenstoDeduct);\n\n  emit Transfer(msg.sender, to, tokensToTransfer); \/\/ visible on metaMask\n  emit Transfer(msg.sender, address(0), tokensToBurn); \/\/ burned\n  emit Transfer(msg.sender, address(VAULT_ADDRESS), tokensToStack); \/\/ invisible on metaMask\n  return true;\n}\n\nThis is screenshot of address wallet: 0x9DEF8C013eb590aFf09c8c76F9A74A3055fAA177\n\nPlease advise what I could do wrong here.\n[meanwhile I submitted ticket to MetaMask, maybe it's a defect on wallet extension]","745":"How can I quantify how much storage space (approximately) do I need for Ethereum <transactions>? Is it per function\/ transaction or how is it calculated? any leads on this is appreciated. I am trying to quantify the storage space needed for the <transactions> created by my smart contract...","746":"I'm trying to create a transcation on the the bitcoin test network. When I run insight.getUnspentUtxos() it return an error.\nvar <bitcore> = require('<bitcore>-lib');\n\nvar explorers = require('<bitcore>-explorers');\nvar insight = new explorers.Insight('testnet');\n\nvar value = Buffer.from('I am trying to create new private key');\nvar hash = <bitcore>.crypto.Hash.sha256(value);\nvar BN = <bitcore>.crypto.BN.fromBuffer(hash);\nvar privateKeyNew = <bitcore>.PrivateKey(BN, 'testnet')\nvar myAddress = privateKeyNew.toAddress()\nconsole.log(myAddress);\n\nvar newValue = Buffer.from('I am trying to create new private key but that can be risky');\nvar newhash = <bitcore>.crypto.Hash.sha256(newValue);\nvar newBN = <bitcore>.crypto.BN.fromBuffer(newhash);\nvar privateKey = <bitcore>.PrivateKey(newBN, 'testnet')\nvar address = privateKey.toAddress();\nconsole.log(address);\n\ninsight.getUnspentUtxos(myAddress, ( err, utxo ) => {\n    if(err) {\n        console.log(err);\n        return err;\n    } else {\n        let tx = <bitcore>.Transaction()\n        tx.from(utxo);\n        tx.to(address,10000);\n        tx.fee(50000);\n        tx.change(myAddress);\n        tx.sign(privateKeyNew);\n        tx.serialize();\n\n        insight.broadcast(tx.toString(), (error, txid) => {\n            if(error) {\n                return error;\n            } else { \n                console.log(txid);\n        }\n    })\n}\n\n})\nAs the UnspentUtxos() execute it give some long massive error. Which describe error 525 Origin SSL Hanshake Error","747":"Closed. This question needs to be more focused. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                    Want to improve this question? Update the question so it focuses on one problem only by editing this post.\n                \n                    \n                        Closed 1 year ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nI'm already working on a <blockchain> project, However I have a problem on implementing a peer to peer network between nodes. I found a Udemy course and in that course Redis pub\/sub was used for peet to peer network but is it only available in a local network right ? or in another article it says that there are some main nodes that run 24\/7 so others first make connection with them. but is it not sort of server-side network ??\nmy question is how can I actually implement a peer to peer network that many nodes around the world can communicate with each other without any main server ?","748":"I am trying to create an EC_KEY using EC_KEY_new_by_curve_name(NID_secp256k1) but m having this output when ii check the key\n\nThis is the error on the image.\n==13629== Memcheck, a memory error detector\n==13629== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==13629== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info\n==13629== Command: .\/ec_create-test\n==13629==\nKey verification failed\n==13629==\n==13629== HEAP SUMMARY:\n==13629==     in use at exit: 1,224 bytes in 28 blocks\n==13629==   total heap usage: 2,558 allocs, 2,530 frees, 96,068 bytes allocated\n==13629==\n==13629== LEAK SUMMARY:\n==13629==    definitely lost: 80 bytes in 1 blocks\n==13629==    indirectly lost: 1,144 bytes in 27 blocks\n==13629==      possibly lost: 0 bytes in 0 blocks\n==13629==    still reachable: 0 bytes in 0 blocks\n==13629==         suppressed: 0 bytes in 0 blocks\n==13629== Rerun with --leak-check=full to see details of leaked memory\n==13629==\n==13629== For counts of detected and suppressed errors, rerun with: -v\n==13629== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)","749":"Error: Endorser and orderer connections initialized\nError: got unexpected status: BAD_REQUEST -- error validating channel creation transaction for new channel 'mychannel', could not successfully apply update to template configuration: error authorizing update: error validating DeltaSet: policy for [Group]  \/Channel\/Application not satisfied: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Admins' sub-policies to be satisfied\nI'm using fabric <blockchain>, generated the crypto and genesis blocks already.  When I try to run .\/createChannel.sh I'm encountering this issue. I'm unaware of what to do.\nI'm facing issue when I run the command .\/createChannel.sh\nYou can see the process running in the network docker ps\nRunning Process screenshot\n\ncreateChannel.sh\n\n\n\nexport CORE_PEER_TLS_ENABLED=true\nexport ORDERER_CA=${PWD}\/artifacts\/channel\/crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/msp\/tlscacerts\/tlsca.example.com-cert.pem\nexport PEER0_ORG1_CA=${PWD}\/artifacts\/channel\/crypto-config\/peerOrganizations\/org1.example.com\/peers\/peer0.org1.example.com\/tls\/ca.crt\nexport PEER0_ORG2_CA=${PWD}\/artifacts\/channel\/crypto-config\/peerOrganizations\/org2.example.com\/peers\/peer0.org2.example.com\/tls\/ca.crt\nexport FABRIC_CFG_PATH=${PWD}\/artifacts\/channel\/config\/\n\nexport CHANNEL_NAME=mychannel\n\nsetGlobalsForOrderer(){\n    export CORE_PEER_LOCALMSPID=\"OrdererMSP\"\n    export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}\/artifacts\/channel\/crypto-config\/ordererOrganizations\/example.com\/orderers\/orderer.example.com\/msp\/tlscacerts\/tlsca.example.com-cert.pem\n    export CORE_PEER_MSPCONFIGPATH=${PWD}\/artifacts\/channel\/crypto-config\/ordererOrganizations\/example.com\/users\/Admin@example.com\/msp\n    #export CORE_PEER_ADDRESS=localhost:7050\n}\n\nsetGlobalsForPeer0Org1(){\n    export CORE_PEER_LOCALMSPID=\"Org1MSP\"\n    export CORE_PEER_TLS_ROOTCERT_FILE=$PEER0_ORG1_CA\n    export CORE_PEER_MSPCONFIGPATH=${PWD}\/artifacts\/channel\/crypto-config\/peerOrganizations\/org1.example.com\/users\/Admin@org1.example.com\/msp\n    export CORE_PEER_ADDRESS=localhost:7051\n}\n\nsetGlobalsForPeer1Org1(){\n    export CORE_PEER_LOCALMSPID=\"Org1MSP\"\n    export CORE_PEER_TLS_ROOTCERT_FILE=$PEER0_ORG1_CA\n    export CORE_PEER_MSPCONFIGPATH=${PWD}\/artifacts\/channel\/crypto-config\/peerOrganizations\/org1.example.com\/users\/Admin@org1.example.com\/msp\n    export CORE_PEER_ADDRESS=localhost:8051\n    \n}\n\nsetGlobalsForPeer0Org2(){\n    export CORE_PEER_LOCALMSPID=\"Org2MSP\"\n    export CORE_PEER_TLS_ROOTCERT_FILE=$PEER0_ORG2_CA\n    export CORE_PEER_MSPCONFIGPATH=${PWD}\/artifacts\/channel\/crypto-config\/peerOrganizations\/org2.example.com\/users\/Admin@org2.example.com\/msp\n    export CORE_PEER_ADDRESS=localhost:9051\n    \n}\n\nsetGlobalsForPeer1Org2(){\n    export CORE_PEER_LOCALMSPID=\"Org2MSP\"\n    export CORE_PEER_TLS_ROOTCERT_FILE=$PEER0_ORG2_CA\n    export CORE_PEER_MSPCONFIGPATH=${PWD}\/artifacts\/channel\/crypto-config\/peerOrganizations\/org2.example.com\/users\/Admin@org2.example.com\/msp\n    export CORE_PEER_ADDRESS=localhost:10051\n    \n}\n\ncreateChannel(){\n    rm -rf .\/channel-artifacts\/*\n    setGlobalsForPeer0Org1\n    \n    peer channel create -o localhost:7050 -c $CHANNEL_NAME \\\n    --ordererTLSHostnameOverride orderer.example.com \\\n    -f .\/artifacts\/channel\/${CHANNEL_NAME}.tx --outputBlock .\/channel-artifacts\/${CHANNEL_NAME}.block \\\n    --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA\n}\n\nremoveOldCrypto(){\n    rm -rf .\/api-1.4\/crypto\/*\n    rm -rf .\/api-1.4\/fabric-client-kv-org1\/*\n    rm -rf .\/api-2.0\/org1-wallet\/*\n    rm -rf .\/api-2.0\/org2-wallet\/*\n}\n\n\njoinChannel(){\n    setGlobalsForPeer0Org1\n    peer channel join -b .\/channel-artifacts\/$CHANNEL_NAME.block\n    \n    setGlobalsForPeer1Org1\n    peer channel join -b .\/channel-artifacts\/$CHANNEL_NAME.block\n    \n    setGlobalsForPeer0Org2\n    peer channel join -b .\/channel-artifacts\/$CHANNEL_NAME.block\n    \n    setGlobalsForPeer1Org2\n    peer channel join -b .\/channel-artifacts\/$CHANNEL_NAME.block\n    \n}\n\nupdateAnchorPeers(){\n    setGlobalsForPeer0Org1\n    peer channel update -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com -c $CHANNEL_NAME -f .\/artifacts\/channel\/${CORE_PEER_LOCALMSPID}anchors.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA\n    \n    setGlobalsForPeer0Org2\n    peer channel update -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com -c $CHANNEL_NAME -f .\/artifacts\/channel\/${CORE_PEER_LOCALMSPID}anchors.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA\n    \n}\n\nremoveOldCrypto\n\ncreateChannel\n# joinChannel\n# updateAnchorPeers\n\n\n\n\ncreate-artifacts.sh\n\n\n\nchmod -R 0755 .\/crypto-config\n# # Delete existing artifacts\nrm -rf .\/crypto-config\nrm genesis.block mychannel.tx\nrm -rf ..\/..\/channel-artifacts\/*\n\n#Generate Crypto artifactes for organizations\ncryptogen generate --config=.\/crypto-config.yaml --output=.\/crypto-config\/\n\n\n\n# System channel\nSYS_CHANNEL=\"sys-channel\"\n\n# channel name defaults to \"mychannel\"\nCHANNEL_NAME=\"mychannel\"\n\necho $CHANNEL_NAME\n\n# Generate System Genesis block\nconfigtxgen -profile OrdererGenesis -configPath . -channelID $SYS_CHANNEL  -outputBlock .\/genesis.block\n\n\n# Generate channel configuration block\nconfigtxgen -profile BasicChannel -configPath . -outputCreateChannelTx .\/mychannel.tx -channelID $CHANNEL_NAME\n\necho \"#######    Generating anchor peer update for Org1MSP  ##########\"\nconfigtxgen -profile BasicChannel -configPath . -outputAnchorPeersUpdate .\/Org1MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org1MSP\n\necho \"#######    Generating anchor peer update for Org2MSP  ##########\"\nconfigtxgen -profile BasicChannel -configPath . -outputAnchorPeersUpdate .\/Org2MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org2MSP","750":"I am trying to figure out how to do the following [in <python>]:\n\nFetch the address of all wallets holding a given ERC20 before a given date.\n\nEG: 'Get holdingAddresses from contractAddress before timestamp'\nI've looked at both the Ethplorer and Etherscan API's and I cannot figure out a way to retrieve this data.\nI think the answer may be through Infura, but I'm at a loss on where to start there if that is indeed the solution.\nAnyone know if this can be done, and if so - how?!","751":"How is an end user client registered on the <hyperledger> Fabric network? does he need to call a smart contract for this or is the registration process done by some other procedure?","752":"I'm triyng build interfacing with simple tron smartcontract with front end but i cant!\nHere is problem:\nPS D:\\trontest> node index.js\n(node:13816) UnhandledPromiseRejectionWarning: TypeError: contract is not a function\n    at f (D:\\trontest\\index.js:45:26)\n    at processTicksAndRejections (internal\/process\/task_queues.js:93:5)\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:13816) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https:\/\/nodejs.org\/api\/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\n(node:13816) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the <node.js> process with a non-zero exit code.\n\nIndex.js\nconst TronGrid = require(\"trongrid\");\nconst TronWeb = require(\"tronweb\");\n\nconst tronWeb = new TronWeb({\n    fullHost: 'https:\/\/api.shasta.trongrid.io'\n});\n\n\nconst contractAddress = \"TNSRwKB4YpLQTbmG9tST9zAqXXssho5hgZ\";\nasync function f() {\n    let contract = await tronWeb.contract().at(contractAddress);\n    const result = await contract().f().call();\n    console.log(result);\n}\nf();\n\nconstract has two methods f() and g() thet return string, but i cant call it\npackage.json\n{\n  \"name\": \"trontest\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"trongrid\": \"^1.2.6\",\n    \"tronweb\": \"^3.2.6\"\n  }\n}\n\nUPD1\nPut some changings\nconst TronGrid = require(\"trongrid\");\nconst TronWeb = require(\"tronweb\");\n\nconst tronWeb = new TronWeb({\n    fullHost: 'https:\/\/api.shasta.trongrid.io',\n    headers: { \"TRON-PRO-API-KEY\": '*****-e677-4f4c-a9cf-2156aa5e8453' },\n    privateKey: 'c4f27f7b052350703bcf*****6ecddfdd612b21c891'\n});\n\nasync function f() {\n    let instance = await tronWeb.contract(\"TNSRwKB4YpLQTbmG9tST9zAqXXssho5hgZ\");\n    let result = await instance().f().call();\n    console.log(result);\n}\nf();\n\nD:\\trontest>node index.js\n(node:1360) UnhandledPromiseRejectionWarning: TypeError: e.forEach is not a function\n    at e.value (D:\\trontest\\node_modules\\tronweb\\dist\\TronWeb.<node.js>:1:110856)\n    at new e (D:\\trontest\\node_modules\\tronweb\\dist\\TronWeb.<node.js>:1:108814)\n    at s.value (D:\\trontest\\node_modules\\tronweb\\dist\\TronWeb.<node.js>:1:147871)\n    at f (D:\\trontest\\index.js:44:34)\n    at Object.<anonymous> (D:\\trontest\\index.js:48:1)\n    at Module._compile (internal\/modules\/cjs\/loader.js:1063:30)\n    at Object.Module._extensions..js (internal\/modules\/cjs\/loader.js:1092:10)\n    at Module.load (internal\/modules\/cjs\/loader.js:928:32)\n    at Function.Module._load (internal\/modules\/cjs\/loader.js:769:14)\n    at Function.executeUserEntryPoint [as runMain] (internal\/modules\/run_main.js:72:12)\n\nAnd now i see that problem is UnhandledPromiseRejectionWarning: TypeError: e.forEach is not a function","753":"I'm using TronWeb and TronGrid when i try start somehow i see randomly completing index.js and sometimes it's completed with error. Status code 502..\nPS D:\\trontest> node index.js\nbalance: 6816.72342\nPS D:\\trontest> node index.js\n(node:8144) UnhandledPromiseRejectionWarning: Error: Request failed with status code 502\n    at createError (D:\\trontest\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (D:\\trontest\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (D:\\trontest\\node_modules\\axios\\lib\\adapters\\http.js:260:11)\n    at IncomingMessage.emit (events.js:327:22)\n    at endReadableNT (internal\/streams\/readable.js:1327:12)\n    at processTicksAndRejections (internal\/process\/task_queues.js:80:21)\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:8144) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https:\/\/nodejs.org\/api\/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)\n(node:8144) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the <node.js> process with a non-zero exit code.\nPS D:\\trontest> node index.js\nbalance: 6816.72342\nPS D:\\trontest>\n\nindex.js\nconst TronGrid = require(\"trongrid\");\nconst TronWeb = require(\"tronweb\");\n\nconst tronWeb = new TronWeb({\n    fullHost: 'https:\/\/api.shasta.trongrid.io'\n});\n\nconst tronGrid = new TronGrid(tronWeb);\nconst address = \"TE5KZD*******EdwZYJqxWjqjAovvEeGu\";\n\nasync function  getBalance(adr)  {\n    const balance = await tronWeb.trx.getBalance(adr);\n    console.log(\"balance:\", balance\/1000000);\n}\ngetBalance(address);\n\npackage.json\n{\n  \"name\": \"trontest\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"trongrid\": \"^1.2.6\",\n    \"tronweb\": \"^3.2.6\"\n  }\n}\n\nWhat i should to do to every request finished correctly? Thank you!","754":"I am trying to make a node server that can access each block object by its height, so here's the get route:\n    \/\/ Enpoint to Get a Block by Height (GET Endpoint)\ngetBlockByHeight() {\n    this.app.get(\"\/block\/height\/:height\", async (req, res) => {\n        if(req.params.height) {\n            const height = parseInt(req.params.height);\n            let block = await this.<blockchain>.getBlockByHeight(height);\n            if(block){\n                return res.status(200).json(block);\n            } else {\n                return res.status(404).send(\"Block Not Found!\");\n            }\n        } else {\n            return res.status(404).send(\"Block Not Found! Review the Parameters!\");\n        }\n        \n    });\n}\n\nand here's the function to get the height of the block:\ngetBlockByHeight(height) {\n        let self = this;\n        return new Promise((resolve, reject) => {\n            let block = self.chain.filter(p => p.height === height)[0];\n            if(block){\n                resolve(block);\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\nand here's the block.js:\nconst SHA256 = require('crypto-js\/sha256');\nconst hex2ascii = require('hex2ascii');\n\nclass Block {\n\n    \/\/ Constructor - argument data will be the object containing the transaction data\n    constructor(data){\n        this.hash = null;                                           \/\/ Hash of the block\n        this.height = 0;                                            \/\/ Block Height (consecutive number of each block)\n        this.body = Buffer.from(JSON.stringify(data)).toString('hex');   \/\/ Will contain the <transactions> stored in the block, by default it will encode the data\n        this.time = 0;                                              \/\/ Timestamp for the Block creation\n        this.previousBlockHash = null;                              \/\/ Reference to the previous Block Hash\n    }\n    \n\n     \n    validate() {\n        let self = this;\n        return new Promise((resolve, reject) => {\n            \/\/ Save in auxiliary variable the current block hash\n                        let currentHash=  self.hash                  \n            \/\/ Recalculate the hash of the Block\n         let  newHash =SHA256(JSON.stringify(self))\n            \/\/ Comparing if the hashes changed\n            if(newHash===currentHash){\nresolve(\"Block is valid\")\n\n            }else{\n            \/\/ Returning the Block is not valid\n            reject(\"Block is not valid\")\n            }\n            \/\/ Returning the Block is valid\n\n        });\n    }\n\n    \n    getBData() {\n        let self = this;\n        \/\/ Getting the encoded data saved in the Block\n        \/\/ Decoding the data to retrieve the JSON representation of the object\n        \/\/ Parse the data to an object to be retrieve.\nlet data=hex2ascii(self)\n        \/\/ Resolve with the data if the object isn't the Genesis block\n        let object=JSON.parse(data)\n        return new Promise((resolve, reject) => {\nif(self.previousBlockHash==!null){\nresolve(object)\n\n        }else{reject()\n\n    }\n        \n\n    });\n}\n}\n    \nmodule.exports.Block = Block;\n\n \n\nI m getting no warnings in the console when I run the server, I attached a repo for the problem here:https:\/\/github.com\/Mai9550\/private<blockchain>2","755":"Closed. This question is opinion-based. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                    Want to improve this question? Update the question so it can be answered with facts and citations by editing this post.\n                \n                    \n                        Closed 1 year ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nMany courses are teaching composer first\nAnd then fabric that too older versions of it. So should i learn that course ?\nOr should i look for something which teaches fabric 2.x and is composer used in industry ?","756":"Closed. This question needs debugging details. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     Edit the question to include desired behavior, a specific problem or error, and the shortest code necessary to reproduce the problem. This will help others answer the question.\n                \n                    \n                        Closed 1 year ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nI am building this (https:\/\/github.com\/solana-labs\/solana) on my new Mac m1 and it failed.\nThe author of ring says it can be fixed by upgrading dependency (https:\/\/github.com\/briansmith\/ring\/issues\/1163).\nI tried add ring = \"0.16.19\" to cargo.toml but failed because this virtual manifest specifies a [dependencies] section, which is not allowed\nI tried to search ring in the project directory and I only find them in cargo.lock.\nIt seems ring is a dependency of dependency of Solana. I am new to Rust and I do not know how to fix this.\nerror: failed to run custom build command for `ring v0.16.12`\n\nCaused by:\n  process didn't exit successfully: `\/Users\/pt\/code\/solana\/target\/debug\/build\/ring-15a328b7ae57ee29\/build-script-build` (exit code: 101)\n  --- stdout\n  CARGO: \/Users\/pt\/.rustup\/toolchains\/stable-aarch64-apple-darwin\/bin\/cargo\n  CARGO_CFG_TARGET_ARCH: aarch64\n  CARGO_CFG_TARGET_ENDIAN: little\n  CARGO_CFG_TARGET_ENV: \n  CARGO_CFG_TARGET_FAMILY: unix\n  CARGO_CFG_TARGET_OS: macos\n  CARGO_CFG_TARGET_POINTER_WIDTH: 64\n  CARGO_CFG_TARGET_VENDOR: apple\n  CARGO_CFG_UNIX: \n  CARGO_FEATURE_ALLOC: 1\n  CARGO_FEATURE_DEFAULT: 1\n  CARGO_FEATURE_DEV_URANDOM_FALLBACK: 1\n  CARGO_FEATURE_LAZY_STATIC: 1\n  CARGO_HOME: \/Users\/pt\/.cargo\n  CARGO_MAKEFLAGS: --jobserver-fds=3,7 -j --jobserver-auth=3,7 -j\n  CARGO_MANIFEST_DIR: \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\n  CARGO_MANIFEST_LINKS: ring-asm\n  CARGO_PKG_AUTHORS: Brian Smith <brian@briansmith.org>\n  CARGO_PKG_DESCRIPTION: Safe, fast, small crypto using Rust.\n  CARGO_PKG_HOMEPAGE: \n  CARGO_PKG_LICENSE: \n  CARGO_PKG_LICENSE_FILE: LICENSE\n  CARGO_PKG_NAME: ring\n  CARGO_PKG_REPOSITORY: https:\/\/github.com\/briansmith\/ring\n  CARGO_PKG_VERSION: 0.16.12\n  CARGO_PKG_VERSION_MAJOR: 0\n  CARGO_PKG_VERSION_MINOR: 16\n  CARGO_PKG_VERSION_PATCH: 12\n  CARGO_PKG_VERSION_PRE: \n  DEBUG: true\n  DYLD_FALLBACK_LIBRARY_PATH: \/Users\/pt\/code\/solana\/target\/debug\/deps:\/Users\/pt\/code\/solana\/target\/debug:\/Users\/pt\/.rustup\/toolchains\/stable-aarch64-apple-darwin\/lib\/rustlib\/aarch64-apple-darwin\/lib:\/Users\/pt\/.rustup\/toolchains\/stable-aarch64-apple-darwin\/lib:\/Users\/pt\/lib:\/usr\/local\/lib:\/usr\/lib\n  HOME: \/Users\/pt\n  HOMEBREW_CELLAR: \/opt\/homebrew\/Cellar\n  HOMEBREW_PREFIX: \/opt\/homebrew\n  HOMEBREW_REPOSITORY: \/opt\/homebrew\n  HOST: aarch64-apple-darwin\n  INFOPATH: \/opt\/homebrew\/share\/info:\n  LANG: en_US.UTF-8\n  LOGNAME: pt\n  MANPATH: \/opt\/homebrew\/share\/man::\n  NUM_JOBS: 8\n  OLDPWD: \/Users\/pt\/code\n  OPT_LEVEL: 0\n  OUT_DIR: \/Users\/pt\/code\/solana\/target\/debug\/build\/ring-9a6dbe2fa4a00fbb\/out\n  PATH: \/Users\/pt\/.cargo\/bin:\/opt\/homebrew\/bin:\/opt\/homebrew\/sbin:\/usr\/local\/bin:\/usr\/bin:\/bin:\/usr\/sbin:\/sbin:\/Users\/pt\/.cargo\/bin\n  PROFILE: debug\n  PWD: \/Users\/pt\/code\/solana\n  RUSTC: rustc\n  RUSTDOC: rustdoc\n  RUSTUP_HOME: \/Users\/pt\/.rustup\n  RUSTUP_TOOLCHAIN: stable-aarch64-apple-darwin\n  RUST_RECURSION_COUNT: 1\n  SHELL: \/bin\/zsh\n  SHLVL: 1\n  SSH_AUTH_SOCK: \/private\/tmp\/com.apple.launchd.w1r5O8sb2j\/Listeners\n  TARGET: aarch64-apple-darwin\n  TERM: xterm-256color\n  TERM_PROGRAM: Apple_Terminal\n  TERM_PROGRAM_VERSION: 440\n  TERM_SESSION_ID: 8998128C-3738-440D-9638-CBD45E430CAF\n  TMPDIR: \/var\/folders\/yy\/vchg_vkn3b99gk27n12cs09c0000gn\/T\/\n  USER: pt\n  XPC_FLAGS: 0x0\n  XPC_SERVICE_NAME: 0\n  _: \/Users\/pt\/.cargo\/bin\/cargo\n  __CFBundleIdentifier: com.apple.Terminal\n  __CF_USER_TEXT_ENCODING: 0x1F5:0x0:0x0\n  all_proxy: socks5:\/\/127.0.0.1:7890\n  http_proxy: http:\/\/127.0.0.1:7890\n  https_proxy: http:\/\/127.0.0.1:7890\n  OPT_LEVEL = Some(\"0\")\n  TARGET = Some(\"aarch64-apple-darwin\")\n  HOST = Some(\"aarch64-apple-darwin\")\n  CC_aarch64-apple-darwin = None\n  CC_aarch64_apple_darwin = None\n  HOST_CC = None\n  CC = None\n  CFLAGS_aarch64-apple-darwin = None\n  CFLAGS_aarch64_apple_darwin = None\n  HOST_CFLAGS = None\n  CFLAGS = None\n  CRATE_CC_NO_DEFAULTS = None\n  DEBUG = Some(\"true\")\n  CARGO_CFG_TARGET_FEATURE = None\n  running \"cc\" \"-O0\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-g\" \"-fno-omit-frame-pointer\" \"-I\" \"include\" \"-Wall\" \"-Wextra\" \"-pedantic\" \"-pedantic-errors\" \"-Wall\" \"-Wextra\" \"-Wcast-align\" \"-Wcast-qual\" \"-Wconversion\" \"-Wenum-compare\" \"-Wfloat-equal\" \"-Wformat=2\" \"-Winline\" \"-Winvalid-pch\" \"-Wmissing-field-initializers\" \"-Wmissing-include-dirs\" \"-Wredundant-decls\" \"-Wshadow\" \"-Wsign-compare\" \"-Wsign-conversion\" \"-Wundef\" \"-Wuninitialized\" \"-Wwrite-strings\" \"-fno-strict-aliasing\" \"-fvisibility=hidden\" \"-fstack-protector\" \"-gfull\" \"-DNDEBUG\" \"-c\" \"-o\/Users\/pt\/code\/solana\/target\/debug\/build\/ring-9a6dbe2fa4a00fbb\/out\/aesv8-armx-linux64.o\" \"\/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S\"\n\n  --- stderr\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:18:17: error: unexpected token in '.section' directive\n  .section .rodata\n                  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:28:1: error: unknown directive\n  .hidden GFp_aes_hw_set_encrypt_key\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:29:1: error: unknown directive\n  .type GFp_aes_hw_set_encrypt_key,%function\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:161:1: error: unknown directive\n  .size GFp_aes_hw_set_encrypt_key,.-GFp_aes_hw_set_encrypt_key\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:163:1: error: unknown directive\n  .hidden GFp_aes_hw_encrypt\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:164:1: error: unknown directive\n  .type GFp_aes_hw_encrypt,%function\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:191:1: error: unknown directive\n  .size GFp_aes_hw_encrypt,.-GFp_aes_hw_encrypt\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:193:1: error: unknown directive\n  .hidden GFp_aes_hw_decrypt\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:194:1: error: unknown directive\n  .type GFp_aes_hw_decrypt,%function\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:221:1: error: unknown directive\n  .size GFp_aes_hw_decrypt,.-GFp_aes_hw_decrypt\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:223:1: error: unknown directive\n  .hidden GFp_aes_hw_ctr32_encrypt_blocks\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:224:1: error: unknown directive\n  .type GFp_aes_hw_ctr32_encrypt_blocks,%function\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:403:1: error: unknown directive\n  .size GFp_aes_hw_ctr32_encrypt_blocks,.-GFp_aes_hw_ctr32_encrypt_blocks\n  ^\n  \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/pregenerated\/aesv8-armx-linux64.S:407:19: error: unexpected token in '.section' directive\n  .section .note.GNU-stack,\"\",%progbits\n                    ^\n  thread 'main' panicked at 'execution failed', \/Users\/pt\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/ring-0.16.12\/build.rs:641:9\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed","757":"Hi I have a javascript object that looks like this:\n    {\"_balance\":\"1500\",\"texts\":{\n                                \"0x4b8ca107efbc8b096c011f64d2c2d7aebdaec7fe\": {\"Best\":\"200\",\"first one\":\"0\"},\n                                \"0x7901b2b9caaeff5478d14873c39765373a48f890\":{\"number one !!!!1111\":\"1500\"}}}\n\nI can get objName.texts out of the object.\nWhich leaves me with:\n  {\"0x4b8ca107efbc8b096c011f64d2c2d7aebdaec7fe\":{\"Best\":\"200\",\"first one\":\"0\"},\n   \"0x7901b2b9caaeff5478d14873c39765373a48f890\":{\"number one !!!!1111\":\"1500\"}}\n\nIt's a map of addresses with all the messages they left and the amount of points the message has. Now i need to get the messages out and sort them ascending by points but I don't know where to begin.\nI'm not looking for a complete answer. Just a way to get the values out individually and put them in an array. I have no clue where to begin...\nThank you for your attention","758":"I am playing with solidity programming language and trying to implement a contract that every made transaction is deducted with tax fee and this tax fee should be transferred to some specific address of a contract which is being created. Is that possible?","759":"I'm using the following code to get the binance api signature, but it doesn't work!! can any one help!\nint timeStamp = DateTime.now().millisecondsSinceEpoch;\nString queryParams = 'timestamp=' + timeStamp.toString();\n\nList<int> key = convert.utf8.encode(this.apiSecret);\ncrypto.Hmac hmac = new crypto.Hmac(crypto.sha256, key);\nList<int> messageBytes = convert.utf8.encode(queryParams);\ncrypto.Digest digest = hmac.convert(messageBytes);\nString signature = hex.encode(digest.bytes);","760":"I'am new to ethereum, I canno't find the difference between a client and a node.\nI concider the client to be an mplementation of the node in a programming language such as go or js?","761":"mapping(uint => Product) public products;\n\nstruct Product {\n\n    uint id;\n    string name;\n    uint price;\n    address payable owner;\n    bool purchased;   \n}\n\nfunction purchaseProduct(unit _id) public payable {\n\n    Product memory _product = products[_id];\n    address payable _seller = _product.owner;\n    address payable _buyer = msg.sender;\n}\n\naddress(_seller).transfer(msg.value) works good.\nBut msg.sender.transfer(msg.value) and address(_buyer).transfer(msg.value) doesn't work.\nplease help me to fix this issue.","762":"I am trying to deploy Raiden smart contracts and start Raiden client on a private <geth> network using this tutorial from the Raiden team but it seems to be outdated and I am running into multiple errors, so I am able to deploy all the Raiden contracts with contract-version==0.25.0 successfully on <geth> v1.9.21-stable but starting up Raiden client v0.200.0-rc9-macOS-x86_64 I get this error\n[UserDeposit] Address 0x246c6c859B0ab7ab970cA2f3764B757c20CD5477 has wrong code. This may happen if Raiden is configured to use an unsupported version of the contracts.\nIt is the same error when I try with Raiden client v1.x.x. I decided to take another look at deploying Raiden contracts with contract-version==0.37.0 after failing to deploy on <geth> v1.10.1-stable, reaching out to the dev team and they suggested using v1.9.21-stable, but I get a vague error. which is hard to debug when deploying the TokenNetworkRegistry.sol\n raise ValueError(\"Status 0 indicates failure\")\nPrinting out <web3>.eth.getTransactionReceipt(txhash) for TokenNetworkRegistry.sol the status is indeed 0 and it throws an Out of Gas exception. Increasing the gas limit still throws the same exception.","763":"I have added MATIC Mumbai Testnet RPC and required info using this : https:\/\/docs.matic.network\/docs\/develop\/remix to metamask. That is added the network to it.\nNow I am using <web3> and calling\n    const <web3> = new <web3>('https:\/\/rpc-mumbai.matic.today');\n    const network = await <web3>.eth.net.getNetworkType();\n    const accounts = await <web3>.eth.getAccounts();\n   \n    console.log(accounts[0])\n\n\nI am getting undefined in the console.\nwhereas if I go for\n    const <web3> = new <web3>('http:localhost:7545');\n    const network = await <web3>.eth.net.getNetworkType();\n    const accounts = await <web3>.eth.getAccounts();\n   \n    console.log(accounts[0])\n\n\nwhich is my local network it works and I get the account address\nI feel like I am missing something, Can anyone help ?","764":"Could you tell me please, how i can call function in contract https:\/\/bscscan.com\/address\/0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F#readContract?\nI use <python>\ndef str_to_addr(s: str):\n    if s.startswith(\"0x\"):\n        return Address(bytes.fromhex(s[2:]))\n    elif s.endswith(\".eth\"):\n        return ENS(s)\n\nw3 = <web3>(<web3>.HTTPProvider('https:\/\/mainnet.infura.io\/v3\/....'))\nrouter_address = str_to_addr(\"0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F\")\nrouter = w3.eth.contract(address=router_address, abi=abi)\nprint(router.functions.factory().call())\n\nBut i get error <web3>.exceptions.BadFunctionCallOutput: Could not transact with\/call contract function, is contract deployed correctly and chain synced?\nWhat i should do?","765":"Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     This question does not appear to be about programming within the scope defined in the help center.\n                \n                    \n                        Closed 8 months ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nI am in the phase of studying a project's viability. I want to build a <blockchain> based web application where a user can submit his\/her piece of ART and convert it in Non-fungibel tokens and present it for selling. What i have learned is that we can limit the number of copies which can be created of each non-fungible token. However i am also interested that if we can track the usage of our item with the help of these NFTs as well? that means if a user buy my item let's say an image of mine which i have tokenized using NFT. can i track how many times this image has been used and where it is used ? my concern for tracking this info is to make sure that a proper license has been adopted before use and control illegal usage of the image.\nthanks!","766":"hi hope you are doing well. by the way I have a research on the frameworks used by <blockchain>. I found a problem while fixing the differences between Hyper-Ledger Fabric and hyper ledger Besu. can you help me","767":"I have an existing <hyperledger> Fabric network v1.4 and I am trying to connect to the network using Fabric node SDK 2.2.x. Every time I try to connect I get an error\nError : Pem Encoded certificate is required\n\nThe requirement that I have is that the network is v1.4 and the application code got reworked in SDK 2.2.x\ndue to the better event listener support but the existing wallet do not allow us to connect to the network. Is there a way we can connect with the already existing wallet to the network .\nAlso we cannot update the network as of now .\nI am a newbie here so I might have missed something that I am more than willing to answer when someone points it out.","768":"I've got some problems with starting my first <blockchain> network in <hyperledger> Fabric. You know that there's a tutorial how to build a test network, but when I'm trying to download Fabric (repository) with using a link in tutorial (curl -sSL *** bush -s), I get a message:\ncurl: (23) Failure writing output to destination. Sometimes it's written smth like 0!= 2415. I've read that it could be related with the access restrictions to the folder but nothing has changed after my changes. I'm new in <blockchain> practice so I really need your help. What should I do? Thank you!\np.s\n\ncurl version 7.75 (downloaded from the official site; has a path directory in the system configuration)\nOS Win 10 x64\ndocker version 20.10.5 (latest)\ndocker-compose version 1.28.5 (latest)\n<python>, Go and NPM are the latest also","769":"I want to create a TRON web wallet but I am a complete noob.\nMy first question is how do I generate addresses offline and with a private master key or with a mnemonic seed.\nThe second question is how can I query the balance of all addresses generated by me with a single request to TronGrid?","770":"I am working on <hyperledger> fabric 2.3 and I got this error whenever I try to use peer command.\nand followed the steps are as follows: https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.2\/deploy_chaincode.html#package-the-smart-contract So that I can use peer command outside the CLI.\nError: ERRO 001 Cannot run peer because cannot init crypto, specified path \"\/home\/ubuntu\/fabric-samples\/config\/msp\" does not exist or cannot be accessed: stat \/home\/ubuntu\/fabric-samples\/config\/msp: no such file or directory\nbash#  export PATH=${PWD}\/..\/bin:$PATH\nbash#  peer version\npeer:\nVersion: 2.3.1\nCommit SHA: 2f69b4222\nGo version: go1.14.12\nOS\/Arch: linux\/amd64\nChaincode:\nBase Docker Label: org.<hyperledger>.fabric\nDocker Namespace: <hyperledger>\nbash# peer channel list\n2021-03-16 08:12:25.954 UTC [main] InitCmd -> ERRO 001 Cannot run peer because cannot init crypto, specified path \"\/home\/ubuntu\/fabric-samples\/config\/msp\" does not exist or cannot be accessed: stat \/home\/ubuntu\/fabric-samples\/config\/msp: no such file or directory\n\nPlease do tell me what is the meaning of this error and how to resolve it.","771":"So I'm trying to learn to build NF token, and I cloned a repo. It's supposed to work with truffle.\nThe thing is I have an error with the compiler, and I don't really understand.  Indeed what I know is that the solidity compiler have problems with different versions, hence working with truffle CLI that works better with different versions projects.\nSo I tried to change to \"pragma solidity >0.5.8 <0.6.0;\", I did sudo truffle compile, and still have the error.\nThe error message I got is:\nmy typo `Source file requires different compiler version (current compiler is 0.7.4+commit.3f05b770.Emscripten.clang) - note that nightly builds are considered to be strictly less than the released version\nI know that I need to find a good version of solidity and truffle, but I believe that my versions are okay :\nTruffle v5.0.5 (core: 5.0.5) Solidity v0.5.0 (solc-js) Node v14.16.0","772":"i am new to <hyperledger> Aries and i can\u00c2\u00b4t figure out what i am doing wrong.\nEnvironment:\n\nUbuntu16LTS\nDocker 18.09.7 build 2d0083d\n<hyperledger>-aries-<python> version: 0.6.0 (sourcecode)\n\nFrom the aca-py repo (https:\/\/github.com\/<hyperledger>\/aries-cloudagent-<python> i run:\n.\/scripts\/run_docker start -e http:\/\/host.docker.internal:8000 -it http 0.0.0.0 8000 -ot http --admin 0.0.0.0 11000 --admin-insecure-mode --log-level DEBUG --genesis-url https:\/\/raw.githubusercontent.com\/CHempel-esatus\/SSI4DE_Genesis\/master\/pool_<transactions>_genesis --trace\nNOTE: I have tried different pool_genesis_transaction files and tried to pass them in various ways (via URL, via a File located in the docker conainer). It always drops the same or similar Info:\n2021-03-12 09:48:32,311 aries_cloudagent.config.ledger INFO Ledger instance not provided\n2021-03-12 09:48:32,312 aries_cloudagent.core.conductor WARNING No ledger configured\n\nHere is the full output:\n2021-03-12 09:48:31,035 asyncio DEBUG Using selector: EpollSelector\n2021-03-12 09:48:31,036 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.out_of_band\n2021-03-12 09:48:31,037 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.actionmenu\n2021-03-12 09:48:31,038 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.routing\n2021-03-12 09:48:31,039 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.discovery\n2021-03-12 09:48:31,041 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.introduction\n2021-03-12 09:48:31,041 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.problem_report\n2021-03-12 09:48:31,042 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.coordinate_mediation\n2021-03-12 09:48:31,043 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.present_proof\n2021-03-12 09:48:31,044 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.trustping\n2021-03-12 09:48:31,045 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.didexchange\n2021-03-12 09:48:31,047 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.issue_credential\n2021-03-12 09:48:31,048 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.basicmessage\n2021-03-12 09:48:31,050 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.protocols.connections\n2021-03-12 09:48:31,051 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.holder\n2021-03-12 09:48:31,057 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.ledger\n2021-03-12 09:48:31,072 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.messaging.credential_definitions\n2021-03-12 09:48:31,085 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.messaging.schemas\n2021-03-12 09:48:31,091 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.revocation\n2021-03-12 09:48:31,105 aries_cloudagent.core.plugin_registry DEBUG Loaded module: aries_cloudagent.wallet\n2021-03-12 09:48:31,119 aries_cloudagent.config.ledger INFO Fetching genesis <transactions> from: https:\/\/raw.githubusercontent.com\/CHempel-esatus\/SSI4DE_Genesis\/master\/pool_<transactions>_genesis\n2021-03-12 09:48:32,302 aries_cloudagent.core.profile INFO Create profile manager: in_memory\n2021-03-12 09:48:32,311 aries_cloudagent.config.ledger INFO Ledger instance not provided\n2021-03-12 09:48:32,312 aries_cloudagent.core.conductor WARNING No ledger configured\n\n::::::::::::::::::::::::::::::::::::::::::::::\n:: Aries Cloud Agent ::\n:: ::\n:: ::\n:: Inbound Transports: ::\n:: ::\n:: - http:\/\/0.0.0.0:8000 ::\n:: ::\n:: Outbound Transports: ::\n:: ::\n:: - http ::\n:: - https ::\n:: ::\n:: Administration API: ::\n:: ::\n:: - http:\/\/0.0.0.0:11000 ::\n:: ::\n:: ver: 0.6.0 ::\n::::::::::::::::::::::::::::::::::::::::::::::\n\nListening...\n\nLooking in the demos i just dont know why my aries can not connect to any indy-ledger.\nUsing indy-cli with the same genesis-files worked fine. The CLI was able to connect so i assume that all pool_genesis_files where correct.\nAm i doing something wrong or is something missing?","773":"I would like to ask how is it possible to register patients for example using Quorum . I am using solidity. When I am using the public Ethereum <blockchain>, I usually make a registration smart contract and add patients addresses in a mapping with a boolean. Then I check the value of the boolean before executing the functions to ensure that those addresses are allowed and registered. How can I do this in a private Ehtereum <blockchain>? Is it done in the same way? Can I simply make a smart contract like I do in a public <blockchain>? or is it done by an entity when designing the network ... like a membership service provider in <hyperledger> fabric?","774":"I am trying to compile and deploy a smart contract to Rinkeby with a <node.js> script. It is a course content I am following at Pluralsight. There it works, but it doesn't work for me. What is the error about?\nNOTE: I have a solc compiler 0.7.0. When I change the pragma solidity to 0.7.0 and do all the appropriate changes the error doesn't change.\nnode deploy.js\nCompiling the contract\nassert.js:350\n    throw err;\n    ^\n\nAssertionError [ERR_ASSERTION]: Invalid callback object specified.\n    at runWithCallbacks (C:\\COMP_DEV\\<blockchain>\\module_5\\node_modules\\solc\\wrapper.js:97:7)\n    at compileStandard (C:\\COMP_DEV\\<blockchain>\\module_5\\node_modules\\solc\\wrapper.js:207:14)\n    at Object.compileStandardWrapper [as compile] (C:\\COMP_DEV\\<blockchain>\\module_5\\node_modules\\solc\\wrapper.js:214:14)\n    at compileContract (C:\\COMP_DEV\\<blockchain>\\module_5\\deploy.js:24:33)\n    at Object.<anonymous> (C:\\COMP_DEV\\<blockchain>\\module_5\\deploy.js:5:16)\n    at Module._compile (internal\/modules\/cjs\/loader.js:688:30)\n    at Object.Module._extensions..js (internal\/modules\/cjs\/loader.js:699:10)\n    at Module.load (internal\/modules\/cjs\/loader.js:598:32)\n    at tryModuleLoad (internal\/modules\/cjs\/loader.js:537:12)\n    at Function.Module._load (internal\/modules\/cjs\/loader.js:529:3)\n    at Function.Module.runMain (internal\/modules\/cjs\/loader.js:741:12)\n    at startup (internal\/bootstrap\/<node.js>:285:19)\n    at bootstrapNodeJSCore (internal\/bootstrap\/<node.js>:739:3)\n\nThe contract is this one:\npragma solidity ^0.4.0;\n\ncontract Voter {\n\n    struct OptionPos {\n        uint pos;\n        bool exists;\n    }\n\n    uint[] public votes;\n    mapping (address => bool) hasVoted;\n    mapping (string => OptionPos) posOfOption;\n    string[] public options;\n    bool votingStarted;\n\n    function addOption(string option) public {\n        require(!votingStarted);\n        options.push(option);\n    }\n\n    function startVoting() public {\n        require(!votingStarted);\n        votes.length = options.length;\n\n        for (uint i = 0; i < options.length; i++) {\n            OptionPos memory option = OptionPos(i, true);\n            posOfOption[options[i]] = option;\n        }\n        votingStarted = true;\n    }\n\n    function vote(uint option) public {\n        require(0 <= option && option < options.length);\n        require(!hasVoted[msg.sender]);\n\n        hasVoted[msg.sender] = true;\n        votes[option] = votes[option] + 1;\n    }\n\n    function vote(string option) public {\n        require(!hasVoted[msg.sender]);\n        OptionPos memory optionPos = posOfOption[option];\n        require(optionPos.exists);\n\n        hasVoted[msg.sender] = true;\n        votes[optionPos.pos] = votes[optionPos.pos]++;\n    }\n\n    function getVotes() public view returns (uint[]) {\n        return votes;\n    }\n}\n\nand the deploy js script is this one:\nlet fs = require('fs');\nlet solc = require('solc')\nlet <web3> = require('<web3>');\n\nlet contract = compileContract();\nlet <web3> = create<web3>();\nlet sender = \"0xc3884e4e8e8ee58a7262a6c4910794e55513616a\";\n\n\ndeployContract(<web3>, contract, sender)\n    .then(function () {\n        console.log('Deployment finished')\n    })\n    .catch(function (error) {\n        console.log(`Failed to deploy contract: ${error}`)\n    })\n\nfunction compileContract() {\n    let compilerInput = {\n        'Voter': fs.readFileSync('Voter.sol', 'utf8')\n    };\n\n    console.log('Compiling the contract')\n    \/\/ Compile and optimize the contract\n    let compiledContract = solc.compile({sources: compilerInput}, 1);\n    \/\/ Get compiled contract\n    let contract = compiledContract.contracts['Voter:Voter']\n\n    \/\/ Save contract's ABI\n    let abi = contract.interface;\n    fs.writeFileSync('abi.json', abi);\n\n    return contract;\n}\n\nfunction create<web3>() {\n    let <web3> = new <web3>();\n    <web3>.setProvider(new <web3>.providers.HttpProvider('http:\/\/localhost:8545'));\n\n    return <web3>;\n}\n\nasync function deployContract(<web3>, contract, sender) {\n    let Voter = new <web3>.eth.Contract(JSON.parse(contract.interface));\n    let bytecode = '0x' + contract.bytecode;\n    let gasEstimate = await <web3>.eth.estimateGas({data: bytecode});\n\n    console.log('Deploying the contract');\n    const contractInstance = await Voter.deploy({\n        data: bytecode\n    })\n    .send({\n        from: sender,\n        gas: gasEstimate\n    })\n    .on('transactionHash', function(transactionHash) {\n        console.log(`Transaction hash: ${transactionHash}`);\n    })\n    .on('confirmation', function(confirmationNumber, receipt) {\n        console.log(`Confirmation number: ${confirmationNumber}`);\n    })\n\n    console.log(`Contract address: ${contractInstance.options.address}`);\n}","775":"I'm new to <blockchain>. My question is how can I get binance <blockchain> info without explorers (get block by number, get transaction by hash)? ETH has tools such as <geth> or <web3> where I can simply make a eth.getTransaction(hash) or eth.getBlock(number) requests and get any transaction\/block info. Binance has API but as far as I understand you can get info only for your wallet. Are there any official tools for binance <blockchain>? Where have explorers got binance <blockchain> info?","776":"I'm running into problems with a test that seems to indicate that Solidity can't change the value of a contract storage variable.\nHere's the test in JavaScript:\nconst Mystery = artifacts.require (\"Mystery\");\n\ncontract (\"Mystery\", async accounts => {\n\n    it (\"Incrementing performs as intended\", async () => {\n        const subject = await Mystery.deployed ();\n\n        const firstValue = (await subject.returnAndIncrement.call ()).toNumber ();\n        const secondValue = (await subject.returnAndIncrement.call ()).toNumber ();\n        const thirdValue = (await subject.returnAndIncrement.call ()).toNumber ();\n\n        assert.equal (\n            [firstValue, secondValue, thirdValue],\n            [100, 101, 102]\n        );\n    });\n});\n\nHere's the Solidity code:\npragma solidity >=0.4.22 <0.9.0;\n\ncontract Mystery {\n\n  uint32 private currentValue = 100;\n\n  function returnAndIncrement () public returns (uint32 value) {\n    value = currentValue;\n    currentValue = currentValue + 1;\n    return value;\n  }\n}\n\nAnd here are the relevant portions of the output from the test runner:\n  Contract: Mystery\n    1) Incrementing performs as intended\n    > No events were emitted\n\n\n  0 passing (993ms)\n  1 failing\n\n  1) Contract: Mystery\n       Incrementing performs as intended:\n\n      AssertionError: expected [ 100, 100, 100 ] to equal [ 100, 101, 102 ]\n      + expected - actual\n\n       [\n         100\n      -  100\n      -  100\n      +  101\n      +  102\n       ]\n      \n      at Context.it (test\/TestMystery.js:12:16)\n      at process._tickCallback (internal\/process\/next_tick.js:68:7)\n\nMy first thought was that there was some kind of race condition: that all three invocations were grabbing the initial value before any of them had a chance to increment it. But my reading indicates that Ethereum serializes operations so that you can't get races inside a single contract. Also, I tried inserting five-second pauses between the calls to returnAndIncrement() in an attempt to break any existing races, but there was no effect on the results.\nMy second thought was that there was something fundamental wrong with the configuration of my test, so that I was just getting zeros back regardless of what was actually happening. So I started the currentValue at 100 instead of 0, as you see above; that's not the issue.\nMy third thought was that when I think I'm copying the value of currentValue into value, what I'm actually doing is making value a reference to the value of currentValue, so that when I increment currentValue I'm also incrementing value. But if that were the case, I'd be getting [101, 102, 103] back instead of [100, 100, 100].","777":"If I run this command peer node pause -c mychannel the following error occurs;\nError: as another peer node command is executing, wait for that command to complete its execution or terminate it before retrying: lock is already acquired on file \/var\/<hyperledger>\/production\/ledgersData\/fileLock\nUsage:\n  peer node pause [flags]\n\nFlags:\n  -c, --channelID string   Channel to pause.\n  -h, --help               help for pause\n\n\/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer # peer node pause -h\nPauses a channel on the peer. When the command is executed, the peer must be offline. When the peer starts after a pause, it will not receive blocks for the paused channel.\n\nI Understood that the peer needs to be in the offline state in order to execute this command. But how can I make the peer offline. There is no such command as Peer node stop. The only way I see is to use the docker command to stop the container, but that doesn't make any sense, as if I stop the container I won't be able to sh into the container.\nAnyone please help me to execute the peer node pause command!","778":"In the <hyperledger> Fabric official website, it states to use the fabric-ca-client reenroll if a certificate is about to expire. I tried to reenoll the certificates but an x.509 error occurred:\n[grpc] createTransport -> DEBU bab grpc: addrConn.createTransport failed to connect to {orderer:7050 0  }. Err :connection error: desc = \"transport: authentication handshake failed: x509: certificate signed by unknown authority\". Reconnecting...\nI have used the same CA to reenroll the certificate, I don't know why \"unknown authority\" error shown.\nIt would be grateful if anyone can give me a full steps for replacing the admin certificate for the <hyperledger> Fabric.","779":"I have the following:\nstatic combinedHash(first: Buffer, second: Buffer): Buffer {\n    if (!first) {\n      return second\n    }\n    if (!second) {\n      return first\n    }\n    return keccak256(MerkleTree.sortAndConcat(first, second))\n  }\n\nkeccak256 is imported from ethereumjs-utils\nIt seems like that keccak256 returns Buffer.\nWhat I am trying to do is I want to change keccak256 from ethereumjs-utils to ethers\/lib\/utils, but new keccak256 doesn't return buffer. I tried lots of things, but the results are different. any ideas ? The final result should be that combinedHash function returns the same thing in the end so it should return Buffer.\nAny ideas ?","780":"Found a tutorial online for building a simple <blockchain> app on android studio but when I finished it has key missing declarations which are coming up as unused. My capabilities allow me to resolve most minor errors through the Run and Logcat monitors while debugging but a series of stacked issues like this seems to pose too large of an issue. Here are the pages that it specifies as missing declarations:\n<blockchain>Manager\n\n\npackage com.example.<blockchain>.managers;\n\nimport android.content.Context;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport com.example.<blockchain>.adapter.BlockAdapter;\nimport com.example.<blockchain>.models.BlockModel;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class <blockchain>Manager {\n\n    private final int difficulty;\n    private final List<BlockModel> blocks;\n    public final BlockAdapter adapter;\n\n\n\n    public <blockchain>Manager(int difficulty, @NonNull Context context) {\n\n        this.difficulty = difficulty;\n\n        blocks = new ArrayList<>();\n        BlockModel block = new BlockModel(0,System.currentTimeMillis(),null,\"Genesis Block\");\n        block.mineBlock(difficulty);\n        blocks.add(block);\n\n         adapter = new BlockAdapter(blocks,context);\n    }\n\n\n    public BlockModel newBlock(String data){\n\n        BlockModel latestBlock = lastestBlock();\n        return  new BlockModel(latestBlock.getIndex()+1,System.currentTimeMillis(),latestBlock.<geth>ash(),data);\n\n\n    }\n\n\n    private BlockModel lastestBlock() {\n\n        return  blocks.get(blocks.size()-1);\n\n    }\n\n    public  void addBlock(BlockModel block){\n\n        if (block!= null){\n            block.mineBlock(difficulty);\n            blocks.add(block);\n        }\n\n    }\n\n    private boolean isFirstBlockValid(){\n\n        BlockModel firstBlock = blocks.get(0);\n        if (firstBlock.getIndex()!=0){\n\n            return false;\n\n        }\n\n        if (firstBlock.getPreviousHash()!=null){\n\n            return  false;\n\n        }\n\n        return firstBlock.<geth>ash()!=null &&\n                BlockModel.calculateHash_detail(firstBlock).equals(firstBlock.<geth>ash());\n    }\n\n    private boolean isValidNewBlock(@Nullable BlockModel newBlock, @Nullable BlockModel previousBlock){\n\n        if (newBlock!=null && previousBlock!= null){\n\n            if (previousBlock.getIndex()+1!=newBlock.getIndex()){\n\n                return  false;\n\n            }\n\n            if (newBlock.getPreviousHash()==null || !newBlock.getPreviousHash().equals(newBlock.getData())){\n\n                return  false;\n\n            }\n\n            return  newBlock.<geth>ash()!=null &&\n                    BlockModel.calculateHash_detail(newBlock).equals(newBlock.<geth>ash());\n\n        }\n\n        return false;\n\n    }\n\n    public boolean is<blockchain>Valid(){\n\n        if (!isFirstBlockValid()){\n            return  false;\n\n        }\n        for (int i = 1 ; i<blocks.size();i++){\n\n            BlockModel currentBlock = blocks.get(i);\n            BlockModel previousBlock = blocks.get(i-1);\n            if (!isValidNewBlock(currentBlock,previousBlock))\n                return  false;\n\n        }\n\n        return  true;\n\n    }\n\n}\n\n\n\nBlockModel\n\n\npackage com.example.<blockchain>.models;\n\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n\npublic class BlockModel {\n\n    private int index,nonce;\n    private long timestamp;\n    private String hash,previousHash,data;\n\n    public BlockModel(int index, long timestamp, String previousHash, String data) {\n        this.index = index;\n        this.timestamp = timestamp;\n        this.previousHash = previousHash;\n        this.data = data;\n        nonce = 0;\n        hash = BlockModel.calculateHash_detail(this);\n\n\n    }\n\n    public static String calculateHash_detail(BlockModel blockModel) {\n\n        if (blockModel!= null){\n\n            MessageDigest messageDigest;\n            try{\n\n                messageDigest = MessageDigest.getInstance(\"SHA-256\");\n\n\n            }\n\n            catch (NoSuchAlgorithmException e){\n                return null;\n            }\n\n            String txt = blockModel.str();\n            final  byte[] bytes = messageDigest.digest(txt.getBytes());\n            final StringBuilder builder = new StringBuilder();\n            for (final byte b: bytes){\n\n                String hex = Integer.toHexString(0xff & b);\n                if (hex.length()==1){\n\n                    builder.append('0');\n\n                }\n\n                builder.append(hex);\n\n            }\n\n            return builder.toString();\n\n        }\n\n        return null;\n\n    }\n\n    private String str() {\n\n        return index + timestamp + previousHash + data + nonce;\n\n    }\n\n    public int getIndex() {\n        return index;\n    }\n\n    public void setIndex(int index) {\n        this.index = index;\n    }\n\n    public int getNonce() {\n        return nonce;\n    }\n\n    public void setNonce(int nonce) {\n        this.nonce = nonce;\n    }\n\n    public long getTimestamp() {\n        return timestamp;\n    }\n\n    public void setTimestamp(long timestamp) {\n        this.timestamp = timestamp;\n    }\n\n    public String <geth>ash() {\n        return hash;\n    }\n\n    public void setHash(String hash) {\n        this.hash = hash;\n    }\n\n    public String getPreviousHash() {\n        return previousHash;\n    }\n\n    public void setPreviousHash(String previousHash) {\n        this.previousHash = previousHash;\n    }\n\n    public String getData() {\n        return data;\n    }\n\n    public void setData(String data) {\n        this.data = data;\n    }\n\n    public void mineBlock(int difficulty){\n\n        nonce = 0;\n        while(!<geth>ash().substring(0,difficulty).equals(addZeros(difficulty))){\n            nonce++;\n            hash = BlockModel.calculateHash_detail(this);\n\n\n        }\n\n    }\n\n    private String addZeros(int difficulty) {\n\n        StringBuilder builder = new StringBuilder();\n        for (int i = 0 ; i<difficulty; i++) {\n            builder.append('0');\n        }\n        return builder.toString();\n    }\n\n\n}\n\n\n\nCipherUtils\n\n\npackage com.example.<blockchain>.utils;\n\nimport android.util.Base64;\n\nimport androidx.annotation.NonNull;\n\nimport java.nio.charset.StandardCharsets;\nimport java.security.InvalidKeyException;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.spec.InvalidKeySpecException;\n\nimport javax.crypto.BadPaddingException;\nimport javax.crypto.Cipher;\nimport javax.crypto.IllegalBlockSizeException;\nimport javax.crypto.NoSuchPaddingException;\nimport javax.crypto.SecretKey;\nimport javax.crypto.SecretKeyFactory;\nimport javax.crypto.spec.DESKeySpec;\n\npublic class CipherUtils {\n\n    private static final String PASSWORD = \"Saf fur yoU\";\n    private static final String ALGORITHM = \"DES\";\n\n    public static String encryptIt(@NonNull String value){\n\n        try{\n\n            DESKeySpec keySpec = new DESKeySpec(PASSWORD.getBytes(StandardCharsets.UTF_8));\n            SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(ALGORITHM);\n            SecretKey key = keyFactory.generateSecret(keySpec);\n            byte [] clearText = value.getBytes(StandardCharsets.UTF_8);\n            Cipher cipher = Cipher.getInstance(\"ALGORITHM\");\n            cipher.init(Cipher.ENCRYPT_MODE,key);\n            return Base64.encodeToString(cipher.doFinal(clearText),Base64.DEFAULT);\n\n        }\n\n        catch (InvalidKeyException | InvalidKeySpecException | NoSuchAlgorithmException | BadPaddingException | NoSuchPaddingException | IllegalBlockSizeException e){\n\n            e.printStackTrace();\n        }\n\n        return value;\n\n    }\n\n    public static String decryptIt(@NonNull String value){\n\n        try{\n\n            DESKeySpec keySpec = new DESKeySpec(PASSWORD.getBytes(StandardCharsets.UTF_8));\n            SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(ALGORITHM);\n            SecretKey key = keyFactory.generateSecret(keySpec);\n            byte [] encryptedPwdBytes = Base64.decode(value,Base64.DEFAULT);\n            Cipher cipher = Cipher.getInstance(\"ALGORITHM\");\n            cipher.init(Cipher.DECRYPT_MODE,key);\n            byte [] decryptedValueBytes = (cipher.doFinal(encryptedPwdBytes));\n            return new String(decryptedValueBytes);\n\n        }\n\n        catch (InvalidKeyException | InvalidKeySpecException | NoSuchAlgorithmException | BadPaddingException | NoSuchPaddingException | IllegalBlockSizeException e){\n\n            e.printStackTrace();\n        }\n\n        return value;\n\n    }\n\n}\n\n\n\nMainActivity\n\n\npackage com.example.<blockchain>;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.app.AppCompatDelegate;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.app.ProgressDialog;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.PowerManager;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Toast;\n\nimport com.example.<blockchain>.fragments.PowFragment;\nimport com.example.<blockchain>.databinding.ActivityMainBinding;\nimport com.example.<blockchain>.databinding.ContentMainBinding;\nimport com.example.<blockchain>.managers.<blockchain>Manager;\nimport com.example.<blockchain>.managers.SharedPreferencesManager;\nimport com.example.<blockchain>.utils.CipherUtils;\n\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\n\n    private ContentMainBinding viewBindingContent;\n    private ProgressDialog progressDialog;\n    private SharedPreferencesManager prefs;\n    private <blockchain>Manager <blockchain>;\n    private boolean isEncryptionActivated, isDarkActivated;\n\n    private static final String TAG_POW_DIALOG = \"proof_of_work_dialog\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        prefs = new SharedPreferencesManager(this);\n        isDarkActivated = prefs.isDarkTheme();\n        PowerManager powerManager = (PowerManager)getSystemService(POWER_SERVICE);\n        boolean isPowerSaveMode = false;\n\n        if (powerManager!=null){\n\n            isPowerSaveMode = powerManager.isPowerSaveMode();\n\n        }\n        if(isPowerSaveMode){\n\n            isPowerSaveMode = powerManager.isPowerSaveMode();\n\n        }else{\n\n            if (isDarkActivated){\n\n                AppCompatDelegate.setDefaultNightMode(\n\n                        AppCompatDelegate.MODE_NIGHT_YES\n\n                );\n\n            }else{\n\n                AppCompatDelegate.setDefaultNightMode(\n\n                        AppCompatDelegate.MODE_NIGHT_NO\n\n                );\n\n            }\n\n        }\n\n        super.onCreate(savedInstanceState);\n\n        final ActivityMainBinding viewBinding = ActivityMainBinding.inflate(getLayoutInflater());\n        viewBindingContent = ContentMainBinding.bind(viewBinding.contentMain.getRoot());\n        setContentView(R.layout.activity_main);\n        isEncryptionActivated = prefs.getEncryptionStatus();\n        viewBindingContent.recyclerContent.setHasFixedSize(true);\n        viewBindingContent.recyclerContent.setLayoutManager(new LinearLayoutManager(this, RecyclerView.VERTICAL,false));\n        showProgressDialog(getResources().getString(R.string.text_creating_block_chain));\n\n        new Thread(() -> runOnUiThread(() -> {\n            <blockchain> = new <blockchain>Manager(prefs.getPowValue(),this);\n            viewBindingContent.recyclerContent.setAdapter(<blockchain>.adapter);\n            cancelProgressDialog(progressDialog);\n\n        })).start();\n        viewBindingContent.btnSendData.setOnClickListener(this);\n\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n    }\n\n    private void start<blockchain>() {\n\n        showProgressDialog(getResources().getString(R.string.text_mining_blocks));\n        runOnUiThread(() -> {\n\n            if (<blockchain> != null && viewBindingContent.editMessage.getText() != null && viewBindingContent.recyclerContent.getAdapter() != null) {\n                String message = viewBindingContent.editMessage.getText().toString();\n\n                if (!message.isEmpty()) {\n\n                    if (!isEncryptionActivated) {\n\n                        <blockchain>.addBlock(<blockchain>.newBlock(message));\n\n                    } else {\n\n                        try {\n\n                            <blockchain>.addBlock(<blockchain>.newBlock(CipherUtils.encryptIt(message).trim()));\n\n                        } catch (Exception e) {\n\n                            e.printStackTrace();\n\n                            Toast.makeText(this, \"Something fishy happened\", Toast.LENGTH_SHORT).show();\n\n                        }\n\n                    }\n\n                    viewBindingContent.recyclerContent.scrollToPosition(<blockchain>.adapter.getItemCount() - 1);\n\n                    if (<blockchain>.is<blockchain>Valid()) {\n\n                        viewBindingContent.recyclerContent.getAdapter().notifyDataSetChanged();\n                        viewBindingContent.editMessage.setText(\"\");\n\n                    } else {\n\n                        Toast.makeText(this, \"<blockchain> Corrupted\", Toast.LENGTH_SHORT).show();\n\n                    }\n                } else {\n\n                        Toast.makeText(this, \"Error empty data\", Toast.LENGTH_SHORT).show();\n\n                    }\n\n                    cancelProgressDialog(progressDialog);\n\n                } else {\n\n                    Toast.makeText(this, \"Something wrong happened\", Toast.LENGTH_SHORT).show();\n\n                }\n\n        });\n\n    }\n\n    @Override\n    public void onClick(View view) {\n        if (view.getId()==R.id.btn_send_data)\n            start<blockchain>();\n    }\n\n    private void showProgressDialog(@NonNull String loadingMessage){\n\n        progressDialog = new ProgressDialog(MainActivity.this);\n        progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\n        progressDialog.setMessage(loadingMessage);\n        progressDialog.setCancelable(false);\n        progressDialog.setMax(100);\n        progressDialog.show();\n\n    }\n\n    private void cancelProgressDialog(@NonNull ProgressDialog progressDialog){\n\n        if(progressDialog!=null){\n\n            progressDialog.cancel();\n\n        }\n\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu1,menu);\n        return  true;\n    }\n\n    @Override\n    public boolean onPrepareOptionsMenu(Menu menu) {\n        MenuItem checkEncrypt = menu.findItem(R.id.action_encrypt);\n        checkEncrypt.setChecked(isEncryptionActivated);\n        MenuItem checkTheme = menu.findItem(R.id.action_dark);\n        checkTheme.setChecked(isDarkActivated);\n        return  true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n\n        switch (item.getItemId()){\n\n            case  R.id.action_pow:\n                PowFragment powFragment = PowFragment.newInstance();\n                powFragment.show(this.getSupportFragmentManager(),TAG_POW_DIALOG);\n                break;\n\n            case R.id.action_encrypt:\n                isEncryptionActivated = !item.isChecked();\n                item.setChecked(isEncryptionActivated);\n                if (item.isChecked()){\n\n                    Toast.makeText(this, \"Message Encryption ON\", Toast.LENGTH_SHORT).show();\n\n                }else{\n\n                    Toast.makeText(this, \"Message Encryption OFF\", Toast.LENGTH_SHORT).show();\n\n                }\n\n                prefs.setEncryptionStatus(isEncryptionActivated);\n                return  true;\n\n            case R.id.action_dark:\n                isDarkActivated =!item.isChecked();\n                item.setChecked(isDarkActivated);\n                prefs.setDarkTheme(isDarkActivated);\n                    Intent intent = this.getPackageManager().getLaunchIntentForPackage(this.getPackageName());\n                    startActivity(intent);\n                    finish();\n                    return true;\n\n            case R.id.action_exit:\n                finish();\n                break;\n\n            default:\n                return super.onOptionsItemSelected(item);\n\n        }\n\n        return  super.onOptionsItemSelected(item);\n\n    }\n}\n\n\n\nPoWFragment\n\n\npackage com.example.<blockchain>.fragments;\n\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Bundle;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.DialogFragment;\nimport androidx.fragment.app.Fragment;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.Window;\n\nimport com.example.<blockchain>.R;\nimport com.example.<blockchain>.databinding.FragmentPowBinding;\nimport com.example.<blockchain>.managers.SharedPreferencesManager;\n\n\/**\n * A simple {@link Fragment} subclass.\n * Use the {@link PowFragment#newInstance} factory method to\n * create an instance of this fragment.\n *\/\npublic class PowFragment extends DialogFragment implements View.OnClickListener {\n\n    private FragmentPowBinding viewBinding;\n    private Context mcontext;\n    private SharedPreferencesManager prefs;\n\n\n    public PowFragment() {\n        \/\/ Required empty public constructor\n    }\n\n    public static PowFragment newInstance() {\n\n        return new PowFragment();\n    }\n\n    @Override\n    public void onAttach(@NonNull Context context) {\n\n        super.onAttach(context);\n        mcontext = context.getApplicationContext();\n\n    }\n\n    @Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        viewBinding = FragmentPowBinding.inflate(getLayoutInflater(), container, false);\n        return viewBinding.getRoot();\n    }\n\n    @Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        prefs = new SharedPreferencesManager(mcontext);\n        viewBinding.edtSetPow.setText(String.valueOf(prefs.getPowValue()));\n        viewBinding.btnClose.setOnClickListener(this);\n        viewBinding.btnContinue.setOnClickListener(this);\n\n    }\n\n    @NonNull\n    @Override\n    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n\n        Dialog dialog = super.onCreateDialog(savedInstanceState);\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\n        if (dialog.getWindow() != null) {\n\n            dialog.getWindow().setLayout(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n\n        }\n\n        return dialog;\n\n    }\n\n    @Override\n    public void onClick(View view) {\n        switch (view.getId()) {\n\n            case R.id.btn_close:\n                dismiss();\n                break;\n            case R.id.btn_continue:\n                if (viewBinding.edtSetPow.getText() != null) {\n\n                    String pow = viewBinding.edtSetPow.getText().toString();\n                    prefs.setPowValue(Integer.parseInt(pow));\n\n                    if (getActivity() != null) {\n\n                        Intent intent = mcontext.getPackageManager().getLaunchIntentForPackage(mcontext.getPackageName());\n                        startActivity(intent);\n                        getActivity().finish();\n\n                    } else {\n\n                        dismiss();\n\n                    }\n\n                    break;\n\n                }\n        }\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        viewBinding = null;\n        mcontext = null;\n    }\n\n}\n\n\n\nSharedPreferencesManager\n\n\npackage com.example.<blockchain>.managers;\n\nimport android.content.Context;\nimport android.content.SharedPreferences;\n\npublic class SharedPreferencesManager {\n\n    private final SharedPreferences sharedPreferences;\n    private final SharedPreferences.Editor editor;\n    private static final String PREFERENCES_DATA = \"com.example.<blockchain>\";\n    private static final String ENCRYPTION_STATUS = \"encryption_status\";\n    private static final String DARK_THEME = \"dark_theme\";\n    private static final String PROOF_OF_WORK = \"proof_of_work\";\n    public static final int DEFAULT_PROOF_OF_WORK = 2;\n\n    public SharedPreferencesManager(Context context) {\n        sharedPreferences = context.getSharedPreferences(PREFERENCES_DATA,Context.MODE_PRIVATE);\n        editor = sharedPreferences.edit();\n        editor.apply();\n    }\n\n    public void setPowValue(int powValue){\n        editor.putInt(PROOF_OF_WORK,powValue);\n        editor.commit();\n\n    }\n\n    public int getPowValue(){\n\n        return  sharedPreferences.getInt(PROOF_OF_WORK,DEFAULT_PROOF_OF_WORK);\n\n    }\n\n    public  void  setEncryptionStatus(boolean isActivated){\n\n        editor.putBoolean(ENCRYPTION_STATUS,isActivated);\n        editor.commit();\n\n    }\n\n    public  boolean getEncryptionStatus(){\n\n        return sharedPreferences.getBoolean(ENCRYPTION_STATUS,false);\n\n    }\n\n    public  void setDarkTheme(boolean isActivated){\n\n        editor.putBoolean(DARK_THEME,isActivated);\n        editor.commit();\n\n    }\n\n    public boolean isDarkTheme(){\n\n        return sharedPreferences.getBoolean(DARK_THEME,false);\n\n    }\n}\n\n\n\nIf for any reason the Manifest will help:\n\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\n    package=\"com.example.<blockchain>\">\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap\/ic_launcher\"\n        android:label=\"@string\/app_name\"\n        android:roundIcon=\"@mipmap\/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style\/AppTheme\"\n        android:fullBackupContent=\"@xml\/backup_descriptor\">\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" \/>\n\n                <category android:name=\"android.intent.category.LAUNCHER\" \/>\n            <\/intent-filter>\n        <\/activity>\n    <\/application>\n\n<\/manifest>\n\n\n\nThese errors seem to be centered around a specific class meant to integrate the <blockchain> into the App FrameWork, but this has used its declarations:\nBlock Adapter\n\n\npackage com.example.<blockchain>.adapter;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.animation.Animation;\nimport android.view.animation.AnimationUtils;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.example.<blockchain>.R;\nimport com.example.<blockchain>.models.BlockModel;\nimport com.example.<blockchain>.viewholder.RecyclerViewHolder;\n\nimport java.util.Date;\nimport java.util.List;\n\npublic class BlockAdapter extends RecyclerView.Adapter<RecyclerViewHolder> {\n\n    private final List<BlockModel> blocks;\n    private final Context mcontext;\n    private int lastPosition = -1;\n\n    public BlockAdapter(@Nullable List<BlockModel> blocks, @NonNull Context mcontext) {\n        this.blocks = blocks;\n        this.mcontext = mcontext;\n    }\n\n    @NonNull\n    @Override\n    public RecyclerViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n\n        final View view = LayoutInflater.from(parent.getContext()).inflate(viewType,parent,false);\n\n        return new RecyclerViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull RecyclerViewHolder holder, int position) {\n\n        holder.txtIndex.setText(String.format(\n                mcontext.getString(R.string.title_block_number),blocks.get(position).getIndex()\n        ));\n        holder.txtPreviousHash.setText(blocks.get(position).getPreviousHash()!=null ? blocks.get(position).getPreviousHash(): \"Null\");\n        holder.txtTimestamp.setText(String.valueOf(new Date(blocks.get(position).getTimestamp())));\n        holder.txtData.setText(blocks.get(position).getData());\n        holder.txtHash.setText(blocks.get(position).<geth>ash());\n        setAnimation(holder.itemView,position);\n\n\n    }\n\n    private void setAnimation(View itemView, int position) {\n\n        if (position>lastPosition){\n\n            Animation animation = AnimationUtils.loadAnimation(mcontext,android.R.anim.fade_in);\n            itemView.startAnimation(animation);\n            lastPosition = position;\n\n        }\n\n\n    }\n\n    @Override\n    public int getItemViewType(int position) {\n        return R.layout.item_block_data;\n    }\n\n    @Override\n    public int getItemCount() {\n        return blocks == null ? 0:blocks.size();\n\n    }\n}\n\n\n\nLet me know if anything else might help resolve these issues.\nHere is the link to the video however the advertised \"FREE\" learning actually requires $30 for the source code once you realize what you have received does not work: https:\/\/www.youtube.com\/watch?v=c5E_yBMt7Io&t=1s\nSince I'm not an idiot I did not send someone money simply because they shared a few chopped up videos and asked for it in an email, but the lengthy 7-part series to deceive people into obligatorily purchasing after the \"FREE\" learning is illegal misrepresentation as well as unethically conning people interested in the fledgling <blockchain> technologies.\nAny help is greatly appreciated!","781":"I have a question that I need to implement <blockchain> for tamper proof record so what laptop specifications would be required to implement <blockchain>?","782":"I'm having trouble figuring out the issue while packaging Smart Contract on the IBM <blockchain> Platform on Visual Studio Code. I installed the following:\n<node.js> v14.16.0\nnpm 6.14.11\nDocker version 19.03.13, build cd8016b6bc\ndocker-compose version 1.25.5, build unknown\nI successfully create a new smart contract project. When I ram command - package open project in Command Pallete.\nI received this error message:\n> Executing task in folder demoContract: npm run build <\n\n\n> demoContract@0.0.1 build \/home\/shubham14\/Desktop\/Major project - <blockchain>\/demoContract\n> tsc\n\nsh: 1: tsc: not found\n\nnpm ERR! code ELIFECYCLE\n\nnpm ERR! syscall spawn\n\nnpm ERR! file sh\n\nnpm ERR! errno ENOENT\n\nnpm ERR! demoContract@0.0.1 build: `tsc`\n\nnpm ERR! spawn ENOENT\n\nnpm ERR! \n\nnpm ERR! Failed at the demoContract@0.0.1 build script.\n\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n\nnpm WARN Local package.json exists, but node_modules missing, did you mean to install?\n\nnpm ERR! A complete log of this run can be found in:\n\nnpm ERR!     \/home\/shubham14\/.npm\/_logs\/2021-03-03T11_38_29_505Z-debug.log\nThe terminal process \"\/bin\/bash '-c', 'npm run build'\" terminated with exit code: 1.\n\nTerminal will be reused by tasks, press any key to close it.\n\n**Debug-log :**\n0 info it worked if it ends with ok\n\n1 verbose cli [ '\/usr\/local\/bin\/node', '\/usr\/local\/bin\/npm', 'run', 'build' ]\n\n2 info using npm@6.14.11\n\n3 info using node@v14.16.0\n\n4 verbose run-script [ 'prebuild', 'build', 'postbuild' ]\n\n5 info lifecycle demoContract@0.0.1~prebuild: demoContract@0.0.1\n\n6 info lifecycle demoContract@0.0.1~build: demoContract@0.0.1\n\n7 verbose lifecycle demoContract@0.0.1~build: unsafe-perm in lifecycle true\n\n8 verbose lifecycle demoContract@0.0.1~build: PATH: \/usr\/local\/lib\/node_modules\/npm\/node_modules\/npm-lifecycle\/node-gyp-bin:\/home\/shubham14\/Desktop\/Major project - <blockchain>\/demoContract\/node_modules\/.bin:\/home\/shubham14\/Desktop\/jdk-14\/bin:\/home\/shubham14\/anaconda3\/lib\/graphviz:\/home\/apache-maven-3.6.3\/bin:\/home\/shubham14\/anaconda3\/bin:\/home\/shubham14\/anaconda3\/condabin:\/home\/shubham14\/jdk-14_linux-x64_bin\/jdk-14\/bin:\/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin:\/usr\/games:\/usr\/local\/games:\/snap\/bin\n\n9 verbose lifecycle demoContract@0.0.1~build: CWD: \/home\/shubham14\/Desktop\/Major project - <blockchain>\/demoContract\n\n10 silly lifecycle demoContract@0.0.1~build: Args: [ '-c', 'tsc' ]\n\n11 info lifecycle demoContract@0.0.1~build: Failed to exec build script\n\n12 verbose stack Error: demoContract@0.0.1 build: `tsc`\n12 verbose stack spawn ENOENT\n12 verbose stack     at ChildProcess.<anonymous> (\/usr\/local\/lib\/node_modules\/npm\/node_modules\/npm-lifecycle\/lib\/spawn.js:48:18)\n12 verbose stack     at ChildProcess.emit (events.js:315:20)\n12 verbose stack     at maybeClose (internal\/child_process.js:1048:16)\n12 verbose stack     at Process.ChildProcess._handle.onexit (internal\/child_process.js:288:5)\n\n13 verbose pkgid demoContract@0.0.1\n\n14 verbose cwd \/home\/shubham14\/Desktop\/Major project - <blockchain>\/demoContract\n\n15 verbose Linux 5.4.0-42-generic\n\n16 verbose argv \"\/usr\/local\/bin\/node\" \"\/usr\/local\/bin\/npm\" \"run\" \"build\"\n\n17 verbose node v14.16.0\n\n18 verbose npm  v6.14.11\n\n19 error code ELIFECYCLE\n\n20 error syscall spawn\n\n21 error file sh\n\n22 error errno ENOENT\n\n23 error demoContract@0.0.1 build: `tsc`\n\n23 error spawn ENOENT\n\n24 error Failed at the demoContract@0.0.1 build script.\n\n24 error This is probably not a problem with npm. There is likely additional logging output above.\n\n25 verbose exit [ 1, true ]","783":"hello Guys !\ni'm trying to create a Dapp contracts it works perfectly in 0.4.2 but giving me errors in\nlatest Sol compiler version.\n    pragma solidity >=0.7.0 <0.8.0;\n    function endSale() public {\n        require(msg.sender == admin);\n        require(tokenContract.transfer(admin, tokenContract.balanceOf(address(this)) ));\n        admin.transfer( address payable(this).balance)\n    }\n}\n\nERROR","784":"I got an error while deploying contract in Binance Smart Chain\nplz help me if anybody knows it\nerror message looks like this\n   Deploying 'WhitePaperInterestRateModel'\n   ---------------------------------------\n   > transaction hash:    0xa24026a456f81238422b262cc49bcb9ee494997b70ea8d41c092710f98b27d50\n   \u00e2\u00a0\u00a7 Blocks: 23           Seconds: 69Error [ERR_UNHANDLED_ERROR]: Unhandled error. ({\n  code: -32603,\n  message: 'ETIMEDOUT',\n  data: { originalError: { code: 'ETIMEDOUT', connect: true } },\n  stack: 'Error: ETIMEDOUT\\n' +\n    '    at Timeout.<anonymous> (\/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/request\/request.js:848:19)\\n' +\n    '    at listOnTimeout (node:internal\/timers:556:17)\\n' +\n    '    at processTimers (node:internal\/timers:499:7)'\n})\n    at new NodeError (node:internal\/errors:329:5)\n    at <web3>ProviderEngine.emit (node:events:368:17)\n    at \/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/@trufflesuite\/<web3>-provider-engine\/index.js:57:14\n    at afterRequest (\/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/@trufflesuite\/<web3>-provider-engine\/index.js:151:21)\n    at \/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/@trufflesuite\/<web3>-provider-engine\/index.js:176:21\n    at \/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/@trufflesuite\/<web3>-provider-engine\/index.js:238:9\n    at \/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/async\/internal\/once.js:12:16\n    at replenish (\/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/async\/internal\/eachOfLimit.js:61:25)\n    at \/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/async\/internal\/eachOfLimit.js:71:9\n    at eachLimit (\/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/async\/eachLimit.js:43:36)\n    at \/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/async\/internal\/doLimit.js:9:16\n    at end (\/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/@trufflesuite\/<web3>-provider-engine\/index.js:217:5)\n    at Request._callback (\/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/@trufflesuite\/<web3>-provider-engine\/subproviders\/rpc.js:36:21)\n    at self.callback (\/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/request\/request.js:185:22)\n    at Request.emit (node:events:379:20)\n    at Timeout.<anonymous> (\/Users\/hyunki\/Desktop\/compound\/compound_test\/truffle-compound-bsc\/venus-protocol\/node_modules\/request\/request.js:851:16)\n    at listOnTimeout (node:internal\/timers:556:17)\n    at processTimers (node:internal\/timers:499:7)\n\ntruffle-config.js\n    testnet: {\n      provider: () => new HDWalletProvider(mnemonic, `https:\/\/data-seed-prebsc-1-s2.binance.org:8545\/`),\n      network_id: 97,\n      gas: 20000000,        \/\/ Ropsten has a lower block limit than mainnet\n      gasPrice: 20000000000,  \/\/ 20 gwei (in wei) (default: 100 gwei)\n      confirmations: 1,\n      timeoutBlocks: 50000,\n      skipDryRun: true\n    },\n\n\nI got endpoint at the page below\nhttps:\/\/docs.binance.org\/smart-chain\/developer\/rpc.html","785":"Don't kill me if I'm about to ask something stupid. But I'm very noobish in this whole crypto world, and I'm terribly fascinated about its technology.\nSo just for education purposes I've decided to build my own <blockchain> following more or less the bitcoin principles (ECC keypair generation using the secpbk1 curve, SHA256 as hashing algo, dynamic diff based on the timestamp of the previous block, p2p connectivity etc..). But I've came to a point where I'm pretty confused about the <blockchain>'s wallet itself.\nFor what I've learned so far, each transaction has to be signed by a wallet. So my <transactions> has basically three fields: input, outputs and id. Since the user's wallet signs the outputs field of the transaction, this can't be changed anymore without being signed again by the same private key that belongs to the public key contained in the input field, how can I reward the miners?\nIf I got it right, the miner creates a transaction signed somehow by the chain using the fee in the outputs field, or by asking the chain itself to generate and sign a special reward transaction for that miner.\nThe guide that I was following was using the second approach, and was generating a <blockchain> wallet each time the program was executed on a client. This approach left me perplexed:\nwouldn't a client generate a new wallet for \"his\" <blockchain> each time it goes back online? If so, wouldn't this create a mess on the <transactions> signed on the chain? Since each miner (therefore peer) signing its own reward would use a different <blockchain> wallet than the other peers? Wouldn't this lead to any problems?\nThe first one that I might think of, is that if we generate a new <blockchain> wallet that signs rewards for miners, each peer would create a different wallet, so wouldn't this lead to many \"ghosts\" wallets in the chain, that spits out rewards tokens from nowhere? Is this supposed to happen?\nFor what I think is definitively more straightforward to use the fee amount to reward the miner, but this doesn't solve my doubts at all. Since the outputs of the <transactions> are signed upon creation, how could the peer initiating the transaction know upfront the possible miner who finds the block? And if he can't know it, how could possibly the miner \"extract\" its reward without tampering the transaction itself? Of course it could create a new transaction, and add that to the block. But who would sign that transaction? From where those reward tokens come?\nAnd if the answer is not to generate a new wallet each time, where could you possibly store that very first private key of the chain's wallet where no one can see it, but still be able to use it, without having to put a server in the middle?\nWhich in my opinion breaks the whole decentralized concept and would add a single point of failure.\nI've also implemented a <transactions> pool, that automatically filters out invalid (tampered) <transactions>, whenever a miner requests a sub set of them to stamp in a block. But does this mean that the miner for that only exception can tamper the transaction since it'll be \"forged\" in the block? So who gives a *** if it was tampered once it got in the chain? MEEEEEH that doesn't sound nice at all.\nI'm terribly confused, and I'm dreaming key pairs at night. Please help me.","786":"I would be so thankfull if someone can help me out with this program that i want to test out. It's an E-voting program, <blockchain> based.\nThe problem i'm getting is on the first option, Cast Votes. It asks for role, in order for it to work, u first need to run the server, and than run client which will connect to the server. So, when u enter server on the input, it's all okay, but then, u try to enter client server_address port which will connect the client to the server, and it just doesn't do anything.\nprivate static final String DEFAULT_SERVER_ADDR = \"localhost\";\nprivate static final int DEFAULT_PORT = 6777;\n\n\/*\n * Everything starts from here!\n *\/\npublic static void main(String[] args) {\n    \/*int clientId=0;*\/\n    System.out.println(\" ----- MAIN MENU ----- \\n\");\n    System.out.println(\"1. Cast Votes\");\n    System.out.println(\"2. View Votes on <blockchain>\");\n    System.out.println(\"3. Count Votes\");\n    System.out.println(\"0. Exit\\n\");\n\n    Scanner scanner = new Scanner(System.in);\n\n    System.out.println(\"Enter your choice: \");\n    int ch = scanner.nextInt();\n\n    if(ch == 1)\n    {\n        System.out.println(\"\\n ----- Casting Votes ----- \\n\");\n        System.out.println(\"Please choose a role you want to be: server or client.\");\n        System.out.println(\"server PORT - The port to listen to; \\\"6777\\\" is default port.\");\n        System.out.println(\"client SERVER_ADDRESS PORT - The server address and port to connect to; \\\"localhost:6777\\\" is default address-prt combination.\");\n        System.out.println(\"Make sure run the server first and then run client to connect to it.\");\n        System.out.println(\"> ---------- \");\n\n        Scanner in = new Scanner(System.in);\n        String line = in.nextLine();\n        String[] cmd = line.split(\"\\\\s+\");\n\n        if (cmd[0].contains(\"s\"))\n        {   \/\/ server selected\n\n            \/* work as server *\/\n            int port = DEFAULT_PORT;\n            if (cmd.length > 1) {\n                try {\n                    port = Integer.parseInt(cmd[1]);\n                } catch(NumberFormatException e) {\n                    System.out.println(\"Error: port is not a number!\");\n                    in.close();\n                    return;\n                }\n            }\n\n            ServerManager _svrMgr =new ServerManager(port);\n            new Thread(_svrMgr).start();\n\n\n        }\n        else if (cmd[0].contains(\"c\"))\n        {\n            \/\/client selected\n\n            \/* work as client *\/\n            String svrAddr = DEFAULT_SERVER_ADDR;\n            int port = DEFAULT_PORT;\n            if (cmd.length > 2) {\n                try {\n                    svrAddr = cmd[1];\n                    port = Integer.parseInt(cmd[2]);\n                } catch(NumberFormatException e) {\n                    System.out.println(\"Error: port is not a number!\");\n                    in.close();\n                    return;\n                }\n            }\n\n            ClientManager _cltMgr = new ClientManager(svrAddr, port);\n\n            \/* new thread to receive msg *\/\n            new Thread(_cltMgr).start();\n\n            _cltMgr.startClient();\n        }\n        else {\n            showHelp();\n            in.close();\n            return;\n        }\n        in.close();\n    }","787":"I currently work on the project which name \"android document sharing using <blockchain>\" I just want to know about how can I connect smart contract to connect my android android application.","788":"Steps taken\nmkdir MetaCoin\ncd MetaCoin\ntruffle unbox metaicon\nStack trace\nStarting unbox...\n=================\n\n\u00e2\u009c\u0094 Preparing to download box\n\u00e2\u009c\u0096 Downloading\nUnbox failed!\n\u00e2\u009c\u0096 Downloading\nUnbox failed!\nRequestError: Error: connect ECONNREFUSED 0.0.0.0:443\n    at new RequestError (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/request-promise-native\/node_modules\/request-promise-core\/lib\/errors.js:14:1)\n    at Request.plumbing.callback (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/request-promise-native\/node_modules\/request-promise-core\/lib\/plumbing.js:87:1)\n    at Request.RP$callback [as _callback] (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/request-promise-native\/node_modules\/request-promise-core\/lib\/plumbing.js:46:1)\n    at self.callback (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/request\/request.js:185:1)\n    at Request.emit (events.js:311:20)\n    at Request.onRequestError (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/node_modules\/request\/request.js:881:1)\n    at ClientRequest.emit (events.js:311:20)\n    at TLSSocket.socketErrorListener (_http_client.js:426:9)\n    at TLSSocket.emit (events.js:311:20)\n    at emitErrorNT (internal\/streams\/destroy.js:92:8)\n    at emitErrorAndCloseNT (internal\/streams\/destroy.js:60:3)\n    at processTicksAndRejections (internal\/process\/task_queues.js:84:21)\nTruffle v5.1.67 (core: 5.1.67)\nNode v12.16.1","789":"i have to test smart contract\nFile ApprovalContract\nconst ApprovalContract = artifacts.require( \"..\/..\/contracts\/ApprovalContract.sol\");\n\n contract(\"ApprovalContract\", function (accounts) {\nit(\"initiates contract\", async function () {\nconst contract = await ApprovalContract.deployed();\nconst approver = await contract.approver.call();\nassert.equal(\n  approver,\n  0x8c4b9b5262f1ae1bdfb58f6579348817c4da4277,\n  \"approvers don't match\"\n);\n});\nit(\"takes a deposit\", async function () {\nconst contract = await ApprovalContract.deployed();\n  await contract.deposit(accounts[0], { value: 1e18, from: accounts[1] });\n  assert.equal(\n  await <web3>.eth.getBalance(contract.address),\n  1e18,\n  \"amount did not match\"\n);\n});\nit(\n\"makes the transaction when approved, approver: \" + accounts[2],\nasync function () {\n  const contract = await ApprovalContract.deployed();\n  const balance = await <web3>.eth.getBalance(contract.address);\n  await contract.deposit(accounts[0], { value: 1e18, from: accounts[1] });\n  await contract.approve({ from: accounts[2] });\n  assert.equal(\n    <web3>.eth.getBalance(contract.address),\n    0,\n    \"didn't transfer ether\"\n  );\n  }\n);\n });\n\ntruffle compile,truffle migrate run successfully.\n\nwhen i run the command \"truffle test\" i have this error :","790":"I try to send a transaction with an instruction to an onchain program in SOLANA.\nI get this error :\nError: failed to send transaction: Transaction simulation failed: Error processing Instruction 0: instruction spent from the balance of an account it does not own\nMy Javascript code is :\nvar solana_<web3> = require('@solana\/<web3>.js');\nconst { SSL_OP_EPHEMERAL_RSA } = require('constants');\nconst url = 'https:\/\/devnet.solana.com' ;\nconst sigSecretKey1  = [39,90,157,237,...] ;\nconst sigSecretKey2  = [39,90,157,237,...] ;\nconst progID = 'FpbcvcsCB...' ;\nconnection = new solana_<web3>.Connection(url, 'singleGossip');\nconst account_signer_source = new solana_<web3>.Account( Buffer.from(sigSecretKey1) );\nconst account_signer_destination = new solana_<web3>.Account( Buffer.from(sigSecretKey2) );\nconst pub_programId = new solana_<web3>.PublicKey(progID) ;\nconst instruction = new solana_<web3>.TransactionInstruction({\n    keys: [ \n      {pubkey : account_signer_source.publicKey,        isSigner : true,  isWritable: true},  \n      {pubkey : account_signer_destination.publicKey,   isSigner : false, isWritable: true},\n    ],\n    programId : pub_programId,\n    data: Buffer.from([]),\n  });\n  const transaction = new solana_<web3>.Transaction().add(instruction);\n  \/\/transaction.addSignature(account_signer_source.publicKey, Buffer.from(sigSecretKey1));\n  await solana_<web3>.sendAndConfirmTransaction(\n    connection,\n    transaction,\n    [account_signer_source],\n    {commitment: 'singleGossip', preflightCommitment: 'singleGossip',}\n).then(()=>{console.log('done')}).catch((e)=>{console.log(e)});\n\nCould you help me please ?\nThx\nReza","791":"Tell me please where can I find remote EOS API, I don't want to start the EOS node locally, because there are 170 million blocks. It will take a very long time for complete synchronization.\nInterested in a fully functional API with the ability to send <transactions>.\nI did not find any endpoints on the official website https:\/\/eos.io\/.\nFound just some small commands described here : https:\/\/developers.eos.io\/.\nOn my own did not find any normal service.","792":"I want to get the system date when the daml contract is created. Is there and way to do that.\nExample :-\nmodule ExampleTemplateModule where\ntemplate ExampleTemplate\nwith\n\n    admin: Party \n\n    todayDate: Date     --- In place of this can I use getDate and get today's date\n                       \nwhere\n\n    signatory admin\n\nI know I can do this inside a script-do block, but I want to do it when I have to create a contract. If this is not possible, is there some other way through which I can take system's date while creating daml contracts.","793":"How do I generate a serial wif key which contains at least 1000 keys? The code I used generates only one key and I want more. Please can you help me out? I try to change it but it still works the same. All I want is to generate more of it.\nThe code I used to generate the 1 wif keys can be found below,\nimport os\nimport hashlib\n\ndef run(name):\n    print(\"{} started!\".format(name))\n\ndef sha256(data):\n    digest = hashlib.new(\"sha256\")\n    digest.update(data)\n    return digest.digest()\n\n\ndef ripemd160(x):\n    d = hashlib.new(\"ripemd160\")\n    d.update(x)\n    return d.digest()\n\n\ndef b58(data):\n    B58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n\n    if data[1] == 1:\n        return \"1\" + b58(data[1:])\n\n    x = sum([v * (256 ** i) for i, v in enumerate(data[::-1])])\n    ret = \"\"\n    while x > 0:\n        ret = B58[x % 58] + ret\n        x = x \/\/ 58\n\n    return ret\n\n\nclass Point:\n    def __init__(self,\n        x=0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798,\n        y=0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8,\n        p=2**256 - 2**32 - 2**9 - 2**8 - 2**7 - 2**6 - 2**4 - 1):\n        self.x = x\n        self.y = y\n        self.p = p\n\n\n    def __add__(self, other):\n        return self.__radd__(other)\n\n    def __mul__(self, other):\n        return self.__rmul__(other)\n\n    def __rmul__(self, other):\n        n = self\n        q = None\n\n        for i in range(256):\n            if other & (1 << i):\n                q = q + n\n            n = n + n\n\n        return q\n\n    def __radd__(self, other):\n        if other is None:\n            return self\n        x1 = other.x\n        y1 = other.y\n        x2 = self.x\n        y2 = self.y\n        p = self.p\n\n        if self == other:\n            l = pow(2 * y2 % p, p-2, p) * (3 * x2 * x2) % p\n        else:\n            l = pow(x1 - x2, p-2, p) * (y1 - y2) % p\n\n        newX = (l ** 2 - x2 - x1) % p\n        newY = (l * x2 - l * newX - y2) % p\n\n        return Point(newX, newY)\n\n    def toBytes(self):\n        x = self.x.to_bytes(32, \"big\")\n        y = self.y.to_bytes(32, \"big\")\n        return b\"\\x04\" + x + y\n\n\n\n\ndef getWif(privkey):\n    wif = b\"\\x80\" + privkey\n    wif = b58(wif + sha256(sha256(wif))[:4])\n    return wif\n\n\nif __name__ == \"__main__\":\n    randomBytes = os.urandom(32)\n    print(\" \" + getWif(randomBytes))\n\nThanks in advance!","794":"We have created AWS managed <blockchain> network (<hyperledger> Fabric). And I wanted to connect and create a simple transaction over this network. Lets say university user updated student marks in the system. I am totally new to <blockchain> and <hyperledger> Fabric. So I wanted to know what basic steps do I need to achieve this scenario. I am using windows 8 and node JavaScript.\nSince we there are few libraries given like fabric-shim and fabric-network but still I am not able to implement this. I need at least way to make connection establishment to AWS managed block chain network and upload simple transaction. Anybody having solution much appreciated. Thanks","795":"I am deploying my own private <blockchain> using the substrate code. In which how to set the token decimals and token symbol while deploying it?","796":"I'm really new in <blockchain> world and right now i am studying <hyperledger> Fabric. I used the fabcar example and i need to calculate latency of a transaction here.  I want to start with javascript first and then with other but i'm already in difficult. I thinked to use two timestamp and then subtract them for find the time, but i don't know how to implement it correctly.\nHere the code for the invoke of a query to the ledger.\n    \/\/ Submit the specified transaction.\n    \/\/ createCar transaction - requires 5 argument, ex: ('createCar', 'CAR12', 'Honda', 'Accord', 'Black', 'Tom')\n    \/\/ changeCarOwner transaction - requires 2 args , ex: ('changeCarOwner', 'CAR12', 'Dave')\n    var timestamp1 = Number(new Date());\n    \n    await contract.submitTransaction('createCar', 'CAR25', 'Lamborghini', 'Aventador', 'Green', 'Ciccio');\n    console.log('Transaction has been submitted');\n    \n    var timestamp2 = Number(new Date());\n    console.log(timestamp2-timestamp1);\n\n    \/\/ Disconnect from the gateway.\n    await gateway.disconnect();\n\n} catch (error) {\n    console.error(`Failed to submit transaction: ${error}`);\n    process.exit(1);\n}\n\nWhat i did make actually sense, it would work? I add also the --waitForEvent to the invoke. I don't find any documentation or examples for implementing something like this.\nThanks in advance.","797":"Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     This question does not appear to be about a specific programming problem, a software algorithm, or software tools primarily used by programmers. If you believe the question would be on-topic on another Stack Exchange site, you can leave a comment to explain where the question may be able to be answered.\n                \n                    \n                        Closed 1 year ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nI am relatively new to <blockchain>s and I am wondering if on popular cryptocurrencies all information persists forever? If so wouldn\u00e2\u0080\u0099t grow the disc space requirement for every node by time? Will this become a problem in the near future?","798":"Is it possible for the same contract to handle multiple ERC721 tokens? And if so, how?\nLet\u00e2\u0080\u0099s say you\u00e2\u0080\u0099re making a game and you need to track two types of ERC721 tokens: unique Weapons and unique Vehicles.\nYou could have Structs for them, as follows:\nstruct Weapon { \n    uint256 IDNumber;\n    string type; \/\/ Sword, Bow&Arrow, Gun, Rifle, etc.  \n    string specialFeature; \n}\n\n\nstruct Vehicle { \n    uint256 IDNumber;\n    string type;  \/\/ Car, Airplane, Boat, Spaceship, etc.  \n    uint256 damageFactor; \n}\n\nTo track their ownership, you could double the arrays managing them - for example instead of having the standard:\n\/\/ Enumerable mapping from token ids to their owners\nEnumerableMap.UintToAddressMap private _tokenOwners;\n\nYou would do:\n\/\/ Enumerable mapping from token ids to their owners\nEnumerableMap.UintToAddressMap private _weaponTokenOwners;\nEnumerableMap.UintToAddressMap private _vehicleTtokenOwners;\n\n(This may not be the most elegant way, but it's a start.)\nThe real question though is: how would you handle mandatory functions that are part of the  ERC721 standard, such as balanceOf() and ownerOf()?\nTo be specific, are you allowed to say add an additional argument to these methods\u00e2\u0080\u0099 signatures to help indicate which particular Token you\u00e2\u0080\u0099re querying about?\nFor example, instead of this:\nfunction balanceOf(address owner) public view override returns (uint256) {\n\n}\n\nYou\u00e2\u0080\u0099d add a tokenName argument to the function\u00e2\u0080\u0099s signature,  as follows:\nfunction balanceOf(address owner, string tokenName) public view override returns (uint256) {\n    if(tokenName == \u00e2\u0080\u009cweapon\u00e2\u0080\u009d) {\n       return ownerAndHisWeaponTokensDictionary[owner].length;\n    }\n    else if(tokenName == \u00e2\u0080\u009cvehicle\u00e2\u0080\u009d) {\n       return ownerAndHisVehicleTokensDictionary[owner].length;\n    }\n}\n\nAnd you\u00e2\u0080\u0099d do something similar for ownerOf()?\nIs this allowable?\nAnd is this even the right approach tackling this - or is there a different way to reason about all of this and approach it differently?","799":"Im new at this <blockchain> thing and want to learn it with <python>\ni arleady created a wallet via <python>\nNow my question: Is it possible to send transaction with this information\n\nmnemonic\nadress\nentropy\nprivate_key\npublic key\npassphrase\n\nthank you for help :)","800":"I am implementing a factory pattern contract and on my constructor I want to trigger a function which deposits into the contract\n--Factory--\nfunction newChild() {\n     Child child = new Child(potentialPayoutAmount);\n     children[_childId] = address(child);\n}\n\nfunction getChild()view public returns (address)  {\n   return children[_campaignId];\n}\n\n--Child Contract--\naddress payable public spender;\n\nconstructor(uint256 _potentialPayoutAmount) {\n  autoDeposit(_potentialPayoutAmount)\n}\n\nfunction autoDeposit(uint256 _potentialPayoutAmount) {\n  depositedFor[receiver] = depositedFor[receiver] + _potentialPayoutamount;\n}\n\nSo my problem is that I want the spender address in the child contract to be the account that is spending the money, even though the autoDeposit function is obviously being triggered from the factory contract.\nAny suggestions would help. Happy to elaborate if I was unclear.\nThanks!","801":"I am trying to set up a <hyperledger> Fabric Network with <hyperledger> Explorer. I spin up a VM on the digital ocean cloud with ubuntu OS. From there, I spin up 3 orderers node, and 2 peers node. Which result in total of 5 nodes. (I am using RAFT setup).\nHowever, I encounter the error as below when trying to start the <hyperledger> fabric explorer docker-container images.\nError:\n> <hyperledger>-explorer@1.1.4 app-start \/opt\/explorer\n> .\/start.sh\n\n[2021-02-18T07:32:21.828] [INFO] PgService - SSL to Postgresql disabled\n[2021-02-18T07:32:21.829] [INFO] PgService - connecting to Postgresql postgres:\/\/hppoc:******@explorerdb.mynetwork.com:5432\/fabricexplorer\n[2021-02-18T07:32:21.898] [INFO] Platform -  network_config.id  test-network  network_config.profile  .\/connection-profile\/test-network.json\n[2021-02-18T07:32:22.013] [INFO] FabricConfig - config.client.tlsEnable  true\n[2021-02-18T07:32:22.013] [INFO] FabricConfig - FabricConfig, this.config.channels  airlinechannel\n[2021-02-18T07:32:22.016] [INFO] FabricGateway - enrollUserIdentity: userName : exploreradmin\n2021-02-18T07:32:25.221Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer1.acme.com, url:grpcs:\/\/peer1.acme.com:7051, connected:false, connectAttempted:true\n2021-02-18T07:32:25.222Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.acme.com url:grpcs:\/\/peer1.acme.com:7051 timeout:3000\n2021-02-18T07:32:25.223Z - info: [NetworkConfig]: buildPeer - Unable to connect to the endorser peer1.acme.com due to Error: Failed to connect before the deadline on Endorser- name: peer1.acme.com, url:grpcs:\/\/peer1.acme.com:7051, connected:false, connectAttempted:true\n2021-02-18T07:32:28.250Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Discoverer- name: peer1.acme.com, url:grpcs:\/\/peer1.acme.com:7051, connected:false, connectAttempted:true\n2021-02-18T07:32:28.250Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.acme.com url:grpcs:\/\/peer1.acme.com:7051 timeout:3000\n2021-02-18T07:32:28.250Z - error: [ServiceEndpoint]: ServiceEndpoint grpcs:\/\/peer1.acme.com:7051 reset connection failed :: Error: Failed to connect before the deadline on Discoverer- name: peer1.acme.com, url:grpcs:\/\/peer1.acme.com:7051, connected:false, connectAttempted:true\n2021-02-18T07:32:28.251Z - error: [DiscoveryService]: send[airlinechannel] - no discovery results\n[2021-02-18T07:32:28.251] [ERROR] FabricClient - Error: DiscoveryService has failed to return results\n    at DiscoveryService.send (\/opt\/explorer\/node_modules\/fabric-network\/node_modules\/fabric-common\/lib\/DiscoveryService.js:370:10)\n    at process._tickCallback (internal\/process\/next_tick.js:68:7)\n[2021-02-18T07:32:28.252] [INFO] FabricClient - ********* call to initializeDetachClient **********\n[2021-02-18T07:32:28.253] [INFO] FabricClient - initializeDetachClient, network config)  { name: 'test-network',\n  version: '1.0.0',\n  client:\n   { tlsEnable: true,\n     adminCredential: { id: 'exploreradmin', password: 'exploreradminpw' },\n     enableAuthentication: true,\n     organization: 'AcmeMSP',\n     connection: { timeout: [Object] } },\n  channels: { airlinechannel: { peers: [Object] } },\n  organizations:\n   { AcmeMSP:\n      { mspid: 'AcmeMSP',\n        adminPrivateKey: [Object],\n        peers: [Array],\n        signedCert: [Object] } },\n  peers:\n   { 'peer1.acme.com': { tlsCACerts: [Object], url: 'grpcs:\/\/peer1.acme.com:7051' } } }\n[2021-02-18T07:32:28.253] [INFO] FabricClient - ************************************* initializeDetachClient *************************************************\n[2021-02-18T07:32:28.254] [INFO] FabricClient - Error : Failed to connect client peer, please check the configuration and peer status\n[2021-02-18T07:32:28.254] [INFO] FabricClient - Info :  Explorer will continue working with only DB data\n[2021-02-18T07:32:28.254] [INFO] FabricClient - ************************************** initializeDetachClient ************************************************\n[2021-02-18T07:32:28.259] [INFO] Platform - initializeListener, network_id, network_client  test-network { name: 'test-network',\n  version: '1.0.0',\n  client:\n   { tlsEnable: true,\n     adminCredential: { id: 'exploreradmin', password: 'exploreradminpw' },\n     enableAuthentication: true,\n     organization: 'AcmeMSP',\n     connection: { timeout: [Object] } },\n  channels: { airlinechannel: { peers: [Object] } },\n  organizations:\n   { AcmeMSP:\n      { mspid: 'AcmeMSP',\n        adminPrivateKey: [Object],\n        peers: [Array],\n        signedCert: [Object] } },\n  peers:\n   { 'peer1.acme.com': { tlsCACerts: [Object], url: 'grpcs:\/\/peer1.acme.com:7051' } } }\n[2021-02-18T07:32:28.260] [INFO] main - Please open web browser to access \u00ef\u00bc\u009ahttp:\/\/localhost:8080\/\n[2021-02-18T07:32:28.261] [INFO] main - pid is 20\n[2021-02-18T07:32:28.263] [ERROR] main - <<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>\n[2021-02-18T07:32:28.263] [ERROR] main - Error :  [ 'Default client peer is down and no channel details available database' ]\n[2021-02-18T07:32:30.264] [INFO] main - Received kill signal, shutting down gracefully\n[2021-02-18T07:32:30.266] [INFO] Platform - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing explorer  >>>>>>>>>>>>>>>>>>>>>\n[2021-02-18T07:32:30.266] [INFO] main - Closed out connections\n\nVersion Detail\n\n<hyperledger> Fabric: 2.3.1\n<hyperledger> Explorer: v1.1.1 (latest tag)\n\nPart 1: Docker Container Setup\na) Docker PS\nCONTAINER ID   IMAGE                                                                                                                                                                  COMMAND                  CREATED          STATUS                   PORTS                                            NAMES\n9e8768914140   <hyperledger>\/explorer:latest                                                                                                                                            \"docker-entrypoint.s\u00e2\u0080\u00a6\"   3 minutes ago    Up 3 minutes             0.0.0.0:8080->8080\/tcp                           explorer.mynetwork.com\n903c8c4a4326   <hyperledger>\/explorer-db:latest                                                                                                                                         \"docker-entrypoint.s\u00e2\u0080\u00a6\"   3 minutes ago    Up 3 minutes (healthy)   5432\/tcp                                         explorerdb.mynetwork.com\n9fed267ae9b1   dev-peer1.budget.com-gocc1.1.0-1.0-2593f1a95def85c64fdfed35e3d3b1051b92ed91549cfe789292ec5475d7db86-e014c6d933da036b6c79b53d29a800d8a6886e374ceb435a30642b885735f8f5   \"chaincode -peer.add\u00e2\u0080\u00a6\"   21 minutes ago   Up 21 minutes                                                             dev-peer1.budget.com-gocc1.1.0-1.0-2593f1a95def85c64fdfed35e3d3b1051b92ed91549cfe789292ec5475d7db86\n12407497fa4c   dev-peer1.acme.com-gocc1.1.0-1.0-2593f1a95def85c64fdfed35e3d3b1051b92ed91549cfe789292ec5475d7db86-a3b6caa9293bb826d231b1a31cc47437e58764abe5169a20ed0ee43f25c16b24     \"chaincode -peer.add\u00e2\u0080\u00a6\"   21 minutes ago   Up 21 minutes                                                             dev-peer1.acme.com-gocc1.1.0-1.0-2593f1a95def85c64fdfed35e3d3b1051b92ed91549cfe789292ec5475d7db86\n0448e71f68e1   <hyperledger>\/fabric-peer:latest                                                                                                                                         \"peer node start\"        22 minutes ago   Up 22 minutes            0.0.0.0:8051->7051\/tcp, 0.0.0.0:8052->7052\/tcp   peer1.budget.com\n3266ec37b360   <hyperledger>\/fabric-peer:latest                                                                                                                                         \"peer node start\"        22 minutes ago   Up 22 minutes            0.0.0.0:7051-7052->7051-7052\/tcp                 peer1.acme.com\n47ebe9ad79d1   <hyperledger>\/fabric-orderer:latest                                                                                                                                      \"orderer\"                22 minutes ago   Up 22 minutes            0.0.0.0:8050->7050\/tcp                           orderer2.acme.com\n09a5f771f47f   <hyperledger>\/fabric-tools:latest                                                                                                                                        \"\/bin\/bash\"              22 minutes ago   Up 22 minutes                                                             tools\ne132bb01ce22   <hyperledger>\/fabric-orderer:latest                                                                                                                                      \"orderer\"                22 minutes ago   Up 22 minutes            0.0.0.0:9050->7050\/tcp                           orderer3.acme.com\n3c61b0316385   <hyperledger>\/fabric-orderer:latest                                                                                                                                      \"orderer\"                22 minutes ago   Up 22 minutes\n\nb) I use 3 docker-compose files for my configuration setting.\n$ docker-compose -f .\/config\/docker-compose-base.yaml -f .\/tls\/docker-compose-tls.yaml -f .\/raft\/docker-compose-raft.yaml up -d\n\ndocker-compose-base.yaml\n\nhttps:\/\/gist.github.com\/Skyquek\/03d1ffad5643d67d8da5b268a4814a7d\n\ndocker-compose-tls.yaml\n\nhttps:\/\/gist.github.com\/Skyquek\/b3b314cb2152ab541e822f72c60a2cbd\n\ndocker-compose-raft.yaml\n\nhttps:\/\/gist.github.com\/Skyquek\/7f8ec2d4d1876283f4a9444675971be8\nc) Core.yaml\n\nacme core.yaml\n\nhttps:\/\/gist.github.com\/Skyquek\/8cdcbc4ee3d53a2277b1c34bb2fca704\nPart 2: Blockchain Explorer Setting\n1. connection-profile.json\n{\n        \"name\": \"test-network\",\n        \"version\": \"1.0.0\",\n        \"client\": {\n                \"tlsEnable\": true,\n                \"adminCredential\": {\n                        \"id\": \"exploreradmin\",\n                        \"password\": \"exploreradminpw\"\n                },\n                \"enableAuthentication\": true,\n                \"organization\": \"AcmeMSP\",\n                \"connection\": {\n                        \"timeout\": {\n                                \"peer\": {\n                                        \"endorser\": \"300\"\n                                },\n                                \"orderer\": \"300\"\n                        }\n                }\n        },\n        \"channels\": {\n                \"airlinechannel\": {\n                        \"peers\": {\n                                \"peer1.acme.com\": {}\n                        }\n                }\n        },\n        \"organizations\": {\n                \"AcmeMSP\": {\n                        \"mspid\": \"AcmeMSP\",\n                        \"adminPrivateKey\": {\n                                \"path\": \"\/tmp\/crypto\/peerOrganizations\/acme.com\/users\/Admin@acme.com\/msp\/keystore\/priv_sk\"\n                        },\n                        \"peers\": [\"peer1.acme.com\"],\n                        \"signedCert\": {\n                                \"path\": \"\/tmp\/crypto\/peerOrganizations\/acme.com\/users\/Admin@acme.com\/msp\/signcerts\/Admin@acme.com-cert.pem\"\n                        }\n                }\n        },\n        \"peers\": {\n                \"peer1.acme.com\": {\n                        \"tlsCACerts\": {\n                                \"path\": \"\/tmp\/crypto\/peerOrganizations\/acme.com\/tlsca\/tlsca.acme.com-cert.pem\"\n                        },\n                        \"url\": \"grpcs:\/\/peer1.acme.com:7051\"\n                }\n        }\n}\n\n2. docker-compose.yaml\n\n# SPDX-License-Identifier: Apache-2.0\nversion: '2.1'\n\nvolumes:\n  pgdata:\n  walletstore:\n\nnetworks:\n  mynetwork.com:\n    external:\n      name: acloudfan_airline\n\nservices:\n\n  explorerdb.mynetwork.com:\n    image: <hyperledger>\/explorer-db:latest\n    container_name: explorerdb.mynetwork.com\n    hostname: explorerdb.mynetwork.com\n    environment:\n      - DATABASE_DATABASE=fabricexplorer\n      - DATABASE_USERNAME=hppoc\n      - DATABASE_PASSWORD=password\n    healthcheck:\n      test: \"pg_isready -h localhost -p 5432 -q -U postgres\"\n      interval: 30s\n      timeout: 10s\n      retries: 5\n    volumes:\n      - pgdata:\/var\/lib\/postgresql\/data\n    networks:\n      - mynetwork.com\n\n  explorer.mynetwork.com:\n    image: <hyperledger>\/explorer:latest\n    container_name: explorer.mynetwork.com\n    hostname: explorer.mynetwork.com\n    environment:\n      - DATABASE_HOST=explorerdb.mynetwork.com\n      - DATABASE_DATABASE=fabricexplorer\n      - DATABASE_USERNAME=hppoc\n      - DATABASE_PASSWD=password\n      - LOG_LEVEL_APP=debug\n      - LOG_LEVEL_DB=debug\n      - LOG_LEVEL_CONSOLE=info\n      - LOG_CONSOLE_STDOUT=true\n      - DISCOVERY_AS_LOCALHOST=true\n    volumes:\n      - .\/config.json:\/opt\/explorer\/app\/platform\/fabric\/config.json\n      - .\/connection-profile:\/opt\/explorer\/app\/platform\/fabric\/connection-profile\n      - .\/organizations:\/tmp\/crypto\n      - walletstore:\/opt\/explorer\/wallet\n    ports:\n      - 8080:8080\n    depends_on:\n      explorerdb.mynetwork.com:\n        condition: service_healthy\n    networks:\n      - mynetwork.com\n\n\nSolution that I tried\n1. Change the tlscs certs path\nAs stated in\n<hyperledger> Fabric 2.0.1: Error: Failed to connect before the deadline on Discoverer- name:\nThe problem most likely is due to the error from the path. But the problem still persists.\n2. Change the env variable DISCOVERY_AS_LOCALHOST=true to false\nSome of them mention that this will fixed the problem. But I can't seem to fix it this way.\n3. Tried with <hyperledger> fabric 2.0 test-network\nI tried to run with fabric sample test-network and its run perfectly fine.\n4. docker exec -it sh to the explorer.mynetwork.com to ping the peer\nThe ping can run perfectly fine.\n\/opt\/explorer # ping peer1.acme.com:7051\nPING peer1.acme.com:7051 (172.23.0.6): 56 data bytes\n64 bytes from 172.23.0.6: seq=0 ttl=64 time=0.138 ms\n64 bytes from 172.23.0.6: seq=1 ttl=64 time=0.087 ms\n64 bytes from 172.23.0.6: seq=2 ttl=64 time=0.090 ms\n64 bytes from 172.23.0.6: seq=3 ttl=64 time=0.089 ms\n64 bytes from 172.23.0.6: seq=4 ttl=64 time=0.101 ms\n64 bytes from 172.23.0.6: seq=5 ttl=64 time=0.088 ms\n^C\n--- peer1.acme.com:7051 ping statistics ---\n6 packets transmitted, 6 packets received, 0% packet loss\nround-trip min\/avg\/max = 0.087\/0.098\/0.138 ms\n\nIts keep on showing that the peer is down or the connection to the peer is fail\nI am struggling with this error for few days now. Hope someone can help me to identify the problem. Thank you very much.","802":"I am trying to implement a new consensus protocol similar to Proof of stake. However, here my stake would be some value results from different mechanisms. I am wondering whether I could use any open-source <blockchain> for that? For example, <hyperledger> or Ethereum, etc.\nAny suggestion would be highly appreciated.","803":"I'm looking to query all Polkadot accounts and so I can sort them by balance. which javascript api should I use? I'm not just looking for accounts with identities. I'm looking for all accounts thank you very much","804":"Whenever I am trying to execute a transaction through NodeJS I am getting the error.\n2021-02-12T09:33:58.302Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer1.peers.org1.com, url:grpcs:\/\/xxx.xxx.xxx.xxx:7051, connected:false, connectAttempted:true\n2021-02-12T09:33:58.303Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.peers.org1.com url:grpcs:\/\/xxx.xxx.xxx.xxx:7051 timeout:3000\n2021-02-12T09:33:58.306Z - info: [NetworkConfig]: buildPeer - Unable to connect to the endorser peer1.peers.org1.com due to Error: Failed to connect before the deadline on Endorser- name: peer1.peers.org1.com, url:grpcs:\/\/xxx.xxx.xxx.xxx:7051, connected:false, connectAttempted:true\n    at checkState (\/fabric23\/node_modules\/@grpc\/grpc-js\/build\/src\/client.js:69:26)\n    at Timeout._onTimeout (\/fabric23\/node_modules\/@grpc\/grpc-js\/build\/src\/channel.js:292:17)\n    at listOnTimeout (internal\/timers.js:549:17)\n    at processTimers (internal\/timers.js:492:7) {\n  connectFailed: true\n}\n2021-02-12T09:34:01.308Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer1.peers.org2.com, url:grpcs:\/\/xxx.xxx.xxx.xxx:7051, connected:false, connectAttempted:true\n2021-02-12T09:34:01.308Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.peers.org2.com url:grpcs:\/\/xxx.xxx.xxx.xxx:7051 timeout:3000\n2021-02-12T09:34:01.309Z - info: [NetworkConfig]: buildPeer - Unable to connect to the endorser peer1.peers.org2.com due to Error: Failed to connect before the deadline on Endorser- name: peer1.peers.org2.com, url:grpcs:\/\/xxx.xxx.xxx.xxx:7051, connected:false, connectAttempted:true\n    at checkState (\/fabric23\/node_modules\/@grpc\/grpc-js\/build\/src\/client.js:69:26)\n    at Timeout._onTimeout (\/fabric23\/node_modules\/@grpc\/grpc-js\/build\/src\/channel.js:292:17)\n    at listOnTimeout (internal\/timers.js:549:17)\n    at processTimers (internal\/timers.js:492:7) {\n  connectFailed: true\n}\n2021-02-12T09:34:04.314Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer1.peers.org3.com, url:grpcs:\/\/xxx.xxx.xxx.xxx:7051, connected:false, connectAttempted:true\n2021-02-12T09:34:04.314Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.peers.org3.com url:grpcs:\/\/xxx.xxx.xxx.xxx:7051 timeout:3000\n2021-02-12T09:34:04.315Z - info: [NetworkConfig]: buildPeer - Unable to connect to the endorser peer1.peers.org3.com due to Error: Failed to connect before the deadline on Endorser- name: peer1.peers.org3.com, url:grpcs:\/\/xxx.xxx.xxx.xxx:7051, connected:false, connectAttempted:true\n    at checkState (\/fabric23\/node_modules\/@grpc\/grpc-js\/build\/src\/client.js:69:26)\n    at Timeout._onTimeout (\/fabric23\/node_modules\/@grpc\/grpc-js\/build\/src\/channel.js:292:17)\n    at listOnTimeout (internal\/timers.js:549:17)\n    at processTimers (internal\/timers.js:492:7) {\n  connectFailed: true\n}\n2021-02-12T09:34:07.317Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Committer- name: ord1.orderers.org1.com, url:grpcs:\/\/xxx.xxx.xxx.xxx:7050, connected:false, connectAttempted:true\n2021-02-12T09:34:07.317Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server ord1.orderers.org1.com url:grpcs:\/\/xxx.xxx.xxx.xxx:7050 timeout:3000\n2021-02-12T09:34:07.317Z - info: [NetworkConfig]: buildOrderer - Unable to connect to the committer ord1.orderers.org1.com due to Error: Failed to connect before the deadline on Committer- name: ord1.orderers.org1## Heading ##.com, url:grpcs:\/\/xxx.xxx.xxx.xxx:7050, connected:false, connectAttempted:true\n    at checkState (\/fabric23\/node_modules\/@grpc\/grpc-js\/build\/src\/client.js:69:26)\n    at Timeout._onTimeout (\/fabric23\/node_modules\/@grpc\/grpc-js\/build\/src\/channel.js:292:17)\n    at listOnTimeout (internal\/timers.js:549:17)\n    at processTimers (internal\/timers.js:492:7) {\n  connectFailed: true\n}\nFailed to evaluate transaction: Error: Committer must be connectable\n\nHere is my connection.json\n{\n    \"name\": \"byfn\",\n    \"version\": \"1.0.0\",\n    \"client\": {\n        \"organization\": \"ORG1\",\n        \"connection\": {\n            \"timeout\": {\n                \"peer\": {\n                    \"endorser\": \"10000\"\n                },\n                \"orderer\": \"10000\"\n            }\n        }\n    },\n    \"channels\": {\n        \"supplychain\": {\n            \"orderers\": [\n                \"ord1.orderers.org1.com\",\n                \"ord2.orderers.org1.com\",\n                \"ord3.orderers.org1.com\"\n            ],\n            \"peers\": {\n                \"peer1.peers.org2.com\": {},\n                \"peer1.peers.org3.com\": {},\n                \"peer1.peers.org1.com\": {}\n            }\n        }\n    },\n    \"organizations\": {\n        \"ORG1\": {\n            \"mspid\": \"ORG1\",\n            \"peers\": [\n                \"peer1.peers.org1.com\",\n                \"peer2.peers.org1.com\"\n            ]\n        }\n    },\n    \"orderers\": {\n        \"ord1.orderers.org1.com\": {\n            \"url\": \"grpcs:\/\/xxx.xxx.xxx.xxx:7050\",\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"ord1.orderers.org1.com\",\n                \"request-timeout\": 12000\n            },\n            \"tlsCACerts\": {\n                \"path\": \"ca.pem\"\n            }\n        }\n    },\n    \"peers\": {\n        \"peer1.peers.org2.com\": {\n            \"url\": \"grpcs:\/\/xxx.xxx.xxx.xxx:7051\",\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"peer1.peers.org2.com\",\n                \"request-timeout\": 12000,\n                \"grpc.keepalive_time_ms\": 600000\n            },\n            \"tlsCACerts\": {\n                \"path\": \"ca.pem\"\n            }\n        },\n        \"peer1.peers.org3.com\": {\n            \"url\": \"grpcs:\/\/xxx.xxx.xxx.xxx:7051\",\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"peer1.peers.org3.com\",\n                \"request-timeout\": 12000,\n                \"grpc.keepalive_time_ms\": 600000\n            },\n            \"tlsCACerts\": {\n                \"path\": \"ca.pem\"\n            }\n        },\n        \"peer1.peers.org1.com\": {\n            \"url\": \"grpcs:\/\/xxx.xxx.xxx.xxx:7051\",\n            \"grpcOptions\": {\n                \"ssl-target-name-override\": \"peer1.peers.org1.com\",\n                \"request-timeout\": 12000,\n                \"grpc.keepalive_time_ms\": 600000\n            },\n            \"tlsCACerts\": {\n                \"path\": \"ca.pem\"\n            }\n        }\n    }\n}\n\nAnd here is my test.js\n'use strict';\n\nconst { Wallets, Gateway } = require('fabric-network');\nconst fs = require('fs');\nconst path = require('path');\n\nconst ccpPath = path.resolve(__dirname,'test-connection.json');\nconst ccpJSON = fs.readFileSync(ccpPath, 'utf8');\nconst ccp = JSON.parse(ccpJSON);\n\n\nasync function main(){\n    try {\n        \/\/ const walletPath = path.join(process.cwd(), 'wallet');\n        const wallet = await Wallets.newFileSystemWallet('wallet');\n        \/\/ console.log(`Wallet path: ${walletPath}`);\n\n        \/\/ Check to see if we've already enrolled the user.\n        const userExists = await wallet.get('usernew');\n        const tlsExists = await wallet.get('tlsid');\n        if (!userExists) {\n            console.log('An identity for the user \"usernew\" does not exist in the wallet');\n            return;\n        }\n        if (!tlsExists) {\n            console.log('An identity for the user \"tls\" does not exist in the wallet');\n            return;\n        }\n        console.log(\"Here\");\n        \/\/ Create a new gateway for connecting to our peer node.\n        const gateway = new Gateway();\n        await gateway.connect(ccp, { wallet, identity: 'usernew', discovery: { enabled: false, asLocalhost: false }, clientTlsIdentity: 'tlsid' });\n\n        console.log(\"Here1\");\n        \/\/ Get the network (channel) our contract is deployed to.\n        const network = await gateway.getNetwork('mychannel');\n\n        console.log(\"Here2\");\n        \/\/Get the channel object to fetch out peers\n        const channel = network.getChannel();\n\n        console.log(\"Here3\");\n        \/\/Get peers for endorsement\n        const org1Peer = channel.getPeer('peer1.peers.org1.com');\n        console.log(org1Peer);\n        const org2Peer = channel.getPeer('peer1.peers.org2.com');\n        console.log(org2Peer);\n        const org3Peer = channel.getPeer('peer1.peers.org3.com');\n        console.log(org3Peer);\n\n\n        \/\/ Get the contract from the network.\n        const contract = network.getContract('mycontract');\n\n        const result = await contract.createTransaction(\"transaction\").setEndorsingPeers([org1Peer, org2Peer, org3Peer]).setTransient().submit(\n            \"key\",\n            \"val1\",\n            \"val2\"\n        );\n        \n        console.log(`Transaction has been evaluated, result is: ${result.toString()}`);\n\n    } catch (error) {\n        console.error(`Failed to evaluate transaction: ${error}`);\n    }\n}\n\nmain()\n\nMy network is deployed on a kubernetes cluster and the NodeJS container is on the same cluster. The IPs that I am using for the pods are the ClusterIPs of the peer and orderer pods. Also the certificates I am using are not Fabric generated certs, the certs have been created and signed using the CA of our organization and thus the crypto folder has a \"tlsintermediatecerts\" folder inside it. I have tried using the pem file from inside the \"tlsca\" folder and also the pem file from inside the \"tlsintermediatecerts\" folder for the tlsca path in the connection.json. But none have worked.\nHere is the directory structure of the crypto folder.\nAlso I have verified the certs by making curl requests to each of the peers and orderers and checked that the handshake completes.\nC:.\n\u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080peers.org1.com\n\u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080users\n\u00e2\u0094\u0082       \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080Admin@peers.org1.com\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080msp\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080admincerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080cacerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080intermediatecerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080keystore\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080signcerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlscacerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlsintermediatecerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tls\n\u00e2\u0094\u0082       \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080User1@peers.org1.com\n\u00e2\u0094\u0082           \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080msp\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080admincerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080cacerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080intermediatecerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080keystore\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080signcerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlscacerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlsintermediatecerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tls\n\u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080peers.org2.com\n\u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080users\n\u00e2\u0094\u0082       \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080Admin@peers.org2.com\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080msp\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080admincerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080cacerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080intermediatecerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080keystore\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080signcerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlscacerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlsintermediatecerts\n\u00e2\u0094\u0082       \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tls\n\u00e2\u0094\u0082       \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080User1@peers.org2.com\n\u00e2\u0094\u0082           \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080msp\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080admincerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080cacerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080intermediatecerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080keystore\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080signcerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlscacerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlsintermediatecerts\n\u00e2\u0094\u0082           \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tls\n\u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080peers.org3.com\n    \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080users\n        \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080Admin@peers.org3.com\n        \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080msp\n        \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080admincerts\n        \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080cacerts\n        \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080intermediatecerts\n        \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080keystore\n        \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080signcerts\n        \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlscacerts\n        \u00e2\u0094\u0082   \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlsintermediatecerts\n        \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tls\n        \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080User1@peers.org3.com\n            \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080msp\n            \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080admincerts\n            \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080cacerts\n            \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080intermediatecerts\n            \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080keystore\n            \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080signcerts\n            \u00e2\u0094\u0082   \u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlscacerts\n            \u00e2\u0094\u0082   \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tlsintermediatecerts\n            \u00e2\u0094\u0094\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080tls\n\nAny help is appreciated.","805":"I'm using the NXT software to create my own <blockchain>, but I want to change the block time to 10 seconds vs default of 60 seconds. https:\/\/www.jelurida.com\/nxt\/<blockchain>-creation-kit Where do I change this parameter?","806":"The architecture of my dapp consists of a backend (metamask + <web3>.js or <web3>.js + <geth>) and a smart contract that offers different services (functions). I want a function on the smart contract to run on a certain date. Can my backend call a smart contract function to be executed on a certain date? If it can, how?","807":"I am starting to get an overview about bitcoin and wanted to write a very simple programme converting private keys into public, keys, addresses etc. However, for some private keys it suddenly fails when I try to compute the compressed address for them. The reason it fails as far as I can see is that the compressed public key I am passing to the function bitcoin.pubkey_to_address() is one digit too short. As it is one of the most famous bitcoin libraries I assume that there is a fundamental error in my understanding. Thus, the question: what am I doing wrong in computing the compressed bitcoin address from a private key?\nI have installed the following library: pip3 install bitcoin in the minimal example below, I am using <python> 3.8.5 on Ubuntu 20.04.\nimport bitcoin\n\n\nclass WalletWithBalance:\n    def __init__(self, _private_key: str):\n        self.private_key_uncompressed_hex: str = _private_key\n\n        # public keys:\n        self.public_key_uncompressed_as_x_y_tuple_hex = self.get_private_key_as_x_y_tuple()\n        self.public_key_compressed_hex = self.get_compressed_public_key_hex()\n\n        # addresses:\n        self.address_compressed = bitcoin.pubkey_to_address(self.public_key_compressed_hex)\n\n    def get_public_key_as_raw_hex_str(self):\n        public_key_as_raw_hex_str = bitcoin.encode_pubkey(self.public_key_uncompressed_as_x_y_tuple_hex, 'hex')\n        return public_key_as_raw_hex_str\n\n    def get_private_key_as_x_y_tuple(self):\n        private_key_raw_decimal_number = bitcoin.decode_privkey(self.private_key_uncompressed_hex, 'hex')\n        return bitcoin.fast_multiply(bitcoin.G, private_key_raw_decimal_number)\n\n    def get_compressed_public_key_hex(self):\n        (public_key_x, public_key_y) = self.public_key_uncompressed_as_x_y_tuple_hex\n        return self.get_compressed_prefix(public_key_y) + bitcoin.encode(public_key_x, 16)\n\n    @staticmethod\n    def get_compressed_prefix(public_key_y):\n        if public_key_y % 2 == 0:\n            return \"02\"\n        else:\n            return \"03\"\n\n\nif __name__ == \"__main__\":\n    wallet = WalletWithBalance(_private_key=\"0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c\")\n\nThe stacktrace reads:\n\/usr\/bin\/<python>3 \/foo\/minimal_example.py\nTraceback (most recent call last):\n  File \"\/foo\/minimal_example.py\", line 36, in <module>\n    wallet = WalletWithBalance(_private_key=\"0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c\")\n  File \"\/foo\/minimal_example.py\", line 13, in __init__\n    self.address_compressed = bitcoin.pubkey_to_address(self.public_key_compressed_hex)\n  File \"\/DoeJohn\/.local\/lib\/<python>3.8\/site-packages\/bitcoin\/main.py\", line 452, in pubkey_to_address\n    return bin_to_b58check(bin_hash160(pubkey), magicbyte)\n  File \"\/DoeJohn\/.local\/lib\/<python>3.8\/site-packages\/bitcoin\/main.py\", line 334, in bin_hash160\n    intermed = hashlib.sha256(string).digest()\nTypeError: Unicode-objects must be encoded before hashing","808":"I just started learning about <hyperledger> Fabric, and I was wondering is there any way to apply business logic to the endorsement and transaction commitment process?\nFor example, if the endorsement policy is set to AND('Org1.member', 'Org2.member') could I somehow define what logic does the Org1.member execute to sign a transaction as valid?\nAnd could that logic be based on some State object value? (like object.NumberProp > 5)\nI came around the Endorsement and Validation plugins article but I don't fully understand if that would server for that purpose or not.\nSorry for any misunderstanding I may have about the technology.","809":"I want to find all the polkadot accounts which either have an index or have registered their identity; similar to https:\/\/polkascan.io\/polkadot\/account\/identities and https:\/\/polkascan.io\/polkadot\/indices\/account.","810":"Can smart contracts launch cloud computing services like Iaas i.e  is that possible to write a deployment script for the smart contract to launch cloud services","811":"I am trying to establish a websocket to <blockchain> over <blockchain> exchange api, but I get a response like HTTP\/1.1 400 Bad Request.\nCode example taken from https:\/\/github.com\/websocket-client\/websocket-client\nCODE I\n\nimport websocket\nfrom websocket import create_connection\n\ntry:\n    import thread\nexcept ImportError:\n    import _thread as thread\nimport time\n\n\ndef on_message(ws, message):\n    print(message)\n\n\ndef on_error(ws, error):\n    print(error)\n\n\ndef on_close(ws):\n    print(\"### closed ###\")\n\n\ndef on_open(ws):\n    msg = '{\"token\": \"\", \"action\": \"subscribe\", \"channel\": \"auth\"}'\n    ws.send(msg)\n\n\nif __name__ == \"__main__\":\n    # options = {'origin': 'https:\/\/exchange.<blockchain>.com'}\n    url = \"wss:\/\/ws.prod.<blockchain>.info\/mercury-gateway\/v1\/ws\"\n    websocket.enableTrace(True)\n    ws = websocket.WebSocketApp(url,\n                                on_message=on_message,\n                                on_error=on_error,\n                                on_close=on_close)\n    ws.on_open = on_open\n    ws.run_forever()\n\n--- request header ---\nGET \/mercury-gateway\/v1\/ws HTTP\/1.1\nUpgrade: websocket\nConnection: Upgrade\nHost: ws.prod.<blockchain>.info\nOrigin: http:\/\/ws.prod.<blockchain>.info\nSec-WebSocket-Key: ldRVrsrxBUnvokDHvzNICw==\nSec-WebSocket-Version: 13\n\n--- response header ---\nHTTP\/1.1 400 Bad Request\nServer: nginx\nDate: Mon, 08 Feb 2021 23:20:44 GMT\nContent-Type: text\/plain; charset=UTF-8\nContent-Length: 70\nX-Cache-Status: 9b46f4091784da7cbae64c3e66446707\nX-<blockchain>-Language: en\nX-<blockchain>-Language-ID: 0:0:0 (en:en:en)\nX-Request-ID: 5ef71341f43f1d9ec5d37c25164676dc\nX-Original-Host: ws.prod.<blockchain>.info\nX-<blockchain>-Server: <blockchain>FE\/1.0\nX-<blockchain>-CP-F: j1vn 0.012 - 5ef71341f43f1d9ec5d37c25164676dc\nStrict-Transport-Security: max-age=31536000; includeSubDomains; preload\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nVia: 1.1 google\nAlt-Svc: clear\nConnection: close\n\nI tried with and without the options dictionary, but without any success.\nAlthough that code works, but I need the event methods on_message, on_error, on_close and on_open.\nEither there is a way to get those events working for CODE II or there is a way to establish the websocket connection for CODE I.\nHelp is much appreciated. Thank you!\nCODE II\nfrom websocket import create_connection\noptions = {}\noptions['origin'] = 'https:\/\/exchange.<blockchain>.com'\nurl = \"wss:\/\/ws.prod.<blockchain>.info\/mercury-gateway\/v1\/ws\"\nws = create_connection(url, **options)\nprint(ws.sock_opt)\nmsg = '{\"token\": \"\", \"action\": \"subscribe\", \"channel\": \"auth\"}'\nws.send(msg)\nresult = ws.recv()\nprint(result)\nmsg = '{\"action\": \"subscribe\", \"channel\": \"balances\"}'\nws.send(msg)\nresult = ws.recv()\nprint(result)","812":"we're trying to retrieve commited document revision in qldb with its transaction hash. however it is not returning a row that has particular hash while trying below query\nSELECT * FROM history(Users) AS h WHERE h.hash='8kmIsF2X2HonQDhuoosBbKZtSQCjHZgnyUmPGZa9pJc='\n\nI believe that tx hash in qldb revision is ion literal so it should not be treated as string. so how can we retreive document revision by hash","813":"I want to know that if exists a generic api that I put a wallet address, and it returns the balance of this wallet, or if each cryptocurrency offers an api to do it? Or it's not possible? As far as I know, see the balance of one wallet is public, right?\nThanks!","814":"If I don't use metamask who manages the private key and the incoming or outgoing ether?\nIn this article https:\/\/medium.com\/@mehradsadeghi\/dapps-without-metamask-17528d14e3fa the author shows how to make a connection to <blockchain> without using metamask. But if it doesn't use metamask how is ether handled? What happens when a user has to send or receive money?","815":"I am new to the <blockchain> world, therefore I have a general understanding of the concept but mainly as a user.\nIs it there a way so that the reputation of a node depends on some sort of action taken by other nodes? In the same way, the \"quantity\" of reputation that a node is able to confer to another depends on its reputation.\nThe objective of this strategy is to create a validation network in which everyone can grow but their growth is based on the reputation gained by other nodes.\nthanks to anyone who can contribute","816":"Although the official algosdk (<python> SDK for Algorand) documentation suggests that a wallet can be recovered by simply invoking the following function (link):\ncreate_wallet(name, pswd, driver_name='sqlite', master_deriv_key=None)\n\nwith the fourth argument:\nmaster_deriv_key (str, optional) \u00e2\u0080\u0093 if recovering a wallet, include\n\nwallet recovery does not work in my code and leads to experience an exception as well. Also the official Algorand documentation shows how to use the abovementioned function for recovering a wallet (link):\n# recover the wallet by passing mdk when creating a wallet\nnew_wallet = kcl.create_wallet(\"MyTestWallet2\", \"testpassword\", master_deriv_key=mdk)\n\nBelow, you can watch at my code, a very simple snippet that I coded to make some tests with Algorand SDK:\nfrom algosdk import kmd\nfrom algosdk import mnemonic\n\nkmd_clt = kmd.KMDClient('855d39510cce40caf11de4c941b37632d1529ec970156214528a33a0ae8473b4', 'http:\/\/127.0.0.1:6969')\nif kmd_clt:\n    kmd_wlt_mdk = None\n    kmd_wlt_list = kmd_clt.list_wallets()\n    for kmd_wlt in kmd_wlt_list:\n        kmd_name = kmd_wlt['name']\n        kmd_id = kmd_wlt['id']\n        if kmd_name == 'wallet_name':\n            kmd_wlt_hdl = kmd_clt.init_wallet_handle(kmd_id, 'wallet_password')\n            if kmd_wlt_hdl:\n                kmd_wlt_mdk = kmd_clt.export_master_derivation_key(kmd_wlt_hdl, 'wallet_password')\n            break\n    if kmd_wlt_mdk:\n        kmd_wlt = kmd_clt.create_wallet('wallet_name', 'wallet_password', master_deriv_key=kmd_wlt_mdk)\n        kmd_wlt_hdl = kmd_clt.init_wallet_handle(kmd_wlt['id'], 'wallet_password')\n        acc_addr_list = kmd_clt.list_keys(kmd_wlt_hdl)\n        for acc_addr in acc_addr_list:\n            account_address = acc_addr\n            print(account_address)\n            account_key = kmd_clt.export_key(kmd_wlt_hdl, 'wallet_password', account_address)\n            print(account_key)\n            account_mnemonic = mnemonic.from_private_key(account_key)\n            print(account_mnemonic)\n\nBelow, you can watch at the Traceback and the error message returned at run-time:\nTraceback (most recent call last):\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/site-packages\/algosdk\/kmd.py\", line 63, in kmd_request\n    resp = urlopen(req)\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/urllib\/request.py\", line 222, in urlopen\n    return opener.open(url, data, timeout)\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/urllib\/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/urllib\/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/urllib\/request.py\", line 569, in error\n    return self._call_chain(*args)\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/urllib\/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/urllib\/request.py\", line 649, in http_error_default\n    raise HTTPError(req.full_url, code, msg, hdrs, fp)\nurllib.error.HTTPError: HTTP Error 400: Bad Request\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/site-packages\/algosdk\/kmd.py\", line 67, in kmd_request\n    raise error.KMDHTTPError(json.loads(e)[\"message\"])\nalgosdk.error.KMDHTTPError: wallet with same name already exists\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"algorand_test.py\", line 49, in <module>\n    kmd_wlt = kmd_clt.create_wallet('emiliano', 'emiliano', master_deriv_key=kmd_wlt_mdk)\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/site-packages\/algosdk\/kmd.py\", line 118, in create_wallet\n    return self.kmd_request(\"POST\", req, data=query)[\"wallet\"]\n  File \"\/home\/emiliano\/anaconda3\/lib\/<python>3.7\/site-packages\/algosdk\/kmd.py\", line 69, in kmd_request\n    raise error.KMDHTTPError(e)\nalgosdk.error.KMDHTTPError: {\n  \"error\": true,\n  \"message\": \"wallet with same name already exists\"\n}\n\nIt seems to be clear how the create_wallet function is the sinner of such behavior which leads to get back the error \"wallet with same name already exists\". Internals of Algorand SDK are very simple, APIs are wrappers for REST methods. Function create_wallet does simply (link):\ndef create_wallet(self, name, pswd, driver_name=\"sqlite\",\n                  master_deriv_key=None):\n    \"\"\"\n    Create a new wallet.\n    Args:\n        name (str): wallet name\n        pswd (str): wallet password\n        driver_name (str, optional): name of the driver\n        master_deriv_key (str, optional): if recovering a wallet, include\n    Returns:\n        dict: dictionary containing wallet information\n    \"\"\"\n    req = \"\/wallet\"\n    query = {\n        \"wallet_driver_name\": driver_name,\n        \"wallet_name\": name,\n        \"wallet_password\": pswd\n    }\n    if master_deriv_key:\n        query[\"master_derivation_key\"] = master_deriv_key\n    return self.kmd_request(\"POST\", req, data=query)[\"wallet\"]\n\nI'm sure the master derivation key passed in input is correct since I've alredy checked it with the goal command from console.\nHas anyone else experienced this type of problem before?","817":"I have already found many wallets that offer multisig smart contract deployment. But this way is very expensive and slow, because it requires a lot of <transactions>.\nI think there is another way. For example, we can create many private keys, sign <transactions> with them, and then combine the results into one final transaction.\nIs such a scheme possible? Or maybe I missed some services?","818":"I tried to use polkadot-js libray to run a simple app for transferring tokens between Dusty accounts on plasm. Source code and package.json for running the snippet is found on this git repo\nNode version: v12.8.2\nYarn version: 1.22.5\n\n\nconst { ApiPromise, WsProvider } = require('@polkadot\/api')\nconst { Keyring } = require('@polkadot\/keyring')\nconst plasmDefinitions = require('@plasm\/types\/interfaces\/definitions');\nconst jsonDefinitions = require('.\/types.js')\nconst fs = require('fs')\nconst BN = require('bn.js')\n\nstartChain()\n\nasync function startChain() {\n  console.log(\"trying connection to \", process.env.RPC_URL)\n  const targetAddress = process.env.TARGET_ADDRESS\n  const provider = new WsProvider(process.env.RPC_URL)\n  const types = Object.values(plasmDefinitions).reduce(\n      (res, { types }) => ({ ...res, ...types }),\n      {},\n  );\n\n  const api = new ApiPromise({\n      provider,\n      types\n  });\n\n  api.on('connected', () => console.log(`Connected to ${process.env.RPC_URL}`));\n  api.on('disconnected', () => console.log(`Disconnected from ${process.env.RPC_URL}`));\n  await api.isReady;\n  const [chain, nodeName, nodeVersion] = await Promise.all([\n    api.rpc.system.chain(),\n    api.rpc.system.name(),\n    api.rpc.system.version()\n  ])\n\n  console.log(`You are connected to chain ${chain} using ${nodeName} v${nodeVersion} - ${process.env.RPC_URL}`)\n\n  const keyring = new Keyring({ type: 'sr25519' })\n  const fromPair = keyring.addFromUri(process.env.PLASM_MNEMONIC)\n  const fromAmountUnits = new BN('1000000000000000')\n  const transfer = api.tx.balances.transfer(targetAddress, fromAmountUnits)      \n  \/\/ send value\n  \/\/const nonce = await api.query.system.accountNonce(process.env.FROM_ADDRESS)\n  const nonce = await api.rpc.system.accountNextIndex(process.env.FROM_ADDRESS)\n  console.log(\"got nonce\", nonce)\n  const txHash = await transfer.signAndSend(fromPair, {nonce})\n\n}\n\nStack trace:\ntrying connection to  wss:\/\/rpc.dusty.plasmnet.io\/ Connected to wss:\/\/rpc.dusty.plasmnet.io\/ You are connected to chain Dusty using Plasm Node v1.6.1-cf15b11-x86_64-linux-gnu - wss:\/\/rpc.dusty.plasmnet.io\/ got nonce Type { negative: 0, words: [ 0 ], length: 1, red: null, registry: TypeRegistry {} } 2021-02-05 21:00:27        RPC-CORE: submitExtrinsic(extrinsic: Extrinsic): Hash:: 1002: Verification Error: Execution: Could not convert parameter txbetween node and runtime: Error decoding field CheckMortality.0: RuntimeApi, Execution: Could not convert parametertxbetween node and runtime: Error decoding field CheckMortality.0 (node:13572) UnhandledPromiseRejectionWarning: Error: 1002: Verification Error: Execution: Could not convert parametertxbetween node and runtime: Error decoding field CheckMortality.0: RuntimeApi, Execution: Could not convert parametertxbetween node and runtime: Error decoding field CheckMortality.0 at RpcCoder._checkError (<mydir>\\examples\\plasm-simple-transfer\\node_modules\\@polkadot\\api\\node_modules\\@polkadot\\rpc-provider\\coder\\index.js:84:13) at RpcCoder.decodeResponse (<mydir>\\examples\\plasm-simple-transfer\\node_modules\\@polkadot\\api\\node_modules\\@polkadot\\rpc-provider\\coder\\index.js:47:10) at WsProvider.value (<mydir>\\examples\\plasm-simple-transfer\\node_modules\\@polkadot\\api\\node_modules\\@polkadot\\rpc-provider\\ws\\index.js:214:90) at W3CWebSocket.value [as onmessage] (<mydir>\\examples\\plasm-simple-transfer\\node_modules\\@polkadot\\api\\node_modules\\@polkadot\\rpc-provider\\ws\\index.js:194:153) at W3CWebSocket._dispatchEvent [as dispatchEvent] (<mydir>\\examples\\plasm-simple-transfer\\node_modules\\yaeti\\lib\\EventTarget.js:107:17) at W3CWebSocket.onMessage (<mydir>\\examples\\plasm-simple-transfer\\node_modules\\websocket\\lib\\W3CWebSocket.js:234:14) at WebSocketConnection.<anonymous> (<mydir>\\examples\\plasm-simple-transfer\\node_modules\\websocket\\lib\\W3CWebSocket.js:205:19) at WebSocketConnection.emit (events.js:315:20) at WebSocketConnection.processFrame (<mydir>\\examples\\plasm-simple-transfer\\node_modules\\websocket\\lib\\WebSocketConnection.js:554:26) at <mydir>\\examples\\plasm-simple-transfer\\node_modules\\websocket\\lib\\WebSocketConnection.js:323:40 (node:13572) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag--unhandled-rejections=strict (see https:\/\/nodejs.org\/api\/cli.html#cli_unhandled_rejections_mode). (rejection id: 1) (node:13572) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the <node.js> process with a non-zero exit code.\nAdditionally when i try to do a clear run (delete node_modules and reinstall) i get the same message but with field CheckMortality replaced by CheckNonce. Fields returned by plasm-types library can be found in this file in json format.\nI tried to figure it out what types are wrong by going through node templates respositories, but i couldnt figure it out. How can it be fixed?","819":"I want to deploy the <hyperledger> code on kuberenetes so want to check if someone have any experience how we can deploy this on kubernetes.","820":"I want a make some <transactions>. Did like mentioned here\nsendRawTransaction return me hash of transaction. But there is not any transaction. My pending <transactions> count is 0. When I call getTransaction method with that hash , the result is\n{\n   'blockHash': None, \n   'blockNumber': None, \n   'from': 'my address', \n   'gas': 118685, \n   'gasPrice': 1000000000, \n   'hash': HexBytes('some hash'), \n   'input': 'some long hash', \n   'nonce': 1254, \n   'r': HexBytes('...'), \n   's': HexBytes('...'), \n   'to': 'my contract address', \n   'transactionIndex': None, \n   'v': 42, \n   'value': 0\n}\n\nWhat can be the reason?","821":"I've tried to self-teach myself SQL but am struggling with a dashboard I want to build.\nHow do I manipulate or change the date which is \"08\/03\/18 09:00\" so that I can group it by month+year and not per second?\n[link to what the table looks like]\nmy current attempt:\nSELECT AVG(price) as \"price\", MONTH(minute) as month\nFROM prices.usd\nWHERE minute > now() - interval '365 days'\nAND contract_address = '\\x6b175474e89094c44da98b954eedeac495271d0f'\nGROUP BY month","822":"I was reading this contract that I found in the solidity documentation and I assume this contract is unique and deployed by the auction house. All users can make an offer. From an implementation point of view, how does a user call the methods of this contract using <web3>.js if he didn't deploy it?","823":"I would like to convert user's Ethereum address for example(0xc5D3a7d27DbDe23A7FC5E53F1a6f17F38C03194F) to substrate based address in this case(5DXoin5qNbzKt88CxDtx86vmaCxhxYzEfEWXahTvwgYMf4Gq). I manage to do it via subkey although it is based on the mnemonic, is it possible for me to convert any public address in any network to substrate-based address? The reason to do this is to to allow users with existing address and infrastructure such as Metamask or Trezor can use Polkadot and other substrate-based chain.","824":"I'm new to <web3>.\nI have created a project in infura.io.\nw3 = <web3>(<web3>.HTTPProvider('https:\/\/ropsten.infura.io\/v3\/PROJECT_ID'))\nw3.isConnected() # True\n\ncont = w3.eth.contract(address='my_contract_address', abi = my_abi)\ncont.all_functions() # working well, return all functions inside contract\n\ncont.funtions.get_info().call\n\nafter the last line I get an error\nrequests.exceptions.HTTPError: 403 Client Error: Forbidden for url: https:\/\/ropsten.infura.io\/v3\/PROJECT_ID\n\nWhat does it means, and how to fix it?","825":"I have simple smart contract in Solidity. I want to call the function <geth>ello() after I deployed the smart contract (to see variable in deployed contract without calling it by myself). Can I do this?\n    pragma solidity 0.5.12;\n\n    contract Hello {\n    \n    string public helloStr = \"Hello, world 2!\";\n    \n    uint[] public nums = [10, 20, 30];\n    \n    function <geth>ello() public view returns (string memory) {\n        \n        \n        return helloStr;\n        \n    }\n    \n    function pushNewElement(uint newElement) public returns (uint) {\n        \n        nums.push(newElement);\n        \n    }\n    \n    function popLastElement () public returns (uint) {\n        \n        nums.pop();\n        \n    }\n    \n   \n    function setHello(string memory newHello) public {\n        \n        \n        helloStr = newHello;\n        \n    }\n    \n    \n}","826":"I\u00e2\u0080\u0099m trying to create an array of 10 integers (uint256) and hard-code their initial starting values - but I keep getting the following error (which weirdly talks about uint16, even though I specifically ask for uint256):\nTypeError: Type uint16[10] memory is not implicitly convertible to expected type uint256[] memory.\n\nHere\u00e2\u0080\u0099s my code:\nuint256 memory myNumbersArray = new uint256[](10);\nmyNumbersArray = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]; \n\nI also tried it this way:\nuint256[10] memory myNumbersArray;\nmyNumbersArray = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900]; \n\nSame results.\n(I think I also tried to do the whole thing in one line.)\nAm I getting this error because the actual values I\u00e2\u0080\u0099m assigning are so small that they don\u00e2\u0080\u0099t need to be of type uint256?\nI need to know this because the future values that this array is supposed to hold will absolutely be big enough to merit being of type uint256.\nHow do I solve this?\nThe starting values I'm assigning aren't filler\/dummy values - they're exactly what I need them to be. So it\u00e2\u0080\u0099s not as if I can just plug in a bunch of crazy high numbers for no reason just to pass compilation or something.","827":"It would be good to know how many times a transaction has been confirmed on the RSK <blockchain> so that when one user sends RIF to another wallet or to an exchange wallet for example we can see how many confirmations have occurred","828":"System: <hyperledger> Fabric 1.4.6\nTopology: 2 organizations (Org1, Org2) with 2 peers (peer1, peer2) each and Raft ordering service\nEndorsement Policy: Any 2 peers\nChaincode interaction method: through <node.js> SDK\nStateDB: CouchDB\nDetailed Steps to re-create the problem:\n\nOrg1 successfully creates a record (i.e. record#ABC) by sending proposal to all 4 peers for endorsement via chaincode method stub.putState()\nrecord#ABC is just a simple one layer JSON (key-value pairs)\nVisits the CouchDB portal of peer2 of Org2 and deletes the record#ABC directly\nRetrieve record#ABC from all 4 peers via chaincode method stub.getState() and 3 peers return same correct result and only peer2 of Org2 returns empty result as expected\nRetrieve record#ABC from all 4 peers via chaincode method stub.<geth>istoryForKey() and all return the same results as expected (To my understanding, this method performs query directly from levelDB instead of CouchDB)\nOrg1 successfully updates one value of record#ABC by sending proposal to all 4 peers for endorsement via chaincode method stub.putState()\nBy checking the <node.js> app log, peer2 of Org2 returns an error of No such Data as expected. Since it only requires 2 endorsement signatures, it is expected to pass through the validation.\nBy checking docker log of peer2 of Org2, block#007 is committed but its transaction is marked as invalid by state validator because of MVCC_READ_CONFLICT\nRetrieve record#ABC from all 4 peers via chaincode method stub.getState() and only peer2 of Org2 return empty result as expected\nRetrieve record#ABC from all 4 peers via chaincode method stub.<geth>istoryForKey() and 3 peers return the same results of 2 versions of record#ABC while peer2 of Org2 returns only original version of record#ABC without the latest version\nRetrieve the latest block (i.e. block#007) containing the updated record#ABC transaction from all peers. All the main content of the blocks are the same.\nThe <blockchain> can continue to receive new request to create new record.\n\nHere comes to my questions:\n\nWhy the problematic block (block#007) is still committed in peer2 of Org2?\nWhy the <blockchain> system can continue to operate without throwing serious error given there is discrepancy between <blockchain>s of different peers? Should it be re-designed to halt the operation until the discrepancy issue is fixed?","829":"I have a table with a JSON column. in this column I have a <blockchain> hash data.\nfor example this JSON:\n{  \"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\": {\n\"transaction\": {\n  \"block_id\": 648895,\n  \"id\": 568135560,\n  \"hash\": \"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\",\n  \"date\": \"2020-01-14\",\n  \"time\": \"2020-01-14 11:37:37\",\n  \"size\": 198,\n},\n\"inputs\": [\n  {\n    \"block_id\": 648859,\n    \"transaction_id\": 567456558,\n    \"index\": 4,\n    \"transaction_hash\": \"8aa2c6c9a804mate29790e03fac462782d99f16614732f82a5214786926e1397\",\n    \"date\": \"2020-01-13\",\n    \"time\": \"2020-01-13 23:15:37\",\n    \"value\": 300830,\n    \"value_usd\": 33.2264,\n    \"recipient\": \"1LcrmomE74BPzBTdduE8WHU2ox4QAFEpQi\",\n\n  }\n],\n\"outputs\": [\n  {\n    \"block_id\": 648445,\n    \"transaction_id\": 568146680,\n    \"index\": 0,\n    \"transaction_hash\": \"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\",\n    \"date\": \"2020-01-14\",\n    \"time\": \"2020-01-14 11:37:37\",\n    \"value\": 300048,\n    \"value_usd\": 31.9397,\n    \"recipient\": \"12UJZqf4sDGRNb9uYBABJkMyX91iLjDViT\",\n\n  }\n]}} \n\nI used below query:\nSELECT *, JSON_VALUE(d.json_data,'$.017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894.transaction.size') as jj\nFROM <blockchain> as d\n\nbut I have an error\n\nMsg 13607, Level 16, State 4, Line 39\nJSON path is not properly formatted. Unexpected character '0' is found at position 2.\n\nDoes anyone have any idea?","830":"Taking a database server in a Docker container that could deployed by a smart contract on your local machine.\nHow to do this?\nCan anyone help please?","831":"To introduce my question I would like to give an example. Suppose a customer wants to join a gym. A transaction is sent and contains:\n\ncustomer id\nname and surname\nstart date\nend date\n\nThe smart contract receives the transaction and creates a membership at the gym. Where is this data saved? After some time I want to verify that the subscription has not expired and I send a checkRequest. Can I specify only the id and then the smart contract through the id search for the subscription? I mean, can the smart contract access the subscription knowing the id? Can the smart contract take the subscription that matches the sent id and do the check?\nI cannot understand the difference between the data saved on the <blockchain> permanently (when is this data saved?) and the data saved in the smart contract (does the smart contract have storage?) Is there a difference? I know the question is trivial but I can't understand.","832":"Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     We don\u00e2\u0080\u0099t allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.\n                \n                    \n                        Closed 2 years ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nWhat is the best <blockchain> platform to store images on it for a <blockchain> application that stores images and can be retrieved easily or changed?","833":"Is it possible for a smart contract to make calls to the Oracle in loop (as long as a condition is met) in a dapp? For example: a loop which makes calls to the oracle which returns the result on a callback.\nOr does the backand have to make one call at a time?","834":"This is just an example. I'm building this dapp where I have a start date and an end date and every day I want to get a random number from an oracle. If at some point the sum of the numbers I get every day exceeds a threshold then an OK message returns to my backend. Let's assume we have a range of 7 days.\nDay 1:\n\nMy backend sends a request to the \"smart contract Number\" and calls the requestOk () method.\nThe smart contract Number calls the <geth>Number () method of the oracle smart contract and passes it the callback on which to return the response.\nThe oracle smart contract issues an updateN () event\nThe oracle service retrieves the data and returns it to the oracle smart contract by calling the UpdateNumber () method\nThe oracle smart contract uses the callback and returns the data to the smart contract Number\nThe smart contract Number checks if the number received that day is greater than a threshold. If it is greater, an ok message returns to the backande, otherwise the same procedure is performed for day 2, I take the new number and add it to the number of day 1. Finally I compare the sum (day number 1 + day number 2) with the threshold and so on.\n\nNow my question is: can the operations I have to perform again for day 2 automatically start from the smart contract Number? I mean, is it possible to create a mechanism allows the smart contract Number to ask the oracle for a random number every day for a week? Or must it be my backend asking to do the same operations for day 2 and every day of the week?","835":"We have substrate node with babe + grandpa consensus. We tried to run it on different computers and create a network. Everything works if we use the pre-installed accounts of Alice and Bob. We are trying to create our own config with our own keys. using subkey, 2 pairs of 4 keys were generated. 2 in sr25519 format (account address and account stash address), then a key in ed25519 format (used for GrandpaId). We took a seed-phrase from him and created a sr25519 key (for Babe). That is, we have 2 validators. We launched the nodes and using rpc requests inserted keys for both validators (babe + gran)\nNodes see each other on the network, create blocks, but do not finalize blocks. With what it can be connected? The screenshots show the config that we use when starting the network photo and second photo","836":"[error saying <web3> is not defined][1]<script>\n    var myContract;\n    async function CheckMetamaskConnection() {\n        \/\/ Modern dapp browsers...\n        if (window.ethereum) {\n            window.<web3> = new <web3>(window.ethereum);\n            try {\n                \/\/ Request account access if needed\n                await ethereum.enable();\n                \/\/ Acccounts now exposed\n                return true;\n            } catch (error) {\n                \/\/ User denied account access...\n                return false;\n            }\n        }\n        \/\/ Legacy dapp browsers...\n        else if (window.<web3>) {\n            window.<web3> = new <web3>(<web3>.currentProvider);\n            \/\/ Acccounts always exposed\n\n            return true;\n        }\n        \/\/ Non-dapp browsers...\n        else {\n            console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            return false;\n        }\n    }\n\n    $(document).ready(async function () {\n        var IsMetamask = await CheckMetamaskConnection();\n        if (IsMetamask) {\n            myContract = await <web3>.eth.contract(SmartContractABI).at(SmartContractAddress);\n            getCandidate(1);\n            getCandidate(2);\n\n            await myContract.eventVote({\n                fromBlock:0\n            }, function(err, event){\n                console.log(\"event :\", event);\n                getCandidate(event.args._candidateid.toNumber());\n            });\n            console.log(\"myContract :\", myContract);\n            console.log(\"Metamask detected!\")\n        } else {\n            console.log(\"Metamask not detected\");\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Metamask not detected!',\n              onClose() {\n                location.reload();\n              }\n            });\n        }\n    });\n\n    async function getCandidate(cad){\n        await myContract.candidates(cad, function(err, result){\n            if (!err) {\n                console.log(\"result : \", result);\n                document.getElementById(\"cad\" + cad).innerHTML = result[1];\n                document.getElementById(\"cad\"+cad+'count').innerHTML = result[2].toNumber();\n            }\n        });\n    }\n\n    async function Vote(cad){\n        await myContract.vote(cad, function(err, result){\n            if(!err){\n                console.log(\"We are winning!\");\n            } else{\n                console.log(\"Can not connect to the smart contract\");\n            }\n        })\n    }\n\n<\/script>`\n\ni have <node.js> and metamask in my system(windows 10)\ni cloned you project from github and runned it by following command\nnpm install\nnode index.js\nthe UI deployed perfectly in localhost:3000 but when i try to vote the transaction is not working!!!\nthen i saw content on smart contract is not rendering!!!\nthen i checked metamask , which was connected and have 1 ether on ropsten network!!!\nthen i try ganache (local <blockchain> provider) and still the transaction is not working!!!\nthen i paste the smart contract in remix and get the ABI and smart contract address and still not working!!!\nthen i goto developer tool of browser and saw below error!!!!...i have no idea of this error!!!!...how can i solve this???","837":"I'm making a block chain application using <hyperledger> Fabric Node SDK, and in it I have to implement the functionality of deleting a user's account.\nBelow is my code for this:\n\/\/ Revoke the user, then delete the user from wallet.\nawait ca.revoke({ enrollmentID: email }, adminUser);\n                \nconst identityService = ca.newIdentityService();\nidentityService.delete(email, adminUser, true).then( async function(response) {\n                    \n    await wallet.remove(email);\n    logger.debug(\"Successfully removed user from wallet!\");\n\n}).catch((error) => {\n    logger.error(`Getting error: ${error}`);\n    return error.message;\n});\n\nI've tried debugging and separately running each line in the code and I've got to know that this whole code works but only the identityService.delete function does not work.\nThis function gives the error that Identity removal is disabled.\nLooking more into this issue, I've got to know that I have to add:\ncfg:\n    identities:\n        passwordattempts: 10\n        allowremove: true \n\nin the standard configuration file.\nHere is the Fabric CA Server's Configuration File.\nIn this file the cfg is at the end just above the Operations Section.\nAs I have multiple configuration files in my project, I looked into them and found the same Operations Section in one file. I added the cfg lines above it.\nBut then again the same Identity removal is disabled error shows.\nWhat I want to know is that after adding these lines to the configuration file, why is the error still showing. I again created the channel after adding the lines. How do I know that my block chain network is using the updated configuration file. Or is there a way to update a configuration file and I have not done it properly.\nBelow is the screenshot of the error that I'm getting:","838":"I use ethereum platform for develop dapp. And I need to store some draft data out of <blockchain> before push it to network . In this case can I use smart contracts or store draft data in db or store it in localStorage . Which solution is good ? Or there is something else solution for such case ?","839":"What is the key difference between Private Nodes, Public Nodes and Bakers in terms of Tezos <blockchain> Network?\nI thought that Public node = Baker, but it looks like not\nAccording to tzkt.io we can see 4362 all Tezos Nodes (Private + Public ?), 359 public nodes and 113 bakers. The number of public nodes is not similar with the number of bakers","840":"I am approaching ethereum for the first time and I am reading the documentation. Can anyone explain the difference between Ethereum Web APIs (BlockCypher) and The Ethereum API as a service (infura)? https:\/\/ethereum.org\/en\/developers\/docs\/apis\/backend\/#available-libraries","841":"I really do not understand what the typeError is on my first test. Can someone take a look at is and tell me what the problem is.\nenter image description here\nenter image description here","842":"Are there any differences on the API supported by full node vs light node in Ethereum?","843":"I am a complete beginner and just finished my first <python> course on mimo.\nNow I would like to try myself on a project to create a <blockchain> in <python>.\nhttps:\/\/medium.com\/@vanflymen\/learn-<blockchain>s-by-building-one-117428612f46\nFor this project I need to install pipenv but am struggeling to install it.\nNeither cmd or pycharm lets me follow through the steps as presented under this link:\nhttps:\/\/pypi.org\/project\/pipenv\/\nI assume that I need to connect <python> with windows via the environment variable but struggeling to do that.\nAnaconda is also installed on my computer.\nCould you guys please help me with this topic?\ncheers\nBasti","844":"I'm making a block chain application for which I'm using <hyperledger> Fabric Node SDK. When a user signs up then the user's certificate is added to the wallet as an identity. Now the attributes that I'm storing in a user's certificate are the email and password.\nAlso, the user's password is not stored anywhere else, but only in the certificate.\nNow, I also need to update the user's password.\nSearching on the internet, I got to know that the attributes in the certificate can be updated using the identityService's update function provided in Node and you don't have to re-enroll a user if you're using the identityService's update function.\nThe issue is that I tried it and the response showed the updated password.\nBut then when I checked the certificate, the old password was still there i.e. it had not been updated.\nI'm using the fabric-ca-client package for the FabricCAServices and the x509 package for the x509 certificates.\nThe code with which I am enrolling and registering the user is as follows:\nlet ccp = await getCCP(orgName);\nconst caURL = await getCaUrl(orgName, ccp)\nconst ca = new FabricCAServices(caURL);\n    \nconst walletPath = await getWalletPath(orgName);\nconst wallet = await Wallets.newFileSystemWallet(walletPath);\nlogger.info(`Wallet path: ${walletPath}`);\n\nconst userIdentity = await wallet.get(email); \/\/getting user from the wallet\nif (userIdentity) \/\/if found so user is already registered\n{\n    return \"User Already Exists\";\n}\n    \n\/\/else user does not exist so checking if admin exists\nlet adminIdentity = await wallet.get('admin'); \/\/getting admin from wallet\nif (!adminIdentity) { \/\/if not found so admin does not exist\n    logger.debug('An identity for the admin user \"admin\" does not exist in the wallet');\n    await enrollAdmin(orgName, ccp); \/\/enrolling the admin\n    adminIdentity = await wallet.get('admin');\n    logger.debug(\"Admin Enrolled Successfully\");\n}\n\n\/\/now admin exists, so making a user object for authenticating with the CA(i.e. admin)\nconst provider = wallet.getProviderRegistry().getProvider(adminIdentity.type);\nconst adminUser = await provider.getUserContext(adminIdentity, 'admin');\nlet secret;\ntry {\n    \/\/registering the user, enrolling the user, and importing the new identity into the wallet.\n    secret = await ca.register({ affiliation: 'org1.department1', enrollmentID: email, role: 'client', attrs: [{name: 'userType', value: userType, ecert: true},{name: 'password', value: password, ecert: true}]}, adminUser);\n} catch (error) {\n    return error.message;\n}\n\nconst enrollment = await ca.enroll({ enrollmentID: email, enrollmentSecret: secret, attr_reqs: [{  name: 'userType', optional: false }, {  name: 'password', optional: false }] });\n\nlet x509Identity;\nif (orgName == \"Org1\") {\n    x509Identity = {\n        credentials: {\n            certificate: enrollment.certificate,\n            privateKey: enrollment.key.toBytes(),\n        },\n        mspId: 'Org1MSP',\n        type: 'X.509',\n    };\n} else if (orgName == \"Org2\") {\n    x509Identity = {\n        credentials: {\n            certificate: enrollment.certificate,\n            privateKey: enrollment.key.toBytes(),\n        },\n        mspId: 'Org2MSP',\n        type: 'X.509',\n    };\n}\nawait wallet.put(email, x509Identity); \/\/adding user to wallet\nreturn \"Registered!\";\n\nAnd the code with which I check the attributes stored in the password is:\n\/\/Getting wallet path for orgName...\nconst walletPath = await getWalletPath(orgName);\nconst wallet = await Wallets.newFileSystemWallet(walletPath);\nlogger.info(`Wallet path: ${walletPath}`);\n\n\/\/getting this user from the wallet\nconst userIdentity = await wallet.get(email);\nif (userIdentity) { \/\/if found i.e. user is registered\n    \/\/parsing certificate to get password\n    var issuer = x509.parseCert(userIdentity.credentials.certificate);\n    var jsn = issuer.extensions['1.2.3.4.5.6.7.8.1'];\n    jsn = jsn.substring(2);\n    jsn = (JSON.parse(jsn));\n    \/\/here jsn.attrs.password has the password\n}\n\nAnd the code that I'm using to update the certificate attributes is:\nlet ccp = await getCCP(orgName);\nconst caURL = await getCaUrl(orgName, ccp);\nconst ca = new FabricCAServices(caURL);\n\n\/\/Getting wallet path for orgName...\nconst walletPath = await getWalletPath(orgName);\nconst wallet = await Wallets.newFileSystemWallet(walletPath);\nlogger.info(`Wallet path: ${walletPath}`);\n\nconst userIdentity = await wallet.get(email); \/\/getting this user from the wallet\nif (userIdentity) { \/\/if found i.e. user is registered\n\n    \/\/Create a new gateway for connecting to our peer node\n    const gateway = new Gateway();\n    await gateway.connect(ccp, { wallet, identity: email, discovery: { enabled: true, asLocalhost: true } });\n\n    const identityService = ca.newIdentityService();\n\n    let adminIdentity = await wallet.get('admin'); \/\/getting admin from wallet\n    \/\/now making a user object of the admin\n    const provider = wallet.getProviderRegistry().getProvider(adminIdentity.type);\n    const adminUser = await provider.getUserContext(adminIdentity, 'admin');\n\n    var theIdentityRequest = { enrollmentID: email, affiliation: 'org1.department1', attrs: [ {name: 'userType', value: 'Student', ecert: true},{name: 'password', value: newPassword, ecert: true} ] };\n\n    logger.warn(\"The Request: \", theIdentityRequest);\n\n    let response = await identityService.update(email, theIdentityRequest, adminUser);\n                \n    logger.warn(\"userIdenity attributes: \",response.result.attrs);\n\n    await gateway.disconnect();\n}\n\nI want to know why the certificate still has the old password and how to update the password in the certificate.\nAnd I also want to know that does the identityService update the attributes in the x509 certificate or is reenrolling the user necessary for this?","845":"I want to update my old javascript file that interacts with metamask and solidity. On the server it says metamask no longer injects <web3>? How do I change the following code for the server to request a metamask account?\n    try {\n      const <web3> = await get<web3>();\n      const instance = new <web3>.eth.Contract(\n        contractABI,\n        contractAddress,\n      );\n      var userAccount;\n\n      const accounts = await <web3>.eth.getAccounts();\n      if (accounts[0] !== userAccount) {\n          userAccount = accounts[0];\n      }\n      \n    } catch (error) {\n      \/\/ Catch any errors for any of the above operations.\n      alert(\n        `Failed to load <web3>, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }","846":"This question may sound stupid, it just came to my mind and couldn't find much related info on Google.\nLet's say there are 3 blocks of data: A, B and C\nNormally <blockchain> is for chronological order: B contains the hash of A and C contains the hash of B.\nBut is it possible to create a block chain that A contains the hash of C to form a circular block chain?","847":"I'm using electrs backend API documentation to build btc <blockchain> index engine and local HTTP API - https:\/\/github.com\/Blockstream\/electrs on linux os.\nDuring the process of indexing an error occurred (I repeated whole process more than once and error occurred in the same place - according to my interpretation always at the finish of reading process [moments after to be precise]):\nDEBUG - writing 1167005 rows to RocksDB { path: \".\/db\/mainnet\/newindex\/txstore\" }, flush=Disable\nTRACE - parsing 50331648 bytes\nTRACE - fetched 101 blocks\nDEBUG - writing 1144149 rows to RocksDB { path: \".\/db\/mainnet\/newindex\/txstore\" }, flush=Disable\nTRACE - fetched 104 blocks\nDEBUG - writing 1221278 rows to RocksDB { path: \".\/db\/mainnet\/newindex\/txstore\" }, flush=Disable\nTRACE - skipping block 00000000000000000006160011df713a63b3bedc361b60bad660d5a76434ad59\nTRACE - skipping block 00000000000000000005d70314d0dd3a31b0d44a5d83bc6c66a4aedbf8cf6207\nTRACE - skipping block 00000000000000000001363a85233b4e4a024c8c8791d9eb0e7942a75be0d4de\nTRACE - skipping block 00000000000000000008512cf84870ff39ce347e7c83083615a2731e34a3a956\nTRACE - skipping block 0000000000000000000364350efd609c8b140d7b9818f15e19a17df9fc736971\nTRACE - skipping block 0000000000000000000cc0a4fd1e418341f5926f0a6a5c5e70e4e190ed4b2251\nTRACE - fetched 23 blocks\nDEBUG - writing 1159426 rows to RocksDB { path: \".\/db\/mainnet\/newindex\/txstore\" }, flush=Disable\nDEBUG - writing 1155416 rows to RocksDB { path: \".\/db\/mainnet\/newindex\/txstore\" }, flush=Disable\nDEBUG - writing 232110 rows to RocksDB { path: \".\/db\/mainnet\/newindex\/txstore\" }, flush=Disable\nDEBUG - starting full compaction on RocksDB { path: \".\/db\/mainnet\/newindex\/txstore\" }\nDEBUG - finished full compaction on RocksDB { path: \".\/db\/mainnet\/newindex\/txstore\" }\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { message: \"IO error: While open a file for random read: .\/db\/mainnet\/newindex\/txstore\/000762.sst: Too many open files\" }', src\/new_index\/db.rs:192:44\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nAborted (core dumped)\n\nSize of db directory (where indexes are stored) is over 450GB. My open files limit is 1048576 (checked by ulimit -aH), so probably the problem is not there. I checked https:\/\/github.com\/Blockstream\/esplora\/issues\/133 task and no help. Any ideas what went wrong?\nEDIT:\nSoft limits (after checking by \"ulimit -n\") were equal 1024 - it's was the source of the problem. Setting it to 65000 solved it. I set it by \"ulimit -n 65000\" what worked only during one session in currently opened terminal. I changed etc\/security\/limits.conf, but the changes were not saved globally.","848":"This is sort of a follow up question to my previous post here for reference: Webscraping <blockchain> data seemingly embedded in Javascript through <python>, is this even the right approach?\nBasically, I would receive an output and want to scrape some more features from it. In this case, the final link would be located at https:\/\/tracker.icon.foundation\/address\/hx4ae18d8f72200dc564673a0ae7206d862992753c\nwhere I'm trying to retrieve the balance of 3,570.5434 ICX in the middle of the page. I'm clearly not calling the correct methods (couldn't find any documentation for this) and was wondering where in the source code I could find it. Attempt at trying it in <python>:\nimport requests\nurl = \"https:\/\/tracker.icon.foundation\/v3\/block\/txList\"\nparams = {\n    \"from\": 'hx4ae18d8f72200dc564673a0ae7206d862992753c',\n}\nresponse = requests.get(url, params=params)\nresponse.json()[\"data\"]","849":"I'm referencing this url: https:\/\/tracker.icon.foundation\/block\/29562412\nIf you scroll down to \"<transactions>\", it shows 2 <transactions> with separate links, that's essentially what I'm trying to grab. If I try a simple pd.read_csv(url) command, it clearly omits the data I'm looking for, so I thought it might be JavaScript based and tried the following code instead:\nfrom requests_html import HTMLSession\nsession = HTMLSession()\nr = session.get('https:\/\/tracker.icon.foundation\/block\/29562412')\nr.html.links\nr.html.absolute_links\n\nand I get the result \"set()\"\neven though I was expecting the following:\n['https:\/\/tracker.icon.foundation\/transaction\/0x9e5927c83efaa654008667d15b0a223f806c25d4c31688c5fdf34936a075d632', 'https:\/\/tracker.icon.foundation\/transaction\/0xd64f88fe865e756ac805ca87129bc287e450bb156af4a256fa54426b0e0e6a3e']\nIs JavaScript even the right approach? I tried BeautifulSoup instead and found no cigar on that end as well.","850":"I have a Windows Server that acts as a full node where other clients from PC connects and synchronize with it, all is ok, then I decided to add another hosted vps based on ubuntu 18.04, it doesn't synchronize even it seems number of blocks, I opened the tcp port with ufw but I don't know why it's not syncing:\n2021-01-21T17:11:35Z testcoin Core version v1.0.0.0-g (release build)\n2021-01-21T17:11:35Z InitParameterInteraction: parameter interaction: -connect set -> setting -dnsseed=0\n2021-01-21T17:11:35Z InitParameterInteraction: parameter interaction: -connect set -> setting -listen=0\n2021-01-21T17:11:35Z InitParameterInteraction: parameter interaction: -listen=0 -> setting -upnp=0\n2021-01-21T17:11:35Z InitParameterInteraction: parameter interaction: -listen=0 -> setting -discover=0\n2021-01-21T17:11:35Z InitParameterInteraction: parameter interaction: -listen=0 -> setting -listenonion=0\n2021-01-21T17:11:35Z InitParameterInteraction: parameter interaction: -whitelistforcerelay=1 -> setting -whitelistrelay=1\n2021-01-21T17:11:35Z Assuming ancestors of block 00000a49e6b0d232e39d3c20ed7f9000e034047d42370e869270ec7cb595d6ec have valid signatures.\n2021-01-21T17:11:35Z Setting nMinimumChainWork=0000000000000000000000000000000000000000000000000000000000200020\n2021-01-21T17:11:35Z Using the 'sse4(1way),sse41(4way)' SHA256 implementation\n2021-01-21T17:11:35Z Using RdRand as an additional entropy source\n2021-01-21T17:11:35Z Default data directory \/root\/.testcoin\n2021-01-21T17:11:35Z Using data directory \/root\/.testcoin\n2021-01-21T17:11:35Z Using config file \/root\/.testcoin\/testcoin.conf\n2021-01-21T17:11:35Z Using at most 125 automatic connections (1024 file descriptors available)\n2021-01-21T17:11:35Z Using 16 MiB out of 32\/2 requested for signature cache, able to store 524288 elements\n2021-01-21T17:11:35Z Using 16 MiB out of 32\/2 requested for script execution cache, able to store 524288 elements\n2021-01-21T17:11:35Z Using 0 threads for script verification\n2021-01-21T17:11:35Z HTTP: creating work queue of depth 16\n2021-01-21T17:11:35Z No rpcpassword set - using random cookie authentication.\n2021-01-21T17:11:35Z Generated RPC authentication cookie \/root\/.testcoin\/.cookie\n2021-01-21T17:11:35Z HTTP: starting 4 worker threads\n2021-01-21T17:11:35Z Using wallet directory \/root\/.testcoin\n2021-01-21T17:11:35Z init message: Verifying wallet(s)...\n2021-01-21T17:11:35Z Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\n2021-01-21T17:11:35Z Using wallet wallet.dat\n2021-01-21T17:11:35Z BerkeleyEnvironment::Open: LogDir=\/root\/.testcoin\/database ErrorFile=\/root\/.testcoin\/db.log\n2021-01-21T17:11:35Z scheduler thread start\n2021-01-21T17:11:35Z Cache configuration:\n2021-01-21T17:11:35Z * Using 2.0MiB for block index database\n2021-01-21T17:11:35Z * Using 8.0MiB for chain state database\n2021-01-21T17:11:35Z * Using 440.0MiB for in-memory UTXO set (plus up to 286.1MiB of unused mempool space)\n2021-01-21T17:11:35Z init message: Loading block index...\n2021-01-21T17:11:35Z Opening LevelDB in \/root\/.testcoin\/blocks\/index\n2021-01-21T17:11:35Z Opened LevelDB successfully\n2021-01-21T17:11:35Z Using obfuscation key for \/root\/.testcoin\/blocks\/index: 0000000000000000\n2021-01-21T17:11:35Z LoadBlockIndexDB: last block file = 0\n2021-01-21T17:11:35Z LoadBlockIndexDB: last block file info: CBlockFileInfo(blocks=1, size=288, heights=0...0, time=2021-01-10...2021-01-10)\n2021-01-21T17:11:35Z Checking all blk files are present...\n2021-01-21T17:11:35Z Opening LevelDB in \/root\/.testcoin\/chainstate\n2021-01-21T17:11:35Z Opened LevelDB successfully\n2021-01-21T17:11:35Z Using obfuscation key for \/root\/.testcoin\/chainstate: fec815e2991463fd\n2021-01-21T17:11:35Z Loaded best chain: hashBestChain=00000a49e6b0d232e39d3c20ed7f9000e034047d42370e869270ec7cb595d6ec height=0 date=2021-01-10T10:15:11Z progress=1.000000\n2021-01-21T17:11:35Z init message: Rewinding blocks...\n2021-01-21T17:11:35Z init message: Verifying blocks...\n2021-01-21T17:11:35Z  block index              12ms\n2021-01-21T17:11:35Z init message: Loading wallet...\n2021-01-21T17:11:35Z [default wallet] nFileVersion = 1000000\n2021-01-21T17:11:35Z [default wallet] Keys: 2001 plaintext, 0 encrypted, 2001 w\/ metadata, 2001 total. Unknown wallet records: 1\n2021-01-21T17:11:35Z [default wallet] Wallet completed loading in              60ms\n2021-01-21T17:11:35Z [default wallet] setKeyPool.size() = 2000\n2021-01-21T17:11:35Z [default wallet] mapWallet.size() = 0\n2021-01-21T17:11:35Z [default wallet] mapAddressBook.size() = 0\n2021-01-21T17:11:35Z mapBlockIndex.size() = 6\n2021-01-21T17:11:35Z nBestHeight = 0\n2021-01-21T17:11:35Z init message: Loading P2P addresses...\n2021-01-21T17:11:35Z Loaded 3 addresses from peers.dat  0ms\n2021-01-21T17:11:35Z init message: Loading banlist...\n2021-01-21T17:11:35Z init message: Starting network threads...\n2021-01-21T17:11:35Z DNS seeding disabled\n2021-01-21T17:11:35Z init message: Done loading\n2021-01-21T17:11:35Z msghand thread start\n2021-01-21T17:11:35Z opencon thread start\n2021-01-21T17:11:35Z addcon thread start\n2021-01-21T17:11:35Z Imported mempool <transactions> from disk: 0 succeeded, 0 failed, 0 expired, 0 already there\n2021-01-21T17:11:35Z net thread start\n2021-01-21T17:11:35Z New outbound peer connected: version: 70015, blocks=202, peer=0\n2021-01-21T17:11:35Z ERROR: AcceptBlockHeader: Consensus::ContextualCheckBlockHeader: 0000015584b1352a512e2139846c49d8ecd408d7d945c5651e7036b8ab846198, bad-diffbits, incorrect proof of work (code 16)\n2021-01-21T17:11:35Z Warning: not punishing manually-connected peer 35.238.12.61:11890!\n\nIf you checked the following line you would conclude that it sees 202 blocks, so how come on earth it doesn't sync?\n2021-01-21T17:11:35Z New outbound peer connected: version: 70015, blocks=202, peer=0","851":"I am working on an ethereum project but I have some doubts. I have a backend that connects to the <blockchain> via <web3>.js. To connect to the <blockchain> I use a <geth> node.\nI understand that the sequence is this:\nsend transacrion\n\nlisten to events\n\nmy questions are:\n\nWhat is the component sending the transaction? Is it the backend component or the <geth> node?\nThen suppose that another smart contract in the network emits an event that I want to capture. What is the component that captures the event? Is it the backend component or the <geth> node?","852":"How can I update the status of the <blockchain>?\n\nI issue a transaction and pass an id to the smart contract. Smart contract A retrieves data from smart contract B and uses it to check whether a condition in the smart contract is true or not. If checked, save 'id, true' otherwise 'id, false.' My first question is: should there be a transaction to save this information on the <blockchain>? I only have the initial transaction sending id, so how is this possible?\nI store id, true. After some time the value true becomes false. But if the old pair was stored on the <blockchain> and the <blockchain> is immutable, how can the copy be updated?\n\nI am using Ethereum","853":"I am looking into possibility of using Smart Contracts in our Casino. Because we don't want to have the players pay the fee for every hand they play, we want to use \"view\" <transactions> that don't modify the state and thus don't require any gas. This, however, introduces the following problem: \"Since the transaction isn't saved on the <blockchain>, it is hard (or impossible?) to prove to someone that you really called the smart contract function (and that you called it only once).\nOne option that I thought about was to have the client(browser) call the function on smart contract. However, since our backend also needs to \"know\" the result, the player can, of course, change the result on his end, and send the wrong result.\nIf, on the other hand, we have our backend call the function on smart contract, there should be a way to prove to the player that we really called the smart contract and that we called it just once. I find it hard to do that.\nOne idea was to call the smart contract from client, encrypt the data using public key and send it to the backend so it can decrypt them and see the result. However, the player wouldn't know if the server really used this data, and I'm not even sure if encrypting with public key has any sense, since the execution of the smart contract function is public, so I guess everyone would know the input.\nSo, my question is, is there a way to convince the player that we really called the smart contract and that we called it just once?\nEDIT:\nOne other idea that came to my mind is to use one private\/public key pair per game session, so that in the end of the session the player finds out the private key and if we store the history of all bet results on the client, the player can check if those were real results using the private key he got.\nThere is still a question if a player would see the bet result before it got encrypted on the smart contract","854":"We know bitcoin block time is 10 min. So in 10 minutes intervals a new block is created with last 10min <transactions>. What will happen if proof of work is not successful or correct hash generation is not successful within next 10min?\nWill the scenario be like no bitcoin will be mined for that 10 min duration and the block will be generated for last 20min <transactions>?","855":"I have been trying process a block chain header when the code is stopping with the below error -\n\nTraceback (most recent call last):   File\n\"C:\\Users\\SHAHRIAR\\AppData\\Local\\Programs\\<python>\\<python>37-32\\lib\\encodings\\utf_8.py\",\nline 16, in decode\nreturn codecs.utf_8_decode(input, errors, True) TypeError: a bytes-like object is required, not 'str'\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):   File\n\"f:\/<python>\/<blockchain>\/index.py\", line 19, in \nstruct.pack('<L', <blockchain>Object['bits']) + TypeError: decoding with 'utf-8' codec failed (TypeError: a bytes-like object is required,\nnot 'str')\n\nThis is my full code -\nimport hashlib\nimport codecs\nimport struct\n\n<blockchain>Object = {\n    'version':536871426,\n    'previousHash':'aa11661d07d7e13b94403bc00a9786b07fe711140743f0f9d7e35a478d80e840',\n    'merkleRoot':'a41494afe694e450a7163103fd08ea3d4b5fcb30556165f6e567893989c39222',\n    'bits': 0x19030d6c,\n    'time':1610982871,\n    'nonce':3341292488\n}\n\n<blockchain>Header = (\n    struct.pack('<L', <blockchain>Object['version']) + \n    codecs.decode(<blockchain>Object['previousHash'])[::-1] + \n    codecs.decode(<blockchain>Object['merkleRoot'])[::-1] + \n    struct.pack('<L', <blockchain>Object['time']) + \n    struct.pack('<L', <blockchain>Object['bits']) + \n    struct.pack('<L', <blockchain>Object['nonce'])\n)\n\n<blockchain>HashObject = hashlib.sha256(<blockchain>Header).digest()\n<blockchain>HashDigest = hashlib.sha256(<blockchain>HashObject).hexdigest()\n\nprint(<blockchain>HashDigest)\n\nI am running <python> 3.7.2 on Win 7 (64-Bit)\nI am asking for expert's advice, what am I doing wrong?","856":"I'm testing a very simple contract I made (just has one function that emits a particular event) on the Kovan testnet. Now this works perfectly fine on it's own, however when using <web3>.py and making many <transactions> in a short period of time (500 in maybe 5-10mins), only 1\/3 of them seem to show up, than it just stops updating (using this to see contract <transactions>), note, <web3>.py throws no error, and interacting with the contract on remix still shows success, however I'm simply unable to see any updates. So I'm just curious if there's any rate limiting, or just a function of Ethereum\/smart contracts I'm unfamiliar with that's causing this problem.","857":"Hardware wallets can generate Hierarchical Deterministic addresses.\nI guess these addresses (and their pub\/priv keypairs) are in some way derived by multiple hashing the root public key (derived from the ultimate seed)\nI can email such a \"use once\" invoice address to someone to receive cryptomoney.\nThe amount of received cryptomoney is then in the <blockchain> as an unspent block in some way connected to this address.\nIf later i want to query the <blockchain> for my total account or want to make a payment.\nHow is this block then found again?\nMy hardware cryptodevice (ledger nano s) does not keep track of all generated addresses.\nCan someone explain this in terms of the basic cryptgraphic functions (ecc pub\/priv keys, signing, hashing, assymetric\/symmetric encrytion,...).\nWhat info is (my root public key?) supplied to the <blockchain> server to find all address i ever\nused?","858":"I am trying to learn how <blockchain> works. I know that <blockchain> is nothing but list of blocks containing <transactions>, what I cannot understand is how do we then know how much money is contained in each account, since we are only maintaining list of <transactions>?","859":"As I sad in the title, why is IBFT not used as consensus protocol in public <blockchain>s? After all, it is Byzantine-Fault-Tolerant and prevents forks, which is more than for example Proof-of-Work in Bitcoin does...","860":"So I'm interested in storing some ERC-20 tokens in 100 different wallets as an experiment and would like to know what the easiest way to do this would be without having to manually store 100 different private keys. Also, I know the ledger does something similar where a single private key lets you use wallets for different <blockchain>s, what is the science behind this?\nAdditionally, if I were to program a smart contract to send the tokens to the list of 100 addresses, would that help me save on gas compared to if I just send the 100 <transactions> from a normal wallet?\nThank you so very much.","861":"I was trying to deploy my contract to Binance Smart Chain Testnet and I got this error. I am using truffle and also successfully installed truffle HD wallet Provider.\nTruffle Error:-\nError: Could not create addresses from your mnemonic or private key(s). Please check that your inputs are correct.\n    at new HDWalletProvider (\/Users\/macbook\/Desktop\/Test\/node_modules\/@truffle\/hdwallet-provider\/src\/index.ts:124:13)\n    at Object.provider (\/Users\/macbook\/Desktop\/Test\/truffle-config.js:12:16)\n    at Object.getProvider (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/provider\/index.js:20:1)\n    at Object.create (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/provider\/index.js:13:1)\n    at TruffleConfig.get [as provider] (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/config\/dist\/configDefaults.js:200:1)\n    at Object.detect (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/environment\/environment.js:19:1)\n    at \/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/core\/lib\/commands\/migrate.js:206:1\nTruffle v5.1.54 (core: 5.1.54)\nNode v14.15.4\n\nMy Truffle Config.js File\nconst HDWalletProvider = require('@truffle\/hdwallet-provider');\nconst privateKeys = process.env.PRIVATE_KEYS || \"\"\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"127.0.0.1\",\n      port: 7545,\n      network_id: \"*\"\n    },\n    binancetestnet: {\n      provider: function() {\n        return new HDWalletProvider(\n          privateKeys.split(','), \/\/ Array of account private keys\n          `https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/${process.env.INFURA_API_KEY}`\/\/ Url to an Ethereum Node\n        )\n      },\n      gas: 5000000,\n      gasPrice: 25000000000,\n      network_id: 97\n    }\n  },\n\n  \/\/ Set default mocha options here, use special reporters etc.\n  mocha: {\n    \/\/ timeout: 100000\n  },\n\n  \/\/ Configure your compilers\n  compilers: {\n    solc: {\n       version: \"0.7.3\",    \/\/ Fetch exact version from solc-bin (default: truffle's version)\n      \/\/ docker: true,        \/\/ Use \"0.5.1\" you've installed locally with docker (default: false)\n      \/\/ settings: {          \/\/ See the solidity docs for advice about optimization and evmVersion\n      \/\/  optimizer: {\n      \/\/    enabled: false,\n      \/\/    runs: 200\n      \/\/  },\n      \/\/  evmVersion: \"byzantium\"\n      \/\/ }\n    }\n  }\n};\n\nMy.env File\nETHERSCAN_API_KEY=https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/\nINFURA_API_KEY=https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/\nPRIVATE_KEYS=\"94916xxxxxx57ad13e6db71ed9fe5f94456e4128d51xxxxxxxf95xxd\"\nDEV_ADDRESS=\"0xbxxxxx80e3a43EBCab9A6CeC9d9e2a491xxxxxxC\"\n\nI have attached all the code with errors I am facing. Can anyone help me with it?. Truffle compile worked successfully.","862":"I am trying to deploy a test contract on Binance Smart Chain network. I am using metamask, and truffle to create and test the contract. My folder structure looks like this\nconst HDWalletProvider = require('truffle-hdwallet-provider-privkey');\n    const privateKeys = process.env.PRIVATE_KEYS || \"\"\n    \n    module.exports = {\n      networks: {\n        development: {\n          host: \"127.0.0.1\",\n          port: 7545,\n          network_id: \"*\"\n        },\n        binancetestnet: {\n          provider: function() {\n            return new HDWalletProvider(\n              privateKeys.split(','), \/\/ Array of account private keys\n              `https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/${process.env.INFURA_API_KEY}`\/\/ Url to an Ethereum Node\n            )\n          },\n          gas: 5000000,\n          gasPrice: 25000000000,\n          network_id: 97\n        }\n      },\n    \n      \/\/ Set default mocha options here, use special reporters etc.\n      mocha: {\n        \/\/ timeout: 100000\n      },\n    \n      \/\/ Configure your compilers\n      compilers: {\n        solc: {\n           version: \"0.7.3\",    \/\/ Fetch exact version from solc-bin (default: truffle's version)\n          \/\/ docker: true,        \/\/ Use \"0.5.1\" you've installed locally with docker (default: false)\n          \/\/ settings: {          \/\/ See the solidity docs for advice about optimization and evmVersion\n          \/\/  optimizer: {\n          \/\/    enabled: false,\n          \/\/    runs: 200\n          \/\/  },\n          \/\/  evmVersion: \"byzantium\"\n          \/\/ }\n        }\n      }\n    };\n\nTruffle Deployment Error\nMacbook-Air Oracle % truffle migrate --reset --network binancetestnet\nError: Cannot find module 'truffle-hdwallet-provider-privkey'\n    at Function.Module._resolveFilename (internal\/modules\/cjs\/loader.js:636:15)\n    at Function.Module._load (internal\/modules\/cjs\/loader.js:562:25)\n    at Module.require (internal\/modules\/cjs\/loader.js:692:17)\n    at require (internal\/modules\/cjs\/helpers.js:25:18)\n    at Object.<anonymous> (\/Users\/macbbok\/Desktop\/Oracle\/truffle-config.js:1:26)\n    at Module._compile (internal\/modules\/cjs\/loader.js:778:30)\n    at Object.Module._extensions..js (internal\/modules\/cjs\/loader.js:789:10)\n    at Module.load (internal\/modules\/cjs\/loader.js:653:32)\n    at tryModuleLoad (internal\/modules\/cjs\/loader.js:593:12)\n    at Function.Module._load (internal\/modules\/cjs\/loader.js:585:3)\n    at Module.require (internal\/modules\/cjs\/loader.js:692:17)\n    at Object.require (internal\/modules\/cjs\/helpers.js:25:18)\n    at Function.load (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/config\/dist\/index.js:161:1)\n    at Function.detect (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/config\/dist\/index.js:150:1)\n    at Object.run (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/core\/lib\/commands\/migrate.js:199:1)\n    at Command.run (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/core\/lib\/command.js:136:1)\n    at Object.module.exports (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/core\/cli.js:56:1)\n    at __webpack_require__ (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/webpack\/bootstrap:19:1)\n    at \/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/webpack\/bootstrap:83:1\n    at Object.<anonymous> (\/usr\/local\/lib\/node_modules\/truffle\/build\/cli.bundled.js:89:10)\n    at Module._compile (internal\/modules\/cjs\/loader.js:778:30)\n    at Object.Module._extensions..js (internal\/modules\/cjs\/loader.js:789:10)\n    at Module.load (internal\/modules\/cjs\/loader.js:653:32)\n    at tryModuleLoad (internal\/modules\/cjs\/loader.js:593:12)\n    at Function.Module._load (internal\/modules\/cjs\/loader.js:585:3)\n    at Function.Module.runMain (internal\/modules\/cjs\/loader.js:831:12)\n    at startup (internal\/bootstrap\/<node.js>:283:19)\n    at bootstrapNodeJSCore (internal\/bootstrap\/<node.js>:622:3)\nTruffle v5.1.54 (core: 5.1.54)\nNode v10.16.3\n\nI have attached all the code with errors I am facing. Can anyone help me with it?\nI have also Installed the HD Wallet provider as well. Truffle compile worked successfully.","863":"I couldn't find a satisfying answer to this 51% attack issue, so for a new <blockchain> with only 300 mined blocks, from my understanding the attacker has to rebuild all the blocks from scratch, is that true, if yes then what if the <blockchain> has 100k or 300k blocks? is there a way to prevent or penalize a miner if he mines too fast? does having honest miners would solve the issue? what about multiple Full nodesI need practical solutions","864":"I read here about the standard way to generate random numbers in solidity using keccak256 and timestamp, contract caller and nonce as a source of entropy.\nI also read in the article linked above that the main problem with this method is that when the caller of the contract also has his own node, he can publish infinite <transactions> to his own node, but not share them, until he generated the number he wants.\nMy question is, in case that my smart contract is meant to be called just from the trusted source, is then this method of generating random numbers safe?\nI am also wondering if I generate a new Ethereum address each time to call the contract, does that add to the entropy, and make the number impossible to predict?\nIt seems to me that generating new address each time adds enough entropy and in a way the source that generates the addresses and calls the contract plays a role of an oracle. Is that right?","865":"I've seen one way on how to integrate chainlink with other <blockchain>s, json-rpc for example. Is there some documentation on this topic? And in general are these done by adapters, <node.js> for example with JS clients for both chains (worker node and publisher)? Any hint greatly appreciated.\nE.g. what are the general requiremennts for example.","866":"I have been working with Ethereum smart contracts for a while for DAPP developments, recently i grew interest in working with Smart Contracts for Artificial intelligence. I found some work on net but it is not completely relevant to my idea. I actually want to have AI technique coded inside smart contract and perform prediction. I know that running AI inside smart contract would cost a ton but i would like to explore the field. I am still wondering why there has been very less work done in this field. Can anyone help me on that please.","867":"I'm implementing a Smart voting system using ethereum <blockchain> and using Ganache. As per the system, the election authority will authorize the people by using their public addresses in the <blockchain>. And then only they will be able to vote.\nBut the problem is, as per my code , every voting transaction is done by a single <blockchain> account, because it always gets the same credentials derived from the same private key.\nWhat i want to do is, for each authorized voter, i want the app, to change the credentials to that particular voter's credentials of their <blockchain> account. So the voting transaction will be done by the relevant particular account. Is there a way to retrieve the credentials of each person. Or to change credentials for each logged in account?  i'm struggling to do it.\nIt is a flutter app.\nHere is my code, where i set the credentials for the transaction.\n Future<String> authorize() async {\n    var addressone =\n        EthereumAddress.fromHex(\"0xc347C739ae787a0D9A182efDa9055FAe109F055C\");\n    var response = await submit(\"authorize\", [addressone]);\n    print(\"deposited\");\n    return response;\n  }\n\n  Future<String> vote() async {\n    final addressone =\n        EthereumAddress.fromHex(\"0xc347C739ae787a0D9A182efDa9055FAe109F055C\");\n    var candidate = BigInt.from(1);\n    var response = await submit(\"vote\", [addressone, candidate]);\n    print(\"voted\");\n    return response;\n  }\n\n  Future<String> submit(String functionName, List<dynamic> args) async {\n    EthPrivateKey credentials = EthPrivateKey.fromHex(\n        \"968499dbee4f8b8491d9d0e02ff631347291a41e33dc95033c70758a2e99657b\");\n    DeployedContract contract = await loadContract();\n    final ethfunction = contract.function(functionName);\n    final result = await ethclient.sendTransaction(\n        credentials,\n        Transaction.callContract(\n            contract: contract, function: ethfunction, parameters: args),\n        fetchChainIdFromNetworkId: true);\n    return result;\n  }\n\nCan someone help me to solve this issue? :(","868":"We have a custom <blockchain> written in <python> and it does not have any tokens or addresses associated with it. The objective here is for us to add a set number of tokens to our existing <blockchain>. We understand that we don't store addresses on the <blockchain> but rather the wallet will create the addresses based on a few things. If anyone could direct me somewhere where I can find information on how to add tokens to our existing <blockchain>. Thank you in advance...","869":"I\u00e2\u0080\u0099m trying to reproduce the steps mentioned in this repo on github (https:\/\/github.com\/koneksys\/<blockchain>4LinkedData) to execute the code but I\u00e2\u0080\u0099m having some problems with <geth>. Further more I\u00e2\u0080\u0099m using Mac OS Catalina version 10.15 (19A583).\nSteps to reproduce the error:\n\nclone the repo into a directory\n\ninstall go version 1.7, npm and <node.js>\n\nopen terminal >> navigate to <geth> file and run make <geth> and after installing all the packages, run <geth> --testnet --cache=512 console to see if <geth> is responding and showing <transactions> on the ledger.\n\nNavigate back to the Dapp file and run npm build, then  navigate back again to \"<geth>\"\nAnd run the following command as mentioned in the repo\nbuild\/bin\/<geth> --datadir  \/path\/to\/<blockchain>\/<blockchain> --mine --port 30301 --rpcport 8545 --networkid 1234 -- nodiscover --unlock 0 --password pas.txt --rpc --rpccorsdomain '*' -- rpcapi=\"db,eth,net,<web3>,personal,<web3>,miner\" \n\n\nI get the following error :\nFatal: Failed to create the protocol stack: mkdir \/path: read-only file system\n\nAfter changing the directory name \"\/path\/to\/<blockchain>\/<blockchain>\" to my project working directoy I have managed to bypass the fatal error shown above. However when I navigate back to Dapp file to rund the command  node server.js to run the UI on localhost:3003 i get the following error:\n`rm@MacBook-Pro dapp % node server.js\n\/Users\/rm\/Desktop\/block\/<blockchain>4LinkedData\/Dapp\/node_modules\/<web3>\/lib\/<web3>\/httpprovider.js:91\nthrow errors.InvalidResponse(request.responseText);\n^\nError: Invalid JSON RPC response: undefined\nat Object.InvalidResponse (\/Users\/rm\/Desktop\/block\/<blockchain>4LinkedData\/Dapp\/node_modules\/<web3>\/lib\/<web3>\/errors.js:35:16)\nat HttpProvider.send (\/Users\/rm\/Desktop\/block\/<blockchain>4LinkedData\/Dapp\/node_modules\/<web3>\/lib\/<web3>\/httpprovider.js:91:22)\nat RequestManager.send (\/Users\/rm\/Desktop\/block\/<blockchain>4LinkedData\/Dapp\/node_modules\/<web3>\/lib\/<web3>\/requestmanager.js:58:32)\nat Eth.send [as getBlock] (\/Users\/rm\/Desktop\/block\/<blockchain>4LinkedData\/Dapp\/node_modules\/<web3>\/lib\/<web3>\/method.js:145:58)\nat Object. (\/Users\/rm\/Desktop\/block\/<blockchain>4LinkedData\/Dapp\/app\/routes.js:31:22)\nat Module._compile (internal\/modules\/cjs\/loader.js:1063:30)\nat Object.Module._extensions..js (internal\/modules\/cjs\/loader.js:1092:10)\nat Module.load (internal\/modules\/cjs\/loader.js:928:32)\nat Function.Module._load (internal\/modules\/cjs\/loader.js:769:14)\nat Module.require (internal\/modules\/cjs\/loader.js:952:19)\nrm@MacBook-Pro dapp %\nAny idea what I'am doing wrong??","870":"In My Corda project, I want to create a special account which can have only one specific type of state and do not accept if any other state is shared with it. While other accounts on the same node can accept other states too. Is that possible in Corda. If yes, then How?","871":"I am considering a case say where we have 10 replicas i.e. 3f+1=10 meaning we can have 3 faulty replicas. Now, assume a scenario where primary is faulty and collude with other two faulty replicas and the remaining non-faulty replicas are in group of 4(G1)and 3(G2).\nNow, the primary try to cheat by proposing  a client request differently to each non-faulty group say 0 to G1 and 1 to G2. In case of nodes in G1 the quorum 2f+1 can be reached 4(G1)+3(faulty) and thus can commit locally whereas it can\u00e2\u0080\u0099t happen for G2 as they have 3(G2)+3(faulty) i.e only 2f. Therefore, I am assuming G2 replicas will time-out and will initiate view-change process. But as per my understanding view-change will happen only when the new primary receives 2f+1(including self) view-change messages. But in this scenario the faulty might not send view-change which leave us with only G2(3) view change messages and G1 never ask for view change as they are already in quorum. This doesn\u00e2\u0080\u0099t satisfy the safety property. So, how actually PBFT solves this kind of situation?","872":"If a user doesn't send enough enough Eth, I'd like the UI to know and respond with a message.\nThis function validates msg.value, but I'd like to trigger and event (which the UI can respond to) in this case.\nfunction doSomething() external payable {\n  require(\n      msg.value == price,\n      'Please send the correct amount of ETH'\n  );\n  \/\/Do something\n}\n\nIs this the correct way to do that?\nIs there any way to combine require() with sending events?\nfunction doSomething() external payable {\n if (msg.value < amount){\n   emit NotEnoughEth('Please make sure to send correct amount');\n   revert();\n }\n\n  \/\/Do something\n}","873":"So the title does a terrible job at explaining what I mean, so let me explain.\nSo I basically want to make a mini cryptocurrency <blockchain> as a project. I'm trying to think of the best thing to use as the blocks in a <blockchain>. I'd need the blocks to hold the header information which is the following:\nPrevious Blocks Hash. Timestamp. Difficulty Target. Nonce. Version. Merkle Root.\nAnd then the <transactions> that are also contained within each block. All in all the block would end up looking like this.\n\nI thought a Hashmap would be the best way to do this as you can assign each of the above keys a value, but I'm not sure how I'd go about it. I would need a list that held the Hashmaps which held multiple keys and values, but I'd also need the list to hold whatever the <transactions> would be held in. I'd also need the next list to be able to see the previous list (so it can get the hash from everything in its header).\nCould anyone give me some advice on the best way to deal with this? Been thinking it over for the last few days but I don't think I'm coming any closer to an answer.\nThank you.","874":".Found similar methods for Kraken but can't seem to find them in CEXIO REST and WebSocket documentation","875":"What can I do, when a repository is done for <hyperledger> fabric v. 1 and I wanna adapt it to <hyperledger> fabric v. 2.0?\nWhere and how do I need to make changes?\n(The binaries are for fabric v 2.0)\nI tried something but it is completly a mess, due to I just started with programming...\nLet's take for example this repository.\nAm very thankful for every suggestion.","876":"I'm going to send erc20 token to other metamask wallet address in <node.js>.\nNow I can send erc20 token using my wallet private key.\nBut I want to send it without private key.\nHow can I do for it?\nPlease Help me!","877":"I've been working on a mechanism to make private <transactions> achievable on the ethereum network using zk-snarks and verifiable hashes.\nI took alot of help from an existing work done on this mechanism. below is the link.\nhttps:\/\/github.com\/EY<blockchain>\/nightfall\nRight now all this is functional on a local chain but when i move it to the <geth> network, transaction fails.\nAny help on how to configure the above mechanism on etheruem network or a test network like rinkeby or ropsten will be highly appreciated.","878":"Im seeing the following error when trying to use Corda-RPC version 4.7 with Spring boot version 2.4.1\n2021-01-07 15:23:14.614 ERROR 3036 --- [  restartedMain] o.s.boot.SpringApplication               : Application run failed\n\njava.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration.embeddedActiveMq\n    at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60) ~[spring-boot-autoconfigure-2.4.1.jar:2.4.1]\n    at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:193) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:153) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:348) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:252) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:285) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:99) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:751) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:569) ~[spring-context-5.3.2.jar:5.3.2]\n    at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) ~[spring-boot-2.4.1.jar:2.4.1]\n    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767) [spring-boot-2.4.1.jar:2.4.1]\n    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) [spring-boot-2.4.1.jar:2.4.1]\n    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426) [spring-boot-2.4.1.jar:2.4.1]\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:326) [spring-boot-2.4.1.jar:2.4.1]\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309) [spring-boot-2.4.1.jar:2.4.1]\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298) [spring-boot-2.4.1.jar:2.4.1]\n    at com.insurance_match.api.ApiApplicationKt.main(ApiApplication.kt:19) [main\/:na]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]\n    at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]\n    at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.1.jar:2.4.1]\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration] from ClassLoader [sun.misc.Launcher$AppClassLoader@18b4aac2]\n    at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481) ~[spring-core-5.3.2.jar:5.3.2]\n    at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:358) ~[spring-core-5.3.2.jar:5.3.2]\n    at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:414) ~[spring-core-5.3.2.jar:5.3.2]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$2(AbstractAutowireCapableBeanFactory.java:754) ~[spring-beans-5.3.2.jar:5.3.2]\n    at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660) ~[na:1.8.0_181]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:753) ~[spring-beans-5.3.2.jar:5.3.2]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:692) ~[spring-beans-5.3.2.jar:5.3.2]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:663) ~[spring-beans-5.3.2.jar:5.3.2]\n    at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1665) ~[spring-beans-5.3.2.jar:5.3.2]\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:570) ~[spring-beans-5.3.2.jar:5.3.2]\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:542) ~[spring-beans-5.3.2.jar:5.3.2]\n    at org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:238) ~[spring-boot-autoconfigure-2.4.1.jar:2.4.1]\n    at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:231) ~[spring-boot-autoconfigure-2.4.1.jar:2.4.1]\n    at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:221) ~[spring-boot-autoconfigure-2.4.1.jar:2.4.1]\n    at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:169) ~[spring-boot-autoconfigure-2.4.1.jar:2.4.1]\n    at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:144) ~[spring-boot-autoconfigure-2.4.1.jar:2.4.1]\n    at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47) ~[spring-boot-autoconfigure-2.4.1.jar:2.4.1]\n    ... 23 common frames omitted\nCaused by: java.lang.NoClassDefFoundError: org\/apache\/activemq\/artemis\/jms\/server\/config\/JMSConfiguration\n    at java.lang.Class.getDeclaredMethods0(Native Method) ~[na:1.8.0_181]\n    at java.lang.Class.privateGetDeclaredMethods(Class.java:2701) ~[na:1.8.0_181]\n    at java.lang.Class.getDeclaredMethods(Class.java:1975) ~[na:1.8.0_181]\n    at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463) ~[spring-core-5.3.2.jar:5.3.2]\n    ... 39 common frames omitted\nCaused by: java.lang.ClassNotFoundException: org.apache.activemq.artemis.jms.server.config.JMSConfiguration\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_181]\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_181]\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_181]\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_181]\n    ... 43 common frames omitted","879":"I'm learning about <blockchain> (finally). I like the idea of a decentralised app, especially for things like a decentralised twitter clone where users may with micropayments to use the app so that there aren't incentives for the centralised system to sow discord to generate more clicks.\nThe operating cost for a system like that would mostly be in paying the miners to process <transactions> (e.g messages or tweets) would be paid by users. But miners could also be users, and there's potential for those users to generate spam messages to drive up the amount of mining required.\nI'm pretty sure my concerns are due to a lack of knowledge of <blockchain>, so can someone please help me understand how decentralised apps are designed to both public but also not susceptible to racketeering by those who get paid to process <transactions>.","880":"From the docs, AggregatorV3Interface returns..\nReturn Values\nroundId: The round ID.\nanswer: The price.\nstartedAt: Timestamp of when the round started.\nupdatedAt: Timestamp of when the round was updated.\nansweredInRound: The round ID of the round in which the answer\nwas computed.\n\nAlso it is stated that answer is an int256.\nI'm getting back the value 120160203575.\nwhich is the USD as unit8.\nHow do you format this unit8 into a USD formatted number? (e.g. $1201.00)..formatted with decimal and chopping off the unneeded decimal places?","881":"I have  tried to install waves on Ubuntu 18.04LTS\nlink for installing waves in ubuntu : https:\/\/docs.waves.tech\/en\/waves-node\/how-to-install-a-node\/on-ubuntu\ncommand:  sudo apt install waves\nAnd I got this error\nError:System has not been booted with systemd as init system (PID 1). Can't operate.\nCouldn't find an alternative telinit implementation to spawn.\nand i also get same error when I use commands like:\n\nsudo service waves.service start\nsudo dpkg -i --force-overwrite \/var\/cache\/apt\/archives\/waves_1.2.17_all.deb\nsudo dpkg -i waves_1.2.17_all.deb\nsudo systemctl start waves.service\n\nAnd if I use command according to this link: https:\/\/linuxhandbook.com\/system-has-not-been-booted-with-systemd\/\ncommand : sudo service waves.service start\nthen it gives error:\nError: waves.service: unrecognized service\ncan anyone please help me with it?","882":"I want to fork the waves <blockchain> in which I wanted to change the coin. I first change the name of coin in waves node\nlink : https:\/\/github.com\/wavesplatform\/Waves\/blob\/version-1.2.x\/node\/src\/main\/scala\/com\/wavesplatform\/transaction\/assets\/exchange\/AssetPair.scala\naccording to the link I deployed on windows and I got this error.\nERROR: 18:28:45,568 ERROR [main] c.w.actor.RootActorSystem$ - Error while initializing actor system wavesplatform com.protonail.leveldb.jna.LevelDBException: IO error: \/root\/.local\/share\/waves-testnet\/data: Invalid argument\n(note : full error is given below)\nsoftware details:\n\nopenjdk11\nubuntu 18.04LTS\n\nI am deploying in windows through ubuntu 18.04LTS by following steps for installing in windows and installing deb file.\nlink for installing: https:\/\/docs.waves.tech\/en\/waves-node\/how-to-install-a-node\/on-windows\ncommand: java -jar node\/target\/waves-all-1.2.15-DIRTY.jar node\/target\/classes\/application.conf\nI got error while initializing it with wavesplatform.\nroot@WJLP-1220:\/mnt\/c\/Users\/swatim\/Desktop\/wavesProject\/Waves\/node\/target# java -jar waves-all-1.2.15-DIRTY.jar classes\/application.conf \n2021-01-04 18:28:44,524 INFO [main] c.w.Application$ - Starting... \n2021-01-04 18:28:45,082 INFO [ctor.default-dispatcher-4] a.event.slf4j.Slf4jLogger - Slf4jLogger started 2021-01-04 18:28:45,193 INFO [main] c.w.Application$ - Waves v1.2.15-DIRTY <blockchain> Id: T \n2021-01-04 18:28:45,271 INFO [main] c.w.d.LevelDBFactory$ - Loaded com.wavesplatform.database.jna.LevelDBJNADBFactory with com.wavesplatform.database.jna.LevelDBJNADBFactory@72ba28ee \n2021-01-04 18:28:45,568 ERROR [main] c.w.actor.RootActorSystem$ - Error while initializing actor system wavesplatform com.protonail.leveldb.jna.LevelDBException: IO error: \/root\/.local\/share\/waves-testnet\/data: Invalid argument \nat com.protonail.leveldb.jna.LevelDBNative.checkError(LevelDBNative.java:295) \nat com.protonail.leveldb.jna.LevelDB.(LevelDB.java:16) at com.wavesplatform.database.jna.LevelDBJNADBFactory.openJnaDatabase(LevelDBJNADBFactory.scala:11) \nat com.wavesplatform.database.jna.LevelDBJNADBFactory.open(LevelDBJNADBFactory.scala:15) \nat com.wavesplatform.database.package$.openDB(package.scala:51) \nat com.wavesplatform.Application.(Application.scala:69) \nat com.wavesplatform.Application$.$anonfun$startNode$4(Application.scala:558) \nat com.wavesplatform.Application$.$anonfun$startNode$4$adapted(Application.scala:555) \nat com.wavesplatform.actor.RootActorSystem$.start(RootActorSystem.scala:25) \nat com.wavesplatform.Application$.startNode(Application.scala:555) \nat com.wavesplatform.Application$.main(Application.scala:524) \nat com.wavesplatform.Application.main(Application.scala)","883":"how to create ERC721 token standard contract? I am unable to import openzepplin libraries of erc721 standard. if someone could help me to give the link of the repository or how to import openzepplin libraries in Remix?","884":"I am developing a block chain web application using Tron Web. I have followed the document but getting below error while using tronweb.trx.sign() function,\n\nUncaught (in promise) class\norg.tron.core.exception.ContractValidateException : Validate\nTransferContract error, no OwnerAccount.\n\nBelow is my code, (I have tron link chrome extension, Node: Mainnet)\nvar obj = setInterval(async () => {\n            if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n                clearInterval(obj)\n                var tronweb = window.tronWeb\n                var tx = await tronweb.transactionBuilder.sendTrx('fromaddr', 10, 'toaddr');\n                var signedTx = await tronweb.trx.sign(tx);\n                var broastTx = await tronweb.trx.sendRawTransaction(signedTx);\n                console.log(broastTx)\n            }\n        }, 10)\n\nKindly check and let me know what am i missing","885":"I have a question about the specific mechanism of how does smart contract communicate with CouchDB.\n\nI want a more detailed explanation about the 2.2 part and when PutState or GetState is executed, how does that work.\nI am using <hyperledger> Fabric with GO programming language.","886":"I am having a problem that I really don't know how to solve, I was doing a tutorial on making smart contracts on solidity to launch on Ethereum for a future university project. The error i was getting is the one above in the title. I will copy the code so you can see what i was have and highlight the line of code of the error. I couldn't figure out what was the problem because i was to ambiguous the type error plus I'm new to solidity.\npragma solidity ^0.4.24;\n\ncontract NLtoken is owned\n{\n    \n    uint public totalSupply;\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowence;\n    event Transfer (address indexed _from, address indexed _to, uint tokens);\n    event Approval (address indexed _tokenOwner, address indexed _spender, uint tokens);\n    \n    constructor  (string tokenName, string tokenSymbol, uint initialSupply) public {\n        totalSupply = initialSupply*10**uint256(decimals);\n        balanceOf[msg.sender] = initialSupply;\n        name = tokenName;\n        symbol = tokenSymbol;\n    }\n    function _transfer (address _from, address _to, uint256 _value) internal returns(bool success){\n       require(_to != 0x0);\n        require(balanceOf[_from] >= _value);\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n    \n    function transfer (address _to, uint256 _value) public returns (bool success)\n    {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)\n    {\n        require(_value <= allowence[_from][msg.sender]);\n        allowence[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n        \n    }\n    function approve(address _spender, uint256 _value) public returns (bool success)\n    {\n        allowence[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n        \n    }\n    function mintToken (address _target, uint256 _mintedAmount) onlyOwner  {\n        balanceOf[_target] += _mintedAmount;\n        totalSupply += _mintedAmount;\n        emit transfer(0, owner, _mintedAmount);\n        emit transfer (owner, _target,_mintedAmount);\n    }\n     function burn (uint256 _value)  onlyOwner returns (bool succes)\n    {\n        require (balanceOf[msg.sender] >= _value);\n        balanceOf[msg.sender] -= _value;\n        totalSupply -= _value;\n        emit burn(msg.sender, _value);\n        return true;\n        \n    }\n\n        \n}\ncontract owned  {\n    \n    address public owner;\n    constructor ()\n    {\n        owner = msg.sender;\n    }\n     modifier  onlyOwner\n    {\n        require(msg.sender == owner);\n        _;\n    }\n    function transferOwnership(address  newOwner) onlyOwner {\n        owner = newOwner;\n    }\n    \n}","887":"<blockchain> have limit for free checking and i have api how can i use api  for checking balance ?\nwhere i must use api key ?\nimport requests\nimport re\nfile = open('wallet.txt', 'r')\nfor line in file.readlines():\n    wallet = line.strip('\\n')\n    try:\n        url = \"https:\/\/<blockchain>.info\/balance?active=\"+wallet\n        r = requests.post(url)\n        html = r.content\n        mm= re.search('_balance\"\\:(.*?)\\,\"n_tx\"', html)\n        a1= mm.group(1)\n        bb= re.search('_received\"\\:(.*?)\\}\\}', html)\n        a2= bb.group(1)\n        print ip+\" Final balance : \"+a1+\" Total Received :\"+a2\n        aaa= ip+\",Final balance : ,\"+a1+\",Total Received :,\"+a2\n        with open ('ousdt.txt', 'a') as f:\n            f.write(str(aaa)+'\\n')\n        time.sleep(1)\n    except:\n        pass","888":"I think I understand how nodes are incentivized to get valid blocks from other nodes and propagate their own blocks to the network. But what is the game theory behind always selecting the longest chain when receiving new blocks from others? How is this mechanism implemented so that it is 100% guaranteed that all the nodes will select the chain with the most work in it?","889":"I was trying to get keys of a mapping to star name and address of particular contract (not exactly) in solidity contract\nmapping(string=>address) nameOfAccounts;\n\nWhat i am expecting is a method like the Object.keys(nameOfAccounts) in Javascript. Is there any similar method ?. or should i use an additional array. The additional Array may cause extra gas cost(This is not an option that i prefer). Please share some insights\nI wanted to know if there is another method that i can do if getting keys is not an option?","890":"This is the error that I am getting\nCreating peer0.org1.example.com ... error\nERROR: for peer0.org1.example.com  Cannot create container for service peer0.org1.example.com: status code not OK but 500: \\ufffd\\ufffd\\ufffd\\ufffd\nFDocker.Core, Version=2.4.0.48506, Culture=neutral, PublicKeyToken=null                                                                                     Docker.Core.DockerException\nClassNameMeWatsonBucketsSystem.Collections.IDictionarySystem.ExceptionaceStringRemoteStackIndexExceptionMethodHResultSource\nDocker.Core.DockerExceptionFilesharing has been cancelled\nI think the docker is doing some issue. Can any expert please help me out"},"tags":{"0":"<python><blockchain><ethereum><metamask>","1":"<hyperledger-fabric><blockchain><hyperledger><hyperledger-fabric>-cacertificate-authority","2":"<hyperledger-fabric><blockchain><ethereum>immutability","3":"<reactjs><blockchain><solidity><web3js>","4":"<javascript><blockchain><smartcontracts><web3js><solana>","5":"<python><blockchain><ethereum><solidity><web3><py>","6":"<variables><storage><blockchain><smartcontracts>","7":"<blockchain><ethereum><solidity><web3js>","8":"<blockchain><signature><cosmos-sdk>","9":"<cryptography><blockchain><ethereum><solidity><cryptocurrency>","10":"<hash><blockchain><cryptocurrency>","11":"<javascript><typescript><blockchain><decentralized-applications><avalanche>","12":"<python><blockchain><simulation><simulatorsumo>","13":"<blockchain><ethereum><solidity><smartcontracts><truffle>","14":"<python><blockchain><bitcoin>","15":"<storage><blockchain><ethereum><ipfs><nft>","16":"<node.js><reactjs><blockchain><solidity>","17":"<docker><hyperledger-fabric><blockchain>ca","18":"<amazon-web-services><kubernetes><amazon-ec2><hyperledger-fabric><blockchain>","19":"<blockchain><evm>aurora-<evm>","20":"<node.js><blockchain><substrate><polkadot><polkadot>-js","21":"<blockchain><solidity><smartcontracts>","22":"<blockchain><solana>","23":"<blockchain><ethereum><solidity><smartcontracts><truffle>","24":"<blockchain><ethereum><uniswap>","25":"<blockchain><ethereum><solidity><nft>","26":"<blockchain><ethereum><solidity>","27":"<javascript><blockchain><ethereum><solidity><web3js>","28":"<cryptography><blockchain><ethereum><solidity>","29":"<blockchain>","30":"<blockchain><ethereum>","31":"<javascript><blockchain><bitcore>","32":"<reactjs><blockchain><ethereum><metamask><decentralized-applications>","33":"<blockchain><ethereum><solidity><chainlink>thegraph","34":"<node.js><hyperledger-fabric><blockchain><hyperledger><hyperledger-fabric-sdk-js>","35":"<transactions><blockchain><web3js><ethers.js><bsc>","36":"<blockchain><ethereum><metamask><moralis>","37":"<python><blockchain><brownie>","38":"<blockchain><ganache>","39":"<blockchain><solidity><hardhat>","40":"<networking><blockchain><eventual-consistency>","41":"<python><blockchain><solidity><brownie>","42":"<blockchain><ethereum><solidity>","43":"<hash><cryptography><blockchain><cryptocurrency>","44":"<blockchain><ethereum><solidity><tronweb>","45":"<blockchain><ethereum><opensea>","46":"<blockchain><ethereum><nearprotocol>near","47":"<blockchain><solidity><web3-java>","48":"<node.js>events<blockchain><solidity><ethers.js>","49":"<blockchain><substrate>","50":"<node.js><websocket><blockchain><distributed><p2p>","51":"<ethereum><truffle><geth>","52":"<blockchain>","53":"<python><blockchain><ethereum><solidity><smartcontracts>","54":"<python><apirequest><blockchain><json-rpc>","55":"<blockchain><solidity><smartcontracts><binance-smart-chain>","56":"<python><bashmacos><blockchain><brownie>","57":"<transactions><blockchain><ethereum><etherscan>","58":"<blockchain><ethereum>ether<bsc>","59":"<python><blockchain><smartcontracts><web3><py><bsc>","60":"<blockchain><corda>","61":"api<blockchain><bitcoin><coinbase-apicoin-change>","62":"<blockchain><smartcontracts><everscale>","63":"<database><transactions><cryptography><blockchain><public-key-encryption>","64":"<node.js><blockchain><solidity><hardhat>","65":"<blockchain><binance-smart-chain>","66":"<blockchain><solidity>","67":"<docker-compose><hyperledger-fabric><blockchain><hyperledger-composer><openehre>","68":"<blockchain><cryptocurrency>consensus","69":"<blockchain><ethereum>","70":"<python><blockchain><cryptocurrency><web3><py><avalanche>","71":"<blockchain><ethereum><solidity><nft><decentralized-applications>","72":"<reactjs><blockchain><solana><decentralized-applications><solana-cli>","73":"<blockchain><ethereum><solidity>ether","74":"<blockchain><solidity>tlb<everscale>","75":"<blockchain>onflow-cadence","76":"<blockchain><ethereum><binance-smart-chain><ethers.js>","77":"<blockchain><ethereum><solidity><smartcontracts>","78":"<hyperledger-fabric><blockchain><hyperledger>ibm-<blockchain>","79":"<blockchain><substrate><polkadot>","80":"<blockchain><ethereum><solidity><bsc>","81":"<hyperledger-fabric><blockchain>","82":"<javascript><reactjs><typescript><blockchain><solidity>","83":"<python><blockchain><ethereum>","84":"<blockchain><ethereum><solidity><geth><evm>","85":"<ethereum><blockchain><web3js>sign<metamask>","86":"<blockchain><nearprotocol>nearnearcore","87":"<command-line-interface><blockchain><zenon-network>","88":"<blockchain><zenon-network>","89":"<blockchain><ethereum><cryptocurrency>","90":"<blockchain><ethereum><solidity><smartcontracts>","91":"<blockchain><ethereum><ganache>","92":"<javascript><blockchain><ethereum><ethers.js>","93":"iosswift<blockchain><ethereum><web3>swift","94":"<blockchain><ethereum><solidity><nft>","95":"<blockchain><ethereum><web3js><truffle><evm>","96":"<javascript>promise<blockchain><ethereum><web3js>","97":"<blockchain><ethereum><solidity><smartcontracts><truffle>","98":"<blockchain><ethereum><solidity><truffle><ganache>","99":"<blockchain><ethereum><solidity><smartcontracts><hardhat>","100":"<blockchain><ethereum><solidity><smartcontracts>","101":"<blockchain><solidity><hardhat>","102":"<blockchain><ethereum><solidity><smartcontracts>","103":"<reactjs>next.js<blockchain><web3js>","104":"<blockchain><ethereum><solidity><smartcontracts>","105":"<blockchain><ethereum><smartcontracts><geth>","106":"<blockchain><ethereum><solidity>","107":"<typescript>rust<blockchain>anchor<solana>","108":"<blockchain><solidity><smartcontracts><hardhat><moralis>","109":"<blockchain><ethereum><metamask><decentralized-applications>","110":"rapi<blockchain><ethereum>","111":"<blockchain><ethereum>solid","112":"rust<blockchain><substrate><polkadot><decentralized-applications>","113":"rust<blockchain><substrate><polkadot><decentralized-applications>","114":"metadata<blockchain><ethereum><nft><opensea>","115":"<hyperledger-fabric><blockchain><hyperledger>","116":"<blockchain><ethereum><smartcontracts>","117":"<blockchain><bitcoin>","118":"<blockchain><ethereum><binance-smart-chain>binance-chain","119":"mapping<blockchain><ethereum><solidity><smartcontracts>","120":"r<blockchain><ethereum><smartcontracts><etherscan>","121":"<hash><blockchain><ethereum><etherscan>","122":"<cryptography><blockchain><solidity>swap","123":"function<blockchain><ethereum><smartcontracts>","124":"<blockchain><ethereum><evm>rsk","125":"<blockchain><solidity>","126":"<blockchain><ethereum><solidity>","127":"<python><blockchain><solidity>","128":"<blockchain><substrate><polkadot>","129":"<blockchain><ethereum><decentralized-applications>","130":"<blockchain><tronweb>","131":"<blockchain><chainlink><decentralized-applications>","132":"<blockchain><ethereum><smartcontracts>remix","133":"<javascript><blockchain><solidity><web3js>remix","134":"<blockchain><ethereum><solidity><smartcontracts><nft>","135":"<blockchain><ethereum><solidity>","136":"jsonmetadata<blockchain><ipfs><nft>","137":"<blockchain><ethereum><solidity><smartcontracts>","138":"<blockchain><ethereum><solidity><smartcontracts><nft>","139":"<blockchain><ethereum><solidity>","140":"<blockchain><solidity><web3js><hardhat>","141":"<javascript>vue.js<blockchain>wallet<solana>","142":"<python>api<blockchain><solana>","143":"<blockchain><ethereum><solidity>","144":"token<blockchain><solana><nft>","145":"<blockchain><bitcoin><bitcoin>d","146":"<blockchain><ethereum><bitcoin><substrate>","147":"<hyperledger-fabric><blockchain><hyperledger>","148":"<blockchain><ethereum><solidity><smartcontracts>","149":"<blockchain><solidity><smartcontracts>","150":"<hyperledger-fabric><blockchain><hyperledger>","151":"<blockchain><ethereum><solidity><smartcontracts>","152":"<node.js><blockchain><web3js>","153":"<blockchain><ethereum><solidity><smartcontracts><brownie>","154":"<blockchain><solidity><bitcoin>-testnet","155":"<blockchain>binance","156":"<hyperledger-fabric><blockchain>tls1.2handshake","157":"<blockchain><substrate><polkadot>","158":"<blockchain><chainlink><chainlink>-keepers","159":"<javascript><hash><blockchain>es6-promise","160":"<blockchain><ethereum><solidity><smartcontracts>openzeppelin","161":"<blockchain><solana>","162":"<blockchain>verification","163":"<cryptography><storage><blockchain><ethereum><solidity>","164":"rest<blockchain>binance<cryptocurrency>binance-api-client","165":"<blockchain><chainlink>","166":"<blockchain>documentation<smartcontracts><nearprotocol>assemblyscript","167":"<javascript><blockchain><web3js><ethers.js>","168":"<node.js><blockchain>","169":"<hyperledger-fabric><blockchain><hyperledger>","170":"<python>apilogging<blockchain><solidity>","171":"<javascript><node.js>npm<blockchain>yarnpkg","172":"<python><python>-3.x<blockchain><ethereum><web3><py>","173":"<cryptography><blockchain><bitcoin>","174":"rust<blockchain><substrate><polkadot>","175":"<node.js>npm<blockchain><web3js>","176":"<blockchain><smartcontracts><nft>","177":"<javascript><blockchain><ethereum><web3js><binance-smart-chain>","178":"<blockchain><substrate><polkadot>","179":"<blockchain><solidity>erc20bep20","180":"<hyperledger-fabric><blockchain><hyperledger>","181":"<typescript><blockchain><ethereum><solidity><brownie>","182":"api<blockchain><opensea>","183":"<hyperledger-fabric><blockchain>","184":"<blockchain><ethereum><ipfs>js-<ipfs><decentralized-applications>","185":"androidwindows<blockchain><decentralized-applications>","186":"<blockchain><ethereum><solidity><bitcoin><cryptocurrency>","187":"<blockchain><ethereum><smartcontracts><metamask>","188":"<blockchain><web3js><solana>metaplex","189":"<hyperledger-fabric><blockchain><hyperledger>","190":"javagson<blockchain>","191":"<blockchain><polkadot><polkadot>-js","192":"<blockchain><substrate><polkadot>","193":"<javascript><blockchain><web3js><solana>","194":"<blockchain><web3js>erc20etherbep20","195":"<blockchain><solidity>","196":"phplaravel<blockchain><web3>php","197":"<docker><docker-compose><hyperledger-fabric><blockchain>","198":"<blockchain><solidity><ganache><brownie>","199":"<blockchain><solidity><chainlink>","200":"<blockchain><solidity><decentralized-applications>","201":"<blockchain><ethereum><solidity><chainlink>","202":"permissions<blockchain><solidity>","203":"react-native<blockchain><javascript>core<ethers.js>","204":"<blockchain><solana>","205":"<blockchain><ethereum><solidity>","206":"<blockchain><ethereum><solidity><metamask><ganache>","207":"<hash><blockchain>brute-force<cryptocurrency>","208":"django<blockchain><web3js>contract<web3><py>","209":"<hyperledger-fabric><blockchain><hyperledger>","210":"<blockchain><ethereum><chainlink>","211":"<blockchain><web3js><solana><nft>metaplex","212":"<python><blockchain><solidity><smartcontracts>","213":"<blockchain><solidity><truffle>contract","214":"<blockchain><ethereum>abi<avalanche>","215":"<blockchain><ethereum><solidity><smartcontracts>ether","216":"<blockchain><ethereum><solidity><chainlink>","217":"api<blockchain>","218":"rust<blockchain><nearprotocol><nft>near","219":"<blockchain><bitcoin>pki","220":"<javascript><blockchain><solidity><chainlink><hardhat>","221":"<blockchain><ethereum>sendn<ethereum>matic","222":"<docker><blockchain><hyperledger><hyperledger>-besu","223":"<blockchain><smartcontracts>private-key<solana>","224":"structmapping<blockchain><solidity>ether","225":"<transactions><blockchain><solidity><smartcontracts>","226":"<hyperledger-fabric><blockchain><hyperledger><smartcontracts><hyperledger>-chaincode","227":"<blockchain><ethereum><geth>dhtkademlia","228":"server<hyperledger-fabric><blockchain><hyperledger-composer>","229":"<node.js><blockchain><ethereum>","230":"<blockchain><bitcoin>","231":"<javascript><node.js>deserialization<blockchain><solana>","232":"<blockchain><metamask>","233":"<blockchain><ethereum><web3js><ethers.js>","234":"<blockchain><ethereum><solidity>","235":"<blockchain><solidity>","236":"<blockchain><substrate><polkadot>rust-ink","237":"arrays<blockchain><ethereum><solidity><truffle>","238":"<docker><hyperledger-fabric><blockchain><hyperledger><hyperledger>-chaincode","239":"rust<blockchain>rust-cargo<solana>daap","240":"linuxapi<blockchain><metamask><hardhat>","241":"c#.net.net-core<blockchain>grpc","242":"<node.js><blockchain><ethereum>","243":"<javascript><blockchain>privateprivate-key<solana>","244":"<reactjs>async-awaitpromise<blockchain><web3>-react","245":"<blockchain><nearprotocol>","246":"<blockchain><solana>","247":"<blockchain>mnemonicsether","248":"metadata<blockchain><solidity><smartcontracts><nft>","249":"<javascript><blockchain><smartcontracts><solana>metaplex","250":"<hyperledger-fabric><blockchain><hyperledger><smartcontracts><hyperledger>-chaincode","251":"<blockchain><hyperledger-composer>","252":"<blockchain><ethereum><solidity>","253":"<blockchain><smartcontracts>remix","254":"<blockchain><ethereum><solidity><smartcontracts><chainlink>","255":"key<blockchain>wallet<nearprotocol>","256":"<node.js><websocket><blockchain><p2p><cryptocurrency>","257":"<blockchain><ethereum>","258":"<blockchain><solidity>remix","259":"<blockchain><solidity><chainlink>","260":"<blockchain><ethereum><solidity><smartcontracts><metamask>","261":"<javascript><node.js><blockchain><solana>","262":"go<hyperledger-fabric><blockchain><hyperledger>","263":"c#unity3d<blockchain>","264":"<blockchain>polygon<solidity><chainlink>matic","265":"jquery<blockchain><ethereum><solidity><binance-smart-chain>","266":"<python>-3.xvisual-studio-code<blockchain><smartcontracts><brownie>","267":"<blockchain><corda>","268":"<javascript><blockchain><ethereum><solidity><web3js>","269":"<blockchain><ethereum><brownie><decentralized-applications>","270":"<python>-3.xdjango<blockchain>","271":"<blockchain><smartcontracts><nft><hardhat><evm>","272":"<javascript><blockchain><smartcontracts><solana>phantom-wallet","273":"<blockchain><ethereum><smartcontracts>","274":"<python><blockchain><ethereum><web3><py>","275":"<blockchain><ethereum><bitcoin><cryptocurrency>","276":"<node.js><blockchain>cardano","277":"<node.js><blockchain><ethereum><web3js><ganache>","278":"<node.js><blockchain>eos","279":"<blockchain><solidity><smartcontracts><chainlink>","280":"<blockchain><corda>","281":"<blockchain><ethereum><solidity><web3js><metamask>","282":"<javascript><blockchain><ethereum>","283":"hadoophdfs<blockchain><ipfs>availability","284":"<blockchain><ethereum><solidity><web3js><etherscan>","285":"<hash><blockchain><bitcoin>","286":"<blockchain><ethereum><solidity><web3js>ethernet","287":"<blockchain><ethereum><solidity>remix<chainlink>","288":"apirest<blockchain><solana>coinmarketcap","289":"<blockchain>near","290":"<blockchain><ethereum><geth><etherscan>","291":"<blockchain><nft><solana>","292":"<node.js><blockchain>stellar","293":"php<blockchain><bitcoin>","294":"<blockchain><ethereum><truffle><ganache>","295":"<reactjs>react-hooks<blockchain><web3js>","296":"<blockchain><solidity><smartcontracts><chainlink>","297":"<javascript><blockchain><web3js><binance-smart-chain>","298":"plugins<blockchain><ethereum>protection<metamask>","299":"<docker><docker-compose><hyperledger-fabric><blockchain>peer","300":"<node.js><blockchain><web3js>binancebep20","301":"<blockchain><ethereum><solidity><truffle><ganache>","302":"visual-studio-code<blockchain><solidity><brownie>","303":"<database><kubernetes><blockchain><ethereum>go-<ethereum>","304":"php<blockchain>","305":"<blockchain><solidity><smartcontracts><binance-smart-chain>bep20","306":"<python><blockchain><ethereum>polygon<web3><py>","307":"<javascript><blockchain><solidity><web3js>","308":"<blockchain><solana>","309":"next.js<blockchain><ethereum>polygon<solidity>","310":"<blockchain><ethereum><solidity>","311":"<reactjs><blockchain><ethereum><metamask>","312":"<blockchain><ethereum>polygon<smartcontracts><nft>","313":"<hash><blockchain>","314":"<variables><blockchain>","315":"<blockchain><ethereum><solidity><smartcontracts><opensea>","316":"<blockchain><solidity>erc20bep20","317":"base64<blockchain>decodeelrond","318":"<blockchain><ethereum><nft>","319":"<blockchain><ethereum><smartcontracts>","320":"<javascript>deployment<blockchain><smartcontracts><truffle>","321":"linuxcommandubuntu-16.04<blockchain><solana>","322":"<javascript>ejs<blockchain>","323":"testing<networking><hyperledger-fabric><blockchain>peer","324":"<python><blockchain>modulenotfounderrorelronderd<py>","325":"<javascript><node.js><hyperledger-fabric>ejs<blockchain>","326":"<javascript><blockchain><solidity><smartcontracts><chainlink>","327":"<cryptography><blockchain>digital-<signature><bitcoin><cryptocurrency>","328":"<python><blockchain>polygon<binance-smart-chain><web3><py>","329":"<blockchain><ethereum><solidity><smartcontracts>","330":"<hyperledger-fabric><blockchain>","331":"<javascript><blockchain><ethereum><web3js>","332":"algorithm<blockchain>consensus","333":"<blockchain><ethereum><smartcontracts><nft>","334":"<networking><blockchain><p2p>","335":"<blockchain><solidity><nft><decentralized-applications>","336":"<blockchain>elrond","337":"<blockchain><ethereum><solidity>openzeppelin","338":"<javascript><blockchain><ethereum><truffle>","339":"<blockchain><solidity><cryptocurrency>","340":"<kubernetes><hyperledger-fabric><blockchain><hyperledger>","341":"<blockchain><nft>cardano","342":"<javascript><blockchain><ethereum><solidity><web3js>","343":"token<blockchain>bep20<bsc>scan","344":"<blockchain><substrate><polkadot>","345":"<blockchain><ethereum>go-<ethereum>","346":"<blockchain><binance-smart-chain>","347":"<javascript>androidkotlin<blockchain><nft>","348":"<blockchain><solidity>contract","349":"<blockchain><ethereum><solidity><smartcontracts>","350":"javamultithreading<blockchain>executorservice","351":"<blockchain><solana>","352":"<javascript><blockchain>seedmnemonics<solana>","353":"<blockchain><corda>","354":"<node.js><blockchain><web3js><nft>matic","355":"<blockchain><ganache>","356":"<hyperledger-fabric><blockchain><hyperledger>","357":"<javascript><blockchain>","358":"express<blockchain><web3js>","359":"<javascript><node.js>mongodbgraphql<blockchain>","360":"<kubernetes><hyperledger-fabric><blockchain><hyperledger-fabric>2.2","361":"<blockchain><bitcoin>","362":"<blockchain><geth>","363":"<blockchain><ethereum><solidity><chainlink>ether","364":"<blockchain><ethereum><solidity><smartcontracts>","365":"<docker><docker-compose><blockchain><polkadot>","366":"<reactjs>react-hooks<blockchain><ethereum>use-effect","367":"<python><blockchain><cryptocurrency><web3><py>","368":"deployment<blockchain><solidity><smartcontracts>waffle","369":"<blockchain><substrate>","370":"<javascript><blockchain><solidity><ethers.js>","371":"<docker-compose><hyperledger-fabric><blockchain><hyperledger>-chaincodeibm-<blockchain>","372":"<blockchain><ethereum><hardhat>","373":"<blockchain><ethereum>erc20","374":"<blockchain>core<bitcoin>macos-big-sursolid-state-drive","375":"<javascript><reactjs>react-hooks<blockchain><solidity>","376":"<blockchain><ethereum><solidity>","377":"<kubernetes><hyperledger-fabric><blockchain><hyperledger>","378":"<blockchain><substrate><polkadot>","379":"<blockchain><ethereum>","380":"<python><blockchain><ethereum><web3><py>ether","381":"<blockchain><solana>","382":"<blockchain><solidity><chainlink>","383":"<node.js><blockchain>wallet<solana>","384":"events<blockchain><ethereum><solidity><smartcontracts>","385":"<blockchain><ethereum><solidity><smartcontracts><chainlink>","386":"<blockchain><solidity><smartcontracts>","387":"<blockchain><ethereum><solidity><chainlink>","388":"<blockchain><ethereum>erc20","389":"token<blockchain><solana>","390":"<javascript><blockchain><solana>","391":"<javascript><blockchain><web3js><solana>","392":"<blockchain><ethereum><smartcontracts>","393":"<blockchain><ipfs><nft>","394":"<blockchain><ethereum><smartcontracts>","395":"<blockchain><ethereum>","396":"rust<blockchain><nearprotocol>","397":"<blockchain><ethereum><metamask>go-<ethereum><web3><py>","398":"<blockchain><ethereum>go-<ethereum>proof-of-correctness<web3><py>","399":"<blockchain><bitcoin>private-keywalletpassphrase","400":"apirest<blockchain><nft><opensea>","401":"<blockchain><solidity><cryptocurrency>","402":"c#.net-core<hash><blockchain>","403":"<blockchain><ethereum><solidity><ipfs>js-<ipfs>","404":"<hyperledger-fabric><blockchain><hyperledger>access-control","405":"<blockchain><smartcontracts><solana><chainlink>","406":"<node.js><blockchain><ethereum><geth><ethers.js>","407":"<python>-3.x<blockchain><bitcoin>","408":"<blockchain>toolchainterra-<blockchain>","409":"<javascript><blockchain>polygon<solidity><hardhat>","410":"<blockchain><ethereum><solidity>","411":"api<blockchain><nft><opensea>","412":"<blockchain><ethereum><solidity><smartcontracts>remix","413":"<blockchain><bitcoin>d<decentralized-applications><bitcoin>-testnetdecentralized-identity","414":"<blockchain><substrate><polkadot>","415":"<blockchain><ethereum>cryptoapierc20","416":"<node.js><hyperledger-fabric><blockchain><smartcontracts>","417":"<blockchain><ethereum><smartcontracts><metamask>remix","418":"couchdb<hyperledger-fabric><blockchain><hyperledger>","419":"<blockchain><ethereum><nft>","420":"<javascript><blockchain><ethereum><web3js><binance-smart-chain>","421":"<node.js>nodes<blockchain><solana>","422":"token<blockchain><ethereum><solidity>tron","423":"rust<blockchain><substrate>","424":"<hash><blockchain>","425":"backend<blockchain>contract","426":"<blockchain><web3js>","427":"<blockchain>elrond","428":"c#<blockchain>.net-5n<ethereum>","429":"<blockchain><solidity>","430":"<blockchain><smartcontracts><solana>anchor-<solana>","431":"<blockchain><ethereum><solidity><truffle><ganache>","432":"<blockchain><substrate><polkadot>","433":"<transactions><blockchain><ethereum><solidity><chainlink>","434":"<blockchain><chainlink>","435":"<python>list<blockchain><web3><py>","436":"<python>-3.x<blockchain><ethereum><web3><py>","437":"<javascript><blockchain><nft>","438":"<blockchain><ethereum>rpc<metamask>go-<ethereum>","439":"json<blockchain><metamask><bsc>scan","440":"rust<blockchain><substrate>","441":"fork<blockchain><binance-smart-chain>","442":"<blockchain><ethereum><smartcontracts><chainlink>","443":"mysql<blockchain>","444":"<javascript><typescript><blockchain><ethereum><hardhat>","445":"<storage><ethereum><solidity>remix<binance-smart-chain>","446":"<blockchain><ethereum><web3js><truffle><metamask>","447":"<blockchain>consensus","448":"struct<blockchain><ethereum><solidity>","449":"java<hyperledger-fabric><blockchain>","450":"<blockchain><hyperledger>","451":"<networking>token<blockchain><solidity>transfer","452":"rust<blockchain>unix-timestamp<solana>","453":"<python>jsonapi<blockchain>","454":"<blockchain><solidity><smartcontracts><truffle><ganache>","455":"<python>macos<blockchain><solidity><cryptocurrency>","456":"<blockchain><ethereum><solidity><smartcontracts>erc20","457":"<blockchain><substrate><polkadot>","458":"<blockchain>","459":"<blockchain><ethereum><solidity><smartcontracts><ethers.js>","460":"<python><blockchain><web3><py>","461":"<hyperledger-fabric><blockchain>platform","462":"<javascript><reactjs><blockchain><ethereum><web3js>","463":"<node.js>request<blockchain><ethereum><nft>","464":"<javascript>rust<blockchain><solana>","465":"rust<blockchain><substrate>lib<p2p>","466":"<hyperledger-fabric><blockchain><hyperledger>-chaincoderafttampering","467":"<javascript><blockchain><ethereum><bitcoin>","468":"<blockchain><solidity>erc20","469":"<blockchain>block<bitcoin>darknet","470":"<python><blockchain><ethereum><web3><py>","471":"encryption<cryptography><blockchain><substrate>sgx","472":"<blockchain><smartcontracts>","473":"<python><blockchain><smartcontracts><web3><py>","474":"<blockchain>cosmos","475":"<blockchain><cryptocurrency><binance-smart-chain>bep20binance-chain","476":"time<cryptography>locking<blockchain><nearprotocol>","477":"<networking><hyperledger-fabric><blockchain><hyperledger><hyperledger-fabric>-ca","478":"<python><blockchain><ethereum><web3><py>","479":"<cryptography><ethereum><blockchain><solidity>xor","480":"<docker><blockchain><solana>","481":"<blockchain><ethereum><solidity>erc20","482":"<hyperledger-fabric><blockchain><hyperledger><hyperledger>-chaincode","483":"<blockchain><ethereum><solidity><smartcontracts>","484":"timestamp<blockchain><solidity>erc20","485":"<blockchain><cryptocurrency>","486":"<blockchain><ethereum><solidity><smartcontracts>erc20","487":"<blockchain>ibm-<blockchain>","488":"<blockchain><corda>","489":"<blockchain><substrate>","490":"<docker><blockchain><ipfs>filecoin","491":"<blockchain>liquid<solidity>","492":"php<blockchain><ethereum>erc20","493":"function<blockchain><ethereum><solidity><smartcontracts>","494":"fluttermobile<blockchain><solidity>","495":"<blockchain><ethereum>erc20erc721erc1155","496":"<javascript><node.js><blockchain><ethereum>","497":"<blockchain><solidity><smartcontracts>contract","498":"<python><blockchain><web3><py><binance-smart-chain>","499":"<python><python>-3.x<blockchain><ethereum><web3><py>","500":"<kubernetes><blockchain>consensys-<truffle>","501":"<blockchain>","502":"<blockchain>binancecoinbase-api<cryptocurrency>","503":"<blockchain><substrate><polkadot><polkadot>-js","504":"<reactjs><blockchain><ethereum><solidity><web3js>","505":"<python><blockchain><bitcoin>","506":"<python><transactions>synchronization<blockchain>","507":"<hyperledger-fabric>config<blockchain><hyperledger>channels","508":"<blockchain><solidity>remix","509":"<blockchain><solidity>","510":"<blockchain><ethereum><smartcontracts><chainlink>","511":"<blockchain><ethereum><solidity>","512":"rust<blockchain><substrate><polkadot>-js","513":"<blockchain><ethereum><cryptocurrency>erc20<binance-smart-chain>","514":"function<blockchain><solidity><smartcontracts>remix","515":"google-cloud-platform<blockchain><chainlink>","516":"<blockchain><hyperledger>-besu","517":"rust<blockchain><nearprotocol><nearprotocol>-validator","518":"<javascript><blockchain>chaisinonsupertest","519":"<node.js><blockchain><metamask>ether<ethers.js>","520":"functiontoken<blockchain><solidity>pragma","521":"<python>stringstring-literals","522":"<reactjs><blockchain><web3js><metamask>","523":"<node.js><reactjs><blockchain><smartcontracts><metamask>","524":"<blockchain><substrate><polkadot>","525":"<blockchain><web3js><binance-smart-chain>","526":"<blockchain><solidity><truffle>","527":"<blockchain><solidity><smartcontracts>","528":"methods<blockchain><ethereum><solidity>","529":"<hyperledger-fabric><blockchain><hyperledger>","530":"<hyperledger-fabric><blockchain>concept","531":"<node.js><blockchain><ethereum>binance","532":"<javascript><blockchain><ethereum><solidity><web3js>","533":"<python><blockchain><solidity><smartcontracts>","534":"flutter<blockchain><ethereum><solidity>flutter-<web3>","535":"<docker-compose><hyperledger-fabric><blockchain>hyperldger-fabric-peer","536":"<blockchain><ethereum><web3js><etherscan>","537":"<python><blockchain><substrate><polkadot><polkadot>-js","538":"<node.js>multidimensional-array<blockchain><solidity><smartcontracts>","539":"<blockchain><ethereum>thegraph","540":"<python>json<blockchain><bitcoin>","541":"<blockchain><cosmos-sdk>starport","542":"<cryptography><blockchain>merkle-tree","543":"<blockchain><ethereum><smartcontracts>remix<decentralized-applications>","544":"<python><blockchain><solidity><smartcontracts>","545":"<javascript><node.js><blockchain><ethereum><solidity>","546":"<node.js><blockchain><smartcontracts>tron<tronweb>","547":"<blockchain><solidity><smartcontracts>","548":"<blockchain><ethereum>thegraphthegraph.com","549":"serialization<blockchain><solana>","550":"rust<blockchain><solana>","551":"<blockchain><cryptocurrency>","552":"<blockchain><ethereum><solidity><chainlink>","553":"<blockchain><ethereum><solidity><chainlink>","554":"<blockchain>immutability<smartcontracts>dao","555":"<blockchain><ethereum><solidity><smartcontracts><chainlink>","556":"<blockchain><ethereum><solidity>","557":"<reactjs>shell<blockchain>yarnpkg","558":"<node.js><blockchain>","559":"<blockchain>amazon-managed-<blockchain>","560":"go<blockchain>gaia<cosmos-sdk>","561":"<javascript><blockchain><ethereum><web3js>","562":"<blockchain><corda>","563":"<blockchain><solidity>ether<chainlink>","564":"<amazon-web-services><blockchain><ethereum><smartcontracts>amazon-managed-<blockchain>","565":"<blockchain><substrate>","566":"<blockchain><ethereum>thegraph","567":"<blockchain><ethereum><solidity><smartcontracts>binance","568":"<blockchain><solidity><truffle>pragma<cryptocurrency>","569":"next.js<blockchain><ethereum>","570":"<javascript><blockchain>","571":"<hyperledger-fabric><blockchain><hyperledger>","572":"<blockchain><smartcontracts>tron","573":"rust<blockchain><solana>","574":"<javascript><blockchain><ethereum><solidity><smartcontracts>","575":"fork<blockchain><ethereum><solidity>","576":"<blockchain><substrate><polkadot><polkadot>-js","577":"<blockchain><corda>","578":"<database>postgresqlredisarchitecture<blockchain>","579":"<blockchain><ethereum><solidity><smartcontracts><chainlink>","580":"<python><blockchain><web3><py>","581":"<blockchain><solidity><metamask><ganache>","582":"<blockchain><corda>","583":"<python>beautifulsoup<blockchain>","584":"<blockchain><ethereum><smartcontracts><cryptocurrency>cardano","585":"<node.js>npm<blockchain><solidity>","586":"<blockchain>","587":"sdk<blockchain>cardano","588":"<blockchain><ethereum><web3js><cryptocurrency>","589":"<reactjs><blockchain><ethereum><web3js>","590":"<blockchain><ethereum><solidity>","591":"<python><blockchain><web3><py>","592":"<cryptography><blockchain><bitcoin><cryptocurrency>","593":"<python>parsing<blockchain>block<bitcoin>","594":"azureazure-web-app-service<blockchain>su<bsc>ription","595":"nodes<blockchain>","596":"<reactjs>performancemergereact-router<blockchain>","597":"<blockchain><solidity>erc20","598":"<node.js>ubuntu<blockchain><ethereum>yarnpkg","599":"<blockchain><corda>","600":"<reactjs>installation<blockchain><ethereum>verify","601":"<blockchain>ibm-<blockchain>","602":"bots<blockchain><binance-smart-chain>","603":"<hyperledger-fabric><blockchain><hyperledger-composer><smartcontracts>","604":"<blockchain>","605":"<blockchain>","606":"<blockchain><bitcoin>","607":"<javascript><blockchain><bitcoin><bitcoin>js-lib","608":"<blockchain><web3js>","609":"<blockchain><ethereum><solidity><binance-smart-chain>binance-chain","610":"<python>flask<blockchain><metamask>","611":"<blockchain><smartcontracts><binance-smart-chain>","612":"<blockchain><nearprotocol>","613":"<blockchain><ethereum>","614":"<blockchain><ethereum><solidity><cryptocurrency>erc20","615":"testing<blockchain><solidity><truffle>","616":"<blockchain><bitcoin>","617":"<cryptography><blockchain><ethereum><bitcoin><cryptocurrency>","618":"<blockchain><distributed>-systemconsensus<hash>graphhedera-<hash>graph","619":"<python><blockchain><ethereum>binance<binance-smart-chain>","620":"<blockchain><solidity><smartcontracts><truffle>contract","621":"<blockchain><corda>","622":"<blockchain><ethereum><solidity>","623":"<blockchain><ethereum><etherscan>","624":"<python><blockchain><ethereum><web3><py>","625":"<python><docker-compose><transactions><blockchain><hyperledger>-sawtooth","626":"<blockchain><ethereum><solidity><truffle><cryptocurrency>","627":"<javascript><reactjs>react-native<blockchain><solidity>","628":"<blockchain><corda>","629":"<blockchain><solidity>quorumazure-<blockchain>-servicen<ethereum>","630":"<blockchain><ethereum><solidity>openzeppelin<nft>","631":"<blockchain><ethereum><solidity><truffle>openzeppelin","632":"<blockchain>pruningtron","633":"<blockchain><smartcontracts><cryptocurrency>","634":"<blockchain><smartcontracts>tron<tronweb>","635":"<python><python>-3.x<blockchain>merkle-tree<hash>tree","636":"<blockchain>eos","637":"<blockchain>verification<binance-smart-chain>","638":"<node.js><blockchain><cryptocurrency>tron<tronweb>","639":"<blockchain><solidity><smartcontracts><binance-smart-chain>","640":"nestjs<blockchain>","641":"<blockchain>block<ethereum><ganache>","642":"<blockchain><smartcontracts><cryptocurrency>","643":"sql<blockchain><ethereum><cryptocurrency>","644":"<blockchain><ethereum>go-<ethereum>thegraphthegraph.com","645":"<blockchain>","646":"<blockchain><hyperledger><hyperledger>-indy","647":"<blockchain><bitcoin><smartcontracts>","648":"<blockchain><ethereum><solidity>bep20","649":"e-commerce<blockchain><solidity><truffle><ganache>","650":"<blockchain>binance","651":"<blockchain><solidity><smartcontracts>remix","652":"<blockchain><solidity><smartcontracts>remix","653":"<hyperledger-fabric><blockchain><hyperledger>","654":"<blockchain><ethereum><solidity><smartcontracts><truffle>","655":"<hyperledger-fabric><blockchain><smartcontracts>","656":"postgresql<blockchain><chainlink>","657":"<node.js><blockchain><ethereum>","658":"<blockchain><ethereum><solidity>remix","659":"<hyperledger-fabric><blockchain><hyperledger>identity","660":"<blockchain><smartcontracts><binance-smart-chain>","661":"<blockchain><ethereum><web3js>binance","662":"<blockchain><ethereum><solidity><smartcontracts><binance-smart-chain>","663":"<hyperledger-fabric><blockchain>chaincode","664":"string<hash><blockchain><bitcoin>sha","665":"<blockchain><truffle><ganache>","666":"securityauthenticationdesign-patterns<blockchain>identity","667":"<transactions><blockchain>decentralized-identity","668":"<blockchain><ethereum><solidity><smartcontracts><geth>","669":"<javascript><node.js><blockchain><web3js><ethers.js>","670":"call<blockchain><ethereum><solidity>binance","671":"<blockchain><ethereum><solidity>remix","672":"rust<blockchain><smartcontracts><nearprotocol>","673":"windows<docker><hyperledger-fabric><blockchain>","674":"<hyperledger-fabric>grpc<blockchain><hyperledger><hyperledger-fabric-sdk-js>","675":"<hyperledger-fabric><blockchain><hyperledger><hyperledger>-chaincodechaincode","676":"<blockchain><ethereum><solidity><smartcontracts>","677":"<blockchain>aeternity-<blockchain>","678":"<ethereum><blockchain><solidity><smartcontracts><nft>","679":"<blockchain><bitcoin>","680":"<kubernetes><hyperledger-fabric>google-<kubernetes>-engine<blockchain><hyperledger-composer>","681":"<blockchain><smartcontracts>abi","682":"<typescript><blockchain><ethereum>erc20","683":"<blockchain><solidity><smartcontracts>erc20<binance-smart-chain>","684":"<blockchain><ethereum><ipfs><chainlink>","685":"<hyperledger-fabric><blockchain><hyperledger>raft","686":"<python><blockchain>","687":"<blockchain><ethereum><solidity><smartcontracts>binance","688":"<hyperledger-fabric><blockchain>","689":"<blockchain><ethereum><solidity>","690":"<blockchain><solidity><evm><chainlink>","691":"<blockchain><ethereum><solidity><smartcontracts>binance","692":"<blockchain><ethereum><solidity><smartcontracts>","693":"<blockchain><solidity><truffle><web3js><ganache>","694":"<python><blockchain>cryptoapi<cryptocurrency><blockchain>.info-api","695":"<blockchain><cosmos-sdk>","696":"<python>analytics<blockchain>erc20","697":"<node.js>npm<blockchain><smartcontracts>aeternity-<blockchain>","698":"<blockchain>cardano","699":"<node.js>ibm-cloud<hyperledger-fabric><blockchain>","700":"<blockchain><ethereum><geth>quorum","701":"<blockchain><ethereum><geth>quorum","702":"<blockchain><ethereum><solidity><smartcontracts>","703":"<python>web-scraping<blockchain><ethereum>imacros","704":"<node.js>npm<blockchain>npm-install<solidity>","705":"<blockchain><ethereum><solidity><smartcontracts><web3js>","706":"token<blockchain><solidity><truffle>erc20","707":"<blockchain><solidity>","708":"installation<blockchain>nvm<truffle>","709":"<blockchain><ethereum><solidity><smartcontracts>","710":"<blockchain><ethereum><solidity><smartcontracts><web3js>","711":"<hyperledger-fabric><blockchain>","712":"<python><blockchain><substrate><polkadot>","713":"<blockchain><solidity><smartcontracts><truffle><ganache>","714":"<blockchain>","715":"go<hyperledger-fabric><blockchain><hyperledger-fabric>-sdk-go","716":"<blockchain><ethereum><smartcontracts><ipfs>e-<signature>","717":"<hyperledger-fabric><blockchain><hyperledger><hyperledger-composer><hyperledger>-chaincode","718":"<blockchain><ethereum><solidity><truffle><chainlink>","719":"<blockchain><bitcoin><bitcoin>j","720":"<python><blockchain><ethereum>","721":"ipnodes<blockchain>","722":"<blockchain>","723":"<blockchain><ethereum>binanceerc20<binance-smart-chain>","724":"<hyperledger-fabric><blockchain><hyperledger><hyperledger>-chaincode","725":"<blockchain><ethereum><solidity><ipfs>","726":"<blockchain><bitcoin><cryptocurrency>","727":"rust<blockchain><substrate>","728":"<blockchain><corda><corda>-flow","729":"go<blockchain><bitcoin><bitcoin>-testnet","730":"<python><blockchain><web3><py>","731":"migration<blockchain><solidity><ganache>","732":"<javascript><blockchain><ethereum><web3js><metamask>","733":"<blockchain><ethereum><solidity>erc20","734":"<blockchain>go-<ethereum><geth><decentralized-applications>","735":"<python><python>-3.x<blockchain>startswith","736":"<blockchain>","737":"<blockchain><solidity><smartcontracts>","738":"<blockchain><substrate>system-testing<polkadot>","739":"<blockchain>cardanorosetta","740":"<blockchain><ethereum>tron","741":"<node.js><hyperledger-fabric><blockchain><hyperledger>-chaincode","742":"<blockchain><ethereum><web3js><metamask>","743":"<hyperledger-fabric><blockchain>","744":"<blockchain><ethereum><solidity><metamask>","745":"<transactions><storage><blockchain><ethereum><smartcontracts>","746":"<javascript><blockchain><bitcore>","747":"<blockchain><p2p>","748":"<blockchain>valgrind","749":"<hyperledger-fabric><blockchain>","750":"<python><blockchain><ethereum>erc20<etherscan>","751":"<hyperledger-fabric><blockchain><hyperledger>x509certificate<hyperledger-composer>","752":"<javascript><node.js><blockchain><solidity>","753":"<javascript><node.js><blockchain><solidity>","754":"<javascript><node.js><blockchain>","755":"<hyperledger-fabric><blockchain><hyperledger>","756":"rust<blockchain>rust-cargoapple-m1<solana>","757":"<javascript>json<blockchain>","758":"<blockchain><ethereum><solidity>","759":"apiflutterdart<blockchain>binance","760":"<blockchain><ethereum>go-<ethereum><geth>","761":"<blockchain><ethereum><solidity><ganache>","762":"<blockchain><ethereum><smartcontracts><geth>","763":"<blockchain><ethereum>","764":"<python>-3.x<blockchain><web3><py><etherscan>","765":"<blockchain><ethereum><nft>","766":"<hyperledger-fabric><blockchain><hyperledger><blockchain>.info-api<hyperledger>-besu","767":"<node.js><hyperledger-fabric><blockchain><hyperledger-fabric-sdk-js>","768":"curl<hyperledger-fabric><blockchain>","769":"<node.js>api<blockchain><cryptocurrency>tron","770":"<hyperledger-fabric><blockchain><hyperledger>","771":"compiler-errors<blockchain><solidity><truffle>","772":"<python><blockchain><hyperledger><hyperledger>-indy<hyperledger>-aries","773":"<blockchain><ethereum><solidity>quorum","774":"<node.js><blockchain><solidity>","775":"<blockchain>binance","776":"tdd<blockchain><ethereum><solidity><smartcontracts>","777":"<hyperledger-fabric><blockchain><hyperledger>peer","778":"<hyperledger-fabric><blockchain><hyperledger>","779":"<hash>buffer<blockchain><ethereum>","780":"javaandroid<blockchain>","781":"graphics<blockchain>implementationspecificationsprocessor","782":"npmvisual-studio-code<hyperledger-fabric><blockchain>ibm-<blockchain>","783":"<javascript><blockchain><ethereum><solidity>","784":"<blockchain><solidity><truffle>binance","785":"<blockchain><bitcoin><cryptocurrency>","786":"java<blockchain>voting-system","787":"android<blockchain><ethereum><solidity>file-sharing","788":"npm<blockchain><truffle>","789":"<blockchain><ethereum><solidity><smartcontracts><truffle>","790":"<javascript><blockchain>","791":"<blockchain>eos","792":"<hyperledger-fabric><blockchain>damldigital-assets","793":"<python><blockchain><ethereum>private-key","794":"<node.js><hyperledger-fabric><blockchain><hyperledger-fabric-sdk-js>amazon-managed-<blockchain>","795":"<blockchain><substrate><polkadot>","796":"<javascript><hyperledger-fabric><blockchain>latency","797":"<cryptography><blockchain><ethereum><bitcoin>","798":"<blockchain><ethereum>tokenize<solidity>","799":"<python>linux<blockchain><ethereum>ether","800":"<blockchain><ethereum><solidity>factory-patternremix","801":"<docker><docker-compose><hyperledger-fabric><blockchain><hyperledger>-explorer","802":"<hyperledger-fabric><blockchain><ethereum>","803":"<blockchain><substrate><polkadot>","804":"<node.js><hyperledger-fabric><blockchain><hyperledger>","805":"<blockchain>","806":"<transactions><blockchain><ethereum><smartcontracts>","807":"<python><cryptography><blockchain><bitcoin>elliptic-curve","808":"<hyperledger-fabric><blockchain><hyperledger>","809":"<blockchain><substrate><polkadot>","810":"cloud<blockchain><ethereum><solidity><smartcontracts>","811":"api<websocket><cryptography><blockchain>","812":"sql<blockchain>amazon-qldbpartiql","813":"<blockchain><ethereum><bitcoin><cryptocurrency>","814":"<javascript><transactions><blockchain><ethereum><smartcontracts>","815":"<blockchain>","816":"<python><blockchain>wallet","817":"<blockchain><ethereum><smartcontracts>gnosis-safe","818":"<blockchain><substrate><polkadot>parity-io<polkadot>-js","819":"<kubernetes><hyperledger-fabric>devops<blockchain>amazon-eks","820":"<python>-3.x<blockchain><ethereum><web3><py>","821":"sql<cryptography><blockchain>","822":"<blockchain><ethereum><solidity>","823":"<blockchain><ethereum><substrate>","824":"<python><python>-3.x<blockchain><ethereum><web3><py>","825":"<blockchain><ethereum><solidity><smartcontracts>","826":"arrays<blockchain><ethereum><solidity>","827":"<blockchain>rpcrsk","828":"<hyperledger-fabric><blockchain><hyperledger>","829":"jsonsql-server<blockchain>sql-server-2019","830":"cloud<blockchain><ethereum><smartcontracts>","831":"<transactions><blockchain><ethereum><smartcontracts>","832":"<blockchain>","833":"oracle<blockchain><ethereum><smartcontracts>","834":"oracle<blockchain><ethereum><smartcontracts>","835":"<blockchain><substrate><polkadot>pallet","836":"<blockchain><ethereum><smartcontracts><web3js><metamask>","837":"<node.js><hyperledger-fabric><blockchain><hyperledger><hyperledger-fabric-sdk-js>","838":"local-<storage><blockchain><ethereum><decentralized-applications>","839":"<blockchain>","840":"apinodes<blockchain><ethereum>","841":"<javascript><blockchain><ethereum><solidity><smartcontracts>","842":"nodes<blockchain><ethereum>","843":"<python>-3.x<blockchain>pipenvpipenv-install","844":"<node.js><hyperledger-fabric><blockchain>x509certificate","845":"<javascript><blockchain><ethereum><solidity><metamask>","846":"<blockchain>","847":"<blockchain><bitcoin>","848":"<python>apirest<python>-requests<blockchain>","849":"<javascript><python><blockchain><python>-requests-html","850":"<blockchain><bitcoin>","851":"events<transactions><blockchain><ethereum>","852":"<transactions><blockchain><ethereum>","853":"<cryptography>rsa<blockchain><ethereum><solidity>","854":"<blockchain><bitcoin>","855":"<python><blockchain>","856":"<blockchain><ethereum><smartcontracts><web3><py><etherscan>","857":"<blockchain>hierarchicaldeterministic","858":"<blockchain>account","859":"<blockchain>consensus","860":"<blockchain><ethereum><bitcoin><cryptocurrency>","861":"<node.js><blockchain><ethereum><solidity><truffle>","862":"<blockchain><ethereum><solidity><truffle><web3js>","863":"<blockchain><bitcoin>","864":"<blockchain><ethereum><solidity>","865":"<blockchain><ethereum><chainlink>","866":"artificial-intelligence<blockchain><ethereum><smartcontracts>","867":"flutterdart<blockchain><ethereum><ganache>","868":"<python><blockchain>","869":"<python><docker><blockchain>","870":"<blockchain><corda>","871":"algorithm<blockchain><distributed>-computing","872":"<blockchain><ethereum><solidity>ether","873":"javalinked-list<hash>map<blockchain>","874":"<blockchain>kraken.com","875":"<hyperledger-fabric><blockchain>","876":"<node.js><blockchain><ethereum><web3js>erc20","877":"<hash><transactions><blockchain><ethereum><solidity>","878":"springspring-boot<blockchain><corda>","879":"<blockchain><ethereum>","880":"<cryptography><blockchain><ethereum><chainlink>","881":"ubuntu<blockchain>windows-subsystem-for-linuxwavesplatform","882":"scala<blockchain>wavesplatform","883":"<javascript><blockchain><ethereum><solidity><web3js>","884":"<blockchain><solidity>tron<tronweb>tronlink","885":"<hyperledger-fabric><blockchain><smartcontracts>","886":"<blockchain><ethereum><solidity><smartcontracts>remix","887":"<python><blockchain>block","888":"<blockchain><ethereum><distributed><bitcoin>","889":"<blockchain><ethereum><solidity><smartcontracts>","890":"<docker><hyperledger-fabric><blockchain>private-network"},"edited_time":{"0":null,"1":null,"2":null,"3":"Aug 23, 2022 at 15:06","4":"Sep 1, 2022 at 14:07","5":"Dec 30, 2021 at 15:45","6":null,"7":"Sep 8, 2022 at 20:40","8":null,"9":null,"10":"Dec 27, 2021 at 17:19","11":null,"12":null,"13":"Dec 25, 2021 at 2:44","14":"Dec 23, 2021 at 18:36","15":null,"16":null,"17":"Dec 29, 2021 at 9:54","18":"Dec 23, 2021 at 7:34","19":null,"20":null,"21":null,"22":"Dec 22, 2021 at 1:12","23":null,"24":null,"25":null,"26":"Sep 12, 2022 at 14:57","27":"Sep 12, 2022 at 14:58","28":"Dec 31, 2021 at 2:47","29":"Dec 18, 2021 at 9:44","30":"Dec 18, 2021 at 7:20","31":null,"32":"Mar 30, 2022 at 10:00","33":null,"34":null,"35":null,"36":"Dec 15, 2021 at 19:02","37":null,"38":null,"39":"Dec 15, 2021 at 14:09","40":null,"41":"Dec 14, 2021 at 19:34","42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":"Dec 21, 2021 at 16:22","49":null,"50":null,"51":null,"52":null,"53":"Jan 28, 2022 at 5:02","54":"Dec 11, 2021 at 19:36","55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":"Dec 7, 2021 at 11:41","65":"Dec 7, 2021 at 16:27","66":null,"67":null,"68":null,"69":null,"70":"Sep 7, 2022 at 18:35","71":null,"72":null,"73":null,"74":"Jan 14, 2022 at 13:13","75":"Apr 14, 2022 at 18:44","76":"Dec 3, 2021 at 12:15","77":null,"78":null,"79":null,"80":null,"81":null,"82":"Oct 9, 2022 at 14:33","83":"Dec 1, 2021 at 17:31","84":null,"85":"Dec 5, 2022 at 4:33","86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":"Nov 30, 2021 at 0:47","93":"Sep 9, 2022 at 19:26","94":"Sep 23, 2022 at 12:36","95":"Sep 27, 2022 at 20:24","96":"Sep 9, 2022 at 19:25","97":null,"98":null,"99":null,"100":null,"101":"Dec 1, 2021 at 18:41","102":"Nov 28, 2021 at 23:05","103":"Sep 27, 2022 at 20:25","104":"Nov 28, 2021 at 12:28","105":"Nov 28, 2021 at 22:27","106":null,"107":null,"108":null,"109":"Mar 29, 2022 at 6:21","110":null,"111":"Nov 26, 2021 at 17:11","112":null,"113":"Mar 29, 2022 at 3:11","114":null,"115":null,"116":null,"117":"Nov 26, 2021 at 12:12","118":null,"119":"Nov 26, 2021 at 8:23","120":"Nov 25, 2021 at 21:24","121":"Nov 25, 2021 at 19:44","122":null,"123":"Nov 30, 2021 at 12:31","124":"Nov 25, 2021 at 15:15","125":null,"126":null,"127":null,"128":null,"129":"Nov 22, 2021 at 3:54","130":null,"131":"Nov 22, 2021 at 18:45","132":null,"133":"Sep 27, 2022 at 21:19","134":"Jan 9, 2022 at 6:15","135":null,"136":null,"137":null,"138":"Nov 19, 2021 at 15:00","139":null,"140":"Oct 3, 2022 at 19:39","141":"Nov 19, 2021 at 4:05","142":"Nov 19, 2021 at 13:24","143":null,"144":null,"145":null,"146":"Nov 19, 2021 at 9:27","147":null,"148":"Nov 18, 2021 at 15:01","149":"Nov 18, 2021 at 12:45","150":"Dec 13, 2021 at 14:00","151":"Nov 19, 2021 at 22:49","152":"Oct 3, 2022 at 19:40","153":null,"154":"Nov 17, 2021 at 20:29","155":null,"156":null,"157":null,"158":"Nov 16, 2021 at 15:44","159":null,"160":null,"161":"Nov 14, 2021 at 17:44","162":null,"163":null,"164":null,"165":null,"166":null,"167":"Sep 29, 2022 at 18:46","168":null,"169":"Dec 13, 2021 at 14:01","170":null,"171":null,"172":"Oct 12, 2022 at 15:42","173":"Nov 11, 2021 at 7:07","174":"Jan 3, 2022 at 10:48","175":"Oct 13, 2022 at 20:19","176":null,"177":"Sep 29, 2022 at 18:47","178":null,"179":"Oct 13, 2022 at 21:08","180":"Dec 13, 2021 at 14:03","181":"Nov 12, 2021 at 20:49","182":null,"183":null,"184":"Mar 29, 2022 at 3:32","185":null,"186":null,"187":"Oct 13, 2022 at 21:07","188":"Oct 13, 2022 at 21:11","189":null,"190":"Nov 7, 2021 at 18:26","191":"Nov 10, 2021 at 10:57","192":null,"193":"Oct 13, 2022 at 21:12","194":"Oct 13, 2022 at 21:13","195":null,"196":"Sep 29, 2022 at 18:51","197":null,"198":null,"199":"Nov 4, 2021 at 11:10","200":"Mar 30, 2022 at 18:10","201":null,"202":null,"203":null,"204":"Oct 31, 2021 at 19:15","205":null,"206":"Nov 16, 2022 at 4:27","207":"Oct 31, 2021 at 0:41","208":"Nov 1, 2021 at 19:48","209":"Nov 2, 2021 at 15:48","210":"Oct 30, 2021 at 12:43","211":"Oct 29, 2021 at 20:23","212":null,"213":"Oct 31, 2021 at 4:55","214":null,"215":null,"216":null,"217":null,"218":"Oct 27, 2021 at 10:11","219":null,"220":"Jul 25, 2022 at 15:46","221":null,"222":null,"223":"Jan 29 at 3:36","224":null,"225":"Oct 24, 2021 at 19:17","226":null,"227":null,"228":"Oct 24, 2021 at 7:33","229":null,"230":null,"231":"Oct 26, 2021 at 3:42","232":"Oct 23, 2021 at 11:17","233":"Oct 12, 2022 at 15:44","234":null,"235":"Oct 23, 2021 at 8:25","236":null,"237":null,"238":"Oct 22, 2021 at 10:19","239":null,"240":null,"241":null,"242":null,"243":"Oct 20, 2021 at 16:01","244":"Jul 21, 2022 at 16:21","245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":"Oct 15, 2021 at 12:01","256":null,"257":null,"258":null,"259":null,"260":"Feb 1, 2022 at 5:37","261":null,"262":null,"263":"Oct 14, 2022 at 19:04","264":"Oct 25, 2021 at 6:36","265":null,"266":"Oct 12, 2021 at 21:26","267":null,"268":"Oct 24, 2022 at 20:24","269":null,"270":null,"271":null,"272":"May 30, 2022 at 19:22","273":null,"274":null,"275":null,"276":"Nov 8, 2021 at 19:51","277":null,"278":null,"279":"Oct 8, 2021 at 20:30","280":null,"281":"Oct 24, 2022 at 20:26","282":null,"283":null,"284":null,"285":"Oct 5, 2021 at 12:06","286":"Oct 25, 2022 at 21:08","287":"Oct 7, 2021 at 12:28","288":"Oct 27, 2021 at 4:20","289":null,"290":null,"291":null,"292":"Oct 4, 2021 at 10:34","293":"Oct 3, 2021 at 22:09","294":null,"295":"Oct 26, 2022 at 20:43","296":null,"297":null,"298":null,"299":null,"300":"Oct 26, 2022 at 20:46","301":"Oct 2, 2021 at 1:49","302":null,"303":"Oct 1, 2021 at 14:54","304":null,"305":"Oct 10, 2021 at 10:03","306":"Oct 20, 2022 at 19:18","307":"Oct 27, 2022 at 16:17","308":"Sep 29, 2021 at 20:50","309":"Sep 28, 2021 at 21:02","310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":"Sep 27, 2021 at 16:22","317":null,"318":null,"319":null,"320":null,"321":"Sep 26, 2021 at 8:47","322":"Sep 25, 2021 at 15:07","323":null,"324":"Oct 16, 2021 at 21:05","325":"Oct 4, 2021 at 9:22","326":"Sep 24, 2021 at 22:07","327":"Sep 24, 2021 at 20:37","328":null,"329":"Sep 24, 2021 at 9:39","330":null,"331":"Oct 27, 2022 at 16:16","332":null,"333":null,"334":"Sep 23, 2021 at 14:09","335":null,"336":null,"337":null,"338":"Oct 28, 2022 at 16:39","339":"Sep 22, 2021 at 13:59","340":null,"341":null,"342":"Oct 28, 2022 at 16:39","343":null,"344":null,"345":null,"346":null,"347":null,"348":"Sep 20, 2021 at 17:31","349":"Sep 20, 2021 at 17:37","350":null,"351":"Sep 28, 2021 at 20:44","352":"Jul 4, 2022 at 13:13","353":null,"354":"Oct 27, 2022 at 16:18","355":"Sep 27, 2021 at 13:23","356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":"Sep 21, 2021 at 4:11","364":"Jan 28, 2022 at 4:58","365":null,"366":null,"367":"Sep 13, 2021 at 16:40","368":"Sep 13, 2021 at 15:01","369":null,"370":null,"371":null,"372":"Sep 12, 2021 at 17:33","373":null,"374":null,"375":null,"376":"Sep 10, 2021 at 21:31","377":null,"378":null,"379":"Sep 11, 2021 at 4:38","380":"Sep 10, 2021 at 8:34","381":null,"382":"Sep 14, 2021 at 12:55","383":null,"384":"Jan 11, 2022 at 16:01","385":null,"386":null,"387":null,"388":"Sep 7, 2021 at 18:36","389":null,"390":null,"391":"Jul 11, 2022 at 11:01","392":null,"393":null,"394":null,"395":null,"396":"Sep 3, 2021 at 3:00","397":null,"398":null,"399":"Sep 2, 2021 at 5:47","400":null,"401":"Sep 4, 2021 at 16:43","402":null,"403":null,"404":"Sep 4, 2021 at 20:28","405":"May 1, 2022 at 1:53","406":null,"407":null,"408":"Sep 22, 2022 at 0:21","409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":"Aug 25, 2021 at 10:14","417":null,"418":"Aug 24, 2021 at 13:39","419":null,"420":"Oct 25, 2022 at 21:14","421":null,"422":null,"423":null,"424":null,"425":"Aug 22, 2021 at 7:58","426":null,"427":"Sep 24, 2021 at 14:13","428":"Aug 20, 2021 at 2:16","429":"Aug 25, 2021 at 16:15","430":"Aug 29, 2022 at 1:53","431":"Aug 19, 2021 at 7:41","432":null,"433":"Aug 19, 2021 at 4:41","434":null,"435":"Oct 26, 2022 at 20:45","436":"Aug 18, 2021 at 16:47","437":null,"438":"Aug 17, 2021 at 12:55","439":null,"440":null,"441":null,"442":"Aug 14, 2021 at 12:45","443":"Aug 13, 2021 at 5:33","444":"Aug 14, 2021 at 23:04","445":"Aug 13, 2021 at 16:41","446":"Nov 3, 2022 at 19:12","447":null,"448":null,"449":null,"450":"Aug 19, 2021 at 11:37","451":"Oct 29, 2021 at 8:15","452":"Aug 10, 2021 at 19:53","453":null,"454":null,"455":null,"456":null,"457":"Aug 9, 2021 at 12:29","458":null,"459":null,"460":"Oct 26, 2022 at 20:54","461":"Aug 9, 2021 at 4:02","462":null,"463":null,"464":"Aug 4, 2021 at 23:29","465":null,"466":null,"467":null,"468":null,"469":null,"470":"Oct 27, 2022 at 16:20","471":null,"472":null,"473":"Oct 27, 2022 at 16:20","474":null,"475":"Aug 2, 2021 at 8:41","476":null,"477":null,"478":null,"479":"Dec 4, 2022 at 5:11","480":null,"481":null,"482":null,"483":"Dec 31, 2021 at 2:56","484":null,"485":"Jul 27, 2021 at 20:45","486":"Aug 13, 2022 at 22:32","487":null,"488":"Jul 27, 2021 at 6:12","489":null,"490":null,"491":null,"492":null,"493":"Jul 25, 2021 at 14:19","494":null,"495":"May 14, 2022 at 0:57","496":null,"497":null,"498":"Oct 28, 2022 at 16:43","499":null,"500":"Jul 19, 2021 at 10:32","501":"Jul 21, 2021 at 11:43","502":null,"503":"Jul 19, 2021 at 7:42","504":null,"505":null,"506":null,"507":"Jul 19, 2021 at 7:39","508":null,"509":null,"510":null,"511":null,"512":"Jul 14, 2021 at 9:49","513":null,"514":"Jul 13, 2021 at 15:55","515":null,"516":null,"517":"Jul 12, 2021 at 4:47","518":null,"519":null,"520":null,"521":"Apr 7, 2019 at 3:24","522":"Nov 8, 2022 at 20:32","523":null,"524":null,"525":"Nov 1, 2022 at 19:50","526":null,"527":null,"528":"Jul 6, 2021 at 6:40","529":null,"530":"Jul 4, 2021 at 18:28","531":"Jul 4, 2021 at 22:01","532":"Nov 8, 2022 at 20:49","533":null,"534":"Nov 1, 2022 at 20:01","535":"Jul 1, 2021 at 18:32","536":"Nov 3, 2022 at 19:16","537":"Jun 30, 2021 at 19:00","538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":"Jun 29, 2021 at 3:40","545":"Jun 27, 2021 at 7:30","546":null,"547":null,"548":null,"549":"Jun 26, 2021 at 0:46","550":"Jun 26, 2021 at 0:46","551":null,"552":null,"553":null,"554":"Nov 18, 2022 at 21:37","555":"Jun 18, 2021 at 10:25","556":null,"557":"Jun 21, 2021 at 7:53","558":null,"559":null,"560":null,"561":"Nov 21, 2022 at 19:17","562":null,"563":"Jun 17, 2021 at 2:10","564":"Jun 19, 2022 at 21:44","565":"Jun 16, 2021 at 9:18","566":null,"567":null,"568":null,"569":null,"570":"Jun 10, 2021 at 6:48","571":null,"572":null,"573":"Jun 26, 2021 at 0:47","574":"Aug 27, 2022 at 20:59","575":null,"576":null,"577":null,"578":null,"579":null,"580":"Jul 14, 2022 at 15:08","581":null,"582":null,"583":"Jun 7, 2021 at 6:29","584":null,"585":"Jun 5, 2021 at 21:45","586":"Jun 27, 2021 at 8:45","587":"Jun 5, 2021 at 11:42","588":null,"589":"Nov 7, 2022 at 22:53","590":null,"591":"Jun 2, 2021 at 21:45","592":null,"593":null,"594":"Jul 5, 2021 at 22:47","595":null,"596":null,"597":"Jun 1, 2021 at 23:13","598":"Jun 1, 2021 at 12:54","599":"Jun 1, 2021 at 4:01","600":null,"601":"Jun 1, 2021 at 18:29","602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":"May 25, 2021 at 14:03","612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":"May 23, 2021 at 21:10","622":null,"623":null,"624":null,"625":null,"626":"May 21, 2021 at 8:45","627":"May 20, 2021 at 23:38","628":"May 20, 2021 at 11:35","629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":"May 11, 2021 at 0:48","644":"May 10, 2021 at 21:55","645":null,"646":null,"647":"May 9, 2021 at 4:38","648":null,"649":null,"650":null,"651":null,"652":"May 7, 2021 at 13:38","653":null,"654":null,"655":null,"656":null,"657":null,"658":"May 6, 2021 at 8:38","659":null,"660":null,"661":"Nov 18, 2022 at 21:36","662":null,"663":"May 5, 2021 at 8:02","664":null,"665":null,"666":"May 3, 2021 at 12:27","667":null,"668":null,"669":"May 4, 2021 at 7:20","670":null,"671":"May 1, 2021 at 20:36","672":null,"673":"May 16, 2021 at 13:34","674":"Apr 30, 2021 at 15:19","675":null,"676":null,"677":"Apr 30, 2021 at 19:40","678":"Dec 5, 2022 at 4:34","679":null,"680":"Apr 29, 2021 at 14:16","681":null,"682":null,"683":"Apr 27, 2021 at 23:54","684":null,"685":"Apr 28, 2021 at 10:04","686":"Apr 27, 2021 at 12:50","687":null,"688":"Apr 29, 2021 at 9:40","689":null,"690":null,"691":"Apr 26, 2021 at 8:30","692":"Apr 25, 2021 at 10:55","693":null,"694":"Apr 24, 2021 at 11:55","695":"Aug 26, 2022 at 20:13","696":null,"697":null,"698":"Nov 8, 2021 at 20:53","699":null,"700":null,"701":null,"702":null,"703":"Apr 20, 2021 at 19:16","704":"Apr 20, 2021 at 15:20","705":null,"706":null,"707":null,"708":null,"709":null,"710":"Apr 15, 2021 at 12:00","711":null,"712":null,"713":"Apr 12, 2021 at 8:25","714":null,"715":"Apr 12, 2021 at 10:02","716":null,"717":null,"718":"Apr 10, 2021 at 17:59","719":"Apr 10, 2021 at 8:29","720":null,"721":null,"722":"Apr 9, 2021 at 15:32","723":null,"724":null,"725":"Apr 10, 2021 at 15:14","726":null,"727":"Apr 8, 2021 at 23:47","728":"Apr 19, 2022 at 16:53","729":null,"730":"Nov 21, 2022 at 19:26","731":null,"732":"Oct 24, 2022 at 20:43","733":null,"734":"Apr 2, 2021 at 15:41","735":"Apr 1, 2021 at 13:11","736":null,"737":"Apr 2, 2021 at 10:35","738":"Jun 14, 2021 at 6:35","739":"Mar 30, 2021 at 16:21","740":null,"741":"Mar 30, 2021 at 12:25","742":"Sep 5, 2022 at 15:39","743":null,"744":"Mar 30, 2021 at 16:56","745":null,"746":null,"747":null,"748":"Mar 30, 2021 at 3:51","749":"Mar 30, 2021 at 2:28","750":null,"751":null,"752":"Mar 25, 2021 at 20:39","753":"Mar 25, 2021 at 9:43","754":null,"755":null,"756":"May 24, 2021 at 21:13","757":null,"758":null,"759":null,"760":null,"761":"Mar 20, 2021 at 11:11","762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":"Nov 14, 2022 at 23:04","770":null,"771":"Mar 15, 2021 at 19:27","772":null,"773":null,"774":null,"775":"Mar 9, 2021 at 6:44","776":"Mar 8, 2021 at 16:36","777":"Mar 9, 2021 at 9:06","778":"Mar 8, 2021 at 3:31","779":null,"780":"Mar 9, 2021 at 4:51","781":null,"782":"Mar 5, 2021 at 20:10","783":null,"784":null,"785":"Mar 1, 2021 at 20:06","786":null,"787":null,"788":"Jan 16, 2022 at 9:06","789":null,"790":null,"791":"Feb 26, 2021 at 8:43","792":null,"793":"Feb 22, 2021 at 19:53","794":"Feb 27, 2021 at 0:14","795":null,"796":"Feb 20, 2021 at 11:49","797":null,"798":"Feb 20, 2021 at 0:49","799":null,"800":null,"801":"Feb 18, 2021 at 8:33","802":null,"803":null,"804":null,"805":null,"806":null,"807":"May 21, 2022 at 20:21","808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":"Feb 7, 2021 at 11:22","817":"Nov 29, 2021 at 14:28","818":null,"819":null,"820":null,"821":"Feb 5, 2021 at 3:33","822":"Feb 5, 2021 at 10:37","823":null,"824":"Nov 26, 2022 at 20:12","825":"Feb 7, 2021 at 1:56","826":null,"827":"Feb 3, 2021 at 14:55","828":null,"829":"Jan 31, 2021 at 7:20","830":null,"831":"Feb 6, 2021 at 15:45","832":"Jan 30, 2021 at 13:11","833":"Jan 29, 2021 at 0:29","834":"Jan 29, 2021 at 12:12","835":"Jan 28, 2021 at 9:53","836":null,"837":"Feb 10, 2021 at 6:31","838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":"Feb 1, 2022 at 11:32","846":null,"847":"Jan 26, 2021 at 7:37","848":null,"849":"Jan 21, 2021 at 22:20","850":"Jan 21, 2021 at 18:13","851":"Jan 22, 2021 at 9:36","852":"Jan 21, 2021 at 14:27","853":"Jan 19, 2021 at 1:52","854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":"Jan 18, 2021 at 9:36","861":null,"862":null,"863":null,"864":null,"865":"Jan 14, 2021 at 21:58","866":null,"867":null,"868":null,"869":"Jan 14, 2021 at 12:48","870":null,"871":null,"872":null,"873":null,"874":"May 26, 2021 at 9:38","875":"Jan 8, 2021 at 10:58","876":null,"877":null,"878":null,"879":null,"880":"Jan 7, 2021 at 3:39","881":"Sep 12, 2022 at 17:47","882":"Jan 6, 2021 at 11:15","883":null,"884":null,"885":null,"886":"Jan 5, 2021 at 5:37","887":null,"888":null,"889":"Jan 2, 2021 at 8:49","890":null},"last_editor":{"0":"Daniel Hanczyc","1":"alex devassy","2":"raitech","3":"TylerH","4":"TylerH","5":null,"6":"Nflv22","7":"TylerH","8":"GrandSteph","9":"rezli","10":"Marko Popovic","11":"William Best","12":"omrani omaima","13":"Yilmaz","14":null,"15":"Forkmohit","16":"\u00c8\u0098ener","17":null,"18":null,"19":"sunny","20":"Avenbreaks","21":"Mete Karasakal","22":null,"23":"Ketuojo Moses","24":"Karthikeyan Thangavel","25":"coriden","26":"TylerH","27":"TylerH","28":"Adrian Mole","29":"Jose German Perez Sanchez","30":null,"31":"\u00d0\u00ad\u00d1\u0080\u00d0\u00bd\u00d0\u00b5\u00d1\u0081\u00d1\u0082","32":"Jasper","33":"Bruce Jayasinghe","34":"alex devassy","35":"luisbriyan","36":null,"37":"Pijush Barman","38":"Code Plus","39":null,"40":"leslie-wung","41":"martineau","42":"Bartu \u00c5\u009e\u00c4\u00b1rac\u00c4\u00b1","43":"Non Reply","44":"Mr Coder","45":"anelBavari","46":"Dorian Crutcher","47":"Sravan Kumar","48":null,"49":"Marco Comotti","50":"user15921","51":"santanu bera","52":"Tucket","53":"Yilmaz","54":"halfer","55":"Serhii Zharkov","56":"wajahat nafees","57":"ElHaix","58":"khennati","59":"Ivan","60":"user10488162","61":"Ali Dev","62":"Sergei Voronezhskii","63":"Panagatla Sumanohar Goud","64":null,"65":"Nimantha","66":"Saulius","67":"samar","68":"Nora","69":"Diamond","70":"TylerH","71":"Samuel S.","72":"mohan A","73":"DHC","74":null,"75":"General Grievance","76":null,"77":"Kevin M","78":"Nurin Izzati Jafri","79":"Makam Aravind","80":"Shekhar Chopra","81":"user10931326","82":null,"83":null,"84":"Whytecrowe","85":"Yilmaz","86":"Gaia","87":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","88":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","89":"dopaminer","90":"Joey Yi Zhao","91":"Joey Yi Zhao","92":null,"93":"TylerH","94":"Stephen Ostermiller","95":"TylerH","96":"TylerH","97":"Joey Yi Zhao","98":"Joey Yi Zhao","99":"user17537220","100":"Joey Yi Zhao","101":"Julissa DC","102":null,"103":"TylerH","104":null,"105":null,"106":"iDontKnow","107":"Kale","108":"VGabriel45","109":"Jasper","110":"luisgonzalez","111":null,"112":null,"113":"Jasper","114":"Ali Raza","115":"Matheus","116":"Joey Yi Zhao","117":null,"118":"Crypto Dev 24","119":null,"120":"marc_s","121":"Henry Ecker","122":"ofirthedev","123":"Adrian Mole","124":null,"125":"Joaogl","126":"Fl\u00c3\u00a1vio Naves Jr","127":"3lii06","128":"Makam Aravind","129":null,"130":"html_programmer","131":"Patrick Collins","132":"SAPTARSI SAHA","133":"TylerH","134":"Yilmaz","135":"ARNAB RAY","136":"rainbowemoji","137":"Haidarali Masu","138":null,"139":"ARNAB RAY","140":"TylerH","141":null,"142":null,"143":"Jesley C\u00c3\u00a1ceres Marcelino","144":"Qeest","145":"learning_bunny","146":null,"147":"Luis Manuel Cort\u00c3\u00a9s Tirado","148":null,"149":null,"150":"Vadim Kotov","151":null,"152":"TylerH","153":"Cromewar","154":null,"155":"Cho Chung Hyun","156":"co.blocks office","157":"Makam Aravind","158":"Patrick Collins","159":"Saveer Jain","160":"Gi Ro","161":null,"162":"Paris","163":"chuck","164":"Sepehr","165":"DND","166":"IkehAkinyemi","167":"TylerH","168":"loretoparisi","169":"Vadim Kotov","170":"hammad99","171":"Josh Wenner","172":"TylerH","173":null,"174":null,"175":"TylerH","176":"Delali","177":"TylerH","178":"Shubham Gupta","179":"TylerH","180":"Vadim Kotov","181":"Patrick Collins","182":"Ryan Ellis","183":"Charchit Dhawan","184":"Jasper","185":"Aswin Thotapalli","186":"Shihab Shahriyar","187":"TylerH","188":"TylerH","189":"Aya Elhawary","190":null,"191":null,"192":"Makam Aravind","193":"TylerH","194":"TylerH","195":"xBatmanx","196":"TylerH","197":"Leo","198":"waupelani","199":"Zak Ayesh","200":"Jasper","201":"Zeeshan Hanif","202":"LuxuryWaffles","203":"Marco Brugali","204":null,"205":"Junior","206":"Yilmaz","207":null,"208":"aberkb","209":"Vadim Kotov","210":null,"211":null,"212":"In-SaNity Gamer","213":"karel","214":"Alex Won","215":"Flendor","216":"topgun741","217":"ya va","218":null,"219":"Mukesh Kumar","220":"Patrick Collins","221":"Jtara","222":"Bhawik chawda","223":"Yilmaz","224":"Lcob","225":null,"226":"Arnaldo","227":"Shobhit Tewari","228":"Nik Klassen","229":"Apollo","230":"Ashish Jain","231":null,"232":null,"233":"TylerH","234":"Stephen Okita","235":null,"236":"Timur Guvenkaya","237":"alvin Christianto","238":"Taxel","239":"mohan A","240":"enstazao","241":"Aidal","242":"Apollo","243":"Progman","244":"TylerH","245":"wulitaotao","246":"JSON derulo","247":"Varun","248":"lang-ja","249":"mohan A","250":"Arnaldo","251":"M. Khan","252":null,"253":"Cyan","254":"Yzyzyzyz","255":"Vlad Frolov","256":"Ihsan","257":"sagesy 01","258":"alvin Christianto","259":"Turupawn","260":"Yilmaz","261":"Siddhant Shah","262":"proxima","263":"TylerH","264":null,"265":"Tapas","266":"Patrick Collins","267":"user10488162","268":"TylerH","269":"Haidarali Masu","270":"Kim Jisena","271":"Rugg0","272":"Yilmaz","273":"moccajoghurt","274":"Aditya Dev","275":"Prab-mat","276":"Andy Jazz","277":"eth_developer","278":"utf_8","279":null,"280":"user10488162","281":"TylerH","282":"Mariusz Sidorowicz","283":"Asrul Paelori Ahmad","284":"eth_developer","285":null,"286":"TylerH","287":"Patrick Collins","288":null,"289":"Matt","290":"BarefootDev","291":"user1042147","292":"Ethan","293":null,"294":"F.young","295":"TylerH","296":"XCEPTION","297":"OneEyeDoll","298":"Eliseev","299":"mohammed alzuharey","300":"TylerH","301":null,"302":"Cromewar","303":null,"304":"Zack Tim","305":"greybeard","306":"TylerH","307":"TylerH","308":null,"309":"Wang Liang","310":"ROMEO Fardeen","311":"Zuffido","312":"XCEPTION","313":"Dheeraj","314":"druedger","315":"FaSh","316":"LemonsAndLigaments","317":"ROMANIA_engineer","318":"Zuza","319":"Lamerest","320":"johnme","321":null,"322":null,"323":"mohammed alzuharey","324":null,"325":"Reporter","326":null,"327":null,"328":"James","329":"Mikko Ohtamaa","330":"akhmad fadil Mubarok","331":"TylerH","332":"dmvict","333":"Alai","334":null,"335":"Stefanpt","336":"ROMANIA_engineer","337":"gbenga ogunbule","338":"TylerH","339":null,"340":"Niraj Kumar","341":"Nuno Lopes","342":"TylerH","343":"Akintomide Ayodele","344":"Makam Aravind","345":"Anurag Sharma","346":"Xim123","347":"Renos","348":"Petr Hejda","349":"Wang Liang","350":"Nam V. Do","351":"the Tin Man","352":"mikemaccana","353":"Sourabh","354":"TylerH","355":"Dimple","356":"Rebecca Margarini","357":"Data Universe","358":"kimiro","359":"Aditya Khochare","360":"ray","361":"dyxdyx","362":"Johnny Bravo","363":"bad_coder","364":"Yilmaz","365":"\u00d0\u00a1\u00d1\u0082\u00d0\u00b5\u00d0\u00bf\u00d0\u00b0\u00d0\u00bd \u00d0\u00a2\u00d0\u00b8\u00d1\u0082\u00d0\u00b0\u00d1\u0080\u00d0\u00b5\u00d0\u00bd\u00d0\u00ba\u00d0\u00be","366":"Bdellinger","367":null,"368":null,"369":"lucgerrits","370":"rami1988","371":"Faria Kamal","372":null,"373":"taranchik","374":"Hahnemann","375":"Bdellinger","376":"Petr Hejda","377":"Niraj Kumar","378":"Jdawg287","379":null,"380":null,"381":"maxall4","382":null,"383":"Alejandro Diaz Roque","384":"Yilmaz","385":"Daniel Vieira","386":"Mecanicul","387":"Daniel Vieira","388":null,"389":"Michael Kocurek","390":"CloudlyTV","391":"mikemaccana","392":"Luiz Felipe Veiga","393":"Eric Lee","394":"yamna iftikhar","395":"NicoleZ","396":null,"397":"Trimantra Software Solution","398":"Trimantra Software Solution","399":"Andy Jazz","400":"Mohamed Rady","401":"bad_coder","402":"Kamil","403":"Kartik ganiga","404":null,"405":"Yilmaz","406":"Bosco","407":"Frantisek Mach","408":"kmdreko","409":"TonyTheCannoli","410":"Fatima Almashhor","411":"Striga","412":"Augusto Caro","413":"nistelrooy41001662","414":"Linh Tran","415":"magna_nz","416":"Vadim Kotov","417":"Emeka","418":"RamblinRose","419":"Angel","420":"TylerH","421":"Akshay S P","422":"Jeanne Zinoviev","423":"som3_l0cust","424":"TRRVNA","425":null,"426":"Todd Ainsworth","427":"ROMANIA_engineer","428":null,"429":"Wang Liang","430":"Yilmaz","431":"Wang Liang","432":"Makam Aravind","433":null,"434":"yamna iftikhar","435":"TylerH","436":"DisappointedByUnaccountableMod","437":"Ayudh","438":null,"439":"Pixel Crypto","440":"dancing_carrot","441":"Rimproverato","442":"Petr Hejda","443":"emix","444":null,"445":null,"446":"TylerH","447":"Marco Comotti","448":"ATRUES","449":"KaySay2018","450":"Ranjul Arumadi","451":"Nimantha","452":"Shepmaster","453":"B L","454":"Haris Nabeel","455":"Alchemist AB","456":"Phill Overton","457":"BL4DERUNNER","458":"Mahad Ali","459":"kh1em","460":"TylerH","461":"covener","462":"Sila Pakdeewong","463":"Haider Yaqoob","464":null,"465":"Jitterbug","466":"Kushal Mahajan","467":"azamat303","468":"Shubham","469":"Tokyo","470":"TylerH","471":"Gokul Alex","472":"Caleb Reynolds","473":"TylerH","474":"OnlyTO","475":"James Z","476":"Gokul Alex","477":"Enthusiast Coder","478":"Ivan","479":"Yilmaz","480":"sonic","481":"Gopal Gurram","482":"Tushar Sharma","483":"Pang","484":"Umair Janjua","485":null,"486":"Yilmaz","487":"Shahrad Khedri","488":null,"489":"lucgerrits","490":"ChristianOConnor","491":"AngelDev","492":"Giorgi","493":"Muhammad Tariq","494":"Aslan Demir","495":"Yilmaz","496":"KotlinIsland","497":"Yifan Lim","498":"TylerH","499":"aditya","500":null,"501":"jub0bs","502":"Arash Heidari","503":"James Z","504":"Andrea D_","505":"Jeff F","506":"Hoomehr Kz","507":"Vadim Kotov","508":"ponga","509":"Fabian Aguilera","510":"akhil","511":"Viktor.w","512":"Elias Holzmann","513":"galpo","514":"James Z","515":"DocRed","516":"SiuSum","517":"Elias Holzmann","518":null,"519":"mohan A","520":"Yadav Akash","521":"CryptoFool","522":"TylerH","523":"Saurabh","524":"dharjeezy","525":"TylerH","526":"Gaurav Yadav","527":"Dimitri","528":"Andrea Olivato","529":"marija","530":null,"531":null,"532":"TylerH","533":"Darshan Vankawala","534":"TylerH","535":null,"536":"TylerH","537":null,"538":"supdev","539":"Paul Verest","540":"Gaming With Farhan","541":"p_zuckerman","542":"Stormsson","543":"H.M. Sibghat ullah","544":null,"545":"Andy","546":"Erfan Poursina","547":"user16315385","548":"Paul Verest","549":"bartosz.lipinski","550":"bartosz.lipinski","551":"Opsetech","552":"Holland Pleskac","553":"Holland Pleskac","554":"TylerH","555":"Uladzislau Kaminski","556":"Rajnish63","557":"Phortuin","558":"Normalbut_Genuine","559":"Nish","560":"Tosch","561":"TylerH","562":"Siridet Sukkana","563":null,"564":"halfer","565":"Tony Stark","566":"marija","567":"Darren","568":"Dressi","569":"noveltyz","570":null,"571":"ajit yadav","572":"webish","573":"bartosz.lipinski","574":"Yilmaz","575":"Uchenna Edeoga","576":"jhon alino","577":"laplace","578":"Mahesh Rapelli","579":"entropic nova","580":"TylerH","581":"Uchenna Edeoga","582":"laplace","583":"LazyEval","584":"Timm Nicolaizik","585":null,"586":"marc_s","587":null,"588":"Jonathan Otokun","589":"TylerH","590":"nastari","591":null,"592":"S.O.S","593":"peter","594":"halfer","595":"\u00d0\u0090\u00d0\u00bb\u00d0\u00b8\u00d1\u008f \u00d0\u00a1\u00d1\u0083\u00d0\u00b5\u00d1\u0082\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0","596":"Padma Shruthi","597":"Petr Hejda","598":"jonrsharpe","599":null,"600":"Padma Shruthi","601":"John Conde","602":"Samuel Alibien","603":"Enthusiast Coder","604":"xxx_yyy","605":"M_gogo","606":"Tahlil","607":"MetaStack","608":"Lucian Ilie","609":"Azeem Lodhi","610":"Gaurav","611":null,"612":null,"613":"peterchen145","614":"Roman Kartashow","615":"kyto3","616":"Nikhil Chandna","617":"Mangekyou","618":"jwpublic","619":"Vayas","620":"Zed","621":"Alessandro Baffa","622":"Ilker Kadir Ozturk","623":"user9958772","624":"kapisolec","625":"cocazzzz","626":"Mikko Ohtamaa","627":"cpru","628":null,"629":"OguzKaanAkyalcin","630":"Kevvv","631":"Farouk YD","632":"Amin","633":"inquisitivemongoose","634":"Pooya Saberian","635":"basilisk","636":"Icaro","637":"Baxter Cooper","638":"ADLZ","639":"Saulius","640":"STB","641":"Mr. Jack","642":null,"643":"Gordon Linoff","644":null,"645":"viet nguyen","646":"tushar bansal","647":null,"648":"<blockchain> Learner","649":"User","650":"tonalt","651":"Everton Figueiredo","652":null,"653":"Soundarya","654":"Yocker95k","655":"sfl0r3nz05","656":"jaxcoder","657":"magna_nz","658":"Michael Rovinsky","659":"Pool","660":"Lyn","661":"TylerH","662":"sung chul","663":null,"664":"Marklah","665":"Saurav Majumder","666":null,"667":"Mario Roma","668":"Luke Vo","669":null,"670":"Carlo Parisi","671":"Rob","672":"secretshardul","673":"david_k","674":null,"675":"Chaitanya M","676":"ogg130","677":null,"678":"Yilmaz","679":"Dmitriy Yankowoy","680":null,"681":"laalaguer","682":"Karzel","683":null,"684":"Aymeric","685":"Vadim Kotov","686":"Theodor Peifer","687":"Crypto Miner","688":null,"689":"Wowocado","690":"Crypto D","691":null,"692":null,"693":"raury","694":null,"695":"aweigold","696":"Lauri Teerim\u00c3\u00a4ki","697":"Omar Saadoun","698":"Andy Jazz","699":"dabadee","700":"Rock","701":"Rock","702":"Saulius","703":"ChimdumebiNebolisa","704":null,"705":"hatta zouba","706":"fabriziogianni7","707":"nidhi_1729","708":"HighXTC","709":"Saulius","710":null,"711":"OYU","712":"Jdawg287","713":null,"714":"Gajus","715":"Vadim Kotov","716":"Tristan S","717":"mightyMouse","718":null,"719":"Mark Rotteveel","720":"oweshoal","721":"l4x3 l4x3","722":null,"723":"raphael","724":"Youcef Chalabi","725":null,"726":null,"727":null,"728":"General Grievance","729":"it4ddict","730":"TylerH","731":"acampana","732":"TylerH","733":"Crypto Miner","734":"Petr Hejda","735":null,"736":"user2330237","737":null,"738":null,"739":null,"740":"Leonardo Henrique","741":null,"742":"TylerH","743":"Isee","744":null,"745":"Haya Raed","746":"Rambabu verma","747":"rouzbehsbz","748":"Simson","749":null,"750":"Marcus","751":"mightyMouse","752":null,"753":null,"754":"mai mohamed","755":"Nextil Men's Essentials","756":"Jason","757":"DedicatedDreamer","758":"Saulius","759":"Shaban","760":"Salah-SH","761":"Petr Hejda","762":"Tunji Abioye","763":"Krish Bhanushali","764":"Vlad","765":"Prisma","766":"Wafa AB","767":"k-block","768":"Anton Popadyuk","769":"Pavel Fedotov","770":"cherry","771":"E_net4 the idiot downvoter","772":"Futureman2007","773":"Haya Raed","774":"Tosh","775":null,"776":null,"777":"Vadim Kotov","778":null,"779":"Nika Kurashvili","780":null,"781":"User","782":"elbik","783":"Akhil","784":"hyunki_cho","785":null,"786":"TheRealP","787":"Nishant Karekar","788":"Krishna","789":"Garrix","790":"Reza S","791":"Jinja_dude","792":"Enthusiast Coder","793":"Comsavvy","794":"Moolshanker Kothari","795":"Karthikeyan Thangavel","796":"Vadim Kotov","797":null,"798":null,"799":"yeckHQ","800":"benjamin852","801":null,"802":"monir zaman","803":"jhon alino","804":"SOUPTIK BANERJEE","805":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","806":"Mario Roma","807":null,"808":"siglesias","809":"Suryansh Singh","810":"akhil","811":"andtoe","812":"ajay","813":"Tony Starkus","814":"Micheal","815":"dralexhunter","816":null,"817":"katspaugh","818":"Milton Cezar","819":"shubham kamboj","820":"gjivanya","821":"eshirvana","822":"mrcrambo","823":"Afeez Aziz","824":"TylerH","825":"mrcrambo","826":"Sirab33","827":"Aion","828":"Calvin Cheng","829":"Dale K","830":"Ram","831":"mrcrambo","832":null,"833":null,"834":"Mikko Ohtamaa","835":"Masklinn","836":"meharab","837":null,"838":"Nigar Atakishiyeva","839":"Ivan Ponomarenko","840":"Micheal","841":"Mecca888","842":"Mario Roma","843":"Basti","844":"Zoha Malik","845":"Yilmaz","846":"James Lin","847":null,"848":"hiimarksman","849":null,"850":null,"851":"Mikko Ohtamaa","852":"Mikko Ohtamaa","853":null,"854":"user3717550","855":"IronFist","856":"Meschdog18","857":"Rob Frohwein","858":"potato","859":"Jo Bo","860":"Mikko Ohtamaa","861":"Bsc Talk","862":"Bsc Talk","863":"Zack Tim","864":"user3362334","865":null,"866":"Geeky Star","867":"Kasun Sudharaka","868":"Michael Allen","869":null,"870":"Vishwa Dayal","871":"decoder1799","872":"GN.","873":"L M","874":"zx8754","875":null,"876":"Aleksa Misovic","877":"Waleed Shafiq","878":"Clyde D'Cruz","879":"patwards","880":null,"881":"NotTheDr01ds","882":"Tomer Shetah","883":"WAQAS WAHID","884":"Jeswin Rebil","885":"Dainius Preimantas","886":"Merrin K","887":"alex","888":"tjumma","889":"Mikko Ohtamaa","890":"resilientEther"},"Comments for Question":{"0":"Add a comment\n                \u00c2\u00a0|","1":"Add a comment\n                \u00c2\u00a0|","2":"Add a comment\n                \u00c2\u00a0|","3":"Add a comment\n                \u00c2\u00a0|","4":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Jan 12, 2022 at 10:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","5":"I dont know how do you make the contract, but the given error let me think that either the address of the receiver is invalid or the contract don't have IERC721Receiver implemented.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0flydev\n                \n                Dec 30, 2021 at 14:43\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Address I have given the link in the question. I can see that. How to implement IERC721Receiver? I have updated the question with contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nikesh Kedlaya\n                \n                Dec 30, 2021 at 14:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","6":"Add a comment\n                \u00c2\u00a0|","7":"Add a comment\n                \u00c2\u00a0|","8":"Add a comment\n                \u00c2\u00a0|","9":"On which network are you deploying the contract (Ethereum mainnet, Rinkeby testnet, Remix VM emulator, ...)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 25, 2021 at 15:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","10":"If you found the answer helpful, please consider marking it as accepted.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marko Popovic\n                \n                Jan 9, 2022 at 20:36\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","11":"Add a comment\n                \u00c2\u00a0|","12":"I don't know much about <blockchain>s but for VANETs have a look at veins.car2x.org or eclipse.org\/mosaic. Unfortunatley they both do not use <python>.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Michael\n                \n                Dec 28, 2021 at 16:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","13":"Apparently you need to set a constructor parameter\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Dec 24, 2021 at 16:26\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Next time, please share the code instead of images. This will be more helpful for people who want to help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Dec 25, 2021 at 2:42\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","14":"Uh, not a crypto expert, just confused by the difference in the two graphs. Top is output from someone else, and bottom is output from your code? Honestly, they look very similar (see major spikes in same places with same general shape). The bottom graph has more noise, and the difference may be a scaling or filtering thing?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hallibut\n                \n                Dec 23, 2021 at 18:31\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The first one is when I plot x= time and y= difficulty whereas the second is when is plot x= time and y = ln( difficulty) :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cl\u00c3\u00a9ment Perroud\n                \n                Dec 23, 2021 at 18:35\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                Can you include a plot of the expected result?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Pranav Hosangadi\n                \n                Dec 23, 2021 at 18:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","15":"Add a comment\n                \u00c2\u00a0|","16":"Add a comment\n                \u00c2\u00a0|","17":"Add a comment\n                \u00c2\u00a0|","18":"Add a comment\n                \u00c2\u00a0|","19":"Please clarify your specific problem or provide additional details to highlight exactly what you need. As it's currently written, it's hard to tell exactly what you're asking.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Dec 30, 2021 at 18:31\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","20":"Add a comment\n                \u00c2\u00a0|","21":"Add a comment\n                \u00c2\u00a0|","22":"Add a comment\n                \u00c2\u00a0|","23":"Add a comment\n                \u00c2\u00a0|","24":"Please edit the question show your code what have you tried so far, as the starting point, as otherwise the question is too open ended\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Dec 20, 2021 at 8:28\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I want to know how to fetch the token id from the uni swap pool to remove it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Karthikeyan Thangavel\n                \n                Dec 20, 2021 at 8:31\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","25":"Add a comment\n                \u00c2\u00a0|","26":"And no one should see this moved data public <blockchain>s are by definition public, so they are unlikely suitable for the purpose. Also your question is XYProblem, so please tell more context for the issue to make it answerable xyproblem.info\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Dec 20, 2021 at 8:30\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","27":"What is the question here? You seem to have forgotten to ask one.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TylerH\n                \n                Sep 13, 2022 at 13:19\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","28":"Did you find my answer helpful, or do you need more help?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dylan Kerler\n                \n                Dec 20, 2021 at 11:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","29":"same problem here\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dr Jay\n                \n                Dec 20, 2021 at 18:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @DrJay have you gotten any solution?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0iamjc015\n                \n                Dec 22, 2021 at 7:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                nope i think they change their stricture of things\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dr Jay\n                \n                Dec 23, 2021 at 7:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","30":"Add a comment\n                \u00c2\u00a0|","31":"Add a comment\n                \u00c2\u00a0|","32":"Add a comment\n                \u00c2\u00a0|","33":"Add a comment\n                \u00c2\u00a0|","34":"You should be able to decode it with the Node Fabric SDK. See <hyperledger>.github.io\/fabric-sdk-node\/release-2.2\/\u00e2\u0080\u00a6 for more details.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DarkChipolata\n                \n                Dec 16, 2021 at 15:34\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","35":"Did find a solution?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0abc\n                \n                Feb 1, 2022 at 23:37\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                No bro, I couldn't find any hint how to do that\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0luisbriyan\n                \n                Feb 7, 2022 at 3:18\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I needed to get this implemented, but then I just convinced my manager to leave out this feature because the crypto wallet will show the tx fee anyways.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0abc\n                \n                Feb 7, 2022 at 5:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","36":"Add a comment\n                \u00c2\u00a0|","37":"Add a comment\n                \u00c2\u00a0|","38":"Have you found an answer? I do have the same issue even connecting from Metamask, or Truffle, or Remix to my local ganache, they all show all accounts with 0ETH\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Matx\n                \n                Mar 9, 2022 at 13:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","39":"Is the mint() function part of the contract Token or of another contract (e.g. an imported library) in the set of your contracts?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 15, 2021 at 13:49\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda mint() is part of the contract Token, as you can see, inside mint() there is _mint() that is part of BEP20 imported contract, there isn't any other mint() function\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0stormy TV\n                \n                Dec 15, 2021 at 13:52\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","40":"i think this question is better suited for cs.stackexchange.com\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Effie\n                \n                Dec 15, 2021 at 11:59\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for the heads up. I posted an identical question here cs.stackexchange.com\/questions\/146694\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0leslie-wung\n                \n                Dec 15, 2021 at 13:05\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The question is asked already at cs.stackexchange.com, so it should be closed here.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yuri Ginsburg\n                \n                Dec 22, 2021 at 2:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","41":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Dec 21, 2021 at 10:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","42":"Add a comment\n                \u00c2\u00a0|","43":"It's about digital scarcity. It's about different actors agreeing with each other. Any actor is free to include timestamps and <transactions> in the hash, but how do you know which actor has <transactions> and timestamps everybody agrees on that happened? In <blockchain>s with POW you can be certain that the chosen timestamp and <transactions> are agreed upon, because of the work done by the network. To spend money again differently you first have to also do the POW. To reverse the question: how would you circumvent the double spending problem by putting timestamps in a hash?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user2609980\n                \n                Dec 14, 2021 at 20:12\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please edit the question to limit it to a specific problem with enough detail to identify an adequate answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Dec 21, 2021 at 10:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","44":"Add a comment\n                \u00c2\u00a0|","45":"Add a comment\n                \u00c2\u00a0|","46":"Add a comment\n                \u00c2\u00a0|","47":"Add a comment\n                \u00c2\u00a0|","48":"Just happened to me yet again! I think this is a ** very** critical issue with ethereum itself!!! Sad that there are still so many issues with it and no solution... \u00f0\u009f\u0098\u00a2\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jim\n                \n                Dec 14, 2021 at 23:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You say \"...ping going through fine every 15 min...\", but in your example output you only show \"Sending a ping!...\" log messages.  There are no \"Got blocknum:...\" log messages. So checking the obvious, you are actually getting responses to your ping requests, correct?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kaliatech\n                \n                Dec 21, 2021 at 13:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @kaliatech yes, it is displaying the \"pong\" log every time.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jim\n                \n                Dec 21, 2021 at 16:23\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","49":"Add a comment\n                \u00c2\u00a0|","50":"Add a comment\n                \u00c2\u00a0|","51":"Add a comment\n                \u00c2\u00a0|","52":"Add a comment\n                \u00c2\u00a0|","53":"error may suggest that you have to use word Solidity (with upper S) instead of solidity (with lower s)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Dec 11, 2021 at 23:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I read \"How to Ask. \" thank you, I am sorry for that inconvenience Chris.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hala Al-Zayat\n                \n                Dec 12, 2021 at 8:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                furas, I add the link in the question and thank you for your comments I edited Solidity (with upper S)  now and again it gives me the same error message.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hala Al-Zayat\n                \n                Dec 12, 2021 at 8:18\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                try simpleStorage.sol -> SimpleStorage.sol in the json\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0K450\n                \n                Dec 12, 2021 at 8:44\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","54":"Add a comment\n                \u00c2\u00a0|","55":"Add a comment\n                \u00c2\u00a0|","56":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Dec 17, 2021 at 7:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","57":"Add a comment\n                \u00c2\u00a0|","58":"1\n            \n        \n        \n            \n                \n                Can you rephrase that as a programming question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user14215102\n                \n                Dec 10, 2021 at 12:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please edit the question to limit it to a specific problem with enough detail to identify an adequate answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MD. RAKIB HASAN\n                \n                Dec 20, 2021 at 6:07\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","59":"Add a comment\n                \u00c2\u00a0|","60":"Add a comment\n                \u00c2\u00a0|","61":"Add a comment\n                \u00c2\u00a0|","62":"Add a comment\n                \u00c2\u00a0|","63":"Please clarify your specific problem or provide additional details to highlight exactly what you need. As it's currently written, it's hard to tell exactly what you're asking.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Dec 18, 2021 at 14:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","64":"Please edit the question and show the smart contract code, as well as the JS code calling the contract.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 6, 2021 at 22:19\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                is this whole error stack ? As mostly errors in contract shows this gas estimation but it has some other reason as well which can be found in error stack.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Akash senta\n                \n                Dec 7, 2021 at 4:16\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Added the full error stack if that provides any help\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0slim.syd\n                \n                Dec 7, 2021 at 11:41\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","65":"Add a comment\n                \u00c2\u00a0|","66":"Add a comment\n                \u00c2\u00a0|","67":"Add a comment\n                \u00c2\u00a0|","68":"Add a comment\n                \u00c2\u00a0|","69":"funny this exists so quickly, I'm also seeing that same timed out icon appearing over n over whilst trying to follow a moralis NFT contract guide on YT...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0PhilosophOtter\n                \n                Dec 5, 2021 at 22:55\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","70":"Add a comment\n                \u00c2\u00a0|","71":"Add a comment\n                \u00c2\u00a0|","72":"Add a comment\n                \u00c2\u00a0|","73":"Did you already tried \/ checked this: geeksforgeeks.org\/solidity-variables\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yannick\n                \n                Dec 4, 2021 at 8:31\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","74":"Add a comment\n                \u00c2\u00a0|","75":"Add a comment\n                \u00c2\u00a0|","76":"1\n            \n        \n        \n            \n                \n                Can you specify what action do you need to perform on the user's behalf? Sending native <transactions> is impossible by design (it needs to be signed by the private key of the sender) but for some actions regarding smart contracts (e.g. transferirng tokens for authorized users on your own - not external - contract) you could make use of the EDCSA signature.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 3, 2021 at 12:24\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                PancakeSwap router - definitely not mine - is the target contract. So I guess that's not going to work then, right?  Is there a way to achieve my scenario, at all? I read about relay networks, but then I'd have to pay all the gas fees. I guess custodial wallets would be another option?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0r.beer\n                \n                Dec 3, 2021 at 12:31\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","77":"Add a comment\n                \u00c2\u00a0|","78":"Add a comment\n                \u00c2\u00a0|","79":"Add a comment\n                \u00c2\u00a0|","80":"1\n            \n        \n        \n            \n                \n                gas prices can not be changed on a contract as they do not depend on the contract, gas prices are the price per unit of computational power and it will depends in multiple factors like network congestion, but long history short, if you want to change something later it needs to be a variable and have a setter function or you will need to use proxies\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Dec 2, 2021 at 2:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                To add to @jhonny comment First you need to understand that the gas price you pay are essentially tx fees which goes to miners minning the block. gas prices can be set by user for each transaction they are sending but if its too low than current avg gas price of network the miners will end up not adding your transaction to their block and it will stay in mempool (where are txs that are not yet added to any block live) too long and rejected eventually\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Dec 3, 2021 at 10:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please edit the question to limit it to a specific problem with enough detail to identify an adequate answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Dec 8, 2021 at 13:18\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @hassanahmed thanks bro. do you have a <blockchain> project that I can follow?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shekhar Chopra\n                \n                Dec 9, 2021 at 8:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","81":"1\n            \n        \n        \n            \n                \n                Can you see chaincode container on a machine where your peer is running? Instantiating in 1.4 should spawn one. Your logs seem to be fine indeed.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MimoKrok\n                \n                Dec 2, 2021 at 21:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MimoKrok I didn't see the chaincode container being spawned\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user10931326\n                \n                Dec 3, 2021 at 9:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Interesting, you even have logs from it. Can you try running docker container ls -f 'status=exited' to list exited containers and check if there are containers of your chaincode (you may also try checking if there is at least an image created by running docker images) and if there is any - output its logs?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MimoKrok\n                \n                Dec 3, 2021 at 14:08\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","82":"Add a comment\n                \u00c2\u00a0|","83":"Add a comment\n                \u00c2\u00a0|","84":"3\n            \n        \n        \n            \n                \n                You can call delegatecall on external account, check this: ethereum.stackexchange.com\/questions\/17406\/\u00e2\u0080\u00a6  I think you can check whether address is contract.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Peter Lai\n                \n                Dec 1, 2021 at 3:53\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PeterLai yeah, security team removed the address check. it's too expensive and not that much of a problem. however, I think a check for 0 address does need to happen...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Whytecrowe\n                \n                Dec 1, 2021 at 4:12\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","85":"Add a comment\n                \u00c2\u00a0|","86":"Add a comment\n                \u00c2\u00a0|","87":"Add a comment\n                \u00c2\u00a0|","88":"Add a comment\n                \u00c2\u00a0|","89":"Add a comment\n                \u00c2\u00a0|","90":"Add a comment\n                \u00c2\u00a0|","91":"Add a comment\n                \u00c2\u00a0|","92":"Add a comment\n                \u00c2\u00a0|","93":"\"what I am trying to do is call a contract where I pass x amount of token coins and pass contract address\"  What is the definition of the word you repeatedly refer to as 'contract'?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0El Tomato\n                \n                Nov 29, 2021 at 23:31\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                OK I am sorry if I did not explain the result I am trying to achieve.  So we have a token on ether <blockchain>. We have our own coin. We have an ABI contact.  So I want to pass the ether address of the wallet I want to send the token address of our token I want to send the ABI json string of our contact I want to send the amount of tokens I want to transfer from the token into the new coin.  However the call function is failing.  Not sure if its because this wrapper is old and not upto date with <web3>\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user1428158\n                \n                Nov 29, 2021 at 23:54\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                If anyone needs the ABI json and addresses to test then im happy to supply.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user1428158\n                \n                Nov 29, 2021 at 23:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi @user1428158 did you done custom function calling on <web3>swift ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mitul Bhadeshiya\n                \n                Jan 3 at 9:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","94":"Add a comment\n                \u00c2\u00a0|","95":"Add a comment\n                \u00c2\u00a0|","96":"If you know that the \"fulfilled\" callback is not executed then check the \"rejected\" callback -> .then(onFulfilled[, onRejected])\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Andreas\n                \n                Nov 29, 2021 at 12:16\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Why do you await a Promise if you add it a .then()? Or rather, why dou you add a .then() to a Promise if you already await it? You are mixing two syntax styles\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jeremy Thille\n                \n                Nov 29, 2021 at 12:24\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @JeremyThille that would be ok to mix them as long as the .then returns a promise... which does not look to be the case\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mmonteirocl\n                \n                Nov 29, 2021 at 12:42\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @JeremyThille I have removed the await before ipfs.add(...) and the problem remains. I am pretty new to js.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Amber Johnson\n                \n                Nov 29, 2021 at 12:51\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Andreas I tried testing the rejected callback using the updated code, the log did not print in either case.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Amber Johnson\n                \n                Nov 29, 2021 at 12:52\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","97":"Add a comment\n                \u00c2\u00a0|","98":"Add a comment\n                \u00c2\u00a0|","99":"I don't know if that's possible using an npm library, if you want to do something like that try with remix, but why you don't wan to run an script to make a deploy?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Nov 29, 2021 at 14:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @jhonny I am making a software that deploys smart contract with push of a button. And that user will not be able to run a script. I will have to do that. for them programatically in the backend\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user17537220\n                \n                Nov 29, 2021 at 18:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Given your use case I think you can make a general use function that deploys the an smart contract, that receive the name of the contract and parameters to pass to the constructor and at the end return the address of the deployed contract, but I'm not sure of how to set the network this way\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Nov 29, 2021 at 20:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I am on the hunt for the same functionality! Curious it is not so simple.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0rsmets\n                \n                Jan 20, 2022 at 19:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","100":"Add a comment\n                \u00c2\u00a0|","101":"Add a comment\n                \u00c2\u00a0|","102":"2\n            \n        \n        \n            \n                \n                1) On which network are you deploying the contract? Remix VM emulator,  Ropsten, ... 2) Are you passing any value while executing the transfer() function? ... Just a note: send(1) sends 1 wei (the smallest unit of ETH), not 1 ETH.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 28, 2021 at 14:36\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I am using Ropsten testing network. And in the code, I use _recipient.send(1); and I expect 1 means 1 ether. Do I need to specify other unit parameter in this function?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 28, 2021 at 23:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","103":"Why are you over-abstracting so much? You've created a bunch of unnecessary functions. Just inline it. Look at the amount of code you've had to post just to showcase your problem...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dylan Kerler\n                \n                Nov 28, 2021 at 12:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I know, because like i said, I'm new to the <web3>\/crypto space and I'm not sure where this error is coming from. Also, I'm abstracting because I'm a frontend developer and I like to keep my logic away from my UI.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Herbie Vine\n                \n                Nov 28, 2021 at 12:58\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You should extract logic into hooks. Your abstraction makes it harder to reason about the code. It's uneccessary.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dylan Kerler\n                \n                Nov 28, 2021 at 12:59\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                oh yeah, i'm just messing around trying to get into this stuff.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Herbie Vine\n                \n                Nov 28, 2021 at 13:11\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","104":"can you share the address of your contract in ropsten?, maybe see the internal tx could help\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Nov 29, 2021 at 14:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","105":"Add a comment\n                \u00c2\u00a0|","106":"I am developing a dapp, in which I need to store a string of 140 chars in the <blockchain>.  Are you sure of this? Sounds like xyproblem xyproblem.info\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Nov 28, 2021 at 14:35\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","107":"Add a comment\n                \u00c2\u00a0|","108":"Add a comment\n                \u00c2\u00a0|","109":"Add a comment\n                \u00c2\u00a0|","110":"Add a comment\n                \u00c2\u00a0|","111":"Can you enclose the entire text of the contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Nov 26, 2021 at 17:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Updated with full contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0avcoates\n                \n                Nov 26, 2021 at 17:12\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","112":"Add a comment\n                \u00c2\u00a0|","113":"1\n            \n        \n        \n            \n                \n                Running a parachain is a bigger undertaking. In addition to building your dapp and attracting users, you also need to incentivise people to run your parachain nodes. Presumably, you'll want to interact with users from other chains so you'll need to make use of XCMP (Cross Chain Messaging Protocol).  Unless your DApp is exceptionally high volume, it will probably be easier and more cost effective to first create a dapp on an existing parachain. You can migrate it to your own chain later on, if necessary.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0forgetso\n                \n                Nov 30, 2021 at 20:22\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for the info! Quick question. Is there a standard way of allowing people to run a node for the parachain? Or do they just clone my github project and run the node on their PC?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0michaelassaf\n                \n                Jan 14, 2022 at 20:40\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                It would ideally just be a case of them copying your repo and running a docker file. Substrate comes with pre-made docker files that you can use as is or as a template.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0forgetso\n                \n                Jan 16, 2022 at 10:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","114":"Same issue here, I have my metadata URI and it's \"animation_url\" stored in ipfs, and pinned using pinata. The contract is deployed in Goerli Test Net. All the rest of the metadata shows correctly (name, image, attributes, etc) except for the animation_url. I haven't found any examples in testnets.opensea.io that could display the glb properly, they all have the same issue. Checked in the browser console and the request for the glb appears (blocked:scp) whereas in opensea.io they show correctly.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marcel\n                \n                Jan 5 at 20:47\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Marcel i couldn't find glb on opensea mainnet that are being previewed can you share some examples. On collection page they are visible but when i view asset page they don't render.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Jan 6 at 23:16\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It seems it depends on the day, sometimes they show and some others not: opensea.io\/assets\/ethereum\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marcel\n                \n                Jan 8 at 23:41\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","115":"Do you want to build a production network with some other participants and run some Dapp on it? The question is very broad, the network turns into a production network when any kind of real value is being put there.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MimoKrok\n                \n                Dec 2, 2021 at 22:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please edit the question to limit it to a specific problem with enough detail to identify an adequate answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Dec 3, 2021 at 20:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","116":"Add a comment\n                \u00c2\u00a0|","117":"Add a comment\n                \u00c2\u00a0|","118":"Add a comment\n                \u00c2\u00a0|","119":"Add a comment\n                \u00c2\u00a0|","120":"Add a comment\n                \u00c2\u00a0|","121":"Add a comment\n                \u00c2\u00a0|","122":"Add a comment\n                \u00c2\u00a0|","123":"Add a comment\n                \u00c2\u00a0|","124":"Add a comment\n                \u00c2\u00a0|","125":"Add a comment\n                \u00c2\u00a0|","126":"Add a comment\n                \u00c2\u00a0|","127":"Add a comment\n                \u00c2\u00a0|","128":"Add a comment\n                \u00c2\u00a0|","129":"Add a comment\n                \u00c2\u00a0|","130":"how you turn on authentication? how i can give it state - logged or not?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0romanown\n                \n                Aug 14, 2022 at 20:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","131":"Add a comment\n                \u00c2\u00a0|","132":">  I want to see the total time in msec for each step of the smart contract   Why? Your question does not make any sense. Transaction times vary greatly and they are not mostly dependent on your code or Remix IDE.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Nov 21, 2021 at 9:42\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes, I want to measure the efficiency of my code against another approach.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0SAPTARSI SAHA\n                \n                Nov 21, 2021 at 9:49\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                That is not how smart contracts work, so you are asking xyproblem.info question. Your question should contain 1) what are you doing 2) why 3) why do you think you need to have performance efficiency 4) what is a good measurement 5) how to perform it. I suggest you edit your question and add more context information.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Nov 21, 2021 at 9:54\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","133":"During formatting your code for easier readability, I found that the cause might be in the definition of Project. Can you share its definition as well? (I'm assuming it's either struct or contract).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 21, 2021 at 9:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                thank you for your reply, the error refers to the \"msg.sender\" in the projects new project line   'function startProject( string calldata title, string calldata description, uint durationInDays, uint amountToRaise ) external { uint raiseUntil = block.timestamp.add(durationInDays.mul(1 days)); Project newProject = new Project(msg.sender, title, description, raiseUntil, amountToRaise); projects.push(newProject); emit ProjectStarted(     address(newProject), msg.sender, title,  description, raiseUntil,             amountToRaise         );'\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0GGbro\n                \n                Nov 21, 2021 at 12:01\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                hey, i edited the post, thank you for your reply i realy appriciate it, i didnt manage to solve it yet. :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0GGbro\n                \n                Nov 21, 2021 at 12:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This is the reference of the Project. I'm looking for the definition - probably starts with struct Project { or contract Project {.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 21, 2021 at 12:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                medium.com\/openberry\/\u00e2\u0080\u00a6 this is the code, hope it helps :))\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0GGbro\n                \n                Nov 21, 2021 at 14:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","134":"How do you repeat the line 3700 times? Copy-pasted or in a for loop with the same values? Or different values each time? If different - which ones are different and which ones stay the same?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 20, 2021 at 22:38\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda I created a script to generate the 3700 lines to a txt file then copy pasted the contents of the file.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ReX357\n                \n                Nov 21, 2021 at 4:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Ok. And the values passed to the _mint() function, are always msg.sender, 0, 1, \"\"? Or did the script generate different values for each of the lines?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 21, 2021 at 7:04\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda script generated values for each line. Basically the second argument increments by 1 for each line.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ReX357\n                \n                Nov 22, 2021 at 0:11\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","135":"What goal are you trying to achieve? To set the user (calling the getValues()) as the spender?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 20, 2021 at 22:50\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Actually, I was trying to make a staking contract where people can come and deposit a token and withdraw them accordingly...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ARNAB RAY\n                \n                Nov 21, 2021 at 3:08\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","136":"Add a comment\n                \u00c2\u00a0|","137":"Hi, Stackoverflow works best when you try stuff, it doesn't work, you share the code, and then we comment on it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0WurmD\n                \n                Nov 26, 2021 at 9:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","138":"Is the selectedAccount the same with the address you used to send the call? The transfer method check if the msg.sender is the same with the from address or from list of approved for owner()\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0H\u00c3\u00b9ng Ph\u00e1\u00ba\u00a1m Vi\u00e1\u00bb\u0087t\n                \n                Feb 14, 2022 at 19:56\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","139":"Add a comment\n                \u00c2\u00a0|","140":"Add a comment\n                \u00c2\u00a0|","141":"Add a comment\n                \u00c2\u00a0|","142":"you could add some real addresses which we could use to test code and its modifications.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Nov 19, 2021 at 5:13\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Sure @furas, I'll edit. However, the \"address\" Vote11111...11 is an example shown in the docs.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mr. N\n                \n                Nov 19, 2021 at 12:48\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","143":"you could create the transaction server side and let the user sign and send it\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Nov 20, 2021 at 14:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","144":"Add a comment\n                \u00c2\u00a0|","145":"2\n            \n        \n        \n            \n                \n                How much data do you think is fair for the global financial system to use?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Nov 19, 2021 at 9:44\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","146":"1\n            \n        \n        \n            \n                \n                I think you should ask this on one of the substrate communities. You will get a quicker response from people who actually know what they are talking about.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Peter Hall\n                \n                Nov 18, 2021 at 13:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PeterHall I totally agree with you. It's already posted in Substrate's Element\/Matrix chat. The purpose of this write-up is just to have it as a consistent and complete write-up, as substrate doesn't have dedicated forums; at least AFAIK. Besides that they encourage using SO.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0The Quantum Physicist\n                \n                Nov 18, 2021 at 13:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                ok fair enough!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Peter Hall\n                \n                Nov 18, 2021 at 13:25\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Far from entering in details, I would like to point out that the pallets in charge of block production and finality are optional to use. That's one of the pros of substrate, it is open for customization and within that customization enters how production and finalization works for your case. So, the easy answer here would be yes why not as long as you want to implement it if its not yet done. And on the other side you will have to check the requirements for your case to see if moving away of the current implementation is something feasible, in case you want to.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alejandro Mart\u00c3\u00adnez\n                \n                Nov 18, 2021 at 17:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @AlejandroMart\u00c3\u00adnez It seems that there's huge confusion that people mix finalization and canonicalization. They're not the same, and my question basically says \"finalization can be removed from substrate, but canonicalization cannot be removed... which makes probabilistic finality impossible\".\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0The Quantum Physicist\n                \n                Nov 19, 2021 at 9:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 3 more comments","147":"Add a comment\n                \u00c2\u00a0|","148":"it is because it's marked internal. To go around it, create a public function in FirstContract that calls _id.increment() it will work because FirstContract is using Counter\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0egjlmn1\n                \n                Nov 18, 2021 at 13:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @egjlmn1 Thank you. I was able to solve it, but ran into another issue. I've updated the question.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kevvv\n                \n                Nov 18, 2021 at 15:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You can make an additional proxy method in FirstContract and call admin.transfer through it - as it is done for incrementToken\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Nov 18, 2021 at 15:28\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I suspect that it is because _admin is not public. besides that transfer is not recommended to send ether. try switching to call() look here solidity-by-example.org\/sending-ether\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0egjlmn1\n                \n                Nov 18, 2021 at 16:09\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","149":"Add a comment\n                \u00c2\u00a0|","150":"Add a comment\n                \u00c2\u00a0|","151":"Please edit your question and share the code that results in this error.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 18, 2021 at 9:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @James Roeiter - hey mate, if you found my solution useful, it would be awesome if you could upvote. Any further clarification you need, please let me know.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Issei\n                \n                Nov 19, 2021 at 15:41\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @Issei - I please made some clarifcations and added a code sample. Are you please familiar with how it may be solved ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0James Roeiter\n                \n                Nov 19, 2021 at 22:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","152":"Add a comment\n                \u00c2\u00a0|","153":"Add a comment\n                \u00c2\u00a0|","154":"ive wondered the same thing...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0serraosays\n                \n                Nov 17, 2021 at 20:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","155":"Please clarify your specific problem or provide additional details to highlight exactly what you need. As it's currently written, it's hard to tell exactly what you're asking.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Nov 23, 2021 at 14:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","156":"Add a comment\n                \u00c2\u00a0|","157":"ok expert in substrate development ... is there any limit on adding validators from one node??? I have got this info from substrate core developer named wei tang\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Nov 16, 2021 at 6:17\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm a newbie... I think your questions are not possible in production. why do you care?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Clark Lee\n                \n                Nov 17, 2021 at 2:49\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                We have created a <blockchain> with substrate and facing this issue in staging mode\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Nov 17, 2021 at 4:07\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","158":"2\n            \n        \n        \n            \n                \n                This means something wrong happened in your request. Could you please add what your request looks like?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Nov 16, 2021 at 15:44\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","159":"3\n            \n        \n        \n            \n                \n                This task doesn't really make sense. crypto-js does not appear to support asynchronous operation, so there's no point in using promises here. You might want to ask for clarification from your instructor.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bergi\n                \n                Nov 14, 2021 at 23:23\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                learn as you go by reading this from head to tail. Review the excellent code examples. Reference your code, there is no need to use a promise if you are going to use it directly as you have in your code. The idea is to return promise so it can be used by the caller.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Randy Casburn\n                \n                Nov 14, 2021 at 23:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                And what exactly is your question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jonas Wilms\n                \n                Nov 14, 2021 at 23:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Bergi - it appears the exercise is to create and return a Promise to demonstrate how it works (apparently using a library that is in no way asynchronous).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Randy Casburn\n                \n                Nov 14, 2021 at 23:27\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Step 1.     Implement generateHash method in the Block class Step 2\tUse Promises to generate the hash asynchronously Step 3\tRun the application node app.js\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saveer Jain\n                \n                Nov 14, 2021 at 23:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 7 more comments","160":"Here is an example: github.com\/Dawn-Protocol\/dawn-erc20-erc777\/blob\/master\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Nov 14, 2021 at 20:09\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Let me know if I understand. In a smartcontract to sell NFT, for example, I start a selling on a sellItem method, call token.send() and then I perform the NFT transfer inside tokensReceived method?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gi Ro\n                \n                Nov 14, 2021 at 20:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes - sounds about right.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Nov 15, 2021 at 9:56\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","161":"Add a comment\n                \u00c2\u00a0|","162":"Add a comment\n                \u00c2\u00a0|","163":"I don't understand why this question has been downvoted. Is it too easy question or something?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0chuck\n                \n                Dec 16, 2021 at 12:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","164":"I don't think this is possible.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paul Razvan Berg\n                \n                Nov 18, 2021 at 13:20\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Did you found out if is it possible and how? I'm running into the same situation\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0David Perez\n                \n                Mar 30, 2022 at 15:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm running into the same situation\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Amede Angel Aulerien\n                \n                Apr 15, 2022 at 9:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @AmedeAngelAulerien it is not possible in personal accounts maybe it is available in corporate accounts\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sepehr\n                \n                Apr 16, 2022 at 10:56\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                it is not possible in personal accounts maybe it is available in corporate accounts\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sepehr\n                \n                Apr 16, 2022 at 10:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","165":"Have you tried to use some of the tasks on the CLI for the ETH? github.com\/smartcontractkit\/chainlink\/wiki\/Command-Line-Options\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Harry Papacharissiou\n                \n                Nov 15, 2021 at 6:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please clarify your specific problem or provide additional details to highlight exactly what you need. As it's currently written, it's hard to tell exactly what you're asking.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Nov 17, 2021 at 16:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Have you seen this? ethereum.stackexchange.com\/questions\/92088\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Nov 20, 2021 at 17:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","166":"Add a comment\n                \u00c2\u00a0|","167":"Add a comment\n                \u00c2\u00a0|","168":"Add a comment\n                \u00c2\u00a0|","169":"Might you please edit your question so that it is self-contained and can be understood without reference to an external article?  As explained in Should posts be self-contained?, it's important for readers to be able to understand your question even if the linked content is deleted.  And after scanning that article, it's still not clear what your question is or how it might be answered.  What have you tried, and where are you stuck?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dbc\n                \n                Nov 15, 2021 at 1:08\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Take a look at How to Ask and codeblog.jonskeet.uk\/2010\/08\/29\/writing-the-perfect-question.  Might you please edit your question along the lines suggested?  This is a programming Q&A site so you're most likely to get help if you can show the code you have so far (a minimal reproducible example) and clearly state what you need to do nex.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dbc\n                \n                Nov 15, 2021 at 1:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","170":"Persist the last result somehow (pickle, file, xml, ...) load it on scripstart, compare it against your current vaule. Tons of questions about storing of information here - search <python> + pickle. To print or not to print, is no longer a question if you do this.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Artner\n                \n                Nov 12, 2021 at 12:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","171":"There are still errors even once inside the correct folder. (Error: Cannot find module '\/Users\/josh\/Desktop\/random\/hashlips_art_engine\/node_modules\/sha1' Require stack: - \/Users\/josh\/Desktop\/random\/hashlips_art_engine\/src\/main.js - \/Users\/josh\/Desktop\/random\/hashlips_art_engine\/index.js)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Josh Wenner\n                \n                Nov 12, 2021 at 10:50\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Did you run npm i after cloning?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0nopassport1\n                \n                Nov 12, 2021 at 11:01\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","172":"Add a comment\n                \u00c2\u00a0|","173":"invalid blocks will be rejected by validators\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sully\n                \n                Nov 11, 2021 at 5:34\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","174":"Hi @mkl, Can you please support our Substrate StackExchange proposal: area51.stackexchange.com\/proposals\/126136\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shawn Tabrizi\n                \n                Dec 16, 2021 at 13:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","175":"Add a comment\n                \u00c2\u00a0|","176":"Add a comment\n                \u00c2\u00a0|","177":"Add a comment\n                \u00c2\u00a0|","178":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Nov 15, 2021 at 13:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","179":"Add a comment\n                \u00c2\u00a0|","180":"Add a comment\n                \u00c2\u00a0|","181":"Add a comment\n                \u00c2\u00a0|","182":"I think it means events on other marketplaces.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0pguardiario\n                \n                Nov 10, 2021 at 1:35\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","183":"Add a comment\n                \u00c2\u00a0|","184":"1\n            \n        \n        \n            \n                \n                Error is telling u the truth, u are using ipfsClient as function where it is not defined as a function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0M.Mavini\n                \n                Nov 10, 2021 at 7:21\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @M.Mavini So what should i do, in documentation and tutorials everybody is using the same way.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aryan\n                \n                Nov 10, 2021 at 13:04\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Don't know it must be a funny mistake somewhere, can't help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0M.Mavini\n                \n                Nov 10, 2021 at 15:31\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @M.Mavini i use \"npm install ipfs-http-client\" to install ipfs package, is that right?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aryan\n                \n                Nov 10, 2021 at 19:04\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I also clone a github project which is running in his computer, but showing same error in mine\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aryan\n                \n                Nov 10, 2021 at 19:05\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","185":"Add a comment\n                \u00c2\u00a0|","186":"1\n            \n        \n        \n            \n                \n                I would say that's a pretty good understanding.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0selbie\n                \n                Nov 9, 2021 at 0:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","187":"Add a comment\n                \u00c2\u00a0|","188":"You are trying to connect to localhost but your chain id points to DEVNET? Also check if you can actually start a local test validator normally.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Pisomanik\n                \n                Nov 9, 2021 at 17:39\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I've checked the connection object via a debugger and the RPC endpoint is the localhost with correct port.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Konstantin Korchuk\n                \n                Nov 11, 2021 at 10:44\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","189":"Add a comment\n                \u00c2\u00a0|","190":"Add a comment\n                \u00c2\u00a0|","191":"Add a comment\n                \u00c2\u00a0|","192":"Add a comment\n                \u00c2\u00a0|","193":"when trying to use this I get the error: Unhandled Runtime Error TypeError: (intermediate value).toBuffer is not a function\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Julia\n                \n                Mar 10, 2022 at 16:46\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                referring to this line in the code: instructions.push( > 511 |       Token.createTransferInstruction(       |      ^   512 |         TOKEN_PROGRAM_ID,   513 |         mynftaccount,   514 |         associatedDestinationTokenAddr,\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Julia\n                \n                Mar 10, 2022 at 16:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","194":"Add a comment\n                \u00c2\u00a0|","195":"Add a comment\n                \u00c2\u00a0|","196":"At first sight, it's a connection issue (timed out).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jos\u00c3\u00a9 Carlos PHP\n                \n                Nov 3, 2021 at 9:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I think the same @Jos\u00c3\u00a9CarlosPHP, I give 30 second sleep, still got that warning.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alvin Christianto\n                \n                Nov 4, 2021 at 1:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","197":"Add a comment\n                \u00c2\u00a0|","198":"Remember to accept the working answer below\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Baboo\n                \n                Jun 18, 2022 at 17:01\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","199":"Add a comment\n                \u00c2\u00a0|","200":"1\n            \n        \n        \n            \n                \n                Use Rinkeby testnet and Uniswap. Uniswap and Pancakeswap have the same codes so if it works with Uniswap, it should work with Pancakeswap\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Nov 2, 2021 at 8:22\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                What for like margin trading?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0JustKevin\n                \n                Nov 3, 2021 at 2:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","201":"Add a comment\n                \u00c2\u00a0|","202":"You want user to stake some amount of X token and gets permission to mint Y NFT and then user's some amount of X token be reduced from staking?!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Nov 2, 2021 at 15:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                no, just locked in the pool for X period, but able to mint a NFT\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0LuxuryWaffles\n                \n                Nov 3, 2021 at 1:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","203":"Did you check github.com\/ethers-io\/ethers.js\/issues\/49? There is a workaround bit it ain't pretty.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0codeorelse\n                \n                Nov 22, 2021 at 14:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","204":"Add a comment\n                \u00c2\u00a0|","205":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Nov 1, 2021 at 13:25\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                You want an off-chain swap which runs in your backend server?!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Nov 2, 2021 at 15:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yes, that is it... I realise that I can do it using solidity events, but I am not sure.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Junior\n                \n                Nov 3, 2021 at 16:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","206":"Add a comment\n                \u00c2\u00a0|","207":"1\n            \n        \n        \n            \n                \n                You are correct. The article is a little sloppy in that spot. The mathematics is tad bit more complicated, and in truth there is no guarantee that you can ever recover the actual input A from H(A) because there may be two (or more!) values A1 and A2 such that H(A1) = H(A2). However, for most applications of hash functions, any input that hashes to the same value is good enough to break the system. And for <blockchain> applications, the input may very well be 128 bits (or 256 bits for SHA256).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0President James K. Polk\n                \n                Oct 31, 2021 at 2:34\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","208":"Add a comment\n                \u00c2\u00a0|","209":"Add a comment\n                \u00c2\u00a0|","210":"Have you seen this? docs.chain.link\/docs\/architecture-overview\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Nov 1, 2021 at 16:19\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PatrickCollins Yeah, I have, but in the whitepaper it talks about reputation contract, order matching contract and aggregation contract which isn't referenced on the Chainlink Architecture Overview.  I mean, the whitepaper talks about an order-matching smart contract taking bids from oracle providers and there isn't any info about this on the Chainlink docs. Is it that the real architecture is totally different from the one on the whitepaper?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Guillermo B\n                \n                Nov 7, 2021 at 21:05\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","211":"2\n            \n        \n        \n            \n                \n                After contacting the Solana <blockchain> developer it came to my attention this is not possible for minting. Mint fee goes entirely to the treasury wallet.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Abdulmoiz Ahmer\n                \n                Oct 29, 2021 at 23:09\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I have been researching this same question. Can you elaborate a bit on what you learned? Who was the source of this information? Do you know if this a limitation of Candy Machine or Solana (or perhaps something else)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0emersonthis\n                \n                Nov 25, 2021 at 0:59\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I have learned that a candy machine allows only one wallet for minting but secondary sales can be divided into multiple wallets using a metadata array of creators. The Source of information was metaplex devs. I think this is a candy machine limitation but I am not sure on this one.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Abdulmoiz Ahmer\n                \n                Nov 26, 2021 at 1:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I think you're right. I posted an answer with a quote form the metaplex docs about the metadata spec that suggest what you want to do should be possible, in theory.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0emersonthis\n                \n                Nov 26, 2021 at 23:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","212":"Add a comment\n                \u00c2\u00a0|","213":"Add a comment\n                \u00c2\u00a0|","214":"Add a comment\n                \u00c2\u00a0|","215":"Add a comment\n                \u00c2\u00a0|","216":"Did you set the constructor arguments correctly for the Kovan network? I tested your contract as you posted it in this post on Kovan and called the function properly (meaning the Solidity code is fine). However, when I interact with your deployed code on Etherscan it doesn't work (this also rules out it being a hardhat issue).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zak Ayesh\n                \n                Oct 28, 2021 at 3:22\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Did you fund your contract with LINK? I don't see you running the fund-link function?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Oct 28, 2021 at 3:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","217":"Add a comment\n                \u00c2\u00a0|","218":"Add a comment\n                \u00c2\u00a0|","219":"As the tag says general Bitcoin questions belong on bitcoin.stackexchange.com but briefly: since about 2010 most bitcoin <transactions> use an address which is a hash of the publickey, called P2PKH (Pay to Public Key Hash) or since 2017 often P2WPKH (Pay to Witness Public Key Hash, part of a scheme called 'segwit' to make bitcoin block processing more efficient). People\/systems can provide or distribute their addresses in lots of ways, often as encoded strings that look like 1asdfasdfasdfasdf or bc1asdfasdfasdfasdfasdf.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dave_thompson_085\n                \n                Oct 26, 2021 at 8:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","220":"Does this help? stackoverflow.com\/a\/69671888\/11969592\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Oct 26, 2021 at 18:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It totally worked!! I'll mark this question as duplicate. And try to search harder before posting a question. The Hackathon is so cool. Patrick Collins fielding questions. You are the best. Very approachable!!!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Clint Oka\n                \n                Oct 27, 2021 at 0:44\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Awesome :) Great work! If you could upvote that question too so others can be routed there, that would be great.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Oct 27, 2021 at 2:59\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It's not working anymore. I don't know why. I was pasting that command right in the terminal. Am I supposed to insert that code into some config file?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Clint Oka\n                \n                Oct 27, 2021 at 5:07\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                it works. sorry that was a different error preventing me from moving forward. Both fixed Yaaay! but something is up with my Tasks logic lol. I'm going to do the workshop over. This is my third time... excited tho and I will keep trying.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Clint Oka\n                \n                Oct 28, 2021 at 1:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 4 more comments","221":"Add a comment\n                \u00c2\u00a0|","222":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Oct 25, 2021 at 14:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                what configuration you are passing on and what output you are expecting?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aditya Joshi\n                \n                Oct 28, 2021 at 7:26\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","223":"Add a comment\n                \u00c2\u00a0|","224":"What is <transactions>?!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Oct 25, 2021 at 16:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Does this answer your question? Struct containing a (nested) mapping cannot be constructed. in solidity\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cameel\n                \n                Dec 17, 2021 at 7:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","225":"Add a comment\n                \u00c2\u00a0|","226":"Add a comment\n                \u00c2\u00a0|","227":"Add a comment\n                \u00c2\u00a0|","228":"Looks like the code needs support for async iterators, node 8 doesn't have that capability. Node 10 introduced that support. It might fix this problem and break elsewhere of course.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0david_k\n                \n                Oct 24, 2021 at 7:18\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Thank you @NikKlassen for your response. i changed node version to 10,12 and get same error but  i solved this error using next commands:\/  $ npm i -g composer-rest-server ... after that run  $ cd \/home\/ubuntu\/.nvm\/versions\/node\/v8.17.0\/lib\/node_modules\/composer-rest-server.... then  $ npm install swagger-client@3.9.0 ....Finally run  $ rm -rf node_modules\/g11n-pipeline\/node_modules\/swagger-client.... After that its worked correctly\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mohammed alzuharey\n                \n                Apr 18, 2022 at 15:04\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you @mohammedalzuharey for the solution. It worked.  Can you please point out the direction where you looked in for solving this issue i.e how did you know it was an issue related to swagger-client?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0heethjain21\n                \n                May 3, 2022 at 8:46\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","229":"Can you show us the error you are getting when you call the build static method? Or update you answer with any attempts you have tried?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0about14sheep\n                \n                Oct 23, 2021 at 20:43\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","230":"Please edit the question to limit it to a specific problem with enough detail to identify an adequate answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Oct 23, 2021 at 13:25\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","231":"1\n            \n        \n        \n            \n                \n                what node version are you using on your machine? default node version in codesandbox is 10.20.1\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0diedu\n                \n                Oct 26, 2021 at 3:21\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm using v16.9.1\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Swaroop Maddu\n                \n                Oct 26, 2021 at 3:25\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                How many lines does this error have?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ali Yaghoubi\n                \n                Oct 26, 2021 at 3:31\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                please try downgrading your local node version\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0diedu\n                \n                Oct 26, 2021 at 3:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Ok I'll try that\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Swaroop Maddu\n                \n                Oct 26, 2021 at 3:33\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","232":"Can you please share your ganache config file\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Madhavan Malolan\n                \n                Oct 23, 2021 at 11:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Why are you trying to connect to chain id 5777? Use 1337 as the chain id by default. I don't see where you've set the chain id to be 5777\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Madhavan Malolan\n                \n                Oct 23, 2021 at 13:48\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I tried it on metamask not in my code!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Uttam\n                \n                Oct 23, 2021 at 14:01\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","233":"Add a comment\n                \u00c2\u00a0|","234":"Add a comment\n                \u00c2\u00a0|","235":"Add a comment\n                \u00c2\u00a0|","236":"Did you query the chain state after calling an erroneous contract method? I had a similar \"issue\" a few days back, where I called a failing method but got a report (in Canvas UI) that the method succeeded. When queried via polkadot.js apps, he chain state did not change though!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0tifrel\n                \n                Oct 22, 2021 at 20:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @tifrel Yes, it did not change. However, it would've been so much better if it reverted with the \"Error\" specified in the code. Easier to test. Seems like they are working on it. You can check issues on the main repo.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Timur Guvenkaya\n                \n                Oct 24, 2021 at 12:31\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I totally agree with you. IIRC the contracts return something. If you parse it, you may just see an Err(Error::YaddaYadda), or something like {error: 4}, where 4 is the position of the variant of you Error enum in rust\/ink. Should you need proper error-handling before it's implemented by Parity, that might do the job for you :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0tifrel\n                \n                Oct 25, 2021 at 13:30\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","237":"Add a comment\n                \u00c2\u00a0|","238":"Add a comment\n                \u00c2\u00a0|","239":"Add a comment\n                \u00c2\u00a0|","240":"Add a comment\n                \u00c2\u00a0|","241":"Add a comment\n                \u00c2\u00a0|","242":"2\n            \n        \n        \n            \n                \n                First of all you are showing your infura api which can be used by others! Set it to MY_INFURA_API\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Oct 20, 2021 at 21:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Second of all, isn't 0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11 version 2 of ETH\/DAI pair?! And 0x60594a405d53811d3BC4766596EFD80fd545A270 version 3?!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Oct 20, 2021 at 22:06\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Were you able to solve this issue?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Byusa\n                \n                Apr 15, 2022 at 17:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","243":"Add a comment\n                \u00c2\u00a0|","244":"First suspicion has to be that two (identical)  event handlers have been attached. Maybe the function that contains the line contract.events.EventName().on('data', ...) gets executed twice.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Roamer-1888\n                \n                Oct 20, 2021 at 14:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Nope, only one. If I comment it out nothing fires. If I uncomment it fires twice.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0greentriangles1\n                \n                Oct 20, 2021 at 15:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Is there a .off() method (as in jQuery)? If so then try contract.events.EventName().off('data').on('data', async event => {console.log(event)}) (or similar).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Roamer-1888\n                \n                Oct 20, 2021 at 15:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                BTW, commenting\/uncommenting demonstrates only that another handler isn't attached by some other line of code. It doesn't prove that this line isn't executed twice.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Roamer-1888\n                \n                Oct 20, 2021 at 15:39\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                There is a .off() method but nothing changed\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0greentriangles1\n                \n                Oct 20, 2021 at 16:02\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 7 more comments","245":"Add a comment\n                \u00c2\u00a0|","246":"Add a comment\n                \u00c2\u00a0|","247":"I\u00e2\u0080\u0099m voting to close this question because it is not a programming question\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DavidW\n                \n                Apr 9, 2022 at 9:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","248":"Add a comment\n                \u00c2\u00a0|","249":"Add a comment\n                \u00c2\u00a0|","250":"Add a comment\n                \u00c2\u00a0|","251":"Why do you have to use composer playground ? <hyperledger> composer is more than deprecated, it's been end of life for quite a while and the community as well as the people who developed it have moved on\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0david_k\n                \n                Oct 18, 2021 at 6:42\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for reply,I am working on a project. I needed a decentralized Block chain system. So can I use Fabric  for it\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0M. Khan\n                \n                Oct 18, 2021 at 12:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                In that case I would suggest you use the latest version of <hyperledger> fabric. If you want a good starting development environment you can use the IBM <blockchain> Platform VS Code extension as this will provide a nice dev environment for <hyperledger> fabric\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0david_k\n                \n                Oct 18, 2021 at 14:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks a lot I will try that..\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0M. Khan\n                \n                Oct 18, 2021 at 14:50\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @david_k , IBM <blockchain> Platform is by 2022  withdrawn and replaced with <hyperledger> Fabric ,\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mohammad Kanan\n                \n                Aug 25, 2022 at 23:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","252":"I am no C# expert, but what is that **  in (10 ** 18)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Pred\n                \n                Oct 17, 2021 at 6:09\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Pred The two asterisks mean \"to the power of\" in Solidity language. So 10 ** 18 is 1000000000000000000. Solidity doesn't use floating point numbers (only integers), and 18 is a common number of decimals of a token. So the 1000 *\u00c2\u00a0(10 ** 18) is a way to express \"1000 tokens with 18 decimals\".\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 17, 2021 at 8:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","253":"Add a comment\n                \u00c2\u00a0|","254":"Add a comment\n                \u00c2\u00a0|","255":"Add a comment\n                \u00c2\u00a0|","256":"Yes, you can have all sorts of arrangements with web sockets, they're just TCP connections to sum. You could have UserA on Server1 and UserB on Server2 and with additional signalling have Server1 tell Server2 messages and vice-versa. Bi-directional communication.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0BGPHiJACK\n                \n                Oct 15, 2021 at 10:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Something to consider is the state of your app. Something as simple like a users list could fall out of sync on one server versus the other if expectation was to have multiple servers gang up and host many users. With these scenarios we run brokers\/message queues\/pubsubs but overall these are costly and don't make your app stateless at all making each server reliant on another server. In other words your app slows right down with the added traffic of combined servers.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0BGPHiJACK\n                \n                Oct 15, 2021 at 10:22\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","257":"Add a comment\n                \u00c2\u00a0|","258":"Add a comment\n                \u00c2\u00a0|","259":"2\n            \n        \n        \n            \n                \n                Hi, StackOverflow is best for specific technical questions\/problems. These general design questions\/discussions would be a better fit for the Chainlink discord: discord.com\/invite\/aSK4zew  You can also check out the Chainlink docs for various best practices: docs.chain.link\/docs\/chainlink-vrf-best-practices\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zak Ayesh\n                \n                Oct 14, 2021 at 20:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you Zak, will bring this discussion to Discord\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Turupawn\n                \n                Oct 15, 2021 at 14:29\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","260":"Add a comment\n                \u00c2\u00a0|","261":"Add a comment\n                \u00c2\u00a0|","262":"Add a comment\n                \u00c2\u00a0|","263":"1\n            \n        \n        \n            \n                \n                Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Oct 15, 2021 at 19:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","264":"Add a comment\n                \u00c2\u00a0|","265":"JQuery can do two things really: 1. Affect the DOM (the current web page) 2. Call a web service. If whatever on earth it is that you're trying to do can be acheived by calling a web service, then yes. But I wouldn't bother with JQuery, use the newer native javascript fetch\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nick.McDermaid\n                \n                Oct 12, 2021 at 11:29\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","266":"Welcome to SO. Please share some code.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mortz\n                \n                Oct 12, 2021 at 8:44\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This is the Brownie-config.yaml codes:  dependencies:   # - <organization\/repo>@<version>   - smartcontractkit\/chainlink-brownie-contracts@1.1.1 compiler:   solc:     remappings:       - '@chainlink=smartcontractkit\/chainlink-brownie-contracts@1.1.1'   And this is the line with the problem: mport \"@chainlink\/contracts\/src\/v0.6\/interfaces\/AggregatorV3Interface.sol\"; import \"@chainlink\/contracts\/src\/v0.6\/vendor\/SafeMathChainlink.sol\";\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Morris Beck\n                \n                Oct 12, 2021 at 8:55\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Is the title of your file brownie-config.yaml or Brownie-config.yaml. Also it looks like you had some spacing issues. And what is the error you're getting?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Oct 12, 2021 at 21:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I named it with a cap B, the error I'm getting is that on the import code lines, it says this Source \"@chainlink\/contracts\/src\/v0.6\/interfaces\/AggregatorV3Interface.sol\" not found: File import callback not supported\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Morris Beck\n                \n                Oct 13, 2021 at 9:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","267":"Add a comment\n                \u00c2\u00a0|","268":"Add a comment\n                \u00c2\u00a0|","269":"all tokens which ones? all the existing ones?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jacopo Mosconi\n                \n                Oct 11, 2021 at 13:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes active tokens\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Haidarali Masu\n                \n                Oct 11, 2021 at 13:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","270":"Django runs on your server, JavaScript runs on the client. It is impossible for Django\/<python> to create directories on the remote machine (unless you're doing some kind of hacking or using system tools and have access, I guess). The modules you mentioned in the other comment create stuff on the server, not the client.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kostas Mouratidis\n                \n                Oct 14, 2021 at 6:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @KostasMouratidis Ten months later I can assure you I was dumb and a good one at that.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kim Jisena\n                \n                Jul 29, 2022 at 21:26\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","271":"Add a comment\n                \u00c2\u00a0|","272":"1\n            \n        \n        \n            \n                \n                solana-labs.github.io\/solana-<web3>.js\/classes\/\u00e2\u0080\u00a6 this should help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Pisomanik\n                \n                Oct 11, 2021 at 10:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","273":"Add a comment\n                \u00c2\u00a0|","274":"Add a comment\n                \u00c2\u00a0|","275":"Add a comment\n                \u00c2\u00a0|","276":"Add a comment\n                \u00c2\u00a0|","277":"Add a comment\n                \u00c2\u00a0|","278":"Add a comment\n                \u00c2\u00a0|","279":"Add a comment\n                \u00c2\u00a0|","280":"Add a comment\n                \u00c2\u00a0|","281":"have you tried to see the transaction on some explorer like etherscan?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jacopo Mosconi\n                \n                Oct 10, 2021 at 17:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you @JacopoMosconi. I have figured out a way to deal with this. The problem was the data was being saved correctly but when fetching the records solidity was assigning msg.sender to the creator of the contract not the one who sent the transaction. So, in order to deal with this I am sending the user address from frontend in the call function and receiving the address as a parameter in the respective functions. So instead of using the msg.sender I am using the address that I am receiving from frontend.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Usama\n                \n                Oct 12, 2021 at 4:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","282":"Add a comment\n                \u00c2\u00a0|","283":"1\n            \n        \n        \n            \n                \n                HDFS already calculates availability.... 1 - (Space used\/Total space ) %\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OneCricketeer\n                \n                Oct 6, 2021 at 19:35\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Can we use the same equation to calculate the availability of ipfs?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Asrul Paelori Ahmad\n                \n                Oct 8, 2021 at 2:36\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Never used it, but 1-usage\/capacity is a global formula for calculating storage availability\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OneCricketeer\n                \n                Oct 8, 2021 at 13:13\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","284":"Add a comment\n                \u00c2\u00a0|","285":"Add a comment\n                \u00c2\u00a0|","286":"Add a comment\n                \u00c2\u00a0|","287":"Your uint256 internal randomResult; is internal, can you make it public? Also, your letsGo doesn't do anything...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Oct 6, 2021 at 2:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I can make it public, my question was, is it possible to find the random number in <blockchain> ? My let's go is just to launch the process in one time.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0UnPapeur\n                \n                Oct 6, 2021 at 6:22\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The chainlink VRF is a 2 transaction process. The first transaction to request the random number, and the second to have the random number returned. You can't get the random number in 1 go.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Oct 7, 2021 at 12:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Is the number 123456?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Oct 7, 2021 at 16:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                No, randomResult is like 515118454651515164848941000151515118454651515164848941000151\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0UnPapeur\n                \n                Oct 8, 2021 at 7:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","288":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Oct 12, 2021 at 13:20\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                have same problem did you solve it?  need this solution for BNB token\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vivek Malik\n                \n                Jan 28, 2022 at 17:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","289":"Add a comment\n                \u00c2\u00a0|","290":"did you figure this out?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0howMuchCheeseIsTooMuchCheese\n                \n                Apr 13, 2022 at 14:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","291":"Add a comment\n                \u00c2\u00a0|","292":"Add a comment\n                \u00c2\u00a0|","293":"dd() is a function that exist in the Laravel framework. It's basically the same as: var_dump($someVariable); die;. If you're not using Laravel or have a custom function called dd(), don't use it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0M. Eriksson\n                \n                Oct 3, 2021 at 22:01\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you for your explanation, I've just changed that to var_dump however I'm getting NULL. Please check my code\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0thebest man\n                \n                Oct 3, 2021 at 22:08\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                We can't possibly know how that API should be used. We didn't develop it. If it's some application you installed, then refer to it's manual. If it's still unclear, you should contact the developers. Check if they have some support or forum. Also, the answer you got this from was over three years old. Are you sure it's the same version or that works the same way as it did then?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0M. Eriksson\n                \n                Oct 3, 2021 at 22:11\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","294":"There is probably still a handle to the deleted Settings folder open. It is then hidden but the name still exists and the new settings folder cannot be renamed to the same name. Try restarting your computer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0CherryDT\n                \n                Oct 3, 2021 at 21:14\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Maybe run the task as administrator, this is a windows OS-level thing\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0pguardiario\n                \n                Oct 7, 2021 at 8:09\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","295":"Add a comment\n                \u00c2\u00a0|","296":"Add a comment\n                \u00c2\u00a0|","297":"Did you get the solution? I have the same purpose\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Neo.Mxn0\n                \n                Dec 10, 2021 at 18:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","298":"Add a comment\n                \u00c2\u00a0|","299":"Add a comment\n                \u00c2\u00a0|","300":"Add a comment\n                \u00c2\u00a0|","301":"if you are sure even the last line of \"transfer\" gets executed, that means you have an error with your configurations.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Oct 23, 2021 at 0:55\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","302":"You need to configure vscode solidity to be able to find your chainlink contract. You can point it at your node_modules (if you install chainlink via npm) or try the freshly added support for remappings to make it use packages installed by Brownie.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cameel\n                \n                Oct 3, 2021 at 2:14\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for the help\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cromewar\n                \n                Nov 9, 2021 at 14:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","303":"Can you add the volume-signer1 PVC file ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lucas\n                \n                Oct 1, 2021 at 14:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Added the PVC as requested\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lautaro Baltar\n                \n                Oct 1, 2021 at 14:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Since you have a test env, try changing the pvc accessMode to ReadWriteMany, the storage class needs to support rwx\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lucas\n                \n                Oct 3, 2021 at 13:07\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","304":"1\n            \n        \n        \n            \n                \n                since when does file_get_contents(): string|false return an array? And json_decode($value); returns an object, again not an array - Set flag json_decode(...,true) for associative array.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0berend\n                \n                Oct 1, 2021 at 12:13\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                In your second try you probably need json_decode($value, true) to access values (associative) array style like you're doing.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0nitrin0\n                \n                Oct 1, 2021 at 12:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","305":"Add a comment\n                \u00c2\u00a0|","306":"have you enabled Polygon API and use the correct API key from Infura? Do you have successful transaction with the API Key?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0h.mavrodiev\n                \n                Oct 25, 2021 at 9:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","307":"Add a comment\n                \u00c2\u00a0|","308":"Thank you for your answer - provide SPL token id as program id. I searched a while to find this\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ADoorMarkedPirate\n                \n                Oct 14, 2021 at 17:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please, convert main info in your question into an answer. Thanks!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sasha Omelchenko\n                \n                Dec 9, 2021 at 8:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","309":"Please edit the question to limit it to a specific problem with enough detail to identify an adequate answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Oct 7, 2021 at 18:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","310":"Add a comment\n                \u00c2\u00a0|","311":"Add a comment\n                \u00c2\u00a0|","312":"Add a comment\n                \u00c2\u00a0|","313":"1\n            \n        \n        \n            \n                \n                Main property of hash functions is that you cannot go back to the original input knowing the output. If you know that two identical hashes where generated you cannot say if the input was the same or it is an hash collision (en.wikipedia.org\/wiki\/Hash_collision)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0rascio\n                \n                Sep 27, 2021 at 21:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                So in that We can get to know on each other on which data we are performing hashing, right? No. Wrong.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0President James K. Polk\n                \n                Sep 28, 2021 at 2:20\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","314":"2\n            \n        \n        \n            \n                \n                It increases the maximum storage to 3 bytes.  But the minimum is only 1 byte, and the average over values that are actually used in practice is hopefully less than 2.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nate Eldredge\n                \n                Nov 13, 2021 at 6:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","315":"Add a comment\n                \u00c2\u00a0|","316":"Add a comment\n                \u00c2\u00a0|","317":"Add a comment\n                \u00c2\u00a0|","318":"Add a comment\n                \u00c2\u00a0|","319":"Add a comment\n                \u00c2\u00a0|","320":"Add a comment\n                \u00c2\u00a0|","321":"Add a comment\n                \u00c2\u00a0|","322":"Add a comment\n                \u00c2\u00a0|","323":"hi do you solve the problem ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user9467051\n                \n                Jun 8, 2022 at 9:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","324":"Add a comment\n                \u00c2\u00a0|","325":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Oct 3, 2021 at 8:39\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","326":"Add a comment\n                \u00c2\u00a0|","327":"Add a comment\n                \u00c2\u00a0|","328":"Add a comment\n                \u00c2\u00a0|","329":"Add a comment\n                \u00c2\u00a0|","330":"Add a comment\n                \u00c2\u00a0|","331":"Did you figure out why this was happening?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jithin Ks\n                \n                Oct 31, 2022 at 9:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","332":"What do you mean by choose a winner?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Diego Marin Santos\n                \n                Oct 18, 2021 at 19:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The winner is a validator who validates a block.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dmvict\n                \n                Oct 20, 2021 at 4:05\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","333":"Add a comment\n                \u00c2\u00a0|","334":"Add a comment\n                \u00c2\u00a0|","335":"Add a comment\n                \u00c2\u00a0|","336":"Add a comment\n                \u00c2\u00a0|","337":"Add a comment\n                \u00c2\u00a0|","338":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 30, 2021 at 2:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","339":"Also what's the main usage of \"UsingLiquityProtectionService\" ? Does anyone know where can i source some documentation about this?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saul Da Silva\n                \n                Sep 23, 2021 at 8:23\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","340":"Add a comment\n                \u00c2\u00a0|","341":"did you ever find out what was causing this issue?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0onzyone\n                \n                Apr 3, 2022 at 22:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","342":"Add a comment\n                \u00c2\u00a0|","343":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 30, 2021 at 22:56\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","344":"Your resolv.conf is not being parsed. This is located at \/etc\/resolv.conf. What do the contents look like? Someone had a similar issue on github.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0forgetso\n                \n                Sep 22, 2021 at 10:08\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Is it a system file or file in substrate....can I get full address of the file location....I have been stuck at this from 2 days\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Sep 22, 2021 at 10:53\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                On unix like systems it's located at \/etc\/resolv.conf\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0forgetso\n                \n                Sep 22, 2021 at 15:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                s i have deleted and re installed it....but same result\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Sep 23, 2021 at 4:27\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","345":"1\n            \n        \n        \n            \n                \n                This question is not about programming, so it is better suited for ethereum.stackexchange.com\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Sep 21, 2021 at 9:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","346":"Add a comment\n                \u00c2\u00a0|","347":"Please edit the question to limit it to a specific problem with enough detail to identify an adequate answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 25, 2021 at 19:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                hello have you found a solution? looking for answers to same question\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ose Daniel Okojie\n                \n                Feb 13, 2022 at 9:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","348":"MY CODE : pragma solidity ^0.8.0;  import \"github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/\u00e2\u0080\u00a6\";  contract VIRUSONE is ERC20 {     constructor(uint256 initialSupply) public ERC20 (\"VIRUSONE\", \"VONE\"){     _mint(msg.sender, initialSupply);     } }\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yuvraj Singh\n                \n                Sep 20, 2021 at 16:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","349":"Add a comment\n                \u00c2\u00a0|","350":"maybe you return getGenesisBlock for ever\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0josejuan\n                \n                Sep 20, 2021 at 9:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","351":"Please supply a snippet that demonstrates the problem. Without that we have to guess what you tried, and that trick never works. Please read \"How to Ask\" along with \"How do I format my posts...\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0the Tin Man\n                \n                Sep 28, 2021 at 20:41\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks to your question, opened up my eyes on how to properly store a publickey on a solana program.   For others, its helpful to read publickey documentation:  solana-labs.github.io\/solana-<web3>.js\/classes\/PublicKey.html and for rust specific docs: docs.rs\/solana-program\/1.4.17\/solana_program\/pubkey\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a00xgio\n                \n                Nov 28, 2022 at 22:34\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","352":"Add a comment\n                \u00c2\u00a0|","353":"1\n            \n        \n        \n            \n                \n                I tried with powershell the same code, and deploy nodes ran fine. It seems like #IntelliJ Editor issue.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sourabh\n                \n                Sep 20, 2021 at 5:04\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I got Intellij 2020.3.4 installed via Jetbrains ToolBox and the same code works fine there. It is definitely IntelliJ IDE problem. Corda does not work in 2021.x IntelliJ version\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sourabh\n                \n                Sep 20, 2021 at 11:58\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Thanks for the tip! Downgrading intellij also solved it for me.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rafael Bankosegger\n                \n                Feb 17, 2022 at 17:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","354":"Please edit your question and share the contract source code (incl. the constructor argument values if there are any) or verify it on the <blockchain> explorer. It's possible that the mintNFT() fails on the mainnet because of some dependency call (that might go through on the testnet but fails on the mainnet).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 22, 2021 at 14:48\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda ok added\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0maxall4\n                \n                Sep 22, 2021 at 15:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","355":"The issue was solved by not using yarn for installation but: $ npm install -g ganache-cli\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mosta\n                \n                Sep 25, 2021 at 12:03\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","356":"1\n            \n        \n        \n            \n                \n                Maybe minifab can get you started github.com\/<hyperledger>-labs\/minifabric\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0david_k\n                \n                Sep 17, 2021 at 11:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","357":"This is not really about <blockchain>\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Andreas\n                \n                Sep 16, 2021 at 16:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Why do you think crypto-js\/sha256 expects an undefined number of arguments?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Andreas\n                \n                Sep 16, 2021 at 16:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Are you sure it's identical? Also, try concatenating the values you pass to sha256\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0BankBuilder\n                \n                Sep 16, 2021 at 16:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please clarify your specific problem or provide additional details to highlight exactly what you need. As it's currently written, it's hard to tell exactly what you're asking.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 23, 2021 at 12:51\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","358":"Add a comment\n                \u00c2\u00a0|","359":"Does this answer your question? How to approach a GraphQL query that returns a boolean value?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Antoni\n                \n                Sep 16, 2021 at 7:37\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","360":"Add a comment\n                \u00c2\u00a0|","361":"1\n            \n        \n        \n            \n                \n                I\u00e2\u0080\u0099m voting to close this question because it isn't about programming. It may be on topic on the Bitcoin site, but make sure to read through their help center first.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0John Montgomery\n                \n                Sep 14, 2021 at 23:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","362":"Hey, did you find any solution on this?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nikos Iliakis\n                \n                May 16, 2022 at 12:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","363":"Add a comment\n                \u00c2\u00a0|","364":"Add a comment\n                \u00c2\u00a0|","365":"Add a comment\n                \u00c2\u00a0|","366":"As an update, I'm attempting a work around where I use a timeout to wait for the new data so that it can update state. It works - but this doesn't take into account the varying times it takes for a <blockchain> tx to be mined.   I'm not sure how to configure this to wait for the transaction to complete.   '\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bdellinger\n                \n                Sep 14, 2021 at 20:24\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Code:   async function handleAsync() {          setTimeout( async () => {                  let amountDeposited = await chadsVault.methods.amountDeposited(account).call()       setAmountDeposited(amountDeposited.toString());         }, 30000);   }\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bdellinger\n                \n                Sep 14, 2021 at 20:26\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","367":"1\n            \n        \n        \n            \n                \n                Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 19, 2021 at 23:05\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","368":"Did you figure this out?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0CathalMF\n                \n                Jul 18, 2022 at 11:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","369":"Add a comment\n                \u00c2\u00a0|","370":"Add a comment\n                \u00c2\u00a0|","371":"can anyone help with FABRIC_CFG_PATH?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Faria Kamal\n                \n                Sep 12, 2021 at 17:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 19, 2021 at 21:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","372":"1\n            \n        \n        \n            \n                \n                You can also save the transaction tx and read the receipt like const receipt = tx.wait()\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Julissa DC\n                \n                Sep 14, 2021 at 0:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Oh thanks. This is cool.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Pisomanik\n                \n                Sep 14, 2021 at 8:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @JulissaDC Is there a way to see a tx history\/details through hardhat console ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gneric\n                \n                Jan 7, 2022 at 18:48\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","373":"Add a comment\n                \u00c2\u00a0|","374":"Why is this voted down? It is a programming question. I already compiled Bitcoin Core from source and cannot continue programming unless I download the <blockchain>. Am I correct?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hahnemann\n                \n                Sep 11, 2021 at 12:49\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Read the documentation. Configuration file path.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Raymond Chen\n                \n                Sep 12, 2021 at 13:27\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Though that solution isn't a programming solution. The programming solution would be to modify the code.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Raymond Chen\n                \n                Sep 14, 2021 at 2:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","375":"1\n            \n        \n        \n            \n                \n                For the first error, you were using this.state.account, so the value converted to hooks should be [account, setAccount] = useState() and the variable account, maybe not account[0] like you are doing. The last error is because inputRef.value is null. IIRC, it is now called inputRef.current, you could log that out to confirm. Bear in mind that the ref is always null on first render.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0M3rr1\n                \n                Sep 10, 2021 at 23:48\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","376":"1\n            \n        \n        \n            \n                \n                That's not a smart contract error, that's a typescript error. Share your ts code.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jake\n                \n                Sep 10, 2021 at 19:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please share the deploy code to see how are you interacting with the contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Julissa DC\n                \n                Sep 11, 2021 at 22:25\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","377":"Add a comment\n                \u00c2\u00a0|","378":"Add a comment\n                \u00c2\u00a0|","379":"1\n            \n        \n        \n            \n                \n                You need to call the .approve and .transfer from a wallet with your erc20 token, something like erc20.connect(depositorSigner).transfer(...), but its not clear if you already minted some of the token to some accounts\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Julissa DC\n                \n                Sep 11, 2021 at 22:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","380":"You need to run your own JSON-RPC node locally: twitter.com\/moo9000\/status\/1370323189486784513\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Sep 10, 2021 at 7:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","381":"I think you're missing some of the code.  So the flow is like you pass in some integer along the transaction from the client. Then in the rust program you read this integer and call the corresponding instrcution.  May I suggest you to look into Anchor. This would make things a lot easier for writing solana programs.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Pisomanik\n                \n                Sep 12, 2021 at 10:41\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","382":"Why not use the keepers here instead? docs.chain.link\/docs\/chainlink-keepers\/introduction\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Sep 13, 2021 at 16:51\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Thanks @PatrickCollins for taking your time to look at this, truly just want to have idea on how the alarm clock works also keeper is not on the choice network(BSC) so that is one of the reason i decided to run a test with alarm clock.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Prosperity\n                \n                Sep 14, 2021 at 13:19\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Also when i used the alarm clock jobID i got an error \"Sleep Adapter is not implemented yet\", i wish i can get a way out with this. thanks for checking in.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Prosperity\n                \n                Sep 14, 2021 at 13:20\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You need an environment variable to run the sleep adapter: docs.chain.link\/docs\/core-adapters\/#sleep\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Sep 14, 2021 at 18:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","383":"Add a comment\n                \u00c2\u00a0|","384":"Here is an earlier Q&A ethereum.stackexchange.com\/questions\/12950\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 13, 2022 at 15:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","385":"Add a comment\n                \u00c2\u00a0|","386":"Could you give some details about what your functions are trying to do?! I can't figure it out!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Sep 8, 2021 at 13:37\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                They get and burn WTRX from WTRX contract, WTRX is a WETH version for TRX on tronchain.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mecanicul\n                \n                Sep 9, 2021 at 18:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","387":"Add a comment\n                \u00c2\u00a0|","388":"The 0xA0b8... address holds the contract on Ethereum mainnet. Does the error occur on the mainnet? Or are you trying to execute it on a different environment (e.g. Remix JS VM emulator, testnet, ...)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 8, 2021 at 4:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm trying to execute in on the Remix\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0taranchik\n                \n                Sep 8, 2021 at 5:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm looking for a solution where I can accept payments in the existing ERC20 tokens\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0taranchik\n                \n                Sep 8, 2021 at 5:09\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The address of 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 is a USDC coin based on ERC20 interface\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0taranchik\n                \n                Sep 8, 2021 at 5:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","389":"Add a comment\n                \u00c2\u00a0|","390":"Add a comment\n                \u00c2\u00a0|","391":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 8, 2021 at 9:19\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","392":"Although I love the idea of discussing crypto, I don't think stack overflow specifically is a forum for pros and cons this broadly targeted so much as tangible solutions to specific problems.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Atmas\n                \n                Sep 3, 2021 at 18:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Atmas theres plenty of threads here discussing similar subjects.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luiz Felipe Veiga\n                \n                Sep 3, 2021 at 18:43\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","393":"Add a comment\n                \u00c2\u00a0|","394":"Add a comment\n                \u00c2\u00a0|","395":"Add a comment\n                \u00c2\u00a0|","396":"Add a comment\n                \u00c2\u00a0|","397":"Add a comment\n                \u00c2\u00a0|","398":"Add a comment\n                \u00c2\u00a0|","399":"Add a comment\n                \u00c2\u00a0|","400":"Add a comment\n                \u00c2\u00a0|","401":"return instead of returns\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wang Liang\n                \n                Aug 31, 2021 at 19:23\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","402":"1\n            \n        \n        \n            \n                \n                Does anything have a current datetime in it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Neil\n                \n                Aug 31, 2021 at 17:22\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Neil Yes is it a problem? When I add there is current datetime, when I read from database there is data that I added before\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kamil\n                \n                Aug 31, 2021 at 17:32\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                If you are hashing data, and any part of that data changes, then the hash will be different.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Neil\n                \n                Aug 31, 2021 at 17:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                \"same data\" and \"includes current time\" can't really be true at the same time. Please review your question and edit accordingly. Based on the comment it sounds like question should be \"why hash of different values is different, how to ensure different data hashed to the same value\" instead of what it says now.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alexei Levenkov\n                \n                Aug 31, 2021 at 17:58\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                is JsonSerializer.SerializeToUtf8Bytes using a deterministic \/ same order for properties in all runs?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0nazgul\n                \n                Aug 31, 2021 at 18:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","403":"What exactly are you trying to do? It's not possible to upload two files to IPFS with the came CID (although IPNS might be what you're looking for here).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Smitop\n                \n                Aug 31, 2021 at 17:44\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","404":"Add a comment\n                \u00c2\u00a0|","405":"Add a comment\n                \u00c2\u00a0|","406":"Add a comment\n                \u00c2\u00a0|","407":"Where does the transactiongetter module come from? Is it open source code?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TC Arlen\n                \n                Sep 1, 2021 at 17:04\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                That is a program I made to get myself the unconfirmed <transactions> from <blockchain>.com\/btc\/unconfirmed-<transactions> as Im attempting to mine without joining a pool and using their resources \/ <transactions>\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Frantisek Mach\n                \n                Sep 3, 2021 at 7:08\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","408":"The industry is changing fast. They now have a CLI tool called Terrain as part of the getting started documentation. docs.terra.money\/docs\/develop\/dapp\/quick-start\/README.html\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0petegordon\n                \n                Mar 17, 2022 at 9:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","409":"Add a comment\n                \u00c2\u00a0|","410":"I personally use Remix as IDE but it does not throw error for this contract in compiler version 0.8.4 ! But I had such problem before and I just added pragma experimental ABIEncoderV2 next to pragma solidity ^0.8.0 and problem was solved, try it!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Aug 29, 2021 at 10:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","411":"did you solved your problem?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hekmat\n                \n                Feb 7, 2022 at 8:52\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","412":"Add a comment\n                \u00c2\u00a0|","413":"Add a comment\n                \u00c2\u00a0|","414":"Add a comment\n                \u00c2\u00a0|","415":"Add a comment\n                \u00c2\u00a0|","416":"Add a comment\n                \u00c2\u00a0|","417":"1\n            \n        \n        \n            \n                \n                Did you confirm the (deploying) transaction in your MetaMask? What gas price did you use? Can you link the pending transaction (e.g. Etherscan)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Aug 24, 2021 at 14:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It never prompted anything on metamask, immediately I clicked deploy it starts showing \"creation of  my_smart_contract pending\" in the console. I also used 3 gwei, I can't link it Etherscan\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Emeka\n                \n                Aug 24, 2021 at 14:25\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Ok. I was assuming you're using MetaMask because of the tag in the question. So what have you selected in the Evironment box in the \"Deploy & Run <transactions>\" tab? Is your intention to submit the transaction from MetaMask (even though it's not opening) or do you hold the private key to the deployer address elsewhere?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Aug 24, 2021 at 15:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes I am using metamask, I selected the injected <web3> environment, then connect my remix to metamask so that it will capture my address (account) in metamask before I clicked deploy in remix but it still shows creation pending without prompting anything in metamask\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Emeka\n                \n                Aug 24, 2021 at 16:06\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                So far everything seems fine according to your description. My guess is that your browser is blocking the pop-up window from MetaMask. Check your browser settings and try to temporarily allow all pop-ups. However issues like this are really hard to reproduce, so I don't have a better answer. Hope this helps at least.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Aug 24, 2021 at 17:36\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","418":"Add a comment\n                \u00c2\u00a0|","419":"Add a comment\n                \u00c2\u00a0|","420":"Add a comment\n                \u00c2\u00a0|","421":"Add a comment\n                \u00c2\u00a0|","422":"Add a comment\n                \u00c2\u00a0|","423":"Add a comment\n                \u00c2\u00a0|","424":"Add a comment\n                \u00c2\u00a0|","425":"Add a comment\n                \u00c2\u00a0|","426":"Add a comment\n                \u00c2\u00a0|","427":"Add a comment\n                \u00c2\u00a0|","428":"Add a comment\n                \u00c2\u00a0|","429":"what is your solution ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wang Liang\n                \n                Sep 6, 2021 at 7:09\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","430":"Today I got the same error while trying to deploy to devnet, turns out this is simply because the devnet is down. If you have been trying to deploy with no luck, you can check if the network is up and running: status.solana.com You can see for example that Solana's devnet is suffering from a major outage on the day of writing this answer, keep that possibility in mind even though it is a rarity.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hadi Saleh\n                \n                Apr 19, 2022 at 9:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","431":"You have a typo in truffle-config.js. Change post to port\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 19, 2021 at 14:30\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","432":"Add a comment\n                \u00c2\u00a0|","433":"Add a comment\n                \u00c2\u00a0|","434":"Add a comment\n                \u00c2\u00a0|","435":"In both examples you omit the parentheses on run_wallets in the first if-clause, meaning the function isn't called.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Steven Rumbalski\n                \n                Aug 19, 2021 at 9:28\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                In your second snippet your first if will remain true even after you remove three_before.Wben latest_blockequals starting_block all four if-statements will evaluate as true.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Steven Rumbalski\n                \n                Aug 19, 2021 at 9:34\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","436":"Add a comment\n                \u00c2\u00a0|","437":"share the code snippet.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bilal\n                \n                Aug 24, 2021 at 19:46\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I've linked the code I'm using\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ayudh\n                \n                Aug 25, 2021 at 1:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","438":"Check this out: ethereum.stackexchange.com\/questions\/3163\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 17, 2021 at 13:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","439":"Add a comment\n                \u00c2\u00a0|","440":"can you please explain why would you add a number to the current block in the first place? what is the benefit?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0woss\n                \n                Aug 15, 2021 at 9:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @woss Good to hear from you woss. I have answered by own question and posted the code below. The purpose for the implementation was create a function that would only execute if called when [current block number] was within a specific range. The range would be set by the user at an earlier time in the <blockchain>s history.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dancing_carrot\n                \n                Aug 15, 2021 at 10:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","441":"Add a comment\n                \u00c2\u00a0|","442":"Add a comment\n                \u00c2\u00a0|","443":"You can\u00e2\u0080\u0099t have a foreign key in a column without an index. Create indexes before! The error is self explanatory. Next time kindly don\u00e2\u0080\u0099t post errors on images, paste errors as text.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0emix\n                \n                Aug 13, 2021 at 5:34\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","444":"1\n            \n        \n        \n            \n                \n                You can try to perform the transaction on a public testnet and then use tenderly.io to pin down the source code line where it reverts\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Aug 13, 2021 at 11:09\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MikkoOhtamaa do you mean tenderly.co ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0johnny 5\n                \n                Aug 13, 2021 at 13:32\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes! Sorry for the mix up with the domain.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Aug 13, 2021 at 19:40\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","445":"Confirm the compiler is the proper version? What error are you getting?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0pgSystemTester\n                \n                Aug 13, 2021 at 2:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @pgSystemTester Compiler is set to 0.7.0 and I tried 0.7.2\/latest to be safe. No error code, just pending forever on BSC testnet (I included link to picture above. Don't have rights to share pictures yet)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TNJCoding\n                \n                Aug 13, 2021 at 3:17\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Okay, not sure. I displayed your image. That is strange.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0pgSystemTester\n                \n                Aug 13, 2021 at 3:48\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Can't tell if it's just me or if the BSC testnet is down. I greatly appreciate your help making this easier to see\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TNJCoding\n                \n                Aug 13, 2021 at 4:16\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","446":"Add a comment\n                \u00c2\u00a0|","447":"Add a comment\n                \u00c2\u00a0|","448":"Add a comment\n                \u00c2\u00a0|","449":"Add a comment\n                \u00c2\u00a0|","450":"you can not uninstall chaincode, you can upgrade the chaincode to higher version, so it will disable the use of previous chaincode.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0chitresh\n                \n                Aug 16, 2021 at 7:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                the upgrade is the instantiation, I am asking about uninstall completely that particular chaincode.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vijay\n                \n                Aug 16, 2021 at 16:37\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","451":"Add a comment\n                \u00c2\u00a0|","452":"Add a comment\n                \u00c2\u00a0|","453":"you could wrap your json code calls in a try except block. Catch the json parsing error and print\/log the data you were trying to parse so you can inspect it to see what was wrong. I would also suggest that you check that the request.get call was succuessful, maybe your getting a 5xx or a 4xx error\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Chris Doyle\n                \n                Aug 10, 2021 at 9:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for the suggestions.  I'll look into catching the the error and printing the log when it happens.  I'll have to figure out how to parse the json error lol.   what's weird is that I had the script running from a command prompt and another from my visual studio code, and only the command prompt failed at the time vs both.  Sometimes it's the other way around.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0B L\n                \n                Aug 10, 2021 at 11:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I suspect that on the case where it fails you will be getting some http error thats not a 2xx response so you end up not having data that is actual json so the parser fails\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Chris Doyle\n                \n                Aug 10, 2021 at 13:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi Chris.  That makes sense.  Part of the error above is \"JSONDecodeError(\"Expecting value\", s, err.value) from None\", which I guess it's erroring out when there is no value returned, but runs normally if something is returned.  I guess I may need to review the code to have an if\/else in case there is any items that return as nothing\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0B L\n                \n                Aug 10, 2021 at 13:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","454":"Have you tried assigning the result from the getAccounts() call to a variable and then calling app.vote, passing that variable to the from:  param? You can also check whether that variable has a value, before passing it to app.vote\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Milkncookiez\n                \n                Aug 10, 2021 at 8:13\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Milkncookiez yes I have tried. The variable has the value I intended.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Haris Nabeel\n                \n                Aug 10, 2021 at 8:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","455":"what is your <python> version?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wang Liang\n                \n                Aug 10, 2021 at 6:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for the response, it's 2.7.16\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alchemist AB\n                \n                Aug 11, 2021 at 7:04\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                what is your solution ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wang Liang\n                \n                Aug 13, 2021 at 7:09\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","456":"1\n            \n        \n        \n            \n                \n                does this answer your question here: ethereum.stackexchange.com\/questions\/28985\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 10, 2021 at 20:54\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I think so, thanks for that!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Phill Overton\n                \n                Aug 11, 2021 at 13:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","457":"what happens if you just run .\/target\/release\/node-template build-spec --chain staging ? (just checking it's not something silly like it is not permissioned to save the file to the current dir)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Squirrel\n                \n                Aug 9, 2021 at 16:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","458":"Add a comment\n                \u00c2\u00a0|","459":"I prefer the first method using events but thats just my preference. Although, I am not sure if it is an effective way or not. Because I would also want to make sure that smart contract values has been updated.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 9, 2021 at 12:01\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","460":"Add a comment\n                \u00c2\u00a0|","461":"Add a comment\n                \u00c2\u00a0|","462":"Add a comment\n                \u00c2\u00a0|","463":"Add a comment\n                \u00c2\u00a0|","464":"Add a comment\n                \u00c2\u00a0|","465":"Add a comment\n                \u00c2\u00a0|","466":"Add a comment\n                \u00c2\u00a0|","467":"Add a comment\n                \u00c2\u00a0|","468":"Add a comment\n                \u00c2\u00a0|","469":"Add a comment\n                \u00c2\u00a0|","470":"Add a comment\n                \u00c2\u00a0|","471":"1\n            \n        \n        \n            \n                \n                I noticed the team that maintains this has an open public chatroom that likely would be a best place to ask. I have posted this there too.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Aug 4, 2021 at 19:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","472":"Add a comment\n                \u00c2\u00a0|","473":"Add a comment\n                \u00c2\u00a0|","474":"Add a comment\n                \u00c2\u00a0|","475":"Add a comment\n                \u00c2\u00a0|","476":"Add a comment\n                \u00c2\u00a0|","477":"Add a comment\n                \u00c2\u00a0|","478":"I have asked a similar question here, just in case it gets answered\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0nilsmelchert\n                \n                Dec 5, 2021 at 12:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","479":"Add a comment\n                \u00c2\u00a0|","480":"Add a comment\n                \u00c2\u00a0|","481":"Add a comment\n                \u00c2\u00a0|","482":"Add a comment\n                \u00c2\u00a0|","483":"Add a comment\n                \u00c2\u00a0|","484":"Add a comment\n                \u00c2\u00a0|","485":"Add a comment\n                \u00c2\u00a0|","486":"Add a comment\n                \u00c2\u00a0|","487":"Add a comment\n                \u00c2\u00a0|","488":"please add info on the question ,if you are running through deployNodes task and it is working fine , it means your flow is ok . I am guessing your network created by bootstrapper is not correct.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0manish\n                \n                Jul 27, 2021 at 6:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This is the blog I referred - corda.net\/blog\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user16528894\n                \n                Jul 27, 2021 at 6:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                We need more details here. Can you paste your code? @user16528894\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sneha Damle\n                \n                Aug 6, 2021 at 7:56\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","489":"1\n            \n        \n        \n            \n                \n                i'd like to point out that the genesis changed a bit in substrate 4. in 4.x substrate it's aura and not palletAura\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0woss\n                \n                Aug 10, 2022 at 10:11\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","490":"Add a comment\n                \u00c2\u00a0|","491":"Add a comment\n                \u00c2\u00a0|","492":"Hi. can you elaborate on what exactly is the question? is it on the callback or is it on the transaction api not working ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vindhya G\n                \n                Jul 25, 2021 at 14:35\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @VindhyaG Hi, callback does not supported at <blockchain> solidity code. So there is only one way, connect to <blockchain> with API and get transaction IDs. example url: bscscan.com\/token\/0x041dc554c22cbe213df61b3507c98a4a060a0e15 here are 19 transaction and I want all them \"TXN HASH\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Giorgi\n                \n                Jul 25, 2021 at 14:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                so if  i understand correctly you need to know how to get all <transactions> from a token called \"TXN HASH\"?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vindhya G\n                \n                Jul 25, 2021 at 15:36\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Thank you. Already find solution via API: api.bscscan.com\/\u00e2\u0080\u00a6 Same is for ETH tokens.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Giorgi\n                \n                Jul 25, 2021 at 16:12\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","493":"2\n            \n        \n        \n            \n                \n                Hello @Daniel M, first of all, this source code has multiple syntax errors, that's why you can't compile it. I recommend you to read Solidity documentation cover to cover, to start with. Besides, storage on Ethereum is extremely expensive, I would strongly advise against developing a text editor on Ethereum.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ferit\n                \n                Jul 25, 2021 at 16:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","494":"You do need solidity and deployed contracts to communicate with <blockchain> with <web3>.dart.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Krish Bhanushali\n                \n                Jul 24, 2021 at 14:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","495":"Add a comment\n                \u00c2\u00a0|","496":"Add a comment\n                \u00c2\u00a0|","497":"Add a comment\n                \u00c2\u00a0|","498":"Add a comment\n                \u00c2\u00a0|","499":"1\n            \n        \n        \n            \n                \n                Welcome! Please start with the tour and read How to Ask. Given the info you provided, there's no chance to help you. Please provide precise steps you took and observations you made. Also, ask yourself whether you're reporting a bug (off-topic here) or asking a programming question.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ulrich Eckhardt\n                \n                Jul 19, 2021 at 18:23\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","500":"do the services for \"concensys-quorum-node1\" (and node2, etc.) exist? if so, do they have endpoints associtated with the service?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0meaningqo\n                \n                Jul 19, 2021 at 11:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                basically i am trying to create helm chart and initally i created helm chart with name consensys. but later on i uninstall and install with consensys-nw. for safer side i deleted even pv,pvc as consensys using lot of info from storage (by kubectl) but it is still pointing some old urls\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ganesh Pol\n                \n                Jul 19, 2021 at 12:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                then i think you are missing the services or they don't have endpoints associated with them.   can you add the output of \"kubectl get service --namespace $namespace\" and \"kubectl get endpoints --namespace $namespace\" to your question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0meaningqo\n                \n                Jul 19, 2021 at 12:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","501":"Add a comment\n                \u00c2\u00a0|","502":"Add a comment\n                \u00c2\u00a0|","503":"this looks like an API error. Can you provide the way you are sending this extrinsic?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Jul 20, 2021 at 17:37\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Sure .... I will head over to polkadot.js-->Developer Tab-->Extrinsics-->In the drop down box available i will select assets\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Jul 21, 2021 at 3:46\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The API many have been updated is the version of your node. It is best to match the dependencies of Polkadot for substrate, typically that is the master branch of substrate. what node are you running? One based on a version of the node template?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Jul 21, 2021 at 22:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Seach for other 1002 errors here on SO, and you will find many are due to mismatched or undefined types: polkadot.js.org\/docs\/api\/start\/types.extend\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Jul 21, 2021 at 22:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @NukeManDan in substrate node for assets pallet it used v4.0.0 and if i follow the same way I am getting internal dependency errors. So , I have changed all pallets and dependencies version to v4.0.0 and then also i am getting errors. Please tell me a way to resolve this error in substrate node template.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Jul 23, 2021 at 4:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","504":"Add a comment\n                \u00c2\u00a0|","505":"Add a comment\n                \u00c2\u00a0|","506":"Add a comment\n                \u00c2\u00a0|","507":"Add a comment\n                \u00c2\u00a0|","508":"1\n            \n        \n        \n            \n                \n                Instead of CustID[i], shouldn't you be doing CustID.push(\"your value here\")? You haven't initialized the CustID array - it is a dynamic array.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0falopsy\n                \n                Jul 16, 2021 at 19:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @falopsy thank you, now the initTest() works, but it's the runTest() that gives me the same error and I don't know why\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ponga\n                \n                Jul 19, 2021 at 14:53\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                most likely a problem with your ContrIdCard contract (or its mkCode function). Without the implementation of that, it will be difficult for anyone to help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0falopsy\n                \n                Jul 20, 2021 at 9:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","509":"You need to provide more complete code to get help like where _msgSender() is defined. Can you post the full Token.sol contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0falopsy\n                \n                Jul 16, 2021 at 8:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","510":"Add a comment\n                \u00c2\u00a0|","511":"Why not create a state variable totalCredits and increment that in createStake? When it comes to distribute rewards, you just return total credits. If there is an unstake function, decrement totalCredits in it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0falopsy\n                \n                Jul 16, 2021 at 8:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","512":"Add a comment\n                \u00c2\u00a0|","513":"Add a comment\n                \u00c2\u00a0|","514":"Add a comment\n                \u00c2\u00a0|","515":"Add a comment\n                \u00c2\u00a0|","516":"Add a comment\n                \u00c2\u00a0|","517":"Add a comment\n                \u00c2\u00a0|","518":"Can u share how your are importing in test file\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0VENKATESH CHAVVAKULA\n                \n                Jul 8, 2021 at 12:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                const register = require('..\/..\/..\/registerUser');\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user9929340\n                \n                Jul 8, 2021 at 12:05\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                let mockObj = \"\"     beforeEach(() => {         mockObj = sandbox.stub(register, 'main');     });     afterEach(() => {         mockObj.restore();     });  This mockObj.restore() is giving me error\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user9929340\n                \n                Jul 8, 2021 at 12:05\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","519":"Add a comment\n                \u00c2\u00a0|","520":"Add a comment\n                \u00c2\u00a0|","521":"2\n            \n        \n        \n            \n                \n                Are you sure it's being closed correctly and there aren't unescaped quotes somewhere?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0quantumSoup\n                \n                Aug 24, 2010 at 23:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Unescaped quotes throw another parsing error.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0JanC\n                \n                Aug 24, 2010 at 23:38\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Note that since <python> 3.10, the error message will look a bit different.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Karl Knechtel\n                \n                May 26, 2022 at 16:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","522":"Add a comment\n                \u00c2\u00a0|","523":"Did you try anything already and face issues?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0deepakchethan\n                \n                Jul 8, 2021 at 10:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes I tried to use useEffect hook from react whenever I call smart contract function from frontend but it did not work. I guess we cannot use function call as a dependency for useEffect to trigger the update.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saurabh\n                \n                Jul 8, 2021 at 13:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","524":"Add a comment\n                \u00c2\u00a0|","525":"1\n            \n        \n        \n            \n                \n                Each Transfer have tow parties, seller and buyer. Buyer address placed in to seller in from.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lessmore\n                \n                Jul 7, 2021 at 8:33\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","526":"Add a comment\n                \u00c2\u00a0|","527":"Looks like it's an infinite loop, is there some sort of looping or something recursive in the line maybe?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kissu\n                \n                Jul 5, 2021 at 23:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi @kissu, there is no loop happening here...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dimitri\n                \n                Jul 6, 2021 at 9:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","528":"Add a comment\n                \u00c2\u00a0|","529":"did you try to delete the folders that were created, stop the containers (docker ps -aq | xargs docker kill),  delete the containers (docker ps -aq | xargs docker rm) and re-run everything again?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0yacovm\n                \n                Jul 4, 2021 at 22:51\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you very much! The network started successfully after I did that!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0marija\n                \n                Jul 5, 2021 at 20:11\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","530":"Add a comment\n                \u00c2\u00a0|","531":"1\n            \n        \n        \n            \n                \n                It should not do that. Probably something broken with your Windows, as only faulty kernel drivers can cause Windows bluescreen.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jul 4, 2021 at 18:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Sorry it is not Win10 but Win7. My Windows is clean, I often reinstall my operating system and it is always clean. I think that the reason might be a huge number of threads (<=> a kind of \"promise\" problem for which I have not found the solution yet).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0KotlinIsland\n                \n                Jul 4, 2021 at 20:07\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MikkoOhtamaa Yes I think you are right about that. This BSOD has only happened on Win7 and seems not to happen on Win10, so this issue might be due to the Win7 operating system itself.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0KotlinIsland\n                \n                Jul 5, 2021 at 8:34\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","532":"Add a comment\n                \u00c2\u00a0|","533":"Add a comment\n                \u00c2\u00a0|","534":"Add a comment\n                \u00c2\u00a0|","535":"can you show me your configtx.yaml and your msp cert which you use to join channel\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Li Xian\n                \n                Jul 1, 2021 at 7:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                added in question\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hello world\n                \n                Jul 1, 2021 at 9:22\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                cou you please show me your msp cert which you use to join channel,for instance openssl x509 -in Admin@org1.example.com-cert.pem -noout -text\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Li Xian\n                \n                Jul 1, 2021 at 12:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                updated in post\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hello world\n                \n                Jul 1, 2021 at 17:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                have you set correct ca pem and private key(xxxx_sk) when you generate crypto material ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Li Xian\n                \n                Jul 2, 2021 at 3:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","536":"Add a comment\n                \u00c2\u00a0|","537":"Sorry if its a dumb question, are you looking at the docs & examples? polkascan.github.io\/py-substrate-interface --- the team is very responsive on element: github.com\/polkascan\/py-substrate-interface\/pull\/120\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Jun 30, 2021 at 19:49\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @NukeManDan Yeah, I looked at the examples and it went a little over my head to be honest. Experimentally, I think the example given here is the way to get the data of all the accounts. If you have knowledge of this please confirm.   I still need to find a way to get the data of all accounts that have some sort of identity attached\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Suryansh Singh\n                \n                Jun 30, 2021 at 20:08\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","538":"Add a comment\n                \u00c2\u00a0|","539":"1\n            \n        \n        \n            \n                \n                My guess is that you run several Graph processes, each with their own database and then use reverse proxy server like Nginx to route API request to the correct instance.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jun 30, 2021 at 9:35\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","540":"Please give us more details about your question. What's the JSON file structure?, Have you tried something?, What's the <python> version you are using?. Do you have a code working so far?. Please review this: stackoverflow.com\/help\/how-to-ask\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Carmoreno\n                \n                Jun 30, 2021 at 13:08\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                i didnt try something. im using <python> 3.9 And i do have a code working\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gaming With Farhan\n                \n                Jun 30, 2021 at 14:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","541":"Add a comment\n                \u00c2\u00a0|","542":"I would strongly advice to check if this Q\/A doesn't answer your question. If not, please create a post at <cryptography> (and describe why the previous Q\/A doesn't answer your question). If you do post there, then delete this post (after copying your content using edit :) ), no cross posting please.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Maarten Bodewes\n                \n                Jul 1, 2021 at 15:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I\u00e2\u0080\u0099m voting to close this question because this question is about <cryptography>, not programming.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Maarten Bodewes\n                \n                Jul 1, 2021 at 15:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hello @MaartenBodewes I disagree with the conclusion: a merkle tree is a data structure like could be a binary tree or red black tree or many more. In my opinion it's very helpful to understand why this structure inner workings exposes a vulnerability in some scenarios. BTW I actually found the answer from that time ,but I also forgot it :D I need to find the notes from that time to re-answer the question\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Stormsson\n                \n                Jun 1, 2022 at 12:48\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                If you could word your doubts into a new question then I would be happy to upvote your question at <cryptography>.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Maarten Bodewes\n                \n                Jun 1, 2022 at 12:51\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","543":"Add a comment\n                \u00c2\u00a0|","544":"Add a comment\n                \u00c2\u00a0|","545":"This isn't a React issue. This is an issue with your node module.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Andy\n                \n                Jun 27, 2021 at 7:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                And how do I rectify this? Should I post any more code to help in diagnosis of the problem?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0IAmACoder\n                \n                Jun 28, 2021 at 3:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","546":"Add a comment\n                \u00c2\u00a0|","547":"Add a comment\n                \u00c2\u00a0|","548":"1\n            \n        \n        \n            \n                \n                There are no \"Polkatdot smart contracts\" so there is that. Polkatdot is just a security layer for different <blockchain>s. Also looks like Subquery the project exist only as a name - they don't have anything build yet.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jun 25, 2021 at 15:46\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","549":"Add a comment\n                \u00c2\u00a0|","550":"Add a comment\n                \u00c2\u00a0|","551":"Add a comment\n                \u00c2\u00a0|","552":"Add a comment\n                \u00c2\u00a0|","553":"This looks like an issue. I've flagged to the team. Could you please additionally make an issue on the chainlink repo? github.com\/smartcontractkit\/chainlink\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Jun 23, 2021 at 2:59\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Remove the userProvidedSeed and it will update. The documentation hasn't been updated yet.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sam\n                \n                Jun 23, 2021 at 5:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","554":"Add a comment\n                \u00c2\u00a0|","555":"Add a comment\n                \u00c2\u00a0|","556":"Add a comment\n                \u00c2\u00a0|","557":"This seems to be an issue with how your interactive shell (cli) interprets the bit that says '.\/node_modules\/@uniswap\/?(v3-core|v3-periphery)\/...'. Can you tell us where you found that command (the last one, that fails)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Phortuin\n                \n                Jun 18, 2021 at 7:02\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","558":"Add a comment\n                \u00c2\u00a0|","559":"Add a comment\n                \u00c2\u00a0|","560":"Add a comment\n                \u00c2\u00a0|","561":"Add a comment\n                \u00c2\u00a0|","562":"Add a comment\n                \u00c2\u00a0|","563":"Add a comment\n                \u00c2\u00a0|","564":"Add a comment\n                \u00c2\u00a0|","565":"are you using github.com\/paritytech\/sub-flood to do this? you are really hammering your nodes, but how exactly? Meaning what nodes receive the <transactions>? are you rotating?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Jun 14, 2021 at 17:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I use a similar benchmark model: initialize accounts, then round-robin on them by tracking the nonce to prevent outdated and other errors. The WebSockets are load-balanced with an ingress controller (the nodes are on a cloud using Kubernetes): so difficult to know precisely how the client WebSockets requests are attributed to each node (anyhow, I have not more than 10 WebSockets open). The question stays the same, what is the difference between the two elements? How can it be that the nodes don't share the same number of finished <transactions>?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0lucgerrits\n                \n                Jun 15, 2021 at 8:44\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Are all nodes block producers (authorities in AuRa)? It is possible that <transactions> are being validated and then not included in blocks as they are not gossiped to the block producer. I would expect your load balancing being opaque to what node is targeted might make this difficult to assess directly. Here is more details on tx processing: substrate.dev\/docs\/en\/knowledgebase\/learn-substrate\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Jun 16, 2021 at 19:50\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                further you can inspect the logic to get a sense of what produces these metrics: github.com\/paritytech\/substrate\/tree\/master\/client\/\u00e2\u0080\u00a6 --- metrics fol the pool and the pool's API are distinct here in metrics.rs\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Jun 16, 2021 at 20:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks, I'll have a better look at the code. If I will understand it correctly I'll post an answer here.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0lucgerrits\n                \n                Jun 18, 2021 at 9:08\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","566":"Add a comment\n                \u00c2\u00a0|","567":"Add a comment\n                \u00c2\u00a0|","568":"1\n            \n        \n        \n            \n                \n                It seems like there are some special characters in front of your pragma statement: \u00ef\u00bf\u00bd\u00ef\u00bf\u00bdpragma solidity =0.5.16; Try removing those characters because that's what the compiler doesn't recognize\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0lajosdeme\n                \n                Jun 11, 2021 at 19:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yeah that was what I was thinking too but there isn't anything in front of it its the beginning of the code\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dressi\n                \n                Jun 11, 2021 at 20:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","569":"What have you tried so far?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gh05d\n                \n                Jun 11, 2021 at 8:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","570":"please use only a single assignment.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nina Scholz\n                \n                Jun 10, 2021 at 6:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Considering it as a basic javascript code assignment occurs from left to right, thus if you split above code into different statement it is same as      self.data = previous_block_hash self.calculate_valid_hash()     self.data = data self.prev_block_hash\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Amit Bisht\n                \n                Jun 10, 2021 at 6:36\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This code does not seem to work, you are missing either semicolons or newlines. In general, you can chain assignment operators e.g.: x = y = 2;, as the assignment operator returns with the assigned value, like: x = (y = 2);, where the result of y=2; is 2.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Peter Lang\n                \n                Jun 10, 2021 at 6:37\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Many thanks Will breaking it up with brackets work then? self.data = (previous_block_hash self.calculate_valid_hash() self.data = data self.prev_block_hash)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Chris H\n                \n                Jun 10, 2021 at 6:44\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","571":"Add a comment\n                \u00c2\u00a0|","572":"Add a comment\n                \u00c2\u00a0|","573":"Add a comment\n                \u00c2\u00a0|","574":"Add a comment\n                \u00c2\u00a0|","575":"Add a comment\n                \u00c2\u00a0|","576":"Add a comment\n                \u00c2\u00a0|","577":"1\n            \n        \n        \n            \n                \n                This gives the public key - issuerAccountInfo.<geth>ost().getOwningKey(). Have included this while signing the transaction.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0laplace\n                \n                Jun 8, 2021 at 16:43\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","578":"You forgot an index.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Laurenz Albe\n                \n                Jun 8, 2021 at 5:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I have done indexing but when I try to sort data with joins, indexing is also not giving required result.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mahesh Rapelli\n                \n                Jun 8, 2021 at 11:00\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                What I am trying to say with this is that your question lacks crucial details, like the table definitions, the slow SQL statements and execution plans. Nobody can give you a useful answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Laurenz Albe\n                \n                Jun 8, 2021 at 11:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","579":"Add a comment\n                \u00c2\u00a0|","580":"2\n            \n        \n        \n            \n                \n                I suggest you use the testnet to do your tests, pancakeswap has a contract which is published on the test net you see that here: bsc.kiemtienonline360.com\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cristofor\n                \n                Jun 7, 2021 at 12:59\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","581":"Add a comment\n                \u00c2\u00a0|","582":"Did you share the accounts between the node after you created them?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Jun 7, 2021 at 6:56\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes, I have shared.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0laplace\n                \n                Jun 7, 2021 at 7:44\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Can you share how you shared the accounts? That should work.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Jun 7, 2021 at 7:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                start ShareAccountInfoFlow accountName: receiverA, shareAccountInfoTo: Seller\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0laplace\n                \n                Jun 7, 2021 at 8:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Did you try to not use the UtilitiesKt (which I think does not exist anymore)? Link to a java example: github.com\/corda\/samples-java\/blob\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Jun 7, 2021 at 8:37\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","583":"1\n            \n        \n        \n            \n                \n                for total transfers you can use direct id of span totaltxns &  i not able to see lock or burn   on the page\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gaurav\n                \n                Jun 7, 2021 at 6:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                the lock or burn is already on the #6 PancakeSwap V2: FUCKTHEMOON 116,181,635.738731337 0.0000%\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Willz Estorbot\n                \n                Jun 7, 2021 at 6:35\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                table is loading dynamic so you have to use selenium for that\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gaurav\n                \n                Jun 7, 2021 at 6:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you. How would I know next time that the table is being loaded dynamically?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Willz Estorbot\n                \n                Jun 7, 2021 at 6:46\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                if you print ca.prettify() it will print full page source which is not matching with chrome developer tool page source , for example  table is present in a div with id of maintable when you try to find in beautiful soup is returning None so\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gaurav\n                \n                Jun 7, 2021 at 6:52\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","584":"Add a comment\n                \u00c2\u00a0|","585":"What is the compatibility definition in your .sol files? The pragma solidity ... - is it 0.5.16, ^0.5.16 or any other value? Also what is the exact error message? This will help other users to troubleshoot your issue more easily.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jun 5, 2021 at 14:28\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda all my pragma statements have a ^ before the version number, I thought that was so any version that it states and higher can run it ...  And yes that's why I'm asking as i cant find any good documentation out there to help......  error-  .sol:1:1: ParserError: Source file requires different compiler version (current compiler is 0.5.16+commit.9c3226ce.Emscripten.clang - note that nightly builds are considered to be strictly less than the released version pragma solidity ^0.6.6;\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user16137842\n                \n                Jun 5, 2021 at 14:33\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It seems that you have two copies of solcjs - one v0.5.16 (dependency of truffle) and one v0.8.4 (separately installed package). Can you verify whether truffle version prints the 0.5.16 or 0.8.4 version? My guess is the first one.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jun 5, 2021 at 15:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda it shows v5.3.9\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user16137842\n                \n                Jun 5, 2021 at 15:37\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","586":"Add a comment\n                \u00c2\u00a0|","587":"I can't find anything either. Where did you \"stumbeled upon the name\"?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Jun 6, 2021 at 23:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This question isn't very clear, can you provide a link\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mysterious_android\n                \n                Jun 14, 2021 at 1:52\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","588":"Add a comment\n                \u00c2\u00a0|","589":"Add a comment\n                \u00c2\u00a0|","590":"Add a comment\n                \u00c2\u00a0|","591":"1\n            \n        \n        \n            \n                \n                I managed to solve the problem. Tx was failing because of the value added to the tx here: 'value': w3.toWei(0.0001,'ether')\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Samuel Alibien\n                \n                Jun 3, 2021 at 18:11\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Did you remove value and it worked? I'm struggling with a similar issue, but can't get it working\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jak\n                \n                Jul 21, 2021 at 13:47\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                I set value to 0\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Samuel Alibien\n                \n                Sep 16, 2021 at 21:34\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","592":"From my personal experience with Blockcypher, they don't answer emails. I dont know why they do this\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Olu Adeyemo\n                \n                Sep 2, 2021 at 3:01\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                have you come up with any solution\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Olu Adeyemo\n                \n                Sep 2, 2021 at 3:02\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","593":"Please paste your code inline.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paul Bryan\n                \n                Jun 2, 2021 at 15:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","594":"Add a comment\n                \u00c2\u00a0|","595":"Add a comment\n                \u00c2\u00a0|","596":"Add a comment\n                \u00c2\u00a0|","597":"Add a comment\n                \u00c2\u00a0|","598":"1\n            \n        \n        \n            \n                \n                We tried the steps from the AVA faucet. Tried it on Ubuntu server and it is working fine. Though it needs node and npm to be installed instead of yarn. Hope it works for you too :-)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0nIcE cOw\n                \n                Sep 29, 2021 at 5:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","599":"Add a comment\n                \u00c2\u00a0|","600":"hey welcome to stack. this question is pretty broad. have you tried anything yet? are you following the solidity \/ <web3> documentation to figure out how to interact with your smart contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0azium\n                \n                May 31, 2021 at 15:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yeah, I'm using solidity and IPFS infura to interact with the smart contract. I know how to get files but I'm not sure of getting text values.  While on solidity I've written a code to the get the value from user.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Padma Shruthi\n                \n                Jun 1, 2021 at 5:17\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I\u00e2\u0080\u0099m voting to close this question because it is directly asking for working code\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Jul 11, 2021 at 15:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","601":"looks like you have to run npm install on your project. So open a terminal and go to the directory where your project is (it will have package.json file) and run the command npm install\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0david_k\n                \n                May 31, 2021 at 15:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi @david_k tried command npm install still getting the below error  npm : The term 'npm' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the  spelling of the name, or if a path was included, verify that the path is correct and try again. At line:1 char:1 + npm install + ~~~     + CategoryInfo          : ObjectNotFound: (npm:String) [], CommandNotFoundException     + FullyQualifiedErrorId : CommandNotFoundException\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rishabh V\n                \n                Jun 1, 2021 at 6:38\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Looks like either you don't have <node.js> installed or it's not on your PATH\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0david_k\n                \n                Jun 1, 2021 at 8:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","602":"Add a comment\n                \u00c2\u00a0|","603":"Can you share output of docker ps -a\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Asad Hayat\n                \n                May 31, 2021 at 11:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi @AsadHayat, After I start the network, this is the output of docker ps -a\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Enthusiast Coder\n                \n                May 31, 2021 at 13:02\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","604":"Add a comment\n                \u00c2\u00a0|","605":"Add a comment\n                \u00c2\u00a0|","606":"Add a comment\n                \u00c2\u00a0|","607":"Add a comment\n                \u00c2\u00a0|","608":"Add a comment\n                \u00c2\u00a0|","609":"Add a comment\n                \u00c2\u00a0|","610":"Add a comment\n                \u00c2\u00a0|","611":"Please edit your question and state values that you passed into the constructor when deploying. It's possible that the error is caused by misconfiguration (passed in the constructor values).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 25, 2021 at 12:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda I have modified the statement\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Azeem Lodhi\n                \n                May 25, 2021 at 14:04\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                what is the dev address the second arg?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Azeem Lodhi\n                \n                May 25, 2021 at 14:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","612":"Add a comment\n                \u00c2\u00a0|","613":"The image in the question is not broken.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                May 25, 2021 at 7:37\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","614":"Add a comment\n                \u00c2\u00a0|","615":"Add a comment\n                \u00c2\u00a0|","616":"Add a comment\n                \u00c2\u00a0|","617":"Add a comment\n                \u00c2\u00a0|","618":"Add a comment\n                \u00c2\u00a0|","619":"Add a comment\n                \u00c2\u00a0|","620":"Add a comment\n                \u00c2\u00a0|","621":"Add a comment\n                \u00c2\u00a0|","622":"Add a comment\n                \u00c2\u00a0|","623":"Add a comment\n                \u00c2\u00a0|","624":"Add a comment\n                \u00c2\u00a0|","625":"first you could add links to project and definition of <hyperledger> sawtooth  in question (not in comment)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                May 21, 2021 at 11:33\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                next you should show code and how you use it - and you use docker. We can't read in your mind - you have to add all details in question (not in comment)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                May 21, 2021 at 11:34\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @furas sorry this is the first time ever i ask something on stack overflow.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cocazzzz\n                \n                May 24, 2021 at 15:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","626":"Add a comment\n                \u00c2\u00a0|","627":"1\n            \n        \n        \n            \n                \n                There's no Java here. Java is not not JavaScript, they just sound similar.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Michael\n                \n                May 20, 2021 at 21:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","628":"What do you mean saying \"digital signature from UI\"? Is it signing a transaction in a mobile\/web app without disclosing your private key (like in crypto wallets)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0max taldykin\n                \n                May 21, 2021 at 6:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @maxtaldykin Sorry for the wrong description above as I misunderstood. My task is to have three party node with some contracts and once the transaction is done successfully between all three parties then using an api, we should be able to get the final status as approved or rejected.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user3930728\n                \n                May 21, 2021 at 7:25\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                then, in this case the answer I gave below is correct.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                May 21, 2021 at 11:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yeah that cover most of my question. Still have one doubt regarding getting the status from an API after the contract is signed between all the parties. I need to know whether the party A, B and C all have signed the transaction or not.  Lets say Party A is signed then the status should be 'Proposed', if PartyA and PartyB both have signed then the status should be 'Pending' and if all three party has signed then the status should change to 'Approved' And theses status should be fetched from an API.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user3930728\n                \n                May 24, 2021 at 12:31\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @user3930728  I updated my answer after these new details given in your comment. Could you please update the question as well? If you find my answer acceptable, please do not forget to accept it. Thanks!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Jun 4, 2021 at 13:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","629":"Add a comment\n                \u00c2\u00a0|","630":"Add a comment\n                \u00c2\u00a0|","631":"Add a comment\n                \u00c2\u00a0|","632":"Add a comment\n                \u00c2\u00a0|","633":"Add a comment\n                \u00c2\u00a0|","634":"Add a comment\n                \u00c2\u00a0|","635":"Add a comment\n                \u00c2\u00a0|","636":"Add a comment\n                \u00c2\u00a0|","637":"Add a comment\n                \u00c2\u00a0|","638":"Add a comment\n                \u00c2\u00a0|","639":"Add a comment\n                \u00c2\u00a0|","640":"Add a comment\n                \u00c2\u00a0|","641":"The best way to read out the values is using JSON-RPC API and <web3>.js or <web3>.py contract interfaces.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                May 12, 2021 at 7:31\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","642":"Add a comment\n                \u00c2\u00a0|","643":"Sample data, desired results, and an appropriate database tag would all help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gordon Linoff\n                \n                May 11, 2021 at 0:48\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","644":"Add a comment\n                \u00c2\u00a0|","645":"Add a comment\n                \u00c2\u00a0|","646":"Add a comment\n                \u00c2\u00a0|","647":"There is a dedicated stack exchange community for Ethereum! You can try asking your question here: ethereum.stackexchange.com\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lemon\n                \n                Oct 10, 2021 at 23:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","648":"Add a comment\n                \u00c2\u00a0|","649":"Add a comment\n                \u00c2\u00a0|","650":"Add a comment\n                \u00c2\u00a0|","651":"Add a comment\n                \u00c2\u00a0|","652":"Add a comment\n                \u00c2\u00a0|","653":"Does this answer your question? The Name of <hyperledger> Fabric Test Network is not detected by an Application given in the fabric samples\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0myeongkil kim\n                \n                May 10, 2021 at 1:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for you reply, even I have changed the respective variable (COMPOSE_PROJECT_NAME) with the value \"net\", the restored network is getting created in the name of docker_test. So it is not solving my issue.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 7:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","654":"Add a comment\n                \u00c2\u00a0|","655":"Add a comment\n                \u00c2\u00a0|","656":"Add a comment\n                \u00c2\u00a0|","657":"Add a comment\n                \u00c2\u00a0|","658":"Add a comment\n                \u00c2\u00a0|","659":"Add a comment\n                \u00c2\u00a0|","660":"Not working here too\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Layinka\n                \n                May 13, 2021 at 14:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                hey did you ever figure this out? having the same issue on bsc testnet\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tyler Jones\n                \n                May 15, 2021 at 14:01\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @TylerJones Not at all. but I did found an alternative. Instead of using truffle, I used remix. It was able to be deployed successfully with same RPC URL If you are not strictly bind to truffle, you could try remix.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lyn\n                \n                May 17, 2021 at 0:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","661":"Add a comment\n                \u00c2\u00a0|","662":"Add a comment\n                \u00c2\u00a0|","663":"Add a comment\n                \u00c2\u00a0|","664":"sha256 operates on bytes, and because not every byte value is a displayable character there must be some way for the sha256 tool to accommodate arbitrary byte sequences. Presenting the input as hex-encoded bytes is common, as is base64 encoding. If you've an online sha256 tool that accepts hex-encoded input then you can use that. If you have a text string then you must decide how to convert that to bytes. Modern standards specify UTF-8. If you can find an online tool that accepts text characters and returns hex-encoded UTF-8 output then that's what you can provide as input to the SHA256 tool.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0President James K. Polk\n                \n                May 5, 2021 at 15:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                many thanks for your answer. there was a part in my question that has not been answered i am afraid. can (and is this a correct approach?) i ALWAYS convert the hexdecimal into text and then use the output text into SHA256 that accepts text and get the same result had i  used sha256 on the original Hexdecimal input? my main concern is mainly on the non printable character of the hex when converting into text ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marklah\n                \n                May 6, 2021 at 20:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                No, you cannot always do that. Only a sha256 tool that accepts hex-encoded or base64-encoded bytes can be used.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0President James K. Polk\n                \n                May 6, 2021 at 20:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                thanks alot , appreciated\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marklah\n                \n                May 6, 2021 at 23:00\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","665":"Can you include the config?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ming\n                \n                May 4, 2021 at 3:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","666":"Add a comment\n                \u00c2\u00a0|","667":"Add a comment\n                \u00c2\u00a0|","668":"Add a comment\n                \u00c2\u00a0|","669":"Add a comment\n                \u00c2\u00a0|","670":"Add a comment\n                \u00c2\u00a0|","671":"Add a comment\n                \u00c2\u00a0|","672":"@LucioM.Tato I am able to burn using self.token.accounts.insert(&user_account, &new_balance). Thought that there was a helper function in the spec, since a on_tokens_burned() was provided.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0secretshardul\n                \n                May 5, 2021 at 6:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","673":"Add a comment\n                \u00c2\u00a0|","674":"Add a comment\n                \u00c2\u00a0|","675":"Due to the specificity of the repository, you maybe should open an issue on it stating you need a step-by-step and detailing the errors you found.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Julio Cezar Silva\n                \n                Apr 30, 2021 at 14:39\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Ok I'll try that\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Chaitanya M\n                \n                May 1, 2021 at 1:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","676":"Just curious what is the range of the enum value you are working with?? What is the value or position in that enum that are failing?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MadeInDreams\n                \n                Dec 26, 2021 at 4:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","677":"Add a comment\n                \u00c2\u00a0|","678":"Add a comment\n                \u00c2\u00a0|","679":"Add a comment\n                \u00c2\u00a0|","680":"1\n            \n        \n        \n            \n                \n                Please don't include pictures of your code and data. You should copy and paste it into your question so that others can reproduce your results.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DaveL17\n                \n                Apr 28, 2021 at 23:07\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","681":"Add a comment\n                \u00c2\u00a0|","682":"Add a comment\n                \u00c2\u00a0|","683":"Add a comment\n                \u00c2\u00a0|","684":"Add a comment\n                \u00c2\u00a0|","685":"Add a comment\n                \u00c2\u00a0|","686":"The code you've posted is not valid <python> (and not only due to the bad indentation). Please at least attempt to run your code before pasting it here.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0AKX\n                \n                Apr 27, 2021 at 10:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                What is the actual problem here? I couldn't understand it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Xiddoc\n                \n                Apr 27, 2021 at 12:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","687":"Add a comment\n                \u00c2\u00a0|","688":"Add a comment\n                \u00c2\u00a0|","689":"Creating unpredictable number is impossible by it self.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jakub D\u00c3\u00b3ka\n                \n                Apr 26, 2021 at 10:26\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","690":"Add a comment\n                \u00c2\u00a0|","691":"You have to sync the reserves and the balances after burning\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Delalie Rawllings\n                \n                Aug 17, 2022 at 13:42\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","692":"1\n            \n        \n        \n            \n                \n                This example is incomplete because we do not know what msg.sender in in the constructor.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Apr 25, 2021 at 8:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MikkoOhtamaa I've updated the example with owner set logic. So basically both contract owner is 0x123 address. Also, 0x123 executes the giveAwayTokens function\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Apr 25, 2021 at 9:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","693":"Can you give code example how you do the transfer and what do you mean by \"current acount\"? (There is a \"default account\" which <web3> uses if you don't specify the sender, but I'm not sure if that's what you mean without the code example).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 24, 2021 at 19:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda yes current = default and transfer is just erc20 transfer method implementation. For example my default address is '0x123' and i transfer tokens to '0x456', after that i want to transfer this tokens from '0x456' to '0x789' but i cant because my current address is '0x123' instead of '0x456'. If you have worked with remix you possibly know that it is possible to change account when contracts are deployed. So i suppose i can do the same in truffle through console but dont know how.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0raury\n                \n                Apr 24, 2021 at 22:40\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","694":"Add a comment\n                \u00c2\u00a0|","695":"Add a comment\n                \u00c2\u00a0|","696":"Add a comment\n                \u00c2\u00a0|","697":"Add a comment\n                \u00c2\u00a0|","698":"Add a comment\n                \u00c2\u00a0|","699":"What is the log of the CA after calling node enrollAdmin.js? If the CA does not show more logs, it means that the application has not called the CA yet. If it says tls handshake error then you need to double-check your certificate\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0harisato\n                \n                Apr 26, 2021 at 3:04\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","700":"Add a comment\n                \u00c2\u00a0|","701":"Add a comment\n                \u00c2\u00a0|","702":"Add a comment\n                \u00c2\u00a0|","703":"Hum, OK, sounds \"interesting\" but what is the Pb with iMacros...? (No Script posted...)  The 'etherscan' Site looks pretty straightforward to extract\/scrape to me, from a quick look... I didn't come further than \"Connect Wallet to start\" on the 'dxsale' Site, but I didn't go through the 'Metamask' Setup Procedure... If you go for iMacros, open a parallel Thread on the iMacros Forum I would say, as this won't be an \"easy\" Q\/A Thread for 'SO'..., and I won't be writing your Script, ah-ah...! (Read my Profile for more Info...)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0chivracq\n                \n                Apr 20, 2021 at 23:11\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","704":"share your package.json file\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OhadR\n                \n                Apr 20, 2021 at 7:39\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                My guess is that sudo truffle runs the globally installed truffle and looks for the fs-extra in the global dependencies (where it doesn't exist)... Have you tried installing and running the whole thing without the -g option and without sudo? ... A workaround might be npm install -g fs-extra but this is not a clean approach.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 20, 2021 at 9:44\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                As per conversation Package.json file has been added\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shubham Garg\n                \n                Apr 20, 2021 at 15:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks @PetrHejda .... its working fine now. using npm install -g fs-extra installs it globally and things working just fine.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shubham Garg\n                \n                Apr 20, 2021 at 15:34\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","705":"The Candidate struct doesn't have an address type variable. What is the \"adr\" argument in getCondidateName()?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0webelf000\n                \n                Apr 19, 2021 at 18:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                i know this wrong could you correct this please\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hatta zouba\n                \n                Apr 19, 2021 at 20:09\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","706":"same problem when I try to send eth to the IcoSeller address:\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0fabriziogianni7\n                \n                Apr 17, 2021 at 8:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                fabri@MacBook-Pro-di-fabrizio PADDY % oz transfer  ? Pick a network development ? Choose the account to send <transactions> from (0) 0xdfd2F29b5FE71477958f4b65F024c0B623Da5368 ? Enter the receiver account 0xaa951e52Ba05457b663d44BF8915eC15075AbDB5 ? Enter an amount to transfer 20 ether \u00e2\u009c\u0096 Sending 20 ether to 0xaa951e52Ba05457b663d44BF8915eC15075AbDB5 Error: Returned error: VM Exception while processing transaction: revert\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0fabriziogianni7\n                \n                Apr 17, 2021 at 8:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","707":"Add a comment\n                \u00c2\u00a0|","708":"On the terminal that truffle is working, try finding out the path of truffle by running which truffle ,  Then open a new terminal, and echo $PATH to check if that path truffle is installed is inside your $PATH.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ming\n                \n                Apr 18, 2021 at 2:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please read and edit as described stackoverflow.com\/help\/how-to-ask\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Muhammad Tariq\n                \n                Apr 18, 2021 at 8:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","709":"Add a comment\n                \u00c2\u00a0|","710":"Add a comment\n                \u00c2\u00a0|","711":"Add a comment\n                \u00c2\u00a0|","712":"1\n            \n        \n        \n            \n                \n                ICYMI the Polkascan Technical channel  is a good place to ask  \u00f0\u009f\u0098\u00b8: matrix.to\/#\/#polkascan:matrix.org\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Apr 12, 2021 at 19:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Just solved my problem :) ty anyways\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jdawg287\n                \n                Apr 13, 2021 at 2:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                great! Would you mind adding the tag <python>-substrate to this question? so others can find it\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Apr 14, 2021 at 2:48\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","713":"Hmm... normaly there should be a \"Hi\" at the begining but its just cutted of :\/\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MaTok\n                \n                Apr 12, 2021 at 8:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It seems like the contract with address _poolInfo[pid].poolT.rewardToken fails the transfer() function, which results in returning false from the _claim()  function (in your contract). However, your JS snippet returns the transaction object, not the Solidity return value, so it's not possible to verify using the data that you've shared... I'd recommend debugging the ERC contract's transfer() function on your local chain, whether and why it returns false. (Possibly the sender doesn't have enough tokens?)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 13, 2021 at 21:11\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","714":"Add a comment\n                \u00c2\u00a0|","715":"Add a comment\n                \u00c2\u00a0|","716":"Add a comment\n                \u00c2\u00a0|","717":"Add a comment\n                \u00c2\u00a0|","718":"Did you run npm install truffle-plugin-verify ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Apr 10, 2021 at 17:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yep, is already installed.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0unos_mopsus\n                \n                Apr 10, 2021 at 17:49\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Did you deploy the contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Apr 10, 2021 at 17:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Did you read the entire post? Yes, it is deployed. See above the contract.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0unos_mopsus\n                \n                Apr 10, 2021 at 17:55\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I mean to the same network\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Apr 10, 2021 at 17:55\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 5 more comments","719":"Add a comment\n                \u00c2\u00a0|","720":"Add a comment\n                \u00c2\u00a0|","721":"Add a comment\n                \u00c2\u00a0|","722":"I think I have the same question. For example, a game item called \"Armor\" sold from A to B. Can B change its color before selling it to C?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mirat Can Bayrak\n                \n                Apr 24, 2021 at 10:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","723":"Add a comment\n                \u00c2\u00a0|","724":"I think it is possiable,but why do you need to do this,according to my idea,if you want to validation transaction manual,It is better and easy to do this before you proposal transaction.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Li Xian\n                \n                Apr 9, 2021 at 2:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                First, thanks for your reply. yes, i think that you are right. it's about a document flow, it can be created and filled first, then it must be approved by another group of users, they read it, then if it's okey, they validate the document. so a manual validation means a document validation by the user examinator of the docuement.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Youcef Chalabi\n                \n                Apr 9, 2021 at 10:25\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","725":"Add a comment\n                \u00c2\u00a0|","726":"Add a comment\n                \u00c2\u00a0|","727":"Can you elaborate on what changed that caused this? One first step if you are unsure is to cargo clean, update your toolchain rustup update, and then build from scratch again.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Apr 7, 2021 at 15:44\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I changed \"libc\" package in cargo.lock file  [[package]] name = \"libc\" version = \"0.2.90\" source = \"registry+github.com\/rust-lang\/crates.io-index\" checksum = \"ba4aede83fc3617411dc6993bc8c70919750c1c257c6ca6a502aed6e0e2394ae\"  and I added this in cargo.toml file  [patch.crates-io] librocksdb-sys = { git = \"github.com\/hdevalence\/rust-rocksdb\", branch = \"master\" }\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0aoi\n                \n                Apr 7, 2021 at 23:53\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Don't manually edit the lock file, instead update with cargo update -p libc --precise 0.2.90\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Apr 9, 2021 at 16:38\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","728":"Add a comment\n                \u00c2\u00a0|","729":"Add a comment\n                \u00c2\u00a0|","730":"Add a comment\n                \u00c2\u00a0|","731":"Add a comment\n                \u00c2\u00a0|","732":"Add a comment\n                \u00c2\u00a0|","733":"Does this answer your question? Updating a live smart contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 1, 2021 at 11:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","734":"1\n            \n        \n        \n            \n                \n                How did you install <geth>? did you install it with the helper tools?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0coagmano\n                \n                Apr 1, 2021 at 8:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","735":"it seems you have ) in wrong place - it has to be after digeset - str(digest).startswith(prefix). But probably you need rather digest.hexdigest().startswith(). Use print() to see what you get with str(digest)  - it gives me string '<sha256 HASH object @ 0x7f1c7c740a90>' instead of expected value.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Apr 1, 2021 at 0:43\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                see tutorial again - it uses own function sha256() instead of standard hashlib.sha256() and this sha256() uses .hexdigest() at the end - before it will use digest.startswith(prefix)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Apr 1, 2021 at 0:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","736":"Add a comment\n                \u00c2\u00a0|","737":"Add a comment\n                \u00c2\u00a0|","738":"Add a comment\n                \u00c2\u00a0|","739":"Add a comment\n                \u00c2\u00a0|","740":"Add a comment\n                \u00c2\u00a0|","741":"Add a comment\n                \u00c2\u00a0|","742":"Hi! I know the post is old and you may already found a way to solve the problem, but I found this: github.com\/MetaMask\/metamask-extension\/issues\/\u00e2\u0080\u00a6, hope it helps :D\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0FORGISDELUXE\n                \n                Aug 29, 2021 at 17:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","743":"Add a comment\n                \u00c2\u00a0|","744":"Add a comment\n                \u00c2\u00a0|","745":"It seems like you're mixing up few different terms to<geth>er. Can you elaborate on what do you mean by the \"storage space\" and the \"<transactions> created by my smart contract\"? Do you have contract A calling contract B and need to store the returned values in contract A's storage (and calculate the returned data size beforehand)? Or are you talking about estimating the payload size (the data field) of a transaction calling a contract function? Do you need the calculation to be done on-chain or can it be off-chain?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 29, 2021 at 22:38\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes the payload size. I want to estimate how much space is used by my smart contract functions onchain. I don't want to do it onchain. I want to calculate it myself.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Haya Raed\n                \n                Mar 30, 2021 at 18:37\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","746":"Add a comment\n                \u00c2\u00a0|","747":"Add a comment\n                \u00c2\u00a0|","748":"pls post the error as text not on images\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Andr\u00c3\u00a9 Cl\u00c3\u00a9rigo\n                \n                Mar 29, 2021 at 1:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Andr\u00c3\u00a9Cl\u00c3\u00a9rigo I hope its fine now and thanks a lot.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ayoub Mafkoud\n                \n                Mar 29, 2021 at 1:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","749":"Looks like you are not using an Admin identity of the org you are using to create the channel.  It would help if you can provide more detail on the actual commands you are running.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gari Singh\n                \n                Mar 28, 2021 at 10:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hello sir, I edited my post. Now you can see all the snippets, if you want a particular snippet please let me know, I'll add that too.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MUKESH KUMAR BADIGINENI\n                \n                Mar 30, 2021 at 2:30\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","750":"Add a comment\n                \u00c2\u00a0|","751":"Add a comment\n                \u00c2\u00a0|","752":"Add a comment\n                \u00c2\u00a0|","753":"Could not reproduce your issue. 1) Copy-pasted the index.js and package.json. 2) Run npm i. 3) Replaced the address for a random address from the <blockchain> explorer. 4) Run node index.js. Output is balance: 0\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 25, 2021 at 9:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda try few times send node index.js per and you show this problem) if you tried once you dont see it...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Denis Deniben\n                \n                Mar 25, 2021 at 10:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                After multiple tries, I got the error. I don't know the solution right now, but it seems like a rate limit with incorrect response from the server (502 instead of 429).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 25, 2021 at 10:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda interesting...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Denis Deniben\n                \n                Mar 25, 2021 at 10:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","754":"Why is the second getBlockByHeight() returning a promise where there's nothing asynchronous in it?  Why doesn't it just return the value directly?  You seem to be using promises in lots of places for purely synchronous code.  That is an anti-pattern and just makes code more complicated than required.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jfriend00\n                \n                Mar 23, 2021 at 22:37\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                And, what exactly is the problem you want help with?  Your question title is a generic, non-specific title that doesn't say what the problem is, what the observed behavior is, what the expected behavior is, what debugging you've done and what you're learned during that debugging.  This question needs a lot more info before anyone can do anything but try to guess what you might mean by this.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jfriend00\n                \n                Mar 23, 2021 at 22:50\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                actually I need help with debugging it, everything just looks ok, where can I even start the debugging(in which method?)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mai mohamed \n                \n                Mar 23, 2021 at 22:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                First, you need to start and describe the problem.  We don't know where to look because we don't know what the problem is.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jfriend00\n                \n                Mar 23, 2021 at 22:57\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                In getBlockByHeight() in <blockchain>Controller.js, you are configuring a route for \/block\/height\/:height.  That will NOT handle a request for \/block\/0 - it's expecting \/block\/height\/0.  So, perhaps you're either requesting the wrong URL from the client or your server code is configuring the wrong route specification.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jfriend00\n                \n                Mar 23, 2021 at 23:13\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 3 more comments","755":"<hyperledger> Composer is depreciated long back and it's nowhere used. If you are new to HLF then start with the Fabric v2.2 LTS.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arijit Mahapatra\n                \n                Mar 23, 2021 at 7:39\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","756":"\"this toml is a virtual one\" - what do you mean here? There's some Cargo.toml file where you've placed dependency on Solana, right?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cerberus\n                \n                Mar 23, 2021 at 6:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Cerberus Modified to explain your question. There is a Cargo.toml in the root directory of Solana and I tried to modify that .toml.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jill Clover\n                \n                Mar 23, 2021 at 6:33\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                Will cargo update or deleting Cargo.lock help here? This should pull the newest compatible version.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cerberus\n                \n                Mar 23, 2021 at 8:09\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Cerberus No, it still pull the old one. I deleted the whole repo, deleted .lock and update.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jill Clover\n                \n                Mar 23, 2021 at 9:26\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                This might help: stackoverflow.com\/a\/70628855\/2420718\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Julian Espinel\n                \n                Jan 8, 2022 at 1:08\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","757":"Object.values(objName.texts)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marc Dix\n                \n                Mar 22, 2021 at 21:17\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                Object.keys(), Object.values(), and\/or Object.entries() might help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirko\n                \n                Mar 22, 2021 at 21:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","758":"Add a comment\n                \u00c2\u00a0|","759":"Looks good to me, issue is probably in your actual request. Can you post the request URI you are sending? And what is the response?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Andrew Young-Min Cho\n                \n                Mar 21, 2021 at 4:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","760":"Add a comment\n                \u00c2\u00a0|","761":"1\n            \n        \n        \n            \n                \n                Does your contract's balance is enough to send 3 times msg.value ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Emmanuel Collin\n                \n                Mar 19, 2021 at 8:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","762":"Because the pool of developers that know Raiden this well is limited to their internal team, it makes sense to ask the question from Raiden developers directly.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Mar 19, 2021 at 12:06\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes, thank you @MikkoOhtamaa I have created a corresponding GitHub issue\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tunji Abioye\n                \n                Mar 22, 2021 at 8:34\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","763":"Add a comment\n                \u00c2\u00a0|","764":"Add a comment\n                \u00c2\u00a0|","765":"Add a comment\n                \u00c2\u00a0|","766":"Add a comment\n                \u00c2\u00a0|","767":"Add a comment\n                \u00c2\u00a0|","768":"Add a comment\n                \u00c2\u00a0|","769":"CHeck developers.tron.network\/docs\/trongridjs.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Richard Rublev\n                \n                Mar 16, 2021 at 9:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I checked but I did not found anything for generating a mnemonic seed\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ADLZ\n                \n                Mar 16, 2021 at 11:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","770":"Add a comment\n                \u00c2\u00a0|","771":"Change the compiler version in the truffle-config.js file to match the one your are using in your smart contract.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Emmanuel Collin\n                \n                Mar 15, 2021 at 21:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I changed the compiler version in truffle-config and also the version of solidity in migrations.sol to pragma solidity ^0.5.0 , I don't have error no more, only warnings ! thanks for your help, merci!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luksssss\n                \n                Mar 16, 2021 at 10:55\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Great. Can you accept my answer plz. Thanks.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Emmanuel Collin\n                \n                Mar 16, 2021 at 11:00\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","772":"Add a comment\n                \u00c2\u00a0|","773":"Add a comment\n                \u00c2\u00a0|","774":"Add a comment\n                \u00c2\u00a0|","775":"Binance <blockchain>? I'm afraid your question doesn't make a lot of sense. Are you trying to get market information from Binance (e.g. order book, price, etc.), or get information regarding the BNB <blockchain>? To clarify in case my question doesn't make sense: Binance is an exchange that has its own cryptocurrency for fee purposes called BNB.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Felipe\n                \n                Mar 9, 2021 at 6:40\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for your reply. get information regarding the BNB <blockchain>?. Right. For example, I have a transaction hash 0xcda69cec49c4bb3085b9af5a1f8a62fd83a781c65c03a2fd918214f404263bd3. Is there any way to retrieve information about this transaction without bscscan or other indexers?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0airled\n                \n                Mar 9, 2021 at 6:59\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                You can probably use something like <python>-binance-chain.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Felipe\n                \n                Mar 9, 2021 at 7:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Oh. So they have separate APIs for account and <blockchain>. Make sense now. Thank you so much!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0airled\n                \n                Mar 9, 2021 at 7:10\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The linked project is an unofficial wrapper over the API that Binance exposes (just so you are aware). :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Felipe\n                \n                Mar 9, 2021 at 7:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","776":"Add a comment\n                \u00c2\u00a0|","777":"Add a comment\n                \u00c2\u00a0|","778":"Add a comment\n                \u00c2\u00a0|","779":"Add a comment\n                \u00c2\u00a0|","780":"Add a comment\n                \u00c2\u00a0|","781":"Add a comment\n                \u00c2\u00a0|","782":"Add a comment\n                \u00c2\u00a0|","783":"Add a comment\n                \u00c2\u00a0|","784":"1\n            \n        \n        \n            \n                \n                I'm experiencing this all the time now too.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0flcoder\n                \n                Mar 18, 2021 at 5:33\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                same issue here any solution found ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kemalony\n                \n                May 23, 2021 at 13:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                some issue. Also getting sometimes \"bad gateway\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Federico Caccia\n                \n                Jul 29, 2021 at 21:30\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","785":"Add a comment\n                \u00c2\u00a0|","786":"Why do you create an entirely new Scanner to read input inside of your conditionals? You should continue to use the previously created Scanner object you created. Also, .nextInt() does not consume a newline character \\n. If your line contains a newline character, you need to consume that before you can keep reading by calling .nextLine() after .nextInt().\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Brendan Lesniak\n                \n                Mar 1, 2021 at 19:08\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Further, can you be more specific about your issue? What do ServerManager and ClientManager contain? Are there are stack traces? While not here to debug for you, more detail helps everyone.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Brendan Lesniak\n                \n                Mar 1, 2021 at 19:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hey @BrendanLesniak, thanks so much for ur answer.  Alright, so this project is basicly what i want to try from a guy who uploaded it on github, and it has no discription in it on how to run it. Here's the link : github.com\/hardik22317\/<blockchain>-based_E-Voting What i want to do is test it out. I would like to ask u if u have like a few minutes to check it out and actually run the app and u will conclude what i'm telling, once u want to Cast a Vote, it just doesn't work.  Thanks a lot.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TheRealP\n                \n                Mar 1, 2021 at 19:32\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","787":"Add a comment\n                \u00c2\u00a0|","788":"It was failing for me because of proxy. After removing that it worked..\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Krishna\n                \n                Jan 18, 2022 at 10:35\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","789":"Add a comment\n                \u00c2\u00a0|","790":"Add a comment\n                \u00c2\u00a0|","791":"Add a comment\n                \u00c2\u00a0|","792":"Add a comment\n                \u00c2\u00a0|","793":"What if you repeat your code 1000 times in a loop?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mkrieger1\n                \n                Feb 22, 2021 at 19:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                i'm gonna try some new way to solve puzzle.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aydogan Sahin\n                \n                Feb 22, 2021 at 19:59\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You don't need a \"new way\".  Your way works fine.  You just need to call your function in a loop 1000 times, as mkrieger1 suggested.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tim Roberts\n                \n                Feb 22, 2021 at 20:39\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                please can you show me to add this function?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aydogan Sahin\n                \n                Feb 22, 2021 at 20:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You already have it, it's called getWif.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mkrieger1\n                \n                Feb 22, 2021 at 20:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","794":"Add a comment\n                \u00c2\u00a0|","795":"Add a comment\n                \u00c2\u00a0|","796":"Add a comment\n                \u00c2\u00a0|","797":"Add a comment\n                \u00c2\u00a0|","798":"Add a comment\n                \u00c2\u00a0|","799":"Use <web3>.py library: <web3>py.readthedocs.io\/en\/stable\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 19, 2021 at 10:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","800":"Add a comment\n                \u00c2\u00a0|","801":"Add a comment\n                \u00c2\u00a0|","802":"Add a comment\n                \u00c2\u00a0|","803":"Add a comment\n                \u00c2\u00a0|","804":"Are there any errors in the peer logs while you are trying to connect?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gari Singh\n                \n                Feb 16, 2021 at 9:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Server TLS handshake failed in 10.119111ms with error EOF server=PeerServer remoteaddress=<ip of the nodejs pod>\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0SOUPTIK BANERJEE\n                \n                Feb 16, 2021 at 13:19\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                This means the client is terminating the connection which usually means a TLS verification issue.  Looks like you have the right host override, so the issue is with PKI.  Can you try combining the intermediate and root CA into a single file? The first block in the file should be the intermediate CA and the second block should be the root CA\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gari Singh\n                \n                Feb 16, 2021 at 18:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hey @GariSingh Your suggestion got rid of the connection error messages. Now it just gives 1 line error \"Failed to evaluate transaction: Error: Committer must be connectable\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0SOUPTIK BANERJEE\n                \n                Feb 19, 2021 at 11:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","805":"Add a comment\n                \u00c2\u00a0|","806":"Add a comment\n                \u00c2\u00a0|","807":"did you check in documentation for pybitcointools if there is something about shorter addresses ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Feb 11, 2021 at 1:20\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I don't know if it is most popular library but it is very old - last version was released in 2014 - see on pypi. And maybe it doesn't work with shorter addresses. On its repo on GitHub you can see link to newer version but created by different person and you have install it from GitHub.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Feb 11, 2021 at 1:23\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @furas I have build my code following the book \"Mastering bitcoin\" where this library was recommended. Unfortunately pybitcointools itself is very poorly documented. I will try the Gitlab version for the very unlikely case that there is just a bug in the version of pybitcointools I have.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DonkeyKong\n                \n                Feb 11, 2021 at 19:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                if there is no documentation then you may try to read source code - maybe there will be comments or docstrings - or you can see how function works and what other functions it uses, etc.. Eventually you may try to use help(command) to see docstrings without reading source code.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Feb 11, 2021 at 19:38\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                unicode strings must be encoded in utf-8 can means this code was created for <python> 2 or someone forgot encode it in one place. OR maybe it runs different code for shorter address and only this code has this mistake (maybe nobody convert this part for <python> 3).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Feb 11, 2021 at 20:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 4 more comments","808":"Add a comment\n                \u00c2\u00a0|","809":"Add a comment\n                \u00c2\u00a0|","810":"Add a comment\n                \u00c2\u00a0|","811":"Add a comment\n                \u00c2\u00a0|","812":"Add a comment\n                \u00c2\u00a0|","813":"Add a comment\n                \u00c2\u00a0|","814":"Add a comment\n                \u00c2\u00a0|","815":"Add a comment\n                \u00c2\u00a0|","816":"Your error states 400: Bad Request it means that your SDK is doing some wrong request to server. It usually means that SDK is outdated. Have you checked if this sdk was recently developed in last month?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arty\n                \n                Feb 7, 2021 at 11:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Latest version. I think Bad Request is much more related to the fact that the argument \"master_derivation_key\" is completely ignored when parsing \"query\" at server side, thus leading to try to create a new wallet instead of recovering it as suggested by the documentation.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Emisilve86\n                \n                Feb 7, 2021 at 11:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Have you also tried doing any non-working SDK command by hand through doing low level HTTP request? E.g. using requests library. It can be the case that online documentation about API is wrong. Then the only way to fix a problem is to contact API developers support.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arty\n                \n                Feb 7, 2021 at 11:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Not yet done. Let's say, this work is not so critical right now, there's not an approaching deadline, so I preferred to query first the stack-overflow community to verify there's anyone else who ran into the same problem and to determine in primis if it is a bug in the SDK. Anyway, I'll surely do that try at a later time so that I will be able to reply to you with an answer and to contact API developers.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Emisilve86\n                \n                Feb 7, 2021 at 13:19\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                If you made all params exactly according to REST API doc then definitely there is a bug either in their documentation or API code implementation. Usually cryptocurrency developers have active support and reply frequently.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arty\n                \n                Feb 7, 2021 at 15:17\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 3 more comments","817":"Add a comment\n                \u00c2\u00a0|","818":"Add a comment\n                \u00c2\u00a0|","819":"Do you have any special requirements or you just want to deploy to check your code? Did you see this guide?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0PjoterS\n                \n                Feb 5, 2021 at 11:57\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi thanks for replying, I have a code that are running on docker compose in which I have org1,org2 ,Orders and 4 peers. And now the issue is they have created the peer link like peer0.org1.<blockchain>.com and when I am running this in kubernetes I can not mention this dns name in manifest because of this \". dot\" I need to use \" hyphen -\" in the dns and we have TLS certificate on that I am getting an error. So if you have any idea how will I do this in kubernetes do let me know\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0shubham kamboj\n                \n                Feb 6, 2021 at 12:05\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","820":"Likely the transaction was not accepted to the network. The reasons could include too low gas price, bad nonces, et. If you run your own Ethereum node like <geth> in debug mode you can see from <geth> logs why they did not accept your transaction.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 5, 2021 at 9:42\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                this my params 'nonce': w3.eth.getTransactionCount(account_address),  gas = cont.functions.my_function(...).estimateGas() + 10000 I'm using infura. When I'm running the same code twice I get  ValueError: {'code': -32000, 'message': 'already known'}\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gjivanya\n                \n                Feb 5, 2021 at 10:44\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You cannot reuse the same nonce twice.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 5, 2021 at 14:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","821":"Tag your question with the database you are using.  The correct way to store dates is using the native date\/time data types in your database.  Why are you not using them?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gordon Linoff\n                \n                Feb 5, 2021 at 2:59\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @amateur_coder thanks! I'm getting this error:   Error running query: column \"month\" does not exist LINE 3: SELECT AVG(price) as \"price\", DATEPART(month,minute) as mont... ^\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Eva Wu\n                \n                Feb 5, 2021 at 3:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @GordonLinoff , sorry i don't know what database i'm using -- but i'm running this on duneanalytics.com\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Eva Wu\n                \n                Feb 5, 2021 at 3:03\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please use text or table markdown to display tables. here is ASCII table for easier generate proper table format.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0T. Peter\n                \n                Feb 5, 2021 at 3:50\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","822":"Add a comment\n                \u00c2\u00a0|","823":"1\n            \n        \n        \n            \n                \n                When you \"convert\" do you just use the same public key for both chains or something else? I know that Ethereum public address is not a full public key, only part of it, making it not contain enough data to simply remap\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 4, 2021 at 13:19\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MikkoOhtamaa I would assume that I dont since I only have the address but it is possible for users to manually export their full private key?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Afeez Aziz\n                \n                Feb 5, 2021 at 0:31\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Metamask integrations are coming. Legder is live, and AFAIK trezor cannot support the key format without major work that no one is doing at the moment (that I know of)   What you want to do is derive a public key from a shared seed or at least a shared private key.subkey is the tool for you, yes :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Feb 5, 2021 at 6:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Users can export their seed, BUT WITH NOTE that they must know what they are doing with regards to exposing that seed on a new application. For example, if you wanted to, you could use the same 12 words in metamask now, or any BIP32\/39\/42 compliment algorithm to get a valid public key from it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Feb 5, 2021 at 6:31\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @NukeManDan so are you saying at this moment, there is no way for me to convert ethereum public address to polkadot and vice versa without users using their private key?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Afeez Aziz\n                \n                Feb 9, 2021 at 4:31\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","824":"Add a comment\n                \u00c2\u00a0|","825":"Add a comment\n                \u00c2\u00a0|","826":"Add a comment\n                \u00c2\u00a0|","827":"Add a comment\n                \u00c2\u00a0|","828":"Add a comment\n                \u00c2\u00a0|","829":"Add a comment\n                \u00c2\u00a0|","830":"Add a comment\n                \u00c2\u00a0|","831":"Add a comment\n                \u00c2\u00a0|","832":"Add a comment\n                \u00c2\u00a0|","833":"Add a comment\n                \u00c2\u00a0|","834":"Add a comment\n                \u00c2\u00a0|","835":"How do you run the node? Are you compiling the node with --release flag?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tomasz Waszczyk\n                \n                Jan 28, 2021 at 9:31\n            \n        \n    \n    \n        \n            \n                    4\n            \n        \n        \n            \n                \n                Don't include screenshots of text. Paste the text into your question, it's much easier to read and will help make the important parts of your question searchable.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Peter Hall\n                \n                Jan 28, 2021 at 9:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @TomaszWaszczyk, Yes, we build with --release flag, .\/target\/release\/substrate --chain .\/customSpecRaw.json --ws-port 9944  --rpc-port 9933  --validator  --rpc-methods=Uafe  --listen-addr \/ip4\/someip\/tcp\/30333 --name MyNode01 --tmp --unsafe-ws-external --unsafe-rpc-external --rpc-cors '*'\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Daelon\n                \n                Jan 28, 2021 at 9:47\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","836":"Add a comment\n                \u00c2\u00a0|","837":"1\n            \n        \n        \n            \n                \n                could you share error which you are getting?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Abhirock\n                \n                Feb 9, 2021 at 13:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I've updated the question with a screenshot of the error\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zoha Malik\n                \n                Feb 10, 2021 at 6:32\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                after add  \"allowremove: true\" did you restart the fabric-ca server?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Abhirock\n                \n                Feb 10, 2021 at 7:46\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes I even deleted all the certificates & artifacts and then again created them and started the fabric-ca-server but the same error showed..\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zoha Malik\n                \n                Feb 10, 2021 at 9:21\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                may I know are you implementing test-network?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Abhirock\n                \n                Feb 10, 2021 at 10:01\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","838":"Add a comment\n                \u00c2\u00a0|","839":"Add a comment\n                \u00c2\u00a0|","840":"Feel free to pick your Ethereum API service provider or run your own node: ethereumnodes.com\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 25, 2021 at 8:39\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","841":"Hi and welcome to SO ! Please try to include your relevant code as actual text in the post, not just as image.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Pascal Lamers\n                \n                Jan 24, 2021 at 18:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","842":"Add a comment\n                \u00c2\u00a0|","843":"Add a comment\n                \u00c2\u00a0|","844":"Add a comment\n                \u00c2\u00a0|","845":"Add a comment\n                \u00c2\u00a0|","846":"Add a comment\n                \u00c2\u00a0|","847":"ulimit -aH prints h\u00d0\u00b0rd limits, the ceilings, not actual limits. Can you please provide the output of command ulimit -n. Also what s the number files in db directory? Total size of the files does not matter.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yuri Ginsburg\n                \n                Jan 23, 2021 at 19:38\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for your reply, it was really helpful. I have additional question. Do you know how to kill safely Esplora - Electrs backend? Is Ctrl + C proper solution? If so, how to start it correctly again (by correctly I mean using indexes that were just built and not starting the process from scratch) ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arek63\n                \n                Jan 26, 2021 at 7:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","848":"Add a comment\n                \u00c2\u00a0|","849":"Add a comment\n                \u00c2\u00a0|","850":"Add a comment\n                \u00c2\u00a0|","851":"1\n            \n        \n        \n            \n                \n                the component that is sending the transaction? That depends. Are you sending it in raw format from the backend or are you sending it using <geth> by unlocking the account? If it is the first, then its the backend, if it is the second, then its <geth> that sends the Tx\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 22, 2021 at 13:29\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Nobody captures the events. The events are stored in the Receipts. You can get all the receipts of the block and scan them to pick the ones you are interested in. You can read the events over and over again, so no need in any capturing. The only thing you have to validate when reading this way is that parent hash of the block matches the hash of previous block, so you are protected against the chainsplit  (i.e. chain reorg)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 22, 2021 at 13:35\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Nulik Thank you for your answer. However, I need to write the steps on the individual arrows, so I'm in trouble because I can't find a way to do it correctly\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 23, 2021 at 13:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","852":"the only way to change data on the <blockchain> is by sending transaction, because only by detecting your signature we know who is changing the state\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 21, 2021 at 11:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                the inmutable is only the binary code of the contract. the storage of the contract is mutable\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 21, 2021 at 11:55\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","853":"Add a comment\n                \u00c2\u00a0|","854":"Add a comment\n                \u00c2\u00a0|","855":"\"I am asking for expert's advice, what am I doing wrong?\" \u00e2\u0080\u0094 using a <blockchain>?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0L3viathan\n                \n                Jan 18, 2021 at 18:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I ran this code and got the same error message but 3 lines up: codecs.decode(<blockchain>Object['previousHash'])[::-1] + . try changing 'previousHash':'aa11...', to 'previousHash':b'aa11...',\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Roy Cohen\n                \n                Jan 18, 2021 at 19:25\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @RoyCohen thank you for your advise. I changed it to Byte (Adding a \"b\" in front of the number) but it is now saying \"TypeError: can't concat str to bytes\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0IronFist\n                \n                Jan 19, 2021 at 10:55\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","856":"How do you check if your tranasction completes and \"shows up\"?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 18, 2021 at 9:31\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MikkoOhtamaa, it'd run my tests (with web.py) to create fake <transactions> with my smart contract, than check all the <transactions> my smart contract had received at the website I linked above, but the problem is the disproportion between <transactions> sent, and <transactions> that seem to have successfully \"shown up\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Meschdog18\n                \n                Jan 18, 2021 at 14:11\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","857":"Add a comment\n                \u00c2\u00a0|","858":"1\n            \n        \n        \n            \n                \n                The amount is the sum of all <transactions>.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ocrdu\n                \n                Jan 17, 2021 at 14:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","859":"From what I understand, it is not permissionless, so not very appealing to a public network where it must be trustless.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0JBaczuk\n                \n                Jan 17, 2021 at 15:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","860":"there can't be multiple wallets from the same private key, you got something wrong.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 17, 2021 at 19:20\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                if the contracts of the tokens you are going to send support BatchSend method, this is the one you have to use to save gas. Otherwise, every new transaction will use 20,000 gasd units, thats the overhead for sending the tx.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 17, 2021 at 19:22\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","861":"2\n            \n        \n        \n            \n                \n                Where you able to figure this out? I am having the same issue\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Layinka\n                \n                May 13, 2021 at 14:12\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","862":"you are missing source code module called truffle-hdwallet-provider-privkey , verify you have the files in the correct directory\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 15, 2021 at 19:46\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                i have installed using npm install @truffle\/hdwallet-provider It installed Successfully. But I encountered a new problem while deploying\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bsc Talk\n                \n                Jan 15, 2021 at 20:38\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                pasteboard.co\/JJNSH3F.png pasteboard.co\/JJNTctb.png\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bsc Talk\n                \n                Jan 15, 2021 at 20:48\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","863":"Maybe running a mining pool by higher power than attacker poser solve your problem\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lessmore\n                \n                Jan 15, 2021 at 14:44\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm actually mining using cpu and I don't have any GPU, even renting is quite expensive, how about a higher coinbase maturity and higher required confirmation number up to 50 ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zack Tim\n                \n                Jan 15, 2021 at 18:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Maturity not solve your problem\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lessmore\n                \n                Jan 15, 2021 at 22:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                then what to adjust that would help in your opinion\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zack Tim\n                \n                Jan 16, 2021 at 12:19\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","864":"The linked article is very, very, bad example and exactly what should not be done in <cryptography>\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 15, 2021 at 9:35\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                the Miner of the block can see your random number , and re-execute the transaction with that number, taking all the rewards of the transaction\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 15, 2021 at 19:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","865":"Add a comment\n                \u00c2\u00a0|","866":"Add a comment\n                \u00c2\u00a0|","867":"Add a comment\n                \u00c2\u00a0|","868":"Add a comment\n                \u00c2\u00a0|","869":"Thank you for providing a detailed explanation of your problem. Are you trying to write to a system or root folder? What happens if you change the datadir to a folder under you user directory \/Users\/<your_usr_folder>\/<blockchain>\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jwjhdev\n                \n                Jan 13, 2021 at 13:22\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Did you really create a folder with the path \"\/path\/to\/<blockchain>\/<blockchain>\"?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 13, 2021 at 17:46\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @jwjhdev, i totally mist that one, the path name was referring to something that doesn\u00e2\u0080\u0099t exist, after redirecting it to the correct path name it suddenly started working\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Matte\n                \n                Jan 14, 2021 at 12:05\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MadJackal, no i didn't name it like  obliviously I but the developer of this code wrote it down to indicate that users should change the path and redirect it to the correct directory so i totally missed it :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Matte\n                \n                Jan 14, 2021 at 12:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                anyone have any idea how to solve the second error message?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Matte\n                \n                Jan 14, 2021 at 19:19\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","870":"Add a comment\n                \u00c2\u00a0|","871":"Add a comment\n                \u00c2\u00a0|","872":"Add a comment\n                \u00c2\u00a0|","873":"2\n            \n        \n        \n            \n                \n                Generally speaking, in Java it is better to define a class if you know what the field names and types all are.  It is more efficient, uses less space ... and it is compile time type safe.  Defining a class (or two) to represent the above should be straight-forward, though it is a little unclear (to me) what the image actually means.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Stephen C\n                \n                Jan 13, 2021 at 6:10\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hashmaps are a good fit for applications where the keys are not known at compile time.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Stephen C\n                \n                Jan 13, 2021 at 6:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","874":"Did you ever found a way to do it? Looking for the same thing...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joost Pielage\n                \n                Feb 26, 2021 at 15:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @JoostPielage, There is no way as of now, maybe u can checkout  cex io aggregator, its premium, but a little costly though. I am not sure it support this\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ajay Tom George\n                \n                Feb 26, 2021 at 18:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","875":"Add a comment\n                \u00c2\u00a0|","876":"Add a comment\n                \u00c2\u00a0|","877":"whats the error msg you are getting?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 7, 2021 at 13:44\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                it gives an error of invalid block hash.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Waleed Shafiq\n                \n                Jan 7, 2021 at 13:48\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                it is not possible, you can't send a Tx to the <blockchain> and break the whole net.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 7, 2021 at 13:55\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","878":"Add a comment\n                \u00c2\u00a0|","879":"Add a comment\n                \u00c2\u00a0|","880":"Add a comment\n                \u00c2\u00a0|","881":"can anyone help with it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cherry\n                \n                Jan 6, 2021 at 10:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Is this Ubuntu on Windows? WSL?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Raman Sailopal\n                \n                Jan 6, 2021 at 11:17\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @RamanSailopal I am using Ubuntu 18.04 LTS. so ubuntu on Windows\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cherry\n                \n                Jan 6, 2021 at 11:27\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","882":"please anyone help me with it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cherry\n                \n                Jan 6, 2021 at 11:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Did you write any code to get that or just run the jar file?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tomer Shetah\n                \n                Jan 6, 2021 at 11:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @TomerShetah  after changing the coin name I tried to install deb file :  command: sudo dpkg -i *.deb. After installing it gave me the .jar file and i tried that jar file with application.conf\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cherry\n                \n                Jan 6, 2021 at 11:22\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","883":"just download the files at Github, compile, and send the transaction   to nil address\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 5, 2021 at 23:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                github link please\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0WAQAS WAHID\n                \n                Jan 7, 2021 at 6:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                its the third row in SERP of Google\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 7, 2021 at 13:41\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","884":"Add a comment\n                \u00c2\u00a0|","885":"couchdb represents the latest state value as statedb and belongs to the ledger. For detailed operation process, refer to\/analyze documents and code. In 2.2, the lifecycle of chaincode was changed, but the transaction flow is the same as in version 1.4. In addition, the transaction flow is naturally the same regardless of the chaincode language.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0myeongkil kim\n                \n                Jan 5, 2021 at 9:00\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","886":"Add a comment\n                \u00c2\u00a0|","887":"You probably need to provide the key as a post method parameter.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mackorone\n                \n                Jan 3, 2021 at 20:48\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                how \/? you have a sample?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alex\n                \n                Jan 3, 2021 at 20:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","888":"nothing is guaranteed. if you have more hashing power, you could make your own chain longer and apply the 51% attack.  There is a term called Finality which attempts to improve that a block isn't rewriten after it is created. So far no <blockchain> can guarantee finality. To guarantee finality you need authority and there is no authority in public <blockchain>s. Your question is more on consensus algorithms, so I recommend checking this subject\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 3, 2021 at 15:09\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","889":"1\n            \n        \n        \n            \n                \n                you have tagged several items, however it may relate to those topics. In addition, you need to elaborate your question as if a javascript programmer may don't know what is <blockchain>. I guess your question should be in javascript, you may pass your logic in the filter\/map method in javascript!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ebrahim\n                \n                Jan 1, 2021 at 17:44\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I edited the question and removed JavaScript tag to protect the question\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 2, 2021 at 8:50\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                okay mikko, thanks\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rashiq Kodakkad\n                \n                Jan 19, 2021 at 7:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Why not just keep an array to track the keys? Only append if not in map?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ystark\n                \n                Sep 3, 2021 at 7:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","890":"Add a comment\n                \u00c2\u00a0|"},"Answer1":{"0":"You can do this by this way at every transaction with <web3>js\ncontract.doSomething.sendTransaction(data, {gasPrice: <web3>.toWei(10, 'Gwei')}, callback...);\nor I dont understand question","1":"fabric-ca doesn't use password authentication (which is what you are trying to do), it uses token authentication created from an enrolled identity via it's certificate and private key. You need to first enroll your bootstrap identity which looks to be username in your above example, then use that enrolled identity to perform fabric-ca registrar tasks.\nThis section in the docs provides some more detail https:\/\/<hyperledger>-fabric-ca.readthedocs.io\/en\/release-1.4\/users-guide.html#enrolling-the-bootstrap-identity about enrolling then goes on to show examples of performing other taks once you have enrolled the bootstrap identity","2":"The world state is basically just a resulting state of all the previous <transactions>. By deleting a key-pay in Chaincode you just perform a transaction that tells that \"now there is no value stored in the state by this key\" but all the previous <transactions> will still be there, it's basically the same as if you put let's say an empty string in some Ethereum mapping by some key.","3":"I run your code and got this issue:\nconstructor(){\n       manager = msg.sender;\n    }\n\nmsg.sender should be payable. as far as I know, you do not need to explicitly declare that it is payable but since in enter function you have this line:\nplayers.push(payable(msg.sender));\n\nIn typed strict languages, types should match. I run your solidity code and got this error:\n\nif you change constructor to this :\n constructor (){\n        manager = payable(msg.sender);\n    }\n\nNow it works","4":"I've found a working code that solved my issue. I am not sure what was the issue as I'm not very experienced with js, but the following code lets me connect to phantom.\nI found this on StackOverflow on a similar thread, although I belive the original answer is missing some brackets.\nSolana : Adding Sollet \/ Phantom Wallet Connect to my website - Steps?\nconst getProvider = async () => {\n    if (\"solana\" in window) {\n      await window.solana.connect(); \/\/ opens wallet to connect to\n\n      const provider = window.solana;\n      if (provider.isPhantom) {\n        console.log(\"Is Phantom installed?  \", provider.isPhantom);\n        return provider;\n      }\n    } else {\n      document.write('Install https:\/\/www.phantom.app\/');\n    }\n};\n\nwindow.onload = () => {\n\n    getProvider().then(provider => {\n        console.log('key', provider.publicKey.toString())\n    })\n    .catch(function(error){\n        console.log(error)\n    });\n\n}","5":"I think first error is when you build a transaction, you need to pass an object:\n tx_hash = contract.functions.mintTo(<web3>.toChecksumAddress('0x466086b7002d6836c2E4Ca05472deD70A7f5213b')).buildTransaction({\n\n        \"chainId\": chain_id,\n        \"gasPrice\": w3.eth.gas_price,\n        \"from\": whatever_address,\n        \"nonce\": nonce_value,\n})\n\nchain Ids\nNETWORK_CHAIN_IDS = {\n  1: \"Ethereum Main Network\",\n  3: \"Ropsten Test Network\",\n  4: \"Rinkeby Test Network\",\n  5: \"Goerli Test Network\",\n  42: \"Kovan Test Network\",\n  56: \"Binance Smart Chain\",\n  1337: \"Ganache\",\n};","6":"Immutability applies only to data placed directly in the <blockchain>, that is, to transaction data. In Ethereum, the values of smart contract variables are determined specifically by each node when processing a transaction on its EVM instance.\nAs for, for example, <hyperledger> Fabric, the final results of calculations are also transmitted along with the transaction, and the node simply records them in its state database. But at the same time, he himself determines whether to accept or not to accept this transaction.","7":"how the owner.call() will send ether to receiver since receiver wasn't set to any address\n\nIt sends an internal transaction to the owner address.\nIf you want the user to specify a custom receiver, you can define the receiver address as a param of the function:\nfunction transferEther(address receiver) external payable {\n    payable(receiver).call{value: msg.value}(\"\");\n}\n\n\nMind that on the first line of the transferEther() function body, you're owerwriting the existing owner value with msg.sender (the user executing the function). Which effectively just sends the funds back to the sender (plus sets them as the owner).\naddress payable public owner;\n\nfunction transferEther() external payable {\n    \/\/ overwrite the existing `owner`\n    owner = payable(msg.sender);\n\n    \/\/ ...\n\n    \/\/ send ETH to the (new) `owner`\n    owner.call{value: msg.value}(\"\");\n\nYou most likely wanted to omit the owner = ... assigning.","8":"The answer was surprisingly easy which is not surprising given the lack of documentation \u00f0\u009f\u0098\u008b. I was trying to multisign a tx and one of the signers was using the wrong ledger to sign his transaction.\nBelieve it or not but you can specify which signer from the key ring will sign, then take the wrong ledger and sign. You won\u00e2\u0080\u0099t get an error message.","9":null,"10":"It is not clear if you are asking in general, or how is this implemented in some established cryptocurrency, so I will try to answer from both sides.\nAt least when Bitcoin and Ethereum are explained from a theoretical point, only an increment to the nonce is mentioned. I am not familiar with their source code, but I would say that the timestamp is not always recomputed, as this would mean making a system call for each attempt to solve the Proof of Work puzzle, making the algorithm slower.\nA similar remark is valid for your general case. You can recompute the timestamp, but you don't have to. This will not affect your probability of solving the puzzle. If you do recompute it, the algorithm will be slower, but the block will have a timestamp that is more accurate (to its exact mining time).\nUPDATE:\nI was unable to locate the exact place in the Bitcoin code base, but I am now certain that the timestamp does not change each time, since it would be a pretty meaningless operation that would just slow down the search for solution to the mining puzzle. The timestamps of blocks in the <blockchain> are not required to be in the strictly increasing order. This is due to the fact that the network is distributed throughout the world, and there is no designated time zone which is to be used for timestamps.\nBasically, a timestamp just needs to be \"not too old\", or if you want it more precisely: \"a timestamp is accepted as valid if it is greater than the median timestamp of previous 11 blocks, and less than the network-adjusted time + 2 hours\". For more details, here are some resources:\nhttps:\/\/bitcoin.stackexchange.com\/questions\/915\/why-dont-the-timestamps-in-the-block-chain-always-increase\nhttps:\/\/medium.com\/all-things-ledger\/decoding-the-enigma-of-bitcoin-mining-f8b2697bc4e2\nNow, it's hard to say for all popular cryptocurrencies, but at least Bitcoin, Ethereum and other ones whose mining process works in the same fashion do not increase the timestamp before every hash recalculation.","11":null,"12":"The basis for selecting a particular tool for simulation depends on which performance parameters you are interested in to improve or study.\nBasically we can classify the performance parameters as related to networking, computing ( memory is included here).\nThe simulation tools for each of these categories are different.\nFor networking related projects we use networking simulators like ns3, OMNET++,.etc.\n\nhttps:\/\/github.com\/ChuksXD\/VANET-<blockchain>\n\nThis is vanet security project based on <python> and <hyperledger>.\n\nhttps:\/\/github.com\/mmodenesi\/omnetpy\/\n\nThis is OMNET++ supplemented with <python> ( for non C++ programmers). Here you need to develop your own <blockchain> network core using <python>.","13":"Your contract has a constructor and expects an argument.\nconstructor(string memory initialMessage) public {\n        message = initialMessage;\n    }\n\nSo when you deploy it you have to pass an argument.\nconst Inbox = artifacts.require(\"Inbox\");\n\nmodule.exports = function (deployer) {\n  \/\/ passing an argument \n  deployer.deploy(Inbox, \"myInitialMessage\");\n};","14":"I am not a crypto expert, but the difficulty is calculated using the bits field in the block header, not the block address hash. So you have to get block header querying https:\/\/<blockchain>.info\/rawblock\/<block_hash> (see https:\/\/www.<blockchain>.com\/api\/<blockchain>_api), unpack the content of the bits and calculate current_target and current difficulty.\nBlock difficulty is recalculated only at blocks with height \/\/ 2016 == 0.\nSo there is no need to query each and every block generated between two dates but only each 2016th + 2.\nAlso, please note that list_block_adress contain time in descending order.","15":"They duplicate some of the raw <blockchain> data and aggregations of this data in their own searchable databases.\nExample:\n\nEach token mint emits a Transfer() event log with params of the token sender (0x0 in case of a token mint), receiver, and the token ID.\nThere is a standardized function that each NFT collection can implement to return the token metadata - name, description, and image URL - in a standardized output format.\nA marketplace subscribes to events of newly minted tokens (usually only on their users' collections), then queries the metadata of the newly minted token (by its ID available from the event log), and stores the metadata in their own searchable database (e.g. ElasticSearch).","16":"You can do a deployment transaction from frontend using <web3>.js or ethers.js library. How to deploy a contract using these libraries, please refer to the documentation of deploy function.","17":"In your docker-compose.yaml, the volume mounts for the MSP and TLS folders appear to be incorrect.  The compose file is mounting \"..\/certs\/msp\" (and tls) into the peer container, which is reading the certificates from \/etc\/<hyperledger>\/fabric\/msp.  In your directory listing above, the org2 assets do not contain the msp and tls certificates, which is likely causing the error above.\nDouble-check that the output of the cryptogen and\/or CA output path aligns with the volume mount in your docker compose file.  See the sample at fabric-samples\/test-network\/docker\/docker-compose-test-net.yaml for an example of how tls\/msp certificates can be linked up with the output of a cryptogen command.\nAlso I noticed from your compose descriptor that you are running a slightly out of date revision of fabric (2.2).  Please consider upgrading to the new gateway client application release 2.4.1, as the programming model for both chaincode and client \/ application development has been greatly simplified.  In addition, please check out the new test-network for Kubernetes (fabric-samples\/test-network-k8s) as it provides a more detailed explanation and realistic usage of CAs when setting up a Fabric network.","18":"Mount a folder\/files on an EC2 instance to a pod running in EKS is not supported. For your use case, you can easily share folder\/files using EFS if not S3. If you are only allow to do pod to EC2 communication, you need a way for these resources to reach each other either by public IP if not VPC peering. Then you can run sftp, scp... any kind of off the shelf file sharing software you knew best for file exchange.","19":"In general, you can run a full node of NEAR plus Aurora RPC alongside it. The latter one is here: https:\/\/github.com\/aurora-is-NEAR\/aurora-relayer.\nHowever, the best way to run a full node can be found at https:\/\/github.com\/aurora-is-near\/partner-relayer-deploy. It is installed and deployed by a single command. The database is restored from the dump. It's the combo of NEAR Core and Aurora relayer, which increases the efficiency of the node.","20":"You have to run the substrate node using --rpc-cors all option. Please note that substrate chains don't expose websocket connections to the public internet without some hacking. I am assuming your question asks how to connect a substrate node running on a remote server to your local pc front end. If that's right let's continue:\nhttps:\/\/wiki.polkadot.network\/docs\/maintain-wss\nDescribes the entire process. You need to install NGINX, configure \/etc\/nginx\/nginx.conf and within the http code block insert the mentioned code, with proper variable replacements. Then generate a self-signed SSL certificate, and open port 9944 and 443 on your remote machine. Next visit the machine with https:\/\/IP:443 to whitelist that site, and finally connect to your substrate node with a local installation of polkadot-js-apps. You cannot connect it using the online polkadot.js explorer , so you must use a local connection. And that should get you up and running.","21":"1) payable it's a modifier, so you have to write after \"public\"\n`function sendToWinner() public payable onlyOwner {}`\n\n2) don't use .transfer, use call{value: amount}(\"\") instead.\nso it will be:\nfunction sendToWinner() public payable onlyOwner {\n        uint8[100] memory participatorsRates;\n        uint8 rate;\n        uint8 participatorsRatesIndex=0;\n        for(uint8 participatorIndex = 0; participatorIndex<participators.length; participatorIndex++){\n            rate = uint8(balances[participators[participatorIndex]]*100\/pot);\n            for(; participatorIndex<rate ; participatorsRatesIndex++){\n                participatorsRates[participatorsRatesIndex] = participatorIndex;\n            }\n            balances[participators[participatorIndex]]=0;\n        }\n        uint8 winningParticipatorIndex = participatorsRates[random()];\n        (bool success, ) = payable(participators[winningParticipatorIndex]).call{value:pot}(\"\");\n        require(success, \"Transfer failed.\");\n        \n    }\n\nsee:\nIs transfer() still safe after the Istanbul update?\nhttps:\/\/diligence.consensys.net\/blog\/2019\/09\/stop-using-soliditys-transfer-now\/\n3) be sure to have enough balance","22":"I was able to resolve this error by reverting to earlier versions of solana-cli and anchor-cli\nsolana-cli 1.8.0 (src:4a8ff62a; feat:1813598585)\nanchor-cli 0.18.2\nrustc 1.57.0 (f1edd0429 2021-11-29)\n\nI also shared the above solution in this related github issue\nOne guess I have is that ExitStatus(unix_wait_status(256)) (which was in my error logs) could be a \"time out error\" from waiting too long due to slower deployment validation.\nI did notice my deployments using later versions (solana-cli 1.9.1, anchor-cli 0.20.1) being significantly slower, especially for larger programs (my small program deployments were still working fine). These were the versions that showed similar \"msg\" logging as OP.\nUPDATE:\nNowadays, my most fool proof solution is to run the snippet below before deployments\nsh -c \"$(curl -sSfL https:\/\/release.solana.com\/v1.8.13\/install)\"","23":"Assuming it's the SafeMath library function add(), it contains an assert() condition in case of integer overlow. If the claimed[msg.sender] value overflows, it throws an exception, and an uncaught exception causes the transaction to revert.\nSo if the transaction executing this line doesn't revert (assuming there's no try\/catch block), the line was executed successfully.","24":"When you add liquidity on uniswap v3 an NFT is minted and sent to your address. The Transfer event is emitted which contains the tokenId. You can see an example here on etherscan.\nTo remove the liquidity, you have to listen for this event and tokenId and then submit the same tokenId to remove the liquidity by burning the NFT token. An example here.\nAlternatively, you could query the tokenOfOwnerByIndex function on the uni NFT contract and iterate from 0->n to get all of the NFTs liquidity positions owned by a user. This will give you all the tokenIds of NFTs which the user owns.","25":"block.timestamp is a global variable returning the time of the block when the function is executed (by sending a transaction). Or the current time if the function is called (by performing a read-only call).\npragma solidity ^0.8;\n\ncontract MyContract {\n    function mint() external {\n        require(block.timestamp >= 1640995200, \"Not yet available\");\n        \/\/ ... rest of your code\n    }\n}","26":"And no one should see this moved data\n\nIts impossible to prevent people from seeing data on ethereum since all data on a <blockchain> is public. However, you can send obfuscated data by encrypting it using something like Diffie-Hellman. This will hide the data, and only people who have the decryption keys can read it.","27":"Your import is incorrect here:\nconst {<web3>js, myAccount} = require ('.\/utils')\n\nIt should be:\nconst <web3>js = new <web3>(<web3>.givenProvider || \"ws:\/\/localhost:8545\");","28":"Only the payable address type has the transfer method. msg.sender is the address type so you need to cast it to be payable:\npayable(msg.sender).transfer(address(this).balance);","29":null,"30":"Q.1 Is signing is reqd? Can't we access the contract method directly as i did above ?\n\nThe .send() method of the <web3> Contract instance performs\/requests the signature in the background. So it's always signed - just not with an explicit \"sign\" keyword in the code in this case.\n\nQ.2 There are two cases:\n\nThis is not related to the way you sign the transaction.\nThe second case fails because the token holder has not approved the spender (i.e. the transaction sender) to spend their tokens.\nYou need to invoke the approve(<spender>, <tokenId>) function from the token holder address first, to be able to successfully use the transferFrom().\n\/\/ assuming `acc1` is holder of the token ID `1003`\n\/\/ approve the `owner` to spend the `acc1`'s token\nawait myContract.methods.approve(owner, 1003).send({from: acc1});\n\n\/\/ transfer token `1003` held by `acc1` ... and send the transaction from the `owner` address\nawait myContract.methods.transferFrom(acc1, recipient, 1003).send({from: owner});","31":"have you found a fix for this error?\nIf not, this worked for me. It seems to be an issue with the bn.js library which <bitcore> is dependent on and <bitcore> itself.\nDoing npm i bn.js to install the most recent version seems to do the trick for me. In case this doesn't work and you still need a fix or more info on this issue, check out this issue on the official repo: issue 3357","32":"As of now, you cannot log out of Metamask by <web3> or Ethereum api. You have to manually disconnect Metamask.\naccountChanged listener will just detect if Metamask connects to a different account.","33":"Each proxy contract for a Chainlink Price Feed can have multiple underlying aggregator contracts, with one of them being set as the 'active' one at any given instance. Ie whenever the Chainlink Labs team deploys new versions of the aggregator, they update the proxy contract to set the current aggregator version to be the new one, and all new price data starts getting written to the new aggregator.\nBased on this, if you want historical price data for a proxy contract\/price pair from the last couple weeks or so, you'd need to go to the current aggregator for the proxy contract, then get the current round info (including timestamp), then go back in aggregator rounds in a loop until you get to a round that is less than your search parameter timestamp.\nTo find the current aggregator contract address for a proxy contract, you can call the aggregator getter function in the proxy contract.\nThe phase ID can be thought of as an incrementing ID number that the proxy contract uses to identify each aggregator as it gets added to the proxy, so the first one is 1, second is 2 etc. To find out what the current phase ID is of the current aggregator, you can use the phaseId getter function in the proxy contract.\nAggregator round IDs start from 1 and increase by 1 each time. Eg you can  use the aggregator latestRound getter function to find the last round that it stored, and then start from that number as an input parameter to getRoundData, and then reduce the number by one and loop through until you reach your point in time.\nUnlike Aggregator round IDs, proxy round IDs are those big really long numbers like 36893488147419113293, and are actually just a derived value based on the aggregator phase ID and the aggregator round ID. This is done to ensure the proxy round IDs are always increasing in value, and that there will never be any overlap between the same rounds across different aggregators, eg round 5000 from aggregator with phase ID 1 should have a lower proxy round ID that round 5000 from aggregator with phase ID 2\nIn Solidity you can easily replicate the proxy round ID derived value with the following formula, passing in the phase ID of the aggregator and the aggregator round ID\nreturn uint80(uint256(_phaseId) << 64 | _aggregatorRoundId);\n\nYou can even then take that derived value and pass it into the proxy contract getRoundData function, and get the same data result as calling getRoundData in the aggregator contract for the given aggregator round ID.\nI find A good way to play around with these is to interact with the functions directly on etherescan, and see the data returned. Ie here's the Kovan ETH\/USD proxy and its latest aggregator\nRegarding the answer your second question, the best way is to start from 'now', ie get the latest aggregator, grab the latest round in the aggregator and then go back in time by reducing the aggregator round ID by 1, and continue to get pricing info until the round timestamp is < your search timestamp.\nFinally, looping in Solidity is not very gas efficient. Another approach you can take is to off-load the external computation to an oracle, and the oracle can give you the correct round ID, and you can then take that and verify the results on-chain. Here's an example of that design pattern in the form of an external adapter that retrieves historical price data based on a timestamp. There is a live version of this running on Kovan too, check out the readme for more info","34":"Yes, by using configtxlator binary that's included. For example:\nconfigtxlator proto_decode --input the_one_you_fetched.pb --type common.Block--output human_readable.json","35":"i am using <web3> to estimate gas it works only when I am transferring tokens from wallet to another but when testing it on minting I get error:\nlet estimated_gas = await <web3>.eth.estimateGas({\n        'from': WalletAddress,\n        'to': ContractAddress,\n        'value': <web3>.utils.toHex(<web3>.utils.toWei('0.0035', 'ether')),\n        'data': contract.methods.mint.encodeABI(),\n        \"gasPrice\": <web3>.utils.toHex(gas_fee),\n    });\n\nand I get this error :\nError: Returned error: execution reverted: Value below required mint fee for the amount\n\nnot sure what I am doing wrong","36":"I found https:\/\/admin.moralis.io\/<web3>Api: 1 GET \u00e2\u0080\u008b\/resolve\u00e2\u0080\u008b\/{address}\u00e2\u0080\u008b\/reverse Return the ENS domain when available (Only for ETH)","37":null,"38":"I had the same problem. Here's how I fixed it.\n\nRemove the localhost:8545 network in MetaMask. The \"localhost\" requires a network connection. It's better to specify 127.0.0.1\n\nAdd a new network with the values:\n\nNew RPC URL: HTTP:\/\/127.0.0.1:8545\nChain ID: 1337\nCurrency: eth\n\n\n\nNote the above is for ganache CLI;\nGanache runs on HTTP:\/\/127.0.0.1:7545\nHope that works!","39":"if you declared two mint functions then you have to explicitly use the fully qualified signature.\nExample:\ntoken[\"mint(address,uint256)\"](owner.address, <web3>.utils.toWei(\"1000\", 'ether'))\n\nI found the solution here\nhttps:\/\/github.com\/ethers-io\/ethers.js\/issues\/407","40":null,"41":"Are you sure that you are emitting that event from\nShare the code from\nLottery.sol: endLottery method? As After copy pasting the test method you have provided it passed successfully.","42":"The payable modifier of the invest() function allows to send the main token of whichever network is the contract deployed on.\nSo if it's on Ethereum network, users can send ETH along with the transaction invoking the function.\nIf it's deployed on the BSC network, users can send BNB along with the transaction invoking the function.\nIf it's deployed on the Tron network, ... they can send TRX.\netc.","43":"POW is a consensus algorithm, it helps multiple actors\/nodes\/parties to agree on what should be the actual state of the system that everyone will consider valid. So it simply solves a different problem than linking blocks to each other in a <blockchain>. There are actually many different other consensus algorithms like Proof of Stake for example.","44":"For each EVM-compatible network (Etheruem, Tron, BSC, ...), you'll need to create a listener of the Transfer() events of the ERC-20 tokens.\n<web3>.eth.subscribe(\"logs\", {\n    address: [\n        \"0xdac17f958d2ee523a2206206994597c13d831ec7\", \/\/ Ethereum USDT address\n        \/\/ can add other tokens\n    ],\n    topics: [\n        \/\/ keccak256 hash of the \"Transfer(address,address,uint256)\" event signature\n        \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    ]\n}, (err, event) => {\n    console.log(event);\n});\n\nYou can find more info about the subscribe() function in the <web3> docs - for example how to only filter transfers to your addresses (this snippet listens to all transfers, that you might not need).\n\nFor tokens on their own <blockchain> (such as ADA), you'll need to implement a custom listener for transfers. The architecture of the listener might need to be different on each network - possibly some have a way to emit events on a transfer, and with some you'll need to scan each block to get the <transactions> to your address.\nMind that some cryptocurrencies are based on multiple networks. For example USDT has their own token on Ethereum, Tron, BSC and others (source: CMC detail page of USDT, selectbox \"Explorers\"). So if you allow users to transfer you USDT on any network, you'll need to listen to incoming transfers on all these networks.","45":"I think collectibles is the same as NFT(ERC 721) so Try this\nhttps:\/\/api.opensea.io\/api\/v1\/collections?asset_owner=your_wallet_address&offset=0&limit=300","46":"From what I can tell there are a lot of similarities between ETH 2.0 and NEAR\nDesigned for scalability using a sharded network\nUsing a proof of stake consensus algorithm to reduce power consumption and time to mine new blocks\nto name a few\nI think the primary difference we have is the developer and the end user experience.\nSmart contracts on NEAR are written in Rust and AssemblyScript. Rust being the more robust and heavily supported an maintain language and AssemblyScript for it's ease of entry into the <blockchain> space for new developers, primarily those who have experience in a similar language like JS\nOur named account system as another plus for NEAR users making it easy to organize and manage smart contracts with sub accounts and giving end users a easier to read account name to make the barrier of entry lower","47":"you can easily call the function and do a catch like this:\ncontract.function.call({from:accounts[1]}).then((result) => {\n  console.log(\"Success! Got result: \" + result);\n}).catch((err) => {\n  console.log(\"Failed with error: \" + err);\n});","48":"If you look at the <web3>.js project issues, there are number of reports about disconnect\/close\/reconnect not working as expected:\n\nhttps:\/\/github.com\/ChainSafe\/<web3>.js\/issues\/3927\nhttps:\/\/github.com\/ethers-io\/ethers.js\/issues\/1053\n\n(Different project, but related and recent comments are relevant)\n\n\n\nThere is no one solution, afaict. A rewrite is in progress with intent to solve some of the issues:\n\nhttps:\/\/github.com\/ChainSafe\/<web3>.js\/issues\/4313","49":"The block and header type in Substrate are generic.\nThe header needs to implement https:\/\/docs.rs\/sp-runtime\/latest\/sp_runtime\/traits\/trait.Header.html and the block needs to implement https:\/\/docs.rs\/sp-runtime\/latest\/sp_runtime\/traits\/trait.Block.html.\nSubstrate itself provides two types for that already https:\/\/docs.rs\/sp-runtime\/latest\/sp_runtime\/generic\/struct.Block.html and https:\/\/docs.rs\/sp-runtime\/latest\/sp_runtime\/generic\/struct.Header.html.\nWhen you setup your <blockchain>, which you mainly do through the runtime you can choose these types.","50":"Graph search algorithms could be of use :D Common ones are BFS and DFS. The general gist of the approach is to start with any node and visit its neighbours while keeping track of which ones you have already visited (so you don't have to go over them again).\nIn your case I think it would be sensible to start with any random node, and do the process iteratively. I found a fantastic explanation here, please check it out.\nThis is a fun exercise actually","51":"Assuming that you're running a private network and not connecting to an already existing public network (e.g. Ropsten, Rinkeby, Kovan, ...).\nYou can add the pre-funded accounts to your genesis.json, under the alloc property. Example from the linked documentation:\n\"alloc\": {\n    \"7df9a875a174b3bc565e6424a0050ebc1b2d1d82\": { \"balance\": \"300000\" },\n    \"f41c74c9ae680c1aa78f42e5647a62f353b7bdde\": { \"balance\": \"400000\" }\n}\n\nThese accounts will be funded in the first block, so you'll need to re-init your network in order to fund the accounts.\n\nIf you want to fund your accounts on a public network, you can't just re-init the whole public network. But there are so called faucets for testnet networks, that give you some small amount of testnet ETH. Example: https:\/\/faucet.metamask.io\/ (requires MetaMask wallet extension to be installed in your browser).","52":"In your transaction_body you need to add gasPrice like so:\n\"gasPrice\": <web3>_connection.eth.gas_price\n\nThis is due to EIP1559 changing, and <web3>.py updating for the change.","53":"You have two typos\ncompiled_sol=compile_standard({\n    # not \"solidity\"\n    \"language\":\"Solidity\",\n    # not \"simpleStorage\"\n    \"sources\":{\"SimpleStorage.sol\":{\"content\":simple_storage_file}},\n    \"settings\":{\n        \"outputSelection\":{\n            \"*\":{\n                \"*\":[\"abi\",\"metadata\",\"evm.bytecode\",\"evm.sourceMap\"]\n            }\n        }\n    }\n},","54":"You need to specify https:\/\/ as part of the URL and for the json= option you had to specify the version number like this { 'jsonrpc': '2.0', 'method': 'getnewaddress', 'id': 47812 }\nAlso, the call had to include an id number to recover the output or your request would be treated as a notification and no output will be sent from the node as per the JSON-RPC 2.0 specification.  I don't think which number it is, is specifically important, unless it matters to bitcoind.\nThe specification can be found here: https:\/\/www.jsonrpc.org\/specification","55":"Signature is a result of signing a message with a private key.\nExample from the <web3> docs page:\n\nmessage Hello world\nsigned with the private key of address 0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\nresults in signature 0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\n\nA contract can then verify if the signature and message (or hash of the message) can be recovered back to the signer address (cannot get the private key).\nFor example the OpenZeppelin ECDSA library is a developer-friendly wrapper for the low-level (EVM assembly) recovery method.\nUnfortunately the contract linked in the question is passing the signature to another unspecified contract for the recovery, so I was unable to find the specific message that they're validating against and the actual recovery snippet that they're using. However, you can find more info about the signing process and on-chain recovery in this answer (the mentioned v, r and s params are literally parts of the whole signature).","56":"I'm new to <python> and don't know if this is the right solution, but I was getting the same error and upgrading cytoolz to version 0.11.2 seems to have worked for me:\npip3 install cytoolz==0.11.2","57":null,"58":"Transaction with zero gas price are usually put in a block by miners (or validators in case of BSC) directly, or by miners that have some kind of arrangement with the transaction sender. Otherwise, market conditions (most miners choose <transactions> with highest gasPrice to be included in their blocks) prevent a 0 gas priced transaction to be mined.\nSo most likely, the sender address is one of the addresses belonging to the validator of the block 13352409, or to their business partner.","59":null,"60":"Yes, it's possible to send states using send() and receive(). Here is a code sample that I tested to see if it works:\nclass TestContract : Contract{\n    companion object{\n        @JvmStatic\n        val ID = \"package net.corda.sample.TestContract\"\n    }\n    override fun verify(tx: LedgerTransaction) {\n\n    }\n}\n@BelongsToContract(TestContract::class)\nclass TestState(val owner : Party, val value : String) : ContractState {\n    override val participants: List<AbstractParty>\n        get() = listOf(owner)\n}\n\n\n@InitiatingFlow\n@StartableByRPC\nclass receiveStateFlow(private val counterparty: Party) : FlowLogic<Unit>() {\n    override val progressTracker = ProgressTracker()\n    val log = loggerFor<receiveStateFlow>()\n\n    @Suspendable\n    override fun call() {\n        val counterpartySession = initiateFlow(counterparty)\n        val counterpartyData = counterpartySession.sendAndReceive<TestState>(\"hello\")\n        counterpartyData.unwrap { msg ->\n            log.warn(msg.value)\n            assert((msg.participants.first()) == counterparty)\n        }\n    }\n}\n\n@InitiatedBy(receiveStateFlow::class)\nclass sendStateFlow(private val counterpartySession: FlowSession) : FlowLogic<Unit>() {\n    @Suspendable\n    override fun call() {\n        val counterpartyData = counterpartySession.receive<String>()\n        counterpartyData.unwrap { msg ->\n            assert(msg == \"hello\")\n        }\n        val newState = TestState(serviceHub.myInfo.legalIdentities.first(), \"someValue\")\n        counterpartySession.send(newState)\n    }\n}\n\nHowever, this method will not consume any states. This can only happen if you use those states as the output of a Transaction. Hence, the Party that receives the states should use those exact states as a output in a TransactionBuilder in the same Flow and go on with signing and finalising the transaction.","61":"No. Account information is not visible without signing the request with an API key or using the authorization address and OAuth2. Both options require the API\napi-key-authentication\n\nAPI Key authentication should only be used to access your own account. If your application requires access to other Coinbase users' accounts, do not use API Key. To securely access other Coinbase users' accounts, use Sign in with Coinbase (OAuth2)\n\nOAuth2\n\nThe Coinbase API allows developers to use the OAuth2 protocol to allow a Coinbase user to grant a 3rd party application full or partial access to his\/her account, without sharing the account\u00e2\u0080\u0099s API key or login credentials. It is a slightly more complex integration than the API Key authentication method, but is more flexible. OAuth2 works well for web applications, as well as desktop and mobile apps.","62":"We added a couple of guides about how to deploy and configure your own giver in developer network. Please, check them out:\nWork with devnet with everdev tool - https:\/\/github.com\/tonlabs\/everdev\/blob\/main\/docs\/work_with_devnet.md\nConfigure giver in AppKit - https:\/\/tonlabs.gitbook.io\/appkit-js\/guides\/custom_giver","63":"No, you can't abort or revert a <blockchain> transaction when it's complete. When the transaction is mined, it's stored in the immutable block, meaning it'll never be changed.","64":null,"65":null,"66":"No, this is not possible, at least in a token contract, because the token contract only \"knows\" that the user send or approved tokens and that's all that can know, it could be possible in a dex or cex contract","67":"As per these lines of code, your app should be accessible at http:\/\/localhost:8080\n\nIf you are not able to see anything, this means containers went down and you can check that by running docker compose ps -a & check the status of each container.","68":"51% is and attack vector for Proof of work (PoW) consensus mechanism. While Eth 2.0 uses Proof of stake (PoS) which is less prone to 51% attack and it does not require 51% nodes for confirming transaction rather having control over 51% of staked amount.\nBoth of PoW and PoS are widely covered in detail by online community so i will just drop link so can know the basic differences.\nPoW vs PoS\nNot all 200k validators participate in validation process in proof of stake out of whole pool of validators a few are chosen randomly to validate transaction. Incase of Ethereum its called a validator committee which has 128 validators that verify the transaction. And the probability of having more bad actors in validators committee rather then good is really low one in trillion here is the math for it\nConfirmations\nNo of blocks added to the chain after the block containing your transaction. So if your tx is in block no 10 and current chain height is 25 then confirmations size will be 15. Confirmation ensure that there is no (close to none) probability of fork before you use the funds. With each block confirmation the probability of fork decreases exponentially. Confirmations does not mean the number of validators that confirmed your blocks","69":"Update\nAfter Eth 2.0 and deprecation of rinkeby testnet this faucet no longer works.\nYes it is not working for a long time.\nRight now there is only one working faucet for rinkeby ether that is by Chainlink. Try this you can get 0.1 eth (multiple times)\nhttps:\/\/faucets.chain.link\/rinkeby","70":"You have to get ABI of the smart contract and also its address in order to run it.\ncontract = <web3>.eth.contract(address=ContractAddress, abi=abi)\nmy_filter = contract.events.<YOUR_EVENT>.createFilter(fromBlock='latest')\nentries = my_filter.get_all_entries()","71":null,"72":"This is a shot in the dark, but I think you need new so that your BNs have a this context, so instead try:\nlet token1Amount = new BN(token1_amount);\nlet token2Amount = new BN(token2_amount);","73":"You are trying to change the data in the declarative part of the contract code. Put the change in the contract constructor or function.\n\/\/ SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\ncontract simple\n{\n    uint public a = 3;\n\n    constructor()\n    {\n      a = 16; \n    }\n\n    function changeData() public\n    {\n      a = 16;\n    }\n\n}","74":"The messages construct accordingly to TL-B scheme.\nIn general, the message has type that called \"Message X\"\nThis type has 3 parts.\nThe first part is the \"CommonMsgInfo\"\n           \/* int_msg_info$0\n           ihr_disabled:Bool\n           bounce:Bool\n           bounced:Bool\n           src:MsgAddressInt\n           dest:MsgAddressInt *\/\n        message_.store(false, true, true, false, address(0), address(this));\n        message_.storeTons(0);\/\/value:CurrencyCollection\n        message_.storeUnsigned(0, 1);\/\/value:CurrencyCollection (for other currencies)\n        \/\/ In the next 4 fields we store zeroes, because <blockchain> software will replace them\n        \/\/ with the correct values after this function finishes execution.         \n        message_.storeTons(0);\/\/ihr_fee:Grams\n        message_.storeTons(0);\/\/fwd_fee:Grams\n        message_.store(uint64(0));\/\/created_lt:uint64\n        message_.store(uint32(0));\/\/created_at:uint32\n\nThe second part has type \"init\"\n        message_.storeUnsigned(0, 1); \/\/no initial state\n\nThe third part has type \"body\"\n        message_.storeUnsigned(1, 1); \/\/1 because, we don't store body in current cell\n        message_.store(body);","75":"To obtain all NFTs under a user account, the following conditions are required:\n\nA collection needs to be created under the account to store NFT.\nThe collection provides a public method to query its NFT list.","76":"Is it possible to authorize a server to sign <transactions> on user's behalf?\n\nNo.\nOr: only if your smart contracts support some kind of specially signed messages, but they aren't compatible with any normal Ethereum <transactions> and this is your application-specific logic.","77":"to make a smart contract deploy another smart contract you can do it with the use of the new keyword\ncontract UserMessage {\n  string message;\n  constructor(string memory message){\n     message = _message;\n  }\n}\n\ncontract DeployUserMessage {\n  mapping(address => address) userToContract;\n  \n  function Deploy(string memory message) public {\n    address contractAddress = new UserMessage(message);\n    userToContract[msg.sender] = contractAddress;\n  }\n}\n\nI think this example make it clear, but if you want, check the docs https:\/\/docs.soliditylang.org\/en\/v0.8.9\/contracts.html#creating-contracts","78":"TL;DR\n\nHLF by design is deterministic so the orderer nodes are important. Only they participate in consensus not all peers and the blocks they produce are Final (Not prone to forks).\nNo you cannot make a peer orderer as well. Your network configuration for HLF must have at least one orderer to work\n\n<hyperledger> Fabric (HLF) vs Bitcoin\nHLF is a private permissioned <blockchain> where as Bitcoin is a public permissionless <blockchain>. You should not expect them to work similarly.\nPublic <blockchain>s\nIn public <blockchain> for example bitcoin everyone is treated equal in other words no one have special privileges you may think well miner are the ones minning block but the important point is anyone can become miner its open game no restriction on who can become miner or who can run a node etc.\nPrivate <blockchain>\nIn private <blockchain> for example HLF roles are predefined at the time of setting up and starting <blockchain>. Each role has certain tasks and privileges and restriction. The no of organisations  peers, endorser peers, orderers, channels all are predefined and some have special privileges which no other role has like orderer whose is responsible for receiving endorsed <transactions> from peers and put them into blocks then these blocks are distributed to all peers. These blocks are Final.\nBut Why?\nPrivate <blockchain>s (Like HLF) full-fill special use cases for example supply chain, B2B operations In such use cases one may want to harness positives of <blockchain> like transparency, auditing, provenance but may also want some sort of role based access or restrictions of certain data to certain audience public <blockchain>s like Ethereum and bitcoin does not fit here.\nNow coming toward your question\nWhy is there an orderer node in HLF isn't it redundant ?\nNo it's not redundant, HLF has deterministic consensus algorithms where as Ethereum and Bitcoin have probabilistic consensus algorithms which means there can be ledger forks. In HLF there are no Ledger forks because fork occur when two equal participants have conflict at a common point. Incase of HLF the participants are not equal as peers cannot participate in consensus process the block order set by orderers is Final. And rightfully so because for the use cases it is designed for does not want forks and want to have special roles and much much more transaction throughput.\nMust must Read !\n\nhttps:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.2\/orderer\/ordering_service.html#what-is-ordering\n\nNo it is not possible to assign peers orderer's role you must have at least 1 orderer in your HLF network to work.","79":"You can configure the validator before running a chain in your chain spec file.\nYou can find more details at Substrate tutorial. Start a Private Network > Add Validators says:\n\nTo add validators:\nModify the aura section to include Sr25519 addresses.\nModify the grandpa section to include Ed25519 addresses and a voting weight.","80":"In order to change variables you need to implement setter method.\nuint256 public mintCost = 0.05 ether;\n\nfunction setCost(uint256 _newCost) public onlyOwner {\n        mintCost = _newCost;\n }\n\nAbove piece of code init a state variable that can be used as minting cost of a token and the function setCost is used to update its value. Also notice in onlyOwner that means function is restricted to be used by owner of the contract only. You can read more about function modifier from solidity docs\nGas prices are set while sending <transactions> incase you are using remix IDE it allows you to set gas price for each transaction.","81":null,"82":"You don't need two onClick events, just make a function that do both things, or make two functions and call it in the onClick handler","83":null,"84":null,"85":"const getSignedData = async () => {\n  const messageToSign = \"any message you create or fetch\";\n  const accounts = (await ethereum?.request({\n    method: \"eth_requestAccounts\",\n  })) as string[];\n  \/\/ account will be the signer of this message\n  const account = accounts[0];\n  \/\/ password is the third param as uuid\n  const signedData = await ethereum?.request({\n    method: \"personal_sign\",\n    params: [\n      JSON.stringify(messageToSign.data),\n      account,\n      messageToSign.data.id,\n    ],\n  });\n  return { signedData, account };\n};","86":"A) Yes, it is fine to use the same data with the same or new node key\nB) Nope, everything should work smoothly unless there are two nodes at the same time using the same node key\nC) Nodes don't keep track of IP addresses explicitly, as far as I know, they only care about TCP connections","87":"You can use the method: ledger.getAccountInfoByAddress (https:\/\/testnet.znn.space\/#!api.md Under dual-ledger)\nWhen connecting to your node, you can just curl it using:\ncurl -X POST http:\/\/127.0.0.1:35997 -H 'Content-Type: application\/json' -d '{\"jsonrpc\": \"2.0\", \"id\": 20, \"method\": \"ledger.getAccountInfoByAddress\",\"params\": [\"z1qz5p95pa8c6wq9pvfkg642gjv4nnaayx6vhm2w\"]}' | jq\nOutput looks like:","88":"You can use curl on the command line and access the method: embedded.pillar.getAll (https:\/\/testnet.znn.space\/#!api.md)\nI passed the output to the command jq so it can be easily read.\n\ncurl -X POST http:\/\/127.0.0.1:35997    -H 'Content-Type:\napplication\/json' -d '{\"jsonrpc\": \"2.0\", \"id\": 20, \"method\":\n\"embedded.pillar.getAll\",\"params\": [0, 299]}' | jq\n\nThis will give you the output of:","89":null,"90":"the contract manages the balance by itself rather than using the balance from the <blockchain>\n\nEach state change (in this case change of balances storage property value) is recorded on the <blockchain>. So the contract is reading the balance from the <blockchain>.\nHowever, the way Ethereum network is designed, an address can only have few properties - its bytecode (non-zero bytecode means it's a smart contract), its balance, and few others. Since there's only one property for balance (and not a list of balances), it's used for the native ETH balance. Any token balances are stored in the contracts of the respective tokens.\nYou can read more about the token balance storage design in the final version of ERC-20 and the linked documents. This is the first standard that introduced tokens on Ethereum.","91":"Ganache is local ethereum <blockchain> node with GUI. It does not provide gateway to connect to other <blockchain> network (ropsten, rinkeby, Mainnet). Its more like a development server\/node so you can deploy and test stuff quickly. It cannot be used to make a priavte <blockchain>\nWhere as what you are looking for is <geth> an open-source ethereum-client that can be used to start your own private customised <blockchain>\nhttps:\/\/<geth>.ethereum.org\/docs\/interface\/private-network\nor you can connect it to a running ethereum network like\nMainnet.\nRopsten.\nRinkeby","92":"Ethers contract.on() (docs) is invoked when an event with the specified name is emitted.\nYour snippet is passing a function name (atomicMatch_), not an event name.\nThe atomicMatch_ function effectively emits the event named OrdersMatched. That's why changing the handler to contract.on('OrdersMatched') fixes the issue.\n\nAlso, the sandbox is using a built-in provider under the getDefaultProvider(), which is communicating with the app over WSS. Your snippet is using a HTTPS provider that is by design unable to listen to events. You'll need to use a WSS provider as well (they are supported by Infura).","93":null,"94":"How can we can create search system where use don't have to pay gas fee\n\nUser signs messages in their MetaMask wallet. This message is sent off-chain to an Opensea server. The Opensea server performs a transaction and pays the fee on behalf of the user. The smart contract is programmed to handle these messages sent on behalf of somebody else. In the end, someone always pays the gas.\nAlternative, a transaction does not involve <blockchain> at all, which might I believe is the bid on OpenSea auction bids. It does not happen on a <blockchain>, but is centralised.","95":"If you are deploying on local network to test you contract you should consider using ganache.\nIt has GUI and works great with truffle","96":"Try dropping the .then() syntax entirely and use only the async\/await style. What does the code below give?\nlet hash, result;\n\ntry {\n  result = await ipfs.add(JSON.stringify(this.state.credential))\n  hash = result.path;\n} catch (error) {\n  console.error(error)\n  return;\n}\n\n\/\/ Store hash on <blockchain>\nconsole.log(\"Hash before BC:\" + hash);\n\ntry {\n  await this.state.contract.methods.setHash(hash).send({\n    from: this.state.account\n  })\n} catch(error) {\n  console.log(\"Callback rejected\");\n  return\n}\n\nthis.setState({\n  credentialHash: hash\n});\n\nconsole.log(\"After setting:\" + this.state.credentialHash);","97":"Debugging with truffle is pain in ass. Specially if you have no previous experience of cli-debugging Although here is their complete guide.\nThis includes everything setting breakpoints, displaying variables, execute and print expressions etc\nAs a rule of thumb if you are working on a project that involves writing single or two smart contract you may wanna use remix IDE. It is very user friendly and has everything. You can code deploy test debug your smart contracts with great ease.","98":"Yes it is default behaviour. By default transaction is sent by accounts[0] and since Sendcoin() function uses msg.sender ( msg.sender: A global variable in solidity that is always equal to the account that sent the transaction) as sender and account passed in parameter as receiver therefore you see the coins being deducted from account[0] and sent to account[0]\nTo change this use below code to pass optionals to change the account sending transaction\ninstance.sendCoin(accounts[1], 10, {from: accounts[2]})","99":"So, what I did was put defaultNetwork: \"network name\" in the module.exports object inside of your hardhat.config.js file.","100":"You do not need a smart contract to sign or send a transaction. The transferring of ETH is built into the protocol. This can be accomplished by using libraries such as <web3> or ethers if you're a developer. If you're not a developer, this can be accomplished by using tools such as Metamask.\nSteps to send a transaction using ethers.js:\n\nInstantiate your provider and signer using ethers.providers. and Signer.\nThen sign a transaction using signer.signTransaction.\nUse provider to send the transaction using provider.sendTransaction.\n\nReferences:\nEthers.js: https:\/\/docs.ethers.io\/v5\/api\/\n<web3>.js: https:\/\/<web3>js.readthedocs.io\/en\/v1.5.2\/\nmetamask: https:\/\/metamask.io","101":"I just had this problem and solved it by realizing that my constructor arguments did not match with what I originally deployed the contract with. For you it is possible this:\nnpx hardhat verify --network rinkeby 0xDDeE39Ae632760906d273B450493405Dc3C455Fe \"ipfs:\/\/QmX6MjxS5NsEFGe9WtKCskf5fhuifFvZ9Xi12tTBYPjEiH\"\nshould actually be:\nnpx hardhat verify --network rinkeby 0xDDeE39Ae632760906d273B450493405Dc3C455Fe \"QmX6MjxS5NsEFGe9WtKCskf5fhuifFvZ9Xi12tTBYPjEiH\" \nwith the ipfs:\/\/ removed if you did not originally include it when you initially deployed the contract.\nI would redeploy it and double check the parameters used when deploying are identical to the ones used when verifying.","102":"If you're sending 1 ETH then provide 1*10^18 which is equals to 1000000000000000000wei.\n\nAnd I'm not that experienced but I think you have to create some Tokens first to exchange it on your network using ETH.","103":"You need to pass the provider into the contract instance as it says in the documentation\nconst contract = new <web3>().eth.Contract(abi, address);\nContract.setProvider(`wss:\/\/rinkeby.infura.io\/ws\/v3\/${process.env.INFURA_PROJECT_ID}`);\n\nAlmost all production code uses ethersjs instead of <web3>js btw.\nIt looks like this instead:\nconst contract = new Contract(address, abi, library);","104":"Your function is not payable, please use:\nfunction payRequest(address payable _recipient, uint256 _amount)payable public {\n        \n        (bool success, bytes memory transactionBytes) = _recipient.call{value:_amount}('');\n        \n        emit TransactionBytes(transactionBytes);\n        \n        emit RequestPaid(msg.sender, _amount);\n    }\n\nI don't see from which account the ether are from.\nYou don't declare your variables in the contract (for example before the event as done in the best practices).\nTo be fully transparent, your contract seems strange or incomplete to me.","105":"Perhaps you have not previously given permission for the miner to sign the genesis block.\nPOA uses the Clique API to manage the seal list.\n> clique.proposals\n{}\n> clique.propose(\"0xc077f8420d5b6c125897d9c5e21293ff6f77855c\", true)\ntrue\n> clique.proposals\n{\n  0xc077f8420d5b6c125897d9c5e21293ff6f77855c: true\n}\n> clique.getSnapshot()\n{\n  hash: \"0xfbfe67cd638d21f528036130cc703be8f8fdccb934d871f3f8c2eccda1ed4bf5\",\n  number: 11,\n  recents: {\n    10: \"0xc077f8420d5b6c125897d9c5e21293ff6f77855c\",\n    11: \"0x726794b16f6c5b0be0b78d7713a876ed3da8be1a\"\n  },\n  signers: {\n    0x726794b16f6c5b0be0b78d7713a876ed3da8be1a: {},\n    0xc077f8420d5b6c125897d9c5e21293ff6f77855c: {}\n  },\n  tally: {},\n  votes: []\n}`enter code here`\nenter code here\n\nYou can see more details in this manual: https:\/\/yenhuang.gitbooks.io\/<blockchain>\/content\/interact-with-private-chain-on-android\/build-the-private-chain.html\nYou can also top up your balance using:\neth.sendTransaction({from:eth.coinbase, to:eth.accounts[1], value: <web3>.toWei(0.05, \"ether\")})","106":"You can save a string in the transaction data without saving it on the smart contract context. In this case, the record identifier will be the hash of the transaction. You can always extract transaction data by its hash.\nJust create a smart contract with an empty function that does nothing and send <transactions> with a string to it. You can try using the fallback function - maybe it will be cheaper.\nIn principle, you can even send a transaction to any account (existing or not) - then there will be no costs for calling a smart contract. In my private test network, in this case, about 25,000 gas turned out.","107":"Turns out I was using the System Program ID to derive the PDA in my client code, rather than using my actual Program ID.\nShould be:\n  const [sandboxPda, sandboxBump] = await PublicKey.findProgramAddress([Buffer.from('seed')], <PROGRAM_ID>);","108":"Try using Speedy Nodes in hardhat.config.js instead","109":"I have faced this problem too, but I found there is no way for a dapp application to disconnect from inside Metamask (it doesn't have the privilege).\nWhat we can do is to handle the connection from inside our application.\nex: you store the account and provider inside a variable and then when you press the disconnect button it just removes that information from that variable. You think we are disconnected, but in reality we can't disconnect from actual Metamask.\nBut when somebody really disconnects his\/her account from Metamask, then you can listen to the accountChanged event to handle it in your app.","110":null,"111":"Your approach, calling the store() function right on the item, is in fact a more straightforward way to achieve the same result as the lecturer's code.\nSo to answer your questions:\n\nWhat is this address function? I assume it gets the address of the contract instance.\n\nCorrect. Even though the simpleStorages[_simpleStorageIndex] doesn't store the actual SimpleStorage instance. Within your contract, it only stores a helper object that contains a pointer to the external contract address, as well as interface definition of the SimpleStorage (but not the actual instance of the external contract).\nTypecasting the helper object to an address returns the address of the external contract.\n\nThen why do we pass it to a constructor(?) of SimpleStorage\n\nYou're not passing it to the SimpleStorage constructor - that would be new SimpleStorage(<constructor_params>) with the new keyword (effectively deploying the SimpleStorage contract to a new address). You're instantiating the helper object described above, passing it the external contract address.\n\nWhy do all this when calling store on the instance itself without going through addresses works.\n\nI don't know the lecturer's intentions behind this code. Maybe they use it later in the course to describe some optimization or as a bridge to show some other topic. But both ways work.","112":"There is this entry on substrate.io which may clarify your doubts. https:\/\/docs.substrate.io\/v3\/runtime\/smart-contracts\/#smart-contracts-vs-runtime-development","113":"obviously I would have to have some extrinsic functions that are exposed through my dapp so that when they click and pay for membership, in the runtime, the membership pallet will add that user as a member. Can anyone confirm my thoughts on this?\n\nYou can easily do this. pallet_membership is just a container for members. As you will find in the pallet_membership::Config, there are special origins that can be defined as those who have the authority to add or remove a member.\nYou need a new pallet that will handle the payment to join new members. Let's call this pallet_membership_payment. Once pallet_membership_payment has received the correct payment, it can call into pallet_membership::add_member with whatever origin is required to satisfy it. Not that even if the origin requirement of add_member is EnsureRoot, pallet_membership_payment can still practically get over it, if it is coded as such.\n\n\nShould I just create a smart contract to handle membership logic and deploy it on edgeware or some other parachain that already exists.\n\nThe answer to this really depends on how much further logic does your application have next to handling this membership via fees. Also, it depends on the smart contract payment model (end user pays the fees) works for you If this is it, then it is pretty simple. You might have an easier time in a smart contract model. But, if you need certain optimisations, less fees, more performance etc. you will probably have to consider being your own (para)chain.","114":"This doesn't answer OP question about glb files please check out comments.\nThe problem seems not to be with opensea. Although opensea testnet sometimes does take time fetching your image from metadata but in your case its different.\nThe animation_url in your metadata should actually render the 3d model, animation or whatever it is.\nhttps:\/\/pattirose.growwithsabrina.org\/nft\/1.json\nThe animation_url in above metadata link you provided does not render anything.\nYou may try re uploading it to Pinata and mint again or using Areware.org instead of Pinata if it does not work for you.\nHere is a sample metadata uri, you can check that if you redirect to animation_url provided in the metadata it does render the clip in browser","115":null,"116":"There's a slight difference between live networks (e.g. Ethereum mainnet or Ropsten testnet) and emulators (such as Remix VM or Ganache).\nWhen you want to deploy a contract, its compiled bytecode is passed as the data field of a transaction that doesn't have a recipient (the to field is omitted).\n\nOn a live network, the transaction is broadcasted to the network, and waiting in the mempool to be mined.\nWhen a miner mines this transaction, the EVM on their machine calculates the state changes that were made during its execution (in other words, the contract deployment) and broadcasts the state changes (e.g. storing the contract bytecode under the newly created address storage) to the rest of the network.\n\nHowever, each instance of an EVM emulator usually runs on one machine (e.g. in your browser in case of Remix) and doesn't have access to a network of miners. Plus it would be ineffective to wait for an external miner to mine your transaction every time during development.\nSo when you send a transaction on an emulator, it's locally executed and wrapped in a new block right away.\n\nSo to answer your questions:\n\nDoes deploy a contract mean create a new block in <blockchain>?\n\n\nlive networks - no\nemulators - yes\n\n\nWhenever there is a method call on the contract, does it always generate a transaction in the block?\n\nThere's a difference between a transaction (read-write) and a call (read-only). For <transactions>, see above. Read-only calls are not mined at all (so they are free), and they are only invoked on the machine of your node provider (or in the emulator).","117":"Firstly, \"injecting\" a transaction into the <blockchain> network does not mean that it will be immediately accepted for execution (included in the block) - it depends on the queue size determined by the current load, as well as on the transaction prioritization capabilities determined by the protocol used.\nSecondly, the most popular <blockchain> networks based on the Bitcoin and Ethereum protocols use conditional finalization of the transaction - the block in which the transaction was included can be excluded from the main chain due to a fork and, thus, the transaction becomes unexecuted again and returns to the pending queue.\nIn order to make sure that the transaction is finally included in the main chain (more precisely, with a sufficiently high probability), it is recommended to wait until another 4-6 blocks are added \"on top\" of the block with the transaction. For Bitcoin, this time will be 40-60 minutes, and for Ethereum - 60-90 seconds.","118":"Is it possible to fetch all txs related to this specific owner address with these logs in json data (or any other data that can be updated dynamically on dAPPs)?\n\nYes, because all this data is stored on a <blockchain>.\n\nAre data from txs logs are encrypted? (if yes what is the format of this and how to decrypt this how bscscan do)\n\nAll data on a public <blockchain> is public.\n\nIs it possible to fetch these data directly from <blockchain> instead of using 3rd part application like bscscan?\n\nRun your own BSC node. Please see <web3>.py library how to interact with an Ethereum based <blockchain>, like one that is BSC node.","119":"You can do like this:\n function setter() public {\n   data1[p1.add].amount=7;\n }","120":"Smart contracts are written in Solidity programming language. Solidity programming language is not R programming language. You just cannot copy paste stuff from one language for another.\nThe correct answer is to run Ethereum node and use JSON-RPC API. But seems like your starting level of programming knowledge is too low for this, so recommend doing basic programming courses and learning before trying to try anything this complex.","121":"You can find the smart contract address by looking at the field \"Interacted With (To)\". Here you have the clickable hash code of the contract.\nIn your example, it looks as follows\n\nThen, you can follow the contract link to find more details. In your case it's https:\/\/etherscan.io\/address\/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b#code","122":"swapExactETHForTokens() definition\nfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n    external\n    virtual\n    override\n    payable\n    ensure(deadline)\n    returns (uint[] memory amounts)\n{\n\ntakes the 4th argument deadline and passes it to the ensure modifier\nmodifier ensure(uint deadline) {\n    require(deadline >= block.timestamp, 'UniswapV2Router: EXPIRED');\n    _;\n}\n\nwhich effectively reverts the transaction with the EXPIRED message if the deadline (4th parameter passed to the function) is lower than the block time.\nIn the linked transaction, you passed 1637842091 as the value of deadline, which is 2021-11-25 12:08:11 UTC. However, the block containing the transaction was mined approx. 1.5 hour later - at 2021-11-25 13:48:34 UTC. The deadline is lower than the block time, which caused the transaction to revert.\n\nSolution: Either provide higher gasPrice so that the transaction has higher probability of being mined within the 10 minute window (specified in the JS snippet), or increase the deadline value so that it's still valid at the time when the block is mined.","123":"Not possible \"at the same time\", need to do it in separate <transactions>.\nselfdestruct prevents later operations on the contract from being executed, and flags the contract for deletion.\nselfdestruct stops the execution in its current scope, and flags the contract for deletion.\nHowever, the EVM doesn't delete its bytecode until the end of processing of the transaction. So you won't be able to deploy new bytecode to the same address until the next tx. But you're still able to perform calls on the to-be-destructed contract.\npragma solidity ^0.8;\n\ncontract Destructable {\n    function destruct() external {\n        selfdestruct(payable(msg.sender));\n    }\n}\n\ncontract Deployer {\n    function deployAndDestruct() external {\n        Destructable destructable = new Destructable{salt: keccak256(\"hello\")}();\n        destructable.destruct();\n\n        \/\/ The second deployment (within the same transation) causes a revert\n        \/\/ because the bytecode on the desired address is still non-zero\n        Destructable destructable2 = new Destructable{salt: keccak256(\"hello\")}();\n    }\n}\n\npragma solidity 0.8.17;\n\ncontract Destructable {\n    uint public number = 1;\n\n    function destruct() external {\n        selfdestruct(payable(msg.sender));\n        number++; \/\/ not executed after selfdestruct\n    }\n}\n\ncontract Caller {\n    Destructable destructable;\n\n    constructor(Destructable _destructable) {\n        destructable = _destructable;\n    }\n\n    function executeSequence() external {\n        destructable.destruct();\n    \n        \/\/ successfully call after the selfestruct was initiated\n        uint returnedNumber = destructable.number();\n        require(returnedNumber == 1);\n    }\n}","124":"RSK and Ethereum have trunk blocks, which chained and executed, and uncle blocks (now called ommers), which are referenced but not executed. Both RSK and Ethereum have difficulty adjustment functions that try to maintain a target density of blocks (including trunk and ommers). In other words, a fixed number of blocks mined per time period. The adjustment functions in RSK and Ethereum are not equal, but both target a block density, not an inter-block time in the chain. Therefore, if the mining network produces a higher number of ommer blocks, the number of trunk blocks created over a period decreases, and the trunk average inter-block time increases. In the case of Ethereum, the number of ommers have oscillated between 5% and 40% in the last 5 years, but in the last 2 years it has stayed relatively stable between 4% and 8%. This translates to a +-2% error when measuring time based on block count. However, in Ethereum the \u00e2\u0080\u009cdifficulty bomb\u00e2\u0080\u009d has affected the average block time much more than the ommer rate. The average block time is ~14 seconds now, but it has peaked to 30, 20 and 17 seconds at different times. Therefore, in Ethereum, the a number of blocks should not be used to measure long periods of time. It may be used only for short periods, not longer than a month. More importantly, if Ethereum switches to PoS, the average block interval will decrease to 12 seconds at that point.\nHere we show the Ethereum ommer rate:\n\n(source: https:\/\/ycharts.com\/indicators\/ethereum_uncle_rate)\nAnd this is Ethereum average block time:\n\n(source: https:\/\/ycharts.com\/indicators\/ethereum_average_block_time)\nThe spikes are caused by the difficulty bomb and the abrupt decays by hard-forks that delayed the bomb.\nIn RSK, most miners are configured to minimize mining pool bandwidth and create a high number of ommers. This is permitted and encouraged by design. They can also be configured to minimize the number of ommers, and consume more bandwidth. RSK targets approximately a density of 2 blocks every 33 seconds, and currently one block is an ommer, and the other is part of the trunk. If the RSK\/Bitcoin miners decide in the future to switch to the ommer-minimizing mode, almost no ommers will be created and the average trunk block interval will decrease to 16.5 seconds (to keep the 2 blocks per 33 seconds invariant). This is why, even if the trunk block interval in RSK is currently very stable, in the future (and without prior notice) it can suddenly change from 22 seconds down to 16.5 seconds. This makes the block number an unreliable source for computing the time for values such as the interest rate.\nOn the other hand, the block time cannot be easily forged because nodes check that block time is not in the future, and not prior to the parent block time. Also RSK has a consensus rule that ties RSK timestamp to Bitcoin timestamp, which makes cheating extremely expensive as the Bitcoin blocks back-dated or forward-dated produced by merge-mining would be invalid.\nHere is the RSK average block time and average uncle rate from June 2018 to March 2021. The X-axis shows the block number.\n\nEach dot in the chart corresponds to a day. We can see that the block interval is highly correlated to the uncle rate.\nThe EVM opcode NUMBER (which is used to obtain the block height) returns the number of trunk blocks, not considering ommers. As a consequence, the value returned cannot be used to count all types of blocks. However, a new opcode OMMERCOUNT could be added, to query the total number of ommers referenced up to the current block. To<geth>er with NUMBER, these opcodes could be used to better approximate the passage of time.","125":"I hope you were able to solve the problem.\nIf not, entryCount needs to be converted to uint224 before being left shifted.\nOtherwise, it's like shifting a 4 bit number 4 times or more.\n1101 << 4:\n1010\n0100\n1000\n0000\n\nAs you can see all the info is lost after shifting 4 times. Same thing happens when shifting entryCount 160 or 192 times and entryRange is bitwise ORed with 0 which has no effect. That is why entryRange only has the address information.\nentryRange |= uint224(ref.entryCount)<<160;\nentryRange |= uint224(ref.entryCount + amount)<<192;\n\nThis should solve the problem of getting 0 for the other two uints.","126":"I would like to know if creating contracts in Solidity and placing them on the Ethereum network generates any monetary costs?\n\nWhen you deploy a smart contract onto the Ethereum <blockchain>, you must pay a small fee since you're storing bytes of code on the chain.\nThe cost of deployment depends on 4 things:\n\nThe amount of bytecode in the contract\nThe flat fee of 32k gas (create opcode)\nThe transaction data sent when deploying the contract\nAny code run before the creation of the contract (in the constructor)\n\n\nIf it generates any costs, can I create my own network with Solidity so as not to generate costs?\n\nYou can look into creating your own testnet, look into Ganache.","127":"it appears your env variables are not set correctly, and it looks like in this case it's your <web3>_INFURA_PROJECT_ID.\nYou can fix it by setting the variable in your .env file and adding dotenv: .env to your brownie-config.yaml.\nbrownie-config.yaml:\ndotenv: .env\n.env:\nexport <web3>_INFURA_PROJECT_ID=YOUR_PROJECT_ID_HERE\nRemember to save these files.\nAdditionally, you should be on at least brownie version v1.14.6. You can find out what version you're on with:\nbrownie --version","128":"First, this is not substrate, it is polkadot-js-extension and appsd .\nAbout the substrate aspect see: https:\/\/docs.substrate.io\/v3\/advanced\/ss58.\nAbout polkadot-js-extension:\n\nthe encoded is your private key, encrypted with your provided password. The rest of the filed are pretty self-explanatory.\nhttps:\/\/wiki.polkadot.network\/docs\/learn-account-generation#storing-your-accounts-json-file\nhttps:\/\/wiki.polkadot.network\/docs\/learn-account-restore","129":"Is it possible to create the same pair on difference DEXes?\n\nYes. You just execute the proper functions to create a pair on the multiple selected DEX contracts.\n\nhow can I keep the same rate across these 2 platforms?\n\nA common way is to run an arbitrage bot. It buys (increasing the price) or sells (decreasing the price) on one platform until the price on this platform matches the other one. This can be expanded to automatically control the price on multiple platforms.","130":"It seems that the way to handle this is to foresee a separate login flow for the web app after all.\nEven when the user already has logged in into Tronlink, it needs to obtain a token to authenticate rest calls.\nThe way it would appear to work is by generating a random nonce and storing this nonce along with the public key in the User table.\nThe login flow then consists of signing the  nonce in the front-end, and verifying the signature in the backend after which the token will be generated and returned.","131":"With Chainlink price feeds, each data feed is updated by a decentralized oracle network. Each oracle in the set publishes data during an aggregation round. That data is validated and aggregated by a smart contract, which forms the feed's latest and trusted answer.\nEach oracle operator is rewarded for publishing data. On mainnet, sponsors are paying the LINK associated to keep those feeds live, decentralized, and secure, so they are not free. This allows the network to be a shared resource where everyone chips in a tiny bit and makes them even cheaper than running even your own centralized feed.\nThat being said, the price feeds are currently a simple view function, and anyone can technically use them as access controls are on the roadmap to be built at some point. It\u00e2\u0080\u0099s not really economical or fair for those backers who are paying to support them for everyone else. Until access controls are built, please reach out if you are using them on mainnet and learn how you can contribute to keep them reliable honest, and secure.\nWith API calls, Chainlink enables your contracts to access any external data source, through their decentralized oracle network. Making a HTTP GET request will fail unless your deployed contract has enough LINK to pay for it, therefore one needs to fund that smart contract.\nIf your contract is calling a public API endpoint, an Oracle job may already exist for it. To check available jobs and GET request prices, visit https:\/\/market.link\/","132":null,"133":"The linked code contains a definition of the contract Project and its constructor:\nconstructor\n(\n    address payable projectStarter,\n    string memory projectTitle,\n    string memory projectDesc,\n    uint fundRaisingDeadline,\n    uint goalAmount\n) public {\n    \/\/ ...\n}\n\nIt accepts address payable as the first argument. However, msg.sender is not payable by default (since Solidity 0.8.0).\nSolution: Typecast the address to address payable:\nProject newProject = new Project(\n    payable(msg.sender),\n    title,\n    description,\n    raiseUntil,\n    amountToRaise\n);","134":null,"135":"Calling approve inside the smart contract make the contract the msg.sender of the call to the approve function, what you are doing in get values is approving the contract to move the tokens the contract already owns, if you want to make an use to approve the contract to move the user tokens that call should be made by the user","136":"You can do it but it is going to cost you alot. You need to create a mapping in smart contract.\n mapping(string ->Metadata) private tokenURIToMetadata\n\nSince it is mapped from string, it cannot be public. so create a function\n  function getMetadata(string tokenUri) public returns(Metadata){\n         return tokenURIToMetadata[tokenUri]\n    }\n\nalso create Metadata struct:\nstruct Metadata{\n  string name;\n  string description;\n  string image;\n }\n\nAnd then you have to add new medata to the mapping:\nfunction addMetada(string memory tokenUri,?????????){}\n\nSince we cannot pass json object as an argument to the addMetada, now you have to create a separate mapping for each property of the metadata object. So the cost will be crazy amount.\nInstead, you could write the metadata to the filesystem or database but this would not be a good option.","137":"If the number that you need to be generated at random is _minAmount check chainlink, that way you can get a good source of randomness,see more here https:\/\/docs.chain.link\/docs\/get-a-random-number\/ and here https:\/\/docs.chain.link\/docs\/chainlink-vrf-best-practices\/","138":null,"139":"Add the 'payable' specifier to the function description:\nfunction startGame(...) external payable {","140":"You don't need the 0x in the private key, just put the exact key you got from metamask :)","141":"Im not sure if this helps or not, but maybe the module is missing.\nnpm i @toruslabs\/eccrypto","142":"I have implemented the function to get all the <transactions> of a given address on javaScript this might help you out.\n    async get<transactions>OfUser(address, options, connection) {\n    console.log({ address, options });\n    try {\n      const publicKey = new PublicKey(address);\n      const transSignatures =\n        await connection.getConfirmedSignaturesForAddress2(publicKey, options);\n      console.log({ transSignatures });\n      const <transactions> = [];\n      for (let i = 0; i < transSignatures.length; i++) {\n        const signature = transSignatures[i].signature;\n        const confirmedTransaction = await connection.getConfirmedTransaction(\n          signature,\n        );\n        if (confirmedTransaction) {\n          const { meta } = confirmedTransaction;\n          if (meta) {\n            const oldBalance = meta.preBalances;\n            const newBalance = meta.postBalances;\n            const amount = oldBalance[0] - newBalance[0];\n            const transWithSignature = {\n              signature,\n              ...confirmedTransaction,\n              fees: meta?.fee,\n              amount,\n            };\n            <transactions>.push(transWithSignature);\n          }\n        }\n      }\n      return <transactions>;\n    } catch (err) {\n      throw err;\n    }\n  }","143":"but I wanna \"transfer\" this charge to the user who intends to create the token. I was wondering if there is any way to my server send this transaction \"on behalf of someone else\" and the transaction charge be payed by this address?\n\nNo. This is not how Ethereum works. You need to design the system so that the user interacts directly with the <blockchain>, not your server, and this is the only way to push the gas cost to the user.","144":"Try this code:\n\/\/ This transaction is sending the tokens\nvar transaction = new <web3>.Transaction().add(\n  splToken.Token.createTransferInstruction(\n    splToken.TOKEN_PROGRAM_ID,\n    fromTokenAccount.address,\n    toTokenAccount.address,\n    fromWallet.publicKey,\n    [],\n    1000000, \/\/ This is transferring 1 token, not 1000000 tokens\n  ),\n);\n\nvar signature = await <web3>.sendAndConfirmTransaction(\n  connection,\n  transaction,\n  [fromWallet],\n  {commitment: 'confirmed'},\n);\n\nconsole.log(\"SIGNATURE: \", signature);\nlet tokenBalance = await toTokenAccount.amount;\nconsole.log(\"token balance: \", tokenBalance);","145":"I just got the solution, this is happening because I was trying to sync a bitcoin node that will sync around 400GB of data(approx) as mentioned by @David. So the solution to it was to make my bitcoin node, a test node it can be done by either making the testnet=1 or regtest=1. After this my bitcoin.conf file looks like this\nrpcuser=user\nrpcpassword=password\ntestnet=1\n[test]\nrpcbind=127.0.0.1\nrpcport=18332\n\nor if you want to use regtest then\nrpcuser=user\nrpcpassword=Password\nrpcallowip=127.0.0.1\nregtest=1\n[regtest]\nrpcbind=127.0.0.1\nrpcport=18443\n\nMake sure you use only one(either regtest or testnode). More details about options in config file can be found here.","146":"I believe https:\/\/kulupu.network\/ is a substrate chain based on PoW with probabilistic finality.\nHere's an older example of implementing UTXO in substrate: https:\/\/www.parity.io\/blog\/utxo-on-substrate\/\nFinally another interesting project is https:\/\/github.com\/interlay\/interbtc which do a BTC bridge so that parachain is likely to be aligned with bitcoin conventions.\nDo these help?","147":"Use output flag instead of \">\"\nconfigtxlator proto_decode --input .\/channel-artifacts\/ORG1MSPanchors.tx --type common.Envelope --output .\/channel-artifacts\/ORG1MSPanchors.json\nconfigtxlator proto_encode --input .\/channel-artifacts\/ORG1MSPanchors.json --type common.Envelope --output .\/channel-artifacts\/ORG1MSPanchors.tx","148":"FirstContract derives from ERC721 but your link at the end of the question points at ERC20 contract. So the definition of transfer() in the ERC20 is not relevant in this context.\n\nfirstContract._admin.transfer(value);\n\nThis snippet is attempting to use the Solidity native transfer() member of the address payable type, i.e. transfer ETH (not an ERC20 token). But it's failing because the firstContract._admin is not visible.\nIt would be visible if the FirstContract was a parent of SecondContract, as well as if the _admin had public visibility modifier. Since it doesn't have any visibility modifier specified, the default value internal is used.\n\nGive the _admin property the public visibility modifier\n\naddress payable public _admin;\n\nThen you need to change the call of firstContract._admin (property) to firstContract._admin() (function) because of the way that the compiler handles public properties in external contracts. See more about autogenerated getter functions in the docs.\n\nChange the call from the property to the function\n\nfirstContract._admin().transfer(value);\n\n\nMind that the SecondContract doesn't hold any ETH and currently has no way to receive any. So if you were trying to transfer() more than the current balance of the SecondContract (which is 0), the transaction would revert.\nFor testing purposes, you can add the payable modifier to the constructor and send it some ETH with the deployment transaction, so that you can test the transferValue().\nconstructor(address _address) payable {","149":"Access types:\npublic - can be used when contract was deployed, can be used in inherited contract\nexternal can be used when contract was deployed , can NOT be used in inherited contract\ninternal - can NOT be used when contract was deployed , can be used in inherited contract\nprivate - can NOT be used when contract was deployed, can NOT be used in inherited contract","150":"Endorsement was not defined in ChannelDefaults in configtx.yaml","151":"A struct is an object. to return it as a value, you have to flatten it.\nIf somebody has a magical trick, I would very interested to know it.","152":"You can specify a specific block number instead of the \"latest\" parameter - extract the number of the last block at some point and then iteratively reduce it by one until the desired depth of history is reached.\nHowever, it would be more efficient to write an application that would read new blocks in resident mode as they appear on the network and write them to some database - in this case, the user could get information much faster and to an arbitrary depth.\nAt the same time, we must not forget to track possible forks with the cancellation of the corresponding <transactions>.","153":"Before calling mintPomoBot function, with the same account (msg.sender) you need to call approve(spender, amount) function on RoboToken smart contract where spender = NFTPomoBots' address and amount = 1","154":"Bitcoin testnet is a separate <blockchain> with mining and <transactions>. It has its own rules for adjusting difficulty so that <transactions> happen even with few miners.\nhttps:\/\/en.bitcoin.it\/wiki\/Testnet\n\nTestnet2 was just the first testnet reset with a different genesis\nblock, because people were starting to trade testnet coins for real\nmoney.\n\nThat's hilarious. So yes, those are coins with mostly the same features on a separate <blockchain>. As with mainnet, their supply is limited and they have to be mined.\nCan anyone create a testnet? Sure, you can make your own:\nBitcoin:\nhttps:\/\/github.com\/freewil\/bitcoin-testnet-box\nEthereum and others:\nhttps:\/\/www.ulam.io\/blog\/how-to-setup-custom-ethereum-testnet\/","155":"You don't need an api key for testnet.\nKindly pay attention to contract difference between the test and production network for the token contract address you input. Also notice the cname difference on testnet url (api-testnet).\nWBNB-Testnet-Contract-Address: 0xae13d989dac2f0debff460ac112a837c89baa7cd\nWBNB-Mainnet-Contract-Address: 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\nProduction:\nhttps:\/\/api.bscscan.com\/api?module=contract&action=getabi&address=0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c&apikey=[BSCSCAN_API_KEY]\nTest:\nhttps:\/\/api-testnet.bscscan.com\/api?module=contract&action=getabi&address=0xae13d989dac2f0debff460ac112a837c89baa7cd\nFor more information check out bscscan testnet developer page.\nhttps:\/\/testnet.bscscan.com\/apidoc","156":null,"157":null,"158":null,"159":null,"160":"without more context and just these lines of code, it's difficult to answer precisely.\nDo you go through a DEFI smart contract that handles the transaction?\nor is it a full exchange contract?\nSo here are some general clues, but I will be able to answer more accurately if you answer the previous.\nWhen you look at the ERC777 documentation, you can see that sentence:\n\nThe token contract MUST emit a Sent event with the correct values as defined in the Sent Event.\n\nthe idea is that you (or the other contract) must create an event to see if the transfer is done or not.\nMaybe this example can help you.\npragma solidity ^0.5.0;\n\nimport \"@openzeppelin\/contracts\/token\/ERC777\/IERC777.sol\";\nimport \"@openzeppelin\/contracts\/introspection\/IERC1820Registry.sol\";\nimport \"@openzeppelin\/contracts\/introspection\/ERC1820Implementer.sol\";\nimport \"@openzeppelin\/contracts\/token\/ERC777\/IERC777Sender.sol\";\n\ncontract Simple777Sender is IERC777Sender, ERC1820Implementer {\n\n    bytes32 constant public TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n\n    event DoneStuff(address operator, address from, address to, uint256 amount, bytes userData, bytes operatorData);\n\n    function senderFor(address account) public {\n        _registerInterfaceForAddress(TOKENS_SENDER_INTERFACE_HASH, account);\n    }\n\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external {\n\n        \/\/ do stuff\n        emit DoneStuff(operator, from, to, amount, userData, operatorData);\n    }\n}","161":"Only the freeze authority on a token mint can freeze accounts, and no one else.  In your example, you are creating a Token instance with your wallet as the authority, which will fail, since your wallet is not the correct authority.\nTo do this properly, you need the private key of the mint's freeze authority.  If you can't get access to it, you can ask the freeze authority to freeze your account for you. But you would then need to ask them to unfreeze it for you as well.\nMore documentation at https:\/\/spl.solana.com\/token#freezing-accounts","162":"You're almost there. Given your example of a <blockchain> used for rental property use, I would assume that each transaction on the <blockchain> records who is currently renting the property. Using Alice and Bob as example names, let's say Alice is the current renter but her rental agreement has expired. If Bob wants to rent the place next, Alice would first transfer ownership back to the landlord, and from there the landlord would transfer ownership to Bob. On the <blockchain>, it would look something like this:\nAlice transfers ownership to Landlord\nLandlord transfers ownership to Bob\nNow, let say Bob wants to leave a review later on. How can we verify that Bob has been a previous renter? Well, it's simple. All we would need to do is go back through the <blockchain>'s history and check that rental ownership has been transferred to Bob at some point, which in this case it has. The <blockchain> is the database. Anyone who has had their names previously written down on the <blockchain> may leave a review.\nEDIT\nTo answer your question in the comments, how do we know that the transaction Alice transfers ownership to Landlord is true? Well, this transaction is considered valid if we can verify that Alice was the one to submit it. But how does this work?\nAlice would have been given a private key and a public key when setting up an address for the <blockchain>. You can think of the public key as a unique identifier for her, which in this case is just \u00e2\u0080\u009cAlice\u00e2\u0080\u009d since there\u00e2\u0080\u0099s no other Alice\u00e2\u0080\u0099s in this example. The private key is like a password: you need it in order to access your account and submit valid <transactions> to the <blockchain>.\nIn order for Alice to submit a valid transaction in her name, she would have to digitally sign it using her private key. There\u00e2\u0080\u0099s signing function that looks like this:\nSign(transaction, private key) = Signature\n\nGiven a transaction, Alice can use her private key to \u00e2\u0080\u009csign it\u00e2\u0080\u009d and produce a signature that\u00e2\u0080\u0099s sent to the miner. When the miner gets this transaction along with the signature, they can verify using a second function:\nVerify(transaction, Signature, public key) = True\/False\n\nUsing this function, the miner can verify if the transaction WAS in fact made with the private key associated with the public key. If it was, it\u00e2\u0080\u0099s a valid transaction and can be added to the <blockchain>.\nI don\u00e2\u0080\u0099t know the math behind these functions because it\u00e2\u0080\u0099s quite complicated, so unfortunately I can\u00e2\u0080\u0099t explain in detail here.\nI recommend watching 3Blue1Brown\u00e2\u0080\u0099s video on Bitcoin, which goes over digital signing. It\u00e2\u0080\u0099s a long video but it goes over all of the basics of understanding <blockchain> in an easy to understand way.\nEDIT 2\nIn your second follow up question, there would have to be a rule coded into the <blockchain> that the Landlord cannot rent out the property to anyone else while there is a current renter. In this case, if the Landlord tries to submit this transaction while Alice is renting:\nLandlord transfers ownership to Bob\nthe validator would go back in the <blockchain>'s history and check that the last renter has transferred ownership back to the Landlord, which in this case is not true. The <blockchain> would still have Alice recorded down as the current renter, and so this transaction would be considered invalid. Since Alice is the only with the private key to her account, she's the only one that can transfer ownership back to the Landlord so it can be rented again.","163":"If we do not consider commercial variants of distributed databases, then the use of IPFS is quite consistent with the general idea of building a decentralized system. In principle, instead of IPFW, you can use a torrent network or S3 cloud storage. When using S3, the network fault tolerance will be higher, but you will be connected to a specific storage provider.\nThe disadvantages of IPFS include the inability to exchange data in the absence of direct communication between the sender and the recipient of the file, however, this can be corrected by special procedures for exchanging files through third nodes.\nI am more involved in private enterprise networks and we widely use IPFS as part of them. From public projects - kekker.com","164":null,"165":null,"166":"Both functions are implementing the interface defined in the ERC-20 token standard.\ntransfer() is used for spending your own tokens.\nIf someone else has approved you (by executing the approve() function) to spend some of their tokens, you can use the transferFrom() function, pass their address as the from param, and spend tokens from their address (up to the approved amount).","167":"Maybe you need instance the provider first using new ethers.providers, in this example i use JsonRpcProvider.\nAnd Alternatively to wait(),you can execute another function to wait receipt using ethers.provider.waitForTransaction(hash,confirmations,timeout).\nYou can do something like this:\nconst ethers = require(\"ethers\");\nconst provider = new ethers.providers.JsonRpcProvider(HTTP_PROVIDER);\nconst wallet = new ethers.Wallet(PRIVATE_KEY, provider);\nconst swap1 = await wallet.sendTransaction({\/\/});\nconst receipt = provider.waitForTransaction(swap1.hash, 1, 150000).then(() => {\/\/});","168":null,"169":"You need to have the AND endorsement policy in the chaincode and then invoke the transaction.\nThe possible solutions to your problem are\n\nMake both the peers as endorsing peers or\nAdd a new organization to your network\n\nYou need to have the AND endorsement policies to mimic this scenario. Whenever we invoke the chaincode we need to pass the endorsing peers using the --peerAddresses and their TLS certificates using --tlsRootCertFiles flags\npeer chaincode invoke -n basic -C mychannel -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com  --tls --cafile \"$ORDERER_CA\" --peerAddresses localhost:7051 --tlsRootCertFiles ${PWD}\/organizations\/peerOrganizations\/org1.example.com\/peers\/peer0.org1.example.com\/tls\/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles ${PWD}\/organizations\/peerOrganizations\/org2.example.com\/peers\/peer0.org2.example.com\/tls\/ca.crt  -c '{\"Args\":[\"CreateAsset\", \"1001\",\"red\", \"20\",\"aditya\",\"100\"]}'","170":"store the result in a filelike:\nmyfile = open(\u00e2\u0080\u009cresult.txt\u00e2\u0080\u009d,\u00e2\u0080\u0099w\u00e2\u0080\u0099)\n\nmyfile.write(str(result))","171":"Problem -\nRunning node index.js throws a module not found error.\nSolution -\nYou need to change directory one directory level deeper.\nYou are currently in\n\/Users\/josh\/Desktop\/random\/index.js\nYou said you created a directory, then put a Github repo inside of that directory. That means you need to change directory into the Github repo still.\nIf you look at the error it shows that you are running node index.js inside of a directory on your Desktop.\nBased on your description of putting a Github repo inside of a directory you created, you likely need to use cd to move into it.\nSolution -\n\ncd repoName\n\nls to verify index.js is in the current location.\n\nWhen you see index.js in the output from ls type node index.js","172":"It's not contract.functions.decode_function_input, it is contract.decode_function_input()","173":"The behavior of miners and other nodes is determined by the specific protocol of the network. That is, either such a block can be considered invalid and not accepted as \"next\", or the block will be accepted, but the <transactions> included in it will be ignored. In some <blockchain>s, the miner who created such a block can be somehow fined - excluded from the pool of miners, deprived of part of the collateral.","174":"The Substrate runtime code (including the pallets) has two compilation target: std for the native binary and no_std for the wasm binary. This is necessary because Substrate supports to run both the wasm runtime for upgradability, and the native binary for performance (or for testing easily).\nWhen you compile a <blockchain>, it will call the custom build script (build.rs in your runtime crate) to build the wasm binary first, save it in the build dir, and then build the native binary with the wasm binary embedded in wasm_binary.rs. This answered your question about \"made available\".\nTherefore the following code means, if it's in std mode, it will include the wasm file built in no_std mode, embedded in the wasm_binary.rs file.\n#[cfg(feature = \"std\")]\ninclude!(concat!(env!(\"OUT_DIR\"), \"\/wasm_binary.rs\"));","175":"Just rewrite your code like this in 'compile.js'.This work fine even in 0.8.0 version of solidity\nconst path = require('path');\nconst fs = require('fs');\nconst solc = require('solc');\n\nconst inboxpath = path.resolve(__dirname, 'Contracts', 'Inbox.sol');\nconst source = fs.readFileSync(inboxpath, 'UTF-8');\n\nvar input = {\n    language: 'Solidity',\n    sources: {\n        'Inbox.sol' : {\n            content: source\n        }\n    },\n    settings: {\n        outputSelection: {\n            '*': {\n                '*': [ '*' ]\n            }\n        }\n    }\n};\n\nvar output = JSON.parse(solc.compile(JSON.stringify(input)));\n\n\/\/ console.log(output.contracts['Inbox.sol']['Inbox']);\n\n\/\/ exports.abi = output.contracts['Inbox.sol']['Inbox'].abi;\n\/\/ exports.bytecode = output.contracts['Inbox.sol']['Inbox'].evm.bytecode.object;","176":"Cross chain (network) <transactions> need a bridge. It can be a centralized one or it can be trust-less and decentralized one like near rainbow bridge.\nIt's not a trivial problem to tackle.\nFollowing links might give you insight on how it should get done.\nnear rainbow bridge\navalanche bridge\ncosmos IBC\npolkadot bridges","177":null,"178":"This error means that you are leaking the standard library twice somewhere in a dependency. This usually translates to: for some pallet x, where pallet x has feature std, you have forgotten to add x\/std somewhere.\nRecall that all FRAME crates need to be imported with default-features = false, and their std feature enabled in the top crate's std.","179":"Solidity source code is compiled to the EVM-compatible bytecode. Then you can deploy the bytecode to the actual live network.\nAfter you compile the code (using solc, short for the Solidity compiler), you can update it and recompile for as many times as you want.\n\nBut, I'm guessing you wanted to ask if you can update the code after you've deployed it to the network.\nThe simple answer is: No. Bytecode is immutable, and once you've deployed it, there's no way to change it.\nHaving said that, ... you can make use of the Proxy pattern, where you don't actually change the bytecode, just a pointer (value in storage) to an address that holds the contract implementation. This allows you to deploy a new version of your contract to a new implementation address (in the background), while users still interact with the original proxy address (in the front). See this page by OpenZeppelin for more details, code examples, and diagrams of how this works in more depth.\nAdvanced topic: Thanks to the combination of selfdestruct and create2 EVM opcodes, it's also possible to destroy the contract and redeploy it with new constructor params. This article sums it up neatly.","180":"You have peer discovery disabled in your code, usually, you do it when you specify peers you want to connect to but since you don't do it - the SDK client just didn't know to what peers it should connect so it connected to none of them, got 0 responses and threw an error. So I changed this line from your example:\ndiscovery: { enabled: false, asLocalhost: true }\n\nto:\ndiscovery: { enabled: true, asLocalhost: true }\n\nAnd it worked.","181":"Solution:\nReplace this:\nimport {Contract} from '@ethersproject\/contracts'\n\nFor this:\nimport {Contract} from '@usedapp\/core\/node_modules\/@ethersproject\/contracts'","182":null,"183":"I have not used v2.2 before but I have successfully used v1.4 and 2.1 before and what can tell you is that \"join <transactions>\" are submitted to the orderer in the network.\nThe orderer has a port number of 7050. So you can try the code below to see if your orderer is listening on port 7053 or 7050.\ntelnet localhost 7053\ntelnet localhost 7050\n\nBefore trying the codes, make sure you start your network.","184":"Should be some breaking changes. Most probably the copy of the example you have are old version. If you visit the latest readme, the new version should be initiated with:\nimport { create } from 'ipfs-http-client'\nconst client = create()\nconst client = create(new URL('http:\/\/127.0.0.1:5002'))\nconst { cid } = await client.add('Hello world!')\n\nYou can rollback to use the old version by specifiying the version no @, i.e. npm install ipfs-http-client@42.0.0. Instead of npm install ipfs-http-client which always pull the latest version (53.X now).\nIt's also possible to view your installed version in 'package.json' file to see the version you are using and edit with the version you need, 'delete node_modules' folder and re-run npm install. But this requires you to save, which needs a parameter -s, so to run is npm install -s ipfs-http-client\nVersion 42, sample code should be the one you are using 'https:\/\/github.com\/ipfs\/js-ipfs\/tree\/v42.0.0'.\nVersion 53(or the official 1.0 release), tells that there is a breaking change if you visit the official github site; where ipfs-http-client requires a create() and not to be used directly.","185":"You can use ipfs to store data of your dapp.\nBasically ipfs is also like a <blockchain>.\nWhen you send data to ipfs it gives you a hash than you can publish that hash on <blockchain>.\nIpfs is free.\nAnd when you store data directly to <blockchain>, it will be costly than storing a simple hash.\nThat hash will be used to identify ur data.","186":"I think you have a good understanding and I want to add some more facts.\nYou can also simply get data from smart contract functions, not only change the variable\/data. That kind of functions have view keyword in the function signature in solidity code and when you call these functions, you don't need to pay Ethers, because they don't change the data, but they simply gets the data.","187":"MetaMask runs as a plugin or add-on in the web browser. It is available for the Chrome,\nFirefox, Opera, and Brave browsers. The key idea behind the development of MetaMask is to\nprovide an interface with the Ethereum <blockchain>. It allows efficient account management and\nconnectivity to the Ethereum <blockchain> without running the Ethereum node software locally. Because <blockchain> stored on nodes and in order to get the <blockchain> data, you need to connect to a node.\nMetaMask allows connectivity to the Ethereum <blockchain> through the infrastructure available\nat Infura ( https:\/\/infura.io ). This allows users to interact with the <blockchain> without having\nto host any node locally.\nMetamask injects a ethereum (before it was <web3>) object within the running websites' JavaScript context, which allows immediate interface capability for DApps. This injection allows DApps to interact directly with the <blockchain>.\nMetaMask also allows account management. This acts as a verification method before any\ntransaction is executed on the <blockchain>. The user is shown a secure interface to review the\ntransaction for approval or rejection before it can reach the target <blockchain>.","188":"If by \"Metaplex\" in your orginal post you are referring to the Web UI here https:\/\/github.com\/metaplex-foundation\/metaplex\/tree\/master\/js\/packages\/web keep in mind this UI does a lot of stuff.\nAs you have noted in your update: Metaplex is composed of many different program accounts. You would have to locate each of these accounts then \"--clone\" them on the solana-test-validator command line in order to ensure Metaplex works.\nAFAIK there is no script or instructions about how to set up Metaplex from scratch.","189":"You could go through the scripts of Fabric-samples to see what it does as a reference but in general the algorithm is the following:\n\ndefine the participants in your network in crypto-config.yaml and generate their crypto materials with either cryptogen (but not for production network!) or manually.\ndefine the network parameters like different policies, ordered type, consortium etc in configtx.yaml and generate a genesis block from it using configtxgen tool\nhaving that you may run required nodes like peers belonging to different organizations, orderers and certificate authorities servers and actually start the network, the channels, install chaincodes as it all referenced in Fabric docs: https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.2\/","190":"When you don't specify a custom TypeAdapter, Gson will use a reflection based adapter instead (which seems to be the case here). Therefore (as hinted by the exception message) you need to allow the Gson module to access your classes using reflection. You can either solve this by adding exports <blockchain> to com.google.gson; to your module-info.java file (as suggested by the exception message), or, because only runtime access is required for Gson, it suffices to use opens <blockchain> to com.google.gson;.\nHowever, if you have a large number of packages which need to be accessible to Gson you can also open your complete module for runtime access to all modules by writing open module noobChain { ... }.\nSee also \"Understanding Java 9 Modules\" for more information.\nSome additional minor notes:\n\nrequires gson;\n\nWhich Gson version are you using? Recent Gson versions are using the module name com.google.gson (see source).\n\nrequires java.sql;\n\nUnless your code requires the java.sql module, you can remove this. Starting with Gson 2.8.9 the dependency on the java.sql module is optional and Gson should work fine without it as well.","191":"You should pass {\"withType\": true} to the sign method too.\nconst s1 = u8aToHex(alice.sign(actualPayload, {\"withType\": true}));\n\nsr25519 uses randomness for signing, so the results won't be the same, but they should have the same length.","192":"You can, but it requires a bit of type juggling to do so.\nFirst, you need to realize that type Call = T::Call; in ChargeTransactionPayment. Looking at trait Config in pallet_transaction_payment, no type Call can be seen there. Instead, this type is coming from frame_system::Config (which is the super-trait of all pallets).\nA brief look at the top level runtime aggregator file unravels that this Call type is essentially the outer-call of the runtime, an enum that encapsulates the call of all pallets.\nThat being said, the main point here is that from within pallet_transaction_payment, we cannot know of this outer-call contains this particular call from staking or not. To do so, you need to enforce this assumption via a new trait bound, namely IsSubType. This trait is specifically made to convert from wrapping type (like the outer-call) into its inner variants. See an example of this type being implemented for node_runtime's Call type.\nApplying the following diff to substrate master should do exactly what you want .\ndiff --git a\/Cargo.lock b\/Cargo.lock\nindex ea54adf99e..df66185163 100644\n--- a\/Cargo.lock\n+++ b\/Cargo.lock\n@@ -6074,6 +6074,7 @@ dependencies = [\n  \"frame-support\",\n  \"frame-system\",\n  \"pallet-balances\",\n+ \"pallet-staking\",\n  \"parity-scale-codec\",\n  \"scale-info\",\n  \"serde\",\ndiff --git a\/frame\/transaction-payment\/Cargo.toml b\/frame\/transaction-payment\/Cargo.toml\nindex 1d3066e39f..0e705514bb 100644\n--- a\/frame\/transaction-payment\/Cargo.toml\n+++ b\/frame\/transaction-payment\/Cargo.toml\n@@ -27,6 +27,7 @@ sp-std = { version = \"4.0.0-dev\", default-features = false, path = \"..\/..\/primit\n \n frame-support = { version = \"4.0.0-dev\", default-features = false, path = \"..\/support\" }\n frame-system = { version = \"4.0.0-dev\", default-features = false, path = \"..\/system\" }\n+pallet-staking = { version = \"4.0.0-dev\", default-features = false, path = \"..\/staking\" }\n \n [dev-dependencies]\n serde_json = \"1.0.68\"\n@@ -44,5 +45,6 @@ std = [\n    \"sp-std\/std\",\n    \"frame-support\/std\",\n    \"frame-system\/std\",\n+   \"pallet-staking\/std\",\n ]\n try-runtime = [\"frame-support\/try-runtime\"]\ndiff --git a\/frame\/transaction-payment\/src\/lib.rs b\/frame\/transaction-payment\/src\/lib.rs\nindex 59d94a8237..3b0803663d 100644\n--- a\/frame\/transaction-payment\/src\/lib.rs\n+++ b\/frame\/transaction-payment\/src\/lib.rs\n@@ -251,7 +251,7 @@ pub mod pallet {\n    pub struct Pallet<T>(_);\n \n    #[pallet::config]\n-   pub trait Config: frame_system::Config {\n+   pub trait Config: frame_system::Config + pallet_staking::Config {\n        \/\/\/ Handler for withdrawing, refunding and depositing the transaction fee.\n        \/\/\/ Transaction fees are withdrawn before the transaction is executed.\n        \/\/\/ After the transaction was executed the transaction weight can be\n@@ -696,7 +696,8 @@ impl<T: Config> sp_std::fmt::Debug for ChargeTransactionPayment<T> {\n impl<T: Config> SignedExtension for ChargeTransactionPayment<T>\n where\n    BalanceOf<T>: Send + Sync + From<u64> + FixedPointOperand,\n-   T::Call: Dispatchable<Info = DispatchInfo, PostInfo = PostDispatchInfo>,\n+   T::Call: Dispatchable<Info = DispatchInfo, PostInfo = PostDispatchInfo>\n+       + frame_support::traits::IsSubType<pallet_staking::Call<T>>,\n {\n    const IDENTIFIER: &'static str = \"ChargeTransactionPayment\";\n    type AccountId = T::AccountId;\n@@ -736,8 +737,15 @@ where\n        info: &DispatchInfoOf<Self::Call>,\n        len: usize,\n    ) -> Result<Self::Pre, TransactionValidityError> {\n-       let (_fee, imbalance) = self.withdraw_fee(who, call, info, len)?;\n-       Ok((self.0, who.clone(), imbalance))\n+       use frame_support::traits::IsSubType;\n+       if let Some(pallet_staking::Call::bond_extra { .. }) = call.is_sub_type() {\n+           \/\/ skip\n+           todo!()\n+       } else {\n+           \/\/ default impl\n+           let (_fee, imbalance) = self.withdraw_fee(who, call, info, len)?;\n+           Ok((self.0, who.clone(), imbalance))\n+       }\n    }\n \n    fn post_dispatch(\n\n\nNote that this approach is implying that the pallet_staking::Config be present in the runtime, which is not aligned with the modularity of Frame, and ergo is not implemented. If you want to have this feature, as of now, the only way is to fork pallet_transaction_payment and customize it a bit for your runtime.","193":"Please ensure that wallet.publicKey contains valid value.\nconsole.log(wallet.publicKey);\/\/I think this might be an empty string.\n\nconst fromTokenAccount = await mintToken.getOrCreateAssociatedAccountInfo(\n        wallet.publicKey\n      );","194":"You can generate an address by using\n<web3>.eth.accounts.create();","195":"A view function promises not to modify the contract state - such as not to modify storage variables. See the docs for more info.\nBut your code modifies the balance variable, which is a storage variable.\nfunction withdraw (uint wdraw_amt) public view returns(string memory error){\n    if(wdraw_amt<=balance){\n     balance -= wdraw_amt;    \/\/ <-- here\n    }\n\n\nand updates the balance according to the deposits and withdraws\n\nSince one of your requirements is to actually update the storage variable, you need to remove the view modifier in order to be able to do that.\nfunction withdraw (uint wdraw_amt) public returns(string memory error){\n\nUsers will then need to send a transaction (not a call) to execute the withdraw() function.\n\nWhen you have a function executed by a transaction (and not by a call), you can get the string output in two ways.\n\nRevert reason message\nfunction withdraw(uint wdraw_amt) public {\n    if (wdraw_amt <= balance) {\n        balance -= wdraw_amt;\n    } else {\n        revert(\"Insufficient Balance\");\n    }\n}\n\n\nEvent log\nevent Error(string _message);\n\nfunction withdraw(uint wdraw_amt) public {\n    if (wdraw_amt <= balance) {\n        balance -= wdraw_amt;\n    } else {\n        emit Error(\"Insufficient Balance\");\n    }\n}","196":"after some research on this repos :\n\nhttps:\/\/github.com\/<web3>p\/<web3>.php\nhttps:\/\/github.com\/<web3>p\/ethereum-tx\n\nI can solve this case by edit instance $contract to :\n$timeout = 10;\n$contract = new Contract(new HttpProvider(new HttpRequestManager(\"https:\/\/ropsten.infura.io\/v3\/a3491ed6ac7a4c3a87a914bbe5a1xxxx\", $timeout)) , $contractABI);\n\nthankyou @Jos\u00c3\u00a9 Carlos PHP for the comment","197":"You will need to check the docker log of the peer\ndocker logs <container id>\n\nThere is insufficient information provided to help you.","198":"Check that the port numbers are the same between GUI and CLI. I was able to fix by going into Ganache (GUI) settings -> server and reset the port to 8545. Save and restart. Brownie should attach next time you run your deploy script.","199":"To access chainlink data feeds you simply need to import the AggregatorV3 Interface into whatever contract you would like to have use them like this:\nimport \"@chainlink\/contracts\/src\/v0.8\/interfaces\/AggregatorV3Interface.sol\";\n\nThen initialize the exact data feed your contract is pointing to in the constructor like this:\n    constructor() {\n        priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331);\n    }\n\nWhere 0x9326....331 is the address of the data feed we are pointing to.\nYou do not have to actually put the entire example PriceConsumer contract from the Chainlink docs into your own contract. That is just an example to show you how to structure a contract to use data feeds as I explained above.","200":null,"201":"The current version of aggregation used is called \"OCR\" or \"Off-Chain Reporting\". FluxAggregator was the previous aggregation method. The code and contracts for OCR can be found in this repo:\nhttps:\/\/github.com\/smartcontractkit\/libocr\nRunning your own feeds isn't officially supported yet (this is being worked on), so there isn't any documentation, but it is possible to run your own feed using that code if you really need to. You could also aggregate a couple of \"Chainlink AnyAPI\" requests in your contract to simulate a feed.\nIf this is for a hackathon (or just to demo your app) and there's no existing data feed for the data you need, I'd suggest using the \"AnyAPI\" feature and a single Chainlink node, so you can focus on your application and not on building an oracle network. Once it's time to go to production\/mainnet, the Chainlink Labs team can assist you in making a decentralized oracle network. You can reach them here on the Chainlink website.\nReference: OCR Announcement Blog","202":"You need to add one function in staking contract which shows amount of the staking:\nfunction showStakeAmount() external view returns(uint256){\n    \/\/I don't know your codes about this but you need a mapping to store\n    \/\/the stake amount of each user and here you return it but something like this:\n    return StakingAmountOfUsers(msg.sender);\n}\n\nThen you need an interface of the staking contract and its address, also make an modifier in NFT contract (Following changes must be added):\ninterface StakingInterface{\n    function showStakeAmount() external view returns(uint256);\n}\n\ncontract CMRGachaSeedNFT is ERC721URIStorage, AccessControl, ERC721Enumerable {\n    uint256 AmountThatShouldBeStaked;\n\n    StakingInterface StakingContract;\n\n    constructor(address STAKING_CONTRACT_ADDRESS){\n        StakingContract = StakingInterface(STAKING_CONTRACT_ADDRESS);\n    }\n    \n    modifier isStaked(){\n        require(StakingContract.showStakeAmount() > AmountThatShouldBeStaked, \"You did not stake enough amount of X token\");\n        _;\n    }\n\n    function mintItem(address _address, string memory _tokenURI)\n        public\n        onlyRole(CONTRACT_ROLE)\n        returns (uint256)\n        isStaked()\n    {\n        \/\/Continue coding...\n    }\n}","203":"You can use ethereumjs-wallet, bip39 and ethers to<geth>er to create a wallet.\nimport * as Bip39 from 'bip39';\nimport { Wallet } from 'ethers';\nimport { hdkey } from 'ethereumjs-wallet';\n\n\/**\n * @dev Create Wallet from Mnemonic\n * @param mnemonic = Mnemonic phrase\n * @param index  = Account index\n * @returns wallet\n *\/\nconst createWallet = async (mnemonic: string, index: number): Promise<Wallet> => {\n  const seed = await Bip39.mnemonicToSeed(mnemonic);\n  const hdNode = hdkey.fromMasterSeed(seed);\n  const node = hdNode.derivePath(`m\/44'\/60'\/0'`)\n  \/\/ m\/44'\/60'\/0'\/0\n  const change = node.deriveChild(0);\n  \/\/ m\/44'\/60'\/0'\/0\/{N}\n  const childNode = change.deriveChild(index);\n  const childWallet = childNode.getWallet();\n  const wallet = new Wallet(childWallet.getPrivateKey().toString('hex'));\n  return wallet\n}\n\nI have test this in both IOS and Android and was able to create a HD Wallet instantly.\nTo use bip39 in React Native  environment you have to apply some patches to bip39.\nYou can refer how MetaMask mobile-app has applied those patches here using patch-package.\nIn my patch I have imported randomBytes from react-native-crypto instead of randombytes module\nvar {randomBytes} = require('react-native-crypto')\n\nVersions of node modules I have used,\nbip39 = 2.6.0\nethers = 5.5.3\nethereumjs-wallet = 1.0.2\nreact-native-crypto = 2.2.0","204":"You've understood almost everything correctly.  The last bit to understand is that the buyer \/ seller are not the same thing as the recipient \/ sending token account.  Tokens (including NFTs) are stored in SPL token accounts, which are separate accounts from the buyer and seller, which are system accounts with SOL.\nIf you look at the transaction in the explorer: https:\/\/explorer.solana.com\/tx\/3sRxEfGD2VmrJmw3YsULDER42HW3W2eiAv74Tn41MoL1YQmtELDcEiRf29cBPfsxRVcqXCEkCmwPJNihxAtfRZ4S, you'll see that the buyer spending 50 SOL is indeed GWcJPnrAuMqN83D8wDvmtoAdGATJGLsCRvgZ85qxXP3j, but that the recipient token account is 7wuC7oveWkSoYoBR1WT5ZwMn62uQddSebWghQrQdFE72. GWcJPnrAuMqN83D8wDvmtoAdGATJGLsCRvgZ85qxXP3j cannot hold tokens, but 7wuC7oveWkSoYoBR1WT5ZwMn62uQddSebWghQrQdFE72 can, and is owned by GWcJPnrAuMqN83D8wDvmtoAdGATJGLsCRvgZ85qxXP3j.\nYou can read more about the Solana account model at https:\/\/docs.solana.com\/developing\/programming-model\/accounts and more info about the SPL token program at https:\/\/spl.solana.com\/token","205":null,"206":"I think that you probably interrupted the node you launched when you typped :\nnpx hardhat node\n\nYou should keep it running, open another terminal for the rest of the tutorial.\nAlso you could check the output of this command. Is it indicating something else than ? :\nStarted HTTP and WebSocket JSON-RPC server at http:\/\/127.0.0.1:8545\/","207":null,"208":null,"209":"Yes, the application organizations can provide ordering nodes. For example the sample configuration shows a single organization providing both peers and ordering nodes. Simply configure OrdererEndpoints under the organization configuration.\nThat being said, for each organization that provides an ordering node, you may want to consider creating a separate logical organization in the channel configuration, so that the peer credentials and orderer credentials can be managed separately using different root certificate authorities.","210":null,"211":"Interestingly, I found this quote in the metaplex documentation:\n\nThe SPL Metadata program supports storing up to five co-creators that\nshare potential future profits from sales for the items as defined by\nseller_fee_basis_points . Each creator needs to be added as part of\nthe minting process and is required to approve metadata that was used\nin his name using the sign_metadata endpoint. Unverified artwork\ncannot be sold with Metaplex.\nDuring the first sale, creators share in 100% of the proceeds, while\nin follow up sales, they share in proceeds as a percentage determined\nby seller_fee_basis_points. Whether or not a metadata is considered in\nsecond sale or not is determined by the primary_sale_happened boolean\non the Metadata account.\n\nMy interpretation of this is that the expected behavior should be for the initial sale to get divided between creators using the ratios defined by each creator's share. Sounds like you're experiencing something different.\nKeep in mind that this documentation is for the parent project. Candy-machine-mint seems to be a fork and they may have altered some of that behavior.","212":"I would make sure you did pip install <web3> in the terminal\n\nOnce you've installed <web3> I would do cmd + shift + p and search for Reload Window\nVS Code\n\n\n... This will update VS Code and get rid of any unwanted errors","213":"First check your account balance : balance = <web3>.eth.getBalance(someAddress); then try to specify the gaslimit contractInstance.createProposal(\"ADHD\", \"Foo\", 2, {from: <web3>.eth.accounts[1], gas:3000000})","214":null,"215":"I cannot make a modifier to check the address.\n\nYou can, but the address needs to be in a variable, set after the contract B has been deployed.\npragma solidity ^0.8;\n\ncontract ContractA {\n    address contractB;\n    \n    modifier onlyContractB {\n        require(msg.sender == contractB);\n        _;\n    }\n\n    function foo() external onlyContractB {\n    }\n    \n    function setContractBAddress(address _contractB) external {\n        contractB = _contractB;\n    }\n}\n\npragma solidity ^0.8;\n\ninterface IContractA {\n    function foo() external;\n}\n\ncontract ContractB {\n    IContractA contractA;\n    \n    constructor(address _contractA) {\n        contractA = IContractA(_contractA);\n    }\n\n    function callFoo() external {\n        contractA.foo();\n    }\n\n}\n\n\nDeploy contract A\nDeploy contract B, passing it the \"A\" address in the constructor\nSet the contractB value in \"Contract A\".\n\nI left out any auth mechanism while setting the contractB address in ContractA for simplicity. In this example, anyone can set the address, which you probably don't want, and you should add a mechanism allowing only authorized senders to set the contractB value in ContractA.","216":"I believe the addresses are off:\nConstructor Arguments of your contract:\n-----Decoded View---------------\nArg [0] : vrfCoordinator (address): 0xa36085f69e2889c224210f603d836748e7dc0088\nArg [1] : link (address): 0xdd3782915140c8f3b190b5d67eac6dc5760c46e9\nArg [2] : keyHash (bytes32): 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4\nArg [3] : fee (uint256): 100000000000000000\nVia Chainlinks Docs:\nLINK    0xa36085F69e2889c224210F603D836748e7dC0088\nVRF Coordinator 0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9\nKey Hash    0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4\nFee 0.1 LINK\nSwitched Link and VRF are probably the culprit.","217":"Below is the step-by-step guide to create a bitcoin address via the Bash command line on Linux.\n\nWarning! See Edit #1 at the end.\n\nThis way you will understand how you can create an app (wallet) that generates Bitcoin addresses.\nWallet and public address are different things: a wallet is an application that creates and stores private keys and makes the public key available as the crypto address where the coins will be received.\nNote that the steps are incremental. The next step always has the copy of the previous step.\n# a1) Prerequisite of installed applications.\napt-get install -y openssl base58 grep xxd\n\n# a2) Choose a password.\nPASSWORD=\"my-difficult-passphrase\"\n\n# a3) Hash SHA256 over the password.\n#     Don't use echo because it adds \\n to the end.\nPASSWORD=\"my-difficult-passphrase\"; printf $PASSWORD | openssl sha256\n\n# a4) Keep only the hex output. We're going to use this often.\nPASSWORD=\"my-difficult-passphrase\"; printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# a5) Add two magic numbers...\n#     - at the beginning: 302e0201010420\n#     - and at the end: a00706052b8104000a\n#     They relate to secp256k1 refers to the parameters of the elliptic curve used in Bitcoin's <cryptography>.\nPASSWORD=\"my-difficult-passphrase\"; printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\"\n\n# a6) Get the bytes of this hex.\nPASSWORD=\"my-difficult-passphrase\"; printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps\n\n# a7) Generate the Elliptic-curve key pair.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps)\n\n# At this point we have the key pair.\n# b) With the public key we will make the bitcoin address.\n# c) The private key is converted to WIF format (Wallet Import Format)\n\n# b1) Extract the hex value from the public key.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n'\n\n# b2) Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps\n\n# b3) Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256\n\n# b4) Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# b5) Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps\n\n# b6) Hash RIPEMD-160.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160\n\n# b7) Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\"\n\n# b8) We prefix the hex with \"00\".\n#     Bitcoin P2PKH addresses begin with the version byte value 0x00.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\"\n\n# Now get a checksum by passing the SHA256 hash twice in the hex bytes.\n\n# b9) Checksum loop 1. Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps\n\n# b10) Checksum loop 1. Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256\n\n# b11) Checksum loop 1. Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# b12) Checksum loop 2. Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps\n\n# b13) Checksum loop 2. Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256\n\n# b14) Checksum loop 2. Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# b15) Get the first 4 bytes (or 8 chars) of the checksum.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\"\n\n# Checksum completed here.\n\n# b16) Add the checksum to the end of the\n#      hex prefixed with \"00\" in step b8.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\")$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\"\n\n# b17) Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\")$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\" | xxd -r -ps\n\n# b18) Encode with Base58.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\")$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\" | xxd -r -ps | base58\n\n# Here the bitcoin address ends\n\n# c1) Extract the hex value from the private key.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n'\n\n# c2) Ensures length of 32 bytes (or 64 chars) by padding with zeros.\nPASSWORD=\"my-difficult-passphrase\"; printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\"\n\n# c3) We prefix the hex with \"80\".\n#     The magic number 0x80 signals the version of the private key.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\"\n\n# Again: Now get a checksum by passing the SHA256 hash twice in the hex bytes.\n\n# c4) Checksum loop 1. Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps\n\n# c5) Checksum loop 1. Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256\n\n# c6) Checksum loop 1. Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# c7) Checksum loop 2. Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps\n\n# c8) Checksum loop 2. Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256\n\n# c9) Checksum loop 2. Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# c10) Get the first 4 bytes (or 8 chars) of the checksum.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\"\n\n# Checksum completed here.\n\n# c11) Add the checksum to the end of the\n#      hex prefixed with \"80\" in step c3.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\")$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\"\n\n# c12) Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\")$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\" | xxd -r -ps\n\n# c13) Encode with Base58.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\")$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\" | xxd -r -ps | base58\n\n# Here the private key as WIF ends\n\n\nBelow is the same sequence of steps in one line commands for Bash:\nPASSWORD=\"my-difficult-passphrase\"; printf \"\\nBitcoin Wallet\\n\\nPassword:\\n$PASSWORD\\n\\nPrivate Key:\\n$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | sha256sum | sed 's\/[^a-z0-9]\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | sed 's\/[ :]\/\/g' | tr -d '\\n')\" | sed 's\/.*\\(.\\{64\\}$\\)\/\\1\/')\\n\\nPrivate Key, WIF:\\n$(printf \"$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | sed 's\/^.*\\s\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | sed 's\/[ :]\/\/g' | tr -d '\\n')\" | sed 's\/.*\\(.\\{64\\}$\\)\/\\1\/')\")$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | openssl sha256 | sed 's\/^.*\\s\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | sed 's\/[ :]\/\/g' | tr -d '\\n')\" | sed 's\/.*\\(.\\{64\\}$\\)\/\\1\/')\" | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | sed 's\/\\(.\\{8\\}\\).*\/\\1\/')\" | xxd -r -ps | base58)\\n\\nPublic Key:\\n$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | sha256sum | sed 's\/[^a-z0-9]\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | sed 's\/[ :]\/\/g' | tr -d '\\n')\\n\\nPublic Key, Wallet:\\n$(printf \"$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | openssl sha256 | sed 's\/^.*\\s\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | sed 's\/[ :]\/\/g' | tr -d '\\n' | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | xxd -r -ps | openssl ripemd160 | sed 's\/.*\\s\/\/' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g')\")$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | openssl sha256 | sed 's\/^.*\\s\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | sed 's\/[ :]\/\/g' | tr -d '\\n' | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | xxd -r -ps | openssl ripemd160 | sed 's\/.*\\s\/\/' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g')\" | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | sed 's\/\\(.\\{8\\}\\).*\/\\1\/')\" | xxd -r -ps | base58)\\n\\n\"\n\nThe output of this command:\n\n\nNow the same one line command for PowerShell (perhaps for Windows).\n$password=\"my-difficult-passphrase\"; $tempFile=\"$env:temp\/btcaddress.tmp\"; [System.IO.File]::WriteAllText($tempFile, $password); $passwordSha256=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value; $passwordSha256Secp256k1=\"302e0201010420${passwordSha256}a00706052b8104000a\"; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($passwordSha256Secp256k1)); $keys=$($(openssl ec -inform DER -text -noout -in $tempFile | Select-String \"(?<=^\\s+)[0-9a-f:]+\").Matches | Select-Object -Property Value | ForEach-Object -Process {$_.Value.Replace(\":\", \"\")}); $keyPrivate=$keys[0]+$keys[1]+$keys[2]; $keyPublic=$keys[3]+$keys[4]+$keys[5]+$keys[6]+$keys[7]; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPublic)); $keyPublicSha256=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPublicSha256)); $keyPublicSha256Ripemd160=$(openssl ripemd160 $tempFile | Select-String \"[0-9a-f]{40}\").Matches[0].Value; $keyPublicSha256Ripemd160Prefixed=\"00\"+$keyPublicSha256Ripemd160; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPublicSha256Ripemd160Prefixed)); $keyPublicSha256Ripemd160Checksum=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPublicSha256Ripemd160Checksum)); $keyPublicSha256Ripemd160Checksum=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value.Substring(0, 8); $bitcoinKeyPublic=\"$keyPublicSha256Ripemd160Prefixed$keyPublicSha256Ripemd160Checksum\"; $keyPrivatePrefixed=\"80\"+$keyPrivate.PadLeft(64, '0'); [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPrivatePrefixed)); $keyPrivateChecksum=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPrivateChecksum)); $keyPrivateChecksum=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value.Substring(0, 8); $bitcoinKeyPrivate=\"$keyPrivatePrefixed$keyPrivateChecksum\"; function Base58 { param ([parameter(valuefrompipeline=$true)] [string]$1) $i=[bigint]::Parse($1,\"AllowHexSpecifier\"); $chars=@(); $index =@('1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','J','K','L','M','N','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','m','n','o','p','q','r','s','t','u','v','w','x','y','z'); if (($1).length % 2 -ne 0 -OR $i -lt 0) { $1=\"0$1\"; $i=[bigint]::Parse($1, \"AllowHexSpecifier\"); } while($i -gt 0) { $m=([bigInt]$i % 58); $i=([bigInt]$i \/ 58); $chars+=$index[$m]; } [array]::reverse($chars); $i=$chars -join (''); $1 -split \"(..)\" | ForEach-Object { if ($_ -match \"00\") { $i=(\"1\"+$i); } else { return; } }; $chars=@(); $chars.clear(); $index=@(); $index.clear(); return $i; }; $bitcoinKeyPrivateBase58=Base58($bitcoinKeyPrivate); $bitcoinKeyPublicBase58=Base58($bitcoinKeyPublic); [System.IO.File]::Delete($tempFile); Write-Output \"Bitcoin Wallet`n`nPassword:`n$password`n`nPrivate Key:`n$keyPrivate`n`nPrivate Key, WIF:`n$bitcoinKeyPrivateBase58`n`nPublic Key:`n$keyPublic`n`nPublic Key, Wallet:`n$bitcoinKeyPublicBase58`n`n\"\n\nThe output of this command:\n\n\nFor the above commands just copy and paste into the terminal.\nYou can check the generated data on other sites. Use the same password in Brain Wallet mode and uncheck \"Compressed address\".\nBitAddress.org\n\nCoinb.in\n\n\nEdit #1\nBetween steps a4 and a5 we have a very large number as a result. But not all numbers in the 2^256 range are on the mathematical secp256k1 elliptic curve used for finding a matching public key. The range, is actually from 0 to 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 (in decimal: 115792089237316195423570985008687907852837564279074904382605163141518161494337), as defined in the SEC2 standard. Read more about DOES THAT MEAN THERE ARE 2^256 POSSIBLE PRIVATE KEYS?.\nCheck if the hash is less than this value. The following command displays the hash value in decimal numeric format:\nPASSWORD=\"my-difficult-passphrase\"; echo \"ibase=16; $(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | tr a-z A-Z)\" | bc | awk 'ORS=\" \"' | sed 's\/\\W\/\/g'","218":"You get it right, there is no other way around it unless contract A has some bug or special implementation for \"previous owners\" or whatever.","219":"As dave_thompson_085 has pointed out, most bitcoin <transactions> do not actually contain the public key as part of an output script and instead contain the hash of the public key or the hash of a script. There is an old scheme known as P2PK where the public key is part of the output script but this is almost never used today in favour of P2PKH, P2WPKH and soon P2TR.\nAs for communicating the required information to create a transaction, an address is used to encode the hash of the public key or script with different output script variations using different encoding variations to indicate what output script should be used.\nHere are some of the encoding schemes for common locking scripts:\n\nP2PKH uses Base58 check encoding where the encoded data consists of a version prefix of 0x00 for mainnet followed by the Hash160 of the receiving public key. This results in an address starting with the character 1.\nP2SH uses Base58 check encoding where the encoded data consists of a version prefix of 0x05 for mainnet  followed by the Hash160 of the redeem script. This results in an address starting with the character 3.\nP2WPKH uses Bech32 encoding where the encoded data consists of a witness version followed by the Hash160 of the public key. The witness version for segwit outputs is 0 and results in the address starting with bc1q.\nP2WSH uses Bech32 encoding where the encoded data consists of a witness version followed by the SHA256 of the script. Because P2WSH uses SHA256 as opposed to Hash160, the address is longer than P2WPKH addresses. The address also starts with bc1q.\nP2TR uses Bech32m encoding where the encoded data consists of the witness version followed by the tweaked key unhashed. The witness version here is 1 and results in the address bc1p.\n\n\nIf your question is regarding the actual transmission of Person B's address to Person A, there is no official method to do this. However if you want to check if an address received is valid, the checksum at the end of each encoded address can be used. For addresses encoded in Base58, the checksum is the last 4 characters and for Bech32 it is the last 6 characters. Bech32 also has error correcting capability as per [BIP-0173][1]","220":"To solve this, you need to update your package.json with export SET NODE_OPTIONS=--openssl-legacy-provider\n  \"scripts\": {\n    \"start\": \"export SET NODE_OPTIONS=--openssl-legacy-provider && npx hardhat node\"\n  },\n\nThen, you can just run yarn start or export SET NODE_OPTIONS=--openssl-legacy-provider && npx hardhat node\nhttps:\/\/github.com\/webpack\/webpack\/issues\/14532#issuecomment-951378874","221":"Ok, got it. You must set <web3>.TransactionManager.UseLegacyAsDefault = true and skip settings manually gas fee. Enjoy :-)\nhttps:\/\/github.com\/Nethereum\/Nethereum\/issues\/750","222":null,"223":"let <web3> = require('@solana\/<web3>.js');\nlet splToken = require('@solana\/spl-token');\n\n\/\/ load up the first 32 bytes of the 64 byte array that was in our keyfile.json\n\/\/ Only need the first 32 bytes so I use slice() just to make sure it's the correct length\nlet firstWinPrivKey = [237,158,92,107,132,192,1,57,8,20,213,108,29,227,37,8,3,105,196,244,8,221,184,199,62,253,98,131,33,165,165,215,14,7,46,23,221,242,240,226,94,79,161,31,192,163,13,25,106,53,34,215,83,124,162,156,8,97,194,180,213,179,33,68]\n    .slice(0,32);\n  \/\/ print the length of the array so we know it is correct\n  \/\/ the fromSeed() method requires 32 bytes\n\n console.log(firstWinPrivKey.length);\n  let firstWinWallet = <web3>.Keypair.fromSeed(Uint8Array.from(firstWinPrivKey));\n  console.log(firstWinWallet.secretKey);\n  console.log(firstWinWallet.publicKey.toString());\n\nNotice that you have to cast the array to a Uint8Array (Uint8Array.from())\nWhen we print out the secretKey, you'll see the same bytes you passed in.\nAnd finally when we print out the publicKey you'll see that same value that we saw with the command line\n> solana address\nNow you can use the wallet in code.\nHere's the final output from this short script:\n32\nUint8Array(64) [\n  237, 158,  92, 107, 132, 192,   1,  57,   8,  20, 213,\n  108,  29, 227,  37,   8,   3, 105, 196, 244,   8, 221,\n  184, 199,  62, 253,  98, 131,  33, 165, 165, 215,  14,\n    7,  46,  23, 221, 242, 240, 226,  94,  79, 161,  31,\n  192, 163,  13,  25, 106,  53,  34, 215,  83, 124, 162,\n  156,   8,  97, 194, 180, 213, 179,  33,  68\n]\nwm4MapPtFaUoSsyBJppVnChYMGvHzTeAL6BNZ5GmSqH","224":null,"225":"BSC and Ethereum smart contracts only have access to the current state - not to historical states at previous blocks.\nAlso, there's currently no EVM opcode (hence no Solidity function) to look up the amount of <transactions> by an address.\n\nIf your use case allows to use off-chain tools, one of the ways to get the count of outgoing <transactions> by an address is the <web3> method getTransactionCount() (wrapper for the eth_getTransactionCount RPC method). If your provider is an archive node (and allows requesting historic states), you can get the transaction count at two specific blocks and compare the values, which will give you the count difference between the specified blocks.","226":"You can simply enroll your new user cryptographic material (MSP and TLS) from your CA and deploy a client container analog to the admin one, but pointing to the new material (with different volumes and env variables CORE_PEER_ID, CORE_PEER_MSPCONFIGPATH, etc.).\nAnyone, at any point you are going to need to develop a client application with the SDK to implement more complex operations and execution flows.\nYou can also look for some higher level tool. IBM <blockchain> Platform extension for VSCode is a good one.","227":"In order to get going initially, <geth> uses a set of bootstrap nodes whose endpoints are recorded in the source code.\n\nSource: <geth> docs\nHere's the list of the bootstrap nodes hardcoded in the <geth> source code: https:\/\/github.com\/ethereum\/go-ethereum\/blob\/v1.10.11\/params\/bootnodes.go#L23\nThe --bootnodes option allows you to overwrite this list with your own. Example from the above linked docs:\n<geth> --bootnodes enode:\/\/pubkey1@ip1:port1,enode:\/\/pubkey2@ip2:port2,enode:\/\/pubkey3@ip3:port3","228":null,"229":"You should either call the build function with await\nconst priceFetcher = await UniswapTokenPriceFetcher.build(token1, token2)\n\nor followed by then\nUniswapTokenPriceFetcher.build(token1, token2).then(priceFetcher => {...})\n\nI don't see any other way.","230":"No, after the completion of the bitcoin emission, miners will receive a reward from the fee for each transaction included in the block. This fee will need to be included in <transactions>.","231":"I looked at the dependencies in the codesandbox page and it imports globally the buffer package. I tried doing the same locally with require('buffer\/'), but no luck. However, it works using it as const Buffer = require('buffer\/').Buffer and calling the method Buffer.from to get the buffer from the serialized data.\nconst Buffer = require('buffer\/').Buffer\n...\nconst buf = Buffer.from(borsh.serialize(schema, task));","232":"remove default localhost account (i.e. Localhost 8545 ) first and then add the new network with details and chain ID as 1337","233":"You will need access to a node that allows these functionalities, but to answer your batch question, with <geth> as your node you can batch read requests with graphql endpoint, batch the requests and responses, or use the json-rpc-batch-provider","234":"You need to change the compiler version as expected 0.5.0 but you are set 0.8.9, That's the main reason for these errors.\n\nIt's perfectly working!","235":"This is the canonical way to do it currently:\nstring(bytes.concat(bytes(a), \"-\", bytes(b)));\n\nYour example still works and is fine though. bytes.concat() was added because abi.encodePacked() might be deprecated in favor of having more specific functions at some point in the future. Concatenating bytes arrays before hashing seems to be its main use case for now.\nThe conversions make the use of bytes.concat() for string a bit verbose, which is why string.concat() is going to be introduced in future versions.","236":null,"237":null,"238":"Ledger data is under \/var\/<hyperledger>\/production\/ledgersData inside your peer container. You might have \/var\/<hyperledger>\/production mapped to a volume to save your peer state. When using CouchDB to store world state, the world state is stored in the CouchDB container (under something like \/opt\/couchdb\/data, which might be mapped to a volume, too).\n\nIn my opinion, the easiest way is to deploy <hyperledger> Explorer for your network: https:\/\/github.com\/<hyperledger>\/<blockchain>-explorer\/blob\/main\/README.md.","239":"If you're using Anchor, that likely means that you're on-chain.  To get the supply of a token mint on-chain, you'll need to pass it in to your program, deserialize the data in the account as a Token Mint, and then read the supply field.\nHere's an example of a test doing that: https:\/\/github.com\/solana-labs\/solana-program-library\/blob\/756696ee8e7b8dbe640113079ba11447ba3524c1\/token\/program\/src\/processor.rs#L4234-L4235","240":"Had the same problem. Using Node 17.x and it has an updated openssl that is a a breaking change.\nThis worked for me because I'm using yarn.\nexport NODE_OPTIONS=--openssl-legacy-provider\n\nYou could also try just using the --openssl-legacy-provider switch on node.","241":"Ah, I got the answer to my problem elsewhere. It turns out that my assumption that the Concordium node requires a secure connection was wrong, in fact it doesn't support secure connections, so the URL was the wrong part.\nSo to fix the problem, I needed to create the client like this:\n\/\/ to allow non secure connections\nAppContext.SetSwitch(\"System.Net.Http.SocketsHttpHandler.Http2UnencryptedSupport\", true);\n\nusing var channel = GrpcChannel.ForAddress(\"http:\/\/192.168.1.18:10001\");","242":null,"243":"If you want the private key in base58, you'll have to do a conversion.\nwallet.secretKey gives a Uint8Array: https:\/\/solana-labs.github.io\/solana-<web3>.js\/classes\/Keypair.html#secretKey, so you'll have to convert from Uint8Array to a base58 string.\nThere are packages to do that, and Solana's <web3> package uses bs58: https:\/\/github.com\/cryptocoinjs\/bs58#encodeinput\nSo you'll have to do bs58.encode(wallet.secretKey) to get the string as you're expecting.","244":"The event is not firing twice, you print the log twice.\nThe first is in this snippet:\ncontract.events.EventName().on('data', async event => {console.log(event)})\n\nAnd the second is in this snippet:\ncontract.getPastEvents(\"Event\").then(events => console.log(events))","245":"Each transaction costs gas, and that transaction will always costs the same units of gas. The price of gas units varies, however.\n\nGas units: internally, transaction fees are not calculated directly in\nNEAR tokens, but instead go through an in-between phase of \"gas\nunits\". The benefit of gas units is that they are deterministic \u00e2\u0080\u0093 the\nsame transaction will always cost the same number of gas units.\nGas price: gas units are then multiplied by a gas price to determine\nhow much to charge users. This price is automatically recalculated\neach block depending on network demand (if previous block is more than\nhalf full the price goes up, otherwise it goes down, and it won't\nchange by more than 1% each block), and bottoms out at a price that's\nconfigured by the network, currently 100 million yoctoNEAR.\n\nhttps:\/\/docs.near.org\/docs\/concepts\/gas","246":"That's right, everything is indeed public, so if you want to get the balance for someone else's account, you can simply use getBalance if it's SOL (https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#getbalance) or getTokenAccountBalance if it's an SPL Token account (https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#gettokenaccountbalance).","247":"Bip 32 is used for creating hierarchical deterministic wallet aka (HD wallets). They are wallets that can be shared partially or entirely with different systems, each with or without the possibility of spending coins.\nBip 39 is used for converting random string to mnemonic and this mnemonic can be used to create bip 32 or bip 44 wallets.\nBip 44 can be used to create multi-currency crypto wallets.\nFor more information read this article - https:\/\/en.cryptonomist.ch\/2019\/06\/01\/bip32-39-44-differences-seeds-wallets\/#:~:text=BIP39%20and%2044%2C%20on%20the,generate%20the%20HD%20BIP32%20wallet.","248":"From my understanding you generally set a baseURI in a erc721 contract. And then if you have an auto incrementing token id. The first token will be the baseURI plus \"1\".\nIn other words:\nbaseURI: \"https:\/\/myserver.com\/api\/metadata\",\ntokenId: 1\nthe token metadata is hosted at https:\/\/myserver.com\/api\/metadata\/1\nAnd that takes some storage off the chain, if every token has it's own unique url it adds a bit of unnecessary junk to the chain.","249":"If you want the name of the token and other pieces of metadata, you likely want to query the Solana token-list.  Check out the repo at https:\/\/github.com\/solana-labs\/token-list","250":"You begin talking about a \"member\", but later you talk about a \"peer\".\nYou cannot restrict operations per peer. Every peer joined to the channel with the chaincode installed must proceed in the same way, so that the chaincode works in a deterministic way.\nBut you can, of course, restrict operations for the requestor, by evaluating its user ID, MSP ID, certificate attributes or whatever you want. For instance, in Go chaincodes, it is usually evaluated in BeforeTransaction function:\n\ntype SmartContract struct {\n    contractapi.Contract\n}\n\nfunc checkACL(ctx contractapi.TransactionContextInterface) error {\n    \/\/ Read incoming data from stub\n    stub := ctx.GetStub()\n\n    \/\/ Extract operation name\n    operation, parameters := stub.GetFunctionAndParameters()\n    operationSplitted := strings.Split(operation, \":\")\n    operationName := operationSplitted[len(operationSplitted)-1]\n\n    \/\/ Get requestor info from stub\n    mspID, err := cid.GetMSPID(stub)\n    userID, err := cid.GetID(stub)\n    value, found, err := cid.GetAttributeValue(stub, \"role\")\n\n    \/\/ Evaluate your ACLs by contrasting the operation and the requestor your own way\n    \/\/ ...\n\n    \/\/ Return error when disallowed\n\n    \/\/ Operation allowed\n    return nil\n}\n\nfunc BeforeTransaction(ctx contractapi.TransactionContextInterface) error {\n    return checkACL(ctx)\n}\n\nfunc NewSmartContract() *SmartContract {\n    sc := new(SmartContract)\n    sc.BeforeTransaction = BeforeTransaction\n    \/\/ ...\n    return sc\n}","251":null,"252":"You're mixing to<geth>er Solidity code of the contract and JavasScript code of an off-chain app working with the contract.\nconst yourToken = await deployments.get(\"plonCoin\");\nconst result = await yourToken.transfer(\"<address>\", utils.parseEther(\"1000\"));\n\nThis is the JS code that doesn't belong to the contract.","253":"Your\n        function kill() public onlyOwner \n        {\n            selfdestrct(owner);\n        }\n\nInside of another function, move it outside, and everything will works. Please, check closing brakets }.\nAlso You will want to fix the typo selfdestruct\nHere is working code:\n\/\/ SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ncontract CrowdFunding \n{\n    \n    struct Investor\n    {\n        address payable addr;\n        uint amount;\n    }\n    \n    address payable public owner;       \n    uint public NumOfInvestors; \n    uint public deadline;       \n    string public status;       \n    bool public isOver;         \n    uint public goalAmount;     \n    uint public totalAmount;    \n    mapping (uint => Investor) public investors; \n    \n    modifier onlyOwner () \n    {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    \n    function crowdfunding(uint _duration, uint _goalAmount) public\n    {\n        owner == msg.sender;\n        deadline = block.timestamp + _duration;\n        \n        goalAmount = _goalAmount;\n        status = \"Funding\";\n        isOver = false;\n        NumOfInvestors = 0;\n        totalAmount = 0;\n    }\n    \n    \n    function fund() payable public\n    {\n       \n        require(!isOver);\n        \n        Investor storage inv = investors[NumOfInvestors++]; \n        inv.addr = payable(msg.sender);                      \n        inv.amount = msg.value;                     \n        totalAmount += inv.amount;\n    }\n    \n   \n    function checkGoalReached () public onlyOwner \n    {\n        \n        \n        require(!isOver);\n        \n        \n        require(block.timestamp >= deadline);\n        \n        if(totalAmount >= goalAmount) \n        {  \n            status = \"Campaign succeeded.\";\n            isOver = true;\n            \n            address payable self = payable(address(this));\n            uint256 balance = self.balance;\n            if(!owner.send(balance)) \n            {\n                revert();\n            }\n            else \n            { \n                \n                uint i = 0;\n                status = \"Campaign Failed.\";\n                isOver = true;\n                \n                while (i <= NumOfInvestors) \n                {\n                    \n                    if(!investors[i].addr.send(investors[i].amount)) \n                    {\n                        revert();   \n                    }\n                    \n                    i++;\n                }\n            }\n        }\n        \n        \n\n    }\n        function kill() public onlyOwner \n        {\n            selfdestruct(owner);\n        }\n}","254":"You can define an interface of the target contract in the source contract. Example:\nTargetContract, deployed on the 0x123 address:\npragma solidity ^0.8;\n\ncontract TargetContract {\n    function foo() external pure returns (bool) {\n        return true;\n    }\n}\n\nSourceContract, pointing to the 0x123 TargetContract\npragma solidity ^0.8;\n\ninterface ITargetContract {\n    function foo() external returns (bool);\n}\n\ncontract SourceContract {\n    function baz() external {\n        ITargetContract targetContract = ITargetContract(address(0x123));\n        bool returnedValue = targetContract.foo();\n    }\n}","255":"near-seed-phrase works just fine, and the key generated by it is used for account creation (proof), but then Wallet generates a new random keypair and adds it to the account (proof) and stores it in the Local Storage of the browser. Thus, if you compare the key in the local storage, that won't match the one that is derived from the seed phrase since Wallet does not want you to invalidate your seed phrase after you sign in from a new device (you should be able to just remove the access key after you are done with the session).\nLet's re-iterate, Wallet only uses the key derived from the seed phrase to add a fresh key to a given account, and never stores the seed phrase or the key derived from the seed phrase in the local storage.","256":"I do not know nothing about <blockchain>, but as I understand how it seems to work, you'll likely to encounter the same problems than WebRTC and P2P : you need to discover the public IP address of your peers and even do some NAT traversal on restricted networks when it happen. It's not needed when you use Websockets in browsers, because they don't allow for P2P in this context : they just both connect to a server that is made to be accessible on internet, and the server will allow them to exchange messages.\nYou can use Websocket protocol to do P2P, but not in a browser.\nTo do what you want to do (P2P with TCP), you'll need one or more servers, somewhere, at some point, at least to offer to your peers a way to discover their public IPs (something like STUN for webrtc) and to do some signaling to exchange their IP adresses to try a direct connection between them when they are not in the same network.\nIf it's not possible because one (or several) of your peers are hidden behind a restrictive NAT, you'll need to have at least one server out of that NAT, that is reachable by your peers and that will be able to relay the communication between your peers (often it's done via a common open ports like 443).\nAnd I wanted to address this just for clarity sakes :\n\nIn the field of <blockchain> programming we need to create a network of peers connected using websocket in <node.js>\n\nThe <blockchain> is tech agnostic : it doesn't require <node.js> neither websockets to work. You CAN use Websockets and NodeJS, but you don't need to. What techs you'll have to use heavily depends of what you want to build and\/or to use.","257":"1. Can <blockchain> be implemented without cryptocurrency ?\n\nYes. <blockchain> is a way of storing data, where each block is chained to the previous one. For example:\nBlock 1:\n{\n    data: 'foo',\n    previousHash: '0000000000000000000000000000000000000000000000000000000000000000'\n};\n\nBlock 2:\n{\n    data: 'bar',\n    previousHash: 'd807da8ba0473afd6cb13d465d21e2d1e0e14598d8555afe5fe3e88c7e114b05'\n};\n\nwhere the previousHash in \"Block 2\" is the hash of the \"Block 1\".\n\n\n2. Are apps built on Ganache centralized or decentralized ?\n\nGanache is a local <blockchain> and Ethereum-like network emulator usually used for development and testing. Multiple instances of Ganache are not able to communicate with each other, so by this definition it's a centralized system.\nHowever, apps that are built and tested locally on Ganache, can be deployed to decentralized networks such as Ethereum Ropsten testnet, Ethereum Mainnet, BSC Mainnet, etc.\n\n\n3. Does every smart contract, Decentralized application, Ethereum Transaction, all of it live on One Giant <blockchain> which is the Ethereum Main Network ?\n\nSmart contracts and <transactions> - yes, they all are stored in the Ethereum network <blockchain>.\nDApps - they are usually consisted of smart contracts (see above) and off-chain apps (usually written in JavaScript and other web languages) that are usually hosted on a private server or a regular shared hosting.\n\nHow is that manageable\n\nCurrently, the Ethereum <blockchain> size is between 0.5 TB and 1 TB, depending on what node software you're using, and it's growing over time (source). It's discouraged here at StackOverflow to present personal opinions so I'll leave it to your decision if that's manageable or not. :)","258":"Since you're storing to the mapping under the same key (dictConfirmAccess[_nik] = ...), the value gets overwritten.\nUsing the Remix VM emulator, it's currently not possible to access the previous states.\nIf this situation happened on a live network, you could connect to an archive node and retrieve the historical value using the combination of\n\nthe storage slot number\ndeterminable, based on the property order in the contract and the mapping key - source\n\nand the block number\nfor which you want to get the value\n\n\nFor example using the <web3> getStorageAt method\nconst historicalValue = await <web3>.eth.getStorageAt(\n    contractAddress,\n    storageSlotNumber,\n    blockNumber\n);\n\nNote that the historical values are accessible only using off-chain tools and are not accessible from the contract itself (or other contracts).","259":"Why don't you save yourself some trouble and just pre-fund the contract with link once its deployed?","260":"write a mapping for metamask networks:\nconst NETWORKS = {\n  1: \"Ethereum Main Network\",\n  3: \"Ropsten Test Network\",\n  4: \"Rinkeby Test Network\",\n  5: \"Goerli Test Network\",\n  42: \"Kovan Test Network\",\n  56: \"Binance Smart Chain\",\n  1337: \"Ganache\",\n};\n\n\n\nconst getChainId= async () => {\n      const chainId = await <web3>.eth.getChainId();\n      \/\/ handle the error here\n      if (!chainId) {\n        throw new Error(\n          \"Cannot retrieve an account. Please refresh the browser\"\n        );\n      }\n      return NETWORKS[chainId];\n    }\n  );","261":"This ability is not exposed for now on the JS side. To do this properly, we would need to expose this struct definition: https:\/\/github.com\/solana-labs\/solana-program-library\/blob\/e8b7009cc4d8cdd87232ccfc9ce93ab203ada496\/token\/js\/client\/token.js#L1519\nOn your side, for testing, you can copy that struct layout, then call decode on the transaction data to deserialize it.  In (untested) code, this would look like:\nconst decodedTransaction = Transaction.from(encodedTransaction);\nconst TransferInstructionLayout = BufferLayout.struct([\n    BufferLayout.u8('instruction'),\n    Layout.uint64('amount'),\n]);\nconst instructionData = TransferInstructionLayout.decode(decodedTransaction.instructions[0].data);\nconsole.log(instructionData.amount);\n\nThere may be some steps missing, but this will get you most of the way there! And if you want to add a PR to expose these, then everyone else can use them.","262":"go 1.17.2 isn't a supported version for fabric-ca 1.5.2 check the release notes for the supported version here https:\/\/github.com\/<hyperledger>\/fabric-ca\/releases\/tag\/v1.5.2\nhowever there is also an issue with a dependency that has changed an api such that using the -u option on go get means that it will download and use an incompatible version. This applies only to the server so for the server\ngo get github.com\/<hyperledger>\/fabric-ca\/cmd\/fabric-ca-server\n\nshould work, but you can also do\ngo get github.com\/<hyperledger>\/fabric-ca\/cmd\/...\n\nto include a client build as well\nYou can of course just get official builds from https:\/\/github.com\/<hyperledger>\/fabric-ca\/releases\/tag\/v1.5.2","263":"I got stuck with this problem for a week.\nI imported <web3> unity package in my project and use [DllImport(\"__internal\")] for connecting its function in <web3>.jslib plugin.\nusing System;\nusing System.Runtime.InteropServices;\nusing UnityEngine;\nusing UnityEngine.SceneManagement; \npublic class MobileLogin : MonoBehaviour\n{\n    [DllImport(\"__Internal\")]\n    private static extern void MobileConnect();\n\n    [DllImport(\"__Internal\")]\n    private static extern string ConnectAccount();\n\n    [DllImport(\"__Internal\")]\n    private static extern void SetConnectAccount(string value);\n\nprivate int expirationTime;\nprivate string account; \n\npublic void OnLogin()\n{\n    MobileConnect();\n    OnConnected();\n}\n\nasync private void OnConnected()\n{\n    account = ConnectAccount();\n    while (account == \"\") {\n        await new WaitForSeconds(1f);\n        account = ConnectAccount();\n    };\n    \/\/ save account for next scene\n    PlayerPrefs.SetString(\"Account\", account);\n    \/\/ reset login message\n    SetConnectAccount(\"\");\n    \/\/ load next scene\n    SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex + 1);\n}\n\npublic void OnSkip(){\n    \/\/ move to next scene\n    SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex + 1);    \n}}\n\nBut when it runs, I got with this error:\nEntryPointNotFoundException: MobileConnect\nWebLogin.OnLogin () (at Assets\/<web3>Unity\/Scripts\/Scenes\/WebLogin.cs:23)\nUnityEngine.Events.InvokableCall.Invoke () (at \n<7d87237cea3743d093e22c5b98f74fba>:0)\nUnityEngine.Events.UnityEvent.Invoke () (at \n<7d87237cea3743d093e22c5b98f74fba>:0)","264":"You can deploy the contract with Remix Ide Online, <web3> connection with Metamask.\nCan you share your hardhat config file or error logs?\nThis should be inside your hardhat env.\n    mumbai: {\n  url: \"https:\/\/rpc-mumbai.matic.today\",\n  \/\/ url: API_URL, \/\/or Infura API  URL   \n  accounts: [`0x${PRIVATE_KEY}`],\n    gasPrice: 10000000000,\n    gasLimit: 9000000\n},\n\nEdit: It's failing because cant estimate gasLimit of the transaction. You can set it manually.\nInside your deploy.js script set the gasPrice and gasLimit. Depending on you are using <web3>js or etherjs this code will be different. This is example of another minting function.\nFT = await contract.ownerMint(WALLET_ADDRESS,{ gasLimit: 285000, gasPrice: ethers.utils.parseUnits('30', 'gwei')});\n\nEdit2: you can always deploy it with remix online with Metamask","265":"MetaMask implements the Ethereum Provider API, so you can read the chainId property (docs).\nif (window?.ethereum?.chainId === \"0x38\") {\n    console.log(\"currently selected BSC mainnet\");\n}","266":null,"267":"It's complicated. A state in a CorDapp is a simple Java class, but its information is spread in multiple tables, depending on its history, its status that changes and on how you use that state  (e.g. if you make a token out of it with Token SDK).\nThe only reasonable way to get this information is to query the database you are using to monitor the size of the vault tables throughout the lifecycle of the states and make some calculation.","268":null,"269":"What you want to do is to take information from a Token like uniswap\nuniswap didn't save all the existing tokens, that's an impossible thing to do\nevery time you write the address of a token on uniswap, it makes requests to the smart contract, calling up existing functions thanks to the ERC-20 standard\nthe functions that are called are\ntotalSupply() \/\/ to get the total supply\n\ndecimals() \/\/ to get the number of decimals\n\nname() \/\/ to get the name of the token (e.g. Bitcoin)\n\nsymbol() \/\/ to get the symbol of the token (e.g. BTC)\n\nto obtain this data you have to make a call through <web3>, which will return the data you request\n\/\/ initialize <web3>\nconst <web3> = require(\"<web3>\");\n\n\/\/ save only the ABI of the standard, so you can re-use them for all the tokens\n\/\/ in this ABI you can find only the function totalSupply ()\nconst ABI = [\n     {\n         \"type\": \"function\",\n         \"name\": \"totalSupply\",\n         \"inputs\": [],\n         \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n         \"stateMutability\": \"view\",\n         \"payable\": false,\n         \"constant\": true \/\/ for backward-compatibility\n     }\n];\n\n\/\/ run the JS function\nasync function run() {\n     const <web3> = new <web3>(<YourNodeUrl>);\n\/\/ create the <web3> contract\n     const contract = new <web3>.eth.Contract(ABI, <TokenAddress>);\n\/\/ call the function and get the totalSupply\n     const totalSupply = await contract.methods.totalSupply().call();\n     console.log(totalSupply);\n}","270":"Saveing data\/files on the clients machine is restricted but modern browser for good (security) reason.\nHowever there are Cookies (https:\/\/www.w3schools.com\/js\/js_cookies.asp, https:\/\/docs.djangoproject.com\/en\/3.2\/topics\/http\/sessions\/) or html5 webstorage (https:\/\/www.w3schools.com\/html\/html5_webstorage.asp).","271":"The issue is not specifically from hardhat but an issue faced by node-fetch which hardhat uses in the background to send the request. The main cause of this is a problem with your certificates as discussed in this question Unable to verify leaf signature.\nWhat worked for me was to use a VPN, I assume there was an issue with my router. Once I was connected to the VPN I managed to deploy the contract successfully.","272":"The RPC method that you're using does not exist.  You'll want to use getBalance to get the SOL on the wallet: https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#getbalance\nTo get all of the non-SOL token balances owned by that wallet, you'll have to use getTokenAccountsByOwner using that wallet id: https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#gettokenaccountsbyowner","273":"as you can read on that contract\n\/\/ given an input amount of an asset and pair reserves, returns the maximum output amount of the other asset\n\nwith that function u can find that\nevery token have to be declared with all their decimals, so if WETH have 18 decimals, and you want to put 1000 WETH, you need to write 1000000000000000000000\nsame thing for tokens","274":"Maintain a local ACID-compliant of <transactions> and used nonces before broadcasting them out. An example here.","275":"Does it always have to be a financial transaction to be recorded as a transaction?\n\nDepends upon the type of <blockchain> you are referring to. In the case of cryptocurrency, it is a financial transaction.\nBut in general, a transaction is a record of the exchange of data or assets among the participants in the network.","276":"According to IOHK documentation, prior to running a server you have to run a node:\ncardano-node run \\                                   \n    --topology ~\/cardano\/config\/mainnet-topology.json \\\n    --database-path ~\/cardano\/db\/ \\\n    --socket-path ~\/cardano\/db\/node.socket \\\n    --host-addr 127.0.0.1 \\                \n    --port 1337 \\\n    --config ~\/cardano\/config\/mainnet-config.json\n\nAnd after that call a serve command with appropriate flags:\ncardano-wallet serve \\                            \n    --port 8090 \\\n    --mainnet \\\n    --database ~\/cardano\/wallets\/db \\\n    --node-socket $CARDANO_NODE_SOCKET_PATH\n\nIf you need more details, read my medium post.","277":"Add \"gasPrice\": w3.eth.gas_price to the buildTransaction function and change to 1337 chainID in ganache server settings.\nExample:\ntransaction = SimpleStorage.constructor().buildTransaction(\n    {\n        \"chainId\": chain_ID,\n        \"from\": my_address,\n        \"nonce\": nonce,\n        \"gasPrice\": w3.eth.gas_price,\n    }\n)","278":"try with owner:\n    authorization: [{\n       actor: 'username',\n       permission: 'owner',\n     }],","279":"The best way to get started debugging chainlink jobs is to look into the logs. There are 2 main ways to look into the logs.\n\nIf running in a docker container:\n\nRun this command to find the name of the docker container.\ndocker ps\n\nThen\ndocker logs <NAME_OF_DOCKER_CONTAINER>\n\n\nRead the log.jsonl file.\nIf you created this in your .chainlink-rinkeby folder, it'll be in .chainlink-rinkeby\/log.jsonl\n\nOtherwise you can read the JSON of the job that you're debugging.","280":"You can get the size of the transaction from SignedTransaction.txBits.size, for example from the SignedTransaction object returned when you sign the transaction or when you call FinalityFlow:\nval finalTx = subFlow(FinalityFlow(signedTx, listOf(session))).txBits.size\n\nTo access the NODE_TRANSACTION table there are no direct APIs, but you can create a JDBC session from the serviceHub, for example:\nserviceHub.jdbcSession().createStatement()\n.execute(\"SELECT * FROM NODE_TRANSACTION WHERE XXXX;\")","281":"The problem was the data was being saved correctly but when fetching the records solidity was assigning msg.sender to the creator of the contract not the one who sent the transaction. So, in order to deal with this I am sending the user address from frontend in the call function and receiving the address as a parameter in the respective functions. So instead of using the msg.sender I am using the address that I am receiving from frontend.","282":"You can use Multicall contract for small wins. A proper solution is indexers like TheGraph that continuously read the <blockchain> and keep the data available indexed.","283":"Here is a thesis of IPFS + Hadoop for Big Data analysis.\nhttps:\/\/www.cse.unsw.edu.au\/~hpaik\/thesis\/showcases\/16s2\/scott_brisbane.pdf (1 slide summing up)\nhttps:\/\/s3-ap-southeast-2.amazonaws.com\/scott-brisbane-thesis\/decentralising-big-data-processing.pdf (actual paper)","284":"data.result contains the JSON ABI as a string. You need to decode it as well to an object.\nlet contract_abi = JSON.parse(data.result);\n\n\nAlso, it's possible that you're using a deprecated version of <web3> that supports the contract.at() syntax.\nBut if you're using the current version, you'd get the contract.at is not a function error. In that case, you need to pass the address as the second argument of the Contract constructor.\nconst contract = new <web3>.eth.Contract(contract_abi, contract_address);","285":"Bitcoin <transactions> are essentially a collection of inputs and outputs.\nA transaction takes in an input and can divide that input into as many outputs as required. Once an input is used, it can no longer be used again and the newly created outputs can be used as inputs for other <transactions>. Importantly, a transaction must consume the entire value of an input so if any \"change\" is left, that change is just another output likely pointing to another address in the custody of the input's owner.\nThe input in the transaction you have linked has a value of 33.11859643 BTC and is dividing that value into 10 different outputs. The largest output is likely \"change\" from the input. By bundling many outputs into the same transaction, the entity that made the transaction is saving transaction fees.","286":null,"287":"The chainlink VRF is a 2 transaction process.\nThe first transaction requests the random number, and the second to have the random number returned. You can't get the random number in 1 go.\nYou can read more about the basic request model in the documentation.\nYou're letsgo function will not work.","288":"The getTokenSupply endpoint on the Solana JSON RPC will get you close: https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#gettokensupply\nUnfortunately, it isn't a normal REST API endpoint, so it requires some parameters, and it provides JSON output.  In the output, you'll need the uiAmountString.  You may need to add in something to proxy the call and extract the value if CoinMarketCap is so stringent.","289":"In most cases args will be base64 encoded JSON string.\nHere's an example of how we decode them on NEAR Indexer for Explorer side.\nActionView::FunctionCall {\n    method_name,\n    args,\n    gas,\n    deposit,\n} => {\n    if let Ok(decoded_args) = base64::decode(args) {\n        if let Ok(mut args_json) = serde_json::from_slice(&decoded_args) {\n            escape_json(&mut args_json);\n            arguments[\"args_json\"] = args_json;\n        }\n    }\n\n\nIs this in developers hand and could be any binary format?\n\nYes.\nRainbow Bridge-related <transactions> have borsh-serialized args which are not possible to decode into JSON.\nref: https:\/\/github.com\/near\/near-indexer-for-explorer\/blob\/master\/src\/models\/serializers.rs#L94-L103","290":"Limited to 10k transfers per contract? I know opensea events api can filter by contract address + token id and you can do before and after timestamps. But I don't know how far back they go.","291":"My guess, you can create an NFT (SPL Token) collection where each token is wrapped with metadata for unrevealed NFT (kind of mystery box metadata, same for all), and later at a specific date you can run a script that will replace each NFT's metadata from the collection with revealed metadata since we can rewrite account data for SPL Token (NFT) at any point.\n2nd option is to use a pattern similar to Raydium Dropzone where users can redeem NFT at a specific date with NFT tickets.\nDetails: https:\/\/raydium.medium.com\/introducing-dropzone-2095bd78930c","292":null,"293":null,"294":null,"295":null,"296":"In the 'Job Spec' section, you can see the oracle address in the initiator part of the JSON spec. In the example above, it's 0x0a31078cd57d23bf9e8e8f1ba78356ca2090569e","297":"when specifying the rpc link, try creating an object for it with the key as the chain Id and the value as the provider url\nrpc = {\n  57: \"https:\/\/your-bsc-provider-url-here.com\"\n};\n\nCheck the custom RPC instructions here https:\/\/docs.walletconnect.com\/quick-start\/dapps\/<web3>-provider","298":"MetaMask provides an interface with the Ethereum <blockchain>. It allows efficient account management and connectivity to the Ethereum <blockchain> without running the Ethereum node software locally.\nMetaMask allows connectivity to the Ethereum <blockchain> through the infrastructure available at Infura ( https:\/\/infura.io ). This allows users to interact with the <blockchain> without having to host any node locally.\nMetamask injects <web3> to the window object and browsers communicate to window.<web3> and it communicates with infura.\n\nInfura is a public-hosted node. The drawback of the public hosted node is that developer must trust it, where there might be some security concerns. For development and testing, however, it is fast and efficient.","299":"The warning is because Docker Daemon is not connectable. It can either because daemon is down or you are not using the correct permission.\nFirst, make sure daemon is active. Here is the official doc to help you with that.\nSecond, try using \"sudo\" with docker-compompose:\nsudo docker-compose -f docker\/docker-compose-org3.yaml up -d\n\nAlso, there are a lot of answers regarding your question. You should do some googling or search in SO before posting.","300":"transaction.sign(privateKey)\n<web3>2.eth.sendSignedTransaction('0x' + transaction.serialize().toString('hex'),(err,hash) => {\n\nYou're passing the unsigned transaction, need to pass the signed one.\nconst signedTx = transaction.sign(privateKey)\n<web3>2.eth.sendSignedTransaction('0x' + signedTx.serialize().toString('hex'),(err,hash) => {\n\nSee the example in the readme (look for the const signedTx snippet)","301":"If you have deployed the contracts on the public network, like mainnet or testnet, use https:\/\/tenderly.co or EtherScan to debug the revert reason.\nIf you are running the contracts using unit tests then keep modifying the contracts e.g. by removing lines to see when it starts failing. Or alternatively use a better smart contract development framework like Brownie which will give you the cause of revert right away.","302":"Brownie stores library contract data (Chainlink, OpenZeppelin, other dependencies) inside of Users\/$yourUsername\/.brownie\/packages. That's on Mac at least. If you're on Windows, look for a .brownie directory.\nTo point the Ethereum VS Code extension to these files, you can add a Solidity remapping. This can be done by adding the following:\n\"solidity.remappings\": [\n    \"@openzeppelin\/=\/Users\/rafi\/.brownie\/packages\/OpenZeppelin\/openzeppelin-contracts@4.4.0\"\n  ]\n\nto your settings.json file in VS Code. After restarting VS Code, the warning\/error should disappear!\nCheck out the readme for the Ethereum VS Code extension for more info.","303":null,"304":"Your are near to finish that stuff but I will write down desired solution. Please have a look.\n $url=\"https:\/\/<blockchain>.info\/multiaddr?active=1AT4ES3ee1N6iBzzbdK8xvcAV3CBTRKcbS|1FHcYth4LRJMwNx2y8NR5DH7sYCiVzXs3Y&n=1\";\n $value = file_get_contents($url);\n $FinalBalance = $value;\n $data=json_decode($FinalBalance);\n echo $data->wallet->final_balance;\n echo $data->addresses[0]->final_balance;\n echo $data->addresses[1]->final_balance;\n exit;\n\nYou are going to access the inner object so you have to provide proper reference whether it is an array or an object.","305":null,"306":"Fixed it using the fee structure from before 1559\ntx_hash = contract_instance.functions.automint(acct.address, test).buildTransaction({\n    'chainId': 0x13881, # mumbai\n    #'chainId': 3, # ropsten\n    'gasPrice': w3.toHex(w3.toWei('20', 'gwei')),\n    'nonce': nonce,\n    'from': acct.address\n})","307":"In version pragma solidity ^0.8.9, my working code looks like this\nInbox.sol\npragma solidity ^0.8.9;\n\ncontract Inbox {\n    string public message;\n    \n    constructor(string memory initialMessage) {\n        message = initialMessage;\n    }\n    \n    function setMessage(string memory newMessage) public {\n        message = newMessage;\n    }\n}\n\ncompile.js\nconst path = require('path');\nconst fs = require('fs');\nconst solc = require('solc');\n\nconst inboxPath = path.resolve(__dirname, 'contracts', 'Inbox.sol');\nconst source = fs.readFileSync(inboxPath, 'utf8');\n\nconst input = {\n    language: 'Solidity',\n    sources: {\n        'Inbox.sol': {\n            content: source,\n        },\n    },\n    settings: {\n        outputSelection: {\n            '*': {\n                '*': ['*'],\n            },\n        },\n    },\n};\n\nmodule.exports = JSON.parse(solc.compile(JSON.stringify(input))).contracts['Inbox.sol'].Inbox;\n\nInbox.test.js\nconst assert = require('assert');\nconst ganache = require('ganache-cli');\nconst <web3> = require('<web3>');\nconst <web3> = new <web3>(ganache.provider());\n\nconst { abi, evm } = require('..\/compile');\n\nlet accounts;\nlet inbox;\n\nbeforeEach(async () => {\n    \/\/ Get a list of all accounts\n    accounts = await <web3>.eth.getAccounts();\n    inbox = await new <web3>.eth.Contract(abi)\n        .deploy({\n            data: evm.bytecode.object,\n            arguments: ['Hi there!'],\n        })\n        .send({ from: accounts[0], gas: '1000000' });\n});\n\ndescribe('Inbox', () => {\n    it('deploys a contract', () => {\n        console.log(inbox);\n    });\n});","308":"I'd recommend using .getParsedProgramAccounts() method of Connection class.\nimport { TOKEN_PROGRAM_ID } from \"@solana\/spl-token\";\nimport { clusterApiUrl, Connection } from \"@solana\/<web3>.js\";\n\n(async () => {\n  const MY_WALLET_ADDRESS = \"FriELggez2Dy3phZeHHAdpcoEXkKQVkv6tx3zDtCVP8T\";\n  const connection = new Connection(clusterApiUrl(\"devnet\"), \"confirmed\");\n\n  const accounts = await connection.getParsedProgramAccounts(\n    TOKEN_PROGRAM_ID, \/\/ new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\")\n    {\n      filters: [\n        {\n          dataSize: 165, \/\/ number of bytes\n        },\n        {\n          memcmp: {\n            offset: 32, \/\/ number of bytes\n            bytes: MY_WALLET_ADDRESS, \/\/ base58 encoded string\n          },\n        },\n      ],\n    }\n  );\n})();\n\nLink to detailed explanation: https:\/\/solanacookbook.com\/ingredients\/get-program-accounts.html#filters","309":"If there are any settings for the ChanID for Testnet is 80001, for the mainnet is 137. Need more details of what NFT marketplace are you using. You can try to import your smartcontract in Opensea and try to buy from there","310":"The error is caused by a typo.\nChange the unit256 to uint256 (unsigned integer).","311":"It looks like you're importing use<web3> wrong:\nconst <web3> = use<web3>();\n\nBut you export it like:\nexport {use<web3>};\n\nSo now you would have to call it like: <web3>.use<web3>()\nIs this code you found at a tutorial somewhere? It's hard to follow...","312":"You can write a script and use docker file to run all these commands or a simple shell script file which fulfils all these details.","313":null,"314":"I had some similar confusion when reading the compact-u16 description. Based on the code for parsing them in the solana <python> module I believe they're doing something conceptually similar to UTF-8, and storing the number in 1-3 bytes depending on its size.\nBasically instead of each byte having 8 bits of a number, it has 7 bits of the number and a flag (the most significant bit) that indicates whether the number continues in the next byte. For the largest numbers they need an extra byte, but for numbers less than 128 they need only one byte. Since Solana seems to use these for storing the length of arrays, if it's common that the length of the arrays is less than 128 then they will end up with fewer total bytes to transfer across all <transactions>.\nSome examples I worked out for myself:\nhex     |  compact-u16\n--------+------------\n0x0000  |  [0x00]\n0x0001  |  [0x01]\n0x007f  |  [0x7f]\n0x0080  |  [0x80 0x01]\n0x3fff  |  [0xff 0x7f]\n0x4000  |  [0x80 0x80 0x01]\n0xc000  |  [0x80 0x80 0x03]\n0xffff  |  [0xff 0xff 0x03])","315":"I have solved this by contacting opensea support. It seems they distinguish contracts of marketplaces and collectibles by your introduction. So I created a ticket at opensea support website and told them we are a marketplace. Not a collectible or collection. They are really slow though. It took about 15 days for us to change our smart contract tokens' creators.","316":"immutable has been introduced on 0.6.5, if you are using any version older than that, you will get the compilation error you've mentioned.\n\nVersion 0.6.5 of Solidity fixes an important bug and introduces immutable as a major feature.\n\nhttps:\/\/github.com\/ethereum\/solidity\/releases\/tag\/v0.6.5","317":"That \"data\" field is encoded in base64 and it represents the Input Data field available in explorer:\nhttps:\/\/testnet-explorer.elrond.com\/<transactions>\/89a15e2ea521764d21ac2de83064dd7c1848f83dff4dcbad0518fdf41a70d889\n\nESDTNFTTransfer@4d45584641524d2d623933653630@01234f@059e1d46a9c3b89ca2@000000000000000005004f79ec44bb13372b5ac9d996d749120f476427627ceb@636f6d706f756e6452657761726473\n\nIt can be decoded using an online base64 decoder.","318":"Is there some standardization on how this ID is assigned?\n\nThe ERC-721 standard explicitly states that there is no standard to assign the ID (except for the uint256 datatype):\n\nWhile some ERC-721 smart contracts may find it convenient to start with ID 0 and simply increment by one for each new NFT, callers SHALL NOT assume that ID numbers have any specific pattern to them, and MUST treat the ID as a \u00e2\u0080\u009cblack box\u00e2\u0080\u009d.\n\n\n\ne.g., do you really own this tweet, or do you only own it if you apply the tweet->token ID mapping\n\nToken ownership does not mean that you own the underlying resource. It only means that you own the token (representing the resource).\n\n\nCould you provide a few examples of how exactly is the token ID assigned to some (well-known) NFTs?\n\n\nCryptoKitties - link, line 412, incrementing\nuint256 newKittenId = kitties.push(_kitty) - 1;\n\n\nCryptoPunks - link, lines 73 and 83, assigning ID set by the (authorized) caller\nmapping (uint => address) public punkIndexToAddress;\n\nfunction setInitialOwner(address to, uint punkIndex) {\n    \/\/ ...\n    punkIndexToAddress[punkIndex] = to;","319":"Does your wallet have enough ETH on it to pay for gas?\nIf you don't have enough ETH in your wallet, that means you cannot pay the gas fee when the scripts run. Place some ETH into your mainnet wallet and that will fix this issue.","320":"My mistake this error happens because I mistakenly typed \"compiler\" instead \"compilers\" in truffle-config.js file\nCorrect code\ncompilers:{\nsolc:{\nversion: '^0.5.0',\noptimizer:{\nenabled: true,\nruns: 200\n}\n}\n}","321":"maybe apt-get update followed by apt-get install openssl can help.\nroot@53794cb0b15a:\/# apt info libssl1.1\nPackage: libssl1.1\nVersion: 1.1.1f-1ubuntu2.8\nPriority: important\nSection: libs\nSource: openssl\nOrigin: Ubuntu\nMaintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\nHomepage: https:\/\/www.openssl.org\/\n[...]\nPackages\n**Description: Secure Sockets Layer toolkit - shared libraries**","322":"It seems like the parse should be happening in the controller, where you can try-catch it and handle the case appropriately. In general, views should contain very little \"business logic\" and instead should just display data already handed to them.\nFor example, do the parse in a controller and if it succeeds, pass the parsed documents to the view. If the parse fails, render the view without the documents.\nThen, the view can just check if documents is defined. If not, show the \"No document\" message.\nPseudocode example:\n\/\/ In the controller\nclass MyController {\n    getDocumentsView() {\n        const viewData = {}\n\n        try {\n            viewData.documents = JSON.parse(documents)\n        } catch (e) {\n            console.log('Error parsing documents:', documents)\n        }\n\n        return view('myViewName.ejs', viewData)\n    }\n}","323":"Try downloading again the test network from Github repository and start the network again. Sometimes, when the test network is stopped, it stores some annoying files. By redownloading the test network, you will start with a clean network.","324":"Please make sure to update your <python> installation.\nThe ledgercomm package requires at least <python> 3.8 as can be seen on the package site.\nOtherwise it can't be installed and will lead to the error you encountered.","325":"Put the JSON.parse() in a try\/catch statement, and log a custom error if it fails:\ntry\n{\n    let json = JSON.parse(documents, null, '\\t');\n    console.log(json);\n}\ncatch(error)\n{\n    console.info(\"NO DOCUMENT ISSUED\");\n}","326":"The issue was with this line, making the artist ID all uppercase.\n\n\nconst artistID = validator.validated.data.artist.toUpperCase() \/\/ Changed this \nconst artistID = validator.validated.data.artist \/\/ To this","327":"You are missing double spending problem. If you have some amount of currency you can create unlimited amount of valid <transactions>. How you would know which one is correct?\nThis is why Proof-of-Work was implemented. It allows nodes to check which <transactions> are valid, and which try to double spend.","328":"The following works for me:\npair_created_event = contract.events.PairCreated()\nevent_filter = pair_created_event.createFilter(fromBlock='latest')\nentries = event_filter.get_new_entries()\nprint(entries)\n\nYou need to call the PairCreated event instead of just using the reference.\nAlso please check the contract address you are using. For PancakeSwap you can find the official ones in their documentation: https:\/\/docs.pancakeswap.finance\/code\/smart-contracts#main-contracts","329":"It is unlikely you can gas optimize this even further.\nYou will hit the block size limit with 10,000 <transactions>.\nFor operations that cannot fit into one Ethereum transaction, must be done in batches.\nJust set first 0...1000 addresses in one transaction, then 1000 ... 2000.\nAlternative you can use some kind of Merkle tree claim process to optimise the Ethereum state size and push the gas cost to the user.","330":null,"331":"<web3> contract instance had gasPrice set very low. You can use https:\/\/ethgasstation.info\/ to get actual price. I didn't knew that it does meters when you .call() not .send()","332":null,"333":"You can loop through all Transfer() events emitted by the collection contract.\nYou're looking for transfers from address 0x0 (minted tokens). And excluding from the list transfers to address 0x0 (destroyed tokens).\nOne way to achieve this is by using the <web3> Contract getPastEvents() function (docs).\nconst myContract = new <web3>.eth.Contract(abiJson, contractAddress);\nmyContract.getPastEvents('Transfer', {\n    filter: {\n        _from: '0x0000000000000000000000000000000000000000'\n    },\n    fromBlock: 0\n}).then((events) => {\n    for (let event of events) {\n        console.log(event.returnValues._tokenId);\n    }\n});","334":null,"335":"How do I correlate the ID of the unique NFT to the ID and address on the smart contract?\n\nYou can have a mapping of token IDs to the image IDs.\nmapping (uint256 => string) public tokenIdToImageId;\n\nfunction mint(uint256 _tokenId, string _imageId) external {\n    tokenIdToImageId[_tokenId] = _imageId;\n    \/\/ TODO rest of your mint function\n}\n\nThe token ID can be incremental, or it can also be based on your input. When you're minting a new token, you just need to pass it the image ID, and map it to the correct token ID.","336":"Using API\nhttps:\/\/api.elrond.com\/usernames\/<herotag>\n\nE.g.:\nhttps:\/\/api.elrond.com\/usernames\/event\nredirects to\nhttps:\/\/api.elrond.com\/accounts\/erd1hw78kxyj353x52hmmq6dzxgexynwt4m29q2uvpq6xdm90z3halvsl7cn6g\nand returns\n{\n  \"address\": \"erd1hw78kxyj353x52hmmq6dzxgexynwt4m29q2uvpq6xdm90z3halvsl7cn6g\",\n  \"nonce\": 7,\n  \"balance\": \"254914476000000000\",\n  \"rootHash\": \"QU6o17Qw4KUPnpU6e6QbEuvKUTA8SPy52QFseslWsG4=\",\n  \"txCount\": 9,\n  \"scrCount\": 12,\n  \"username\": \"event.elrond\",\n  \"shard\": 1,\n  \"developerReward\": \"0\"\n}\n\nUsing erdpy\nerdpy dns resolve <herotag>.elrond --proxy=https:\/\/gateway.elrond.com\n\nwhere <herotag> should be replaced by its value.\nE.g.:\nerdpy dns resolve event.elrond --proxy=https:\/\/gateway.elrond.com\n\noutputs\nerd1hw78kxyj353x52hmmq6dzxgexynwt4m29q2uvpq6xdm90z3halvsl7cn6g\n\nDetails:\n$ erdpy --version\nerdpy 1.0.12","337":"It doesn't work because of compiler version.\nThis will not work:\npragma solidity ^0.4.24;\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/v2.5.0\/contracts\/math\/SafeMath.sol\"; \n\nThis will work:\npragma solidity ^0.5.0;\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/v2.5.0\/contracts\/math\/SafeMath.sol\";","338":"If you do not want to import your accounts using HDWalletProvider than the only alternative I can think of is using Remix and a wallet like MetaMask to deploy your contracts.","339":"From where comes the hash provided to UsingLiquidityProtectionService?\n\nThe hash is a smart contract address passed to the UsingLiquidityProtectionService constructor (link).\nFrom the context I can see it's this contract on the Ethereum network. However, the contract authors didn't chose to verify the source code. So it's not possible to see the actual implementation without trying to decompile the bytecode. Just that the UsingLiquidityProtectionService expects the 0xBA2b... contract to implement the IPLPS interface.","340":"What you can try to do for starters, is to disable gossip block dissemination (make this key disabled) in all peers.\nGossip keeps an in-memory cache of recent blocks used for dissemination.\nAlso make sure the state transfer is disabled and that all peers are configured to pull blocks from the orderer.","341":"Okay so I ran into this issue too and I was able to solve the issue by upgrading the cardano-cli\nconfirmed that this version of the cli:\ncardano-cli --version\ncardano-cli 1.30.1 - linux-aarch64 - ghc-8.10\ngit rev 0fb43f4e3da8b225f4f86557aed90a183981a64f\n\nworks with this version of the node:\ncardano-node --version\ncardano-node 1.34.1 - linux-aarch64 - ghc-8.10\ngit rev 73f9a746362695dc2cb63ba757fbcabb81733d23","342":"in compile.js\nvar output = JSON.parse(solc.compile(JSON.stringify(input))); \/\/ an object\n\/\/ it spits out bytecode and interface\n\n\nmodule.exports = output.contracts[\"Lottery.sol\"][\"Lottery\"];\n\nin deploy.js\n    const { abi, evm } = require(\".\/compile\");","343":"You can use the ABI link in the Remix Solidity compiler tab. It will copy the ABI JSON of the currently selected source code to your clipboard.","344":null,"345":null,"346":"The Uni-swap test-net router address is :\n0xD99D1c33F9fC3444f8101754aBC46c52416550D1\nSo you need to replace the hardcoded address with this one,\nI faced the same issue, it worked\nFor reference, I saw the post on Reddit\nhttps:\/\/www.reddit.com\/r\/pancakeswap\/comments\/m1s3ki\/pancakeswap_on_bsc_testnet\/","347":null,"348":"Since Solidity 0.7, the visibility modifier is ignored for constructor (source). You can safely remove it and the warning disappears.\n\/\/ removed the `public` modifier\nconstructor(uint256 initialSupply) ERC20 (\"VIRUSONE\", \"VONE\") {\n\ninstead of\n\/\/ original code\nconstructor(uint256 initialSupply) public ERC20 (\"VIRUSONE\", \"VONE\") {","349":"does the smart contract have 1 NFT or many NFTs\n\nThe ERC-721 standard defines a smart contract as a collection of multiple NFTs.\n\none smart contract for each type of my NFTs like dogs, cats... ? or it doesn't matter ?\n\nIt depends on your use case. There's no \"best\" or \"correct\" way.\n\nAnd when I own an NFT, is it that I own a mapping\n\nTechnically, nobody owns the mapping. But in most cases, your address is the value for the token ID key in the mapping.","350":"Using an ExecutorService to run this operation has the potential to run each iteration concurrently. This means that they can all see prevBlock as null before any task has the opportunity to set it. If each iteration depends on the result of the previous operation, there\u00e2\u0080\u0099s no reason to use an  ExecutorService at all. Instead, run each mining operation synchronously within the loop.","351":"You can try this\nconsole.log(wallet.publicKey.toBase58());","352":"work variant for me:\nimport nacl from 'tweetnacl';\nimport * as bip39  from 'bip39';\nimport { derivePath } from 'ed25519-hd-key';\n\nconst <web3> = require('@solana\/<web3>.js')\n\nconst seed = await bip39.mnemonicToSeed(mnemonic);\nconst seedBuffer = Buffer.from(seed).toString('hex');\nconst path44Change = `m\/44'\/501'\/0'\/0'`;\nconst derivedSeed = derivePath(path44Change, seedBuffer).key;\nkeypair = new <web3>.Account(nacl.sign.keyPair.fromSeed(derivedSeed).secretKey);","353":"glad to see you figured it out, even though I'm not sure why IJ would flag the wrong error. In any event, here's my go-to code sample of making a query on a linear state.\nlink attached:\nhttps:\/\/github.com\/corda\/samples-java\/blob\/master\/Advanced\/obligation-cordapp\/workflows\/src\/main\/java\/net\/corda\/samples\/obligation\/flows\/IOUSettleFlow.java#L57-L62","354":"You can test with simple code just to mint one NFT. Adding gasPrice and gasLimit parameters directly into minting function could help\n const hre = require(\"hardhat\");\n async function main() {\n     const NFT = await hre.ethers.getContractFactory(\"NFTNAME\");\n     const WALLET_ADDRESS = \"0xxxxxxxxxxxxxx\"\n     const CONTRACT_ADDRESS = \"0xa915E82285e6F82eD10b0579511F48fD716a2043\"\n     const contract = NFT.attach(CONTRACT_ADDRESS);\n     mintedNFT = await contract.mintNFT(WALLET_ADDRESS,{ gasLimit: 285000, gasPrice: ethers.utils.parseUnits('30', 'gwei')});\n     console.log(\"NFT minted:\", mintedNFT);\n\n}\nmain().then(() => process.exit(0)).catch(error => {\n  console.error(error);\n  process.exit(1);\n});","355":"I had the same issue but then I installed with npm and it worked\nnpm install -g ganache-cli","356":"You can customize the configuration of the test network in configtx.yaml (test-network\/configtx\/configtx.yaml). I would start by adding a definition for Org3, which you can model off the existing definitions for Org1 and Org2 under the Organizations section, then creating a new channel profile that includes (Org2, Org3) under the Profiles section.\nIf by private channel you mean:\nThere is a need to encapsulate all the attributes of a channel like the chaincode deployed and the peers on the channel. In this case, you can use the createChannel.sh script (test-network\/scripts\/createChannel.sh) to join Org1 and Org2 to a new channel, then use this script as a base for another script joining Org2 and Org3 to another channel, referencing the new channel profile created earlier.\nThere is a need to keep only the data within <transactions> private. In this case, a separate channel for Org2 and Org3 would be unnecessary. You can use the addOrg3 script to create and add Org3 to an existing channel between Org1 and Org2. You can then use private data to hide the data in <transactions> on the channel.","357":null,"358":"The <web3>.eth's getPending<transactions> method returns an empty array because it's returning only <transactions> originating from an account on your node. Here's the source code (assuming you are on <geth>).\nYou can use eth.subscribe to get all the pending <transactions>:\nconst <web3> = require('<web3>');\nconst url = 'wss:\/\/ENDPOINT';\nconst <web3> = new <web3>(url);\n\nvar options = {\n    address: null,\n    topics: [\n        null\n    ]\n};\n\nvar subscription = <web3>.eth.subscribe('logs', options, function(error, result){\n    if (!error) console.log('got result');\n    else console.log(error);\n}).on(\"data\", function(log){\n    console.log('got data', log);\n}).on(\"changed\", function(log){\n    console.log('changed');\n});\n\nThis might be useful too.","359":"A \"query\" is just a field on what happens to be the Query type. A field can return any output type, including scalars -- it doesn't need to return an object. So it's sufficient to have a schema like:\ntype Query {\n  transaction(transactionId: String!): Boolean!\n}","360":null,"361":"An algorithm of Bitcoin protocol generates this \"secret\" hash number, depending on difficulty parameter. Look at info about block 700670. Miners tried to guess this number (with 19 leading zeros) to get a reward and record a \"legitimate\" transaction in the ledger.\n00000000000000000004b2d8909041ea8c0bd224b7cfa6c03d202fc7682eb93d","362":"The method was removed in <geth> v1.10. See their blog post where the mention it.\n\nNote, the eth_protocolVersion API call is gone as it made no sense. If you have a very good reason as to why it\u00e2\u0080\u0099s needed, please reach out to discuss it.","363":"So I found an answer to my question. I was using the wrong Ethereum Data Feed Address. I updated address to 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e which is for ETH\/USD on Rinkeby Test Net and it compiles and deploys perfectly with no errors","364":"When the sender sends ETH to your contract address and doesn't specify any function (i.e. the data field of the tx is empty), the receive() gets executed.\nSince the receive() just calls buyToken(), it produces the same set of actions as if the user executed the buyToken() directly.\nBut other contracts can make a different use of the receive() function. Example of a simple bank contract:\npragma solidity ^0.8;\n\ncontract MyContract {\n    mapping (address => uint256) public balances;\n\n    receive() external payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw(uint256 _amount) external {\n        require(_amount <= balances[msg.sender], 'Insufficient balance');\n        balances[msg.sender] -= _amount;\n        payable(msg.sender).transfer(_amount);\n    }\n}\n\nOr a timelock:\npragma solidity ^0.8;\n\ncontract MyContract {\n    uint256 public constant unlockAfter = 1640995200; \/\/ 2022-01-01\n\n    receive() external payable {\n        \/\/ anyone can send funds to this contract\n    }\n\n    function withdraw() external {\n        require(msg.sender == address(0x123), 'Not authorized');\n        require(block.timestamp >= unlockAfter, 'Not unlocked yet');\n        payable(msg.sender).transfer(address(this).balance);\n    }\n}\n\n\nThe fallback() functions is used when the function signature (first 4 bytes of the data field) doesn't match any of the existing functions.\npragma solidity ^0.8;\n\ncontract MyContract {\n    function foo() external {\n        \/\/ executed when the `data` field starts with `0xc2985578`, the signature of `foo()`\n    }\n    \n    fallback() external {\n        \/\/ executed when the `data` field is empty or starts with an unknown function signature\n    }\n}","365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":"I had the same issue few hours ago and I followed the suggestion given in the error message, I got passed the issue but hit another issue while I was trying to run .\/network.sh createChannel command so I had to opt for using WSL.\n\nPlease make sure that FABRIC_CFG_PATH\n\nThe path was already set correctly in the network.sh file so there is no need to do anything with the first suggestion.\n\nor -configPath is set to a path which contains configtx.yaml\n\nI followed the second suggestion by adding -configPath .\/configtx to the command in the createConsortium() method in the network.sh file. The command looks like the below code after but like I said I could not get it to work so I had to do it on WSL\nconfigtxgen -configPath .\/configtx -profile TwoOrgsOrdererGenesis -channelID system-channel -outputBlock .\/system-genesis-block\/genesis.block","372":"you can do whatever analysis you want by checking the reciept:\nconst tx = await ....;\nconst txRexiept = await tx.wait(1);\nconsole.log(\"the transaction details are\");\nconsole.log(txReciept);","373":"ERC20Tokens[tokenTicker].token.approve(ERC20Tokens[tokenTicker].tokenHolder, 10);\n\nThis line approves the tokenHolder to spend your contract's tokens. Not the other way around.\nSo the transferFrom() fails because your contract is trying to spend the tokenHolder's tokens.\n\nIf you want your contract to be able to spend tokenHolder's tokens, the tokenHolder needs to execute the approve() function on the token from their address directly. Not through a contract in between.","374":"This is how. Assuming you are in \/Users\/{User}\/Bitcoin where Bitcoin Core was compiled:\n.\/src\/bitcoind -datadir=\"\/Volumes\/My SSD\/Bitcoin\"","375":"Pasting my working version below for those who reference this post for the same or similar issues.\nInput form w\/ button:\n<input type=\"number\" ref={inputRef} className=\"form-control\" \/>\n                                \n                                <button \n                                    type='submit'\n                                    onClick={(event) => {\n                                    event.preventDefault()\n                                    let amount\n                                    amount = inputRef.current.value.toString() \n                                    amount = window.<web3>.utils.toWei(amount, 'Ether')\n                                    props.stakeTokensVault(amount)\n                                    }}\n                                    className='btn btn-primary btn-lg btn-block'>DEPOSIT\n                                <\/button>\n\n\nAnd the staking\/deposit function:\nconst stakeTokensVault = (amount) => {\n  \n    tether.methods.approve(chadsVault._address, amount).send({from: account}).on('transactionHash', (hash) => {\n    chadsVault.methods.stake(amount).send({from: account}).on('transactionHash', (hash) => {\n   \n    })\n  })\n}","376":"The error occurs because you must specify a value in the constructor when implementing the contract. If you do not pass a value, the contract will throw this error. I attached an image with your code working in ide remix.\nRemix ss with code working:","377":"You are correct, the discovery service is returning network URLs that are unreachable from the hlf-<blockchain> namespace.\nIt is possible to run a Gateway client in a different namespace from the Fabric network.  If you are using Kube DNS, each\nof the fabric nodes can be referenced with a fully qualified host name <service-name>.<namespace>.svc.cluster.local.\nIn order to connect a gateway client across namespaces, you will need to introduce the .svc.cluster.local\nFully Qualified Domain Name to the fabric URLs returned by discovery:\n\nIn your TLS CA enrollments, make sure that the certificate signing requests include a valid Subject Alternate Name\nwith the FQDN.  For example, if your peer0 TLS certificate is only valid for the host peer0, then the grpcs:\/\/\nconnection will be rejected in the TLS handshake when connecting to grpcs:\/\/peer0.hlf-<blockchain>.svc.cluster.local.\n\nIn the Gateway Client Connection Profile, use the FQDN when connecting to the discovery peers.  In addition\nto the peer url attribute, make sure to address host names in the grpcOptions stanzas.\n\nDiscovery will return the peer host names as specified in the core.yaml peer.gossip.externalendpoint\n(CORE_PEER_GOSSIP_EXTERNALENDPOINT env) parameter.  Make sure that this specifies the FQDN for all peers\nvisible to discovery.\n\nDiscovery will return the orderer host names as specified in the configtx.yaml organization OrdererEndpoints stanza.\nMake sure that these URLs specify the FQDN for all orderers.\n\n\nRegarding the general networking, make sure to double-check that the gateway client application has visibility and a\nnetwork route to the pods running fabric services in a different namespace.  Depending on your Calico   configuration\nand Kube permissions, it's possible that traffic is getting blocked before it ever reaches the Fabric services.","378":"Define a genesis config builder in your pallet. E.g https:\/\/github.com\/paritytech\/substrate\/blob\/master\/frame\/im-online\/src\/lib.rs#L359-L376\nEnable the genesis config by adding an Config\/Config<T> while construct the runtime. E.g https:\/\/github.com\/paritytech\/substrate\/blob\/master\/bin\/node\/runtime\/src\/lib.rs#L1229\nSet the genesis at chain_spec. E.g https:\/\/github.com\/paritytech\/substrate\/blob\/master\/bin\/node\/cli\/src\/chain_spec.rs#L349\n\nNote: But in this example, these keys are managed by pallet-session. https:\/\/github.com\/paritytech\/substrate\/blob\/master\/bin\/node\/cli\/src\/chain_spec.rs#L307-L316.","379":null,"380":"The eth_getBlockByNumber method receive as the latest parameter a boolean specifying if you want the full transaction object list or not:\n1 - QUANTITY|TAG - integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the default block parameter.\n2 - Boolean - If true it returns the full transaction objects, if false only the hashes of the <transactions>.\n\nSo in your code you can do something like that:\n# I'm not sure about the <python> code, this is just a sample\nblock = w3.eth.get_block(block_height, true)\nblock_transValue_eth = 0\nfor tx in block['<transactions>']:\n    block_transValue_eth += tx.value\nprint block_transValue_eth\n\nAnd avoid doing an RPC call to get each transaction.","381":"The choice of \"endpoint\" to call on a smart contract in Solana is decided by that buffer that you passed in as the data of the instruction.  Given that data, the program decides which instruction processor to call.\nIn your example, the choice of instruction is likely based on the first byte of the instruction, so 0 may correspond to MetadataInstruction::CreateMetadataAccount.\nYour best bet is to use a package provided by the program developer. In the case of the metadata program, the instruction and type definitions live at: https:\/\/github.com\/solana-labs\/oyster\/blob\/e79c5a66ed5290d3fb752f4cd6b4e90f7974ec94\/packages\/common\/src\/actions\/metadata.ts","382":"In your .env set ENABLE_EXPERIMENTAL_ADAPTERS=true and restart your node.","383":"Keypair.fromSeed() takes a Unit8Array check\nbuffer.toJSON().data this returns a 64 length array, So this contains both the public key and private key respectively. Check this\nlet a = new Uint8Array(buffer.toJSON().data.slice(0,32))\nconst key = Keypair.fromSeed(a);\n\nI tried the above and this works.\nkey has a public key and private key component.","384":"Events in Solidity can be used to log certain events in EVM logs. These are useful when clients are required to be notified of any change or event in the contract. Or maybe in the future you need to search for something that has happened so you go through all the logs. These logs are stored on the <blockchain> in transaction logs. Logs cannot be accessed from the contracts but are used as a mechanism to notify change of state or the occurrence of an event in the contract. They help us write asynchronous applications.\n\nEvents are stored in the logsBloom which is in the header of each block.\n\nEvents are piece of data executed on the <blockchain> and stored in the <blockchain> but not accessible by any smart contracts. it is kinda console.log in javascript or print in <python>.\n\nEvents are much more gas efficient than using a storage variable\n\nEvents are useful for testing the contract. If you interact with oracles, you sometimes want to see if the function call by oracle service is done or not. To see if the function call is done, you emit the result of the function or one of the properties of the result.\n\nEvents are useful if you want to maintain the history\/log of every change that happens in a mapping.\n\nDeposit contracts were created on the Ethereum 1.0 chain. This kind of smart contract is used for depositing ETH on the beacon chain. An event is emitted every time a deposit is made.\n\nThere are two events that must be present in an ERC-20-compliant token:\n\nTransfer : This event must trigger when tokens are transferred, including any zero-value transfers. The event is defined as follows:\n\nevent Transfer(address indexed _from, address indexed _to, uint256 _value)\n\n\nApproval : This event must trigger when a successful call is made to the approve function.\n\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value)\n\n\n\nYou can read this article for deep dive: transaction-receipt-trie-and-logs-simplified","385":"are you running this via remix? If so, you need to provide inputs to the function in the correct format. See this response https:\/\/ethereum.stackexchange.com\/questions\/96383\/invalid-arrayify-value-while-using-bytes32-array\/96399","386":null,"387":"found this answer, posting it here in case others find it useful - basically yes should use the Oracle contract address with valid on-chain setFulfillmentPermissions. Also, when declaring the \"specID\" param:\nbytes32 private specId;\n\nNeed to make sure that the jobID copied over from the Chainlink node is encoded as bytes32 object, not as a string.","388":"The Remix VM emulator can't reach the contract deployed on the mainnet address - it's in a different environment.\nHowever, you can fork the mainnet to your local environment, and then connect Remix to this local environment.\nHere's an article describing how to fork the Ethereum mainnet using Ganache.\nOne-click solution based on the article:\nganache-cli --fork https:\/\/mainnet.infura.io\/v3\/{infura_project_id}\n\nThen you can select a custom provider in your Remix IDE.\nganache-cli is listening on port 8545, and Ganache UI on 7545.\n\nEnter the local \"<web3> Provider Endpoint\" address with the port number 8545 (ganache-cli) or 7545 (Ganache UI).","389":"To add a new token for devnet only, you can put in a normal token addition pull request, but you'll have to specify \"chainId\": 103 for devnet.  This is defined at [1], and you can see all of the current devnet tokens at [2].\n[1] https:\/\/github.com\/solana-labs\/token-list\/blob\/c1ff0ac267d03397f56a7030b02d357f90d49f79\/src\/lib\/tokenlist.ts#L5\n[2] https:\/\/github.com\/solana-labs\/token-list\/blob\/c1ff0ac267d03397f56a7030b02d357f90d49f79\/src\/tokens\/solana.tokenlist.json#L7513","390":"It looks like you're trying to transfer SPL Token amounts.  To properly do a transfer, you'll have to provide the exact instruction as expected by the SPL Token program.\nFor a transfer, in the accounts, you need to provide the source account (an SPL token account), then the destination account (an SPL token account), then the signer (some other account).  For the data, you need to provide the byte 3 (for a transfer instruction), followed by 8 bytes of a little-endian 64-bit unsigned integer, representing the amount to transfer.  More info at https:\/\/github.com\/solana-labs\/solana-program-library\/blob\/36e886392b8c6619b275f6681aed6d8aae6e70f9\/token\/program\/src\/instruction.rs#L88\nIn general, it'll be easier to the JS package provided by Solana: https:\/\/www.npmjs.com\/package\/@solana\/spl-token\nHere's an example test for creating a new token mint and performing a transfer: https:\/\/github.com\/solana-labs\/solana-program-library\/blob\/master\/token\/js\/examples\/create_mint_and_transfer_tokens.js","391":"To prevent any more minting, you'll need set the minting authority to None.  In JS, you can simply set the newAuthority to null during your call to setAuthority with authorityType = MintTokens in [1]\n[1] https:\/\/github.com\/solana-labs\/solana-program-library\/blob\/36e886392b8c6619b275f6681aed6d8aae6e70f9\/token\/js\/client\/token.js#L985","392":"Will the same contract work in the Binance Smart Chain too?\n\nYes, actually if you developed a contract that works in ethereum, it will works in all the EVM (Ethereum Virtual Machine) compatible chains. For getting started, I suggest you read the solidity doc, try the examples in remix online ide, and deploy to testnet (all the chains have testnet).\np.s. how to get the test coin? google search testnet faucet","393":null,"394":"It's not possible to call external API endpoints from the EVM.\nHowever, you can use a similar pattern to what Chainlink is using, with the difference of being more centralized. You can have an off-chain app listening to specific transfers or events.\nWhen the off-chain app catches this transfer or event, it can call the external API. And then pass the result of the call back to your contract, in a form of a transaction executing a contract function, passing it the returned data (the same way as Chainlink does).","395":"if the block contains the transaction data how does the smart contract stored in the <blockchain>.\n\nThee code is stored in the payload of the contract deployment transaction.","396":"I assume you are referring to the Quick-start guide for building smart contracts in Rust?\nLet's check a few things to make sure you didn't miss any steps.\n\nDid you create a lib.rs file and copy the contents of this smart contract into that file?\n\nDid you successfully deploy the contract using near-cli after you compiled it to WASM?\n\nAre you invoking the methods using near-cli and replacing YOUR_ACCOUNT_HERE with the testnet accountId you just deployed the contract to?\n\n\nIf so, would you be able to share your code \/ commands so I can help you debug your issue? This tutorial was updated recently (less than a month from today) so it should work, but while I'm waiting for your response I will run through the steps to make sure we don't have a bug on our end. :)\n** UPDATE **\nJust went through the tutorial and it worked for me. Here was my command using near-cli:\nnear call ex-1.testnet increment --accountId ex-1.testnet\n\nAnd the response:\nScheduling a call: ex-1.testnet.increment()\nReceipt: 3UTWH43Tgxy1kSSvoax5cRu8A2VEDKZqzgZaEXTwzsBD\n    Log [ex-1.testnet]: Increased number to 1\n    Log [ex-1.testnet]: Make sure you don't overflow, my friend.\nTransaction Id 2U92KghmCqihUuURVaLGj8x8FrBhQ5z1vE35BVdZG1ob\nTo see the transaction in the transaction explorer, please open this url in your browser\nhttps:\/\/explorer.testnet.near.org\/<transactions>\/2U92KghmCqihUuURVaLGj8x8FrBhQ5z1vE35BVdZG1ob\n\nFeel free to reach out on our Discord for further assistance. The proper channel for this discussion would be #near-sdk-rs under #development but #dev-support is ok too. :)","397":"The account password is used to encrypt the keystore file data, so basically without the password, you will not be able to recover your account even if you have access to the keystore file.\nhttps:\/\/<geth>.ethereum.org\/docs\/interface\/managing-your-accounts\n\nIf you lose the password you use to encrypt your account, you will not be able to access that account. Repeat: It is NOT possible to access your account without a password and there is no forgot my password option here. Do not forget it.","398":"It depends on your genesis.json config, not on the CLI params.\nYou're using Proof of Authority (PoA) if you have the clique defined in the config. If you don't have it, you're using Proof of Work (PoW).\nFor more info, see \"Clique Example\" in the docs.","399":null,"400":"May be late answering this one, but I had a similar problem. You can only access a limited number (50) assets if using the API.\nUsing the API referenced on the page you linked to, you could do a for loop to grab assets of a collection in a range. For example, using <python>:\nimport requests\n\n\ndef get_asset(collection_address:str, asset_id:str) ->str: \n\n        url = \"https:\/\/api.opensea.io\/api\/v1\/assets?token_ids=\"+asset_id+\"&asset_contract_address=\"+collection_address+\"&order_direction=desc&offset=0&limit=20\"\n        response = requests.request(\"GET\", url)\n        asset_details = response.text\n        return asset_details\n    \n    #using the Dogepound collection with address 0x73883743dd9894bd2d43e975465b50df8d3af3b2\n    collection_address = '0x73883743dd9894bd2d43e975465b50df8d3af3b2'\n    asset_ids = [i for i in range(10)]\n    assets = [get_asset(collection_address, str(i)) for i in asset_ids]\n    print(assets)\n\nFor me, I actually used Typescript because that's what opensea use for their SDK (https:\/\/github.com\/ProjectOpenSea\/opensea-js). It's a bit more versatile and allows you to automate making offers, purchases and sales on assets. Anyway here's how you can get all of those assets in Typescript (you may need a few more dependencies than those referenced below):\n    import * as <web3> from '<web3>'\n    import { OpenSeaPort, Network } from 'opensea-js'\n    \n    \/\/ This example provider won't let you make <transactions>, only read-only calls:\n    const provider = new <web3>.providers.HttpProvider('https:\/\/mainnet.infura.io')\n    \n    const seaport = new OpenSeaPort(provider, {\n      networkName: Network.Main\n    })\n\n\n    async function getAssets(seaport: OpenSeaPort, collectionAddress: string, tokenIDRange:number) {\n      let assets:Array<any> = []\n      for (let i=0; i<tokenIDRange; i++) {\n          try {\n            let results = await client.api.getAsset({'collectionAddress':collectionAddress, 'tokenId': i,})\n            assets = [...assets, results ]\n          } catch (err) {\n            console.log(err)\n          }\n          \n      } \n  return Promise.all(assets)\n}\n\n\n(async () => {\n  const seaport = connectToOpenSea();\n  const assets = await getAssets(seaport, collectionAddress, 10);\n  \/\/Do something with assets \n \n})();\n\nThe final thing to be aware of is that their API is rate limited, like you said. So you can only make a certain number of calls to their API within a time frame before you get a pesky 429 error. So either find a way of bypassing rate limits or put a timer on your requests.","401":"It is better to use standard ERC20 or whatever kind of token you want to create. here is the standard ERC20 contract. To use the standard ERC20 contract, you have to import it and your token contract should inherit it. Like this:\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC20\/ERC20.sol\";\n\ncontract YOUR_TOKEN_CONTRACT is ERC20{\n\n   constructor() ERC20(YOU_TOKEN_NAME, YOUR_TOKEN_SYMBOL){\n   \/\/code here\n   \/\/for example _mint(msg.sender, 100000);\n   }\n   \/\/code here\n}\n\nStandard ERC20 contract has a function to return total supply called totalSupply(). So it makes it easier to write token contracts.\nAlso you have syntax error in your code!\nTo return a value you have to follow this syntax:\nfunction CheckTotalSupply(uint supply) public retuns(uint){\n        return supply;\/\/                      ^ this is returns with (s) at its end\n      \/\/^ this is return whitout (s) at its end\n    }\n\nin retuns you specify what kind of variable you want to return then in return you return the values in order you specified in returns","402":null,"403":"From the docs:\n\nCIDs are based on the content\u00e2\u0080\u0099s cryptographic hash. That means:\n\nAny difference in the content will produce a different CID and\nThe same content added to two different IPFS nodes using the same settings will produce the same CID.\n\n\n\nSo you'll get the same hashCID only if both 0.png and 1.png have the same content and are added (to the IPFS) with the same settings.","404":"<hyperledger> fabric documentation https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.2\/private-data\/private-data.html#what-is-a-private-data-collection captures details on the privacy, how it is achieved. Please refer here.","405":"The function you would want to run is get_round().\nget_round() is similar to get_price() but you specify a timestamp and it will return the closest price that occurred just before that timestamp.\nYou can see this function on GitHub.\nFull documentation is still underway for the Chainlink+Solana integration so keep your eyes out on this page in the chainlink docs to find it in the future.","406":"I found the solution !\nTurns out that my <geth> Ethereum node is not fully synchronized and thus whatever API call I conduct via the ethers library, it will act as like the Ethereum chain is empty.\nI connected into my <geth> Ethereum node via:\n<geth> attach http:\/\/localhost:8545\n\nand then run the command:\neth.syncing\n\nto check if the synchronization is completed. If it is done, then it will return \"false\".","407":null,"408":"I am sure there is no such toolchain yet.\nI am a Terra smart contract developer using the skills you mentioned and going through the process you meant in every-day-basis.\nUnfortunately, I also could not found the answer for toolchain which makes development easy for developers.\nBut, if you take the partial optimization into the account, you can do that!\nFor example, you can build bash script for both building and testing(unit & integration-test) the Rust-written smart contracts, since they are related with cargo ... commands.\nAbout the deployment and testing smart contracts on terra network, you can also build script using Terra SDK(.js or .py). For the convenience, you select the testnet since LocalTerra needs manual start. That script illustrates the deploy and interact procedure in order.\nSurely, it is not the best answer, just improvement advice from my personal experience.","409":"Actually I figured it out, turned out I needed to enable polygon beta inside my account settings and add my billing information for infura.io","410":"As far as I remember, you cannot return a struct unless you add the pragma experimental ABIEncoderV2 to your contract. As the name suggests that it is experimental and also limited to the internal functions.\nTake a look at this question here\nSo what you can do is return all struct values individually like this:\nfunction getPerson() \npublic view returns(uint ppNo,  bytes32 firstName, string memory gender, string memory dayOfbirth, string memory country) \n{\n    return (PersoneDictionary[msg.sender].ppNo, PersoneDictionary[msg.sender].firstName, \n            PersoneDictionary[msg.sender].gender, PersoneDictionary[msg.sender].dayOfbirth, \n            PersoneDictionary[msg.sender].country);\n}","411":null,"412":"It is because you are making every function and variables as internal. Internal functions are limited to the contract level and thats why you dont see them after deployment. Replace internal with external on the functions you want to call after deployment.","413":"But when I use command \"ion operation create\"...\n\nThe CLI is completely experimental (as it is using a test library) and on development pause since last year, we did not anticipate anyone would know about it since we didn't advertise it on front page, but I have just opened a PR to make it use the ION SDK instead, it should be merged soon, I am not sure if it was working before my PR (probably was), but it should definitely work now.\n\nThat DID belongs to mainet.\n\nThe CLI was written with the assumption that it targets mainnet. But it is fine, the request will work perfectly fine against the testnet. The test: prefix in the DID string is purely cosmetic for the most part.\n\nBut with my DID (generate by myself), it shows this error\n\nSince you are testing testnet DIDs and your node is setup as such (\"didMethodName\": \"ion:test\", seen in your config above), you must therefore prefix your unique DID suffix string with did:ion:test:<unique_suffix>, you didn't in your screenshot, hence the error. I hope this makes sense. The error message you are seeing in the screenshot also says exactly that.\n\nStep 3: I resolve with DID \"did:ion:test:EiC3YoSodQ20tJcgKjLXr65BHr2KwnQWsUnm3VOiYUFMeA\", but It proved \"not found\"\n\nION DID tool should work. Sanity: assuming you've setup the node to be able to write, did you wait for that transaction to be confirmed? You can check by checking the transaction hash that is printed out when batch writer kicks in every 10 minutes (based on your conifg \"batchingIntervalInSeconds\": 600,). Even though the post request immediately returns a DID Document, that is just for your convenience to know that 1. the node accepted your request and queues it, and 2. shows what your DID Document will look like once it is confirmed, purely for your convenience. But we all know bitcoin <transactions> takes a while to confirm, especially on testnet, where the confirmation time is less predictable.","414":"First of all, just after completing that tuto you end up dispatching some extrinsics. As contracts in substrate have a very concrete meaning and is not the same as what a pallet nor a runtime are.\nYou can learn more on extrinsics on its Knowledge Base section.\nAn overview here on smart contracts vs runtime\nTo understand how fees work in substrate here you have a pair of resources that will clarify all your doubts.\n\nhttps:\/\/substrate.dev\/docs\/en\/knowledgebase\/learn-substrate\/weight\nhttps:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/fees\n\nHope that gain you a better understanding :)","415":"How can I send test BAT or AAVE or any other token to myself?\n\nAs far as I'm aware, there are no \"official\" BAT or AAVE token contract on the testnets. By official, I mean - supported by the original token authors or their team.\nSo you can do what some people before you did as well. Copy-paste the BAT token source code, and deploy it on the testnet. Only in this case, you modify the constructor or other functions to mint the tokens to your address, or to give you some kind of authorization (owner for example).\nOr you can write and deploy a custom token contract. Either from scratch - or by extending the OpenZeppelin ERC-20.sol opensource implementation, you just call their constructor with your values.\npragma solidity ^0.8;\n\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC20\/ERC20.sol\";\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/access\/Ownable.sol\";\n\ncontract MyToken is ERC20, Ownable {\n    \/\/ sets the token metadata such as name and symbol, also sets the `owner` to `msg.sender`\n    constructor() ERC20(\"MyToken\", \"MyT\") {}\n    \n    \/\/ effectively mints the `_amount` of new tokens to the `owner`\n    function mint(uint256 _amount) external onlyOwner {\n        _mint(msg.sender, _amount);\n    }\n}\n\n\n\nCan I reuse the same generated Eth address for all ETH Tokens?\n\nThe token balance of an address is stored on each token contract - not on the address alone. So there's no capacity limit of how many tokens can an address own, if that's your concern.\nFor some people it might be important to use separate address for each token for privacy reasons. If you separate the tokens that you own to multiple addresses, it's much harder to estimate how much you (as a person) own in total.\nAnother reason that some people use is redundancy. If you lose access to one of your addresses, you still have multiple others with balance.","416":"Using stub.GetStateByRange(startKey, endKey) it is possible to retrieve results on a partial key, if they key has a specific form.\nFor eg.\nthe following keys could be used to successfully with a range query in the chaincode to retrieve a list of results, to match key abc123\na  \nab  \nabc  \nabc1  \nabc12  \nabc123  \n\nHowever, a key without the same initial characters will not work. Eg. bc12 or 123.\nThe below function documentation gives a good idea of how the GetStateByRange function can be used.\n    \/\/ GetStateByRange returns a range iterator over a set of keys in the\n    \/\/ ledger. The iterator can be used to iterate over all keys\n    \/\/ between the startKey (inclusive) and endKey (exclusive).\n    \/\/ However, if the number of keys between startKey and endKey is greater than the\n    \/\/ totalQueryLimit (defined in core.yaml), this iterator cannot be used\n    \/\/ to fetch all keys (results will be capped by the totalQueryLimit).\n    \/\/ The keys are returned by the iterator in lexical order. Note\n    \/\/ that startKey and endKey can be empty string, which implies unbounded range\n    \/\/ query on start or end.\n    \/\/ Call Close() on the returned StateQueryIteratorInterface object when done.\n    \/\/ The query is re-executed during validation phase to ensure result set\n    \/\/ has not changed since transaction endorsement (phantom reads detected).\n    GetStateByRange(startKey, endKey string) (StateQueryIteratorInterface, error)","417":"I think the error will because of EIther you haven't changed  the deployed option to <web3> provider or You haven;t changed the Port to 7545. Please check , i face the same issue","418":"I think you want (I use dot notation for simplicity):\n{\n  \"selector\": {\n    \"Company.Associate.access\": {\n      \"$elemMatch\": {\n        \"create\": {\n          \"$exists\": true\n        }\n      }\n    }\n  }\n}\n\n...or maybe...\n{\n  \"selector\": {\n    \"Company.Associate.access\": {\n      \"$elemMatch\": {\n        \"create\": \"allowed\"\n      }\n    }\n  }\n}","419":"The code for the NFTs are available here, so it\u00e2\u0080\u0099s possible to examine and figure out how it works: https:\/\/etherscan.io\/address\/0x60e4d786628fea6478f785a6d7e704777c86a7c6#code\nI am not an expert, but what it appears to do is use a series of lookup tables to map an Ape ID to a particular hash value that contains the attributes of the Ape and an image of it. Mutant apes are just additional lookup table entries based on ape ID and offset based on the serum count applied (or a separate offset of mutant serum was applied).\nSo all the generation happens off chain and then the contract is just is a pointer to the appropriate entry.","420":null,"421":"This is quite a specific question around your code, but the error message is probably the best place to look:\nProgram log: panicked at 'called `Option::unwrap()` on a `None` value', src\/lib.rs:67:98\n\nThis seems to correspond with the line:\nlet index = existing_data_messages.iter().position(|p| p.groom == String::from(DUMMY_TX_ID)).unwrap();\n\nYou're calling unwrap() on a None value, which makes sense, considering nothing has been written to this account before.  You'll need to handle the case where DUMMY_TX_ID is not found in your vector.\nYou can find more information about how position() works at https:\/\/doc.rust-lang.org\/std\/iter\/trait.Iterator.html#method.position","422":"you can add a functionm, below like that.\nBut you have to excute mintDaily() manually\n    uint256 constant private dailyMinted = 2000e18;\n    uint256 lastMintTime;\n\n    address public _owner;\n    \n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        address owner\n    ) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n\n        _owner = owner;\n        lastMintTime = block.timestamp;\n    }\n    \n    function mintDaily() public {\n        require(_owner == msg.sender, \"not permitted\");\n        \/\/ 24h = 86400\n        require(lastMintTime + 86400 >= block.timestamp, \"mint already\" );\n        _mint(msg.sender, dailyMinted);\n        lastMintTime = block.timestamp;\n    }","423":"I finally was able to figure out was wrong. The file I edited was runtime\/src\/lib.rs instead of pallets\/template\/src\/lib.rs . I didn't realize there were multiple of them. The tutorial involves deleting the contents of the whole lib.rs and replacing with a new one","424":"Every block on the <blockchain> does not have every other block's data. Actually you might have confused it with Every node (A node is an instance connected to p2p network of <blockchain>) on <blockchain> has all the blocks written to the <blockchain> so far.\nSo the statement\n\nEvery block in a <blockchain> can have every other block data.\n\nis not true. A block only has data that was added to it at the time of creation after that no data can be added or removed from it.\nNow towards your 2nd question\n\nWhich is the detailed process that happens when there is a transaction available, and how does it incorporates to the <blockchain>?\n\nLets say A transfers B 1 BTC now first of all in order to submit the transaction you have to be connected to <blockchain> node or a service that is connected to <blockchain> (bitcoin <blockchain> in this case) node.\nNormally the wallet apps we use to transfer crypto are connected to <blockchain> node and post our <transactions> for us.\nOnce the transaction is given to a node to process initially it is validated and added to what is called mempool which is essentially a place where all the <transactions> that are yet to be added in blocks live. Mostly nodes have dedicated some space for mempool. Now nodes pick up transaction from mempool (prioritising the one's with higher fee as they get to keep the fee) and add it in a block. This block is called \"candidate block\".\nNodes start minning candidate block and if they are lucky enough to mine it first the block is broadcasted to the whole network and everyone adds this block to their chain and start minning next block repeating the same process as above.\nThe Above process is mainly for bitcoin <blockchain> but other <blockchain> all of similar processes.\nFor beginners instead of going through articles and youtube videos i would recommend studying these books to develop a thorough understanding of underlying architecture. There are mainly two type of <blockchain> (with in crypto eco system) UTXO Based (old ones mainly Bitcoin and its derivaties LTC Zcash DASH etc) and Account Based (New ones Ethereum BNB etc).\nFor UTXO Based <blockchain>.\nhttps:\/\/www.oreilly.com\/library\/view\/mastering-bitcoin\/9781491902639\/ch01.html.\nFor Account Based <blockchain>.\nhttps:\/\/www.amazon.com\/Mastering-Ethereum-Building-Smart-Contracts\/dp\/1491971940","425":"I found the answers to my questions.\nI Have to Use Infura from  this page\nplease check this information\nand at first You have to create project in infura and get ID\nand use this code :\n\n\n<web3> = new <web3>(new <web3>.providers.HttpProvider(\"https:\/\/ropsten.infura.io\/v3\/3c68e\/*Your Own ID*\/1753\"));","426":"try to approve to pair address, instead of router address\nvar tx0 = {\n        to: token0.options.address, \n        gas: gasNeeded, \n        data: token0.methods.approve(pair,amountIn).encodeABI()","427":"The testnet is pretty volatile and it is reset very often (maybe weekly), without any warnings.\nElrond recommends developers to use the devnet, it is reset maybe once every 3-4 months, so it's more stable.\nYou can get the provider like this:\nfunction getDevnetProvider() {\n    return new proxyProvider_1.ProxyProvider(\"https:\/\/devnet-gateway.elrond.com\", { timeout: 5000 });\n}\n\nAnd the devnet explorer is here: https:\/\/devnet-explorer.elrond.com\/","428":"For those that come across this issue, I resolved it by setting the following flag on my <web3> instance:\n<web3>.TransactionManager.UseLegacyAsDefault = true;\n\nIf there is a way to do what I need without setting this flag, please feel free to leave a comment.","429":"We need import SafeMath.sol library and declare its usage.  after that, we can call .sub, .add function with uint256 variable.\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.5.16;\n\n\/\/ Import SafeMath library\nimport \"@openzeppelin\/contracts\/utils\/math\/SafeMath.sol\";\n\/\/ Or we can import from online\nimport \"https:\/\/raw.githubusercontent.com\/OpenZeppelin\/openzeppelin-contracts\/master\/contracts\/utils\/math\/SafeMath.sol\";\n\ncontract Token {\n    \/\/ declar SafeMath libary usage for uint256\n    using SafeMath for uint256;\n\n    string public name = \"Token\";\n    string public symbol = \"TK\";\n    uint256 public decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf; \/\/Track balance\n\n    constructor() public {\n        totalSupply = 1000000 * (10 ** decimals);\n        balanceOf[msg.sender] = totalSupply;\n    }\n\n     \/\/Send Token\n    function transfer(address _to, uint256 _value) public returns(bool success){\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value); \/\/error on this line\n        balanceOf[_to] = balanceOf[_to].add(_value);\n        return true;\n    } \n}","430":"Your error clearly states that while you are trying to deploy to your local network, it is not up and running. So, what you have to do is simply open a new terminal window and run:\nsolana-keygen new\n\nsave the seed phrase and other relevant details somewhere secure and then, run\nsolana-test-validator\n\nNow in a separate terminal window where you had earlier tried to deploy, type\nanchor deploy \n\nagain and it should be successfully deployed.\nElse, if you were trying to deploy on any other network, for example, devnet. Then you would want to airdrop some SOL into the account generated after running solana-keygen new using the command:\nsolana airdrop 1 <RECIPIENT_ACCOUNT_ADDRESS> --url https:\/\/api.devnet.solana.com\n\nThen use additional flags in your deploy command as follows:\nanchor deploy --provider.cluster devnet","431":"It seems there is a typo in your truffle-config.js: post instead of port.\nTry this out:\n  networks: {\n    development: {\n      host: \"127.0.0.1\",\n      port: 9545,\n      network_id: \"*\"\n    }\n  },\n\nThen:\n\nDouble check the settings on Ganache match with the ones on truffle-config.js\nCheck that Ganache is running.\n\nAnd finally open a new terminal and run the following 2 commands in the same folder where the file truffle-config.js is hosted:\ntruffle console \u00e2\u0080\u0093\u00e2\u0080\u0093network development\n\nmigrate \u00e2\u0080\u0093\u00e2\u0080\u0093reset","432":"You need to also add a block producer key to your command.\nNot exactly sure what the staging chain specification looks like, but something like:\n.\/target\/release\/substrate --chain=staging --alice\n\nWhere we assume Alice is a configured block producer for the chain.","433":null,"434":"As far as I know, there's no restriction on the size of the GET itself. It's then what you do with it after where there are restrictions. In the past, responses back on-chain have been limited to a single value (integer, 32byte string etc), so you'd then have to choose or 'strip' out a value from the result of the HTTP GET, then parse and return it on-chain, however, Chainlink now supports multi-word responses","435":null,"436":"For example, I'd like to collect transaction data such as input address, output address, transaction time, transaction amount, etc. for Ethereum.\n\nYou can iterate over all blocks and <transactions> using <web3>.eth.get_block call. You need, however, parse the transaction content yourself.\nTo access all the data, it is recommended that you run your own node to have the maximum network bandwidth for JSON-RPC calls.\n\nAlso, do I must have my own Ethereum wallet(address) in order to access their data with <web3>py?\n\nAddress is just a derived from a random number and you do not need to generate one.","437":"This type of issue tends to be fixed by removing all your node_modules and reinstalling using yarn instead of npm","438":"You need to open a tunnel on the remote computer to connect to the local computer that <geth> is running on.\nThis should do it\nssh -N -v admin@server1 -L 8545:localhost:8545","439":"I was having the same issue, you should look up if the transaction that are you trying to send it valid or not, because in my case Metamask always reverted my transaction because was not valid (contract ownership matter) and throw the \"JSON-RPC\" error\nIn your case you should look if you have founds or if are something on the contract that revert your tx so Metamask is throwinh the error","440":"Here is the working code:\n#[pallet::weight(10_000 + T::DbWeight::get().writes(1))]\n    pub fn set_block_delay(origin: OriginFor<T>, block: T::BlockNumber) -> DispatchResult {\n        let caller = ensure_signed(origin)?;\n        \n        let current_block_number = <frame_system::Pallet<T>>::block_number();\n\n        let block_delay: u32 = 10;\n\n        let target_block = current_block_number + block_delay.into();\n\n        ensure!(target_block < block, \"fail\");\n\n        Ok(())\n    }","441":"If you have git installed type this in your terminal\nGit clone https:\/\/github.com\/binance-chain\/bsc.git\n\nand if you don't have git installed you can download the bsc file right off of GitHub Here click code and then click download zip\nwarning most of it is written in Golang but if all your trying to do if change the name and ticker you should be able to do that fairly easily by looking around in the files for more info on it check their GitHub","442":"I had the same problem, what I did is I tested it on other networks and on mumbai (polygon testnet) it works for me. I use 0x0bDDCD124709aCBf9BB3F824EbC61C87019888bb node with job 35738ec3cf9f4fd296b17bb91fdda32e (post > byte32) so you could eventually try this one as well if it fits your needs","443":"I got the Answer, I just needed to change the structure of the table, to make Block_Hash as a Unique Key, since you cannot reference a Non-Unique\/Non-Primary Key:\nHere is the changed Table Structure of Blocks Table\nCREATE TABLE IF NOT EXISTS Blocks(\n    Block_ID CHAR(4) PRIMARY KEY,\n    Previous_Block_Hash CHAR(64) UNIQUE KEY,\n    <transactions> JSON,\n    Nonce VARCHAR(64),\n    Block_Hash CHAR(64) UNIQUE KEY NOT NULL,\n    Submitter_ID CHAR(64) NOT NULL\n);","444":null,"445":"You may have set BSC Testnet on Metamask like this:\nNew RPC URL: https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/\nChain id: 97\nBut change into this:\nNew RPC URL: https:\/\/data-seed-prebsc-2-s3.binance.org:8545\/\nChain id: 97\nIf still doesn't work, also change Chain ID into 0x61","446":"So I tried the same code using truffle and ganache and it works for me. The only difference is that i am running ganache on port 8545 and connecting  metamask with that port in url. I believe that you are providing somewhat incorrect values here const todoList = new <web3>.eth.Contract(TodoList.abi, ADRESS);\nMake Sure that your contract's abi and address is correct. Read details about instantiation of contract object with correct values here\nHere is how i am reading the JSON file:\nconst TodoList = JSON.parse(fs.readFileSync('.\/build\/contracts\/TodoList.json', 'utf8'));.\nI am simply extracting the abi from it just like your code. For Contract Address part, I get the address manually from the output console after running truffle migrate --reset all.\nAfter this you will get a receipt information in console like this\nReplacing 'TodoList'\n   --------------------\n   > transaction hash:    0x00d16b5ee5f4ddad354543a100d7c730114f5668d5f3b35f1a2306764335c32d\n   > Blocks: 0            Seconds: 0\n   > contract address:    0x5592F579627C9123F2EB77429B3E6e66891C6a9A\n   > block number:        11\n   > block timestamp:     1628967561\n   > account:             0xa0aC73a479e9B6F5b5Ee0b0Fd241bbb1D83C5ec2\n   > balance:             99.95728292\n   > gas used:            363127 (0x58a77)\n   > gas price:           20 gwei\n   > value sent:          0 ETH\n   > total cost:          0.00726254 ETH\n\nYou need to copy the contract address and put it like this: \"0x5592F579627C9123F2EB77429B3E6e66891C6a9A\"\ntruffle-config.js file: Use this configuration for compiling the contracts\n\/**\n * Use this file to configure your truffle project. It's seeded with some\n * common settings for different networks and features like migrations,\n * compilation and testing. Uncomment the ones you need or modify\n * them to suit your project as necessary.\n *\n * More information about configuration can be found at:\n *\n * trufflesuite.com\/docs\/advanced\/configuration\n *\n * To deploy via Infura you'll need a wallet provider (like @truffle\/hdwallet-provider)\n * to sign your <transactions> before they're sent to a remote public node. Infura accounts\n * are available for free at: infura.io\/register.\n *\n * You'll also need a mnemonic - the twelve word phrase the wallet uses to generate\n * public\/private key pairs. If you're publishing your code to GitHub make sure you load this\n * phrase from a file you've .gitignored so it doesn't accidentally become public.\n *\n *\/\n\n\/\/ const HDWalletProvider = require('@truffle\/hdwallet-provider');\n\/\/\n\/\/ const fs = require('fs');\n\/\/ const mnemonic = fs.readFileSync(\".secret\").toString().trim();\n\nmodule.exports = {\n  \/**\n   * Networks define how you connect to your ethereum client and let you set the\n   * defaults <web3> uses to send <transactions>. If you don't specify one truffle\n   * will spin up a development <blockchain> for you on port 9545 when you\n   * run `develop` or `test`. You can ask a truffle command to use a specific\n   * network from the command line, e.g\n   *\n   * $ truffle test --network <network-name>\n   *\/\n\n  networks: {\n    \/\/ Useful for testing. The `development` name is special - truffle uses it by default\n    \/\/ if it's defined here and no other network is specified at the command line.\n    \/\/ You should run a client (like ganache-cli, <geth> or parity) in a separate terminal\n    \/\/ tab if you use this network and you must also set the `host`, `port` and `network_id`\n    \/\/ options below to some value.\n    \/\/\n    development: {\n     host: \"127.0.0.1\",     \/\/ Localhost (default: none)\n     port: 7545,            \/\/ Standard Ethereum port (default: none)\n     network_id: \"*\"       \/\/ Any network (default: none)\n    },\n    \/\/ Another network with more advanced options...\n    \/\/ advanced: {\n    \/\/ port: 8777,             \/\/ Custom port\n    \/\/ network_id: 1342,       \/\/ Custom network\n    \/\/ gas: 6000000,           \/\/ Gas sent with each transaction (default: ~6700000)\n    \/\/ gasPrice: 20000000000,  \/\/ 20 gwei (in wei) (default: 100 gwei)\n    \/\/ from: <address>,        \/\/ Account to send txs from (default: accounts[0])\n    \/\/ websocket: true        \/\/ Enable EventEmitter interface for <web3> (default: false)\n    \/\/ },\n    \/\/ Useful for deploying to a public network.\n    \/\/ NB: It's important to wrap the provider as a function.\n    \/\/ ropsten: {\n    \/\/ provider: () => new HDWalletProvider(mnemonic, `https:\/\/ropsten.infura.io\/v3\/YOUR-PROJECT-ID`),\n    \/\/ network_id: 3,       \/\/ Ropsten's id\n    \/\/ gas: 5500000,        \/\/ Ropsten has a lower block limit than mainnet\n    \/\/ confirmations: 2,    \/\/ # of confs to wait between deployments. (default: 0)\n    \/\/ timeoutBlocks: 200,  \/\/ # of blocks before a deployment times out  (minimum\/default: 50)\n    \/\/ skipDryRun: true     \/\/ Skip dry run before migrations? (default: false for public nets )\n    \/\/ },\n    \/\/ Useful for private networks\n    \/\/ private: {\n    \/\/ provider: () => new HDWalletProvider(mnemonic, `https:\/\/network.io`),\n    \/\/ network_id: 2111,   \/\/ This network is yours, in the cloud.\n    \/\/ production: true    \/\/ Treats this network as if it was a public net. (default: false)\n    \/\/ }\n  },\n\n  \/\/ Set default mocha options here, use special reporters etc.\n  mocha: {\n    \/\/ timeout: 100000\n  },\n\n  \/\/ Configure your compilers\n  compilers: {\n    solc: {\n      version: \"0.5.0\",    \/\/ Fetch exact version from solc-bin (default: truffle's version)\n      docker: false,        \/\/ Use \"0.5.1\" you've installed locally with docker (default: false)\n      settings: {          \/\/ See the solidity docs for advice about optimization and evmVersion\n       optimizer: {\n         enabled: false,\n         runs: 200\n       },\n       evmVersion: \"byzantium\"\n      }\n    }\n  },\n\n  \/\/ Truffle DB is currently disabled by default; to enable it, change enabled: false to enabled: true\n  \/\/\n  \/\/ Note: if you migrated your contracts prior to enabling this field in your Truffle project and want\n  \/\/ those previously migrated contracts available in the .db directory, you will need to run the following:\n  \/\/ $ truffle migrate --reset --compile-all\n\n  db: {\n    enabled: false\n  }\n};","447":"Exactly this is what i was trying to create. I am trying to create a <blockchain> where the consensus should be pluggable depending on the trust assumptions of the business adopting the <blockchain>.This is the scratch of the project work i have done so far\nhttps:\/\/bitbucket.org\/mohor32\/ownchain\/src\/master\/\nYou can share your ideas with me or contribute if you feel so\nEmail : <python>esia12@gmail.com","448":"You can return ALL book objects with return statement if you would use array. ALSO Solidity creates getter functions automatically for public variables. As your array could be public, a public getter function would be generated for it automatically. The getter function is used to access the array variables directly and not for retrieving the array itself.\nThere is a difference between Storage and Memory variables. The Solidity Smart Contract can use any amount of memory during the execution but once the execution stops, the Memory is completely wiped off for the next execution. Whereas Storage on the other hand is persistent, each execution of the Smart contract has access to the data previously stored on the storage area.","449":"You received java.net.UnknownHostException: peer0.org2.example.com. Looks like your client can't connect to peer using that address. Take a look at the networking setup between the VMs.","450":"For Fabric 2.x\n\nKill the chaincode container using command\ndocker rm -f <chaincode container id> \nDelete the chaincode from the file system of the peer under\n\/var\/<hyperledger>\/production\/lifecycle\/chaincodes\nRestart your peer container.\n\nPS. After restarting the peer container all your chaincode containers will be restarted wait till all the containers are up.","451":"First, it's going to be impossible getting an exact time using blocktime. You can roughly estimate a timespan with blocktime, for precise timing use an oracle. \"now\" is the same as \"block.timestamp\". You need to store the time when the buy function is called for that address. Then, you can check \"now\" when the sell function is called and compare it to the time of the buy to check if enough time passed.\nA check like this in the sell function, or maybe, the transfer function, otherwise addresses could transfer to other addresses to sell.\nrequire(now > timeOfBuy + 10 min && timeOfBuy > 0, \"Not enough time -10 min- has passed\");\n\nYou might be able to store the time of buy for each address that buys using a mapping. However, the mapping will initialize all possible addresses to equal 0.\nmapping (address => uint) addrToTimeOfBuy;\n\nSo in the buy function:\naddrToTimeOfBuy[msg.sender] = now;\n\nwill set the mapping to the blockstamp.time when that address buys.\nThe wait time is 10 minutes, but that could be a variable as well, with a separate helper function to set it.\nWith the current logic, once an address gets a buyTime set for it and it waits through the wait time, it can sell anytime, as much as it wants. Depends on your application if that's what you want.","452":"I'm assuming you're using anchor\nlet now_ts = Clock::get().unwrap().unix_timestamp;\n\nYou will need to pass in the system program account","453":"So while this may not be a full answer since i cannot tell you why you may be having the error I would suggest to add the following to your code to help debug the issue\nfor hotspotaddress in data:\n    foundaddress = hotspotaddress['address']\n    foundname = hotspotaddress['name']\n    res1 = requests.get('https:\/\/api.url\/' + foundaddress + '\/activity\/count?min_time=-1%20day&bucket=day')\n    try\n        data2 = res1.json()['data']  ##THIS IS LINE 77 where the script crashes##\n        previous_witness = str(data2['poc_receipts_v1'])\n        previous_rewards = str(data2['rewards_v2'])\n        previous_info.append([foundaddress, foundname, previous_witness, previous_rewards])\n    except json.decoder.JSONDecodeError as jd:\n        print(\"http response code: \", res1.status_code)\n        print(\"http response data: \", res1.content)\n        raise  jd","454":null,"455":"I am on <python> 3.9.6, but had a similar problem only using my MacOS, does not occur on my Linux machine.\nEither way, I think I found a solution (at least for my version).  The issue stems from the function _import_from_path in the file brownie\/project\/scripts.py (that should be found in your eth-brownie folder, wherever you installed it).  The way it is written, it will incorrectly identify Users.username as \"not a module.\"\nMy solution: replace _import_from_path with the following\ndef _import_from_path(path: Path) -> ModuleType:\n    # Imports a module from the given path\n    \n    import_str = \"\/\" + \"\/\".join(path.parts[1:-1] + (path.stem,))+'.py'\n    \n    if import_str in _import_cache:\n        importlib.reload(_import_cache[import_str])\n    else:\n        spec = importlib.util.spec_from_file_location('.'+path.stem,import_str)\n        module = importlib.util.module_from_spec(spec)\n        spec.loader.exec_module(module)\n        _import_cache[import_str] = module\n    return _import_cache[import_str]\n\nExplanation:  import_str is now modified to reflect the exact file location instead of a module name.  The else: block now imports the module by specifying the file location and then loading that file as a module.  I'm not sure if this will break any of the functionality in other operating systems, but I'm happy with using it as a hotfix for my Mac -- I can now run my scripts folder.","456":null,"457":"Here are the rustdocs for the command, and it's implementation in the node template - this looks for specific from your chain specification file based on what you pass that is configued. In the template at the time of writing, the template only has dev and \"everything else\" mode:\n    fn load_spec(&self, id: &str) -> Result<Box<dyn sc_service::ChainSpec>, String> {\n        Ok(match id {\n            \"dev\" => Box::new(chain_spec::development_config()?),\n            \"\" | \"local\" => Box::new(chain_spec::local_testnet_config()?),\n            path =>\n                Box::new(chain_spec::ChainSpec::from_json_file(std::path::PathBuf::from(path))?),\n        })\n    }\n\nThus you would need to specify another in\/node\/src\/chainspec.rs and configure the \/node\/src\/commnad.rs to use the correct one when called.","458":"You need to understand the differences between test Ethereum networks, public Ethereum networks and private Ethereum networks first. Read more about Ethereum public, test and private networks here. Also, each test network has its own compatibility with different Ethereum clients.\nSo, you are supposed to test your code using Ethereum private networks or test networks like Rinkeby and then deploy to Mainnet.","459":"When tx.receipt != null does it also means that Ethereum state updated?\n\nThe receipt can have non-null value when the transaction is reverted - which means the state was not updated. You can find this information in the receipt field status\n\ntrue is successful\nfalse is reverted\n\nNote: The recently implemented EIP-2718 effectively allows for transaction receipts without the status field, so it's possible that there are going to be some transaction types without the status in the future. Also, <transactions> before the Byzantinum hard fork (October 2017) don't have the status field as well.\n\nAs to your original question, both ways are valid.\nIf you're building a small application that doesn't have much logic or is okay to fail sometimes, the second option seems to be less robust (in terms of working with asynchronicity). You just wait for the txHash (that you only receive after the tx has been mined into a block), and then you get the tx receipt (containing the event log) based on the hash.\nBut what if your app crashes between getting the tx hash and processing the event log from the receipt? If this is your concern, you might want to implement a way to store the tx hash to a DB, listen to the event logs (your point 1), and compare each event log (containing the hash of its transaction) with the stored tx hashes.","460":null,"461":"I was able to solve this problem by downgrading the version. Looks like this is an error with version 2.0.4.","462":null,"463":"The assets endpoint (docs) has the asset_contract_address filter that allows you to filter by a contract address. Which will effectively allow you to paginate through all NFTs of the contract (that Opensea knows of).\nExample:\ncurl 'https:\/\/api.opensea.io\/api\/v1\/assets?offset=0&limit=20&asset_contract_address=0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb'","464":"OK, so the reason why the transfer account is owned by the system program rather than the my program is because I was creating the account outside of the transaction. The key is to add the createAccountWithSeed (or actually just createAccount for me as I actually want a fresh account for each transaction) method into your transaction chain like so:\n  const transaction = new Transaction();\n  const transferAcc = new Keypair();\n  const transferAccPubKey = transferAcc.publicKey;\n\n  transaction.add(\n    SystemProgram.createAccount({\n      fromPubkey: payerAccount.publicKey,\n      newAccountPubkey: transferAccPubKey,\n      lamports: paymentFee,\n      space: dataLayout.span,\n      programId: PROGRAM_ID,\n    })\n  );\n\nThe runloop is a really good partner resource for assistance with this. Once you've added all the transaction items into the transaction item you'll be sending it using:\n  return await sendAndConfirmTransaction(connection, transaction, [\n    payerAccount, transferAcc\n  ]);\n\nSo look for that if you're struggling where to insert the transaction.add method.\nIt took me ages to figure this so hope it helps someone.","465":"I think your local machine doesn't have a public IP address.\nI recommend you to set your AWS as the bootnode then connect from your local machine.","466":"If the state data is in doubt, you can stop peer, drop state database, and upon restart peer will rebuild state database. When peer is stopped, the command peer node rebuild-dbs will drop state database for you. See the command documentation.\nIf the <blockchain> ledger itself is in doubt, you will need to either replace the peer or reset the peer to genesis blocks using peer node reset command. See the command documentation.","467":"If you are using <web3>.js you can pass transaction hash to a function like <web3>.eth.getTransaction(transactionHash [, callback]) to get information about the transaction. It will also include a value field which you have passed to the transaction\nRead more about transaction receipts and logs here","468":"If the sender doesn't have 10 (or 20, or any number of) tokens that they're trying to send, the transaction should revert. Which is the case that is tested in this snippet:\nshould.be.rejectedWith(EVM_REVERT)\n\nSo it's a code that checks if the transaction really reverts when it should.\n\nDepending on how the contract is implemented, it might be possible to successfully transfer 0 tokens, and the transaction might not revert.\nFor example:\nfunction transfer(address _to, uint256 _amount) external returns (bool) {\n    \/\/ doesn't revert, because their 0 balance is \"greater or equal\" to the 0 `amount`\n    require(balances[msg.sender] >= _amount);\n\n    balances[msg.sender] -= _amount; \/\/ subtract 0 from 0\n    balances[_to] += _amount; \/\/ add 0\n\n    emit Transfer(msg.sender, _to, _amount);\n    return true;\n}","469":"They provide a new address for each new payment and therefore it won't matter which address sent the bitcoin because the address it was sent to is associated with your payment and your payment only.\nNote that this is an assumption based on how similar payment methods work and I don't know this site.","470":null,"471":"SubstraTEE (today) relies on SGX and IAS, so it adopts all integrity and confidentiality assumptions from SGX.\nRemote attestation is verified by our <blockchain> to gain public auditability, without the need for a verifier to obtain a license with Intel or use IAS at all. In this regard, we add security assumptions of that <blockchain> too. Our goal is to launch a parachain on both Kusama and Polkadot, so your threat model should involve the Kusama and Polkadot Chains too.\nbtw: SubstraTEE is being rebranded to Integritee (https:\/\/integritee.network)","472":"Only if you have implemented the functionality to change the lockup period.\nExample:\npragma solidity ^0.8;\n\ncontract MyContract {\n    uint256 lockupPeriod = 12;\n    address admin = address(0x123);\n\n    function setLockupPeriod(uint256 _lockupPeriod) external {\n        \/\/ reverts if this function is executed by anyone else except for the `admin`\n        \/\/ or you can implement the voting governance requirement instead of one admin\n        require(msg.sender == admin, 'Not authorized');\n        lockupPeriod = _lockupPeriod;\n    }\n}\n\nBut after you deploy a smart contract, it's immutable by design. So you can't change something that haven't been designed to be changeable. (Generally speaking. There are few exceptions to this rule such as the \"upgradable proxy\" pattern or \"selfdestruct & create2\".)","473":"At last I found the solution. At first I wrote the same code using <node.js>, because <web3>.js makes it much simplier for me to understand how it actually works. It has better methods naming, better docs, etc\nSo back to web.py:\nFor getting Transfer event signature I used this code transferEventSignature = <web3>.toHex(<web3>.sha3(text='Transfer(address,address,uint256)'))\nFor encoding\/decoding you can use eth_abi library\nfrom <web3> import <web3>\nfrom eth_abi import encode_abi, decode_abi\nfrom hexbytes import HexBytes\n\nencoded_wallet = (<web3>.toHex(encode_abi(['address'], [wallet])) # encoding\n\n<web3> = <web3>(<web3>.WebsocketProvider('wss:\/\/speedy-nodes-nyc.moralis.io\/api-key\/bsc\/mainnet\/ws'))\nevent_filter = <web3>.eth.filter({'topics': [transferEventSignature, None, encoded_wallet]}) # setting up a filter with correct parametrs\n        while True:\n            for event in event_filter.get_new_entries():\n                decoded_address = decode_abi(['address'], HexBytes(event.topics[2])) # decoding wallet \n                value = decode_abi(['uint256'], HexBytes(event.data)) # decoding event.data\n\n                tokenContractAddress = event.address\n\n                contractInstance = <web3>.eth.contract(address=tokenContractAddress, abi=jsonAbi) # jsonAbi is standart erc-20 token abi \n                # I used simplified JSON abi that is only able to read decimals, name and symbol\n\n                name = contractInstance.functions.name().call() \n                decimals = contractInstance.functions.decimals().call()\n                symbol = contractInstance.functions.symbol().call()\n                # getting any token information\n\n                # doing some useful stuff\n\nGetBlock.io worked for me, but would sometimes get out of sync with the network.\nI have had better success with this service: https:\/\/moralis.io\/\nI hope somebody will find this usefull.","474":"Refer to this video: https:\/\/youtu.be\/-AuExRijtrA, it neatly explains how can we connect with relayer and send tokens to Cosmos Hub with IBC.\nHowever, if it's not clear from the video, i am explaining the steps below:\nYou need to remove the relayer configuration if you have used (otherwise you can ignore it)\nrm -rf ~\/.starport\/relayer\nAfterwards, start your chain in the development mode using starport c serve -r\nUse default values to configure a relayer: starport relayer configure and send small amount of real ATOMs to the relayer address on the Hub. The relayer address is printed by the command used above. Wait about 10-15 seconds to make sure the balance has been updated.\nstarport relayer connect\nWait for the connection to process, now you can send tokens to the Hub:\nappd tx ibc-transfer transfer ... ... --from alice","475":"The token balance of your contract, and other validations, is what dictates if swapAndLiquify should be run.\nbool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\nif (\n    overMinTokenBalance &&\n    !inSwapAndLiquify &&\n    from != uniswapV2Pair &&\n    swapAndLiquifyEnabled\n) {\n    contractTokenBalance = numTokensSellToAddToLiquidity;\n    swapAndLiquify(contractTokenBalance);\n}\n\nIf token balance is greater than numTokensSellToAddToLiquidity, and swap and liquify is enabled, and not in swap and liquify process, and it is not a transfer from pair, then execute swapAndLiquify.\nThe only way to test this is by deploying to testnet, set a very low value for numTokensSellToAddToLiquidity and start doing <transactions> (buy,sell,transfer). First thing u will notice is that the token contract will start to hold tokens, and suddenly after reaching numTokensSellToAddToLiquidity you will see a big log of transfer in the <transactions> (swaps,liquify,token transfer, etc). This process is normally triggered by a sell or transfer. Buys will not trigger it because buy <transactions> comes from the pair address.\nAbout sending to other wallets instead of PCS LP, yes, it is possible, you can do whatever you want.","476":"This should help https:\/\/docs.near.org\/docs\/tokens\/lockup#the-lockup-contract-at-near. Here is the example from the docs:\n{\n  \"owner_account_id\": \"gio3gio.near\",        \/\/ the Owner account who is allowed to call methods on this one\n  \"lockup_duration\": \"0\",                    \/\/ not necessary if the lockup_timestamp is used\n  \"lockup_timestamp\": \"1601769600000000000\", \/\/ Unix timestamp for October 4th, 2020 at midnight UTC\n  \"transfers_information\": {\n    \"TransfersDisabled\": {\n      \"transfer_poll_account_id\": \"transfer-vote.near\"\n    }\n  },\n  \"vesting_schedule\": null,\n  \"release_duration\": \"31536000000000000\",  \/\/ 365 days\n  \"staking_pool_whitelist_account_id\": \"lockup-whitelist.near\",\n  \"foundation_account_id\": null\n}","477":"That can be many things, but is quite often a TLS issue. Check the peer logs. You may see a Bad TLS message, etc. Or notice that it does not have an attempt to contact it, so it might be dns, or more general connectivity issues.","478":null,"479":"It's a bitwise operation, XOR (exclusive or): https:\/\/docs.soliditylang.org\/en\/v0.8.6\/types.html\n\"A bitwise XOR is a binary operation that takes two bit patterns of equal length and performs the logical exclusive OR operation on each pair of corresponding bits. The result in each position is 1 if only one of the bits is 1, but will be 0 if both are 0 or both are 1.\" https:\/\/en.wikipedia.org\/wiki\/Bitwise_operation#:~:text=A%20bitwise%20XOR%20is%20a,0%20or%20both%20are%201.","480":"It appears that you're using a mix of new and old unfortunately.  The error that you're seeing:\nError: failed to get recent blockhash: Invalid params: unknown variant `finalized`, expected one of `max`, `recent`, `root`, `single`, `singleGossip`.\n\nis because you're using a newer version of @solana\/<web3>.js with a very old version of the network.  The easiest solution is to downgrade to @solana\/<web3>.js version 0.78.2 to keep following the tutorial.\nSeparately, there are a lot of newer tools for local development.  If you're using a new version of the network and SDK, there's a binary called solana-test-validator (https:\/\/docs.solana.com\/developing\/test-validator) which is much easier than developing against Docker.","481":"First, the user needs to manually approve your contract to spend their tokens by executing the approve() function on the token contract. This is a security measure, and you can read more about the reasoning behind it in this answer or this other answer.\nThen, your contract can call the token contract's transferFrom() function, passing it arguments stating that you want to transfer tokens from the user, to your contract address.\nIf the transfer not successful (the user has not approved your contract to spend their tokens or didn't have enough tokens to perform the transfer), the token contract should return false from the transferFrom() function, so you can validate the return value in a require() condition for example.\npragma solidity ^0.8;\n\ninterface IERC20 { \/\/ defining an interface of the (external) token contract that you're going to be interacting with\n    function decimals() external view returns (uint8);\n    function transferFrom(address _from, address _to, uint256 _amount) external returns (bool);\n}\n\ncontract MyContract {\n    function buy() external {\n        IERC20 tokenContract = IERC20(address(0x123)); \/\/ the token contract address\n\n        \/\/ reverts if the transfer wasn't successful\n        require(\n            tokenContract.transferFrom(\n                msg.sender, \/\/ from the user\n                address(this), \/\/ to this contract\n                50 * (10 ** tokenContract.decimals()) \/\/ 50 tokens, incl. decimals of the token contract\n            ) == true,\n            'Could not transfer tokens from your address to this contract' \/\/ error message in case the transfer was not successful\n        );\n        \n        \/\/ transfer was successful, rest of your code\n    }\n}","482":"The following error message Contracts are required to have at last 1 (non-ignored) public method.\" tells us that the chain code you wrote does not have a public method.\nIn the Go language, functions (and variables) whose names begin with uppercase letters are treated as public and functions (and variables) whose names begin with lowercase letters are private.\nCurrently, there is only one main function in the chain code you created, so it seems that it cannot be executed because there is no public function.\nTry adding one public function whose function name begins with uppercase letters.","483":"Answer to the original question\nStrings in Solidity are internally processed as arrays of characters, and you need to specify the data location of the return value for dynamic values such as arrays (see picture below).\n\nThat is because Solidity, as a language, was based on C++ and JS.\nAlso, the (\"official\") Solidity compiler and associated utilities are written in C++, and you don't have strings in C nor C++. just arrays of chars, so that might be the reason why strings in solidity are processed as arrays of characters.\n  ...\n\n  \/\/ You should consider using \"<blockchain>.timestamp\" instead of \"now\".\n  function createTask(string memory _content, string memory _author) public {\n    tasks.push(Task(tasks.length, now, _content, _author, false));\n  }\n\n  function getTask(uint id) public view \n    returns(\n      uint,\n      uint,\n      string memory,\n      string memory,\n      bool\n   ) {\n     return(\n       id,\n       tasks[id].date,\n       tasks[id].content,\n       tasks[id].author,\n       tasks[id].completed  \/\/ Also, removed the comma here because it would drop an empty tuple error.\n     );\n   }\n   \n   ...\n\nAnswering the newer question\nTypeError: This type is only supported in the new experimental ABI encoder.\nMake sure to add pragma experimental ABIEncoderV2; on top of your code, since solidity versions under 0.8.0 don't support dynamic arrays with a depth level deeper than 1 by default, and you'll need to enable the experimental ABI for it to work, for example, arrays of arrays, or in your case, an array of structs.","484":"You can write a mint function that checks block timestamps.\nA very basic example:\npragma solidity ^0.8.0;\ncontract TimeLockedMint {\n    \n    uint alreadyMinted = 0;\n    uint constant FIRST_MINTING_DATE = 1630454400; 1 Sep 2021\n    uint constant SECOND_MINTING_DATE = 1661990400; 1 Sep 2022\n    uint constant FIRST_MINTING_AMOUNT = 1;\n    uint constant SECOND_MINTING_AMOUNT = 2; \/\/ Accumulated.\n\n    function mint() public {\n        if(block.timestamp > SECOND_MINTING_DATE) _mint(SECOND_MINTING_AMOUNT - alreadyMinted);\n        else if(block.timestamp > FIRST_MINTING_DATE) _mint(FIRST_MINTING_AMOUNT - alreadyMinted);\n        else revert('No more tokens can be minted');\n    }\n    \n    function _mint(uint amount) internal{\n        alreadyMinted += amount;\n        \n        \/\/ Do actual minting here\n    }\n\n}","485":null,"486":"payable(msg.sender).transfer(address(this).balance);\n\nThis line withdraws the native balance (ETH if your contract is on Ethereum network).\n\nTo withdraw a token balance, you need to execute the transfer() function on the token contract. So in order to withdraw all tokens, you need to execute the transfer() function on all token contracts.\nYou can create a function that withdraws any ERC-20 token based on the token contract address that you pass as an input.\npragma solidity ^0.8;\n\ninterface IERC20 {\n    function transfer(address _to, uint256 _amount) external returns (bool);\n}\n\ncontract MyContract {\n    function withdrawToken(address _tokenContract, uint256 _amount) external {\n        IERC20 tokenContract = IERC20(_tokenContract);\n        \n        \/\/ transfer the token from address of this contract\n        \/\/ to address of the user (executing the withdrawToken() function)\n        tokenContract.transfer(msg.sender, _amount);\n    }\n}\n\nMind that this code is unsafe - anyone can execute the withdrawToken() funciton. If you want to run it in production, add some form of authentication, for example the Ownable pattern.\nUnfortunately, because of how token standards (and the Ethereum network in general) are designed, there's no easy way to transfer \"all tokens at once\", because there's no easy way to get the \"non-zero token balance of an address\". What you see in the <blockchain> explorers (e.g. that an address holds tokens X, Y, and Z) is a result of an aggregation that is not possible to perform on-chain.","487":"You are right. In order to tackle such problems, there are devices that keep on updating their positions after a specified duration. For example, the GPS sensor on the truck will send its location (and store it on the ledger) after every 15 minutes. So, in this way, that particular problem can be solved.\nSimilarly, other problems can also be solved.\nIf you want to learn more about the use of IoT with <blockchain> (especially <hyperledger> Fabric), you can check out this course: https:\/\/courses.cognitiveclass.ai\/courses\/course-v1:IBMDeveloperSkillsNetwork+BC0202EN+v1\/course\/","488":"like Sneha said in the comments it's impossible to be confident about the source of the issues here without more context about the code here.\nRemember that you want to be sure flow sessions are provided in a way similar to this where you specify the identities in a list and submit them to finality flow.\n        Party me = getOurIdentity();\n        Party notary = getServiceHub().getNetworkMapCache().getNotaryIdentities().get(0);\n        Command<YoContract.Commands.Send> command = new Command<YoContract.Commands.Send>(new YoContract.Commands.Send(), Arrays.asList(me.getOwningKey()));\n        YoState state = new YoState(me, this.target);\n        StateAndContract stateAndContract = new StateAndContract(state, YoContract.ID);\n        TransactionBuilder utx = new TransactionBuilder(notary).withItems(stateAndContract, command);\n\n        this.progressTracker.setCurrentStep(VERIFYING);\n        utx.verify(getServiceHub());\n\n        this.progressTracker.setCurrentStep(SIGNING);\n        SignedTransaction stx = getServiceHub().signInitialTransaction(utx);\n\n        this.progressTracker.setCurrentStep(FINALISING);\n        FlowSession targetSession = initiateFlow(this.target);\n        return subFlow(new FinalityFlow(stx, Collections.singletonList(targetSession), Objects.requireNonNull(FINALISING.childProgressTracker())));\n    }\n\nsource: https:\/\/github.com\/corda\/samples-java\/blob\/master\/Features\/dockerform-yocordapp\/workflows\/src\/main\/java\/net\/corda\/samples\/dockerform\/flows\/YoFlow.java","489":"Found the answer myself.\n\nI reversed the aura and grandpa authorities IDs. Make sure AURA uses Sr25519 ss58 Addresses and grandpa uses Ed25519 ss58 Addresses.\nThe code to start the node was wrong, I added --scheme Ed25519\/Sr25519 to make sure key added in keystore is OK.\n\nnode-template key insert \\\n    --base-path \/peer-data-1 \\\n    --chain local \\\n    --key-type aura \\\n    --scheme Sr25519 \\\n    --suri \"0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37\";\nnode-template key insert \\\n    --base-path \/peer-data-1 \\\n    --chain local \\\n    --key-type gran \\\n    --scheme Ed25519 \\\n    --suri \"0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37\";\nls -l \/peer-data-1\/chains\/local_testnet\/keystore;\nRUST_LOG=runtime=debug\nnode-template \\\n    --base-path \/peer-data-1 \\\n    --name Node1 \\\n    --chain \/genesis\/customSpecRaw.json \\\n    --keystore-path \/peer-data-1\/chains\/local_testnet\/keystore\/ \\\n    --node-key 0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37 \\\n    --port 30333 \\\n    --ws-port 9944 \\\n    --rpc-port 9933 \\\n    --unsafe-ws-external \\\n    --unsafe-rpc-external \\\n    --rpc-cors=all \\\n    --prometheus-external \\\n    --log info \\\n    --wasm-execution Compiled \\\n    --ws-max-connections 1000 \\\n    --pool-limit 10000 \\\n    --pool-kbytes 20480 \\\n    --max-runtime-instances 100 \\\n    --validator \\\n    --bootnodes \/ip4\/$SUBSTRATE_0_SERVICE_HOST\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp","490":"This problem can be fixed by adding miners to the \"trustedMiner\" entry in the config file because pow doesn't necessary detect miners that fit your specs.\nI went to a Filecoin miner info aggregation site (I used \"https:\/\/filrep.io\/\") and added miners to the trustedMiner section of the config file used in the apply command to start a Filecoin deal.\nFor example the \"trustedMiners\" line in your config file should look like this:\n\"trustedMiners\":  [\"<Miner Id>\", \"<Miner Id>\",\"<Miner Id>\", \"<Miner Id>\", ...],\n\nwith however many miners you want to add.\nThen you would execute the command:\npow config apply --watch <CID> -o -c new-config-file.json\nBtw the --watch flag is optional as it just allows you to see the status of the deal in real time.","491":"Liquidity pools with more than two tokens are possible although they're not common as most major DEXs don't support them, off the top of my head the only places I can think of that support them are Curve and Balancer.\nThe typical two token liquidity pool, like those seen in Uniswap, functions on the idea that when adding liquidity you provide an equal value of each token, calculated with the formula:\nx*y=k\nSo that the product of the quantities of the tokens is a constant, giving each token a weight of 50% in the equation. This is called the constant product market maker model.\nThree or more token liquidity pools operate on the same concept but shift the weights around to accommodate the new tokens. So we could see something like:\nxyz=k\nBut instead of each token being weighted for 50% as we saw for the two token model, we might have x be weighted for 20% whereas y and z are both weighted for 40%","492":"Already find solution via API: https:\/\/api.bscscan.com\/api?module=account&action=txlist&address=TOKEN_XXXX&startblock=1&endblock=99999999&page=1&offset=3&sort=desc&apikey=API_XXX\nSame is for ETH.","493":"pragma solidity ^0.8.4;\n\/\/ SPDX-License-Identifier: MIT\n\ncontract texteditor {\n     uint256 public id=0;\n\nstruct book {\n    string block;\n    string coordinates;\n}\n\nmapping(uint256=>mapping(uint256 => book)) bookStore;\nmapping(uint256=>uint256) bookBlockIndex;\n\nfunction save(uint256 bookId,string calldata _block, string calldata _coordinates) public{\n    book memory temp_book =  book(_block,_coordinates);\n    bookStore[bookId][bookBlockIndex[bookId]]=temp_book;\n    bookBlockIndex[bookId]++;\n}\n\nfunction read_book(uint256 bookid,uint256 bookBlockid)view public returns (string memory,string memory){\n    return (bookStore[bookid][bookBlockid].block,bookStore[bookid][bookBlockid].coordinates);\n}\n\nfunction remove_book(uint bookid,uint256 bookBlockid) public {\n    delete bookStore[bookid][bookBlockid];\n}\n\n}\n\nThis might help","494":"You'll need to use solidity ( or any other smart contract language ) to create the smart contract (backend), and then you can use flutter to create the app (frontend).\nThen you can use a library to connect your app with your contract such as <web3>dart.\nContracts are stored and executed by the <blockchain>, and thus can't be hardcoded into frontend applications.","495":"ERC 1155 can be used to create semi-fungible tokens.\nYou can see this by checking the ERC 1155 docs: https:\/\/eips.ethereum.org\/EIPS\/eip-1155\nThe Simple Summary states: \"A standard interface for contracts that manage multiple token types. A single deployed contract may include any combination of fungible tokens, non-fungible tokens or other configurations (e.g. semi-fungible tokens).\"\nNote: It would have been better to post this question on the Ethereum Stack Exchange.","496":"It seems that I'm approaching the solution with this piece of code :\nconst <web3> = require(\"<web3>\");\n\nlet <web3> = new <web3>(\n    new <web3>.providers.WebsocketProvider(\"wss:\/\/mainnet.infura.io\/ws\/v3\/cc44823998a0412294a47680xxxxxxxx\")\n);\n\nlet abi = JSON.parse('[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]')\n\nconst instance = new <web3>.eth.Contract(abi, '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f');\n\n\/\/<web3>.eth.getBlockNumber().then(console.log)\n\n    instance.getPastEvents(\n        \"allEvents\",\n        {fromBlock: \"12908000\", toBlock: \"12908094\"},\n        (errors, events) => {\n            if (!errors) {\n                \/\/console.log('it is ok')\n                \/\/console.log(events)\n             }\n        }\n    ).then(r => {\n        console.log(r)\n    });","497":"It is because when you call transfer in mint, msg.sender (in transfer) is the address of the calling contract (the one that implements mint) not the address of the person calling mint. Therefore, token needs to have enough balance to perform the operation.\nThe only time msg.sender stays the same is when the call is to another function in the contract. Call to another contract changes the msg.sender to the address of the calling contract. Without this, anyone can use msg.sender to authorize other <transactions> in other contracts.","498":"from <web3> import <web3>\nfrom <web3>.middleware import <geth>_poa_middleware\n\n<web3> = <web3>(<web3>.HTTPProvider('127.0.0.1:100500'))\n<web3>.middleware_onion.inject(<geth>_poa_middleware, layer=0)","499":"If you are trying to install it on <python>3.X, try using pip3 instead of pip.","500":null,"501":"The given swagger docs can be used to connect to Hornet running on localhost.\nhttps:\/\/editor.swagger.io\/?url=https:\/\/raw.githubusercontent.com\/rufsam\/protocol-rfcs\/master\/text\/0026-rest-api\/rest-api.yaml","502":"As far as I know both of them are centralized entities so what happens is:\nMr X and Mr Y send their crypto to the exchange controlled wallets. The exchanges keep the record in their own DB\/ledger who owns what. Then when Mr Y and Mr X make a trade the exchanges record that trade in their own DB\/ledger and nothing is recorded on public <blockchain>. Now Mr X withdraws the crypto from one of the exchanges and it gets recorded on public <blockchain> (If he withdraws BTC then it will be recorded on BTC <blockchain>). So Mr X and Mr Y can do thousands of trades without paying network fees as everything happens in the exchange's internal system (they may have per trade fee)\nDeFi - I have no idea how it works, as didn't dig into it :)","503":null,"504":"having the same issue..\nafter changing the contract addresses and abi's.\napproving fails ..","505":"You can technically \"try to spend\" the coins as many times as you want. However, only one transaction can be added to the block, and the others will be rejected. The leftover <transactions> can't be added to newer blocks either as the output is no longer a UTXO.\nThe tricky part is when two different miners grab two different <transactions> from the same output and there is network latency so they both add the block to their own chain. At this point you would need to look at the longest chain concept and understand orphaned chains, why we have confirmations to begin with, proof-of-work, etc.","506":null,"507":"Have you created Orderer profile in your configtx.yaml ?\nOrdered system channel is required for order and peer for channel initialization.\nRefer this link for configtx.yaml\nhttps:\/\/medium.com\/@msakhilvinayak\/understanding-configurations-in-<hyperledger>-fabric-ff3f5c23625a","508":"I asume that the error is comming from that when you are calling the function runTest() you are sending ether to it. \nIn order to send ether to a function you should add the payable modifier to it's definition in the contract.\nIt should look like this:\n function runTest(bool _MultiCustID) public payable {\n   for (uint i = 0; i<CustID.length; i++)\n     pubblishCode (CustID[i], ContractID[i], _MultiCustID); \n  }\n\nIf you are intrested in learning more about payable functions in solidity you can check the docs","509":"Your problem is in this function:\n \/** \n  * @dev Initializes the contract setting the deployer as the initial owner.\n  *\/ \n  constructor () internal { \n    address\"msgSender\" = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender); \n  }\n\nMake it as follow and the problem should be solved:\n\n \/** \n  * @dev Initializes the contract setting the deployer as the initial owner.\n  *\/ \n  constructor () internal { \n    _owner = msg.sender;\n    emit OwnershipTransferred(address(0), msg.sender); \n  }","510":"First, you'd want to make 2 API calls following along with the Chainlink docs. https:\/\/docs.chain.link\/docs\/make-a-http-get-request\/\nSomething like:\nfunction makeAPICall() public returns (bytes32 requestId) \n    {\n        Chainlink.Request memory request = buildChainlinkRequest(jobId, address(this), this.fulfill.selector);\n        request.add(\"get\", \"https:\/\/min-api.cryptocompare.com\/data\/pricemultifull?fsyms=ETH&tsyms=USD\");\n        int timesAmount = 10**18;\n        request.addInt(\"times\", timesAmount);\n        return sendChainlinkRequestTo(oracle, request, fee);\n    }\n\nThen, in your fulfil function, you'd take the medians of a list.\nfunction fulfill(bytes32 _requestId, uint256 _volume) public recordChainlinkFulfillment(_requestId)\n    {\n        answers.push(_volume);\n        \/\/ loop through list and take median\n    }","511":"To expand on my comments, this is how I will do it.\npragma solidity 0.8.6;\nimport \u00e2\u0080\u009c@openzeppelin\/contracts\/utils\/structs\/EnumerableSet.sol\u00e2\u0080\u009d;\n\ncontract Test {\nusing EnumerableSet for EnumerableSet.AddressSet;\n\nstruct Stake {\n      uint256 lockedToken;\n      uint256 creditsEarned;\n   }\n  \n  \/\/ Rewards = RatioOfCreditsEarnedByStakeholder * MonthlyRewards\n\n  EnumerableSet.AddressSet private stakeholders;\n  mapping(address => Stake) private stakeholderToStake;\n      \n  uint256 private totalCredits;\n\n  function createStake(\n     address stakeholder,\n     uint256 lockedToken,\n     uint256 creditsEarned\n  ) public {\n      stakeholders.add(stakeholder);\n      stakeholderToStake[stakeholder] = Stake({\n      lockedToken: lockedToken,\n      creditsEarned: creditsEarned\n     });\n    totalCredits += creditsEarned;\n  }\n      \n  function distributeRewards() public {\n  \/\/do whatever you want with totalCredits here\n   }","512":"To access your local-running testnet through Polkadot.js Apps, scroll down in this sidebar to \"local development\" and enter the URL to your running node, probably something like ws:\/\/localhost:9944 if you didn't make any changes. You will not be deploying this as a test network, because that section of the UI is just for long-running test networks by teams that want to test their functionality long-term. For throwaway use cases of local development, use Local Development by scrolling down in the sidebar.","513":null,"514":"If you know the index of the emps array where the desired Employee is saved, you can simply rewrite the value.\nfunction updateEmployee(\n    uint256 index,\n    int empid,\n    string memory name,\n    string memory department,\n    string memory designation\n) public {\n    emps[index] = Employee(empid, name, department, designation);\n}\n\n\nIf you don't know the index and need to find it first, you can create a view function (callable without spending any gas fees) that searches for the index.\nHere's an example search function assuming that empid is unique. If the empid is not unique, the function just returns the first found index.\nfunction getEmpsIndex(int empid) public view returns (uint256) {\n   for (uint256 i = 0; i < emps.length; i++) {\n       if (emps[i].empid == empid) {\n           return i;\n       }\n   }\n\n   revert('Did not find');\n}\n\nThen you can use this index and pass it to the updateEmployee() function.","515":"This log output is related to an overload of your <blockchain> connection.\nThis notification is usually related to the usage of public websocket connections and\/or free third party NaaS Provider. To fix this connection issue you can either run an own full node or change the tier or the third party NaaS provider. Also it is recommended to use Chainlink version 0.10.8 or higher, as the HeadTracker has been revised here and performs more efficient.\nIn regard to the question let me try to give you a small technical overview, which may clarify the payload of a Chainlink node to it's remote full node:\nYour Chainlink node establishes a connection to a full node. There the Chainlink node initiates various subscriptions, which are a special feature of the websocket protocol to enable bidirectional communication. More precisely, this means that the Chainlink node is informed if a certain \"state\" of the subscription changes. Basically, the node interacts with using JSON-RPC methods and uses the following methods to initiate and process various functions internally:\neth_getBlockByNumber,eth_getBalance,eth_getTransactionReceipt,eth_getTransactionCount,eth_getLogs,eth_subscribe,eth_unsubscribe,eth_sendRawTransaction and eth_Call\nhttps:\/\/ethereum.org\/uk\/developers\/docs\/apis\/json-rpc\/\nThe high amount of interactions of the Chainlink node are especially executed during the syncing process via the internal HeadTracker service. This service initiates a \"head\" subscription in order to interact with every single incoming new blockheader.\nDuring this syncing process it uses the JSON-RPC methods eth_GetBlockByNumber and eth_getBalance to get all the necessary information from the block. So these two methods are used\/ executed every block. The number of requests now depends on the average blocktime of the network the Chainlink node is connected to\nAn example would be the Kovan Testnet:\nThe avg. blocktime here is 6.7sec, which means you get a daily request number of approx. 21.000\nDuring fulfilling job requests, those request also includes following methods: eth_getTransactionReceipt, eth_sendRawTransaction, eth_getLogs, eth_subscribe, eth_unsubscribe, eth_getTransactionCount and eth_call, which increases the total number significantly depending on the number of job requests.\nIt should also be noted that especially with faster <blockchain>s (e.g. polygon) there is a very high payload of the WebSocket and you have to deal with a good full node connection in detail, as many full nodes do not receive such a high number of requests permanently.","516":"IBC-Solidity, the IBC implementations in Solidity, enables EVM-compatible <blockchain>s, including <hyperledger> Besu, to be interoperable via Cosmos IBC.\nhttps:\/\/github.com\/<hyperledger>-labs\/yui-ibc-solidity\nIBC Solidity is one of the components of YUI, a <hyperledger> Lab, that archives interoperability with multiple heterogeneous <blockchain>s through Cosmos IBC.","517":"Yep! You can view the permissions for access keys via our access keys RPC endpoints:\nhttps:\/\/docs.near.org\/docs\/api\/rpc#access-keys\nAn easy way to do this is to run a near-cli command:\nnear keys ACCOUNT_ID\nhttps:\/\/docs.near.org\/docs\/tools\/near-cli#near-keys","518":"In the file you want to export (registerUser.js):\nasync function main(){\n    \/\/some code\n}\n\nmodule.exports = main\n\nIn the file you want to import (test.spec.js):\nlet register = require('path\/registerUser')\nlet resp = register();","519":"You need to run this code on a web application running on localhost or on a server. And, of course, you need to have MetaMask installed on your browser.\nPut this code on a script section of your site:\nawait window.ethereum.request({method: 'eth_requestAccounts'});\nconst provider = new ethers.providers.<web3>Provider(window.ethereum);\nconst contract = new ethers.Contract(smartContractAddress, abi, provider);\nbalance = await contract.getBalance(\"0x7C76C63DB86bfB5437f7426F4C37b15098Bb81da\");","520":"These two assert conditions provide a way to prevent integer overflow and underflow.\nThe max value of uint256 is 2^256-1, which is approx. 10^77. If you want to add two numbers that would result in a value larger that the max value, it would overflow the integer.\n\nExample with smaller values so it's easier to imagine:\nLargest value of uint8 is 255. So if you have a value 250 and you want to add 10, it overflows the max value, and becomes 4 (because 255  + 1 equals 0 in case of uint8).\nThe same goes the other way around. You have a value 5 and want to subtract 10. Since it's an unsigned integer, there's no negative numbers, and it underflows and becomes 251 (because 5 - 5 is 0, and then the remaining 5 is subtracted from the \"max value + 1\").\n\nYou can find more info about the integer overflow\/underflow vulnerability in the SWC registry: https:\/\/swcregistry.io\/docs\/SWC-101","521":"You are not putting a \" before the end of the line. \n\nUse \"\"\" if you want to do this:\n\n\"\"\" a very long string ...... \n....that can span multiple lines\n\"\"\"","522":"It is an ongoing open issue with metamask as far as I know and this solution will only disconnect the first profile without a popup, save the isReturningUser variable in local storage and update accordingly to control function logic flow.\nconst walletAddress = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n      params: [\n        {\n          eth_accounts: {}\n        }\n      ]\n    });\n\n    if (!isReturningUser) {\n    \/\/ Runs only they are brand new, or have hit the disconnect button\n      await window.ethereum.request({\n        method: \"wallet_requestPermissions\",\n        params: [\n          {\n            eth_accounts: {}\n          }\n        ]\n      });\n    }","523":null,"524":"Make sure your pallet is on the same version of Substrate as the one defined in runtime\/Cargo.toml.\nYou are probably using the Frame v2 (aka Substrate 3.0.0) in your runtime, so it expects a Pallet (not Module), even if your pallet is actually written following Frame v1 syntax (Frame v2 is backwards compatible with v1).\nSome more info here","525":"You can find topics of smartcontract events by opening contract in e.g bscscan.\nFor Example:\nhttps:\/\/bscscan.com\/address\/0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458#events\nThere you will find logs with \"Sync\" and \"Swap\" events.\nSync event topic is: 0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\nSwap event topic is:\n0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822","526":"You have defined the TokenFarm (uppercase T) on this line\nconst TokenFarm = artifacts.require('TokenFarm.sol')\n\nThen you're trying to re-assign it on this line\nconst TokenFarm = await TokenFarm.deployed()\n\n\nSolution: Assign to another const name (for example tokenFarm - lowercase T) instead of re-assigning the already existing TokenFarm.\nconst tokenFarm = await TokenFarm.deployed()","527":"As the docs mention:\n\nThe EVM is not a register machine but a stack machine, so all\ncomputations are performed on an area called the stack. It has a\nmaximum size of 1024 elements and contains words of 256 bits.\nAccess to the stack is limited to the top end in the following way: It\nis possible to copy one of the topmost 16 elements to the top of the\nstack or swap the topmost element with one of the 16 elements below\nit.\nAll other operations take the topmost two (or one, or more, depending\non the operation) elements from the stack and push the result onto the\nstack.\nOf course it is possible to move stack elements to storage or memory,\nbut it is not possible to just access arbitrary elements deeper in the\nstack without first removing the top of the stack.\n\nThe number 16 and this last part is important.\nIt basically means that the ETH machine has a \"no more than 16 local variables in use\" limit.\nAlso, the 16 is also not a strict limit, it can be smaller, it depends on what you do with the variables, also the limit is imposed by the fact that the EVM can only reach a specific depth into the stack and the fact that local variables are stored on the stack in Solidity.\nI would recommend refactoring your code and splitting it into two functions, and have sequential queries from your caller for each chunk of data, or shrink the variables into structs.","528":"Each time when someone executes the receiveMoney() function, it happens as a result of a transaction.\nA transaction can hold value in the form of the network native currency. Your question is tagged Ethereum, and the native currency for the Ethereum network is ETH. (If the contract was on the Binance Smart Chain network, the native currency would be BNB, the Tron network has TRX, and so on...)\nSo each time the receiveMoney() function is executed, in adds the current transaction value to the total number hold in balanceReceived.\n\nExample:\n\nFirst transaction executing receiveMoney(), sending along 1 wei (the smallest unit of ETH). The value of balanceReceived becomes 1.\n\nSecond transaction executing receiveMoney(), sending along 5 wei. The value of balanceReceived becomes 6.","529":null,"530":"The peers would need to know about each other and decide which peer is sending the transaction to the orderer.\nThere are typically much more clients than peers, so the idea is to free resources from the peer so it won't have to worry about the lifecycle of the transaction (in case the orderer that received the transaction crashed, etc.).\n\nThere is a new feature in Fabric called the \"Gateway service\" which lets a client collaborate with a peer and the peer orchestrates the endorsement collection for the client.","531":"I think that using the setTimeout function has improved the processing... Not sure but it seems to work a little better now. This is far from perfect because I'm facing another issue but it seems I'm on the right path :\n\/\/ Parcourir tous les blocs entre bloc courant et bloc-1000 et lister \n\/\/ toutes les <transactions> de chaque bloc, avec temporisation de 5 \n\/\/ secondes entre chaque bloc.\n\nlet index = 0\n<web3>.eth.getBlockNumber().then(blockNumber => {\n    for (let i = blockNumber - 1000; i <= blockNumber; i++) {\n        setTimeout(function(index) {\n            getBlockInfo(i).then()\n            console.log('next')\n            console.log(\"index=\" + index)\n        }, 5000 * index, index)\n        index = index+1\n    }\n});\n\nasync function getBlockInfo(i) {\n    await <web3>.eth.getBlock(i).then(block => {\n        block.<transactions>.forEach(function (t) {\n            <web3>.eth.getTransaction(t).then(transaction => {\n                console.log(i + ' ' + transaction.hash + ' ' + transaction.from + ' ' + transaction.to)\n            }).catch((error) => {\n                console.log('erreur')\n            })\n        })\n    }).catch((error) => {console.log(error)})\n}","532":"In order for the user to send a transaction to get your coins, they will have to pay for the gas for the <transactions>. One reason metamask always asks the user first before sending the transacting through is to prevent sites from draining all a users ETH by repeatedly spending their ETH as gas.\nIf you really want to do this at no cost for the user, you could use <node.js> or <python> on the server, and have it sign and send the coins when a user fills out a form.\nNote that there is a huge amount of fraud around collecting airdrops, and if you just send to any address, scammers will generate endless addresses to get coins to, and you will also pay the gas costs.","533":"You'll get confirmation every time you spend ethereum \/ gas.\nThe only way you won't get that confirmation is when you call a contract method marked as view using call() instead of send().\nIn this case the wallet will compute locally the result since there is no need to modify anything in the <blockchain>.","534":"[Edit 2021-12-02] I just found this https:\/\/pub.dev\/packages\/flutter_<web3>, it is web only but seems to be compatible with WalletConnect QR codes connection, so it is probably worth a try.\nOriginal answer:\nI believe you can check out flutter_<web3>_provider but it only works for web.\nI believe you can also use WalletConnect to support mobile wallets like these ones, but I haven't found a wrapper\/implementation for flutter so you would need to implement that. But the good news is you would be able to use it in native apps. I see there is a react-native implementation so hopefully somebody will write the flutter implementation soon. You can support\/like the request here.\nAlso you can directly sign and send <transactions> to an RPC server (a more direct gate to the <blockchain>) using <web3>dart, but of course you would need to ask for and\/or store the user's private key, which is probably not what you want.","535":null,"536":"It's the Typed transaction envelope added in the EIP-2718. Implementation of this EIP was deployed in April 2021 in the Berlin hardfork (source).\nThe field allows to use future transaction types without backwards compatibility. An example of a new incompatible tx type (value 0x01) is in the EIP-2930, also deployed in the Berlin hardfork.\nProbably because it's a new field, it's not yet (June 2021) included in the JSON-RPC documentation. But other documentations, such as ethers.js, already started covering it.\n\nYou can get the transaction status (if it succeeded or reverted) from the transaction receipt field status. It's not included in the regular getTransactionByHash method used in your question.\nMind that the status is not included in pre-Byznatium (October 2017) <transactions> and can also be missing in some future transaction types.","537":"To get an exhaustive list of all entries of a mapped storage function, you should have a look at the query_map function described at: https:\/\/github.com\/polkascan\/py-substrate-interface#query-a-mapped-storage-function\nThis example actually describes how to retrieve all accounts, in case you want to retrieve all identities, you need to transform it to:\nresult = substrate.query_map('Identity', 'IdentityOf')\n\nfor account, identity_info in result:\n    print(f\"Identity of account '{account.value}': {identity_info.value}\")\n\n\nYou can find a list of all available storage functions per module\/pallet at https:\/\/polkascan.io\/polkadot\/runtime-module","538":"You can define a multi-dimensional array in Solidity using multiple [] symbols.\nDocs: https:\/\/docs.soliditylang.org\/en\/v0.8.6\/types.html#arrays\npragma solidity ^0.8;\n\ncontract MyContract {\n    function foo(uint256[][] memory _array) external pure returns (uint256[][] memory) {\n        return _array;\n    }\n}\n\nThen you can pass the JS multi-dimmensional array using any library for interacting with smart contracts, such as <web3>js (NPM, docs).\nconst array = [\n    [1, 2],\n    [3, 4]\n];\n\nconst contract = new <web3>.eth.Contract(jsonInterface, address);\ncontract.methods.foo(array).call().then((response) => {\n    console.log(response);\n});","539":"You can pass multiple --ethereum-rpc in the command\ne.g.\ncargo run -p graph-node --release -- \\\n  --postgres-url postgresql:\/\/<USERNAME><:PASSWORD>@localhost:5432\/<POSTGRES_DB_NAME> \\\n  --ethereum-rpc mainnet:https:\/\/mainnet.infura.io \\\n  --ethereum-rpc goerli:https:\/\/...\n  --ipfs 127.0.0.1:5001 \\\n  --debug\n\nRef: https:\/\/github.com\/graphprotocol\/graph-node\/pull\/1027","540":null,"541":"I managed to find the solution. As the instructions are referred to previous starport vervions (prior to Stargate), you should type instead of \"starport add wasm\" the command \"starport module import wasm\". Then use \"appd tx wasm\" in order to check the wasm availability","542":null,"543":"myContract.deploy({\n    data: '0x12345...',\n    arguments: [123, 'My String']\n})\n.send({\n    from: '0x1234567890123456789012345678901234567891',\n    gas: 1500000,\n    gasPrice: '30000000000000'\n}, function(error, transactionHash){ ... })\n.on('error', function(error){ ... })\n.on('transactionHash', function(transactionHash){ ... })\n.on('receipt', function(receipt){\n   console.log(receipt.contractAddress) \/\/ contains the new contract address\n})\n.on('confirmation', function(confirmationNumber, receipt){ ... })\n.then(function(newContractInstance){\n    console.log(newContractInstance.options.address) \/\/ instance with the new contract address\n});\n\n\n\/\/ When the data is already set as an option to the contract itself\nmyContract.options.data = '0x12345...';\n\nmyContract.deploy({\n    arguments: [123, 'My String']\n})\n.send({\n    from: '0x1234567890123456789012345678901234567891',\n    gas: 1500000,\n    gasPrice: '30000000000000'\n})\n.then(function(newContractInstance){\n    console.log(newContractInstance.options.address) \/\/ instance with the new contract address\n});\n\n\n\/\/ Simply encoding\nmyContract.deploy({\n    data: '0x12345...',\n    arguments: [123, 'My String']\n})\n.encodeABI();\n> '0x12345...0000012345678765432'\n\n\n\/\/ Gas estimation\nmyContract.deploy({\n    data: '0x12345...',\n    arguments: [123, 'My String']\n})\n.estimateGas(function(err, gas){\n    console.log(gas);\n});\n\n\n\nThe following <web3> code can be used to deploy a contract on the spot","544":"For transfer money you just need the receiving address the from address is msg.sender and value is msg.value which should be mention in value field under Gas Limit field , the correct function is as follow:\n function transfer(address payable _to) external payable returns (bool) {\n        _to.transfer( msg.value);\n        return true;\n    }\n\nP.S: in case of want to create Token , you should initiate total supply for contract and better to follow ERC20 standard","545":null,"546":null,"547":"There are several ways of learning solidity the same way there are many ways of learning anything in life, mine was reading Ethereum's docs to conceptually understand what im doing, then reading solidy's docs and doing tiny scripts and examples and running them on remix.\nYet, at the time i was doing that, i didn't knew this existed, it might smoother the road for you!\nWish you good luck with it! Since you come with a background in Java, Solidity might be confusing at first since its a language based on the likes of Javascript and C++.","548":null,"549":"If you are passing in the &[u8] of data to try_from_slice but the overall account data size is greater than your data you will get that borsh error as it defaults to checking the deserialized length with the overall slice length (or something like that):\n\nCapture the actual size of the data you are storing by taking the .len() of the try_to_vec() output and write that in the account data block and then store your data. When you deserialize, use the stored len and use that to create a slice of that size from the account data to pass to try_from_slice. You can see an example (using a BTreeMap instead of your array but you get the idea) here https:\/\/github.com\/hashblock\/solana-cli-program-template\/blob\/main\/program\/src\/account_state.rs at L66 (serialize) and L85 (deserialize).","550":"The implementation of that function uses global data.  Programs cannot use global data","551":"It is impossible to create a truly cold wallet as Bitcoin requires transaction IDs from previous <transactions> to make new <transactions>, therefore, one should come up with a way to update the wallet with recent <transactions>.\nIn order to create a QR Code based wallet there should be two PCs with two cameras and screens so the PC that is connected to the internet can update the one that isn't.","552":"Chainlink VRF follows the request and receive cycle of getting a number. This means, it has to look outside the <blockchain> to get a response.\nSo, 2 <transactions> actually take place:\n\nYour requesting transaction\nThe response transaction\n\nThis is necessary to look outside the <blockchain> like this, otherwise you'll get a deterministic number as opposed to random. The speed at which the random number is returned, is dictated by the block time of the <blockchain> you're using.\nSo for Ethereum, the fastest time possible for a Random Number to be returned is 2 * block time, or about 30ish seconds.\nOn faster chains like polygon, this is drastically lower.","553":"There is a pull request in flight to update the documentation. The new API will looks like:\nrequestRandomness(keyHash, fee);\n\ninstead of:\nrequestRandomness(keyHash, fee, userprovidedseed);","554":"The trade logic won\u00e2\u0080\u0099t be executed until dispute settles.\nExample:\nAlice hires Bob to make a website for Alice. Terms of this task is defined by an agreement. Alice pays the price of the task to smart contract (not to Bob, yet) and waits Bob to deliver the website. If Bob delivers and Alice accepts, smart contract releases the payment to Bob. Otherwise payment gets disputed and it will be released either to Alice or Bob depending on dispute resolution outcome.\nSo, there is no reversing of execution. Instead, payment is temporarily escrowed inside the smart contract.\nDisclaimer: I\u00e2\u0080\u0099m a developer of Kleros.","555":"You can add the oracle and jobId parameters to the requestVolumeData function, and then call it twice, each time passing in a different jobId and oracle.\nuint[2] storage responses;   \n\nfunction requestVolumeData(bytes32 _jobId, address _oracle) public returns (bytes32 requestId) {\nChainlink.Request memory request =\n        buildChainlinkRequest(_jobId, address(this), this.fulfill.selector);\n\n    \/\/ Set the URL to perform the GET request on\n    request.add(\n        \"get\",\n        \"https:\/\/min-api.cryptocompare.com\/data\/pricemultifull?fsyms=ETH&tsyms=USD\"\n    );\n\n    \/\/ Set the path to find the desired data in the API response, where the response format is:\n    request.add(\"path\", \"RAW.ETH.USD.VOLUME24HOUR\");\n\n    \/\/ Multiply the result by 1000000000000000000 to remove decimals\n    int256 timesAmount = 10**18;\n    request.addInt(\"times\", timesAmount);\n\n    \/\/ Sends the request\n    return sendChainlinkRequestTo(_oracle, request, fee);\n}\n\nThen in your fulfill function, you can store the results in an array or some other data structure so that the second response doesn't overwrite the first response. Or have 1 variable for each response, and have logic to check which one to populate (if both null, populate first, else populate second etc). In this function, you can also have a check to see if the minimum amount of responses has been reached and if so to then do validation on the responses\nfunction fulfill(bytes32 _requestId, uint256 _volume)\npublic recordChainlinkFulfillment(_requestId)\n{\n    responses.push(_volume)\n    if responses.length > some number {\n       \/\/do something with the responses\n    }\n}","556":"The EIP-2981 is still in the Draft status. Which means it's still being defined and redefined, there haven't been any (official) voting or even peer review from the core team.\nIt's possible to implement standards defined by EIPs that do not propose any changes to the network (and they only propose contract standards such as token standards). But it's very rare to see these drafts implemented, because there's a high probability that they'll get changed multiple times before they're finally approved or rejected.\nAnd it seems that there's no (well-known) implementation of this particular draft.\nFor more info about the EIP statuses, see the EIP homepage.","557":"Changing\n.\/node_modules\/@uniswap\/?(v3-core|v3-periphery)\/artifacts\/contracts\/**\/*.json\n\nto\n.\/node_modules\/@uniswap\/v3-core\/artifacts\/contracts\/**\/*.json\n\nin the package.json file fixed it for me.","558":null,"559":null,"560":"I think it is that you are siging with lower sequense number in a transaction. You could assign a specified sequense number in CLI with --sequence flag.\nMore details cac be seen here","561":"Is this the problem?\n\/\/ This example provider won't let you make <transactions>, only read-only calls:\n    const provider = new <web3>.providers.HttpProvider(\"https:\/\/mainnet.infura.io\");","562":"Looking at the image, it is clear that you have some states which use HashConstraint. I would recommend you to follow the below steps and perform a migration of HashConstraint States to Signature Constraint.\n\nStop your node.\nSign the jar. To externally sign the jar use the jarsigner. By default, if you do not disable signing in Corda version 4, the jar is signed when you run the deployNodes task.\nReplace the old jar with this newly signed jar.\nStart the node by disabling the hash constraint, by setting the Java system property to -Dnet.corda.node.disableHashConstraints=\u00e2\u0080\u009dtrue\u00e2\u0080\u009d.\nStart the node.\nRun a flow that consumes old Hash constraint states and issues new signature constraint states. You should see the new states using signature constraints.\n\nYou can refer to a sample that does this here.\nTake a look at this blog to read more on this topic.\nFinally, you can also take a look at a video which shows how to do the same.\nYou can find more information on contract migration in docs as well.","563":"Edit: Always be weary of contracts still in the dev branch. With that being said, v0.8 Chainlink Client is now out of the dev branch and this answer is still relevant.\nI ran into the same issue and contacted Avneet from the Chainlink team. Turns out this is caused by a change in the Solidity language starting from v0.7:\n\nBreaking change in v0.7:\n\nusing A for B only affects the contract it is mentioned in. Previously, the effect was inherited. Now, you have to repeat the using statement in all derived contracts that make use of the feature.\nhttps:\/\/docs.soliditylang.org\/en\/v0.7.0\/070-breaking-changes.html\n\n\nTherefore, you need to add\nusing Chainlink for Chainlink.Request;\nto the top of your contract, like so:\ncontract MyClient {\n  using Chainlink for Chainlink.Request;","564":"I am glad to help you here. I am Everton Fraga, working for AWS as Sr. <blockchain> Specialist.\nOn the Managed <blockchain> service page, https:\/\/console.aws.amazon.com\/managed<blockchain>\/, click on \"Join public network\", then you will be guided to deploy your Ethereum node on the network of choice.","565":null,"566":"You can write:\n{\n  challenges(where: {application_: {name: \"something\"}) {\n    challenger\n    outcome\n    application {\n      id\n      name\n    }\n  }\n}\n\n\nNotice _ after the property name\n\nDocs:\nhttps:\/\/thegraph.com\/docs\/en\/querying\/graphql-api\/#example-for-nested-entity-filtering","567":"You can implement a mapping of addresses to the last time they received a token, and then verify against it.\npragma solidity ^0.8.5;\n\ncontract MyToken {\n    mapping (address => uint256) lastReceived;\n    \n    function transfer(address _to, uint256 _amount) external {\n        uint256 fee = getFee(msg.sender);\n\n        \/\/ TODO rest of your transfer implementation\n        \n        updateLastReceived(_to);\n    }\n    \n    function getFee(address _sender) internal returns (uint256) {\n        if (block.timestamp - lastReceived[_sender] < 1 days) {\n            \/\/ if they received a token in the past 24 hours, set a fee\n            return 100;\n        }\n\n        return 0;\n    }\n    \n    function updateLastReceived(address _receiver) internal {\n        lastReceived[_receiver] = block.timestamp;\n    }\n}","568":null,"569":"In order to get a token balance, you need to know the address of the token contract, because the token balance of an address is stored on the token contract.\nMetaMask only shares the saved accounts to the requesting app (and the user needs to manually confirm this action first). But it doesn't share the token addresses, that the user added to their MM UI.\nSo if you know the token address, you can use a simple <web3> call for example:\nconst jsonAbi = {}; \/\/ JSON ABI of the token contract\nconst contractAddress = \"0x123\"; \/\/ address of the token contract\nconst tokenAddress = \"0xfF3d\"; \/\/ address of which you want to get the token balance\n\nconst token = new <web3>.eth.Contract(jsonAbi, contractAddress);\nconst balance = await token.balanceOf(tokenAddress);","570":null,"571":"That main org should be part of every channel in network and as well part of all private data collection, I think that's way to fulfill your requirements","572":"It depends on how you call it.\nThe eth_call JSON-RPC method is free.\nThe eth_sendTransaction method creates a transaction and consumes gas in the form of native currency (in case of the Tron network, that's TRX).\nSome wallet apps only support the transaction mode and do not support calls. Some JSON-RPC wrapper libraries such as <web3>js allow you to chose between the call (using the library .call() method) and the transaction (using the library .send() method).\nNote: Even though the methods are prepended eth_, they are used on the Tron network as well.","573":"so for now you'll need to be using strictly version 1.6.11 of the SDK and it should work. These dependency changes will also be added to the next release so you can expect it moving forward.","574":"The error is here:\n<web3>.utils.toWei(stuffPrice,'ether')\n\nstuffPrice should be string.\n <web3>.utils.toWei(String(stuffPrice),'ether')","575":null,"576":"In general, the node isn't used for querying historical state. Instead you very likely want to use an indexer service that generates data that is much easier to get queries on. There are a few options, but one of the most supported is substrate archive that I would suggest you use.\nAlternatively you can look to substrate compatible block explorers to see what they do for this in their source code.","577":"It SEEMS like the issue here is that you're getting the buyer account the wrong way? Or that the finality flow call might be off. Take a look at our samples on this.\nMaybe try something like this to get your account info\nAccountInfo targetAccount = accountService.accountInfo(<STRING NAME OF ACCOUNT >).get(0);\n\nsrc is our corda samples repo: https:\/\/github.com\/corda\/samples-java\/blob\/master\/Accounts\/supplychain\/workflows\/src\/main\/java\/net\/corda\/samples\/supplychain\/flows\/SendShippingRequest.java#L80\nAlso, note how different the finality calls look like:\nhttps:\/\/github.com\/corda\/samples-java\/blob\/master\/Accounts\/supplychain\/workflows\/src\/main\/java\/net\/corda\/samples\/supplychain\/flows\/SendShippingRequest.java#L112","578":null,"579":"Remove the validateChainlinkCallback(_requestId) line in your fulfill() method and it will work.\nfunction fulfill(bytes32 _requestId, bool _completed) public recordChainlinkFulfillment(_requestId) {\n        completed = _completed;\n    }\n\nThe fulfill() method already has the recordChainlinkFulfillment modifier which runs the same validation as the validateChainlinkCallback(_requestId) method anyway.\nReference: ChainlinkClient source code.","580":"First, you need to create a contract that will use dex interface\nafter that, you need to call a function in javascript.","581":"Since you're using <web3> with capital W, I'm assuming it's the name of the class - not the instance.\nYou need to access the instance property net and it's method getId().\n\/\/ instantiate the class first\nconst <web3> = new <web3>();\n\n\/\/ mind the lowercase `w` in `<web3>`, accessing the instance\nconst networkId = await <web3>.eth.net.getId();","582":"The error means your Account query in your node is returning an empty list. It is probably caused by passing in an invalid parameter. The buyer variable needs to be a string and needs to be Case-Sensitive.\nAs Alessandro said in the comment, the account sharing is done from the counterparty node. You would not need to do anything from the receiving node.\nAs for the UtilitiesKt, you can still use it. We were just trying to not use any kotlin class in our latest java samples.","583":null,"584":"There are some bridge applications that allow you to perform cross-chain operations (mostly run by exchanges). But these are operated on a different layer, unrelated to smart contracts.\n\nWhat you're asking is not possible if you want to stick strictly to smart contracts.\nHowever, you can use the oracle pattern. Create an off-chain app (the oracle) that listens to <transactions> from your contract to a specific address. Each transaction (from your contract to the target address) will trigger an action in the off-chain app - e.g. reading Bitcoin data. The oracle then sends another transaction to your smart contract, passing it the off-chain data.","585":"For some reason visual code choose a different solc compiler than the one i installed so when you run a solidity you have to use\n\nsolcjs --bin --base-path . .\/file name\n\nand that will use the solc that you installed using\n\nnpm install -g solc\n\nWorked for me, hope it works for all of you","586":"Lisk SDK has a maximum block size of 30kb.\nThe value is currently configurable between 10kb and 30kb.\nLisk HQ tested up to 100kb with success, so it's possible that later version will push those config boundaries.\nYou can always edit the config schema ( framework\/src\/schema\/application_config_schema.ts ) in the SDK sources code to edit those values yourself ; but you must take into account the impact it has on the network : you may need to increase the block time, and set it to 15s instead of 10s for example.","587":null,"588":"The getBlock() docs point to the defaultBlock for information about the values.\n\n\"earliest\" - String: The genesis block\n\"latest\" - String: The latest block (current head of the <blockchain>)\n\"pending\" - String: The currently mined block (including pending <transactions>)\n\nSo \"latest\" is the newest block. \"Earliest\" on the other hand, is the oldest block.","589":null,"590":"does \"Caller\" host under the hood the \"C\" contract with you?\n\nThe Caller bytecode only contains the definition of the C. But not its instance.\n\nC c = new C();\n\nThis snippet deploys the defined C contract to a new address. Meaning, it copies the C definition to a new address and executes the constructor (if applicable).\nIn the c property it stores\n\nthe newly deployed address\ninformation that it implements the C interface\n\nCaller does not store the whole instance of the C contract in the c property. When Caller executes a function on the c address, the EVM sends an internal transaction (between your Caller address and c address), and Caller only receives the result of the transaction - whether it was successful (or reverted) and the returned binary data. Your Caller than typecasts this returned data to typed properties based on the C definition that it has on its own address (The C definition in the Caller contract).\n\nIf you make the property public, you can easily verify that it has been deployed on a new address:\nC public c = new C();\n\n\nNote that the Caller deployed address, and the c value are different.","591":null,"592":null,"593":"Just parse as:\n      for transaction in block.<transactions>:\n          for output in transaction.outputs:\n              for addr in output.addresses:\n                  print(addr.address)","594":"Form offical website, I find azure <blockchain> will be retired.\n\nAnd I try to create it on portal and also try to create it by azure cli, all failed.\n\nIn conclusion:\nAzure recommends that users who have created a <blockchain> service provide the service and recommend that they migrate as soon as possible. For users who need to create this service, the service is not provided.\nSo this should be the willingness to fail to create success, you can raise a support ticket to confirm it.","595":"I did the developer guide on github.\nCPU: 2.0 GHz x86-64 CPU\nMemory: 8GB RAM\nDisk: 500GB High-Speed Storage (SSD)\nFor your reference, we deploy our own ParaTime node on Azure D2s_v3 instances (2 VCPU, 8GB Memory, 500GB Disk space).\nMy node is running.","596":"You can use Micro-fronted to merge two or more react apps and run to<geth>er. The below below blog may be useful to you.\nHow to develop microfrontend using react","597":"You have two syntax errors in your code:\n\ncontract should be lowercase, not Contract\nconstructor is missing closing brace }\n\nThen you're going to run into a type conversion error with the uint(decimals). When you look at the remote contract, you see that decimals() is a view function - not a property. So you should read its value as if you were calling a function: decimals().\n\nCombined all to<geth>er:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC20\/ERC20.sol\";\n\/\/ removed the IERC20 import, not needed in this context\n\ncontract GToken is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(\"GToken\", \"GTKN\") public {\n        _mint(msg.sender, 1000000 * 10 ** decimals()); \/\/ calling the `decimals()` function\n    }\n}","598":null,"599":"In case the ticket is not replaceable by others of the same type (e.g. concert ticket) you would need a NonFungibleToken. To build a very basic one you would need to do the following steps:\n\ncreate a state YourState that extends TokenType (or implements ContractState, if you need to have a contract associated with the state that can be verified with the transaction)\ncreate a var issuedTokenType = IssuedTokenType(ourIdentity(), YourState). An IssueTokenType associates a TokenType with an Issuer party\ncreate a var nft = new NonFungibleToken(issuedTokenType, holder, UUID) this creates a Non-Fungible Token issued by Issuer with holder (a Party) as a receiver\nissue the token subFlow(new IssueTokens(listOf(nft)))\n\nThere are many other ways, depending on what you need and how rich your State needs to be (it can be QueryableState, SchedulableState etc), and the token-sdk provides many helpers to help you create, issue and redeem tokens. All of them have their pros and cons, it depends on what you need to achieve.\nI suggest you go through the sources here below to learn how to use the token-sdk:\n\nthis cordapp example where there is basically what you need. Check out the CouponTokenType that is used to issue NonFungibleTokens in IssueCoupon flow\nthe official tutorial, where you will learn how to use token sdk specifically\nthe token-sdk repo on github, where there is additional documentation with various standard examples and the architectural design of the type of tokens available in token-sdk\nthe samples dedicated to token-sdk available for both Java and Kotlin. All of them create and issue tokens.\n\nWith the above sources you will definitely be able to find everything you need to create and issue the type of token you need.","600":null,"601":null,"602":"From what i see on that list, the bot watcher looks at \"0x3ae4222d06dacba3618526359a25bee8aecdbd92\" this contract, and looks at incoming <transactions> in that contract and somehow finds all the info there not sure how though and clearly it dosnt list all the <transactions> there.\nNot sure how those bots work but I'm guessing they snipe through that contract and it's a known bot contract so poopcoin watches it.\nEDIT: The watched contract is actually bogged finance contract, and you have to hold atleast 750 bog to use it. The contract is just orders people can make. And bog finacnce runs the bot and buys the orders that are in the contract.","603":null,"604":"Create new wallet in metamask (you will be asked to import a private key for it later) and request test tokens here: http:\/\/faucet.parastate.io\/","605":"Network Name: ParaState\nNew RPC URL: https:\/\/rpc.parastate.io:8545\nChain ID: 123\nCurrency Symbol (Optional): STATE","606":"There is no technical limit on the number of channels your one node can open.\nHowever, for each channel you open, you are 'locking up' some bitcoin. It is suggested around 500,000 sats per channel is needed (https:\/\/kroisos.io\/how-many-sats-should-you-put-in-a-lightning-channel\/) and as such, as of today, that's almost $300 right now.\nSo, there might be a limit to your funds :)","607":"looking over https:\/\/github.com\/iancoleman\/bip39\nI found I had to specify the correct ravencoin network specifications (don't really understand what this object means) but once I did, it worked perfectly.\nfunction getAddress(node, network) {\n    const bitcoin = require('bitcoinjs-lib');\n    return bitcoin.payments.p2pkh({ pubkey: node.publicKey, network }).address;\n}\n\nfunction getNetwork() {\n    \/* https:\/\/github.com\/iancoleman\/bip39\/blob\/c4f0c2908faab1452937e50a7d3a400fed42a0a8\/src\/js\/bitcoinjs-extensions.js *\/\n    return {\n        messagePrefix: '\\x16Raven Signed Message:\\n',\n        bip32: {\n          public: 0x0488B21E,\n          private: 0x0488ADE4,\n        },\n        pubKeyHash: 0x3c,\n        scriptHash: 0x7a,\n        wif: 0x80,\n    };\n}\n\n\nfunction BIP44() {\n    \/* create a BIP44, rvn, account 0, external address *\/\n    const bip32 = require('bip32');\n    const root = bip32.fromSeed(\n        Buffer.from(\n        'dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd',\n        'hex',\n        ),\n    );\n    const childAuto = root.derivePath(\"m\/44'\/175'\/0'\/0\/0\");\n    const childManual = root\n        .deriveHardened(44)\n        .deriveHardened(175)\n        .deriveHardened(0)\n        .derive(0)\n        .derive(0);\n    return getAddress(childAuto, getNetwork());\n    \n}\nconsole.log(BIP44());","608":"I finally managed to get estimative gas and do a trade only after I approved the input token to exchange.\nYou need 2 <transactions>:\n\nfirst send a transaction to approve the input token with the input amount\n\/\/ Encode data\nlet encodedABI = tokenContract.methods.approve(Config.PANCAKESWAP_ROUTER_V2_ADDRESS, pu<web3>.utils.toHex(amountIn)).encodeABI();\n\n\nafter approve transaction, send a transaction to swap","609":"You need deploy other contracts beforehand, write down their addresses and pass addresses when MasterChef is deployed.","610":null,"611":null,"612":"Solution\nFollowing on from Serhii's answer above. The actual error that was thrown was that my app didn't have permission to transfer tokens.\nI had to logout of my app and re-login to the sam2 account, it added full key permissions, meaning the JS posted in my question works as expected.","613":null,"614":"Most of this is not related to the token code and is an economics topic. Which is offtopic here at StackOverflow, so I'm just going to briefly say something that is only partially correct: As long as there's enough buyers and sellers willing to buy\/sell the token for the price of gold, the token is going to have a price of gold.\n\nHowever, you can define functions in your contract that control its total supply, which affects the price (sometimes affects the price - economics again).\nTake a look at the PAXG source code:\n\/**\n * @dev Increases the total supply by minting the specified number of tokens to the supply controller account.\n * @param _value The number of tokens to add.\n * @return A boolean that indicates if the operation was successful.\n *\/\nfunction increaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\n    totalSupply_ = totalSupply_.add(_value);\n    balances[supplyController] = balances[supplyController].add(_value);\n    emit SupplyIncreased(supplyController, _value);\n    emit Transfer(address(0), supplyController, _value);\n    return true;\n}\n\n\/**\n * @dev Decreases the total supply by burning the specified number of tokens from the supply controller account.\n * @param _value The number of tokens to remove.\n * @return A boolean that indicates if the operation was successful.\n *\/\nfunction decreaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\n    require(_value <= balances[supplyController], \"not enough supply\");\n    balances[supplyController] = balances[supplyController].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n    emit SupplyDecreased(supplyController, _value); \n    emit Transfer(supplyController, address(0), _value);\n    return true;\n}\n\nBy executing these functions (can be executed only from an authorized address - this check is performed in the onlySupplyController modifier), you can manipulate the balance of address that is present in the value of the supplyController property.\n\nOther tokens that peg their value to some off-chain asset, also have a built-in buy function (and sometimes a sell function as well) which allows buying\/selling the token from\/to a predefined holder for a predefined price. That might also create an incentive for the buyers and sellers to use the built-in functions instead of less profitable price on an exchange, which might effectively affect the price.","615":"The issue seems to be the inline use of require for the plugin. I'm not sure why exactly it's not allowing for it, but try reformatting it this way:\nPut the require up top with the others: const chaiAsPromised = require('chai-as-promised').\nThen, use the instantiated version:\nrequire('chai')\n  .use(chaiAsPromised)\n  .should()\n\n\nFor others looking at this, the whole file is here. Line 5 is:\n  .use(require('chai-as-promised'))","616":"Block puzzle is irrelevant to transaction validity or invalidity.\nWhenever miner (or another node) receives a new transaction from a peer, he validates transaction versus existing <blockchain> and some inner rules. If transaction is valid, miner adds this transaction into mempool, and forwards to a peers.\nWhen transaction is added to the mempool, there is changed merkle root of mempool, which presents in the block header.\nIn process, miner trying to select nonce value, for generate hash of the block header less than target value.\nIf miner found a nonce, satisfy network rule, he distributes to a peers the block, contains valid <transactions> only (packed from mempool).\nPeers, whenever receive the block, validate all <transactions> from this block and validate block integrity with check merkle tree and block hash.\nThus, if malicious miner adds invalid transaction to his block, his peers just reject such block.","617":"As the name \"on-chain analysis\" suggests, the base data are collected from <blockchain>s. Most analytics companies combine the <blockchain> data with their own knowledge. Sometimes it's combined with public data that are just complicated to filter out. And sometimes they're using non-public data that they got from exchanges and other sources (possibly for this specific purpose of combining with other data and reselling the combined product, but not reselling the raw data).\nExample: Exchange X has\n\ncold wallets A, B and C - All of this is published by the exchange.\nhot wallets D, E, F and G - Part of this is public knowledge, part is info from the exchange directly to the analytics company.\nuser deposit wallets H, I, J, K, L, ... - The exchange told the analytics company and keeps them updated on new and removed deposit addresses (in exchange for some fee). Part of the agreement might be that the analytics company can't share these addresses, just the combined amount.\n\nThe analytics company can watch <transactions> coming from\/to these wallets (this is the public <blockchain> data) and make a sum of how much crypto has arrived to or left from the exchange.","618":"The Hedera mainnet has been proven by Adsdax in the wild to scale to at least 1,372 <transactions> per second. I'm sure the network has topped out at higher since its opening in 2019.\nYou can see the currently throttled tps limits on the mainnet in Hedera docs. This peaks at 8,000 tps currently for Hedera Consensus Service messages which is the majority of transaction on Hedera today. You could, of course, test this out for yourself if you like.\nImportant to note, this is different then smart contract <transactions> which are limited by EVM performance and also pre-sharding, which is on Hedera's roadmap for the end of 2021 and would additionally increase the tps capacity well beyond the 10k figure.\nOverall, a lot of the claims the youtube video you have linked has been debunked in quite detail by the Hedera community in this Reddit thread.\nFull disclosure: I work at Hedera.","619":"I have had success with the BitQuery API - you can use it free for X amount of requests: https:\/\/graphql.bitquery.io\/ide\/WQfM3F2ZSz\nThe link above is for all new Ethereum based tokens, but you can have a look in the shared queries, or write your own, to get the BSC tokens.","620":"No, truffle will migrate only no-executed migrations as documentation said:\nRunning migrations - Command\n\nIf your migrations were previously run successfully, truffle migrate will start execution from the last migration that was run, running only newly created migrations. If no new migrations exists, truffle migrate won't perform any action at all. You can use the --reset option to run all your migrations from the beginning.\n\nSo, if you already migrated a contract, you should execute:\ntruffle migrate --reset","621":"The Corda nodes receive their digital certificates from the Certificate Authority of the Corda network they participate to, the Identity Manager, which in turns receive its certificate from the network root. With this certificate from the CA, the Corda node can participate to the network and it can also use it to sign its own certificates.\nSo, to answer your question: it depends on the extent of the Corda SAAS solution provided. If this service provides also its own private Corda network, which means it also handles the Identity Manager and root network, then the SAAS provider owns these certificates. Otherwise, if the SAAS provides only a Node-as-a-Service connected to the public-permissioned Corda Network (ran by the Corda Network Foundation, or in general another subzone ran by a third party), then the certificates are issued (and also checked and revocated) by the CA of that network.\nI invite you to read the documentation about Network Certificates, the Certificate Hierarchy in the CENM (Corda Enterprise Network Manager) documentation, and also how it works with the Network Foundation.","622":"A usual way to add functionality to a contract is using the upgradable proxy pattern. OpenZeppelin has a very good article that explains this pattern.\nIn a nutshell: Your user-facing contract does not have any functionality except for a proxy to some implementation, and a function to change the proxy settings from an authorized address. When you need to upgrade, you just deploy the newer implementation to a different address and reflect the new address in the proxy. Because of how delegatecall works, it uses storage of your proxy contract. The values that you have stored, stay the same when you start using new implementation contract.\n\n\nCan I deploy a new contract that only has the time lock function that interacts with my already deployed contract and lock some tokens of the already deployed contract ?\n\nThis wouldn't work if you tried to lock existing tokens. The original contract would have no way to call the new contract to check whether it's allowed to transfer the tokens - or whether they're locked.\nBut if you have a mint feature in the original contract, you could mint new tokens that would belong to the lock contract. The lock contract would allow some authorized users to spend the tokens it owns - only after some time passes (i.e. timelock).","623":"Goerli Etherscan has a different API host.\nYou need to use https:\/\/api-goerli.etherscan.io\/ instead of https:\/\/api.etherscan.io\/\nSource: https:\/\/goerli.etherscan.io\/apis#accounts","624":null,"625":null,"626":"You can use a payable function modifier. See documentation how to receive Ether in smart contracts.","627":"You need insert the attribute value\nvalue = {greeting}\nin the input:\n  <input onChange={e => setGreetingValue(e.target.value)} \n        placeholder=\"Introduce uno nuevo\" \n        value={greeting}\n        \/>\n\nAlso initialize with two quotes useState ():\nconst [greeting, setGreetingValue] = useState ('')\nYou will probably now have a issue with the metamask nonce, which will tell you that it is too high like message error like this:\nNonce too high. Expected nonce to be 1 but got 2\n\nYou will reset account in metamask, or import a new account.","628":"check this out on how to create a flow and how to validate the transaction in both parties (i.e. @Initiating and @InitiatedBy flows)\nby \"digital signature\" I guess you mean the signature of the final transaction signed by all interested parties. If this is the case, your flow needs to return a SignedTransaction object and it can be done easily just by doing this standard step at the end of your flow\nreturn subFlow(FinalityFlow(fullySignedTx, setOf(otherPartySession)) (usage example).\nIf you want to see the status of all intermediary steps of a transaction before it is fully signed and notarized, Corda provides a ProgressTracker (documentation) that allows you to check create steps so that they can be showed from node terminal. You could reorganize your flows and API in order to take advantage of this.","629":"You can get ABI JSON during compilation of the contract source code. The inputs for compilation are source code and few other values (such as optimizer settings)... The outputs include the ABI JSON and bytecode... So you don't really need to deploy the contract to get the json, just compile it (without deployment).\nIt's not possible to get ABI JSON purely from a bytecode (or an address that contains just the bytecode).\n\nIf the contract has source code published, you can compile the source code to get the ABI JSON.\nIf if doesn't have the source code published, it's also possible that the contract implements some standard (e.g. ERC-20). If you know whether and what standard it implements, you can use a general ABI JSON that reflects on this standard (e.g. this is ABI JSON of a ERC-20 standard). However, it does not reflect any functions that the contract might have used to extend the standard-defined minimum.","630":"The ERC-721 standard does not define a \"best\" or \"correct\" way to mint new tokens (such as whether it should be open or restricted) and it's up to each contract developer to implement or omit the minting feature in a way that reflects their needs.\n\nCreating of NFTs (\"minting\") and destruction NFTs (\"burning\") is not included in the specification. Your contract may implement these by other means. Please see the event documentation for your responsibilities when creating or destroying NFTs.\n\nBut having a whitelist of addresses that are authorized to mint new tokens (e.g. MINTER_ROLE or onlyOwner) seems to be more common than allowing anyone to freely mint new tokens.\n\nEven though it's theoretically possible to deploy new contract each time a new token is minted, it's not a standard approach (and I personally haven't seen any contract that does it). In most cases the minting process \"just\" creates a new ID, stores a new string\/URL value associated with the ID, associates this new token with an owner address (of the token, not a contract owner), plus updates some metadata such as amount of tokens owned by an address (see example below).\nThe token owner can then transfer their tokens, give anyone control over their tokens, and do other stuff depending on the contract implementation.\nThe mappings that you point out in your question (_owners and _balances) suggest that they store token owner (not contract owner) addresses as well as amount of tokens held by each address.\nExample:\n\nContract owner mints token ID 1 to address 0x123.\n\nValue of _owners[1] is 0x123 (was 0, the default value)\n\nValue of _balances[0x123] becomes 1 (was 0, the default value)\n\n\n\nContract owner mints token ID 2 to address 0x123.\n\nValue of _owners[1] is still 0x123\n\nValue of _owners[2] is now 0x123 (was 0, the default value)\n\nValue of _balances[0x123] becomes 2 (because they now own 2 tokens)","631":null,"632":"You should stop your node then you can use the tools provided by Tron, e.g:\n\njava -jar LiteFullNodeTool.jar -o split -t snapshot --fn-data-path\noutput-directory\/database --dataset-path\nliteDatabase\/output-directory\/\n\nYou can also refer to this issue about this subject for more information.\nHope it was helpful.","633":"Bytecode of a smart contract is published in a transaction (that is mined in a block), and then stored in a storage of the network (usually Ethereum or Binance Smart Chain) associated with an address.\nSo each time when you're interacting with a smart contract, you're interacting with an address that is associated with a storage chunk containing the bytecode. Plus the bytecode points to other storage slots where the values of its variables are stored.\nAll state changes (including changes of the storage values) are part of the ledger database. The raw <blockchain> data only contain the state changes (not the current state), but most higher layers return the current state by default (you can still chose to fetch an older state, e.g. the \"defaultBlock\" param here). And some layers even disallow accessing previous states (e.g. Solidity and Vyper languages for writing smart contracts - you can compile this code to the bytecode).\n\n\nBut how does the the smart contract know when to pay the project team?\n\nA smart contract can access current balance of any address, including its own. It can also have a variable containing the funding goal. Comparing these two values tells you whether the goal has been reached and whether the smart contract should pay the project team.\nHowever, smart contracts currently don't have any native timers (such as cronjobs) or event handlers - and functions are executed after a transaction is sent to the address of the smart contract (data field of the transaction states what function you want to execute and what arguments you're passing).\nSo you need to either send the transaction (executing the withdraw() function) manually or using some offchain tool (that can watch the current balance and then send the transaction executing the function for you).\npragma solidity ^0.8;\n\ncontract MyContract {\n    uint256 constant FUNDING_GOAL = 1 ether;\n    address constant TEAM_ADDRESS = address(0x123);\n\n    \/**\n     * Throws if the current balance is lower than the goal\n     * Otherwise sends all of the current balance to the predefined address\n     *\n     * Need to send transaction with correct value of the `data` field\n     * to execute this `withdraw()` function.\n     * Most client apps generate the correct value of `data` field for you\n     * after selecting the function name and specifying argument values.\n     *\/\n    function withdraw() external {\n        require(address(this).balance >= FUNDING_GOAL, 'Haven\\'t reached the funding goal');\n        payable(TEAM_ADDRESS).transfer(address(this).balance);\n    }\n    \n    \/**\n     * Allows this contract to receive native currency of the network (usually ETH or BNB)\n     *\/\n    receive() external payable {}\n}","634":null,"635":"You can create a Merkle Tree by first converting your dictionary to a class object form, and then recursively traverse the tree, hashing the sum of the child node hashes. Since a Merkle Tree requires a single root node, any input dictionaries that have more than one key at the topmost level should become the child dictionary of an empty root node (with a default key of None):\ndata_example = {\n  \"key1\": \"val1\",\n  \"key2\": [1, 2, 3],\n  \"key3\": {\n     \"subkey1\": \"subval1\",\n     \"subkey2\": \"subval2\",\n     \"subkey3\": \"subval3\",\n    }\n}\nclass MTree:\n   def __init__(self, key, value):\n      self.key, self.hash = key, None\n      self.children = value if not isinstance(value, (dict, list)) else self.__class__.build(value, False) \n   def compute_hashes(self):\n       #build hashes up from the bottom\n       if not isinstance(self.children, list):\n          self.hash = hash(self.children)\n       else:\n          self.hash = hash(sum([i.compute_hashes() for i in self.children]))\n       return self.hash\n   def update_kv(self, k, v):\n      #recursively update a value in the tree with an associated key\n      if self.key == k:\n         self.children = v\n      elif isinstance(self.children, list):\n         _ = [i.update_kv(k, v) for i in self.children]\n   def update_tree(self, payload):\n      #update key-value pairs in the tree from payload\n      for a, b in payload.items():\n         self.update_kv(a, b)\n      self.compute_hashes() #after update is complete, recompute the hashes\n   @classmethod\n   def build(cls, dval, root=True):\n       #convert non-hashible values to strings\n       vals = [i if isinstance(i, (list, tuple)) else (None, i) for i in getattr(dval, 'items', lambda :dval)()]\n       if root:\n          if len(vals) > 1:\n             return cls(None, dval)\n          return cls(vals[0][0], vals[0][-1])\n       return [cls(a, b) for a, b in vals]  \n   def __repr__(self):\n      return f'{self.__class__.__name__}({self.hash}, {repr(self.children)})'        \n\n\ntree = MTree.build(data_example) #create the basic tree with the input dictionary\n_ = tree.compute_hashes() #get the hashes for each node (predicated on its children)\nprint(tree)\n\nOutput:\nMTree(-1231139208667999673, [MTree(-8069796171680625903, 'val1'), MTree(6, [MTree(1, 1), MTree(2, 2), MTree(3, 3)]), MTree(-78872064628455629, [MTree(-8491910191379857244, 'subval1'), MTree(1818926376495655970, 'subval2'), MTree(1982425731828357743, 'subval3')])]) \n\n\nUpdating the tree with the contents from a payload:\ntree.update_tree({\"key1\": \"newVal1\"})\n\nOutput:\nMTree(1039734050960246293, [MTree(5730292134016089818, 'newVal1'), MTree(6, [MTree(1, 1), MTree(2, 2), MTree(3, 3)]), MTree(-78872064628455629, [MTree(-8491910191379857244, 'subval1'), MTree(1818926376495655970, 'subval2'), MTree(1982425731828357743, 'subval3')])])","636":"Your attempting to create an account on mainnet not testnet here and your key is for a testnet account. Change your endpoint to https:\/\/testnet.waxsweden.org and it should work fine.\nI actually took your class on Udemy Icaro!","637":"If I assume the user is using Metamask, there are a variety of signature methods Metamask allows you to do to verify the user owns the address. The specific methods vary, but the basic idea is that it asks the user to sign a message with their private key for the address, and then verifies that the signature is valid. One API for this is described here:\nhttps:\/\/medium.com\/metamask\/scaling-<web3>-with-signtypeddata-91d6efc8b290\nSince Metamask supports BSC and it is generally ETH compatible, I would assume the same functions would work for a BSC address. I'm not familiar enough with every BSC wallet (such as the Trust Wallet) to know if they have similar signing features, they may. In any case, the user's wallet would need to have a feature that allows for this kind of signing for this type of verification to be done--it may not be possible if you are interacting with a user that just has a mobile light wallet with limited features for only sending\/receiving.","638":"There's no methods for that as mentioned in official docs you can use Kafka or Mongodb plugin and connect that to a node for this purpose, but there's also HTTP API,\nevent query http\nyou can create an interval to fetch the result and when the desired output came in hand clear that\nnote that TRON network produces new block every ~7 secs","639":"If the burn() function has a public or external visibility modifier, you can execute it by submitting a transaction containing the function signature and the argument value(s) in the data field.\nOne of the ways is to build the data field value manually or semi-manually\nconst data = <web3>.eth.abi.encodeFunctionCall({\n    name: 'burn',\n    type: 'function',\n    inputs: [{\n        type: 'uint256',\n        name: '_amount'\n    }]\n}, [10000]);\n\nwhich returns\n0x42966c680000000000000000000000000000000000000000000000000000000000002710\n\n\n42966c68 is the function signature\n2710 is hex value for 10000 (dec)\n\nand pass it to any wallet that supports custom data field (e.g. MyEtherWallet).\n\nAnother way is to instantiate your contract with <web3>.eth.Contract and execute the function from there. This generates the data field for you and if you've configured your <web3> instance correctly, it also uses your private key to sign the transaction and broadcasts it to the network.\nconst contract = new <web3>.eth.Contract(jsonInterface, contractAddress);\ncontract.methods.burn(10000).send({from: yourAddress});","640":null,"641":null,"642":"The smart contract bytecode itself is immutable (except for few edge cases).\nBut many contracts implement the upgradable proxy pattern (see an example by OpenZeppelin). Which means that the client-facing contract itself only acts as a proxy to some implementation. And when it's time to upgrade, an authorized address can switch the proxy to point to a different implementation. This makes the service somewhat centralized, but allows for upgrading.\nSome cryptocurrencies such as Bitcoin have more decentralized approach to upgrading. Anyone can submit a Bitcoin Improvement Proposal and when it's voted in, it gets implemented to the network. If a smart contract platform allows a similar way of upgrading smart contract (e.g. through voting on a change), it would also allow for a decentralized way of upgrading a smart contract.","643":"I think you want:\nSELECT DATE(block_timestamp) as date, AVG(receipt_gas_used)\nFROM `bigquery-public-data.crypto_ethereum.<transactions>`\nWHERE DATE(block_timestamp) BETWEEN '2015-07-30' AND '2021-05-10'\nGROUP BY date\nORDER BY date;\n\nYou probably don't need the WHERE clause, but I left it in.","644":"It looks like your Infura endpoint is not set up correctly, check your project ID and the permissions you have set up in your account, some examples can be found here or via your Infura login: https:\/\/infura.io\/docs\/gettingStarted\/chooseaNetwork","645":"Try another endpoint, for example try https:\/\/wax.greymass.com instead of https:\/\/chain.wax.io, this should resolve your problem.","646":"The indy-node is a source code for a node running as part of the Indy distributed ledger (DLT) network.\nThe indy-sdk works as a client for DLT but it also contains functions that don\u00e2\u0080\u0099t require communication with the DLT such as manipulation with DIDs and verifiable credentials and secure storage for them.\nLet\u00e2\u0080\u0099s say you want to build an SSI wallet. Regardless it\u00e2\u0080\u0099s for an issuer, holder, or verifier, you would use indy-sdk. Then you would use indy-sdk to connect to the DLT and create a credential schema as an issuer or verify the proof against the revocation registry as a verifier. You can use indy-node to run DLT on your localhost or build your own network or you can go and use any publicly running instance of Indy DLT such as Sovrin.\nTo summarize, the indy-node is not using indy-sdk internally. If you want to run your own DLT network, use indy-node. If you want to build SSI applications, use indy-sdk.","647":"Don't use Bitcoin as a reference for figuring out what smart contracts are and how they are included in the <blockchain>. That is not the purpose of Bitcoin so several pieces will be missing to really understand the integration of smart contracts.\nSorry for not directly following your questions, I just believe that a more detailed explanation is required to really understand how smart contracts are included \/ executed.\nAs you are asking about smart contracts let's take the practical example of Ethereum to explain how they are included in the <blockchain> and how to interact with them. ( The main idea is similar for other smart contract <blockchain>s )\nAccounts :\nLet's start by differentiating two types of Ethereum account :\n\nExternally Owned Accounts (EOA)\nContract Accounts (CA)\n\nExternally Owned Accounts:\nAn EOA is what you already know in Bitcoin, a user that holds a private key and a public address. An EOA is autonomous \/ proactive (You can decide to do something with your account whenever you want).\nAn EOA can send a public transaction as it can sign it with its private key.\nContract Accounts:\nA CA does not have private key but only a public address as you must be able to uniquely identify the smart contract on the <blockchain>. A CA is reactive only (A CA account actions will always be the result of an EOA action).\nA CA account cannot send a public transaction like an EOA would as it cannot sight it with a public key since it doesn't have one.\nIn Ethereum there is this notion of account state.\nBasically a mapping from addresses (EOA and CA) to a specific state.\nThe state of a specific account contains information's such as the balance and the nonce (number of <transactions> \/ contracts that this account created) and for CA this is expanded with code hash and storage hash.\n<transactions>\nA transaction can be:\n\nsmart contract creation\na value\/data transfer from account A to account B.\n\nSmart contract creation :\nThis transaction has no specific receiving address.\nIt includes data containing the smart contract code in the 'data' field.\nThe <blockchain> state will be updated to account for the new smart contract as long as this transaction is included in a block and consensus is reached.\nAn EOA address will be deterministically given to your smart contract (see this thread for an explanation on how it is done) and a new mapping is added in the account state for your smart contract containing the contract's code. You can now send transfer <transactions> to your smart contract address.\nValue\/Data transfer from account A to account B.\nNow let's say you want to call the method \"setName\" of your smart contract.\nYou or anyone can send a transaction from your account address (A) to the smart contract address (B) with the relevant information in the 'data' field (which method to call, parameters, etc..)\nThe execution itself will take place in the Ethereum Virtual Machine (EVM) where your contracts code will be interpreted and any change to the account states will be recorded.\nWith all of that in mind I suppose the answer to your questions will be clearer :\nBut how the computer program is getting executed?\nIt is executed inside the EVM on nodes. This execution will find it's origin in an EOA transaction calling the smart contract. The result of the execution is the changes to the account states.\nhow <transactions> are getting validated?\nSmart contracts cannot issue <transactions> as they are referenced as CA accounts. The original EOA transaction creating or calling the smart contract is validated as any other transaction and submitted to the normal consensus scheme of the <blockchain>.\nThe confusion might come from the fact that a smart contract can send funds to another address (EOA or CA), but they don't do so in the form of a public transaction.\nThis is possible because smart contracts are deterministic, therefore if you have the <blockchain> you have all the smart contract creation and smart contract calls in the form of <transactions> in the <blockchain>, and executing a smart contract in the EVM can change the account state. so if you send funds from (account A - EOA) to (account B - CA) that forwards them to (account C - EOA or CA) inside the EVM during its execution, it is recorded and replayable as everything is deterministic.\nSo if a smart contracts does something illegal ( spending more than its balance ) the original transaction that triggered it is invalid.\nhow consensus achieved?\nThere is no explicit consensus for smart contracts actions, it only directly concern blocks and <transactions>.\nWhile the whole answer is quite Ethereum specific, I hope it gives you a better idea of the integration of smart contracts in a <blockchain> system.","648":"The error is caused by a typo in your code.\nIt's supposed to be uint (unsigned integer) - not unit.","649":"Your createProduct method returns nothing. It is for this reason that it does not work. You can change your method like\nfunction createProduct(\n    string memory _name,\n    string memory _category,\n    int256 _price\n  ) public returns (Product) {\n      productsCount++;\n      products[productsCount] = Product(\n        productsCount,\n        _name,\n        _category,\n        _price\n      );\n    \n      emit ProductCreated(productsCount, _name, _category, _price);\n      return products[productsCount];\n}\n\nOr you can create another method that will call createProduct to create a product and then return it.","650":"CovalentHQ's API has paging built into it. You could call it for each page of 1000 results and append each page to a file using <python>.","651":"The problem is that the DEX contract was not extending to the ERC20Basic contract\nSo I had to do:\ncontract DEX is ERC20Basic\nThis solved it, but I still have problems with the purchase and sale contract.","652":"According to the transaction detail on BscScan, you're trying to send 0.1 BNB and not calling any function.\nYour contract does not have the receive(), nor the fallback() function, that would accept the incoming BNB.\nSo all you need to do is implement the receive() function. Mind the payable modifier that allows this function to accept BNB.\ncontract ERC20Basic is IERC20 {\n    \/\/ rest of your code\n\n    receive() external payable {\n        \/\/ can call the buy() function\n        buy();\n    }\n}\n\nYou can see in the screenshot that when you send 100 wei (or 100 jager in case of BNB) to the contract, the receive() function executes the buy() function and produces the Bought event log.\nHere's the whole code implemented on your contract:\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n\nfunction totalSupply() external view returns (uint256);\nfunction balanceOf(address account) external view returns (uint256);\nfunction allowance(address owner, address spender) external view returns (uint256);\n\nfunction transfer(address recipient, uint256 amount) external returns (bool);\nfunction approve(address spender, uint256 amount) external returns (bool);\nfunction transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n\nevent Transfer(address indexed from, address indexed to, uint256 value);\nevent Approval(address indexed owner, address indexed spender, uint256 value);\n    \n}\n\n\ncontract ERC20Basic is IERC20 {\n\nstring public constant name = \"ByeSeel\";\nstring public constant symbol = \"BYS\";\nuint8 public constant decimals = 18;\n\n\n\/\/event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\/\/event Transfer(address indexed from, address indexed to, uint tokens);\n\n\nmapping(address => uint256) balances;\n\nmapping(address => mapping (address => uint256)) allowed;\n\nuint256 totalSupply_ = 100 * 10 ** 18;\n\nusing SafeMath for uint256;\n\nconstructor() public {\nbalances[msg.sender] = totalSupply_;\n}\n\nfunction totalSupply() public override view returns (uint256) {\nreturn totalSupply_;\n}\n\nfunction balanceOf(address tokenOwner) public override view returns (uint256) {\n    return balances[tokenOwner];\n}\n\nfunction transfer(address receiver, uint256 numTokens) public override returns (bool) {\n    require(numTokens <= balances[msg.sender]);\n    balances[msg.sender] = balances[msg.sender].sub(numTokens);\n    balances[receiver] = balances[receiver].add(numTokens);\n    emit Transfer(msg.sender, receiver, numTokens);\n    return true;\n}\n\nfunction approve(address delegate, uint256 numTokens) public override returns (bool) {\n    allowed[msg.sender][delegate] = numTokens;\n    emit Approval(msg.sender, delegate, numTokens);\n    return true;\n}\n\nfunction allowance(address owner, address delegate) public override view returns (uint) {\n    return allowed[owner][delegate];\n}\n\nfunction transferFrom(address owner, address buyer, uint256 numTokens) public override returns (bool) {\n    require(numTokens <= balances[owner]);\n    require(numTokens <= allowed[owner][msg.sender]);\n\n    balances[owner] = balances[owner].sub(numTokens);\n    allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\n    balances[buyer] = balances[buyer].add(numTokens);\n    emit Transfer(owner, buyer, numTokens);\n    return true;\n}\n\nevent Received(address, uint);\n receive() external payable {\n emit Received(msg.sender, msg.value);\n}\n\n }\n\nlibrary SafeMath {\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n  assert(b <= a);\n  return a - b;\n}\n\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n  uint256 c = a + b;\n  assert(c >= a);\n  return c;\n} }\n\ncontract DEX {\n\n    event Bought(uint256 amount);\n    event Sold(uint256 amount);\n    \n    \n    IERC20 public token;\n    \n    constructor() public {\n        token = new ERC20Basic();\n    }\n    \n    function buy() payable public {\n        uint256 amountTobuy = msg.value;\n        uint256 dexBalance = token.balanceOf(address(this));\n        require(amountTobuy > 0, \"You need to send some Ether\");\n        require(amountTobuy <= dexBalance, \"Not enough tokens in the reserve\");\n        token.transfer(msg.sender, amountTobuy);\n        emit Bought(amountTobuy);\n    }\n    \n    function sell(uint256 amount) public {\n        require(amount > 0, \"You need to sell at least some tokens\");\n        uint256 allowance = token.allowance(msg.sender, address(this));\n        require(allowance >= amount, \"Check the token allowance\");\n        token.transferFrom(msg.sender, address(this), amount);\n        payable(msg.sender).transfer(amount);\n        emit Sold(amount);\n    }\n    \n    receive() external payable {\n        buy();\n    }\n\n}","653":"you have not set the value of COMPOSE_PROJECT_NAME,set it arbitrary value before you start your fabric network\nexport COMPOSE_PROJECT_NAME=net\n\nthis variable setting starts chaincode containers on the same bridge network as the peers","654":"Most probably you trying to deploy your smart contract like this. I am facing the same problem.\n  var instance = await BrownieToken.deployed();\n   \n  it(\"Initialize contract with correct value\", async ()=> {\n    const tokenName = await instance.name();\n    const tokenSymbol = await instance.symbol()\n    assert.equal(tokenName, \"BrownieToken\",\"Token name should be BrownieToken\");\n    assert.equal(tokenSymbol, \"BT\",\"Token symbol should be BT\");\n    \n  });\n\nWrap your deployment part in before. It's work for me hopes its works for u as well ;)\nvar instance;\nbefore(async() => {\n  instance = await BrownieToken.deployed();\n})","655":"So far, I have only been able to find justification for two of the points: channels and private data collection, which are compared in this link (Channel and Private Data Collection comparison), which contains a Table to compare channels with PDC. For now, I will keep the issue open.","656":"Please change the syntax of your DATABASE_URL to:\nDATABASE_URL=postgresql:\/\/\"username\":\"password\"@\"public-ip-pg-server\":5432\/\"database-name\"\njust change:\n\"username\" : you need to configure a new user, because the default\/admin user postgres will not work for it.\n\"password\" : password of the user\n\"public-ip-pg-server\" : the public ip address of your postgresql-server\n\"database-name\" : the name of your database\nPS: delete all \" in your syntax (;\nHere is the link to the official documentation: https:\/\/docs.chain.link\/docs\/connecting-to-a-remote-database\/","657":"publicToAddress() returns Buffer (GitHub source). And <node.js> doesn't add 0x when you're casting Buffer to hex string.\nBut you can simply concat the strings:\nconst addr = '0x' + ethUtil.publicToAddress(addrpubkey).toString('hex'); \/\/ added 0x\n\ninstead of\nconst addr = ethUtil.publicToAddress(addrpubkey).toString('hex'); \/\/ original code","658":"A very basic example of buy and sell:\npragma solidity ^0.8;\n\ncontract ERC20Basic{\n    uint256 public constant tokenPrice = 5; \/\/ 1 token for 5 wei\n    \n    function buy(uint256 _amount) external payable {\n        \/\/ e.g. the buyer wants 100 tokens, needs to send 500 wei\n        require(msg.value == _amount * tokenPrice, 'Need to send exact amount of wei');\n        \n        \/*\n         * sends the requested amount of tokens\n         * from this contract address\n         * to the buyer\n         *\/\n        transfer(msg.sender, _amount);\n    }\n    \n    function sell(uint256 _amount) external {\n        \/\/ decrement the token balance of the seller\n        balances[msg.sender] -= _amount;\n        increment the token balance of this contract\n        balances[address(this)] += _amount;\n\n        \/*\n         * don't forget to emit the transfer event\n         * so that external apps can reflect the transfer\n         *\/\n        emit Transfer(msg.sender, address(this), _amount);\n        \n        \/\/ e.g. the user is selling 100 tokens, send them 500 wei\n        payable(msg.sender).transfer(amount * tokenPrice);\n    }\n}\n\nThis will allow any user to buy or sell tokens from\/to your contract. Your contract will need to own these tokens in order to sell them to the users. Also your contract will need to have enough ETH in order to buy back tokens from the users.\nYou can expand on this code to implement\n\na contract owner that is authorized to change the price\ndifferent prices for buy and sell\nfees\nmin\/max amounts (per one transaction, per user, per day, ...)\ncalculating the amount of tokens based on the msg.value (the user won't have to have the exact amount)\netc...\n\n\nNote that my snippet is using Solidity 0.8 where integer overflow is prevented automatically. The question is using deprecated Solidity 0.4, so that you'd need to use SafeMath, check the value with require\/assert or upgrade to Solidity 0.8 to reach the same result.","659":"member means you can use any member of an org's MSP,for instance,you can use admin,peer,client.\nyou can reference https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.2\/endorsement-policies.html#endorsement-policy-syntax\nHere are a few examples of valid principals:\n\n'Org0.admin': any administrator of the Org0 MSP\n'Org1.member': any member of the Org1 MSP\n'Org1.client': any client of the Org1 MSP\n'Org1.peer': any peer of the Org1 MSP","660":"When I used other endpoints, The issue was fixed. You can try the below endpoints.\nBSC RPC Endpoints:\nhttps:\/\/data-seed-prebsc-1-s1.binance.org:8545\/\nhttps:\/\/data-seed-prebsc-2-s1.binance.org:8545\/\nhttps:\/\/data-seed-prebsc-1-s2.binance.org:8545\/\nhttps:\/\/data-seed-prebsc-2-s2.binance.org:8545\/\nhttps:\/\/data-seed-prebsc-1-s3.binance.org:8545\/\nhttps:\/\/data-seed-prebsc-2-s3.binance.org:8545\/","661":"The \"Tokens Transferred\" information comes from event logs. Most token standards define an event Transfer(address indexed from, address indexed to, uint256 value), so you can look for logs of this event in the transaction.\nEvent logs are available in getTransactionReceipt(), not the regular getTransaction().\nThe indexed modifier in the event definition means that the value is going to be available in the topics property (topics[0] is the keccak256 hash of the event signature, following the indexed values). The \"unindexed\" values are then stored in the data property - ordered according to the order of their definition.\nconst transferEventSignature = <web3>.utils.keccak256('Transfer(address,address,uint256)'); \/\/ 0xddf252...\nconst jsonAbi = [{\n    \"constant\" :true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{\"name\":\"\",\"type\":\"uint8\"}],\n    \"type\": \"function\"\n}]; \/\/ simplified JSON abi that is only able to read decimals\n\n<web3>.eth.getTransactionReceipt('0x899e7f3c2138d051eb5246850ded99d519ab65eba58e5f806245cf346ab40e83').then(async (result) => {\n    for (const log of result.logs) {\n        if (log.topics[0] !== transferEventSignature) {\n            continue; \/\/ only interested in Transfer events\n        }\n\n        const from = <web3>.eth.abi.decodeParameter('address', log.topics[1]);\n        const to = <web3>.eth.abi.decodeParameter('address', log.topics[2]);\n        const value = <web3>.eth.abi.decodeParameter('uint256', log.data);\n        const tokenContractAddress = log.address;\n\n        const contractInstance = new <web3>.eth.Contract(jsonAbi, tokenContractAddress);\n        const decimals = await contractInstance.methods.decimals().call();\n\n        console.log('From: ', from);\n        console.log('To: ', to);\n        console.log('Value: ', value);\n        console.log('Token contract: ', tokenContractAddress);\n        console.log('Token decimals: ', decimals);\n        console.log('---');\n    }\n});\n\nOutput:\nFrom:  0xC6A93610eCa5509E66f9B2a95A5ed1d576cC9b7d\nTo:  0xE437fFf464c6FF2AA5aD5c15B4CCAD98DF38cF52\nValue:  31596864050517135\nToken contract:  0x78F1A99238109C4B834Ac100d1dfCf14e3fC321C\nToken decimals:  9\n---\nFrom:  0xE437fFf464c6FF2AA5aD5c15B4CCAD98DF38cF52\nTo:  0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\nValue:  4064578781674512\nToken contract:  0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\nToken decimals:  18\n---\nFrom:  0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\nTo:  0xC6A93610eCa5509E66f9B2a95A5ed1d576cC9b7d\nValue:  2552379452401563824\nToken contract:  0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\nToken decimals:  18\n\n\nNote: Some token implementations are incorrect (i.e. not following the token standards) and don't mark the event parameters as indexed. In this case, the topics[0] is still the same, but the addresses from and to are not present in the topics, but you'll have to parse them from the data field. Length of an address is 64 hex characters (prepended with zeros before the actual 40-char address).","662":"When your AnotherContract executes the approve() function in MyToken, the msg.sender in MyToken is AnotherContract - not the original transaction sender.\nWhich effectively approves AnotherContract's tokens to be spent by _spender.\n\nUnless the MyToken has a way to delegate the approval (e.g. by using a deprecated tx.origin instead of msg.sender, which introdues a security flaw), the user will have to execute the approval manually, and not through your external contract.\nMany ERC-20 implementations use this approach for security purposes. For example to prevent a situation, where a scammer would persuade a user to execute their malicious function, because the user would think they are getting an airdrop.\n\/\/ function name suggests that the caller is going to receive an airdrop\nfunction claimAirdrop() external {\n     \/*\n      * fortunately, this won't work\n      * and the tx sender can't approve the scammer to spend their tokens this way\n      *\/\n    USDTcontract.approve(scammer, 1000000);\n}","663":"The error was produced by <python> SDK function chaincode_query.\nI have oppened an issue in the <hyperledger> Fabric <python> SDK. However, to solve the issue I am using chaincode_invoke instead of chaincode_query.\nchaincode_invoke\nNow, I can generate and retrieve logs from [get] method.\nlog\n... and also verify it:\nbase64 of the log","664":null,"665":"By default you don't need to specify the --network, truffle will automatically connect to Ganache. On the other hand, if you want to have the name ganache configured as a network, you will have to modify your truffle-config.js file as follows:\nnetworks: {\n    \/\/...,\n    ganache: {\n        host: \"127.0.0.1\",     \n        port: YOUR_GANACHE_PORT,                       \/\/ (default: 5777)\n        network_id: \"YOUR_GANACHE_NETWORK_ID\",         \/\/ (default: *)\n    },\n    \/\/...\n}\n\nCheck this picture to see Ganache port and network_id","666":"Security, including non-repudiation concerns, is a question of striking a balance between safety and convenience. The more secure you make a system, the more inconvenient it becomes, and vice versa.\nA sufficiently secure system could be so inconvenient that it scares away users. Thus, security analysis and threat modelling should involve both technical and business stakeholders. Making a maximally secure system that no-one wants to use solves no problems if your company goes out of business from lack of customers.\nThe OP concern about order verification via email or SMS is a good example of this conundrum.\nSpecifically regarding order verification, you might consider a 'batching' feature where super users can create batches of orders that they only have to verify with a single SMS or email.\nThe disadvantage of that idea is that you run the risk of users misunderstanding how the feature works. If it's unclear to users that they have to submit the batch at the end of the working day, they may believe that they've submitted many orders, where in fact, they've submitted none.\nThis strikes me as mostly a UX problem, more than a technical problem.\nAnother option is to ask each user to sign their orders using PKI. Users should sign with their private key, but this again becomes a usability and infrastructure challenge.\nWork with all stakeholders to find an acceptable solution that solves the right problems.","667":"A serious business (such as a bank) is unlikely to use a stale public key from an old state of a DID. I'd imagine they will be using a trust worthy DID resolver, or run their own resolver.\n\nA serious business would mandate 2FA\/MFA (2\/Multi Factor Authentication) for any serious transaction. Assuming you don't have 2FA\/MFA setup for your bank account, someone stealing your private key is like someone stealing your bank account password, they can do what you can, that is by design.\n\nRecovery\/revoke mechanism depends on the DID method. For sidetree based methods, there is the concept of a recovery operation that you can perform using a \"master\" key. You are meant to keep this key very securely and never use it for your day to day activities.\n\n\nTo be clear, \"DID recovery\" in my opinion is one of the (if not the) most challenging problem\/barrier to DID's mass adoption, and remains to be \"solved\" completely.","668":"The selfbalance opcode was implemented in the Istanbul chain fork (source).\nYou need to allow the fork in your genesis.json\n{\n  \"config\": {\n    \"istanbulBlock\": 0,","669":null,"670":"The target contract defines uint as the argument type, but it's just an alias uint256. ABI encode methods don't automatically convert the aliases, so you need to change it in your code.\n\/\/ `uint256` instead of `uint`\nabi.encodeWithSignature(\"deposit(uint256)\",amount)","671":"The transaction has been reverted to the initial state.\n\nThis is the important part of the error message in your case.\n\nNote: The called function should be payable if you send value\n\nThis is just a note, possibly because this combination often happens. But since your function and transaction doesn't send any value, it doesn't apply to your case.\n\nround.add(1);\n\nThis (failing) snippet suggests, that there's supposed to be a library used for uint, but it's not defined. I'm gonna go with the SameMath library, because of the .add() function name and the use on uint. But in theory, it could be any library, SafeMath is just the most probable option in this context.\nMind that round.add(1); (using SafeMath) returns the value of round incremented by 1, but it doesn't store the (incremented) value anywhere. This looks like a typo and the real usage should be round = round.add(1);\nYour code doesn't show any usage of the SafeMath library, but also doesn't show the Solidity version, so I'm going to divide my answer into 3 parts.\n\nYou're using Solidity 0.8+.\nSameMath is not needed, because integer overflow is handled on a lower level, and you can safely replace\n\/\/ even with correctly imported SafeMath, it doesn't update the stored value\nround.add(1);\n\nto\n\/\/ updates the stored value\nround++;\n\n\nYou're using Solidity 0.7 or older, and SafeMath for uint256 (not uint)\nChange the definition\nuint public round;\n\nto\nuint256 public round;\n\nThis way, SafeMath will be used for round and it will allow to use the function .add().\nMind that you might want to also store the incremented value, see the bold paragraph with example above.\n\nYou're using Solidity 0.7 or older, and not using SafeMath at all.\nYou need to import the SafeMath library and then make changes described in the point 2.","672":"Here is some implementation of burn:\n\n    pub fn burn(&mut self, amount: U128String){\n        let balance = self.internal_unwrap_balance_of(env::predecessor_account_id());\n        assert!(balance>=amount);\n        self.internal_update_account(&env::predecessor_account_id(), balance - amount);\n        assert!(self.total_supply>=amount);\n        self.total_supply -= amount;\n    }\n\n    \/\/\/ Inner method to save the given account for a given account ID.\n    \/\/\/ If the account balance is 0, the account is deleted instead to release storage.\n    pub fn internal_update_account(&mut self, account_id: &AccountId, balance: u128) {\n        if balance == 0 {\n            self.accounts.remove(account_id);\n        } else {\n            self.accounts.insert(account_id, &balance); \/\/insert_or_update\n        }\n    }\n\n    pub fn internal_unwrap_balance_of(&self, account_id: &AccountId) -> Balance {\n        match self.accounts.get(&account_id) {\n            Some(balance) => balance,\n            None => 0,\n        }\n    }\n\nwe're using something similar here: https:\/\/github.com\/alpha-fi\/cheddar\/blob\/master\/cheddar\/src\/internal.rs","673":"The Windows instructions were all written for Git Bash.  I believe people have also used WSL successfully, but there's no documentation specifically for WSL.","674":"I finally found a solution for a second problem (with connection to network on another host).\nYou have to edit your \/etc\/hosts file, and translate orderer and peers hostnames into IP address of machine, where network is deployed.\n\nOn Linux:\n\nOpen \/etc\/hosts file in text-editor with admin privileges\nAdd necessary hosts and IP translations\nSave file\n\n\nOn Windows:\n\nOpen start menu\nType notepad and press ctrl+shift+enter, to open notepad in User Access Mode\nFrom notepad app enter to directory: c:\\Windows\\System32\\drivers\\etc\nFilter all file types, then open the hosts file\nAdd necessary hosts and IP translations\nSave file","675":null,"676":"You need to use the below\nTake note of\n items[itemIndex]._state.push(s);\nvs what you're currently using which is\n   state = State.Delivered;\n        items[itemIndex]._state = state;\n\nfunction triggerPayment(uint _itemIndex,State s) public payable {\n        require(items[_itemIndex]._itemPrice == msg.value, \"Only full payments accepted\");\n        require(items[_itemIndex]._state == State.Created, \"Item is further in the chain\");\n        \n        items[itemIndex]._state.push(s);\n        \n        emit SupplyChainStep(itemIndex, uint(items[itemIndex]._state));\n\n    }","677":"For making a contract call from another contract you need to:\n\nCreate an interface on the caller contract with the entry points of your interest of the to-be-called contract (ie MyRemoteContract):\n\n\ncontract MyRemoteContract =\n  entrypoint my_remote_entrypoint : (int) => bool\n  entrypoint another_remote_entrypoint : (address, int) => bool\n\n\n\nManage the other contract inside your caller contract (ie: keeping it in your state)\n\n\ncontract MyCallerContract = \n  record state = {\n    some_field : address,\n    remote_contract_instance : MyRemoteContract }\n\n\n\nFinally when you are doing your init you can send by parameter your remote contract address to instantiate on your caller contract\n\n\nstateful entrypoint init( remote_contract_instance_param : MyRemoteContract) : state = {\n  remote_contract_instance = remote_contract_instance_param }\n\n\n\nWhen calling to this contract (caller) you will need to tell him the address (ct_....) of the instance of the deployed contract\n\nFrom now own your contract will be able to call any remote entrypoint you got on the interface.\n\n\n\nstateful entrypoint try_remote_call(value: int) =\n  state.token.my_remote_entrypoint(value)\n\n\nSome side note, be careful when your remote contract does Call.caller uses because it won't be the actual address but the contract address as caller.","678":"You can use just the _transfer() function, see my buy() function for an example of implementation.\nThe approvals for sale can be done using a custom mapping - in my example tokenIdToPrice. If the value is non-zero, the token ID (mapping key) is for sale.\nThis is a basic code that allows selling an NTF. Feel free to expand on my code to allow \"give away for free\", \"whitelist buyers\" or any other feature.\npragma solidity ^0.8.4;\n\nimport 'https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC721\/ERC721.sol';\n\ncontract MyToken is ERC721 {\n    event NftBought(address _seller, address _buyer, uint256 _price);\n\n    mapping (uint256 => uint256) public tokenIdToPrice;\n\n    constructor() ERC721('MyToken', 'MyT') {\n        _mint(msg.sender, 1);\n    }\n\n    function allowBuy(uint256 _tokenId, uint256 _price) external {\n        require(msg.sender == ownerOf(_tokenId), 'Not owner of this token');\n        require(_price > 0, 'Price zero');\n        tokenIdToPrice[_tokenId] = _price;\n    }\n\n    function disallowBuy(uint256 _tokenId) external {\n        require(msg.sender == ownerOf(_tokenId), 'Not owner of this token');\n        tokenIdToPrice[_tokenId] = 0;\n    }\n    \n    function buy(uint256 _tokenId) external payable {\n        uint256 price = tokenIdToPrice[_tokenId];\n        require(price > 0, 'This token is not for sale');\n        require(msg.value == price, 'Incorrect value');\n        \n        address seller = ownerOf(_tokenId);\n        _transfer(seller, msg.sender, _tokenId);\n        tokenIdToPrice[_tokenId] = 0; \/\/ not for sale anymore\n        payable(seller).transfer(msg.value); \/\/ send the ETH to the seller\n\n        emit NftBought(seller, msg.sender, msg.value);\n    }\n}\n\nHow to simulate the sale:\n\nThe contract deployer (msg.sender) gets token ID 1.\nExecute allowBuy(1, 2) that will allow anyone to buy token ID 1 for 2 wei.\nFrom a second address, execute buy(1) sending along 2 wei, to buy the token ID 1.\nCall (the parent ERC721) function ownerOf(1) to validate that the owner is now the second address.","679":"There is second parameter. Example.\nbitcoin-cli estimatesmartfee 6 ECONOMICAL","680":null,"681":"The website to quickly search for a signature of a smart contract method or event:\nhttps:\/\/b32.vecha.in\nThe collection of public available smart contracts JSON ABI are hosted on Github (https:\/\/github.com\/vechain\/b32) and you can make a \"pull request\" to submit your own smart contract ABI.\nBonus points: If your ABI JSON is submitted to the above mentioned repo, <transactions> related to your smart contract call can be decoded on-the-fly on the VeChain official explorer (https:\/\/explore.vechain.org)","682":"What I'm receiving is I guess result of selling 1 DAI for WETH\n\nIt's \"how much WETH you can buy with 1 DAI\". You can easily convert this number to \"how much DAI you need to buy 1 WETH\" by calculating (1 \/ X).\nconsole.log(\"Need \" + (1 \/ sellTrade.executionPrice.toSignificant(6)) + \" DAI to get 1 WETH\");\n\n1 \/ 0.000366619 = 2727.6273188241744","683":"Assuming _rOwned holds the actual token balance of each address:\nYou're correctly emitting the Transfer events, but need to update the token balances as well.\n\nThis line sets the _msgSender() balance to _tTotal, which you don't want according to your description.\n_rOwned[_msgSender()] = _rTotal; \/\/ incorrect\n\nYou want them to have the remaining _tTotransfer.\n\nAnd the same goes for other initial owners\n_rOwned[_msgSender()] = _tTotransfer; \/\/ replace the above line to this\nemit Transfer(address(0), _msgSender(), _tTotransfer);\n\n_rOwned[_devsWallet] = _tToDevs;\nemit Transfer(address(0), _devsWallet, _tToDevs);\n\nrOwned[_marketingWallet] = _tToMarketing;\nemit Transfer(address(0), _marketingWallet, _tToMarketing);\n\nrOwned[_apesWallet] = _tToApes;\nemit Transfer(address(0), _apesWallet, _tToApes);","684":"TL;DR:\nWith Chainlink, if you can write a program that can do it, you can do it.\n\nLonger answer:\nThis is a proof of concept for an IPFS chainlink external adapter.\nWhat you'd want to do, is connect your contract to a node that has a job that:\n\nCalls the IPFS API from your contract\nReturns the size of the file from the hash.\n\nYes, this is possible. No, someone hasn't done this before. You'd be the first. Here is more information on building and using external adapters.","685":"It's too wasteful to do a consensus round for each transaction. Instead, the Raft leader aggregates several <transactions> into a batch, and then creates a block from that batch, using a block cutter object.\nThen, the Raft leader initiates a consensus round to make the block be replicated to all followers via the Raft protocol.","686":null,"687":"Solidity can't query off-chain resources on its own. But you can use an oracle that will deliver the data to your contract.\nA widely-used oracle service is Chainlink. Your contract queries their contract, pays with LINK for the query, and one of the Chanlink providers call your (predefined) callback function with the desired data.\nOr you can build a simple oracle service on your own. Your off-chain app listens to specific <transactions> (from&to a predefined address in a predefined format). When this specific transaction is send, the off-chain app retrieves the off-chain data and sends a transaction (from a connected account) to your contract, passing the data.","688":"If you want to handle the data isolation between both systems, and if you do not mind them sharing the same network topology, then try channels.\nBut if you want to keep the systems seperate and want to establish two different networks, take a look at <hyperledger> Cactus. It does way more than you want.","689":"Is there any way to predict this function?\n\nA miner can publish their block number with a timestamp that fits to<geth>er with other criteria:\n\ndifficulty is given for some time\ncoinbase is given for even longer period of time\nmsg.sender (the real transaction sender and signer) can be one of the miner's addresses\n\nThere's no way how to generate truly indeterminable random number on-chain. But you can use an oracle that returns an off-chain generated \"random\" number.","690":"The problem is located at the constructor:\nconstructor() public Ownable() {\n    setPublicChainlinkToken();\n}\n\nWhen you run a node on a public-chain, and deploy a totally new LINKToken contract as the way to transferAndCall the service provided by your own node, do remember to replace the line:  setPublicChainlinkToken() to:\n    \/\/ set the Oracle contract address\n    setChainlinkOracle(YOUR_ORACLE_CONTRACT_ADDRESS); \n    \/\/ set LINKToken contract address\n    setChainlinkToken(YOUR_LINKTOKEN_CONTRACT_ADDRESS);\n\nThen you should be good to go. And remember that you should deposit some LINK token before invoking the function to get service from your Chainlink node!","691":null,"692":"When ContractB calls ContractA, the msg.sender in ContractA is ContractB address.\nBased on the code and the error message, the owner (0x123) didn't allow ContractB to spend their tokens.\nYou need to set the value of allowed[<owner>][<ContractB>] to be at least the amount of tokens that you want to send.\nMost likely you have an approve() function (defined in the token standard) that you can use. In the linked example, the caller of the function would be the owner, the spender would be the ContractB and the value would be any value equal or higher than the amount of tokens that you want to send (mind the decimals).","693":"Changing the value of <web3>.eth.defaultAccount doesn't work for me.\nBut configuring from in the truffle.js works.\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"127.0.0.1\",\n      port: 7545,\n      network_id: \"*\", \n      from: \"0x12345678\"\n    }\n  }\n};","694":null,"695":"I know this comes late but it can help some other people.\nStarport installation requires write permission to the \/usr\/local\/bin\/ directory. If you get such error, do this\nrun\ncurl https:\/\/get.starport.network\/starport | bash\n\nthen run\nsudo mv starport \/usr\/local\/bin\/\n\nto move to the local bin directory with sudo.","696":"Assuming that df is the dataframe you presented, it's enough to select proper slice and multiply values by -1:\ndf.loc[df['Status'] == 'Sending', 'Value'] *= -1 \n\nAnd then grouping:\ndf = df.groupby(['Symbol']).sum().reset_index()\n\nThe looping in pandas is not a good idea \u00e2\u0080\u0093 you are able to perform operations in a more optimal, vectorised manner, so try to avoid that.","697":"You can fix this issue by doing\n\n$ npm install aeproject-utils prompts aeproject-logger","698":"Not for daedalus wallet, but you check this if it's helpful\nhttps:\/\/docs.cardano.org\/projects\/cardano-serialization-lib\/en\/latest\/getting-started\/generating-keys.html","699":null,"700":"Unfortunately Quorum Maker is no longer maintained. Check out Cakeshop or alternatively if you only want metrics, then you can set up a Grafana dashboard. We'll be adding a new Grafana template very soon!","701":"Yes, check the current blockNumber (use eth.blockNumber in the <geth> console).\nNote that if the node is out of sync then eth.syncing should give more info.","702":null,"703":null,"704":null,"705":null,"706":null,"707":"It's the other way around.\n\nTransaction is created by a client application (in a form on JSON object) and signed by the sender's private key\nsent to a node\nand broadcasted to the network by the node, where it waits in the mempool (list of <transactions> not yet mined) to be mined.\nA miner includes it in a block\nIf the transaction recipient is this smart contract, miner of the transaction executes it to be able to calculate its state changes. Also, after it's included in a block, all nodes validate and project the state changes on their side.\n\nSo to sum it up: This code doesn't create <transactions>. But it's executed when a transaction to a contract that contains this code is mined.\n\nExample:\nYour code is deployed on address 0x123. A sender sends a transaction to your contract 0x123, with data field (of the transaction) stating that they want to execute the function voteForCandidate() with bytes32 candidate having value 0x01.\nWhen the transaction gets mined, the miner executes the contract in their EVM instance and calculates the state changes, that result in incrementing storage value of votesReceived[0x01]. Then broadcasts this information (alto<geth>er with all other <transactions> that they mined) to the network so that every node knows that votesReceived[0x01] on address 0x123 has been changed in this transaction.","708":null,"709":"who is default owner of the contract\n\nBy default, contracts are not owned by anyone.\n\nCan anyone else use this contract and this public function to approve spender amounts w\/o any restrictions?\n\nYou need to read internal _approve() function logic to understand how it works and you will find how it works and what are the restrictions.\n\nSo, who can execute smart contract public\/external functions?\n\nAnyone.\n\nI know I can use Ownable.sol smart contract, which allows to add onlyOwner,\n\nThis is not related to approve(). You need to also read ERC-20 spec and first understand what approve() does.","710":"Not possible by design.\nThe Metamask JS API (implementing Ethereum provider API) doesn't allow importing an account (or a read-only address) programatically.\nSee https:\/\/docs.metamask.io\/guide\/#account-management for more info.","711":"To invoke one chaincode from another chaincode, you need to make sure that\nthat both chaincodes are installed on each endorsing peer, after that you can do chaincode to chaincode invocation.\nChaincode to chaincode invocation be pretty straight forward, here is an example:\n\/\/ Invoke\nfunc (am *accountManagement) Invoke(stub shim.ChaincodeStubInterface) \npeer.Response {\nactionName, params := stub.GetFunctionAndParameters()\n\nif actionName == \"callAnotherCC\" {\n    chainCodeArgs := util.ToChaincodeArgs(\"anotherCCFunc\", \"paramA\")\n    response := stub.InvokeChaincode(\"anotherCCName\", chainCodeArgs, \"channelName\")\n\n    if response.Status != shim.OK {\n       return shim.Error(response.Message)\n    }\n    return shim.Success(nil)\n}\n\n\/\/ NOTE: This is an example, hence assuming only valid call is to call another chaincode\nreturn shim.Error(fmt.Sprintf(\"[ERROR] No <%s> action defined\", actionName))\n}\n\nThis example is from the implementation of previous shim library, you can update this according to the latest shim library","712":"Most of the time a RemainingScaleBytesNotEmptyException is raised, it is type registry related. In a Substrate runtime (like Kusama, Polkadot, etc) specific types are defined, which are not (yet) exposed in the metadata, so libraries have to include a decomposition to primitives of those types.\nSome pointers for troubleshooting:\n\nThe wrong type registry is being used. Most of the time py-substrate-interface can auto-discover which chain its talking to, so only the url have to be specified (https:\/\/github.com\/polkascan\/py-substrate-interface#autodiscover-mode). But with custom runtimes or development properties like type_registry_preset and ss58_format need to be set manually\n\nBecause of a recent runtime upgrade the local type registry is out-dated and needs to be updated. This can be achieved by updating the py-scale-codec package, run the substrate.reload_type_registry() function or always use the remote type registries with the use_remote_preset kwarg (See https:\/\/github.com\/polkascan\/py-substrate-interface#keeping-type-registry-presets-up-to-date)\n\nWhen developing a custom runtime, introduced types can be added in a custom JSON file in the format like https:\/\/github.com\/polkascan\/py-scale-codec\/blob\/master\/scalecodec\/type_registry\/rococo.json and provided during init (See https:\/\/github.com\/polkascan\/py-substrate-interface#substrate-node-template)","713":null,"714":"You can run a full node (or connect to an external provider that runs a full node, but most of them have some rate limits and some don't allow subscriptions) and then query the JSON-RPC API.\nA widely used wrapper for the JSON-RPC API calls is <web3>js. You can use their <web3>.eth library because of the compatilibity between Ethereum and BSC.\nIf you want to download all <transactions>, you'll need to loop through all blocks from 1 to latest using the getBlock() method, which also returns all <transactions> in this particular block.\nFor subscribing to new <transactions>, you'll subscribe to the newBlockHeaders event, from which you can get the block number and query the block (see previous paragraph).","715":"In the config.yaml in the peers section, you specified only a single peer peer0.producer.food.com, add peer0.processor.food.com there as well and sdk won't ignore it anymore. To understand why it's ignored you can enable debug logs in the SDK.","716":"The good news is: All your problems are already solved. The bad news (for you): Without <blockchain>.\nI'm also not smart which this is smart in any way, but typically that's the way you want to go:\n\nTake a hash over all the documents you want to sign\n\nLooking at the public key <cryptography> (https:\/\/en.wikipedia.org\/wiki\/Public-key_<cryptography>), sign the hash with your private key. Signing the hash will proof the authenticy later.\n\nPut the hash in any <blockchain> you want\n\n\nBy the way: There are a lot of Certificate Authorities that would also sign your hash from 2) without any high engery-consuming smart and inefficient <blockchain> stuff. Just saying.","717":"For the first paragraph of your question\nreference https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-1.4\/orderer\/ordering_service.html#orderers-and-the-transaction-flow \u00ef\u00bc\u008cwe saimple divide tx flow into two step,proposal and ordering,when you query chaincode, just need proposl without involving ordering,after proposal success, you will get result.\nFor the second paragraph of your question\nIn the fabric v1.4.2 sources code,which at peer\/chaincode\/common.go,the function chaincodeInvokeOrQuery is used as chaicode query or invoke and this method will call method ChaincodeInvokeOrQuery\nin the comment of method ChaincodeInvokeOrQuery\n\/\/ ChaincodeInvokeOrQuery invokes or queries the chaincode. If successful, the\n\/\/ INVOKE form prints the ProposalResponse to STDOUT, and the QUERY form prints\n\/\/ the query result on STDOUT. \n\nthis means if you call chaincode query in cli or terminal,It will output the result(asset value) On STDOUT,and the chaincode invoke will output ProposalResponse\nbut you can observe that ChaincodeInvokeOrQuery return same format result(ProposalResponse) what ever you call query or invoke,this means the result of query include the endorsing signature as well,but we choose not to output it.\nfunc ChaincodeInvokeOrQuery(\n    spec *pb.ChaincodeSpec,\n    cID string,\n    txID string,\n    invoke bool,\n    signer msp.SigningIdentity,\n    certificate tls.Certificate,\n    endorserClients []pb.EndorserClient,\n    deliverClients []api.PeerDeliverClient,\n    bc common.BroadcastClient,\n) (*pb.ProposalResponse, error) {\n    \/\/ Build the ChaincodeInvocationSpec message\n    invocation := &pb.ChaincodeInvocationSpec{ChaincodeSpec: spec}\n\n    creator, err := signer.Serialize()\n    if err != nil {\n        return nil, errors.WithMessage(err, fmt.Sprintf(\"error serializing identity for %s\", signer.GetIdentifier()))\n    }\n\n    funcName := \"invoke\"\n    if !invoke {\n        funcName = \"query\"\n    }\n\n    \/\/ extract the transient field if it exists\n    var tMap map[string][]byte\n    if transient != \"\" {\n        if err := json.Unmarshal([]byte(transient), &tMap); err != nil {\n            return nil, errors.Wrap(err, \"error parsing transient string\")\n        }\n    }\n\n    prop, txid, err := putils.CreateChaincodeProposalWithTxIDAndTransient(pcommon.HeaderType_ENDORSER_TRANSACTION, cID, invocation, creator, txID, tMap)\n    if err != nil {\n        return nil, errors.WithMessage(err, fmt.Sprintf(\"error creating proposal for %s\", funcName))\n    }\n\n    signedProp, err := putils.GetSignedProposal(prop, signer)\n    if err != nil {\n        return nil, errors.WithMessage(err, fmt.Sprintf(\"error creating signed proposal for %s\", funcName))\n    }\n    var responses []*pb.ProposalResponse\n    for _, endorser := range endorserClients {\n        proposalResp, err := endorser.ProcessProposal(context.Background(), signedProp)\n        if err != nil {\n            return nil, errors.WithMessage(err, fmt.Sprintf(\"error endorsing %s\", funcName))\n        }\n        responses = append(responses, proposalResp)\n    }\n\n    if len(responses) == 0 {\n        \/\/ this should only happen if some new code has introduced a bug\n        return nil, errors.New(\"no proposal responses received - this might indicate a bug\")\n    }\n    \/\/ all responses will be checked when the signed transaction is created.\n    \/\/ for now, just set this so we check the first response's status\n    proposalResp := responses[0]\n   \n    \/\/till here,query and invoke almost same,if invoke ,it will continue execution \n      ordering step,if query ,it will return \n\n    if invoke {\n        if proposalResp != nil {\n            if proposalResp.Response.Status >= shim.ERRORTHRESHOLD {\n                return proposalResp, nil\n            }\n            \/\/ assemble a signed transaction (it's an Envelope message)\n            env, err := putils.CreateSignedTx(prop, signer, responses...)\n            if err != nil {\n                return proposalResp, errors.WithMessage(err, \"could not assemble transaction\")\n            }\n            var dg *deliverGroup\n            var ctx context.Context\n            if waitForEvent {\n                var cancelFunc context.CancelFunc\n                ctx, cancelFunc = context.WithTimeout(context.Background(), waitForEventTimeout)\n                defer cancelFunc()\n\n                dg = newDeliverGroup(deliverClients, peerAddresses, certificate, channelID, txid)\n                \/\/ connect to deliver service on all peers\n                err := dg.Connect(ctx)\n                if err != nil {\n                    return nil, err\n                }\n            }\n\n            \/\/ send the envelope for ordering\n            if err = bc.Send(env); err != nil {\n                return proposalResp, errors.WithMessage(err, fmt.Sprintf(\"error sending transaction for %s\", funcName))\n            }\n\n            if dg != nil && ctx != nil {\n                \/\/ wait for event that contains the txid from all peers\n                err = dg.Wait(ctx)\n                if err != nil {\n                    return nil, err\n                }\n            }\n        }\n    }\n\n    return proposalResp, nil\n}","718":"After a research in the chainlink-docs, I find a solution.\nI added the following to the devDependencies:\n  \"devDependencies\": {\n    \"@chainlink\/belt\": \"^0.0.1\",\n    \"@chainlink\/test-helpers\": \"0.0.5\",\n    \"@openzeppelin\/test-helpers\": \"^0.5.6\",\n    \"chai\": \"^4.2.0\",\n    \"depcheck\": \"^0.9.1\",\n    \"solhint\": \"^2.1.0\",\n    \"truffle\": \"^5.1.5\",\n    \"truffle-plugin-verify\": \"^0.5.7\"\n  }\n\ninstalled it again with npm install and tried it again:\nkevin@kevin-desktop:~\/websites\/html\/dynamic-nft-example$ npm run verify\n\n> dynamic-nft-example@1.0.0 verify\n> truffle run verify DynamicNft --network kovan --license ISC\n\nVerifying DynamicNft\nPass - Verified: https:\/\/kovan.etherscan.io\/address\/0xFbF0C9F50cd04a167FF4287BF8439006EB4c670C#contracts\nSuccessfully verified 1 contract(s).","719":"It is used by generic-seeder in it's PushVersion function, which corresponds to the \"version\" message used in handshakes between new bitcoin peers.\nFrom the bitcoin wiki:\n\nnonce     uint64_t: Node random nonce, randomly generated every time a version packet is sent. This nonce is used to detect connections to self.\n\nThe PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime) routine is the equivalent routine in the Bitcoin source:\nvoid PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime)\n{\n<...>\n    uint64_t nonce = pnode.GetLocalNonce();\n<...>\n    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n<...>\n}","720":"Account is an immutable class, created using NamedTuple.\nThe only way to update its attributes is to create a new instance.","721":"Nodes can broadcast their presence on a predefined port and in a predefined message format. Other nodes can be listening on this port, so that they \"catch\" the message from a new node (broadcasting their presence).\nSome clients also have a predefined list of trusted nodes that are usually maintained by the network core development team or some other trusted groups, so that the client doesn't have to wait for other nodes to broadcast their presence and can communicate with these trusted nodes right away.","722":"1. Can the owner of the NFT modify information on the NFT after creating it? Or can the information on an NFT only be written once?\n2. Can subsequent buyers of the same NFT append new information on the NFT?\n\nAnswer to both questions is: It depends on your implementation.\nToken standards (e.g. ERC-721) only define an interface and few other rules (such as when to emit events). How to implement the interface, that's up to you.\n\nAn example that validates whether the sender is current owner of the token. And only if they are, the contract allows the change:\npragma solidity ^0.8.3;\n\ncontract Test {\n    mapping (uint256 => address) tokenIdToOwner;\n    \n    function changeCountry(uint256 _tokenId, string _country) external {\n        require(tokenIdToOwner[_tokenId] == msg.sender, 'Only current owner can change it');\n        \/\/ TODO rest of your implementation\n    }\n}","723":"It's two separate <blockchain>s - Ethereum and BSC.\n\nIn case of the Ethereum chain, the ETH are the native currency\nBut on BSC, the \"ETH\" is actually just a token\n\nSo Binance holds some large amount of both assets. If you send them the native ETH, they store it in their native ETH wallet. If you then withdraw the \"ETH\" BSC token, they send it from their BSC wallet. And they also allow interchangeability to some extent.","724":null,"725":"IPFS is immutable, meaning when you add your directory along with the files, the directory gets a unique CID based on the contents of the directory. So in a sense, nobody can modify it, not even you, because it's immutable. I believe this confusion can be resolved with more background on how IPFS works.\nWhen you add things to IPFS each file is hashed, and given a CID. The same is true for directories, but their CID can more easily be understood as a sum of the contents of the directory. So if any files in the directory are updated, added, or deleted, the directory gets a new CID.\nUnderstanding this, if someone else added the exact same content in the exact same way, they'd end up with the exact same CID! With this, if two people added the same CID, and a third person requested that file (or directory), both nodes would be able to serve the data, as we know it's exactly the same. The same is true if you simply shared your CID and another node pinned it, both nodes would have the same data, so if anyone requested it, both nodes would be able to serve it.\nSo your local copy, cannot be edited by anyone. In a sense, if you're relying on the IPFS CID as the address of your data, not even by you! This is why IPFS is typically referred to as \"immutable\", because any data you request via an IPFS CID will always be the same. If you change any of the data, you'll get a new CID.\nMore info can be found here: Content Addressing & Immutability\nIf you read all this and thought \"well what if I want mutable data?\", I'd recommend looking into IPNS and possibly ipfs-sync if you're looking for a tool to automatically update IPNS for you.","726":"\"Memorizing\" the hashes of previous blocks is not workable, because a new node must be able to start from scratch (with no memory) and validate the previous blocks on its own.  It should not have to \"trust\" other nodes.  That is a major design goal of <blockchain>.\nThe hash difficulty is necessary to limit the speed at which new blocks can be created worldwide (for example one new block worldwide every 10 minutes).  If they could be created very quickly then a malicious node could create an incorrect (but valid looking) chain that is the longest of any other node's. The rule is that the longest chain is accepted.\nEDIT:\nJust to expand... <blockchain> design anticipates that occasionally a small number (say, 1 or 2) of malicious blocks could be added to the \"longest\" chain and would be accepted as valid temporarily. It is expected that the non-malicious majority of hashing power worldwide will eventually come up with an even longer chain that discards the malicious block(s) (performing a co-called \"<blockchain> rewrite\").\nThat is why it is recommended to wait for a certain number of blocks to be added (so-called \"confirmations\", e.g. 6) before accepting a new block as correct (because it is extremely unlikely to ever be rewritten at that point). It's also why the so-called \"51%\" attack (meaning the majority of worldwide hashing power is conspiring malliciously) is a vulnerability.","727":null,"728":"If you can provide some log file to demonstrate your use case would be better.\nSend & Receive is typically a one-direction communication, one sends and one receives. If you are looking for a confirm receive, you can try to use method sendAndReceive, which\nSerializes and queues the given payload object for sending to the counterparty.\nSuspends until a response is received, which must be of the given R type.\n\nReceive method itself is a blocking method, so if your flow successfully finishes. it means the receive method successfully receive what it is looking for.\nBut again, it would be much better if you can share your log and the elaborate on your questions a bit.","729":"Judging from the examples in the btcdeb documentation, you should expect to see a valid script message when starting btcdeb, if the script validates correctly.\n\nbtcdeb will still allow you to step through the script with the step command, but because the script is invalid in the first place, this may not tell you much, except that it decides to halt after reaching <<< P2SH script >>>, thinking that is the end of the script.\nThe most obvious fix should be to remove OP_UNKNOWN, which represents an opcode that was not understood by btcdeb, but there are probably other errors lurking that prevent the script from validating also. You could try removing the end of the script, and building it back up incrementally, testing with the debugger, until it works.","730":"instead of:\nprint(contract.functions.greet().call())\n\ntry:\ncallGreeting = contract.functions.greet().call()\nprint(callGreeting)","731":"Short answer: Currently not possible using Truffle. But if you know what you're doing, you could keep the storage with more low-level approach.\n\nBy running truffle migrate you are usually running a javascript code that deploys the Solidity contract using the standard CREATE EVM opcode. So every time you're running truffle migrate, Truffle deploys the contract to a new address that has empty storage slots.\nEven though it's possible to redeploy a smart contract to an already used address using CREATE2 opcode (and to keep the original storage data), Truffle currently doesn't support this option.\nNote: The --reset option only runs all migrations from the beginning in case of previous failure, but has no effect on the storage or the contract address.\n\nYou could achieve this goal (keeping the storage) by setting the (contract deployment) transaction data to an instruction to deploy to an address that already contains a self-destruct contract. But it's much more low-level approach than Truffle currently allows. If you want to learn more about this technique, these articles would be a good start:\n\nhttps:\/\/blog.ricmoo.com\/wisps-the-magical-world-of-create2-5c2177027604\nhttps:\/\/medium.com\/@jason.carver\/defend-against-wild-magic-in-the-next-ethereum-upgrade-b008247839d2","732":"Metamask doesn't share the private key directly for security reasons. And sometimes it doesn't even have the key - for instance when the user is using the Metamask UI to operate a hardware wallet account.\nYou'll need to construct the transaction object and pass it to the ethereum.request() method. This will open the Metamask window where the user can sign or decline the transaction request.\nCode example is pretty straightforward and is in the linked documentation.","733":"You cannot update it unless you have used a proxy or otherwise coded in that you can update it. You'll have to redeploy.\nUpdating a live smart contract","734":"Make sure you select the \"Development Tools\" while installing <geth>","735":"See tutorial again.\nIt uses own function sha256() instead of standard hashlib.sha256() and this sha256() has .hexdigest() at the end:\ndef sha256(message):\n    return hashlib.sha256(message.encode('ascii')).hexdigest()\n\nAnd later it uses this sha256() before digest.startswith()\n  digest = sha256(...)\n  if digest.startswith(prefix):\n      # ... code ...\n\nAnd your forgot .hexdigest() in your code.\n  digest = hashlib.sha256(...).hexdigest()\n  if digest.startswith(prefix):\n      # ... code ...\n\n\nBy the way: I think return digest in tutorial is in wrong place - it will return digest in first loop but it should do this inside if digest.startswith(prefix):\n     digest = hashlib.sha256(str(hash(message)).encode('utf-8') + str(i).encode('utf-8')).hexdigest()\n\n     if digest.startswith(prefix):\n        print(\"after\", i, \"iterations found nonce:\", digest)\n        return digest\n\nIf after 1000 iterations it will not find digest with prefix then it will return None","736":null,"737":"Only a maximum of 2300 gas can be used on a fallback function, and your deposit function 100% uses more than that.\nSince you used too much gas, the fallback function won\u00e2\u0080\u0099t get called.\nhttps:\/\/ethereum.stackexchange.com\/questions\/5992\/how-much-computation-can-be-done-in-a-fallback-function","738":"There is an overview here on the DevHub\nAnd there are examples throughout substrate that include tests.rs and mock.rs files to use as reference.\nIf you have not already, checkout the create a pallet tutorial and the recipes all have some tasty examples to look at for these as well.","739":"To perform a send transaction using send-transaction-example.ts and cardano-address, it is enough to generate the correct private key for the UTXO you wish to spend from, and then edit the .ts script with this private key.\nFrom a mnemonic phrase, do:\n$ cat phrase.prv\nexercise club noble adult miracle awkward problem olympic puppy private goddess piano fatal fashion vacuum\n\n$ cardano-address key from-recovery-phrase Shelley < phrase.prv | tee root.xsk\nroot_xsk1hqzfzrgskgnpwskxxrv5khs7ess82ecy8za9l5ef7e0afd2849p3zryje8chk39nxtva0sww5me3pzkej4rvd5cae3q3v8eu7556n6pdrp4fdu8nsglynpmcppxxvfdyzdz5gfq3fefjepxhvqspmuyvmvqg8983\n\n$ cardano-address key child 1852H\/1815H\/0H\/0\/0 < root.xsk | tee utxo.prv\naddr_xsk1ppxa0t64fwwgclj6wa7u228d2ux06dkmx27zhc6eessgmj2849pn8k40xgjk5cd7jaw377gg558tlt5kgkfsnyr00mzqkxtfg5qn00wd8t99f5a37drp8k04ggj2rfkjx60y708m34n6udptx0hrdykllv9n5zcs\n\n\nwhere 1852H\/1815H\/0H\/0\/0 corresponds to the desired keypair\/UTXO that you wish to spend from.\nThen, run\n$ cardano-address key inspect < utxo.prv                                                                                     \n{\n    \"chain_code\": \"cd3aca54d3b1f34613d9f54224a1a6d2369e4f3cfb8d67ae342b33ee3692dffb\",\n    \"key_type\": \"private\",\n    \"extended_key\": \"084dd7af554b9c8c7e5a777dc528ed570cfd36db32bc2be359cc208dc947a94333daaf32256a61be975d1f7908a50ebfae96459309906f7ec40b1969450137bd\"\n}\n\nand replace the PRIVATE_KEY in send-transaction-example.ts, with the extended_key value above:\nconst PRIVATE_KEY =\n  \"084dd7af554b9c8c7e5a777dc528ed570cfd36db32bc2be359cc208dc947a94333daaf32256a61be975d1f7908a50ebfae96459309906f7ec40b1969450137bd\";\n\nand run the script.","740":"You should first provide a key in method send that represents your address.\n... .send({\nfrom: myPublicAddress,\n...\n})\n\nThis trick should solve your problem, otherwise I guss your contract implements ownable interface, so just the owner can mint tokens.","741":"During installation, a docker container would be spun off based on your chaincode language. Monitor this docker container's logs and you'll see the reason for failure. All the best. If you are running all this on windows, then docker desktop would give you realtime view of the containers that are UP and with mouse clicks you can see the docker container logs too.\nWithout monitoring the docker container logs it is hard to tell why something is failing. All the best.","742":"Not the answer you might be hoping for: It's not possible.\nThe connect\/disconnect functionality is entirely in the user's hands due to security and privacy concerns. You can kindly ask the wallet to prompt the user to connect to the website, but there is no functionality to prompt the user to disconnect.\nProgrammatically resetting the accounts array does not disconnect the wallet even though some implementations such as Pancake Swap suggest this is the case; they simply pretend a disconnect.","743":"I dont know about other <blockchain> frameworks out there except HLF, so I'll limit my response to only HLF.\nYou can also try Amazon managed <blockchain> too. It has got two netwrok types. Checkout about being 'free' in there, as there are two network types that you can create.\nUser management is a subject in HLF, where each organization can have its own MSP (membership service provider). HLF offers CA (certificate authority) server where crypto material is generated by this server which later would be used to connect to the network. So user management basically becomes cert management. I'm not sure about IBM managed HLF, but Amazon managed <blockchain> as of date (AMB HLF 1.4, but latest HLF is 2.3 as of date) does not have UI driver user permissioning, you'll have to monkey around with commands and stuff, but once you get hold of how to do it, it would be simple scripting for user management.\nThe best way for network creation is to first spin off the test network that HLF has given in its website https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.3\/test_network.html Mind you it is not a simple 'hello world' program that you see in NodeJS or Java, but it is going to be a full blown implementaion that you are getting into even with the sample that is given in their website. For a completely novice user, this itself can take days to get it working.\nOnce you get this network to work, you'll have docker desktop running on your machine which has various containers running in it once the HLF network is UP. One of them is going to be CouchDB, this would hold the ledger data (HLF world state), so you can use browser based UI to access this CouchDB to see what all data got put into ledger. All this if you have spun up HLF on your local machine by going through all that documentation, but if you use AMB, there is no UI to 'see' what all ledger data got created in it (as of date), for this you'll have to write your own API in chain code that queries and returns data for you.\nAlso, I find it highly awkward that each concept is illustrated in 3 languages - Node, Go, TypeScript. Although Java is also support, there almost is no mention of Java implementation in their website (as of date) in their regular 'theory' that they explain.\nSo, for HLF you'll have to not just fix on the version of HLF you want to use, but also fix on the programming language you want to write your chaincodes and HLF client code in.","744":"You need to add the contract address to your Metamask instance.\n\nIn the account detail, click on \"Add token\"\n\n\nPaste the conctract address to the address field in the \"Custom token\" tab\n\n\nReview the data, click \"Next\", and you you can see the token balance in your wallet.","745":"How to calculate the data field size\n(when you're sending a transaction calling a smart contract function)\nThe data field value could be divided into three parts:\n\n0x\n4 bytes (8 hex characters) - This is the function signature, it identifies the function that you are going to call.\n\nThe value is first 4 bytes of keccak256 hash of the function name and argument types. Example: transfer(address,uint256) => a9059cbb\n\n\nthe rest of data - Arguments passed into the function.\n\n\nThe easiest way is to use a library that calculates the size for you. :) For example <web3>js function encodeFunctionCall().\nExample:\nconst result = <web3>.eth.abi.encodeFunctionCall({\n    name: 'transfer',\n    type: 'function',\n    inputs: [{\n        type: 'address',\n        name: ''\n    },{\n        type: 'uint256',\n        name: ''\n    }]\n}, ['0x1231231231231231231231231231231231231231', '1']);\nconsole.log(result);\n\nReturns\n0xa9059cbb00000000000000000000000012312312312312312312312312312312312312310000000000000000000000000000000000000000000000000000000000000001\n\n\na9059cbb is the function signature\n0000000000000000000000001231231231231231231231231231231231231231 is the address type (256bit, 64 hex chars) first argument\n0000000000000000000000000000000000000000000000000000000000000001 is the uint256 type (256bit, 64 hex chars) second argument\n\nSo the result is 0x and 136 hex characters, which makes 68 bytes.","746":"<bitcore> is using bitpay as the default provider server, and for some reason, it is not working. They also recommend changing the default server in the docs.\nTry changing the provider to zelcore like this:\nconst explorers = require(\"<bitcore>-explorers\");\nconst insight = new explorers.Insight(\"https:\/\/explorer.btc.zelcore.io\");\n\n\nMore explanation here","747":"Usual implementation of P2P connection is to have one predefined port (for example in case of Bitcoin Core it's 8333) and the applications periodically broadcast their messages on this particular port.\nIt's also usual to have in your app a preset list of nodes that are likely to be online 24\/7, so that the app can listen to their messages right from the startup and doesn't have to wait for other nodes to broadcast their presence.\nThe app can keep a list of currently active nodes (for example the ping period is 60 seconds, so any node that has pinged within the last 60 seconds is considered active) in case it needs to communicate with the other nodes directly.\nBut most communication is usually done via broadcasting and listening to messages on the predefined port.","748":"TLDR: you didn't create (or set) any key\nAn EC_KEY object in OpenSSL, like the objects for other publickey schemes with parameters (DSA and DH), can actually be in one of 4 states:\n\nthe object exists but is not set at all\n\nthe object has the paramweters set, but neither private nor public key\n\nthe object has the parameters and public key set, but not private key; this is commonly used by parties other than the key owner\n\nthe object has the parameters set and both private and public key; this is commonly used by the key owner\n\n\nFor EC the parameters are often loosely called a \"curve\" but technically that is imprecise: they actually include an underlying field (here Fp, the integers modulo a particular 256-bit prime); the coefficients of a short Weierstrass equation defining a curve over that field; and a prechosen 'base' or 'generator' point on that curve. Mathematically these parameters form a finite group, and OpenSSL actually stores them in a related but different object type EC_GROUP.\nEC_KEY_new_by_curve_name produces state 2 -- it has the parameters (specifically EC_GROUP) set, but no key -- so EC_KEY_check_key has no key to check, and fails.\nIn general whenever any OpenSSL crypto function returns a failure indication (and often but not always when an SSL\/TLS function does) you should look at the error stack. (Note the subsequent item there, PROG9, is mostly obsolete; OpenSSL 1.1.0 up automatically initializes library data, including the error strings, without you coding it explicitly as in older versions.) With this code\n\/* SO 66847659 2021-03-29 *\/\n#include <stdio.h>\n#include <openssl\/ec.h>\n#include <openssl\/obj_mac.h>\n#include <openssl\/err.h>\n\nint main (void){\n  EC_KEY * ec = EC_KEY_new_by_curve_name(NID_secp256k1);\n  if( EC_KEY_check_key(ec) <= 0 ) ERR_print_errors_fp(stdout);\n  return 0;\n}\n\nI get the more specific and helpful error message\n140659993163520:error:100B1043:elliptic curve routines:EC_KEY_check_key:passed a null parameter:crypto\/ec\/ec_key.c:258:\n\nIf you want to generate a new keypair, after creating the EC_KEY object (with parameters) call EC_KEY_generate_key -- or better style since 1.0.0 in 2010 is to use the higher-level generic EVP_PKEY interface instead of the algorithm-specific one.\nOTOH if you want to use an existing keypair, or publickey, there are numerous options depending on the details of your environment and data that you didn't specify.","749":null,"750":"Here is an example how to get all token transfers with <web3>.py.\nYou store the data locally, like in an SQL database. You can construct the list token holdings at a point of time, based on the transfers that happened before the block number of the timestamp. You just have a maximum block number and do not query any Transfer events after that block number.","751":"In order for end-users or clients to interact with the network, it is necessary to register them in the network.\nFirst of all, you will need to implement Fabric Node\/Java SDK to connect the <blockchain> network. Then You have to follow the below steps:\n\nCreate a connection profile for each organization.\n\nRegister the administrator user of each of the organizations.\n\nAfter registering the admin, you can use these identities to generate the other users.\n\n\nKindly check the fabric-samples\/fabcar\/javascript folder where you will get all the sample code that you can study.","752":"Try\ninstance = await tronWeb.contract().at(trc20ContractAddress)","753":"You have not put any API-KEY in your tronWeb instance. As a result, you have a very low query\/ transaction per second. That might be reason why sometimes your <transactions> work and sometimes they don't","754":"In getBlockByHeight() in <blockchain>Controller.js, you are configuring a route for\n\/block\/height\/:height\n\nThat will NOT handle a request for:\n\/block\/0\n\nThe route code is expecting\n\/block\/height\/0\n\nSo, you're either requesting the wrong URL from the client or your server code is configuring the wrong route specification.","755":"I would not recommend investing any time learning <hyperledger> Composer. It is more than deprecated, it is end of life and it would not be sensible to be using it in any sort of production environment now. You should focus your efforts on learning <hyperledger> Fabric 2.x","756":null,"757":"You could use syntax like that:\n   Object.keys(jsonData['texts']).forEach(function(key) {\n        var value = jsonData['texts'][key];\n        console.log(key + ':');\n        console.log(value);\n    });\n\nPlease note that value is still an object, thats why I console.log it separately.","758":"Yes, it's possible. All Ethereum token standards (ERC-20, ERC-721, ...) only define an interface and few other points (such as when to emit events). So you're free to implement the methods however you need.\n\nLet's say you have a very simple transfer() implementation without the fees.\nNote: This doesn't follow the ERC-* standards and is vulnerable to integer overflow in Solidity <= 0.7.6. I've simplified it to better show the calculations.\nfunction transfer(address _to, uint256 _amount) external {\n    balances[msg.sender] -= _amount;\n    balances[_to] += _amount;\n}\n\nAdding the fees is just a matter of a small calculation:\naddress admin = address(0x123);\n\nfunction transfer(address _to, uint256 _amount) external returns (bool) {\n    uint256 fee = (_amount \/ 100) * 3; \/\/ Calculate 3% fee\n\n    balances[msg.sender] -= _amount; \/\/ subtract the full amount\n    balances[admin] += fee; \/\/ add the fee to the admin balance\n    balances[_to] += (_amount - fee); \/\/ add the remainder to the recipient balance\n}\n\nNote: This is to demonstrate the basics, and doesn't take into account few cases such as _amount having value not divisible by 100 (the fee is not going to be precisely 3% in that case).","759":"Update 16 Aug 2021\n\nBinance has updated new Signature key format with SHA512 algorithm for more detail you can take a look at Binance api document.\n\nString signature = timestamp.toString() + \"\\n\" + nonce + \"\\n\" + bytes + \n\"\\n\";\n\nYOU MUST INCLUDE \"\\n\"\nMy Code\n\nI have try Signature key that print from this code on Binance payment api, everything work fine. (signature must be uppercase when you send request)\n\nvar key = utf8.encode('YOUR_SECRET_KEY'); \/\/ get from binance api\nvar timestamp = DateTime.now().millisecondsSinceEpoch;\nvar nonce = \"asdopewrmweqjidsfnosd\"; \/\/ Random 32 length String,\nvar bytes = '''{\n  \"merchantId\": \"\",\n  \"subMerchantId\": \"\",\n  \"merchantTradeNo\": \"9825382937292117596\", \n  \"totalFee\": 0.5,\n  \"productDetail\": \"Greentea ice cream cone\",\n  \"currency\": \"USDT\", \n  \"returnUrl\": \"\",\n  \"tradeType\": \"WEB\", \n  \"productType\": \"Food\",\n  \"productName\": \"Ice Cream\"\n }''';\nString payload = timestamp.toString() + \"\\n\" + nonce + \"\\n\" + bytes + \n\"\\n\";\n\nvar hmacSha512 = Hmac(sha512, key); \/\/ HMAC-SHA512\/\nvar digest = hmacSha512.convert(utf8.encode(payload));\n\nprint(timestamp.toString() + \"\\n\");\nprint(\"HMAC digest as hex string: ${digest.toString().toUpperCase()}\");","760":"These terms are used interchangeably and often mixed. It depends if the text discuss about a client (node) connecting to Ethereum P2P network or if the text discussed about a client (JSON-RPC API client) connecting to a node providing API services.","761":"In this block (added line number), msg.value is the amount of ether transferred to the contract when calling function.\nAt line 1, it has already transferred all the ether to _seller.\nLine 2 and 3 will fail because there is no more ether left.\n1    address(_seller).transfer(msg.value);\n2    address(_buyer).transfer(msg.value);\n3    msg.sender.transfer(msg.value);  \n\nExample:\nI call purchaseProduct() function with value of 1 ether.\n\naddress(_seller).transfer(msg.value) transfers 1 ether to _seller.\naddress(_buyer).transfer(msg.value) transfers 1 ether to _seller.\nmsg.sender.transfer(msg.value) transfers 1 ether to _seller.\n\nIt fails because there's only 1 ether.","762":null,"763":null,"764":null,"765":"can i track how many times this image has been used and where it is used ?\n\nNot on the <blockchain>.\n\nNFT allows proving ownership of the token (representing an art piece for example) and other on-chain features such as setting the rules for transfer of the token (max amount of transfers, only pre-authorized transfers, etc).\nBut it's not possible to limit with on-chain tools what a user could do with the actual art piece off-chain (such as copying or other unlicensed use).","766":"You can find the differences from the description given in official documentation:\n<hyperledger> Besu is an open source Ethereum client developed under the Apache 2.0 license and written in Java. It can be run on the Ethereum public network or on private permissioned networks, as well as test networks such as Rinkeby, Ropsten, and G\u00c3\u00b6rli. <hyperledger> Besu includes several consensus algorithms including PoW, PoA, and IBFT, and has comprehensive permissioning schemes designed specifically for uses in a consortium environment.\n<hyperledger> Fabric is an open source enterprise-grade permissioned distributed ledger technology (DLT) platform, designed for use in enterprise contexts, that delivers some key differentiating capabilities over other popular distributed ledger or <blockchain> platforms. Fabric has a highly modular and configurable architecture, enabling innovation, versatility and optimization for a broad range of industry use cases including banking, finance, insurance, healthcare, human resources, supply chain and even digital music delivery.\nFor further details you can refer following links:\nhttps:\/\/besu.<hyperledger>.org\/en\/stable\/\nhttps:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.2\/whatis.html","767":"This documentation page has details of wallet changes and a link to an npm package that can be used to either use a v1.4 wallet directly with the v2.x SDK, or convert a v1.4 format wallet to a v2.x format wallet:\nhttps:\/\/<hyperledger>.github.io\/fabric-sdk-node\/release-2.2\/tutorial-migration.html","768":null,"769":"Assuming you have TronWeb installed.\nYou can do TronWeb.createAccount() to generate an address and save the output, example from docs.\nYou may need to check balance of address one by one by posting to TronGrid, https:\/\/api.trongrid.io\/wallet\/getaccount, example from docs","770":"You can try setting the CORE_PEER_MSCONFIGPATH variable:\necho $CORE_PEER_MSPCONFIGPATH\n\nIf you have set this environment variable, you can get output at this path:\n\/home\/www\/byfn-on-k8s\/crypto-config\/peerOrganizations\/org1.example.com\/users\/Admin@org1.example.com\/msp\n\nwhich is the path of your msp.\nthen you can check msp dir in this path is correct or not.\n\nIf there is no output, you may not have set the CORE_PEER_MSPCONFIGPATH environment variable.","771":"Change the compiler version in the truffle-config.js file to match the one your are using in your smart contract","772":"I finaly found the solution. The Story how i found it:\nShort Story:\nPrerequisites: Install indy-sdk, aries-cloudagent, <python>3_indy and <python> 3.6.9+ on your machine. See the long story if you don\u00c2\u00b4t know how to do that.\n<python> 3.6.9 comes out of the box with Ubuntu18LTS\n\ninstall aries-cloudagent-<python> (aca-py) localy.\nrun aca-py first with the provision command to config your aca-py instance. Use the argument wallet-type indy for that\nrun aca-py normaly with the start command and your config-params. Be sure to use the --wallet-type indy flag to be able to connect to an indy ledger\n\nLong Story:\nInside the aries-cloudagent-<python> (aca-py) code, it seems that the configuration, which ledger to use (e.g. an indy ledger) comes from the specified wallet type.\n1st.: providing arguments: --wallet-type indy\n-> this returned the error, that --wallet-name and --wallet-key parameters are needed. So i provided them:\n.\/scripts\/run_docker start \n-e http:\/\/127.0.0.1:8000 \n-it http 127.0.0.1 8000 \n-ot http\n--admin 127.0.0.1 11000\n--admin-insecure-mode\n--log-level DEBUG\n--genesis-url https:\/\/raw.githubusercontent.com\/CHempel-esatus\/SSI4DE_Genesis\/master\/pool_<transactions>_genesis \n--trace \n--recreate-wallet \n--wallet-type indy \n--wallet-name test \n--wallet-key 12345\n\n2nd.: This results in the following error, telling that no Database for the wallet is provided.\n2021-03-16 09:19:45,447 indy.libindy DEBUG _indy_loop_callback: >>> command_handle: 0, err , args: (0,)\n2021-03-16 09:19:45,447 indy.libindy WARNING _indy_loop_callback: Function returned error \n2021-03-16 09:19:45,449 indy.libindy DEBUG _indy_loop_callback <<<\n2021-03-16 09:19:45,449 aries_cloudagent.commands.start ERROR Exception during startup:\nTraceback (most recent call last):\n  File \"\/home\/indy\/aries_cloudagent\/indy\/sdk\/wallet_setup.py\", line 169, in open_wallet\n    credentials=json.dumps(self.wallet_access),\n  File \"\/home\/indy\/.pyenv\/versions\/3.6.13\/lib\/<python>3.6\/site-packages\/indy\/wallet.py\", line 127, in open_wallet\n    open_wallet.cb)\nindy.error.WalletNotFoundError\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"\/home\/indy\/aries_cloudagent\/commands\/start.py\", line 72, in init\n    await startup\n  File \"\/home\/indy\/aries_cloudagent\/commands\/start.py\", line 28, in start_app\n    await conductor.setup()\n  File \"\/home\/indy\/aries_cloudagent\/core\/conductor.py\", line 91, in setup\n    self.root_profile, self.setup_public_did = await wallet_config(context)\n  File \"\/home\/indy\/aries_cloudagent\/config\/wallet.py\", line 40, in wallet_config\n    profile = await mgr.open(context, profile_cfg)\n  File \"\/home\/indy\/aries_cloudagent\/indy\/sdk\/profile.py\", line 161, in open\n    opened = await indy_config.open_wallet()\n  File \"\/home\/indy\/aries_cloudagent\/indy\/sdk\/wallet_setup.py\", line 182, in open_wallet\n    ) from x_indy\n  File \"\/home\/indy\/aries_cloudagent\/indy\/sdk\/wallet_setup.py\", line 169, in open_wallet\n    credentials=json.dumps(self.wallet_access),\n  File \"\/home\/indy\/.pyenv\/versions\/3.6.13\/lib\/<python>3.6\/site-packages\/indy\/wallet.py\", line 127, in open_wallet\n    open_wallet.cb)\naries_cloudagent.core.error.ProfileNotFoundError: Wallet 'test' not found: Error: Wallet not found\n  Caused by: No wallet database exists\n\n3rd.: The documentation of aca-py at https:\/\/github.com\/<hyperledger>\/aries-cloudagent-<python>\/blob\/main\/DevReadMe.md explicitly says:\n\nRunning Locally: For local development, we recommend using the provided Docker scripts to run the ACA-Py software\n\n4th.: aca-py is able to use sqlite, which is installed in the docker container. To see that aca-py is compatible with sqlite, run\n.\/scripts\/run_docker start --help\nwhich returns the list of available arguments. One is the following:\n--wallet-storage-type <storage-type>\n                        Specifies the type of Indy wallet backend to use.\n                        Supported internal storage types are 'basic' (memory),\n                        'default' (sqlite), and 'postgres_storage'. The\n                        default, if not specified, is 'default'. [env var:\n                        ACAPY_WALLET_STORAGE_TYPE] \n\n\n5th: Running\n.\/scripts\/run_docker provision \n-e http \n--genesis-url \nhttps:\/\/raw.githubusercontent.com\/CHempel-esatus\/SSI4DE_Genesis\/master\/pool_<transactions>_genesis \n--recreate-wallet \n--wallet-type indy \n--wallet-name test \n--wallet-key 12345\n\nreturns\nSuccessfully tagged aries-cloudagent-run:latest\nCreated new profile\nProfile backend: indy\nProfile name: test\nNo public DID\nLedger configured\n\nThis is weird, because now he is able to find sqlite. This seems to configure the Database properly so it can be used. But because it is inside a docker container, and the container discarding every change, this internal configuration will never be available.\n6th. To solve this, i\u00c2\u00b4ve installed on an Ubuntu18LTS the aries cloud-agent package localy from https:\/\/pypi.org\/project\/aries-cloudagent\/\npip3 install aries-cloudagent\npip3 install <python>3_indy\n\nand followed the installation instructions for the indy-sdk https:\/\/github.com\/<hyperledger>\/indy-sdk\nI also installed sqlite on the local machine with:\nsudo apt install sqlite\n\n7th.: After i rebooted the system, i executed:\naca-py provision -e http:\/\/127.0.0.1:8000 --genesis-url https:\/\/raw.githubusercontent.com\/CHempel-esatus\/SSI4DE_Genesis\/master\/pool_<transactions>_genesis --recreate-wallet --wallet-type indy --wallet-name test --wallet-key test\n\nreturning\nCreated new profile\nProfile backend: indy\nProfile name: test\nNo public DID\nLedger configured\n\n\n8th.: After that, i cloud run aca-py and connect to my ledger using the admin-REST-api","773":"In general, it's possible to run smart contract on private Ethereum chains. So you would be able to run a smart contract the same way as you do on the public chain.\nHowever, I'm not very familiar with Quorum or <hyperledger> fabric. So maybe they allow for a simpler way to manage users that is built into their solution, and someone else will come up with more accurate answer.","774":"I got it fixed by matching the compiler version to the code version...","775":"You can use most of the same tools, such as <web3>. Just use the binance as the provider (JS):\n\/\/ mainnet \nconst <web3> = new <web3>('https:\/\/bsc-dataseed1.binance.org:443');\n\/\/ testnet\nconst <web3> = new <web3>('https:\/\/data-seed-prebsc-1-s1.binance.org:8545');\n\nIn <python> you have to add middlewear:\nfrom <web3> import <web3>\nfrom <web3>.middleware import <geth>_poa_middleware\n\n<web3> = <web3>(<web3>.WebsocketProvider(\n  \"wss:\/\/bsc-ws-node.nariox.org:443\",\n  websocket_timeout=60,\n))\n<web3>.middleware_onion.inject(<geth>_poa_middleware, layer=0)","776":"To change the state of a smart contract you need to send a transaction instead of call.\nChange:\nsubject.returnAndIncrement.call ()\n\nTo:\n  subject.returnAndIncrement.send({..}) \/\/ you can pass options such gas, account .. \n\nFor more details look at the <web3>js doc\nBut the return of send transaction is not the value you are looking for, you may need to look in the logs to get the value;","777":"Checkout the command with which you are starting the container.\npeer0.org1.example.com:\n    container_name: peer0.org1.example.com\n    image: <hyperledger>\/fabric-peer:latest\n    labels:\n      service: <hyperledger>-fabric\n    environment:\n      #Generic peer variables\n      - CORE_VM_ENDPOINT=unix:\/\/\/host\/var\/run\/docker.sock\n      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric_test\n      - FABRIC_LOGGING_SPEC=INFO\n      #- FABRIC_LOGGING_SPEC=DEBUG\n      - CORE_PEER_TLS_ENABLED=true\n      - CORE_PEER_PROFILE_ENABLED=true\n      - CORE_PEER_TLS_CERT_FILE=\/etc\/<hyperledger>\/fabric\/tls\/server.crt\n      - CORE_PEER_TLS_KEY_FILE=\/etc\/<hyperledger>\/fabric\/tls\/server.key\n      - CORE_PEER_TLS_ROOTCERT_FILE=\/etc\/<hyperledger>\/fabric\/tls\/ca.crt\n      # Peer specific variabes\n      - CORE_PEER_ID=peer0.org1.example.com\n      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051\n      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051\n      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052\n      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052\n      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051\n      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051\n      - CORE_PEER_LOCALMSPID=Org1MSP\n    volumes:\n        - \/var\/run\/docker.sock:\/host\/var\/run\/docker.sock\n        - ..\/organizations\/peerOrganizations\/org1.example.com\/peers\/peer0.org1.example.com\/msp:\/etc\/<hyperledger>\/fabric\/msp\n        - ..\/organizations\/peerOrganizations\/org1.example.com\/peers\/peer0.org1.example.com\/tls:\/etc\/<hyperledger>\/fabric\/tls\n        - peer0.org1.example.com:\/var\/<hyperledger>\/production\n    working_dir: \/opt\/gopath\/src\/github.com\/<hyperledger>\/fabric\/peer\n    command: peer node start\n    ports:\n      - 7051:7051\n    networks:\n      - test\n\nAs you are bringing up the peer container wtih command: peer node start  command.\nAccording to fabric docs the peer node start command -  Starts a node that interacts with the network.\nSo the node is getting started as you bring up the container, I have not tried it but you can either replace that command with peer node pause -c mychannel as the node is not yet started that means the peer was in offline state. You can try this.","778":"You can use akc-dcm-cli. It support renew user of <hyperledger> Fabric by running command:\ndcm certificate renew  --parent-cert=..\/data\/intermediate-ca\/signcerts\/ica-cert.pem \n--parent-private-key=..\/data\/intermediate-ca\/keystore\/ica-key.pem \n--old-cert=..\/data\/peer\/output\/peer-cert.pem \n--old-private-key=..\/data\/peer\/keystore\/peer-key.pem \n--output=..\/data\/peer\/output\/renew-peer-cert.pem\n--days=365\n\n\nparent-cert and parent-private-key are key-pair of CA\nold-cert and old-private-key are key-pair of expired user\noutput is the path of new cert\n\nAfter renewing the cert, you replace the expired cert of the user with the new cert. Keep current private key of user' cert","779":"ethers\/lib\/utils function keccak256() returns 0x prefixed hex string representation of the hash.\nSo you need to create a buffer from this hex without the 0x prefix.\nconst keccakString = keccak256(MerkleTree.sortAndConcat(first, second))\nreturn Buffer.from(keccakString.slice('0x'.length), 'hex')","780":null,"781":"If u can run <python> or js u can make it so some dual-core laptop and u can also work on Linux without a GUI so old Pentium 3 will also work :D","782":"Try running npm install first (and maybe even reloading VS Code afterwards).","783":"Payable should be the recipient, not the sender address. Also, your syntax is slightly incorrect.\nAssuming admin is saved as address (not payable)\npayable(admin).transfer(address(this).balance);\n\nAnd if admin is already address payable, it's enough to call just this\nadmin.transfer(address(this).balance);","784":"I use to have same issue, after switch to other network connection it's work fine. The course of the problem could possibility from the unstable connection.","785":"wouldn't a client generate a new wallet for \"his\" <blockchain> each time it goes back online? If so, wouldn't this create a mess on the <transactions> signed on the chain? Since each miner (therefore peer) signing its own reward would use a different <blockchain> wallet than the other peers? Wouldn't this lead to any problems?\n\nYou don't say what problems you think this will lead to. I can't think of any.\n\nFor what I think is definitively more straightforward to use the fee amount to reward the miner, but this doesn't solve my doubts at all. Since the outputs of the <transactions> are signed upon creation, how could the peer initiating the transaction know upfront the possible miner who finds the block? And if he can't know it, how could possibly the miner \"extract\" its reward without tampering the transaction itself?\n\nThe simplest solution to this is for the transaction itself to just contain its inputs and outputs. The fee is the difference between the total inputs and the total outputs.\nThe miner just includes the transaction in the block of <transactions> they mine. They also add one additional transaction into the block, sending themselves the reward. Obviously, they know their own destination address. Every participant who receives the newly-mined block checks to make sure this transaction is valid (just as they check every other one) and doesn't claim a larger reward than is allowed.\n\nAnd if the answer is not to generate a new wallet each time, where could you possibly store that very first private key of the chain's wallet where no one can see it, but still be able to use it, without having to put a server in the middle?\n\nTypically in a file on the local disk. The private key isn't really needed anyway -- you only need it to send. You don't need it to mine or report. So it can be prompted for or decrypted only when actually needed.\n\nOf course it could create a new transaction, and add that to the block. But who would sign that transaction? From where those reward tokens come?\n\nThe usual rule is that the reward transaction has no inputs, one output, and no signature. The tokens come from the pool of unclaimed miner reward tokens which can be finite or infinite depending on the <blockchain>'s design. (For bitcoin, this pool is finite.)","786":null,"787":"You can use WalletConnect mobile linking to communicate between Android apps and Ethereum wallets for signing the documents.\nYou can use <web3>j to communicate with Ethereum JSON-RPC.","788":null,"789":"Without the function in your .sol contract I can't be 100% sure, but your Approval event is probably being emitted incorrectly inside of your accept method.\nTake a look at how the accept function's being used in the 2nd example here:\nhttps:\/\/docs.soliditylang.org\/en\/v0.8.1\/types.html?highlight=approve#mapping-types\nemit Approval(owner, spender, amount);","790":"you're taking away lamports from an account that the program doesn't own.  You can only deduct lamports from accounts owned by the program, ie my token-swap program can deduct lamports on all accounts that it owns, and no others.  If you want to move lamports within your program, you need to invoke system_instruction::transfer","791":"I am just getting started and haven't tried sending any <transactions> yet. But I did find...\nhttps:\/\/seed01.eosusa.news\/v1\/chain\/\nexample:\nhttps:\/\/seed01.eosusa.news\/v1\/chain\/get_info\nEdit: After my original post here I also discovered https:\/\/eosflare.io\/api It's not the standard EOS Chain API but it does provide access to the EOS data indirectly.\n--Jacob","792":"You cannot get the time directly in a create. However, you can get the time in a choice and then create the contract from that. That choice can either be non-consuming and you only create a single helper contract that you call the choice on or it can be consuming and you can call the choice via createAndExercise. Here is a full example illustrating both options:\nmodule ExampleTemplateModule where\n\nimport DA.Date\nimport Daml.Script\n\ntemplate ExampleTemplate\n  with\n    admin: Party\n    todayDate: Date     --- In place of this can I use getDate and get today's date\n  where\n    signatory admin\n\ntemplate Helper\n  with\n    admin : Party\n  where\n    signatory admin\n    nonconsuming choice CreateExampleTemplate : ContractId ExampleTemplate\n      controller admin\n      do time <- getTime\n         create ExampleTemplate with admin = admin, todayDate = toDateUTC time\n    choice CreateExampleTemplate' : ContractId ExampleTemplate\n      controller admin\n      do time <- getTime\n         create ExampleTemplate with admin = admin, todayDate = toDateUTC time\n\n\ntest = script do\n  p <- allocateParty \"p\"\n  helper <- submit p $ createCmd (Helper p)\n  ex1 <- submit p $ exerciseCmd helper CreateExampleTemplate\n  e2 <- submit p $ createAndExerciseCmd (Helper p) CreateExampleTemplate'\n  pure ()","793":null,"794":"I highly recommend you go through the official documentation it has matured very well over time and is very detailed. Go through the key concepts and then getting started.\nhttps:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.2\/whatis.html","795":"These parameters are set in the node's chain_spec.rs in the template code and an example from polkadot code that ingests a JSON file for a specific chain (examples)\nTo get this generated for you automatically that you can then customize, build the node and then follow the flow outlined in the cumulus workshop to get a plain chainspec, edit as you see fit, and then generate a custom final one that you can use when starting your nodes.","796":"Yes the code should work. But it's only a one-time measurement and proper latency tests should run multiple times and include measures like standard deviation, min, max etc.\nFor a proper benchmarking tool, checkout <hyperledger> Caliper: https:\/\/<hyperledger>.github.io\/caliper\/v0.4.2\/getting-started\/#supported-performance-metrics\nYou can set it up with <hyperledger> Fabric and get transaction and read latency (minimum, maximum, average, percentile). It takes care of all the details behind the scenes for you.","797":"Yes, assuming the chain itself doesn't die.\nDying means all of the nodes hosting stop \"seeding\" it to new nodes that want to join the network.\nMost <blockchain>s don't prune old <transactions>, though there are exceptions, including some that compress the entire <blockchain> state into a single ZKProof.","798":"My approach would be to define 3 separate contracts on 3 separate addresses:\n\naddress 0x123123 as the Weapons ERC-721 token contract\naddress 0x456456 as the Vehicles ERC-721 token contract\naddress 0x789789 as the actual game contract\n\nIn the game contract, you can then call the NFTs contracts to get or validate values:\nfunction attack(uint attackerWeaponId) {\n    require(weaponsContract.isOwnerOf(msg.sender, attackerWeaponId));\n    \/\/ ...\n}\n\nThe isOwnerOf() function takes 2 arguments, address owner and uint256 weaponId. Also, a user can probably own more weapons so that's why I'm showing the validation.\nAnd the weapons contract balanceOf(address) would reflect the total amount of the Weapon NFTs that the user has.\nmapping (address => Weapon[]) userOwnedWeapons;\n\nfunction balanceOf(address owner) external view returns (uint256) {\n    return userOwnedWeapons[msg.sender].length;\n}","799":"It is sufficient to know the private key and using <web3>.py.\nPlease follow the documentation: https:\/\/<web3>py.readthedocs.io\/en\/stable\/<web3>.eth.account.html?highlight=sign#sign-a-transaction","800":null,"801":"I think you should double-check your network. Explorer should be spun up on the same network with Fabric, so that the peers and other nodes can be connected. To check the Fabric network name, you should check in the docker-compose file which set it up and look for CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE or you can navigate to you CLI and run docker network ls. You should be able to find your fabric network name with the DRIVER which should be bridge\nAlso, you should make sure that your Fabric network is up and running properly before bringing Explorer up.","802":"Parity has pluggable consensus engines.","803":"Using Polkadot JS: https:\/\/polkadot.js.org\/docs\/\nTo query all acccounts you need to look at all the entries of system.account\nlet users = substrate.query.system.account.entries();\n\nThen to look at the total balance of a particular user you need to look at their data.free and add that to their data.reserved.\nHere is how you will get the data for the first user:\nlet account_id = util_crypto.encodeAddress(users[0][0].slice(-32));\nlet free_balance = users[0][1].data.free.toNumber();\nlet reserved_balance = users[0][1].data.reserved.toNumber();\n\nFrom there, you should be able to figure out how to sort the list and create the output you want.\nEDIT:\nHere is a full script for others:\nvar { ApiPromise, WsProvider } = require('@polkadot\/api');\nvar { encodeAddress } = require('@polkadot\/util-crypto')\n\nasync function main() {\n    \/\/ Substrate node we are connected to and listening to remarks\n    const provider = new WsProvider('ws:\/\/localhost:9944');\n    const api = await ApiPromise.create({ provider });\n\n    \/\/ Get general information about the node we are connected to\n    const [chain, nodeName, nodeVersion] = await Promise.all([\n        api.rpc.system.chain(),\n        api.rpc.system.name(),\n        api.rpc.system.version()\n    ]);\n    console.log(\n        `You are connected to chain ${chain} using ${nodeName} v${nodeVersion}`\n    );\n\n    \/\/ Adjust how many accounts to query at once.\n    let limit = 50;\n    let result = [];\n    let last_key = \"\";\n\n    while (true) {\n        let query = await api.query.system.account.entriesPaged({ args: [], pageSize: limit, startKey: last_key });\n\n        if (query.length == 0) {\n            break\n        }\n\n        for (const user of query) {\n            let account_id = encodeAddress(user[0].slice(-32));\n            let free_balance = user[1].data.free.toString();\n            let reserved_balance = user[1].data.reserved.toString();\n            result.push({ account_id, free_balance, reserved_balance });\n            last_key = user[0];\n        }\n    }\n\n    console.log(result)\n}","804":"Answering my question here.\nBased on @Gari Singh's answer above the certificate that you have to use in the \"tlsCACerts\" parameter in the connection.json file has to be created by combining the intermediate and root CA into a single file. The first block in the file should be the intermediate CA and the second block should be the root CA. This certificate chaining is required because the intermediate CA is signed by the root CA and the client should pass both so that they can be validated properly. Comprehensive explanation can be found here: https:\/\/www.thesslstore.com\/blog\/root-certificates-intermediate\/\nThe final thing that I was missing because of which I was getting the error \"Failed to evaluate transaction: Error: Committer must be connectable\" was that I was passing 3 orderers in the \"channels\" section of the config and only passing one of their details in the \"orderers\" section of the config. Adding the ip and other details for the other 2 orderers took care of that issue.","805":"You can change the block time on the following file:\nhttps:\/\/bitbucket.org\/Jelurida\/ardor\/src\/b9bd3731bf6ad25b762d5f898e4c47c9dff4be48\/src\/java\/nxt\/Constants.java#lines-84\nUnder block_time in Ardor, but in NXT it is min_blocktime_limit.","806":"You can set up a one-time command using 'at' command in unix to run a script file. The script file can be broadcasting a transaction calling the function on your smart contract.\nIf you plan to call the function every day or repeatedly, you can use 'cron' at unix.\nhttps:\/\/www.linuxjournal.com\/content\/schedule-one-time-commands-unix-tool\nhttps:\/\/www.ibm.com\/developerworks\/library\/l-job-scheduling\/index.html","807":null,"808":"Theoretically it is possible to extract the invoker mspId from within the chaincode transaction, and then perform conditional action based on the determined mspId. This is part of the getCreator API.\nIt sounds like what you are asking about is chaincode level access control, which is answered here: <hyperledger> Fabric: implementing chaincode level access control","809":"Using JS, you can simply iterate over the storage items which track this information for all accounts.\nFor example, to get all accounts with some Identity information, you would do:\nlet users = await api.query.identity.identityOf.entries()\n\nThis will return all the different storage keys and values under the identityOf storage item. Those keys will have the AccountId as the last 32 bytes of the key.\n> util_crypto.encodeAddress(users[0][0].slice(-32))\n\n\"5CMbC573hpNWhJVTe4Qo7AtFQntAQDWKKVX9kt9WAHGy413y\"\n\n> users[0][1].toJSON()\n\n\n{\u00e2\u0080\u00a6}\n\u00e2\u0080\u008b\ndeposit: 1666666666660\n\u00e2\u0080\u008b\ninfo: Object { additional: [], display: {\u00e2\u0080\u00a6}, legal: {\u00e2\u0080\u00a6}, \u00e2\u0080\u00a6 }\n\u00e2\u0080\u008b\njudgements: Array [ (2) [\u00e2\u0080\u00a6] ]","810":"In a word: No.\nIf you really wanted to, you could have a smart contract that would emit some event when a given function was called. Then you could have some service listening for that event, and launching whatever you want, cloud service or any job. I can't think of a reason to use <blockchain> for this though : the \"listener\" service would be centralized, as would the cloud job you would be launching. So you may as well just make API calls directly to that, and skip the <blockchain> alto<geth>er.","811":"Actually, the answer is, setting the origin-Header to the right value, like this:\nimport websocket\n\ntry:\n    import thread\nexcept ImportError:\n    import _thread as thread\nimport time\n\n\ndef on_message(ws, message):\n    print(\"MSG:\", message)\n\ndef on_error(ws, error):\n    print(\"### error ###\")\n    print(error)\n\n\ndef on_close(ws):\n    print(\"### closed ###\")\n\n\ndef on_open(ws):\n    msg = '{\"action\": \"subscribe\", \"channel\": \"prices\", \"symbol\": \"BTC-EUR\", \"granularity\": \"60\" }'\n    ws.send(msg)\n\n\nif __name__ == \"__main__\":\n    url = \"wss:\/\/ws.prod.<blockchain>.info\/mercury-gateway\/v1\/ws\"\n    websocket.enableTrace(True)\n    ws = websocket.WebSocketApp(url,\n                                on_message=on_message,\n                                on_error=on_error,\n                                on_close=on_close)\n    ws.on_open = on_open\n    options = {'origin': 'https:\/\/exchange.<blockchain>.com'}\n    ws.run_forever(origin=options['origin'])","812":"To execute this query successfully you'll need to treat the hash value as a blob type Ion literal, which can be done using backticks and{{...}} :\nSELECT * FROM history(Users) AS h WHERE h.hash = `{{8kmIsF2X2HonQDhuoosBbKZtSQCjHZgnyUmPGZa9pJc=}}`\n\nReference: https:\/\/docs.aws.amazon.com\/qldb\/latest\/developerguide\/ql-reference.query.html#ql-reference.query.backtick\nIt is worth noting that this query scans every revision for all documents in the Users table. QLDB's\nhistory does not support indexes and this query will degrade as the table grows.","813":"For Ethereum the API is called <web3>.eth.getBalance.\nThere is no generic solution because each <blockchain> uses its own incompatible wallet technology.","814":"Your Ethereum accounts system is based on public-key <cryptography>, specifically digital signatures.\nEach active Ethereum account is derived from a public-key and has some secret-key known only to the account owner.\nThe Ethereum account balances, and evermore, the entire state, are known to each and every node in the network.\nSending Money\nWhen you want to transfer money to a different account, you sign (using your secret-key) a transaction with the transfer details, and you broadcast it to the Ethereum network. The transfer is finalized after a miner node added it to a block.\nMetamask is a wallet providing three independent services:\n\nKey storage: storage and management of your secret keys.\nSigning: Transaction signing.\nBroudcast: Broadcasting signed <transactions> (I think it does it through infura.io by default).\n\nYou can replace each of those services using various alternatives:\n\nKey storage: you can use other wallets, or even other common ways to store you private keys (the key is only 32 byte long).\nSigning: the article you referd to shows how you can sign using the <web3> library.\nBroadcast: you can broadcast your signed <transactions> through any Ethereum node. You can bring one yourself (e.g. <geth>\/parity) or use SaaS (e.g. Infura\/Alchemy).\n\nReceiving Money\nIn order to receive money, you don't have to run any software. If John Doe signs a transaction where he transfers Ether to you, all the network nodes will see it (once it is mined) and update your account accordingely.","815":"On top of the <blockchain> platforms, various reputation schemes are often built for participants, however, as far as I know, in the technical consensus protocols of the <blockchain> platform themselves, \"reputation\" is used only in a \"binary\" form, and then in the case of using a pool of dedicated validators (this is how it works Ripple).","816":"To summarize, Algorand documentation of REST APIs doesn't suggest explicitly to use the Master-Derivation-Key to retrieve a Wallet when making a POST \/v1\/wallet (link). Conversely, Algorand documentation of <python> SDK suggests that the Master-Derivation-Key can be passed to the create_wallet function, which then makes the HTTP POST stated before, to recover an existing Wallet (link).\nAs explained within my question above, create_wallet fails to recover the Wallet because the underlying POST \/v1\/wallet fails. At the suggestion of @Arty, this has been proved as follow:\ncurl -X POST -H \"X-KMD-API-Token: <kmd-token>\" -H \"Content-Type: application\/json\" -d '{\"wallet_driver_name\": \"sqlite\", \"wallet_name\": <wallet-name>, \"wallet_password\": <wallet-password>, \"master_derivation_key\": <master-derivation-key>}' <kmd-address-and-port>\/v1\/wallet\n\nwhich returned\n{ \"error\": true, \"message\": \"wallet with same name already exists\" }\n\nI notified this problem to the Algorand support and I'm currently waiting for a reply. Anyhow, in order to give some sense to the question's title, I want to share another possible solution to recover a Wallet still by relying on the <python> SDK:\nfrom algosdk import kmd\nfrom algosdk import wallet\nfrom algosdk import mnemonic\n\nkmd_clt = kmd.KMDClient(<kmd-token>, <kmd-address-and-port>)\nif kmd_clt:\n    kmd_wlt_mdk = None\n    kmd_wlt_list = kmd_clt.list_wallets()\n    for kmd_wlt in kmd_wlt_list:\n        kmd_name = kmd_wlt['name']\n        kmd_id = kmd_wlt['id']\n        if kmd_name == <wallet-name>:\n            kmd_wlt_hdl = kmd_clt.init_wallet_handle(kmd_id, <wallet-password>)\n            if kmd_wlt_hdl:\n                kmd_wlt_mdk = kmd_clt.export_master_derivation_key(kmd_wlt_hdl, <wallet-password>)\n            break\n    if kmd_wlt_mdk:\n        wlt = wallet.Wallet(<wallet-name>, <wallet-password>, kmd_clt, mdk=kmd_wlt_mdk)\n        if wlt:\n            acc_addr_list = wlt.list_keys()\n            for acc_addr in acc_addr_list:\n                account_address = acc_addr\n                print(account_address)\n                account_key = wlt.export_key(acc_addr)\n                print(account_key)\n                account_mnemonic = mnemonic.from_private_key(account_key)\n                print(account_mnemonic)\n\nI hope it will be useful to someone else in the future.","817":"Ethereum does not support native threshold wallets. You need to use multisignature wallets like Gnosis Safe.\nGnosis Safe requires only one transaction per execution from the multisig wallet. Other communication happens off-chain. Thus your assumption \"very expensive and slow, because it requires a lot of <transactions>.\" is incorrect.","818":"I had to do a small change to type definitions to circumvent the problem. In other words replace:\n\n  const types = Object.values(plasmDefinitions).reduce(\n      (res, { types }) => ({ ...res, ...types }),\n      {},\n  );\n\n  const api = new ApiPromise({\n      provider,\n      types\n  });\n\n\nfor\n\n  const types = Object.values(plasmDefinitions).reduce(\n      (res, { types }) => ({ ...res, ...types }),\n      {},\n  );\n\n  types[\"Address\"] = \"IndicesLookupSource\";\n  types[\"LookupSource\"] =  \"IndicesLookupSource\";\n\n  const api = await ApiPromise.create({\n    provider: provider,\n    types: types\n  });\n\n\nMore information about this issue can be found here and here","819":"I have encountered the same problem as you when I try to deploy fabric on kubernetes,and I have sloved it,I push it to my github, https:\/\/github.com\/iamlzw\/byfn-on-k8s ,\nbecause kubernetes DNS standard,you cant use peer0.org1.example.com as your service name,so I define peer0-org1 as my service name,but the CN of my peer certificate is \"peer0.org1.example.com\",that means I have to concat peer with domain name \"peer0-org1:7051\",and I will meet \"tls:bad certificate\" error, if concat peer with domain name \"peer0.org1.example.com\",that means I have to link \"peer0.org1.example.com\" to the pod IP of peer on k8s DNS,but I dont know how to do this.\nso how to solve the problem you raised in the comments:\n\nif you concat to peer on linux terminal,you can modify \/etc\/hosts to link \"peer0.org1.example.com\" to node IP which your peer is run(and your peer service is run with NODEPORT type), I use this method.\nif you concat to peer with cli container which is deploy on kubernetes pods,and you have set SAN on your peer certificat,you can set cli env CORE_PEER_ADDRESS=peer0,and you can concat with peer use peer0:7051,you will concat success, you can reference https:\/\/support.dnsimple.com\/articles\/what-is-ssl-san\/#:~:text=The%20Subject%20Alternative%20Name%20(SAN)%20is%20an%20extension%20to%20the,use%20of%20the%20common%20name \u00e3\u0080\u0082","820":"By the documentation of getTransaction, it returns a transaction only after the transaction is mined. You can wait for it to be mined using the waitForTransactionReceipt method.","821":null,"822":"You do not need to deploy contract for calling its methods using <web3>.js.\nOnly if the methods need owner rights you could not be able to call its methods, but otherwise, you can call methods of the smart contract.\nAlso you can use Etherscan for calling contract methods. Navigate to the Contract section of your selected smart contract, then in sections Read Contract and Write Contract you can call contracts' methods.","823":"MetaMask is implementing a new feature called snaps: (Documentation).\nOnce this functionality becomes standard, it would become trivial to make a snap that manages keychains for Polkadot. For example, here is the FileCoin snap: https:\/\/github.com\/Chainsafe\/filsnap\/","824":"The problem was that infura allows only to connect 1 contract per project. So if you want to connect to another contract you need to open another project.","825":"For getting public variable the compiler automatically formed function.\nIn you case you can get hello string with function with hash c660ab0e\n\nOr use your function <geth>ello().\nFor calling function(example, helloStr()) you should use:\n{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\", \"params\":[{\"to\":\"address your smart contract\", \"data\":\"0xc660ab0e\"}, \"latest\"],\"id\":1}\nOr use <web3> with call:\nhttps:\/\/<web3>js.readthedocs.io\/en\/v1.2.0\/<web3>-eth.html#call","826":"You can cast the first value to be of type uint256 and the whole array will be of that type.\nuint256[10] memory myNumbersArray;\nmyNumbersArray = [uint256(0), 100, 200, 300, 400, 500, 600, 700, 800, 900];","827":"<transactions> do not have a confirmation count per se, but the blocks that they are a part of do indeed have confirmation counts. Thus, the solution lies in \"comparing\" the block number of a particular transaction.\nUsing curl\nThere are several ways to do this,\nand the easiest method is the eth_getTransactionByHash JSON-RPC method:\ncurl \\\n  -X POST \\\n  -H \"Content-Type:application\/json\" \\\n  --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\":[\"0xf1ebb8076ad289fbaef4406bb0488be0c5605a58cfa2a6d11540b1f9b0d7ef98\"],\"id\":1}' \\\n  https:\/\/public-node.testnet.rsk.co\n\nThe above cURL command is for transaction 0xf1ebb8076ad289fbaef4406bb0488be0c5605a58cfa2a6d11540b1f9b0d7ef98 on the RSK Testnet.\nThe response is copied below:\n{\n   \"result\" : {\n      \"input\" : \"0xcbf8...(redacted)\",\n      \"nonce\" : \"0xda62\",\n      \"blockNumber\" : \"0x17fe5c\",\n      \"gasPrice\" : \"0x3938700\",\n      \"hash\" : \"0xf1ebb8076ad289fbaef4406bb0488be0c5605a58cfa2a6d11540b1f9b0d7ef98\",\n      \"blockHash\" : \"0xede9aa2ff4939482186d4e6bd269582352a923db13ef90ad7def0d0dec17a239\",\n      \"r\" : \"0x8c98a16250d157db1fb11e1304684943796710e3f1292a4fb60a0711692f2b8f\",\n      \"value\" : \"0x0\",\n      \"s\" : \"0x49cdc35f66dbea2ba88e3c52dc3f4c68498b844dd79eebafc326803e7163f7fc\",\n      \"transactionIndex\" : \"0x0\",\n      \"gas\" : \"0x17c65\",\n      \"from\" : \"0xd761cc1ceb991631d431f6dde54f07828f2e61d2\",\n      \"to\" : \"0x8bf2f24afbb9dbe4f2a54fd72748fc797bb91f81\",\n      \"v\" : \"0x1c\"\n   },\n   \"jsonrpc\" : \"2.0\",\n   \"id\" : 1\n}\n\n\nFrom \"blockNumber\" : \"0x17fe5c\" we know that the block number of this particular block is 1572444.\nThe next step is to compare this block number of this transaction to the latest block number.\nTo do so, we need to use a different JSON-RPC request.\ncurl \\\n  -X POST \\\n  -H \"Content-Type:application\/json\" \\\n  --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}' \\\n  https:\/\/public-node.testnet.rsk.co\n\n{\n   \"id\" : 1,\n   \"result\" : \"0x180208\",\n   \"jsonrpc\" : \"2.0\"\n}\n\nFrom \"result\" : \"0x180208\" we know that the block number of the most recent block is 1573384.\nnode -e \"console.log(0x180208 - 0x17fe5c);\"\n940\n\nWe subtract the transaction's block number\nfrom the latest block number,\nwhich yields the answer:\n940 in this case - the number of confirmations.\nUsing <web3>\nYou can do the same using <web3> (different hash in the example, mainnet):\n<web3>.eth.getTransaction(\"0x9117f2fab63c89676b6538a317d0b9ec74cc4ac8f375c80c0f2b57223cbd6bb2\")\n\n{ hash: '0x9117f2fab63c89676b6538a317d0b9ec74cc4ac8f375c80c0f2b57223cbd6bb2',\n  nonce: 118329,\n  blockHash: '0x02c40394a7ed66bc50a0f1853220a395efd1e3cfebea5e0ff36dd5a0a12b2aeb',\n  blockNumber: 3089723,\n  transactionIndex: 1,\n  from: '0x64DCC3BCbeaE8ce586CaBDef79104986bEAFcaD6',\n  to: '0xBEd51D83CC4676660e3fc3819dfAD8238549B975',\n  gas: 2000000,\n  gasPrice: '60000000',\n  value: '0',\n  input: '0x5a686699000000000000000000000000000000000000000000000000032d5284006bf8730000000000000000000000000000000000000000000000000000000060214e2a000000000000000000000000504efcadfb020d6bbaec8a5c5bb21453719d0e00',\n  v: '0x1b',\n  r: '0x2faaa315b1b3cd7421db1dc5fa243ddfae906282872c2bd9207e7e2dfed8286e',\n  s: '0x571fa5a28a48755bdf93aacd28d8d7d8986b1e2db0f5450e2355e7f3c91db30b' }\n\nIn this case, you get 3089723 from blockNumber\nNow, you query the current best block:\n<web3>.eth.getBlockNumber(console.log)\n\n3089747\n\nAnd, therefore, you have 3089747 - 3089723 = 24 confirmations.","828":"Persisting \/ committing blocks is independent of validating <transactions> and updating the state.  As long as the block is the correct sequence and signed by the correct orderer(s), it will be committed.  Fabric than annotates each transaction in the block with metadata indicating the validity of each transaction.\n\nAs both Org1 and Org2 have peers which successfully endorse the transaction, the transaction is valid for peers which have not been tampered with.  If there were not enough peers available to endorse the transaction, it would be considered invalid by all peers.  There is no need to halt the system as <transactions> are being properly handled with the context of the network trust parameters.","829":"The path\n'$.017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894.transaction.size'\ncannot have a node starting with a 0. So enclose it in quotes:\n'$.\"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\".transaction.size'.\nYou also have a problem with your actual JSON, in that it has trailing commas, which is not supported in SQL Server, nor in the vast majority of parsers and browsers, as it is against the spec.\n\nIf you have different key names for each value, then you need to break out the JSON with OPENJSON:\nSELECT b.*, j.[key] AS hash, JSON_VALUE(j.value,'$.transaction.size') as jj\nFROM <blockchain> as d\nCROSS APPLY OPENJSON(d.json_data) AS j","830":"In Ethereum, using only a smart contract, you cannot work directly with the host's software environment. A smart contract can work exclusively with the data of the <blockchain> itself.\nIf you want to implement the required deployment procedure, you must additionally create an Oracle service that will receive information from a smart contract and perform the required actions in the context of the host operating system. At the same time, you need to think about how you will redo the docker image, since its direct transfer through the <blockchain> is unrealistic. To do this, you can use, for example, ipfs, cloud storage, web repositories, and so on.","831":"The data transmitted as part of a transaction (method and parameters) is stored in the <blockchain>. The results of transaction processing by the contract are stored in the local storage of each node. The contract has access to its data at any time.\nAn example of a contract is below:\n\nthe AddCustomer method is called transactionally and adds a user\nthe GetCustomerById method is called \"locally\" and shows user data by his identifier\n\npragma solidity 0.5.0;\n\ncontract Gym\n{\n    address  Owner   ;\n\n    struct Customer\n    {\n       bytes32  name ;\n       bytes32  surname ;\n       bytes32  start_date ;\n       bytes32  end_date ;\n    }\n\n    mapping (bytes32 => Customer) Customers ;\n\n\n   constructor() public\n   {\n      Owner = tx.origin ;\n\n   }\n\n   function AddCustomer(bytes32 id_, bytes32 name_, bytes32 surname_, bytes32 start_date_, bytes32 end_date_) public\n   {\n          Customers[id_]=Customer({       name: name_, \n                                       surname: surname_,\n                                    start_date: start_date_,\n                                      end_date: end_date_\n                                   }) ;\n   }\n\n    function GetCustomerById(bytes32 id_) public view returns (bytes32, bytes32, bytes32, bytes32 retVal)\n    {\n       return(Customers[id_].name, Customers[id_].surname, Customers[id_].start_date, Customers[id_].end_date) ;\n    }\n\n}","832":"Do not try to store images on the <blockchain>. Although some DLT platforms, such as Highperleger Fabric and Corda, support the storage and transfer of rather large pieces of data, the general principle of storing images and, in general, large files is the following.The file is saved either in a decentralized file system (Ipfs, Ethereum Swarm, Storj and so on), or in cloud storage, or on a web resource. Further, the link to the file and its hash (to control the integrity and exclude substitution) are sent to the <blockchain>.","833":"Because all <transactions> are executed synchronously, it is not possible for oracle state to change during the loop.\nYou cannot sleep() in a smart contract, so your question does not make any sense in the first place.","834":"Or must it be my backend asking to do the same operations for day 2 and every day of the week?\n\nYes.","835":"I found the error myself, you need to remove the -tmp flag before starting, create your folders with the command -d \/ node \/ node1, and after inserting the keys, restart the nodes","836":"The error can be happening because the loading of <web3>. Please, try this function:\nasync load<web3>(){\nif(window.ethereum){\n  window.<web3> = new <web3>(window.ethereum)\n  await window.ethereum.request({ method: 'eth_requestAccounts' })\n}\nelse if(window.<web3>){\n  window.<web3> = new <web3>(window.ethereum)\n}\nelse{\n  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\")\n}\n\n}\nAlso, do not forget to add the import on your javascript class:\nimport <web3> from '<web3>'\n\nand install the import with the npm:\nnpm i <web3> --save","837":"This has solved the issue. I had to add the 2 flags of --cfg.identities.allowremove and --cfg.affiliations.allowremove and then restart docker and it worked.","838":"If you are using a public Ethereum, then storing draft data on a smart contract will be expensive (since that means storing it on the <blockchain>). If this is a private Ethereum, then it depends on whether the draft data should be available only on the node where it was created or on all or some of the network nodes too. Keep in mind that to reduce the size of data stored directly on the <blockchain>, you can use either a decentralized file system (IPFS, Ethereum swarm) for distributed data storage or cloud storage with only links to the data itself being transferred to the <blockchain>.\nWhile the draft data can only be accessed by the site where it is created, the choice between a database and file storage is essentially a matter of taste and personal preference. The size of the data \u00e2\u0080\u0094 tens of bytes or megabytes \u00e2\u0080\u0094 and the capabilities of the available database management systems can also be affected.","839":"Private node doesn\u00e2\u0080\u0099t connect to any peer other than explicitly provided or specified in bootstrap nodes list (default). Also, peers that are connected to a private node don\u00e2\u0080\u0099t advertise its address to others.\nPrivate nodes are typically used for sensitive operations. The entire setup includes one or many (failover) public (edge\/frontend) nodes that are exposed to the p2p network, and single or multiple private (backend) nodes that are connected only to the edge nodes.\nBaker is block producer in Tezos.\nBaker's software consists of several components including \"baker\" service, responsible for consensus operations and block producing. It uses Tezos node for reading <blockchain> data and injecting (broadcasting) operations and blocks via RPC interface.\nNote, that while your node can be in public mode you can still disallow incoming p2p connection at the firewall level. TzKT treats nodes as public if  they are accepting new connections thus can be used for bootstrap and improving connectivity.\nAlso note, that private\/public is about p2p exposure, RPC endpoints (actually HTTP REST) availability is solely depends on your reverse proxy setup.","840":"There is no real difference. BlockCypher and Infura are just 3rd party companies which have created their own set of api endpoints which control access to the ethereum json rpc api.\nThe best thing to do would be to check the documentation of each one to ensure they are capable of what you aim to use it for.\nYou may find one api has more features than the other.\nWhat exactly do you need it for?","841":"There is a small typo in your code, maybe this already fixes your problem :\nIn your code you wrote :\nlet LifeInsurance = null;\n\n\/* and then *\/\nlifeInsurance = await LifeInsurance.deployed();\n\nNote the small typo for LifeInsurance vs. lifeInsurance\nI think your code should look like this\nlet lifeInsurance = null; \/\/ small \"L\" here\n\n\/* and then *\/\nlifeInsurance = await LifeInsurance.deployed();","842":"Light nodes do not retain full state or event data, making them useless for most of dApp development.","843":null,"844":"You can fix it by doing reenroll as you said.\nThe update command of IdentityService is to update the identity of registered user in CA.\nSince this is not the process of updating the certificate, the only way to obtain a certificate containing the newly modified Attr is to obtain a new certificate (the certificate is the X.509 standard).\n\nWhy does the attr change require a new certificate?\n\nFabric generally uses the X.509 certificate standard method.(when not using idemix)\nActually not only Fabric, almost all certificates on the web follow the standard.\nIn Fabric, the Attr is existed in extensions in the X509(v3) certificate and has the following format.\n\nX509v3 extensions:\n    ...\n    1.2.3.4.5.6.7.8.1:\n        {\"attrs\":{\"hf.Affiliation\":\"org1.department1\",\"hf.EnrollmentID\":\"appUser5\",\"hf.Type\":\"client\",\"userType\":\"userType\"}}\n    ...\n\n\nIn other words, when Attr is modified, extensions are modified.\nIn X.509(v3), extenstions are also included in the certificate integrity verification process.\nThe integrity verification process is implemented based on PKI and Hash, and is provided in the form of attaching the signature signed by the CA to the hashed data (including extensions) to the certificate.\nThat is, if extensions are modified, the signature in the certificate must be modified, which means that a new certificate must be issued.\n\n\nCome back to Fabric,\n\nThe reenroll command is an act of newly issuing enrolled user data based on the registered user.\nAfter updating, a new certificate is issued through the reenroll command to obtain a certificate that includes new Attrs in the corresponding certificate.\n\nThe following example code has been tested and works. See this.\n\/\/ registerUser, enrollUser, updateUser, reEnrollUser\n\n\/*\n * Copyright IBM Corp. All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n *\/\n\n'use strict';\n\nconst { Wallets } = require('fabric-network');\nconst FabricCAServices = require('fabric-ca-client');\nconst fs = require('fs');\nconst path = require('path');\n\nasync function main() {\n    try {\n        \/\/ 0. given, already enrolled 'admin'\n        const ccpPath = path.resolve(__dirname, '..', '..', 'test-network', 'organizations', 'peerOrganizations', 'org1.example.com', 'connection-org1.json');\n        const ccp = JSON.parse(fs.readFileSync(ccpPath, 'utf8'));\n        const caURL = ccp.certificateAuthorities['ca.org1.example.com'].url;\n        const ca = new FabricCAServices(caURL);\n        const walletPath = path.join(process.cwd(), 'wallet');\n        const wallet = await Wallets.newFileSystemWallet(walletPath);\n        const provider = wallet.getProviderRegistry().getProvider('X.509');\n        \n        \/\/ 1. register testUser\n        const adminIdentity = await wallet.get('admin');\n        const appUser = 'testUser';\n        const adminUser = await provider.getUserContext(adminIdentity, 'admin');\n        const secret = await ca.register({\n                affiliation: 'org1.department2',\n                attrs: [{name: 'userType', value: 'userType', ecert: true}],\n                enrollmentID: appUser,\n                role: 'client'\n        }, adminUser);\n\n        \/\/ 2. enroll testUser\n        const enrollment = await ca.enroll({\n                enrollmentID: appUser,\n                enrollmentSecret: secret\n        });\n        const x509Identity = {\n                credentials: {\n                        certificate: enrollment.certificate,\n                        privateKey: enrollment.key.toBytes(),\n                },\n                mspId: 'Org1MSP',\n                type: 'X.509',\n        };\n        await wallet.put(appUser, x509Identity);\n\n        \/\/ 3. update testUser's Identity in Fabric-CA\n        const appUserIdentity = await wallet.get(appUser);\n        const newAppUser = await provider.getUserContext(appUserIdentity, appUser);\n        const identityService = ca.newIdentityService();\n        var theIdentityRequest = { enrollmentID: appUser, affiliation: 'org1.department1', attrs: [ {name: 'userType', value: 'Student', ecert: true} ] };\n        let response = await identityService.update(appUser, theIdentityRequest, adminUser);\n        console.log(\"userIdenity attributes: \", response.result.attrs);\n\n        \/\/ 4. reenroll testUser\n        const newEnrollment = await ca.reenroll(newAppUser);\n        const newX509Identity = {\n                credentials: {\n                        certificate: newEnrollment.certificate,\n                        privateKey: newEnrollment.key.toBytes(),\n                },\n                mspId: 'Org1MSP',\n                type: 'X.509',\n        };\n        await wallet.put(`new_${appUser}`, newX509Identity);\n\n    } catch (error) {\n        console.error(`Failed to register user \"appUser\": ${error}`);\n        process.exit(1);\n    }\n}\n\nls wallet\ntestUser.id  new_testUser.id\n\nThe result of docode the issued certificate\n(hf.Affiliation and userType are updated)\n\/\/ attrs in 'enroll' Certificate's extensions\n{\"attrs\": \"hf.Affiliation\":\"org1.department2\",\"hf.EnrollmentID\":\"testUser\",\"hf.Type\":\"client\",\"userType\":\"userType\"}}\n\n\/\/ attrs in 'reenroll' Certificate's extensions\n{\"attrs\":{\"hf.Affiliation\":\"org1.department1\",\"hf.EnrollmentID\":\"testUser\",\"hf.Type\":\"client\",\"userType\":\"Student\"}}\n\n\n[P.S] Looking at the Version indicated in the client's identity, it seems that there may be a way to upgrade the existing one, but I have not checked or tried it.","845":"Try that :\nconst <web3> = require('<web3>');\nconst <web3> = new <web3>(window.ethereum);\nconst accounts = await <web3>.eth.getAccounts();\nvar userAccount = accounts[0];","846":"It is possible, but you have to spend a very, very long time trying to find the contents of block C to match the hash in block A.","847":null,"848":"The value you're trying to scrape - the total ICX balance - appears to be the sum of the \"available\" ICX, and the \"staked\" ICX:\n\nI've added the red lines for emphasis. The sum of these two values is the total ICX balance. Again, if you log your browser's network traffic, you'll find that these values come from requests made to different REST APIs. One is a HTTP GET request, the other an HTTP POST request. Again, you can find out how the POST payload is supposed to look by looking at the network traffic logs. If you need a little guidance for how to approach these kinds of network-traffic-sniffing solutions, I recommend you read this answer I posted for a different question, where someone needed help scraping information from a page about different wines and vineyards, and that page also happened to make XHR requests to a REST API. In it, I go more in-depth about each step of logging your network traffic, and finding the information you're looking for.\ndef get_available_icx(address):\n\n    import requests\n\n    url = \"https:\/\/tracker.icon.foundation\/v3\/address\/info\"\n\n    params = {\n        \"address\": address\n    }\n\n    response = requests.get(url, params=params)\n    response.raise_for_status()\n\n    return float(response.json()[\"data\"][\"balance\"])\n\ndef get_staked_icx(address):\n\n    import requests\n\n    url = \"https:\/\/wallet.icon.foundation\/api\/v3\"\n\n    form_data = {\n        \"jsonrpc\": \"2.0\",\n        \"id\": 0,\n        \"method\": \"icx_call\",\n        \"params\": {\n            \"from\": \"hx0000000000000000000000000000000000000000\",\n            \"to\": \"cx0000000000000000000000000000000000000000\",\n            \"dataType\": \"call\",\n            \"data\": {\n                \"method\": \"getDelegation\",\n                \"params\": {\n                    \"address\": address\n                }\n            }\n        }\n    }\n\n    response = requests.post(url, json=form_data)\n    response.raise_for_status()\n\n    return int(response.json()[\"result\"][\"totalDelegated\"], 16) \/ (10 ** 18)\n\n\n\ndef main():\n\n    address = \"hx4ae18d8f72200dc564673a0ae7206d862992753c\"\n\n    total_icx = get_available_icx(address) + get_staked_icx(address)\n    print(total_icx)\n    \n    return 0\n\n\nif __name__ == \"__main__\":\n    import sys\n    sys.exit(main())","849":"You're right. This page is populated asynchronously using JavaScript, so BeautifulSoup and similar tools won't be able to see the specific content you're trying to scrape.\nHowever, if you log your browser's network traffic, you can see some (XHR) HTTP GET requests being made to a REST API, which serves its results in JSON. This JSON happens to contain the information you're looking for. It actually makes several such requests to various API endpoints, but the one we're interested in is called txList (short for \"transaction list\" I'm guessing):\ndef main():\n\n    import requests\n\n    url = \"https:\/\/tracker.icon.foundation\/v3\/block\/txList\"\n\n    params = {\n        \"height\": \"29562412\",\n        \"page\": \"1\",\n        \"count\": \"10\"\n    }\n\n    response = requests.get(url, params=params)\n    response.raise_for_status()\n\n    base_url = \"https:\/\/tracker.icon.foundation\/transaction\/\"\n\n    for transaction in response.json()[\"data\"]:\n        print(base_url + transaction[\"txHash\"])\n\n    return 0\n\n\nif __name__ == \"__main__\":\n    import sys\n    sys.exit(main())\n\nOutput:\nhttps:\/\/tracker.icon.foundation\/transaction\/0x9e5927c83efaa654008667d15b0a223f806c25d4c31688c5fdf34936a075d632\nhttps:\/\/tracker.icon.foundation\/transaction\/0xd64f88fe865e756ac805ca87129bc287e450bb156af4a256fa54426b0e0e6a3e\n>>>","850":"In the log that you brought there is an error ERROR: AcceptBlockHeader: Consensus :: ContextualCheckBlockHeader :. Most likely for this reason synchronization is not starting . Have you tried to find information about this error? It seems like this https:\/\/github.com\/Bitcoin-ABC\/bitcoin-abc\/issues\/324 .","851":"A very good question, sir.\nUsually, in setups like this backend signs the transaction with its wallet key. The backend has a hot wallet with ETH balance to be able to create and broadcast <transactions>.\nThe transaction is pushed to Ethereum API node over JSON-RPC. The node broadcasters the transaction to P2P network. A miner picks up the transaction from the mempool. A new block is created. The miner broadcasts the newly crated block back to the peer-to-peer network. Your Ethereum node picks up the new block. <web3>.js backend application polls or subscribes events related to the smart contracts from your Ethereum node. Backend event <web3>.js handlers are fired for the state changes in the new block.\nNote that the blocks can be also rolled back in the case of a minor <blockchain> reorganisation. In the case or reorganisation, the event handlers fire again (twice, thrice, etc.) for each competing block. Minor <blockchain> reorganisation may occur many times in an hour. The current state is probabilistic, so you always need to wait for a few blocks to be sure.\nFor events and <transactions> by other actors in the <blockchain>, you just subscribe to the events and process them as new blocks arrive from miners to your node.","852":"Though <blockchain> is immutable, it does not mean the current state can not be updated. Each Ethereum block is a new state that consists of account balances and smart contract variables. The current state is the last valid block which your Ethereum node sees. History cannot be altered, but the current state can be altered with <transactions>.\nAs the question is overly broad and over basic <blockchain> concepts, I suggest taking classes in Ethereum smart contract development first.","853":"Is there a way to convince the player that we really called the smart contract and that we called it just once?\n\nThe player can sign a message in their wallet and then your server calls the smart contract with this message. The smart contract decrypts the message and acts based on it. The transaction is pushed to the network by your server and the server has a hot wallet that covers ETH cost.\nAlternatively, you can use a layer 2 network like Optimism where transaction costs are cheaper. You can also use Gas Station Network with relayers to make the user pay in a token instead of Ether.","854":"10 minutes is not accurate, but the average time to generate a block. Approximately every 2 weeks, according to the current average block generation time, the current difficulty of generating a \"lucky\" hash is determined, so that the average time is about 10 minutes. In any case, the new block includes <transactions> (not necessarily all) that are pending since the formation of the previous block.","855":"You have to convert argument of decodefunctions tobytes. Also struct.pack returns bytes and codecs.decode returns stringso have to convert results of decode to bytes also.\nimport hashlib\nimport codecs\nimport struct\nimport sys\n\n<blockchain>Object = {\n    'version':536871426,\n    'previousHash': b'aa11661d07d7e13b94403bc00a9786b07fe711140743f0f9d7e35a478d80e840',\n    'merkleRoot': b'a41494afe694e450a7163103fd08ea3d4b5fcb30556165f6e567893989c39222',\n    'bits': 0x19030d6c,\n    'time':1610982871,\n    'nonce':3341292488\n}\n\n\n<blockchain>Header = (\n    struct.pack('<L', <blockchain>Object['version']) +\n    bytes(codecs.decode(<blockchain>Object['previousHash'])[::-1], 'utf-8') +\n    bytes(codecs.decode(<blockchain>Object['merkleRoot'])[::-1], 'utf-8') +\n    struct.pack('<L', <blockchain>Object['time']) +\n    struct.pack('<L', <blockchain>Object['bits']) +\n    struct.pack('<L', <blockchain>Object['nonce'])\n)\n\n<blockchain>HashObject = hashlib.sha256(<blockchain>Header).digest()\n<blockchain>HashDigest = hashlib.sha256(<blockchain>HashObject).hexdigest()\n\nprint(<blockchain>HashDigest)\n\nResult:\n2d2a436603cca71be4c27b51e5e1aa7911cc6cf4ff5ad67a13c17ab7127d7f85","856":"For anyone with the same problem, I just jacked up the gasPrice, and switched over to Ropsten testnet.","857":"im Toni, and I'm <blockchain> Develop hard wallet have own BTC or another crypto private key with a private key u can accses wallet with pc app and make tx or something pub key is your address. Hashing every tx is hashed with miracle tree its something like this 1st tx = hash 123 2nd tx hash = 456 3rd = 789 with miracle tree all that hashes combie in one block hash what will be 123456789, also I want to explain how BTC tx work imagine it like this I send you one box locked with a key when u get it u put another lock on it then u send it back to me and I unlock my key but it's still locked then I send it back to you and it's locked with your key and none could get data from the chest. and not replace your 'gold' in chest with something different","858":"In distributed platforms, 2 models of accounting for account balances are most commonly used:\n\na state model, when each of the nodes, after the execution (or reception) of the transaction, accordingly changes the account state record in its local database (Ethereum, Hyperleger Fabric)\nmodel of unspent remainings (UTXO), when the account balance is formed from the sum of the balances of \"unused\" <transactions> (Bitcoin, Corda)","859":"The use of the IBFT consensus (as well as any consensus of the BFT group) involves the allocation of a special pool of validators, no more than a few dozen, which, by collecting explicit confirmations from each other, determine the validity of the block (or a separate transaction) and the possibility of its inclusion in the chain (for example, this is how Ripple works). For the public Ethereum, this, firstly, violates the very concept of equality of nodes in the network, and secondly, when trying to expand the pool of validators to a comparable number of nodes participating in the public Ethereum, it will inevitably lead to the collapse of the consensus process.\nTherefore, in the public Ethereum, PoW is used, which does not imply the presence of \"special\" nodes and any explicit confirmations - the consensus is based on the fact that following the general rules: finding a \"lucky\" hash and adding a new block to the longest fork, the node has the highest probability of receiving block creation rewards.","860":"What you need is a hierarchially deterministic address generation from a single seed. Here is a HD wallet JavaScript package for Ethereum.\nThere are also tools for token bulk sending that have minor transaction cost savings over doing a single naive transaction per recipient.","861":"I had the same problem, in my case I simply forgot to add\nrequire(\"dotenv\").config();","862":"After Installing Truffle HD wallet provider\nNow Facing\nMacBook-Air Test % truffle migrate --reset --network binancetestnet\n\nCompiling your contracts...\n===========================\n> Everything is up to date, there is nothing to compile.\n\nError: Could not create addresses from your mnemonic or private key(s). Please check that your inputs are correct.\n    at new HDWalletProvider (\/Users\/macbook\/Desktop\/Test\/node_modules\/@truffle\/hdwallet-provider\/src\/index.ts:124:13)\n    at Object.provider (\/Users\/macbook\/Desktop\/Test\/truffle-config.js:12:16)\n    at Object.getProvider (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/provider\/index.js:20:1)\n    at Object.create (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/provider\/index.js:13:1)\n    at TruffleConfig.get [as provider] (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/config\/dist\/configDefaults.js:200:1)\n    at Object.detect (\/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/environment\/environment.js:19:1)\n    at \/usr\/local\/lib\/node_modules\/truffle\/build\/webpack:\/packages\/core\/lib\/commands\/migrate.js:206:1\nTruffle v5.1.54 (core: 5.1.54)\nNode v14.15.4\n\nMy Truffle.js code\nconst HDWalletProvider = require('@truffle\/hdwallet-provider');\nconst privateKeys = process.env.PRIVATE_KEYS || \"\"\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"127.0.0.1\",\n      port: 7545,\n      network_id: \"*\"\n    },\n    binancetestnet: {\n      provider: function() {\n        return new HDWalletProvider(\n          privateKeys.split(','), \/\/ Array of account private keys\n          `https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/${process.env.INFURA_API_KEY}`\/\/ Url to an Ethereum Node\n        )\n      },\n      gas: 5000000,\n      gasPrice: 25000000000,\n      network_id: 97\n    }\n  },\n\n  \/\/ Set default mocha options here, use special reporters etc.\n  mocha: {\n    \/\/ timeout: 100000\n  },\n\n  \/\/ Configure your compilers\n  compilers: {\n    solc: {\n       version: \"0.7.3\",    \/\/ Fetch exact version from solc-bin (default: truffle's version)\n      \/\/ docker: true,        \/\/ Use \"0.5.1\" you've installed locally with docker (default: false)\n      \/\/ settings: {          \/\/ See the solidity docs for advice about optimization and evmVersion\n      \/\/  optimizer: {\n      \/\/    enabled: false,\n      \/\/    runs: 200\n      \/\/  },\n      \/\/  evmVersion: \"byzantium\"\n      \/\/ }\n    }\n  }\n};\n\nMy .env file\nETHERSCAN_API_KEY=https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/\nINFURA_API_KEY=https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/\nPRIVATE_KEYS=\"9xxxxx3fb486a57ad13e6db71xxxxx456e4128d51ecxxxxxxxd\"\nDEV_ADDRESS=\"0xxxxxxe80e3a43EBCab9A6CeC9d9e2a49100AxxxC\"","863":"You can use dynamic checkpoints, as same as it used in Peercoin or Emercoin.","864":"Any random number generated in a smart contract can be guessed beforehand by someone. Thus any random number generated in a smart contract is insecure.\nIf you call the smart contract from the trusted source, you can as well generate the random number in the trusted source and not be kicking the can down the road. Generating addresses is just smoke and mirrors as of course, someone knows what addresses they are generating.","865":"To integrate Chainlink with another <blockchain>, you need 3 pieces:\n\nA way to read events from the new <blockchain>\nA way to send <transactions> from the node to the new <blockchain>\nA LINK token bridge\n\n#1 is defined by external initiators. These are just processes that learn how to read the new <blockchain>s\n#2 is defined by external adapters. These are just processes that can write back to the chains (and do anything else really)\n#3 There isn't a standard token bridge for all <blockchain>s, but one could actually build a token bridge out of Chainlink's proof of reserve.\nA good example of a <blockchain> integration with a very different <blockchain> is Chainlink with Conflux. You can see the example code in their repos.","866":"What practical problem do you want to solve with the help of AI in <blockchain>?\nWhen using a rule graph (tree), AI may well be implemented in the Ethereum smart\ncontract, although the cost of loading the rules graph can be quite significant.\nWhen using DLT platforms with smart contracts in native languages (Hyper Ledger Fabric, EOSIO, Corda and so on), you can easily implement any AI techniques.\nFor DLT platforms with the execution of smart contracts on virtual machines (Ethereum, Quorum), you can use the Oracles methodology also without limiting the capabilities of AI.","867":"for each authorized voter, i want the app, to change the credentials to that particular voter's credentials of their <blockchain> account.\n\nYou can program any kind of rules for your voting smart contract using Solidity programming language. This includes how voting rights are distributed. However \"how to create a smart contract based voting system\" is too wide topic for StackOveflow answer, more of a material for University course or very long online tutorial.","868":null,"869":null,"870":"you could do this a bunch of different ways.\nMaybe the easiest way would be in the flow? You just want to create a rule that ensures only a certain account can run or have a flow run involving it.\nExample:\n\/\/ Create account by using sub flow (from inside a flow).\nval accountInfo: StateAndRef<AccountInfo> = subFlow(CreateAccount(\"Roger's account\"))\n\/\/ Then look up the account by account ID and name.\naccountService.accountInfo(accountInfo.state.data.name)\naccountService.accountInfo(accountInfo.state.data.identifier.id)\n\nTake a look at this link for the source docs. Good luck!\nhttps:\/\/github.com\/corda\/accounts\/blob\/master\/docs.md","871":"If you are considering separate groups, then PBFT should be considered within these groups. If you have PBFT within 10 members, then this means that they all participate in the confirmation of EACH request.","872":"emit NotEnoughEth('Please make sure to send correct amount');\n\nyou can't do this.\nto be able to emit a types.Log you need your evm.Call() to execute without doing a revert. There are 2 instructions in the EVM you are referring to: makeLog (https:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/instructions.go#L828) this is the one that creates and Event log. And opRevert (https:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/instructions.go#L806) , so if you do the revert, your Call() will return an error, and all the result of the transaction on ethereum State database will be reverted and nothing will be saved. Since the storage is cancelled, there is no way for your Log to be saved on the <blockchain>.\nThis is the code that will check for error, and reverts to previously saved state (aka Snapshot) :\n    if err != nil {\n        evm.StateDB.RevertToSnapshot(snapshot)\n        if err != ErrExecutionReverted {\n            gas = 0\n        }\n        \/\/ TODO: consider clearing up unused snapshots:\n        \/\/} else {\n        \/\/  evm.StateDB.DiscardSnapshot(snapshot)\n    }\n    return ret, gas, err\n}\n\nhttps:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/evm.go#L280\nEven though the opRevert() instruction doesn't explicitly returns an error, the Jump table is configured to always return an error for opRevert :\ninstructionSet[REVERT] = &operation{\n    execute:    opRevert,\n    dynamicGas: gasRevert,\n    minStack:   minStack(2, 0),\n    maxStack:   maxStack(2, 0),\n    memorySize: memoryRevert,\n    reverts:    true,\n    returns:    true,\n}\n\nhttps:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/jump_table.go#L155\nand the Interpreter will issue errExecutionReverted on its own:\n    case operation.reverts:\n        return res, ErrExecutionReverted\n\nhttps:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/interpreter.go#L297","873":null,"874":"withdrawals are restricted through API due to security reasons. As for the deposit, you can use Get crypto address to get the deposit address and use it with some other exchanges API","875":"Use the updated fabric images for Peers, Orderers, and Fabric CA.","876":"To send a transaction, you need an account. To sign a transaction from this account, you need a private key. Therefore, you will need some kind of account with a private key.","877":null,"878":"Adding the following exclusion on my Application class fixed the above mentioned problem.\n@EnableAutoConfiguration(exclude = [org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration::class])","879":"If we talk about public <blockchain>s, then the technical protocols of the <blockchain> allow individual miners or a group of conspiracy miners, for example, not to process <transactions> from certain addresses, so that they always remain pending. The only protection against this is the presence of a large number of nodes in the network, which excludes the exclusive capture by \"bad nodes\" of the block generation process.","880":"Figured it out. Chainlink can return decimals along with the answer.\n function getLatestPrice() public view returns (int, uint8) {\n    (\n      uint80 roundID,\n      int price,\n      uint startedAt,\n      uint timeStamp,\n      uint80 answeredInRound\n  ) = priceFeed.latestRoundData();\n\n    uint8 decimals = priceFeed.decimals();\n    return (price, decimals);\n  }","881":"WSL doesn't support systemd and so:\nsystemctl .....\n\nwon't work\nInstead use service and so:\nsudo service waves start","882":null,"883":"Well first of all i would suggest you to use VS code or whatever IDE on your machine and make sure you installed ipfs using command\nnpm i -g ipfs \n\nfor react project tho and make sure to run (from root project)\nnpm install\n\nto actually put the library (ipfs) into your node_modules\nThen hopefully you'll be able to import openzepplin libraries of ERC721\nenter image description here","884":"You should replace 'fromaddr' with 'toaddr'\nvar obj = setInterval(async () => {\n            if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n                clearInterval(obj)\n                var tronweb = window.tronWeb\n                var tx = await tronweb.transactionBuilder.sendTrx('toaddr', 10, 'fromaddr');\n                var signedTx = await tronweb.trx.sign(tx);\n                var broastTx = await tronweb.trx.sendRawTransaction(signedTx);\n                console.log(broastTx)\n            }\n        }, 10)","885":"Smart contract or chaincode is docker container run on your machine and connect to your peer to get and set transaction result. Each chaincode consist of multiple function that each function result a set of read and write pair <transactions>. In state 2.2 you send only the proposal and data does not change in this step.\nLedger is a key-value pair data store that store in couchDB. chaincode ask for latest state of a key from a peer, peer lookup from its couchDB of levelDB and return the result of read and also check the consistency of write sets but does not write in DB in this step.\nWrites will happen in state 4.2","886":"Declare owned contract before NLtoken contract.\nAnd keep in mind that the event name is case sensitive:\nemit Transfer(0, owner, _mintedAmount);\nemit Transfer (owner, _target,_mintedAmount);","887":null,"888":"By attaching his block to the longest chain a miner increases the chances that the block he created will get into the main chain and, accordingly, that he will receive a reward for creating a block. If the created block falls out of the main chain, then the miner will not receive a reward for it (Ethereum implements a more complex reward mechanism for creating a block, but in the simplest representation it is close to this).\nTheoretically, each of the nodes can choose to which of the forks to add the block he created, but if he wants the block to remain in the main chain, he is forced to follow the general rule.","889":"Short answer: If the contract doesn't provide the list of map's object keys, you can't get it.\nLong answer:\nBut since the <blockchain> is a public thing , you can get anything.\nTo get all keys of the map, you would need to do this:\n\nSetup archival node and enable tracing (you will need 9 terabytes disk, with SSD caching)\nGet the traces of all the calls to your contract and search for SSTORE opcode (instruction)\nThe SSTORE instruction pops 2 parameters from the stack, Loc (location) and Val (Value) . The location is the key you are looking for.\n\nIf you don't have a budget for archival node, you can try Etherscan's API\nThere are answers on SO on how to read storage of a contract, might be useful.\nThere is another option, decompile the contract, and check its input, the input will have the key, then scan all <transactions> for that contract, and extract the keys by processing the input (the input is the tx.Data() field). This option is easier if you have the some knowledge about the contract, or if you have the sources, that's will be the easiest thing (process the Input)\nThere is also a function in StateDB object type called ForEachStorage(). It doesn't have a front-end from the RPC api, but  with a little bit of effort you could implement your own RPC function to access it and put it on a Full node. This function accepts the address of the contract and a closure function , and it will iterate through the storage of the entire contract. Source: https:\/\/github.com\/ethereum\/go-ethereum\/blob\/0a3993c558616868e35f9730e92c704ac16ee437\/core\/state\/statedb.go#L634\nThe only thing you would have to know is how the keys are built, and this can be only known from contract source.","890":"Okay guys. I think I have found the solution.\nThe problem was that I didn't mount the directory of fabric-samples. (sorry for my bad English, I am too much excited.). I was trying to work without it..\nHere's what you have to do:\nGo to docker Settings > Resources > File Sharing > Then add path to your fabric samples directory.\nThis will solve the problem."},"# of Vote for A1":{"0":0.0,"1":0.0,"2":1.0,"3":0.0,"4":0.0,"5":1.0,"6":1.0,"7":1.0,"8":0.0,"9":null,"10":0.0,"11":null,"12":0.0,"13":1.0,"14":1.0,"15":2.0,"16":1.0,"17":0.0,"18":1.0,"19":3.0,"20":1.0,"21":1.0,"22":6.0,"23":1.0,"24":2.0,"25":0.0,"26":0.0,"27":1.0,"28":2.0,"29":null,"30":0.0,"31":0.0,"32":1.0,"33":5.0,"34":2.0,"35":0.0,"36":0.0,"37":null,"38":2.0,"39":15.0,"40":null,"41":0.0,"42":0.0,"43":1.0,"44":1.0,"45":2.0,"46":5.0,"47":0.0,"48":0.0,"49":4.0,"50":0.0,"51":3.0,"52":0.0,"53":0.0,"54":0.0,"55":0.0,"56":0.0,"57":null,"58":1.0,"59":null,"60":0.0,"61":1.0,"62":1.0,"63":0.0,"64":null,"65":null,"66":1.0,"67":0.0,"68":1.0,"69":3.0,"70":0.0,"71":null,"72":0.0,"73":1.0,"74":2.0,"75":2.0,"76":1.0,"77":5.0,"78":0.0,"79":0.0,"80":2.0,"81":null,"82":1.0,"83":null,"84":null,"85":1.0,"86":2.0,"87":0.0,"88":0.0,"89":null,"90":1.0,"91":0.0,"92":2.0,"93":null,"94":1.0,"95":0.0,"96":1.0,"97":0.0,"98":1.0,"99":0.0,"100":2.0,"101":1.0,"102":0.0,"103":1.0,"104":0.0,"105":1.0,"106":3.0,"107":5.0,"108":1.0,"109":-1.0,"110":null,"111":1.0,"112":0.0,"113":4.0,"114":4.0,"115":null,"116":3.0,"117":1.0,"118":0.0,"119":2.0,"120":0.0,"121":0.0,"122":3.0,"123":1.0,"124":7.0,"125":1.0,"126":0.0,"127":3.0,"128":0.0,"129":1.0,"130":0.0,"131":3.0,"132":null,"133":6.0,"134":null,"135":0.0,"136":0.0,"137":0.0,"138":null,"139":2.0,"140":0.0,"141":0.0,"142":4.0,"143":0.0,"144":2.0,"145":-2.0,"146":1.0,"147":0.0,"148":1.0,"149":20.0,"150":-1.0,"151":1.0,"152":0.0,"153":3.0,"154":1.0,"155":-1.0,"156":null,"157":null,"158":null,"159":null,"160":0.0,"161":0.0,"162":1.0,"163":1.0,"164":null,"165":null,"166":0.0,"167":1.0,"168":null,"169":1.0,"170":0.0,"171":0.0,"172":0.0,"173":1.0,"174":4.0,"175":0.0,"176":2.0,"177":null,"178":0.0,"179":1.0,"180":2.0,"181":6.0,"182":null,"183":1.0,"184":1.0,"185":0.0,"186":1.0,"187":1.0,"188":0.0,"189":3.0,"190":0.0,"191":1.0,"192":0.0,"193":1.0,"194":0.0,"195":1.0,"196":0.0,"197":0.0,"198":28.0,"199":0.0,"200":null,"201":1.0,"202":0.0,"203":3.0,"204":1.0,"205":null,"206":2.0,"207":null,"208":null,"209":1.0,"210":null,"211":2.0,"212":0.0,"213":1.0,"214":null,"215":3.0,"216":5.0,"217":2.0,"218":0.0,"219":-1.0,"220":2.0,"221":2.0,"222":null,"223":6.0,"224":null,"225":1.0,"226":1.0,"227":2.0,"228":null,"229":1.0,"230":-1.0,"231":6.0,"232":8.0,"233":0.0,"234":1.0,"235":6.0,"236":null,"237":null,"238":1.0,"239":-1.0,"240":27.0,"241":1.0,"242":null,"243":4.0,"244":0.0,"245":1.0,"246":2.0,"247":0.0,"248":0.0,"249":2.0,"250":0.0,"251":null,"252":1.0,"253":0.0,"254":4.0,"255":3.0,"256":0.0,"257":0.0,"258":1.0,"259":0.0,"260":2.0,"261":1.0,"262":0.0,"263":1.0,"264":1.0,"265":0.0,"266":null,"267":0.0,"268":null,"269":0.0,"270":0.0,"271":0.0,"272":1.0,"273":2.0,"274":1.0,"275":0.0,"276":1.0,"277":1.0,"278":0.0,"279":0.0,"280":3.0,"281":1.0,"282":1.0,"283":1.0,"284":1.0,"285":0.0,"286":null,"287":2.0,"288":1.0,"289":2.0,"290":0.0,"291":1.0,"292":null,"293":null,"294":null,"295":null,"296":2.0,"297":0.0,"298":0.0,"299":0.0,"300":2.0,"301":0.0,"302":3.0,"303":null,"304":0.0,"305":null,"306":0.0,"307":1.0,"308":5.0,"309":0.0,"310":0.0,"311":0.0,"312":1.0,"313":null,"314":6.0,"315":1.0,"316":1.0,"317":2.0,"318":1.0,"319":0.0,"320":8.0,"321":0.0,"322":1.0,"323":2.0,"324":1.0,"325":0.0,"326":2.0,"327":2.0,"328":3.0,"329":1.0,"330":null,"331":0.0,"332":null,"333":11.0,"334":null,"335":0.0,"336":6.0,"337":2.0,"338":0.0,"339":0.0,"340":1.0,"341":1.0,"342":1.0,"343":1.0,"344":null,"345":null,"346":0.0,"347":null,"348":0.0,"349":3.0,"350":0.0,"351":4.0,"352":1.0,"353":0.0,"354":0.0,"355":17.0,"356":1.0,"357":null,"358":1.0,"359":0.0,"360":null,"361":0.0,"362":0.0,"363":2.0,"364":4.0,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":1.0,"372":0.0,"373":6.0,"374":-1.0,"375":0.0,"376":1.0,"377":1.0,"378":1.0,"379":null,"380":2.0,"381":2.0,"382":0.0,"383":2.0,"384":3.0,"385":1.0,"386":null,"387":1.0,"388":0.0,"389":4.0,"390":0.0,"391":3.0,"392":1.0,"393":null,"394":4.0,"395":1.0,"396":2.0,"397":1.0,"398":2.0,"399":null,"400":5.0,"401":1.0,"402":null,"403":1.0,"404":1.0,"405":1.0,"406":1.0,"407":null,"408":1.0,"409":1.0,"410":0.0,"411":null,"412":3.0,"413":1.0,"414":1.0,"415":1.0,"416":1.0,"417":0.0,"418":2.0,"419":0.0,"420":null,"421":1.0,"422":1.0,"423":0.0,"424":0.0,"425":0.0,"426":0.0,"427":9.0,"428":10.0,"429":3.0,"430":17.0,"431":2.0,"432":0.0,"433":null,"434":0.0,"435":null,"436":1.0,"437":0.0,"438":0.0,"439":0.0,"440":2.0,"441":0.0,"442":2.0,"443":2.0,"444":null,"445":0.0,"446":1.0,"447":0.0,"448":2.0,"449":0.0,"450":0.0,"451":1.0,"452":5.0,"453":0.0,"454":null,"455":3.0,"456":null,"457":1.0,"458":1.0,"459":3.0,"460":null,"461":0.0,"462":null,"463":5.0,"464":7.0,"465":3.0,"466":0.0,"467":1.0,"468":0.0,"469":0.0,"470":null,"471":2.0,"472":0.0,"473":6.0,"474":0.0,"475":0.0,"476":1.0,"477":0.0,"478":null,"479":2.0,"480":2.0,"481":3.0,"482":0.0,"483":2.0,"484":1.0,"485":null,"486":18.0,"487":1.0,"488":0.0,"489":5.0,"490":0.0,"491":1.0,"492":1.0,"493":1.0,"494":3.0,"495":1.0,"496":0.0,"497":2.0,"498":6.0,"499":1.0,"500":null,"501":0.0,"502":1.0,"503":null,"504":2.0,"505":0.0,"506":null,"507":0.0,"508":0.0,"509":0.0,"510":0.0,"511":2.0,"512":1.0,"513":null,"514":0.0,"515":3.0,"516":0.0,"517":4.0,"518":0.0,"519":0.0,"520":0.0,"521":281.0,"522":0.0,"523":null,"524":0.0,"525":0.0,"526":0.0,"527":2.0,"528":0.0,"529":null,"530":1.0,"531":0.0,"532":3.0,"533":2.0,"534":3.0,"535":null,"536":2.0,"537":4.0,"538":1.0,"539":1.0,"540":null,"541":1.0,"542":null,"543":2.0,"544":1.0,"545":null,"546":null,"547":0.0,"548":null,"549":7.0,"550":1.0,"551":0.0,"552":6.0,"553":2.0,"554":0.0,"555":1.0,"556":2.0,"557":2.0,"558":null,"559":null,"560":2.0,"561":3.0,"562":1.0,"563":1.0,"564":1.0,"565":null,"566":1.0,"567":0.0,"568":null,"569":1.0,"570":null,"571":0.0,"572":1.0,"573":1.0,"574":8.0,"575":null,"576":2.0,"577":0.0,"578":null,"579":2.0,"580":-2.0,"581":1.0,"582":1.0,"583":null,"584":5.0,"585":1.0,"586":4.0,"587":null,"588":4.0,"589":null,"590":0.0,"591":null,"592":null,"593":0.0,"594":2.0,"595":0.0,"596":0.0,"597":0.0,"598":null,"599":2.0,"600":null,"601":null,"602":0.0,"603":null,"604":0.0,"605":0.0,"606":0.0,"607":0.0,"608":1.0,"609":1.0,"610":null,"611":null,"612":1.0,"613":null,"614":0.0,"615":0.0,"616":0.0,"617":0.0,"618":1.0,"619":0.0,"620":3.0,"621":1.0,"622":0.0,"623":0.0,"624":null,"625":null,"626":1.0,"627":5.0,"628":0.0,"629":1.0,"630":5.0,"631":null,"632":0.0,"633":1.0,"634":null,"635":2.0,"636":0.0,"637":0.0,"638":0.0,"639":1.0,"640":null,"641":null,"642":0.0,"643":2.0,"644":0.0,"645":11.0,"646":2.0,"647":1.0,"648":3.0,"649":0.0,"650":0.0,"651":0.0,"652":1.0,"653":1.0,"654":1.0,"655":0.0,"656":1.0,"657":1.0,"658":3.0,"659":2.0,"660":2.0,"661":4.0,"662":5.0,"663":0.0,"664":null,"665":0.0,"666":0.0,"667":3.0,"668":3.0,"669":null,"670":1.0,"671":1.0,"672":2.0,"673":0.0,"674":2.0,"675":null,"676":0.0,"677":2.0,"678":14.0,"679":0.0,"680":null,"681":1.0,"682":1.0,"683":0.0,"684":0.0,"685":0.0,"686":null,"687":0.0,"688":0.0,"689":0.0,"690":2.0,"691":null,"692":1.0,"693":3.0,"694":null,"695":9.0,"696":0.0,"697":0.0,"698":1.0,"699":null,"700":0.0,"701":0.0,"702":null,"703":null,"704":null,"705":null,"706":null,"707":0.0,"708":null,"709":1.0,"710":1.0,"711":1.0,"712":4.0,"713":null,"714":3.0,"715":0.0,"716":0.0,"717":1.0,"718":2.0,"719":1.0,"720":0.0,"721":0.0,"722":1.0,"723":0.0,"724":null,"725":6.0,"726":0.0,"727":null,"728":0.0,"729":0.0,"730":1.0,"731":1.0,"732":6.0,"733":1.0,"734":0.0,"735":1.0,"736":null,"737":0.0,"738":2.0,"739":3.0,"740":0.0,"741":0.0,"742":3.0,"743":0.0,"744":1.0,"745":4.0,"746":-1.0,"747":0.0,"748":0.0,"749":null,"750":1.0,"751":0.0,"752":0.0,"753":0.0,"754":0.0,"755":1.0,"756":null,"757":2.0,"758":4.0,"759":0.0,"760":1.0,"761":1.0,"762":null,"763":null,"764":null,"765":1.0,"766":0.0,"767":0.0,"768":null,"769":2.0,"770":2.0,"771":3.0,"772":3.0,"773":0.0,"774":0.0,"775":2.0,"776":1.0,"777":0.0,"778":1.0,"779":1.0,"780":null,"781":0.0,"782":0.0,"783":1.0,"784":0.0,"785":1.0,"786":null,"787":1.0,"788":null,"789":1.0,"790":3.0,"791":1.0,"792":1.0,"793":null,"794":0.0,"795":1.0,"796":0.0,"797":1.0,"798":1.0,"799":0.0,"800":null,"801":3.0,"802":1.0,"803":8.0,"804":0.0,"805":-2.0,"806":0.0,"807":null,"808":0.0,"809":4.0,"810":0.0,"811":0.0,"812":1.0,"813":1.0,"814":0.0,"815":0.0,"816":1.0,"817":1.0,"818":0.0,"819":2.0,"820":0.0,"821":null,"822":1.0,"823":1.0,"824":2.0,"825":1.0,"826":4.0,"827":10.0,"828":1.0,"829":2.0,"830":0.0,"831":2.0,"832":1.0,"833":0.0,"834":1.0,"835":2.0,"836":0.0,"837":2.0,"838":2.0,"839":1.0,"840":0.0,"841":1.0,"842":1.0,"843":null,"844":3.0,"845":0.0,"846":2.0,"847":null,"848":1.0,"849":1.0,"850":0.0,"851":7.0,"852":2.0,"853":0.0,"854":0.0,"855":1.0,"856":0.0,"857":1.0,"858":0.0,"859":4.0,"860":-1.0,"861":1.0,"862":0.0,"863":0.0,"864":0.0,"865":2.0,"866":1.0,"867":1.0,"868":null,"869":null,"870":0.0,"871":0.0,"872":0.0,"873":null,"874":0.0,"875":1.0,"876":0.0,"877":null,"878":1.0,"879":0.0,"880":1.0,"881":2.0,"882":null,"883":0.0,"884":1.0,"885":0.0,"886":1.0,"887":null,"888":1.0,"889":7.0,"890":0.0},"User_Anwer1":{"0":"lesnik","1":"david_k","2":"MimoKrok","3":"Yilmaz","4":"ZygD,Peter Lopez","5":"Yilmaz","6":"Mad Jackal","7":"Petr Hejda","8":"GrandSteph","9":null,"10":"Marko Popovic","11":null,"12":"Pasha M.","13":"Yilmaz","14":"Yuri Ginsburg","15":"Petr Hejda","16":"Mikko Ohtamaa","17":"Josh","18":"gohm'c","19":"Masha","20":"purple_turtle","21":"Jacopo Mosconi","22":"Lorenzo Ampil","23":"Petr Hejda","24":"Dylan Kerler","25":"Petr Hejda","26":"Dylan Kerler","27":"Dylan Kerler","28":"Dylan Kerler","29":null,"30":"Petr Hejda","31":"Emmanuel Ayodele","32":"Jasper,Yilmaz","33":"Harry Papacharissiou","34":"Christopher","35":"Ray","36":"user2002692","37":null,"38":"MsJenniferElle","39":"Starlone","40":null,"41":"rookieCoder","42":"Petr Hejda","43":"MimoKrok","44":"Petr Hejda","45":"Hossein Asadi","46":"Dorian Crutcher","47":"Jacopo Mosconi","48":"kaliatech","49":"bkchr","50":"Dharman,ferrouskid","51":"Petr Hejda","52":"Salman Khan","53":"Yilmaz","54":"JustKevin","55":"Petr Hejda","56":"Jeremy Caney,glengomerson","57":null,"58":"Petr Hejda","59":null,"60":"Jeremy Caney,oalfreda","61":"genericHCU","62":"Ekaterina Pantaz","63":"Rafa\u00c5\u0082 Leszko","64":null,"65":null,"66":"jhonny","67":"Abdennour TOUMI","68":"hassan ahmed","69":"hassan ahmed","70":"TylerH,0xNihilus","71":null,"72":"Jon C","73":"Mad Jackal","74":"Mikki Ukraine","75":"Ludis","76":"Mikko Ohtamaa","77":"jhonny","78":"hassan ahmed","79":"dm4","80":"hassan ahmed","81":null,"82":"jhonny","83":null,"84":null,"85":"Pang,Yilmaz","86":"Vlad Frolov","87":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","88":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","89":null,"90":"Petr Hejda","91":"hassan ahmed","92":"Petr Hejda","93":null,"94":"TylerH,Mikko Ohtamaa","95":"hassan ahmed","96":"Jeremy Thille","97":"hassan ahmed","98":"hassan ahmed","99":"Tyler2P,Travis Sherman","100":"pygeek","101":"builderbob","102":"Shivam Sharma","103":"Dylan Kerler","104":"Gwenael","105":"Dmitrii Dimtiks","106":"Mad Jackal","107":"Kale","108":"Burn0ut","109":"Jasper,BaqirNekfar","110":null,"111":"Petr Hejda","112":"Alejandro Mart\u00c3\u00adnez","113":"kianenigma","114":"hassan ahmed","115":null,"116":"Petr Hejda","117":"Mad Jackal","118":"Mikko Ohtamaa","119":"Sarveshwar Singh","120":"Mikko Ohtamaa","121":"Rafa\u00c5\u0082 Leszko","122":"Petr Hejda","123":"Petr Hejda","124":"Sergio Lerner","125":"Ramin","126":"Shay","127":"Renzo Tello","128":"kianenigma","129":"Petr Hejda","130":"html_programmer","131":"Patrick Collins,Andrej","132":null,"133":"Petr Hejda","134":null,"135":"jhonny","136":"Yilmaz","137":"jhonny","138":null,"139":"Mad Jackal","140":"Abdul Rafay","141":"0xgio","142":"Abdul Qadir","143":"Mikko Ohtamaa","144":"Russo","145":"learning_bunny","146":"Squirrel","147":"Christopher","148":"Petr Hejda","149":"Adam Kozlowski","150":"Guest","151":"Gwenael","152":"Mad Jackal","153":"Dharman,Andrej","154":null,"155":"starkm","156":null,"157":null,"158":null,"159":null,"160":"Gwenael","161":"Jon C","162":"Jasper","163":"Mad Jackal","164":null,"165":null,"166":"Petr Hejda","167":"Flavio","168":null,"169":"Aditya Joshi","170":"Gwenael","171":"wuno","172":"TylerH,Mr. AdityaYT","173":"Mad Jackal","174":"h4x3rotab","175":"Ankit Kumar","176":"Amin Talebi","177":null,"178":"kianenigma","179":"Petr Hejda","180":"MimoKrok","181":"Jeremy Caney,Cromewar","182":null,"183":"Rockson","184":"Han","185":"Aryan","186":"rainbowemoji","187":"Yilmaz","188":"Peter O'Leary","189":"MimoKrok","190":"Marcono1234","191":"Amin Talebi","192":"kianenigma","193":"rainbowemoji","194":"TylerH,Ashwani Kashyap","195":"Petr Hejda","196":"alvin Christianto","197":"Christopher","198":"J. Bell","199":"Zak Ayesh","200":null,"201":"Zak Ayesh","202":"Ahmad Gorji","203":"Alexander Kondratskiy,Sahan Kaushalya","204":"Jon C","205":null,"206":"wiziwiz","207":null,"208":null,"209":"Dave Enyeart","210":null,"211":"emersonthis","212":"Matthew Segura","213":"fairdev610","214":null,"215":"Petr Hejda","216":"gsj","217":"Sergio Cabral","218":"Vlad Frolov","219":"Noah Lanson","220":"Patrick Collins","221":"Tomislav Stankovic,Patryk Roguszewski","222":null,"223":"raddevus","224":null,"225":"Petr Hejda","226":"kekomal","227":"Petr Hejda","228":null,"229":"Marcello Del Buono","230":"Mad Jackal","231":"diedu","232":"Sudarshan","233":"omencat","234":"MD SHOHAG MIA","235":"cameel","236":null,"237":null,"238":"kekomal","239":"Jon C","240":"lenifoti","241":"Aidal","242":null,"243":"Jon C","244":"Felipe Barbosa","245":"BenTheHumanMan","246":"Jon C","247":"DEV CODER","248":"pguardiario","249":"Jon C","250":"kekomal","251":null,"252":"Petr Hejda","253":"SiarheiK","254":"Petr Hejda","255":"Vlad Frolov","256":"Ariart","257":"Petr Hejda","258":"Petr Hejda","259":"Gavin Stevens","260":"Yilmaz","261":"Jon C","262":"david_k","263":"Nikola","264":"h.mavrodiev","265":"Petr Hejda","266":null,"267":"Alessandro Baffa","268":null,"269":"Jacopo Mosconi","270":"Cornelius","271":"Jaymoh","272":"Jon C","273":"Jacopo Mosconi","274":"Mikko Ohtamaa","275":"Himanshu Bansal","276":"Andy Jazz","277":"Zsolt Meszaros,zack ari","278":"bguiz,tanzim","279":"Patrick Collins","280":"Alessandro Baffa","281":"TylerH,Usama","282":"Mikko Ohtamaa","283":"Akita","284":"Petr Hejda","285":"Noah Lanson","286":null,"287":"Patrick Collins","288":"Jon C","289":"khorolets","290":"pguardiario","291":"jamland","292":null,"293":null,"294":null,"295":null,"296":"Harry Papacharissiou","297":"Random Question","298":"Yilmaz","299":"Hein","300":"Petr Hejda","301":"Mikko Ohtamaa","302":"Rafi","303":null,"304":"Smithiam","305":null,"306":"Kyle Pearson","307":"Momin Shahzad","308":"Sasha Omelchenko","309":"h.mavrodiev","310":"Petr Hejda","311":"pguardiario","312":"Sumit Patel","313":null,"314":"Daniel McHenry","315":"FaSh","316":"regcostajr","317":"ROMANIA_engineer","318":"Petr Hejda","319":"koko91kon","320":"johnme","321":"macosmi","322":"garrettmills","323":"user17014405","324":"Martin W","325":"Lonnie Best","326":"Dat Nguyen","327":"Zergatul","328":"Spenhouet","329":"Mikko Ohtamaa","330":null,"331":"Igor","332":null,"333":"Pang,Petr Hejda","334":null,"335":"Petr Hejda","336":"ROMANIA_engineer","337":"Peteris","338":null,"339":"Petr Hejda","340":"yacovm","341":"onzyone","342":"Yilmaz","343":"Petr Hejda","344":null,"345":null,"346":"Raja Faizan Nazir","347":null,"348":"Petr Hejda","349":"Petr Hejda","350":"Tim Moore","351":"Sudarshan","352":"Dapp deep","353":"davidawad","354":"h.mavrodiev","355":"Jeremy Caney,user2117196","356":"Julian Castrence","357":null,"358":"Ake","359":"Antoni","360":null,"361":"Andy Jazz","362":"Ake","363":"Devdeep Ghosh","364":"Petr Hejda","365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":"Jemil Oyebisi","372":"Diyaa Daoud","373":"Petr Hejda","374":"Hahnemann","375":"Bdellinger","376":"ouflak,Alb\u00c3\u00a9rico Dias Barreto Filho","377":"Josh","378":"AurevoirXavier","379":null,"380":"regcostajr","381":"Jon C","382":"Patrick Collins","383":"Pisomanik","384":"Yilmaz","385":"Harry Papacharissiou","386":null,"387":"Daniel Vieira","388":"Petr Hejda","389":"Jon C","390":"Jon C","391":"Jon C","392":"Shiming","393":null,"394":"Petr Hejda","395":"Mikko Ohtamaa","396":"Josh Ford","397":"regcostajr","398":"Petr Hejda","399":null,"400":"Dharman,goodaytar","401":"Ahmad Gorji","402":null,"403":"Petr Hejda","404":"Param","405":"Zak Ayesh","406":"Bosco","407":null,"408":"Dharman,Guorong","409":"TonyTheCannoli","410":"Taimoor","411":null,"412":"Taimoor","413":"Henry Tsai","414":"Alejandro Mart\u00c3\u00adnez","415":"Petr Hejda","416":"Clyde D'Cruz","417":"Purushottam","418":"kekomal","419":"user13299383","420":null,"421":"Jon C","422":"banishee","423":"som3_l0cust","424":"hassan ahmed","425":"owl","426":"banishee","427":"mir","428":"Crimson Salamander","429":"Wang Liang","430":"Rahul Saxena","431":"Dan","432":"Shawn Tabrizi","433":null,"434":"Harry Papacharissiou","435":null,"436":"Mikko Ohtamaa","437":"Alex Atallah","438":"CryptoLexx","439":"Agus Velez","440":"dancing_carrot","441":"AngelDev","442":"Grygier","443":"Abhijeet Mankani","444":null,"445":"Ahmad Gorji","446":"Taimoor","447":"mohor chatt","448":"Peteris","449":"Dave Enyeart","450":"Cm Jagtap","451":"djd","452":"yangli-io","453":"Chris Doyle","454":null,"455":"MrHamm","456":null,"457":"Dan Shields","458":"Taimoor","459":"Petr Hejda","460":null,"461":"Rishab Verma","462":null,"463":"Petr Hejda","464":"harkl","465":"AurevoirXavier","466":"Dave Enyeart","467":"Taimoor","468":"Petr Hejda","469":"SickGuy","470":null,"471":"brenzi","472":"Petr Hejda","473":"R0ixy","474":"Sonia Singla","475":"arvic.rivera","476":"BenTheHumanMan","477":"jworthington","478":null,"479":"Nathan","480":"Jon C","481":"Petr Hejda","482":"ch_4ml","483":"MrFrenzoid","484":"Ferit","485":null,"486":"Petr Hejda","487":"Dharman,Pratik Patil","488":"davidawad","489":"lucgerrits","490":"ChristianOConnor","491":"Alan Crabb","492":"Giorgi","493":"ashish0411","494":"MrFrenzoid","495":"Timaayy","496":"KotlinIsland","497":"falopsy","498":"\u00d0\u009c\u00d0\u00b8\u00d1\u0085\u00d0\u00b0\u00d0\u00b8\u00d0\u00bb \u00d0\u00a7\u00d0\u00b5\u00d0\u00b1\u00d0\u00be\u00d1\u0082\u00d0\u00b0\u00d1\u0080\u00d0\u00b5\u00d0\u00b2","499":"Dan Curry","500":null,"501":"Akhil Kintali","502":"Tom","503":null,"504":"robpatterson","505":"assassin5757","506":null,"507":null,"508":"Hristo Todorov","509":"Hristo Todorov","510":"Patrick Collins","511":"falopsy","512":"Swader","513":null,"514":"Petr Hejda","515":"Rob-LinkRiver","516":"Dharman,motoki","517":"Josh Ford","518":"enzo,VENKATESH CHAVVAKULA","519":"Silvio Guedes","520":"Petr Hejda","521":"Vadim Kotov,aaronasterling","522":"Orenico","523":null,"524":"fbielejec","525":"Yomoo","526":"Petr Hejda","527":"MrFrenzoid","528":"Petr Hejda","529":null,"530":"yacovm","531":"KotlinIsland","532":"Daniel Von Fange","533":"I\u00c3\u00b1igo Gonz\u00c3\u00a1lez","534":"josue.0","535":null,"536":"Petr Hejda","537":"Arjan","538":"Petr Hejda","539":"timqian","540":null,"541":"p_zuckerman","542":null,"543":"H.M. Sibghat ullah","544":"Mohammad Momtaz","545":null,"546":null,"547":"MrFrenzoid","548":null,"549":"Chase Barker","550":"Chase Barker","551":"Opsetech","552":"Patrick Collins","553":"Patrick Collins","554":"Ferit","555":"Harry Papacharissiou","556":"Petr Hejda","557":"buddemat,Nick Gonzales","558":null,"559":null,"560":"Black Bob","561":"Kane","562":"Sneha Damle","563":"Jack Xu","564":"FRAGA","565":null,"566":"nezort11","567":"Petr Hejda","568":null,"569":"noveltyz,Petr Hejda","570":null,"571":"kamlesh nagware","572":"Petr Hejda","573":"Chase Barker","574":"Yilmaz","575":null,"576":"Dan Shields","577":"davidawad","578":null,"579":"Zak Ayesh","580":"RedStone","581":"Petr Hejda","582":"Peter Li","583":null,"584":"Petr Hejda","585":null,"586":"JesusTheHun","587":null,"588":"Petr Hejda","589":null,"590":"Petr Hejda","591":null,"592":null,"593":"btcme.com","594":"Jason Pan","595":"MaxZill","596":"Shweta Joshi","597":"Petr Hejda","598":null,"599":"Alessandro Baffa","600":null,"601":null,"602":"OsS","603":null,"604":"alias","605":"Serhii","606":"adudley","607":"MetaStack","608":"Lucian Ilie","609":"Mikko Ohtamaa","610":null,"611":null,"612":null,"613":null,"614":"Petr Hejda","615":"DiscRiskandBisque","616":"olegarch","617":"Petr Hejda","618":"gehrig","619":"monty","620":"georgeos","621":"Alessandro Baffa","622":"Petr Hejda","623":"Petr Hejda","624":null,"625":null,"626":"Mikko Ohtamaa","627":"Fernando L\u00c3\u00b3pez","628":"Alessandro Baffa","629":"Petr Hejda","630":"Petr Hejda","631":null,"632":"AlirezaO","633":"Petr Hejda","634":null,"635":"Ajax1234","636":"TexTheMess","637":"Mike Trisko","638":"Mahdi Akbari - blackestwhite","639":"Petr Hejda","640":null,"641":null,"642":"Petr Hejda","643":"Gordon Linoff","644":"Vijay Michalik","645":"includenull","646":"jakubkoci","647":"hroussille","648":"Petr Hejda","649":"Muller Roufaou","650":"Bellatorius","651":"Everton Figueiredo","652":"Petr Hejda","653":"Li Xian","654":"Spandan Joshi","655":"sfl0r3nz05","656":"Rob-LinkRiver","657":"Petr Hejda","658":"Petr Hejda","659":"Li Xian","660":"Milad Jafari","661":"Petr Hejda","662":"Petr Hejda","663":"sfl0r3nz05","664":null,"665":"Dharman,Muller Roufaou","666":"Mark Seemann","667":"Henry Tsai","668":"Petr Hejda","669":null,"670":"Petr Hejda","671":"Petr Hejda","672":"Lucio M. Tato","673":"Gari Singh","674":"Marcin Beza","675":null,"676":"cigien,Kay Albertus","677":"Omar Saadoun","678":"Petr Hejda","679":"Dmitriy Yankowoy","680":null,"681":"zzvezz","682":"Petr Hejda","683":"Petr Hejda","684":"Patrick Collins","685":"yacovm","686":null,"687":"Petr Hejda","688":"Ashishkel","689":"Petr Hejda","690":"Bing Wang","691":null,"692":"Petr Hejda","693":"Greg","694":null,"695":"Adesina Azeez","696":"pdaawr","697":"Omar Saadoun","698":"Rajkumar Tiwari","699":null,"700":"Vijay Michalik","701":"Satpal Sandhu","702":null,"703":null,"704":null,"705":null,"706":null,"707":"Petr Hejda","708":null,"709":"Mikko Ohtamaa","710":"Petr Hejda","711":"Aditya Joshi","712":"Arjan","713":null,"714":"Petr Hejda","715":"Vladislav Kopaygorodsky","716":"tonispark","717":"Li Xian","718":"unos_mopsus","719":"soccer193","720":"Mikko Ohtamaa","721":"Petr Hejda","722":"Petr Hejda","723":"Petr Hejda","724":null,"725":"Discordian","726":"JoelFan","727":null,"728":"Peter Li","729":"soccer193","730":"CyberAwareness","731":"Petr Hejda","732":"Petr Hejda","733":"Patrick Collins","734":"Abhisar Swami","735":"furas","736":null,"737":"Patrick Collins","738":"Dan Shields","739":"soccer193","740":"Navid","741":"Siva","742":"q9f","743":"Dharman,Siva","744":"Petr Hejda","745":"Petr Hejda","746":"Surf3r","747":"Petr Hejda","748":"dave_thompson_085","749":null,"750":"Mikko Ohtamaa","751":"Arijit Mahapatra","752":"user3640561","753":"Eslahchi Nasser","754":"jfriend00","755":"david_k","756":null,"757":"Flash Thunder","758":"Petr Hejda","759":"Thanawit Thampakorn","760":"Mikko Ohtamaa","761":"Ming","762":null,"763":null,"764":null,"765":"Petr Hejda","766":"Moolshanker Kothari","767":"bestbeforetoday","768":null,"769":"Ming","770":"codewario,Li Xian","771":"Emmanuel Collin","772":"Futureman2007","773":"Petr Hejda","774":"Tosh","775":"Branko B","776":"maroodb","777":"Saicharan Pogul","778":"harisato","779":"Petr Hejda","780":null,"781":"Toni Dev","782":"Jake","783":"Petr Hejda","784":"Ayoung","785":"David Schwartz","786":null,"787":"Mikko Ohtamaa","788":null,"789":"chrup","790":"Chase Barker","791":"Jacob","792":"cocreature","793":null,"794":"hassan ahmed","795":"Dan Shields","796":"Sigmatics","797":"Woodstock","798":"Petr Hejda","799":"Michael","800":null,"801":"Dharman,jasonph","802":"Mikko Ohtamaa","803":"Shawn Tabrizi","804":"SOUPTIK BANERJEE","805":"Patoshi \u00e3\u0083\u0091\u00e3\u0083\u0088\u00e3\u0082\u00b7","806":"Ming","807":null,"808":"nkl199","809":"Shawn Tabrizi","810":"SimonR","811":"hstf","812":"TylerH,mcches","813":"Mikko Ohtamaa","814":"Michael","815":"Mad Jackal","816":"Emisilve86","817":"Mikko Ohtamaa","818":"Milton Cezar","819":"Li Xian","820":"Michael","821":null,"822":"mrcrambo","823":"Pandapip1","824":"TylerH,gjivanya","825":"foreston","826":"BrvarG","827":"Alejandro Cavallero,Owans","828":"Gari Singh","829":"Charlieface","830":"Mad Jackal","831":"Mad Jackal","832":"Mad Jackal","833":"Mikko Ohtamaa","834":"Mikko Ohtamaa","835":"Daelon","836":"Silvio Guedes","837":"Zoha Malik","838":"Mad Jackal","839":"Michael Zaikin","840":"centralhubb.com","841":"Pascal Lamers","842":"Mikko Ohtamaa","843":null,"844":"myeongkil kim","845":"Mr.Mouihbi","846":"Mad Jackal","847":null,"848":"Paul M.","849":"Paul M.","850":"foreston","851":"Mikko Ohtamaa","852":"Mikko Ohtamaa","853":"Mikko Ohtamaa","854":"Mad Jackal","855":"Yuri Ginsburg","856":"Meschdog18","857":"Toni Dev","858":"Mad Jackal","859":"Mad Jackal","860":"Mikko Ohtamaa","861":"zozzancs","862":"Bsc Talk","863":"olegarch","864":"Mikko Ohtamaa","865":"Patrick Collins","866":"Mad Jackal","867":"Mikko Ohtamaa","868":null,"869":null,"870":"davidawad","871":"Mad Jackal","872":"Nulik","873":null,"874":"Ajay Tom George","875":"Aditya Joshi","876":"Mad Jackal","877":null,"878":"Clyde D'Cruz","879":"Mad Jackal","880":"GN.","881":"Raman Sailopal","882":null,"883":"Anvar","884":"Hooman","885":"Hojjat Jashnniloofar","886":"Mad Jackal","887":null,"888":"Mad Jackal","889":"Nulik","890":"resilientEther"},"Answer1_time":{"0":"Jan 13, 2022 at 17:50","1":"Dec 31, 2021 at 10:25","2":"Dec 31, 2021 at 8:06","3":"Dec 31, 2021 at 5:39","4":"Jan 2, 2022 at 14:27","5":"Dec 30, 2021 at 15:09","6":"Dec 26, 2021 at 8:40","7":"Dec 25, 2021 at 21:40","8":"Dec 28, 2021 at 14:29","9":null,"10":"Dec 25, 2021 at 9:27","11":null,"12":"Feb 19, 2022 at 16:36","13":"Dec 25, 2021 at 2:41","14":"Dec 24, 2021 at 8:12","15":"Dec 23, 2021 at 16:42","16":"Dec 23, 2021 at 15:29","17":"Dec 23, 2021 at 16:29","18":"Dec 23, 2021 at 5:52","19":"Dec 22, 2021 at 21:38","20":"Dec 28, 2021 at 14:45","21":"Dec 21, 2021 at 16:36","22":"Jan 11, 2022 at 9:28","23":"Dec 21, 2021 at 12:05","24":"Dec 20, 2021 at 11:54","25":"Dec 19, 2021 at 21:34","26":"Dec 19, 2021 at 16:26","27":"Dec 19, 2021 at 16:12","28":"Dec 19, 2021 at 16:32","29":null,"30":"Dec 18, 2021 at 9:53","31":"Jan 7 at 20:47","32":"Dec 19, 2021 at 4:12","33":"Dec 17, 2021 at 6:04","34":"Dec 17, 2021 at 1:14","35":"Nov 2, 2022 at 17:46","36":"Dec 17, 2021 at 3:51","37":null,"38":"May 26, 2022 at 13:25","39":"Jan 12, 2022 at 18:12","40":null,"41":"Jan 6, 2022 at 14:33","42":"Dec 14, 2021 at 18:31","43":"Dec 16, 2021 at 11:33","44":"Dec 14, 2021 at 11:18","45":"Feb 7, 2022 at 9:23","46":"Dec 13, 2021 at 19:13","47":"Dec 12, 2021 at 23:06","48":"Dec 21, 2021 at 13:48","49":"Dec 13, 2021 at 20:46","50":"Dec 12, 2021 at 13:08","51":"Jul 27, 2021 at 13:16","52":"Jan 11, 2022 at 16:07","53":"Dec 30, 2021 at 4:48","54":null,"55":"Dec 11, 2021 at 11:28","56":"Dec 13, 2021 at 17:55","57":null,"58":"Dec 10, 2021 at 15:16","59":null,"60":"Dec 17, 2021 at 23:20","61":"Dec 10, 2021 at 13:13","62":"Dec 24, 2021 at 8:51","63":"Dec 10, 2021 at 8:35","64":null,"65":null,"66":"Dec 7, 2021 at 0:12","67":"Dec 6, 2021 at 15:49","68":"Dec 6, 2021 at 12:54","69":"Dec 6, 2021 at 13:06","70":"Feb 20, 2022 at 9:34","71":null,"72":"Dec 6, 2021 at 13:26","73":"Dec 4, 2021 at 9:08","74":"Jan 25, 2022 at 21:08","75":"Mar 24, 2022 at 6:20","76":"Dec 3, 2021 at 13:37","77":"Dec 3, 2021 at 3:36","78":"Dec 3, 2021 at 12:07","79":"Dec 3, 2021 at 4:02","80":"Dec 1, 2021 at 23:45","81":null,"82":"Dec 2, 2021 at 2:28","83":null,"84":null,"85":"Jun 12, 2022 at 4:01","86":"Dec 7, 2021 at 10:07","87":"Nov 30, 2021 at 15:34","88":"Nov 30, 2021 at 14:20","89":null,"90":"Nov 30, 2021 at 8:33","91":"Dec 2, 2021 at 0:19","92":"Nov 30, 2021 at 9:01","93":null,"94":"Nov 29, 2021 at 19:06","95":"Dec 2, 2021 at 0:36","96":"Nov 29, 2021 at 13:29","97":"Dec 2, 2021 at 0:48","98":"Dec 2, 2021 at 1:10","99":"Dec 23, 2022 at 16:42","100":"Nov 29, 2021 at 0:45","101":"Jan 18, 2022 at 22:12","102":"Nov 29, 2021 at 0:58","103":"Nov 28, 2021 at 12:58","104":"Nov 29, 2021 at 11:04","105":"Nov 28, 2021 at 19:25","106":"Nov 27, 2021 at 21:44","107":"Nov 27, 2021 at 21:45","108":"Dec 2, 2021 at 17:00","109":"Jan 31, 2022 at 18:01","110":null,"111":"Nov 26, 2021 at 17:18","112":"Dec 1, 2021 at 13:25","113":"Dec 1, 2021 at 10:32","114":"Dec 3, 2021 at 11:01","115":null,"116":"Nov 26, 2021 at 13:13","117":"Nov 26, 2021 at 16:35","118":"Nov 26, 2021 at 12:15","119":"Nov 26, 2021 at 11:58","120":"Nov 26, 2021 at 7:20","121":"Nov 25, 2021 at 19:10","122":"Nov 25, 2021 at 14:34","123":"Nov 25, 2021 at 0:24","124":"Nov 24, 2021 at 20:45","125":"Dec 31, 2021 at 16:34","126":"Nov 24, 2021 at 17:19","127":"Nov 28, 2021 at 10:14","128":"Dec 1, 2021 at 10:40","129":"Nov 22, 2021 at 14:15","130":"Nov 21, 2021 at 20:52","131":"Nov 22, 2021 at 19:28","132":null,"133":"Nov 21, 2021 at 15:07","134":null,"135":"Nov 21, 2021 at 22:27","136":"Jan 9, 2022 at 5:47","137":"Nov 20, 2021 at 15:06","138":null,"139":"Nov 19, 2021 at 7:19","140":"Nov 19, 2021 at 17:38","141":"Nov 20, 2021 at 14:00","142":"Nov 19, 2021 at 7:45","143":"Nov 18, 2021 at 21:48","144":"Nov 25, 2021 at 19:21","145":"Nov 24, 2021 at 5:13","146":"Dec 13, 2021 at 21:23","147":"Nov 19, 2021 at 9:57","148":"Nov 18, 2021 at 15:46","149":"Dec 2, 2021 at 11:22","150":"Apr 5, 2022 at 7:14","151":"Nov 18, 2021 at 10:09","152":"Nov 18, 2021 at 6:29","153":"Nov 17, 2021 at 22:56","154":"Nov 17, 2021 at 21:08","155":"Dec 19, 2021 at 9:51","156":null,"157":null,"158":null,"159":null,"160":"Nov 15, 2021 at 15:45","161":"Nov 15, 2021 at 18:31","162":"Nov 13, 2021 at 20:28","163":"Nov 13, 2021 at 15:47","164":null,"165":null,"166":"Nov 13, 2021 at 9:19","167":"Jan 4, 2022 at 19:51","168":null,"169":"Nov 15, 2021 at 5:26","170":"Nov 16, 2021 at 16:04","171":"Nov 12, 2021 at 10:40","172":"Jan 17, 2022 at 6:45","173":"Nov 11, 2021 at 16:48","174":"Nov 11, 2021 at 14:25","175":"Dec 11, 2021 at 3:26","176":"Nov 10, 2021 at 11:07","177":null,"178":"Nov 10, 2021 at 8:42","179":"Nov 10, 2021 at 9:48","180":"Nov 17, 2021 at 9:38","181":"Nov 9, 2021 at 22:55","182":null,"183":"Nov 9, 2021 at 16:17","184":"Nov 11, 2021 at 4:44","185":"Nov 11, 2021 at 0:34","186":"Nov 9, 2021 at 7:58","187":"Nov 9, 2021 at 16:45","188":"Mar 24, 2022 at 17:41","189":"Nov 15, 2021 at 17:27","190":"Nov 9, 2021 at 1:33","191":"Nov 10, 2021 at 11:00","192":"Nov 7, 2021 at 13:15","193":"Nov 8, 2021 at 8:44","194":"Sep 1, 2022 at 8:05","195":"Nov 3, 2021 at 11:38","196":"Nov 13, 2021 at 1:57","197":"Nov 3, 2021 at 8:52","198":"Nov 9, 2021 at 4:21","199":"Nov 3, 2021 at 14:25","200":null,"201":"Nov 2, 2021 at 22:54","202":"Nov 3, 2021 at 7:29","203":"Feb 10, 2022 at 12:29","204":"Nov 1, 2021 at 12:51","205":null,"206":"Nov 1, 2021 at 10:20","207":null,"208":null,"209":"Nov 1, 2021 at 22:00","210":null,"211":"Nov 26, 2021 at 23:14","212":"Jan 20, 2022 at 5:05","213":"Oct 29, 2021 at 21:28","214":null,"215":"Oct 28, 2021 at 9:24","216":"Oct 28, 2021 at 13:38","217":"Mar 10, 2022 at 23:36","218":"Nov 23, 2021 at 23:25","219":"Oct 30, 2021 at 13:46","220":"Oct 28, 2021 at 3:59","221":"Dec 1, 2021 at 21:31","222":null,"223":"Oct 24, 2021 at 23:39","224":null,"225":"Oct 24, 2021 at 19:45","226":"Oct 25, 2021 at 6:50","227":"Oct 24, 2021 at 9:57","228":null,"229":"Oct 24, 2021 at 9:17","230":"Nov 11, 2021 at 19:40","231":"Oct 26, 2021 at 4:27","232":"Oct 23, 2021 at 10:50","233":"Mar 12, 2022 at 21:35","234":"Oct 23, 2021 at 15:48","235":"Oct 23, 2021 at 12:17","236":null,"237":null,"238":"Oct 22, 2021 at 5:52","239":"Oct 25, 2021 at 22:40","240":"Oct 22, 2021 at 5:37","241":"Oct 21, 2021 at 9:58","242":null,"243":"Oct 20, 2021 at 14:56","244":"Jul 11, 2022 at 22:28","245":"Oct 20, 2021 at 17:47","246":"Oct 19, 2021 at 21:28","247":"Apr 9, 2022 at 7:25","248":"Oct 23, 2021 at 10:02","249":"Oct 18, 2021 at 17:24","250":"Oct 18, 2021 at 13:08","251":null,"252":"Oct 17, 2021 at 8:41","253":"Oct 16, 2021 at 9:55","254":"Oct 15, 2021 at 22:13","255":"Oct 16, 2021 at 8:52","256":"Oct 15, 2021 at 10:40","257":"Oct 15, 2021 at 10:06","258":"Oct 15, 2021 at 10:27","259":"Oct 15, 2021 at 5:17","260":"Dec 26, 2021 at 2:25","261":"Oct 14, 2021 at 11:39","262":"Oct 14, 2021 at 7:01","263":"Oct 15, 2021 at 0:22","264":"Oct 20, 2021 at 19:16","265":"Oct 16, 2021 at 17:08","266":null,"267":"Oct 13, 2021 at 4:46","268":null,"269":"Oct 11, 2021 at 13:37","270":"Oct 11, 2021 at 15:05","271":"Jan 30, 2022 at 5:42","272":"Oct 13, 2021 at 22:14","273":"Oct 10, 2021 at 17:01","274":"Oct 10, 2021 at 9:28","275":"Oct 9, 2021 at 21:44","276":"Nov 8, 2021 at 20:10","277":"Dec 23, 2021 at 13:36","278":"Mar 13, 2022 at 12:38","279":"Oct 11, 2021 at 16:31","280":"Oct 9, 2021 at 2:45","281":"Oct 13, 2021 at 17:35","282":"Oct 6, 2021 at 11:59","283":"Oct 14, 2021 at 18:14","284":"Oct 5, 2021 at 21:21","285":"Oct 7, 2021 at 4:39","286":null,"287":"Oct 7, 2021 at 12:29","288":"Oct 6, 2021 at 15:10","289":"Oct 4, 2021 at 16:53","290":"Oct 7, 2021 at 8:08","291":"Oct 5, 2021 at 9:21","292":null,"293":null,"294":null,"295":null,"296":"Oct 4, 2021 at 9:39","297":"Feb 22, 2022 at 2:45","298":"Dec 26, 2021 at 1:45","299":"Oct 7, 2021 at 12:32","300":"Oct 2, 2021 at 9:47","301":"Oct 4, 2021 at 19:34","302":"Dec 9, 2021 at 1:34","303":null,"304":"Oct 1, 2021 at 12:38","305":null,"306":"Oct 8, 2021 at 14:01","307":"Jan 23, 2022 at 13:14","308":"Dec 10, 2021 at 16:34","309":"Oct 21, 2021 at 12:34","310":"Sep 28, 2021 at 19:36","311":"Oct 7, 2021 at 8:52","312":"Oct 10, 2021 at 16:42","313":null,"314":"Nov 13, 2021 at 5:57","315":"Apr 11, 2022 at 18:44","316":"Sep 27, 2021 at 17:03","317":"Sep 26, 2021 at 21:46","318":"Sep 27, 2021 at 8:05","319":"Oct 3, 2021 at 19:58","320":"Sep 27, 2021 at 10:16","321":"Sep 26, 2021 at 9:20","322":"Sep 25, 2021 at 15:31","323":"Sep 27, 2021 at 8:58","324":"Sep 25, 2021 at 9:15","325":"Sep 25, 2021 at 6:54","326":"Sep 24, 2021 at 22:41","327":"Sep 27, 2021 at 14:54","328":"Nov 20, 2021 at 10:48","329":"Sep 24, 2021 at 9:38","330":null,"331":"Sep 28, 2021 at 15:52","332":null,"333":"Sep 26, 2021 at 8:35","334":null,"335":"Sep 24, 2021 at 8:06","336":"Sep 23, 2021 at 12:14","337":"Sep 23, 2021 at 6:53","338":"Oct 6, 2021 at 13:02","339":"Sep 22, 2021 at 17:46","340":"Sep 22, 2021 at 14:45","341":"Apr 4, 2022 at 0:36","342":"Sep 21, 2021 at 17:11","343":"Sep 21, 2021 at 14:46","344":null,"345":null,"346":"Aug 22, 2022 at 7:57","347":null,"348":"Sep 20, 2021 at 17:33","349":"Sep 20, 2021 at 17:25","350":"Sep 20, 2021 at 9:46","351":"Sep 20, 2021 at 6:46","352":"Jun 1, 2022 at 21:57","353":"Sep 20, 2021 at 17:21","354":"Oct 21, 2021 at 12:58","355":"Oct 18, 2021 at 2:19","356":"Sep 20, 2021 at 18:22","357":null,"358":"May 25, 2022 at 7:55","359":"Sep 16, 2021 at 7:36","360":null,"361":"Sep 15, 2021 at 14:52","362":"Jun 10, 2022 at 8:31","363":"Sep 14, 2021 at 18:04","364":"Sep 14, 2021 at 14:19","365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":"Sep 14, 2021 at 6:10","372":"Nov 16, 2022 at 20:39","373":"Sep 12, 2021 at 9:44","374":"Sep 14, 2021 at 1:57","375":"Sep 13, 2021 at 17:01","376":"Sep 12, 2021 at 5:44","377":"Sep 14, 2021 at 14:09","378":"Sep 10, 2021 at 6:06","379":null,"380":"Sep 10, 2021 at 13:05","381":"Sep 13, 2021 at 11:13","382":"Sep 15, 2021 at 11:12","383":"Sep 10, 2021 at 14:36","384":"Jan 7, 2022 at 15:51","385":"Sep 9, 2021 at 4:12","386":null,"387":"Sep 8, 2021 at 14:06","388":"Sep 8, 2021 at 10:21","389":"Sep 7, 2021 at 18:59","390":"Sep 7, 2021 at 20:54","391":"Sep 7, 2021 at 19:13","392":"Sep 3, 2021 at 21:22","393":null,"394":"Sep 2, 2021 at 14:59","395":"Sep 3, 2021 at 6:55","396":"Sep 2, 2021 at 3:50","397":"Sep 8, 2021 at 17:49","398":"Sep 1, 2021 at 9:38","399":null,"400":"Oct 14, 2021 at 16:13","401":"Aug 31, 2021 at 22:00","402":null,"403":"Aug 31, 2021 at 23:47","404":"Sep 1, 2021 at 14:56","405":"Sep 1, 2021 at 16:01","406":"Sep 25, 2021 at 4:56","407":null,"408":"Oct 28, 2021 at 21:39","409":"Aug 30, 2021 at 0:31","410":"Aug 29, 2021 at 18:46","411":null,"412":"Aug 27, 2021 at 20:24","413":"Aug 30, 2021 at 23:52","414":"Aug 25, 2021 at 16:37","415":"Aug 25, 2021 at 7:56","416":"Aug 25, 2021 at 14:43","417":"Dec 16, 2021 at 9:19","418":"Aug 24, 2021 at 10:59","419":"Sep 7, 2021 at 17:03","420":null,"421":"Aug 27, 2021 at 22:57","422":"Aug 23, 2021 at 5:03","423":"Aug 24, 2021 at 2:38","424":"Aug 22, 2021 at 23:24","425":"Sep 6, 2021 at 6:43","426":"Aug 23, 2021 at 5:44","427":"Aug 24, 2021 at 12:56","428":"Aug 20, 2021 at 3:07","429":"Aug 19, 2021 at 21:36","430":"Oct 17, 2021 at 10:34","431":"Aug 19, 2021 at 10:52","432":"Aug 26, 2021 at 14:29","433":null,"434":"Aug 19, 2021 at 0:53","435":null,"436":"Aug 19, 2021 at 7:27","437":"Sep 13, 2021 at 14:13","438":"Sep 2, 2021 at 16:49","439":"Sep 10, 2021 at 22:59","440":"Aug 15, 2021 at 10:21","441":"Aug 14, 2021 at 19:41","442":"Aug 14, 2021 at 14:33","443":"Aug 13, 2021 at 6:35","444":null,"445":"Aug 13, 2021 at 20:08","446":"Aug 13, 2021 at 12:41","447":"Aug 14, 2021 at 6:47","448":"Aug 12, 2021 at 6:59","449":"Aug 16, 2021 at 4:31","450":"Aug 11, 2021 at 4:24","451":"Aug 11, 2021 at 1:08","452":"Aug 11, 2021 at 3:09","453":"Aug 10, 2021 at 15:29","454":null,"455":"Aug 31, 2021 at 15:59","456":null,"457":"Aug 10, 2021 at 0:50","458":"Aug 9, 2021 at 11:53","459":"Aug 9, 2021 at 12:38","460":null,"461":"Aug 9, 2021 at 4:14","462":null,"463":"Aug 4, 2021 at 15:03","464":"Aug 4, 2021 at 6:55","465":"Aug 4, 2021 at 2:29","466":"Aug 16, 2021 at 5:04","467":"Aug 3, 2021 at 16:42","468":"Aug 3, 2021 at 12:55","469":"Aug 3, 2021 at 7:40","470":null,"471":"Aug 5, 2021 at 6:54","472":"Aug 3, 2021 at 7:58","473":"Aug 5, 2021 at 17:26","474":"Aug 5, 2021 at 10:50","475":"Nov 3, 2021 at 14:30","476":"Aug 3, 2021 at 13:33","477":"Jul 31, 2021 at 13:39","478":null,"479":"Jul 29, 2021 at 23:10","480":"Jul 29, 2021 at 18:18","481":"Jul 30, 2021 at 9:50","482":"Aug 20, 2021 at 1:41","483":"Jul 29, 2021 at 1:37","484":"Jul 28, 2021 at 9:11","485":null,"486":"Jul 27, 2021 at 14:14","487":"Jul 28, 2021 at 9:55","488":"Aug 11, 2021 at 16:17","489":"Jul 26, 2021 at 13:04","490":"Jul 29, 2021 at 22:07","491":"Jul 27, 2021 at 7:37","492":"Jul 25, 2021 at 16:13","493":"Jul 29, 2021 at 20:29","494":"Jul 25, 2021 at 1:21","495":"Jul 24, 2021 at 8:53","496":"Jul 27, 2021 at 12:35","497":"Jul 20, 2021 at 11:30","498":"Nov 15, 2021 at 21:25","499":"Jul 19, 2021 at 18:22","500":null,"501":"Jul 19, 2021 at 9:47","502":"Jul 19, 2021 at 8:40","503":null,"504":"Jul 23, 2021 at 0:31","505":"Jul 25, 2021 at 15:32","506":null,"507":"Jul 23, 2021 at 17:10","508":"Jul 16, 2021 at 17:20","509":"Jul 16, 2021 at 17:07","510":"Jul 16, 2021 at 19:36","511":"Jul 16, 2021 at 8:54","512":"Jul 14, 2021 at 12:25","513":null,"514":"Jul 13, 2021 at 23:08","515":"Jul 13, 2021 at 15:08","516":"Nov 14, 2021 at 23:49","517":"Jul 8, 2021 at 21:26","518":"Jul 8, 2021 at 12:47","519":"Jul 23, 2021 at 3:30","520":"Jul 8, 2021 at 9:53","521":"Aug 24, 2010 at 23:07","522":"Sep 22, 2021 at 8:47","523":null,"524":"Jul 8, 2021 at 13:22","525":"Jul 7, 2021 at 10:47","526":"Jul 6, 2021 at 17:26","527":"Jul 25, 2021 at 1:36","528":"Jul 6, 2021 at 18:02","529":null,"530":"Jul 4, 2021 at 22:21","531":"Jul 4, 2021 at 21:58","532":"Jul 4, 2021 at 23:38","533":"Jul 1, 2021 at 6:49","534":"Jul 1, 2021 at 18:55","535":null,"536":"Jun 30, 2021 at 20:29","537":"Jun 30, 2021 at 20:09","538":"Jun 30, 2021 at 18:37","539":"Nov 2, 2022 at 9:14","540":null,"541":"Jun 30, 2021 at 12:11","542":null,"543":"Jul 15, 2021 at 10:42","544":"Jun 29, 2021 at 12:28","545":null,"546":null,"547":"Jul 27, 2021 at 6:14","548":null,"549":"Jun 25, 2021 at 1:41","550":"Jun 24, 2021 at 22:29","551":"Jun 29, 2021 at 15:03","552":"Jun 23, 2021 at 23:24","553":"Jun 23, 2021 at 12:37","554":"Feb 21, 2022 at 18:41","555":"Jun 21, 2021 at 1:30","556":"Jun 18, 2021 at 18:39","557":"Jun 30, 2021 at 0:37","558":null,"559":null,"560":"Nov 7, 2021 at 4:29","561":"Aug 28, 2021 at 0:21","562":"Jun 18, 2021 at 6:59","563":"Jul 21, 2021 at 22:43","564":"Aug 11, 2021 at 20:48","565":null,"566":"Oct 7, 2022 at 11:05","567":"Jun 13, 2021 at 18:52","568":null,"569":"Jun 11, 2021 at 7:20","570":null,"571":"Jun 10, 2021 at 12:23","572":"Jun 9, 2021 at 12:18","573":"Jun 24, 2021 at 22:57","574":"Dec 12, 2021 at 15:57","575":null,"576":"Jun 10, 2021 at 17:59","577":"Jun 14, 2021 at 15:08","578":null,"579":"Jun 9, 2021 at 2:52","580":"Jun 8, 2021 at 10:00","581":"Jun 7, 2021 at 12:51","582":"Jun 15, 2021 at 14:38","583":null,"584":"Jun 6, 2021 at 21:42","585":"Jun 5, 2021 at 15:36","586":"Jun 5, 2021 at 15:17","587":null,"588":"Jun 5, 2021 at 9:26","589":null,"590":"Jun 4, 2021 at 8:01","591":null,"592":null,"593":"Jun 8, 2021 at 9:18","594":"Jun 15, 2021 at 2:55","595":"Jun 2, 2021 at 8:23","596":"Jun 3, 2021 at 9:14","597":"Jun 1, 2021 at 23:22","598":null,"599":"May 31, 2021 at 22:44","600":null,"601":null,"602":"Jun 12, 2021 at 18:10","603":null,"604":"May 27, 2021 at 20:37","605":"May 30, 2021 at 16:52","606":"Oct 15, 2021 at 15:32","607":"May 26, 2021 at 18:10","608":"May 27, 2021 at 10:10","609":"May 26, 2021 at 10:52","610":null,"611":null,"612":"May 25, 2021 at 14:44","613":null,"614":"May 24, 2021 at 19:31","615":"Jun 3, 2021 at 17:30","616":"May 24, 2021 at 15:23","617":"May 24, 2021 at 12:54","618":"May 27, 2021 at 19:59","619":"Jun 20, 2021 at 21:44","620":"Jun 1, 2021 at 4:31","621":"May 23, 2021 at 9:43","622":"May 21, 2021 at 19:49","623":"May 21, 2021 at 13:40","624":null,"625":null,"626":"May 21, 2021 at 8:45","627":"May 26, 2021 at 10:24","628":"May 20, 2021 at 22:38","629":"May 20, 2021 at 8:50","630":"May 19, 2021 at 23:10","631":null,"632":"Dec 17, 2022 at 7:43","633":"May 18, 2021 at 13:14","634":null,"635":"May 18, 2021 at 16:38","636":"Dec 18, 2021 at 3:37","637":"Jun 25, 2021 at 23:01","638":"Oct 9, 2021 at 22:40","639":"May 12, 2021 at 13:04","640":null,"641":null,"642":"May 11, 2021 at 9:34","643":"May 11, 2021 at 0:50","644":"May 11, 2021 at 8:53","645":"May 16, 2021 at 3:41","646":"Aug 8, 2021 at 11:46","647":"Oct 10, 2021 at 22:54","648":"May 10, 2021 at 7:54","649":"May 11, 2021 at 2:39","650":"Aug 22, 2021 at 20:53","651":"May 8, 2021 at 14:38","652":"May 7, 2021 at 13:17","653":"May 8, 2021 at 2:37","654":"Jan 8, 2022 at 5:38","655":"May 6, 2021 at 20:30","656":"May 7, 2021 at 5:27","657":"May 6, 2021 at 7:13","658":"May 6, 2021 at 8:02","659":"May 7, 2021 at 8:20","660":"May 5, 2022 at 11:12","661":"May 5, 2021 at 8:39","662":"May 4, 2021 at 12:51","663":"May 7, 2021 at 14:01","664":null,"665":"May 11, 2021 at 7:13","666":"May 4, 2021 at 6:03","667":"May 27, 2021 at 17:51","668":"May 3, 2021 at 9:15","669":null,"670":"May 2, 2021 at 18:23","671":"May 2, 2021 at 9:32","672":"May 10, 2021 at 1:35","673":"May 1, 2021 at 8:27","674":"Apr 30, 2021 at 19:17","675":null,"676":"Mar 8, 2022 at 15:13","677":"Apr 30, 2021 at 20:02","678":"May 4, 2021 at 11:17","679":"Apr 29, 2021 at 12:09","680":null,"681":"Apr 29, 2021 at 6:27","682":"Apr 28, 2021 at 18:05","683":"Apr 28, 2021 at 8:03","684":"Apr 30, 2021 at 13:40","685":"Apr 28, 2021 at 17:09","686":null,"687":"Apr 27, 2021 at 9:17","688":"May 5, 2021 at 17:02","689":"Apr 26, 2021 at 10:48","690":"Apr 26, 2021 at 9:09","691":null,"692":"Apr 25, 2021 at 13:56","693":"Oct 23, 2021 at 19:22","694":null,"695":"May 20, 2021 at 17:41","696":"Apr 23, 2021 at 14:56","697":"Apr 22, 2021 at 11:45","698":"May 21, 2021 at 12:35","699":null,"700":"May 10, 2021 at 19:27","701":"Apr 21, 2021 at 10:43","702":null,"703":null,"704":null,"705":null,"706":null,"707":"Apr 16, 2021 at 17:49","708":null,"709":"Apr 16, 2021 at 7:58","710":"Apr 15, 2021 at 11:14","711":"Apr 13, 2021 at 9:09","712":"Apr 13, 2021 at 8:36","713":null,"714":"Apr 12, 2021 at 10:51","715":"May 7, 2021 at 15:18","716":"Apr 11, 2021 at 11:13","717":"Apr 11, 2021 at 8:08","718":"Apr 10, 2021 at 18:21","719":"Apr 10, 2021 at 12:57","720":"Apr 10, 2021 at 8:49","721":"Apr 9, 2021 at 19:29","722":"Apr 9, 2021 at 11:39","723":"Apr 9, 2021 at 11:09","724":null,"725":"Apr 8, 2021 at 18:26","726":"Apr 8, 2021 at 9:19","727":null,"728":"Apr 14, 2021 at 13:58","729":"Apr 8, 2021 at 3:16","730":"Jun 8, 2021 at 21:29","731":"Apr 4, 2021 at 21:53","732":"Apr 2, 2021 at 9:24","733":"Apr 1, 2021 at 18:45","734":"Sep 24, 2021 at 20:54","735":"Apr 1, 2021 at 0:57","736":null,"737":"Apr 1, 2021 at 18:37","738":"Apr 1, 2021 at 2:18","739":"Apr 7, 2021 at 0:32","740":"Aug 6, 2021 at 6:55","741":"Apr 4, 2021 at 17:41","742":"Sep 22, 2021 at 7:49","743":"Apr 4, 2021 at 17:59","744":"Mar 30, 2021 at 10:50","745":"Mar 30, 2021 at 19:46","746":"Jun 2, 2021 at 1:56","747":"Mar 29, 2021 at 11:21","748":"Mar 30, 2021 at 3:02","749":null,"750":"Mar 30, 2021 at 10:46","751":"Mar 26, 2021 at 4:46","752":"Mar 25, 2021 at 20:49","753":"Jan 23 at 8:15","754":"Mar 23, 2021 at 23:19","755":"Mar 23, 2021 at 7:40","756":null,"757":"Mar 22, 2021 at 21:19","758":"Mar 21, 2021 at 15:26","759":"Aug 16, 2021 at 9:18","760":"Mar 19, 2021 at 12:03","761":"Mar 19, 2021 at 16:24","762":null,"763":null,"764":null,"765":"Mar 18, 2021 at 11:20","766":"Mar 17, 2021 at 9:37","767":"Mar 19, 2021 at 17:00","768":null,"769":"Mar 20, 2021 at 18:38","770":"Mar 24, 2021 at 8:01","771":"Mar 16, 2021 at 11:01","772":"Mar 16, 2021 at 10:01","773":"Mar 14, 2021 at 15:03","774":"Mar 23, 2021 at 20:55","775":"Jun 28, 2021 at 21:46","776":"Mar 8, 2021 at 20:54","777":"Mar 8, 2021 at 13:01","778":"Mar 23, 2021 at 10:46","779":"Mar 17, 2021 at 0:34","780":null,"781":"Mar 8, 2021 at 16:32","782":"Mar 4, 2021 at 12:57","783":"Mar 3, 2021 at 16:10","784":"Jun 17, 2022 at 2:19","785":"Mar 1, 2021 at 20:00","786":null,"787":"Mar 1, 2021 at 10:08","788":null,"789":"Feb 26, 2021 at 18:59","790":"Jun 25, 2021 at 18:44","791":"Jun 5, 2021 at 7:17","792":"Feb 25, 2021 at 7:40","793":null,"794":"Feb 22, 2021 at 12:49","795":"Feb 26, 2021 at 23:41","796":"Feb 23, 2021 at 13:47","797":"Feb 19, 2021 at 16:40","798":"Feb 20, 2021 at 0:36","799":"Feb 20, 2021 at 13:34","800":null,"801":"Mar 25, 2021 at 23:22","802":"Feb 18, 2021 at 9:19","803":"Feb 16, 2021 at 17:05","804":"Feb 19, 2021 at 15:54","805":"Feb 11, 2021 at 18:00","806":"Feb 12, 2021 at 5:22","807":null,"808":"Feb 11, 2021 at 15:42","809":"Feb 9, 2021 at 22:55","810":"Feb 10, 2021 at 20:52","811":"Aug 10, 2021 at 7:25","812":"Feb 9, 2021 at 19:10","813":"Feb 8, 2021 at 11:47","814":"Feb 20, 2021 at 14:32","815":"Feb 7, 2021 at 17:12","816":"Feb 7, 2021 at 22:54","817":"Feb 6, 2021 at 14:01","818":"Feb 6, 2021 at 18:50","819":"Mar 29, 2021 at 2:21","820":"Feb 20, 2021 at 14:50","821":null,"822":"Feb 5, 2021 at 8:41","823":"Apr 4, 2022 at 15:16","824":"Feb 4, 2021 at 17:32","825":"Feb 4, 2021 at 6:41","826":"Feb 2, 2021 at 23:51","827":"Feb 8, 2021 at 13:41","828":"Feb 1, 2021 at 11:39","829":"Jan 31, 2021 at 7:28","830":"Jan 31, 2021 at 7:13","831":"Jan 30, 2021 at 10:42","832":"Jan 30, 2021 at 8:48","833":"Jan 29, 2021 at 11:59","834":"Jan 29, 2021 at 12:09","835":"Jan 28, 2021 at 13:48","836":"Mar 26, 2021 at 23:10","837":"Feb 11, 2021 at 6:37","838":"Jan 26, 2021 at 18:28","839":"May 23, 2022 at 12:53","840":"Jan 25, 2021 at 2:25","841":"Jan 24, 2021 at 18:56","842":"Jan 25, 2021 at 9:18","843":null,"844":"Jan 24, 2021 at 15:08","845":"Jan 23, 2021 at 12:17","846":"Jan 23, 2021 at 7:08","847":null,"848":"Jan 22, 2021 at 14:20","849":"Jan 21, 2021 at 22:21","850":"Jan 21, 2021 at 20:38","851":"Jan 22, 2021 at 9:33","852":"Jan 21, 2021 at 9:44","853":"Jan 19, 2021 at 8:59","854":"Jan 20, 2021 at 7:27","855":"Jan 20, 2021 at 7:40","856":"Jan 25, 2021 at 22:47","857":"Jan 18, 2021 at 14:00","858":"Jan 18, 2021 at 10:49","859":"Jan 18, 2021 at 11:11","860":"Jan 18, 2021 at 9:36","861":"Feb 14, 2022 at 19:05","862":"Jan 15, 2021 at 20:58","863":"Jan 19, 2021 at 4:27","864":"Jan 15, 2021 at 9:34","865":"Jan 14, 2021 at 21:57","866":"Jan 14, 2021 at 7:40","867":"Jan 14, 2021 at 8:44","868":null,"869":null,"870":"Jan 25, 2021 at 16:27","871":"Jan 13, 2021 at 8:23","872":"Jan 13, 2021 at 12:50","873":null,"874":"Jan 12, 2021 at 15:46","875":"Jan 8, 2021 at 17:39","876":"Jan 7, 2021 at 17:37","877":null,"878":"Jan 7, 2021 at 9:58","879":"Jan 9, 2021 at 15:59","880":"Jan 7, 2021 at 3:58","881":"Jan 6, 2021 at 11:31","882":null,"883":"May 1, 2021 at 5:29","884":"Jul 22, 2021 at 10:00","885":"Jan 5, 2021 at 22:20","886":"Jan 5, 2021 at 7:38","887":null,"888":"Jan 2, 2021 at 11:19","889":"Jan 1, 2021 at 15:19","890":"Jan 1, 2021 at 7:25"},"comment for A1":{"0":"Add a comment\n                \u00c2\u00a0|","1":"Add a comment\n                \u00c2\u00a0|","2":"Add a comment\n                \u00c2\u00a0|","3":"But manager is not address payable, its just address\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ehtesham Siddiqui\n                \n                Dec 31, 2021 at 6:16\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                And when I run the contract in remix, it works perfectly fine\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ehtesham Siddiqui\n                \n                Dec 31, 2021 at 6:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                different compilers might cause issue\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Dec 31, 2021 at 6:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","4":"Add a comment\n                \u00c2\u00a0|","5":"how to get chain id?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nikesh Kedlaya\n                \n                Dec 30, 2021 at 15:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @NikeshKedlaya paste it to the answer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Dec 30, 2021 at 15:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Updated the transaction like you mentioned. Still the same error!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nikesh Kedlaya\n                \n                Dec 30, 2021 at 15:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @NikeshKedlaya  Now please share the code with mint function and transfer function\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Dec 30, 2021 at 15:39\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Updated my question with ERC271Tradable file\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nikesh Kedlaya\n                \n                Dec 30, 2021 at 15:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 4 more comments","6":"Add a comment\n                \u00c2\u00a0|","7":"Add a comment\n                \u00c2\u00a0|","8":"Add a comment\n                \u00c2\u00a0|","9":null,"10":"Add a comment\n                \u00c2\u00a0|","11":null,"12":"Add a comment\n                \u00c2\u00a0|","13":"Add a comment\n                \u00c2\u00a0|","14":"1\n            \n        \n        \n            \n                \n                Hi thank you for you answer ! My problem came from a missundertanding between hash and target ! You made it clear now. PS : You look like a crypto expert to me now ;)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cl\u00c3\u00a9ment Perroud\n                \n                Dec 25, 2021 at 10:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","15":"1\n            \n        \n        \n            \n                \n                Thanks. That means they are using normal DBs for rest of the operations.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Monty\n                \n                Dec 23, 2021 at 18:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                That means by listening to mint event, we save NFT data into other database (mongodb,mysql) which is used to list, categorise, sort, filter, etc the NFT token data. And sell\/purchase is handled by smart contracts. Am I right ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Afraz Ahmad\n                \n                Mar 1, 2022 at 20:01\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @AfrazAhmad That's correct.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 2, 2022 at 0:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda how we group NFTs to make collections on the basis of types (e.g. music, art ) and show to users. Do we do that using other databases to group those NFTs ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Afraz Ahmad\n                \n                Mar 7, 2022 at 7:46\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @AfrazAhmad This depends on your architectural design.But generally speaking - yes, you can tag each token or contract and store these tags in another database, as well as the Transfer events and their aggregations.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 7, 2022 at 8:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","16":"Add a comment\n                \u00c2\u00a0|","17":"Hi, thank you for your reply; Unfortunately I get the network structure from a wizard made previously not by me, I tried to update the version, the cryptogen \/ CA output file. But the error persists. Also the error does not give it to me alone on org2.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0KoluG\n                \n                Dec 29, 2021 at 8:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","18":"thanks! it helped, pod to EC2 via VPC peering.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Niraj Kumar\n                \n                Dec 26, 2021 at 15:02\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","19":"How about running a testnet or localnet node ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mouradif\n                \n                Jan 21, 2022 at 0:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","20":"Add a comment\n                \u00c2\u00a0|","21":"Thank you for the optimization recommendation, but I managed to debug it and saw that rate doesn't change. I changed it to uint256 because I tought it may be overflowing but didn't worked. I changed the value: pot\/2 to see if there is something wrong about balance but it didn't work as well.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mete Karasakal\n                \n                Dec 22, 2021 at 9:18\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                the contract have enough balance?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jacopo Mosconi\n                \n                Dec 22, 2021 at 10:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yes I have written a function to see the current balance and it has enough balance inside the contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mete Karasakal\n                \n                Dec 22, 2021 at 13:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","22":"Add a comment\n                \u00c2\u00a0|","23":"Add a comment\n                \u00c2\u00a0|","24":"Add a comment\n                \u00c2\u00a0|","25":"1\n            \n        \n        \n            \n                \n                Thank you, I got it now! I did came across a question on how do I generate the timestamp for specific human-readable date, but found bunch of converters online when doing a quick google search.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0coriden\n                \n                Dec 19, 2021 at 22:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @coriden The timestamp (also known as \"unix timestamp\") is a standardized date format. Its value is the amount of seconds (or milliseconds in some cases) since January 1st, 1970, 00:00:00 UTC. Many programming languages have a way to convert a human readable date to the timestamp (unfortunately, Solidity currently can do that only on a very limited basis - only from a relative expression such as \"now + 1 year\", but not from an absolute date such as \"2021-12-31\"). And, as you say, there are many online tools that can convert it as well.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 22, 2021 at 19:25\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","26":"Add a comment\n                \u00c2\u00a0|","27":"Hey I am getting this error now   TypeError: The listener must be a function\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Girish Bari\n                \n                Dec 22, 2021 at 8:35\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                That's a separate question and a different problem. If my answer solved your original issue, would you mind accepting it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dylan Kerler\n                \n                Dec 22, 2021 at 10:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yeah, your answer is Somewhere solved my prob, but will you please help me with this error\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Girish Bari\n                \n                Dec 22, 2021 at 12:19\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","28":"Add a comment\n                \u00c2\u00a0|","29":null,"30":"thanks a lot @Petr for your response. Have a ques. The owner you mean the contract owner ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Chandan Kumar\n                \n                Dec 18, 2021 at 10:09\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @ChandanKumar Yes, i mean the contract owner.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 18, 2021 at 10:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                and if acc1 is holder of token id 1003 and i want to send the token id 1003 from acc1 address then approval is reqd or not ?   await myContract.methods.transferFrom(acc1, recipientAddress, 1003).send({from:acc1})\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Chandan Kumar\n                \n                Dec 18, 2021 at 10:23\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Depends on what you mean by \"send the token from...\". The important factor is who is the transaction sender. If it's the same as the token holder (in your case acc1), then you don't need the approval... If the transaction sender is not the token holder, then you do need the approval.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 18, 2021 at 10:25\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                What error are you getting? What is the safeMint() implementation? I suggest you post a separate question with steps to reproduce the issue - it might be complicated to post the whole repro steps in a comment.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 18, 2021 at 10:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 4 more comments","31":"Add a comment\n                \u00c2\u00a0|","32":"Add a comment\n                \u00c2\u00a0|","33":"Add a comment\n                \u00c2\u00a0|","34":"Thanks for this. could decode with configtxlator binary\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alex devassy\n                \n                Dec 17, 2021 at 9:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","35":"Add a comment\n                \u00c2\u00a0|","36":"Add a comment\n                \u00c2\u00a0|","37":null,"38":"Add a comment\n                \u00c2\u00a0|","39":"This should be the accepted answer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arenzel\n                \n                Feb 12, 2022 at 10:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","40":null,"41":"Add a comment\n                \u00c2\u00a0|","42":"thank you for your info\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bartu \u00c5\u009e\u00c4\u00b1rac\u00c4\u00b1\n                \n                Dec 14, 2021 at 20:09\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","43":"Add a comment\n                \u00c2\u00a0|","44":"hi , thanks for answer my question , but I can't understand . i think better I explain my problem again .    i using the TRC-20 with tronweb , using ERC-20 with <web3> .   in <web3> I create a wallet for user .   user need transfer SHIB from finance to my website .   now how can I identify with coin was transfer from finance to my website .   for all token i use this code for create wallet :   <web3>.eth.accounts.create();\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mr Coder\n                \n                Dec 14, 2021 at 12:58\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Kianoush Since SHIB runs on the Ethereum network, you can use the subscribe() function from the first part of the question. This will invoke the callback when a SHIB transfer occurs. You can extend the filter using examples from the documentation to invoke the callback only when a transfer to your address occurs.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 14, 2021 at 13:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                should i add contract address of SHIB or USDT token in subscribe ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mr Coder\n                \n                Dec 14, 2021 at 14:18\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Kianoush If you want to subscribe to events of SHIB - pass the SHIB address. If you want to subscribe to events of USDT - pass the USDT address. If you want to subscribe to events of both - pass both in an array (instead of the string).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 14, 2021 at 14:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                thnak you . .  ..\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mr Coder\n                \n                Dec 14, 2021 at 18:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","45":"As it\u00e2\u0080\u0099s currently written, your answer is unclear. Please edit to add additional details that will help others understand how this addresses the question asked. You can find more information on how to write good answers in the help center.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MD. RAKIB HASAN\n                \n                Feb 7, 2022 at 11:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","46":"Add a comment\n                \u00c2\u00a0|","47":"1\n            \n        \n        \n            \n                \n                The solution you provided is <web3>js. But I am looking for <web3>-java. Thanks for your solution.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sravan Kumar\n                \n                Dec 13, 2021 at 7:39\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","48":"I don't think the issue is related to \"disconnect\/close\/reconnect\" since I am seeing the \"pong\" log... it's an issue with the listener of solidity events being dispatched.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jim\n                \n                Dec 21, 2021 at 16:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","49":"Let's say that I need those data. Then I also need to add some methods that need to be called by the <blockchain> during the consensus. How can I do that? Do I have to modify all of the methods which require an in instance of the Block trait? And would you suggest any tutorial which shows how to do that?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marco Comotti\n                \n                Dec 27, 2021 at 15:24\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                What kind of data do you want to attach to a block?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0bkchr\n                \n                Dec 28, 2021 at 8:20\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I want to add a vector, storing the results of some challenges whose IDs are published by the block producer in the block itself and which are then updated by the other block validators\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marco Comotti\n                \n                Dec 28, 2021 at 10:12\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","50":"1\n            \n        \n        \n            \n                \n                Oh okay, So It's like I thought. I need to get every node peers list and then go iteratively inside them to check everyone. I will need to add this as a http request so I can get list of all nodes from any node. Will check it for sure. Thanks for tip.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user15921\n                \n                Dec 12, 2021 at 13:18\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                but what is the best approach to get nodes of a node? Should I send connection with all peers list already or make a HTTP request while running a search to every node? I will need to get each node http server to ask for their nodes.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user15921\n                \n                Dec 12, 2021 at 13:20\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yes I agree, I think something like pinging other nodes should be very simple :D\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ferrouskid\n                \n                Dec 12, 2021 at 13:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Good, all I need to make a bst or dst through nodes, and when I get whole list of nodes and it's connections then I can use this data to visualize the data\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user15921\n                \n                Dec 12, 2021 at 13:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Out of curiosity, why do you need a visualisation of the network if its decentralised?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ferrouskid\n                \n                Dec 12, 2021 at 14:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","51":"Add a comment\n                \u00c2\u00a0|","52":"Add a comment\n                \u00c2\u00a0|","53":"Add a comment\n                \u00c2\u00a0|","54":"Add a comment\n                \u00c2\u00a0|","55":"Add a comment\n                \u00c2\u00a0|","56":"Add a comment\n                \u00c2\u00a0|","57":null,"58":"Thank you so much Petr, I understand now.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0khennati\n                \n                Dec 10, 2021 at 19:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","59":null,"60":"Add a comment\n                \u00c2\u00a0|","61":"Add a comment\n                \u00c2\u00a0|","62":"Add a comment\n                \u00c2\u00a0|","63":"Add a comment\n                \u00c2\u00a0|","64":null,"65":null,"66":"it is possible with oracles.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Dec 7, 2021 at 14:16\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                but how you will distinguish when the user transfer a token or is swaping tokens?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Dec 7, 2021 at 14:24\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                you can check only if that is realized in a single transaction\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Dec 7, 2021 at 14:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                simply modify the _transfer function to fetch price of token before call and emit the price in modified Transfer event. Yes it must be all done in single transaction i guess that goes without saying\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Dec 7, 2021 at 20:41\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","67":"got this while running command. Unknown shorthand flag 'a' in -a. can you guide further\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0samar\n                \n                Dec 6, 2021 at 16:07\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","68":"1\n            \n        \n        \n            \n                \n                I've read In regards to <blockchain>, reaching consensus means that at least 51% of the nodes on the network agree on the next global state of the network. Ref so I thought it applies to ALL despite the used mechanism\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nora\n                \n                Dec 7, 2021 at 10:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Same for bitcoin, are we really asking for validation from 51% of ALL the validators in the network? It doesn't seem to be feasible\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nora\n                \n                Dec 7, 2021 at 10:12\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                That is correct in PoS 51% attack exists but it is in a different way and much less likely to be able to pull off since its involves not corrupting the nodes rather the 51% staked amount  (which in case of eth is billions of dollars) Ref Edited my answer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Dec 7, 2021 at 13:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","69":"opensea only supports rinkeby testnet.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Dec 7, 2021 at 7:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Ok! The link is for rinkeby anyways, yes I found out the hard way that kovan isnt on testnets for opensea\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0PhilosophOtter\n                \n                Dec 8, 2021 at 13:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","70":"Add a comment\n                \u00c2\u00a0|","71":null,"72":"Add a comment\n                \u00c2\u00a0|","73":"Add a comment\n                \u00c2\u00a0|","74":"Add a comment\n                \u00c2\u00a0|","75":"Add a comment\n                \u00c2\u00a0|","76":"Thanks for answering this. I went with a custodial scheme.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0r.beer\n                \n                Dec 3, 2021 at 22:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","77":"Add a comment\n                \u00c2\u00a0|","78":"Add a comment\n                \u00c2\u00a0|","79":"Hi @dm4, can you please take a look at the Substrate StackExchange proposal and support it: area51.stackexchange.com\/proposals\/126136\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shawn Tabrizi\n                \n                Dec 17, 2021 at 8:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","80":"Add a comment\n                \u00c2\u00a0|","81":null,"82":"Add a comment\n                \u00c2\u00a0|","83":null,"84":null,"85":"Add a comment\n                \u00c2\u00a0|","86":"Add a comment\n                \u00c2\u00a0|","87":"Add a comment\n                \u00c2\u00a0|","88":"Add a comment\n                \u00c2\u00a0|","89":null,"90":"If I deploy smart contract to a private network and manages its own balance, is there any case I need to use the native ETH balance? Like the gas price, gas limit etc?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 30, 2021 at 11:09\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @JoeyYiZhao Exactly what you said, you'd need to pay for the gas with ETH. However, you could also set up the private network to use zero gas prices, which would effectively eliminate the need for ETH on the private network (assuming the network is not flooded with spam <transactions>).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 30, 2021 at 13:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Is it common thing to do to make gas price as 0 in private network? I'd like to see whether I miss anything if I do that?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Dec 1, 2021 at 3:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","91":"Add a comment\n                \u00c2\u00a0|","92":"Hmm that is interesting because when I put wss:\/\/mainnet.infura.io\/ws\/v3\/key link there I do not get any response, when I put https:\/\/mainnet.infura.io\/v3\/key it works fine so it looks like it works the other way you described\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sowam\n                \n                Nov 30, 2021 at 9:28\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @Sowam That is interesting. I'm not that familiar with the Ethers.js library, maybe they're actively polling the requests over HTTPS (asking each X seconds for an update), and the WSS malfunction might be related to something else... Generally, WSS keeps an open connection allowing for constant flow of messages both ways - while during HTTPS connection your app acts as a client sending separate requests to the server, but a server can't send a message to a client without the client's prior request... Maybe someone more skilled in Ethers.js and\/or Infura will be able to resolve it better.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 30, 2021 at 9:59\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I fixed that by changing ethers.providers.JsonRpcProvider to thers.providers.WebSocketProvider, works fine now, thanks\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sowam\n                \n                Nov 30, 2021 at 10:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","93":null,"94":"Understood but how to achieve this ? I mean how can I create same system. What terms or concept should I google to learn about it and create same stuff.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arrow\n                \n                Nov 29, 2021 at 19:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I suggest you start by reading OpenSea smart contracts and spend some weeks studying them. When you understand exactly how they work then have an idea how to create a similar system.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Nov 30, 2021 at 10:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Does it work like L2 or meta transaction?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Peter Lai\n                \n                Dec 1, 2021 at 3:59\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                No, it does not.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Dec 1, 2021 at 8:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yea can't i use meta transcation to achieve same ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arrow\n                \n                Dec 2, 2021 at 18:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","95":"Add a comment\n                \u00c2\u00a0|","96":"Thanks for the snippet. This only prints the \"Hash before BC: xyz\" as it is getting stuck on await this.state.contract.methods.setHash(hash).send({ from: this.state.account })\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Amber Johnson\n                \n                Nov 29, 2021 at 15:19\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                So it's loading forever without resolving. No idea what this function does, though\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jeremy Thille\n                \n                Nov 29, 2021 at 16:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The setHash functon is included in the OP and essentially sets the credentialHash value for a smart contract and returns\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Amber Johnson\n                \n                Nov 29, 2021 at 16:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yeah but I mean what does it do in practice; not what's its goal, what the code in it is actually doing (HTTP call most likely). Because this function seems of be hanging forever, that's the source of your trouble\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jeremy Thille\n                \n                Nov 30, 2021 at 7:36\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The call is calling my method on for my smart contract on the <blockchain> running locally using Ganache. The get call works fine for the same contract so I'm very unsure what the issue is. I've added the result returned from the call if I log it in the OP :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Amber Johnson\n                \n                Nov 30, 2021 at 11:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","97":"What about runtime errors? My contract is deployed without any issues but function call fails. How to debug it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sagar V\n                \n                Jan 5 at 15:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                what error does it show upon failure?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Jan 6 at 23:19\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","98":"Add a comment\n                \u00c2\u00a0|","99":"Add a comment\n                \u00c2\u00a0|","100":"Thanks for that. Yes I am a developer so that I can do that. If I deploy a contract and a few <transactions> are generated from the contract, does the contact block contains all the <transactions>?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 0:48\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Joey Yi Zhao Yes, the smart contract's ethereum address will have a ledger of <transactions> executed listed just like any other ethereum address.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0pygeek\n                \n                Nov 29, 2021 at 1:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                when you say ledger, does it mean a block in the Ethereum block chain? And all other <transactions> will be in the same block for the same ledger?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 1:42\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @JoeyYiZhao no, I meant the list of <transactions> related to your smart contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0pygeek\n                \n                Nov 29, 2021 at 1:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                so the ledger is in one block, and each transaction is in its own block?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 1:52\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","101":"Is this resolve? i having same issue\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0brook18\n                \n                Mar 23, 2022 at 3:12\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","102":"Add a comment\n                \u00c2\u00a0|","103":"Ok I'll give it a shot. what is the library though? is that the same as what is returned by the use<web3> hook?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Herbie Vine\n                \n                Nov 28, 2021 at 13:12\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes exactly - the library is returned from the <web3> hook. Also, consider using useDapp library. It contains further abstractions from the use<web3> library and is a bit more user friendly.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dylan Kerler\n                \n                Nov 29, 2021 at 0:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","104":"I added the payable keyword in the function but still the same issue. Do you know how I can specify which account the ether are from?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 12:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The way you do it is like the contract send money and there is no _recipient.transfer(_amount)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gwenael\n                \n                Nov 29, 2021 at 13:16\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                what do you mean by there is no _recipient.transfer(_amount)? The _recipient is a pass in address parameter and I use call method to transfer. Do you mean I need to change from call to transfer method?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 22:18\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This is the recommended method to use when you're just sending Ether via calling the fallback function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gwenael\n                \n                Nov 30, 2021 at 7:19\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","105":"Do I need to use genesis? I just use this command to launch the <blockchain>: <geth> --datadir data\/node1 --http --dev --http.corsdomain \"*\" --http.api <web3>,eth,debug,personal,net,miner --allow-insecure-unlock --mine. And it doesn't have Clique API. How can I enable it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 28, 2021 at 22:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                In general, it should be bundled with official releases <geth> & Tools on the official website <geth>.ethereum.org\/downloads\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dmitrii Dimtiks\n                \n                Nov 29, 2021 at 9:41\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","106":"Add a comment\n                \u00c2\u00a0|","107":"Add a comment\n                \u00c2\u00a0|","108":"Add a comment\n                \u00c2\u00a0|","109":"Add a comment\n                \u00c2\u00a0|","110":null,"111":"Add a comment\n                \u00c2\u00a0|","112":"Add a comment\n                \u00c2\u00a0|","113":"Thank you so much! This really confirmed my ideas.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0michaelassaf\n                \n                Jan 14, 2022 at 20:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","114":"1\n            \n        \n        \n            \n                \n                I don't understand why this is the accepted answer, your metadata URI contains a clip, what @Ali Raza wants to show is a glb file, which can't be previewed on a browser.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marcel\n                \n                Jan 5 at 20:37\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                model-viewer perhaps this can help suggesting to set animation_url to html that uses model viewer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Jan 6 at 23:28\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Metadata-Standard animation-url does support html\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Jan 6 at 23:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Good idea, it didn't work for me sadly. The ipfs url shows the viewer with the glb, but when I go to the viewer in OpenSea it shows a broken link and the message \"This content is blocked. Contact the site owner to fix the issue.\". The console shows status (failed) net::ERR_BLOCKED_BY_CSP\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marcel\n                \n                Jan 8 at 23:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","115":null,"116":"So for a live network, it will wait until all miners in the network applied the state change, then a new block will be created? so for a live network, deploy a contact will create a new block eventually? Am I understand correctly?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 27, 2021 at 9:49\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @JoeyYiZhao Miners don't wait for others to apply the submitted state changes. I'd correct your statement to \"deploying a contract will be included (but will not create) in a new block eventually\" ... You can read more about the concept of Ethereum mining on this wiki page.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 27, 2021 at 12:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","117":"Add a comment\n                \u00c2\u00a0|","118":"Add a comment\n                \u00c2\u00a0|","119":"Add a comment\n                \u00c2\u00a0|","120":"Add a comment\n                \u00c2\u00a0|","121":"Add a comment\n                \u00c2\u00a0|","122":"Add a comment\n                \u00c2\u00a0|","123":"Hi there, could you please explain what you mean by  \"selfdestruct prevents later operations on the contract from being executed\"?  I've been wondering about this precise point recently, in particular what would happen if one were to CALL a contract post SELFDESTRUCT. I believe that within that same transaction, opcodes like EXTCODEHASH, EXTCODESIZE, EXTCODECOPY should work the same pre and post SELFDESTRUCT. And I was under the impression that CALLs would, too. Is this wrong ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Olivier B\u00c3\u00a9gassat\n                \n                Jan 31 at 16:20\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The solidity documentation (docs.soliditylang.org\/en\/v0.8.17\/\u00e2\u0080\u00a6) seems to suggest that a contract which executed on a SELFDESTRUCT remains callable as long as the transaction isn't finished \"the contract is only really destroyed at the end of the transaction and revert s might \u00e2\u0080\u009cundo\u00e2\u0080\u009d the destruction.  Furthermore, all functions of the current contract are callable directly including the current function.\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Olivier B\u00c3\u00a9gassat\n                \n                Jan 31 at 16:58\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @OlivierB\u00c3\u00a9gassat Thanks so much for the additional question. My previous statement was partially incorrect, so I edited the answer with clarification and additional code example. As you can see, it does not execute the number++ statement after selfdestruct was initiated - but until the contract is deleted, you can still call it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Feb 1 at 10:21\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Thanks Petr : ) The fact that the number++ isn't executed matches my expectation: SELFDESTRUCT triggers the normal halting condition so that execution (of the present execution context) stops immediately.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Olivier B\u00c3\u00a9gassat\n                \n                Feb 1 at 12:23\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","124":"not directly answering your Q (I think), but another way that is available on RSK would be to interact with the Bridge pre-compile to access the Bitcoin block number... and the inter-block duration on Bitcoin is far more stable\/ predictable (citation needed)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0bguiz\n                \n                Nov 25, 2021 at 7:31\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Yes! That's another option. In fact, it's less gameable than the timestamp. Specially when combined with a node isolation attack, the number of blocks cannot be forged, An isolated node can be cheated with a malicious fork at time T with a single additional block with timestamp T+(1 year).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sergio Lerner\n                \n                Nov 25, 2021 at 15:18\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","125":"Add a comment\n                \u00c2\u00a0|","126":"Add a comment\n                \u00c2\u00a0|","127":"Add a comment\n                \u00c2\u00a0|","128":"Add a comment\n                \u00c2\u00a0|","129":"Add a comment\n                \u00c2\u00a0|","130":"Add a comment\n                \u00c2\u00a0|","131":"Add a comment\n                \u00c2\u00a0|","132":null,"133":"Add a comment\n                \u00c2\u00a0|","134":null,"135":"So, in that case, if I want to move the tokens from the user to the smart contract in that case the user needs to get the smart contract approved by the token from their end...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ARNAB RAY\n                \n                Nov 22, 2021 at 3:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                the front end that interacts with your contract should have a way to let the user approve your contract to move the tokens\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Nov 25, 2021 at 3:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","136":"Add a comment\n                \u00c2\u00a0|","137":"Add a comment\n                \u00c2\u00a0|","138":null,"139":"why it should be a payable can you explain please\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ARNAB RAY\n                \n                Nov 20, 2021 at 8:08\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                You have not shown how you call this function, but the error message directly says:\"...The called function should be payable..\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Nov 20, 2021 at 8:38\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                But there is no transfer function in the function please look at it...And its not a problem of the payable function only....\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ARNAB RAY\n                \n                Nov 20, 2021 at 15:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                First, write how you send the transaction causing the error. The answer is given according to the information you provided in the question.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Nov 20, 2021 at 18:25\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","140":"Add a comment\n                \u00c2\u00a0|","141":"Your answer could be improved with additional supporting information. Please edit to add further details, such as citations or documentation, so that others can confirm that your answer is correct. You can find more information on how to write good answers in the help center.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Nov 20, 2021 at 18:33\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","142":"Hello, Abdul, thanks for your answer. I wish it could help me out, but I know nothing of JavaScript. Anyways, thank you, this may help other people!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mr. N\n                \n                Nov 19, 2021 at 13:01\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi @Abdul Qadir Thanks for this. But this method is not giving all <transactions>. It's giving only 4-5 <transactions>\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vasu Youth\n                \n                Apr 7, 2022 at 5:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","143":"Add a comment\n                \u00c2\u00a0|","144":"Add a comment\n                \u00c2\u00a0|","145":"Add a comment\n                \u00c2\u00a0|","146":"1\n            \n        \n        \n            \n                \n                Thank you for the answer. Unfortunately, this is a wrong answer and targets the wrong issue. Yes, you can nominally build PoW in Substrate. I've explained actually in my question that this is nominally possible and provided a link to the pallet that allows that. That's not correct PoW though. Being able to work to produce blocks isn't the only condition required to have a correct PoW chain. As it stands, there's no way to do long reorgs due to canonicalization, which creates the problems I mentioned in the question (possible chainsplits, winner isn't really the longest chain, etc).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0The Quantum Physicist\n                \n                Dec 14, 2021 at 4:51\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Have a look at historical sessions in the session pallet. It seems like pruning can be configured back a certain distance in history. That might be a halfway house to running full archive?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Squirrel\n                \n                Dec 15, 2021 at 11:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes, of course, you can control the depth of canonicalization. But still, it will happen eventually and prevent deep reorgs to protect memory.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0The Quantum Physicist\n                \n                Dec 16, 2021 at 5:59\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","147":"Hello @Christopher, thank you for your reply. I still have the same problem, I generate the json file from the tx file, edit it, and generate the tx file again from the modified json file. When I re-generate the json file from the modified tx file, the changes are not saved.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luis Manuel Cort\u00c3\u00a9s Tirado\n                \n                Nov 22, 2021 at 7:38\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Try save it with a different name\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Christopher\n                \n                Nov 23, 2021 at 1:09\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","148":"Wow thank you this makes perfect sense. So in this case firstContract._admin().transfer(value); the compiler is calling two functions? First the getter function and then the transfer function using the returned value of the first function?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kevvv\n                \n                Nov 18, 2021 at 22:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Kevvv Exactly. Just to be specific - the transfer() in your case is a member function of the address payable type, so it transfers ETH. It's not related to the ERC20 transfer() function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 18, 2021 at 22:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","149":"Add a comment\n                \u00c2\u00a0|","150":"As it\u00e2\u0080\u0099s currently written, your answer is unclear. Please edit to add additional details that will help others understand how this addresses the question asked. You can find more information on how to write good answers in the help center.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Apr 5, 2022 at 8:43\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","151":"Add a comment\n                \u00c2\u00a0|","152":"So you think that would be better to create something like a monitor that will count all <transactions> for selected contracts, save it to database and show this information on the page in a table or something. So it will add this values each time. Second thing, how do I know that exact event was an \"order\" so when anyone buys an NFT piece of collection? How can I check it\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sowam\n                \n                Nov 18, 2021 at 9:50\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                1. Yes 2. To do this, you need to know the corresponding addresses and\/or operation codes transmitted in <transactions>. Here everything strongly depends on how the NFT trading system is organized and how it is displayed in the <blockchain> - there may be different options and standards.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Nov 18, 2021 at 10:34\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","153":"Add a comment\n                \u00c2\u00a0|","154":"Add a comment\n                \u00c2\u00a0|","155":"Add a comment\n                \u00c2\u00a0|","156":null,"157":null,"158":null,"159":null,"160":"Add a comment\n                \u00c2\u00a0|","161":"Hi, @jon, I know that only freeze authority can freeze token account. But in my case, my NFT mint is Master Edition and its freeze authority is Master Edition Account. How can I freeze token account?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Phoon Anan\n                \n                Nov 16, 2021 at 2:06\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The Master Edition Account needs to freeze it for you in that case, you cannot do it yourself.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jon C\n                \n                Nov 16, 2021 at 11:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi, @Jon Cinque, yours answer is not enough for my question. Please kindly tell me how Master Edition freezes that token account. My wallet key created that NFT and also it is update authority of that NFT. But freeze authority is Master Edition PDA. I want to freeze token account. Then as you said, couldn't I freeze token account? I think you are wrong. I want exact answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Phoon Anan\n                \n                Nov 16, 2021 at 16:40\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                If the freeze authority is the Master Edition PDA, then only the Master Edition PDA can freeze the token account.  Just going from the token program, this is not possible.  If the Master Edition program has a way to freeze your account through them, then maybe it's possible!  I don't know enough about how the Master Edition program works.  Apologies if my answers weren't exact enough.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jon C\n                \n                Nov 16, 2021 at 22:50\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                have you been able to figure this out, we're trying to achieve the same but unable to.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Fahad Bilal\n                \n                Jul 17, 2022 at 1:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","162":"Thanks Jasper. That makes sense.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paris\n                \n                Nov 16, 2021 at 10:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Another piece of the puzzle for me is to understand how the information that is to be added to the <blockchain> is known to be true, even by the miner.   So, say a miner has good intentions and does the proof of work to get a piece of information to the <blockchain>. For example, that Alice is transferring ownership to the Landlord. How does the miner know that this piece of information is indeed true and worth investing the computational power to have a chance to get it added?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paris\n                \n                Nov 16, 2021 at 10:24\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Paris I\u00e2\u0080\u0099ve updated my answer with your question above. Hopefully it helps. If this answer was useful\/answers your original question, generally the stack overflow procedure is to upvote\/accept the answer ;)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jasper\n                \n                Nov 17, 2021 at 7:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Jasper, thank you. That's clear.   A follow up on that. Let's say the Landlord is malicious and submits information to the <blockchain> that he is transferring ownership to another person, which Alice would not be happy about because she still lives there and has ownership. Would Alice (or all the participants in that <blockchain> account) also need to verify that the information being submitted is true? I know I keep digging but I keep finding places where there could be a breakdown in the validity of the information.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paris\n                \n                Nov 18, 2021 at 19:44\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Also, I'm new to this so can't upvote yet but I've accepted your answer (my first one ;))\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paris\n                \n                Nov 18, 2021 at 19:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 3 more comments","163":"Add a comment\n                \u00c2\u00a0|","164":null,"165":null,"166":"Add a comment\n                \u00c2\u00a0|","167":"Add a comment\n                \u00c2\u00a0|","168":null,"169":"Add a comment\n                \u00c2\u00a0|","170":"Add a comment\n                \u00c2\u00a0|","171":"Thanks for this!  I am still getting that error even inside the correct folder\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Josh Wenner\n                \n                Nov 12, 2021 at 10:50\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Can you please edit your question and show us the code that is in index.js? Also, can you please tell me what the output is when you type ls? Also, do you have a package.json file? Will you share a link to the repo you are trying to use? I wonder if you actually should be typing npm start or node main.js or something different than node index.js. Clearly you are missing something. Please share more info so we can help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0wuno\n                \n                Nov 12, 2021 at 12:00\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","172":"It seems that I've forgotten the include the correct syntax and error due to so many tries. I have the code as you specified, however, I am getting this error: \"ValueError: Could not find any function with matching selector\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Penko_Mlakar\n                \n                Jan 24, 2022 at 17:16\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I've figured it out!!! I thought I need to use tokenAddress and ABI for the token in question, while it was the pancakeswap V2 router address that was actually required!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Penko_Mlakar\n                \n                Jan 24, 2022 at 17:26\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","173":"Add a comment\n                \u00c2\u00a0|","174":"1\n            \n        \n        \n            \n                \n                Thank you very much. This clears some things up, but I'm not 100% clear on this.  So the idea is that build.rs builds the Wasm binary of lib.rs with std not enabled. And if std is enabled, then the native binary is built with the Wasm binary embedded, correct?  But what if std is not enabled? Then build.rs is still executed and builds the Wasm binary, right? But isn't then a no_std native binary built (which doesn't have the Wasm binary embedded), as well?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mkl\n                \n                Nov 11, 2021 at 18:41\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                As far as I can tell, it\u00e2\u0080\u0099s extremely rare to build the runtime in no_std mode directly. The no_std build is usually only initiated from build.rs. However if you have to do so, it\u00e2\u0080\u0099s likely the runtime will be still built ti the wasm target, but then it won\u00e2\u0080\u0099t be embedded to the outer build because it\u00e2\u0080\u0099s not std.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0h4x3rotab\n                \n                Nov 14, 2021 at 18:46\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you! I believe that clears everything up.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mkl\n                \n                Nov 15, 2021 at 20:59\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","175":"Add a comment\n                \u00c2\u00a0|","176":"Add a comment\n                \u00c2\u00a0|","177":null,"178":"All crates are imported with default-features = false, except the ones in dev-dependencies and also i didn't get what you mean by \"their std feature enabled in the top crate's std\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shubham Gupta\n                \n                Nov 10, 2021 at 9:59\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","179":"Add a comment\n                \u00c2\u00a0|","180":"Add a comment\n                \u00c2\u00a0|","181":"Add a comment\n                \u00c2\u00a0|","182":null,"183":"Hi, thankyou for your answer, It is connected at localhost 7053 and while setting my network up which is doing fine I guess that means orderers are ported successfully right? but while creating channels its not working. :(\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Charchit Dhawan\n                \n                Nov 10, 2021 at 5:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Running the network successfully means that the orderer is running but does not guarantee that it is running on the specified port. If you can confirm that the scripts you're running are from the official Github repository, I could check it and see what could possibly be wrong.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rockson\n                \n                Nov 10, 2021 at 12:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Line 27 of docker file says that the orderer should be running on port 7050. This is confirmed by line 45 of the channel configuration file.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rockson\n                \n                Nov 10, 2021 at 12:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The onsadmin command specifies that -o is the orderer's address which should be running on 7050.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rockson\n                \n                Nov 10, 2021 at 12:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I would recommend modifying line 40  of this file and try again.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rockson\n                \n                Nov 10, 2021 at 12:37\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 3 more comments","184":"1\n            \n        \n        \n            \n                \n                Nice to know it works, there's some tiny learning to npm(package manager). If you're interested in nodeJS, NPM is worth investing and pretty straight-forward.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Han\n                \n                Nov 12, 2021 at 1:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks but, i knew it already, tell something new. \u00f0\u009f\u0098\u0083\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aryan\n                \n                Nov 12, 2021 at 2:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","185":"Thanks for your reply, Ipfs is used with dapps right? I wanted to know if I can store the data of a normal android app (NOT a dapp) on <blockchain>.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aswin Thotapalli\n                \n                Nov 12, 2021 at 4:05\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes you can!!!  Also you can store you website on ipfs\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aryan\n                \n                Nov 13, 2021 at 9:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","186":"Add a comment\n                \u00c2\u00a0|","187":"Also note that there isn't anything special about MetaMask. It is just the first and the most popular wallets. There are different in-browser wallets and there are even different wallet kinds.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                May 20, 2022 at 7:56\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","188":"Add a comment\n                \u00c2\u00a0|","189":"Add a comment\n                \u00c2\u00a0|","190":"Add a comment\n                \u00c2\u00a0|","191":"Add a comment\n                \u00c2\u00a0|","192":"Thanks for your input nigma..... All I want is to know the parameters inside the bond_extra()......(The amount they wanna bond) based on that I want to set txn-fee and by using the above logic we can only match the call.(that is I am able to know that the call is from staking but unable to know the amount passed as parameter)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Nov 8, 2021 at 3:59\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You can also match the argument. Where I do pallet_staking::Call::bond_extra { .. }, you replace .. with the actual argument. This is not about substrate per-se anymore, you should learn more about Rust pattern-matching.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kianenigma\n                \n                Nov 8, 2021 at 14:51\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I have applied the differences(that is hard coupled 2 pallets) and facing below error.  error: failed to run custom build command for node-runtime v2.0.1 (\/home\/user\/sub_v2\/substrate\/bin\/node\/runtime)  error: target is not supported, for more information see: docs.rs\/getrandom\/#unsupported-targets      --> \/home\/user\/.cargo\/registry\/src\/github.com-1ecc6299db9ec823\/getrandom-0.2.2\/src\/lib.rs:213:9       |\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Nov 9, 2021 at 4:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","193":"Add a comment\n                \u00c2\u00a0|","194":"Add a comment\n                \u00c2\u00a0|","195":"Yes I understand that I have to either remove the view modifier or the update of variable to overcome that error, but im asking if there is a way to display the error on running the function?? Im looking for the output to be in this way: link\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0xBatmanx\n                \n                Nov 3, 2021 at 12:34\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Thanks for clarification, I updated my answer with ways to get the string from a transaction (that doesn't return values for transaction, unless it's an internal transation between contracts).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 3, 2021 at 16:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks! The ways you mentioned work. I am using require(wdraw_amt <= balance,\"Insufficient funds, Try lesser amount!.\"); which shows the error too, I thought to let you know. Thanks for the help brother!. Appreciate it!!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0xBatmanx\n                \n                Nov 4, 2021 at 17:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","196":"Add a comment\n                \u00c2\u00a0|","197":"Thank you @Christopher . Sorry for the insufficient information. I reinstalled the docker and <hyperledger> Fabric and the problem has gone.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Leo\n                \n                Nov 7, 2021 at 6:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","198":"This answer wins for me.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Noopur Phalak\n                \n                Dec 5, 2021 at 14:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                niiice, so simple.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gneric\n                \n                Dec 16, 2021 at 16:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                very nice, this worked for me as well\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0trevoraaron\n                \n                Apr 20, 2022 at 18:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","199":"Add a comment\n                \u00c2\u00a0|","200":null,"201":"Thank you. Actually, I'm trying to setup multiple nodes (for different type of data, not for crypto prices) with their respective oracles and then setup aggregator which will aggregate results just like chianlink is doing for prices.  So first of all, is it the right strategy to create feed like setup for other type of information? And secondly, Am I going in right direction or should be using something else provided by chainlink\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zeeshan Hanif\n                \n                Nov 3, 2021 at 5:34\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The official Chainlink feeds I linked to above are a bit more complicated than the design you are listing, but you can certainly do that (that's what I was talking about in the 2nd paragraph of my answer). If this is or a hackathon (or just to demo your app) and there's no existing data feed for the data you need, I'd suggest using the \"AnyAPI\" feature and a single Chainlink node. Once it's time to go to mainnet, the Chainlink Labs team can assist you in making a decentralized oracle network. You can reach them here: chain.link\/data-feeds\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zak Ayesh\n                \n                Nov 3, 2021 at 18:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks. Yes for now its for hackathon but will need proper setup for mainnet\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zeeshan Hanif\n                \n                Nov 3, 2021 at 18:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","202":"i see, did not know I could pass in the function like this. Will try it out in a few days, thanks!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0LuxuryWaffles\n                \n                Nov 3, 2021 at 11:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Best regards, my friend. If it throws any problem notify me :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Nov 3, 2021 at 11:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                turns out, i could just tweak the way I use permission in OpenZeppelin, frontend Calls contract A, which is public, and do some checks in contract A which will then call contract B  with contract_role, as the msg.sender in B will be contract A which still secures the mint function\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0LuxuryWaffles\n                \n                Nov 6, 2021 at 4:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes msg.sender is a little tricky in inheritence\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Nov 6, 2021 at 14:01\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","203":"Add a comment\n                \u00c2\u00a0|","204":"1\n            \n        \n        \n            \n                \n                Thanks for taking the time out to answer - I ended up figuring out the the buyer's address can be determined when the spl token program initialises an account (and the seller's address seems to come from the same thing happening with a token account of the seller when the account is closed by the spl token program) so your answer is absolutely right. Thanks again!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0lsg93\n                \n                Nov 1, 2021 at 15:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","205":null,"206":"Thanks for your answer. But I kept it running as you said.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0fairdev610\n                \n                Nov 1, 2021 at 11:51\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Ok. Is there anything blocking port 8545 on your machine?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0wiziwiz\n                \n                Nov 1, 2021 at 13:37\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Also what was displayed in the terminal were you run  >npx hardhat node  when you deployed the first contract ? (there should be something like \"  console.log:     Deploying a Greeter with greeting: Hello, Hardhat! \")  Can you see any error printed in that same terminal when you try to connect with metamask ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0wiziwiz\n                \n                Nov 1, 2021 at 13:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                There were no errors and displayed as you wrote above.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0fairdev610\n                \n                Nov 1, 2021 at 15:12\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","207":null,"208":null,"209":"I could separate the orderers, now I want to use an api service to register a user and add the car to my chaincode, I can register the user successfully, but for adding car I got this following error: Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed. Unable to connect to the discovered orderer orderer1.org2.example.com:10050 due to Error: Failed to connect before the deadline on Committer- name: orderer1.org2.example.com:10050, url:grpcs:\/\/orderer1.org2.example.com  it is same for other orderers too\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0co.blocks office\n                \n                Nov 2, 2021 at 6:02\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","210":null,"211":"This does indeed seem to be the case. Which leads to the follow-up question: How is the splitting of this minting fee from the treasury wallet usually handled?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Torantula\n                \n                Nov 29, 2021 at 22:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Torantula my best answer to your follow-up question is that the documentation I quoted above is incorrect. From conversations with others in the Solana community, it appears that the initial minting fee is paid entirely to the wallet that created the NFT. This also matches the behavior described by the OP.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0emersonthis\n                \n                Nov 30, 2021 at 23:01\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","212":"Add a comment\n                \u00c2\u00a0|","213":"Add a comment\n                \u00c2\u00a0|","214":null,"215":"Hi, thank you for your answer! From what I understand, after the creation of Contract A and Contract B, someone (most probably only the owner of contract A) should manually call the setContractBAddress function, right?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Flendor\n                \n                Oct 28, 2021 at 10:19\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Flendor exactly\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 28, 2021 at 10:23\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","216":"Add a comment\n                \u00c2\u00a0|","217":"Add a comment\n                \u00c2\u00a0|","218":"Add a comment\n                \u00c2\u00a0|","219":"Add a comment\n                \u00c2\u00a0|","220":"Add a comment\n                \u00c2\u00a0|","221":"Add a comment\n                \u00c2\u00a0|","222":null,"223":"1\n            \n        \n        \n            \n                \n                I've also used Keypair.fromSecretKey(Uint8Array.from(<private_key_here>))\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0C.OG\n                \n                Oct 27, 2021 at 8:45\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Thanks for the really helpful example, I was able to use this to generate a working wallet, but found that my address differs from what I had on Phantom, where I had exported the seed phrase (12 words BIP39).   I used solana-keygen recover 'prompt:\/\/?key=0\/0' -o keypair.json to generate the seed file per docs.solana.com\/wallet-guide\/file-system-wallet  Any idea what I'm doing wrong?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0<blockchain>wtf\n                \n                Jan 31, 2022 at 15:34\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Try logging into your Phantom wallet in your browser.  You need to export your private key.  You have to choose Setttings (gear in lower right) of Phantom wallet.  Then you have to scroll down and choose the Export Private Key.  You'll have to provide your password. You can see all of that in this image: i.stack.imgur.com\/w8LIq.png Once you do that, you'll have the proper key which you'll use in a call to  var phantomSecret = from_b58(\"your-private-key-as-a-string\");\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0raddevus\n                \n                Feb 1, 2022 at 15:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                seriously config your code it's all white how hard is it to put a javascript tag in your ```\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0max89\n                \n                Mar 27, 2022 at 13:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","224":null,"225":"This is what I needed, thank you very much!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Oct 24, 2021 at 20:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","226":"Thank you (again) for the answer \u00f0\u009f\u0099\u0082 Talking about the environment variables, should I change them only to point to the right certificates (CORE_PEER_TLS ones and CORE_PEER_MSPCONFIGPATH) and leave the others unchanged?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arnaldo\n                \n                Oct 25, 2021 at 10:34\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","227":"So basically for the first time it's like a server-client architecture?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shobhit Tewari\n                \n                Oct 24, 2021 at 15:59\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @ShobhitTewari It's still peer-to-peer, just the first peers are defined (instead of discovered).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 24, 2021 at 17:35\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","228":null,"229":"On the first solution, how do I know when priceFetcher is ready to be used?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Apollo\n                \n                Oct 24, 2021 at 15:42\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                The line after const priceFetcher = await UniswapTokenPriceFetcher.build(token1, token2) will not run until priceFetcher is available. Therefore on the next line you can be sure that priceFecter will contain the value resolved by the promise. That's how await works.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marcello Del Buono\n                \n                Oct 24, 2021 at 17:21\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                So a call to the function without the await keyword would execute next lines of code while waiting for build to complete?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Apollo\n                \n                Oct 25, 2021 at 18:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yest. A call to an async function without await returns a promise and moves on to the next line while the promise is still pending. If you instead put await in front of the async function, Javascript will keep doing something else until the promise resolves a value. Only then javascript will assign the resolved value to priceFetcher and move to the next line.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marcello Del Buono\n                \n                Oct 25, 2021 at 18:43\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","230":"Add a comment\n                \u00c2\u00a0|","231":"Add a comment\n                \u00c2\u00a0|","232":"You needn't delete localhost 8545. You'd just need to set the chain id as 1337 instead of 5777\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Madhavan Malolan\n                \n                Oct 23, 2021 at 13:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","233":"Add a comment\n                \u00c2\u00a0|","234":"Add a comment\n                \u00c2\u00a0|","235":"Add a comment\n                \u00c2\u00a0|","236":null,"237":null,"238":"Add a comment\n                \u00c2\u00a0|","239":"Add a comment\n                \u00c2\u00a0|","240":"Add a comment\n                \u00c2\u00a0|","241":"Add a comment\n                \u00c2\u00a0|","242":null,"243":"Add a comment\n                \u00c2\u00a0|","244":"Add a comment\n                \u00c2\u00a0|","245":"Add a comment\n                \u00c2\u00a0|","246":"any batched operation for this function? i.e. a function that takes multiple pubkeys as input, instead of just one?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DaveTheAl\n                \n                Apr 16, 2022 at 9:15\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Not for this getBalance \/ getTokenAccountBalance, you'll instead have to use getMultipleAccounts with jsonParsed encoding, and then extract the balance from the result there: docs.solana.com\/developing\/clients\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jon C\n                \n                Apr 16, 2022 at 10:48\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                where can I submit a feature request for this? xD\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DaveTheAl\n                \n                Apr 16, 2022 at 16:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                github.com\/solana-labs\/solana\/issues go for it!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jon C\n                \n                Apr 17, 2022 at 10:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","247":"Add a comment\n                \u00c2\u00a0|","248":"Add a comment\n                \u00c2\u00a0|","249":"Add a comment\n                \u00c2\u00a0|","250":"Basically, I want to allow or disallow a smart contract to do the processing (and then generate the corresponding transaction) based on the organization (or consortium) of the one who invokes it. And I think doing this in the smart contract itself like you said is the simplest way to do it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arnaldo\n                \n                Oct 19, 2021 at 13:18\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes. You can define a BeforeTransaction function per contract and evaluate mspID. I think you can also define one only BeforeTransaction function and evaluate operationSplitted[0] (If I remember correctly, it may be the contract name). Your ACL conditions may be Go maps or you can even save them in the world state.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kekomal\n                \n                Oct 19, 2021 at 13:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                In Java, it's sufficient to override the beforeTransaction method of the interface ContractInterface that is implemented by the custom contract, right? I've tried to do so, but it seems that that handler is not invoked.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arnaldo\n                \n                Oct 19, 2021 at 15:29\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It should be sufficient... <hyperledger>.github.io\/fabric-chaincode-java\/release-2.2\/api\/org\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kekomal\n                \n                Oct 20, 2021 at 6:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","251":null,"252":"Add a comment\n                \u00c2\u00a0|","253":"But I did check my brackets, and they are all in pairs. Can you show me which closing bracket was the one you added?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cyan\n                \n                Oct 16, 2021 at 10:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yeah, I added working example\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0SiarheiK\n                \n                Oct 16, 2021 at 10:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Added example well compiling in remix\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0SiarheiK\n                \n                Oct 16, 2021 at 12:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","254":"Thank  a lot for your answer. It worked for me. But I am very confused, is it a good practice?  Should we use a deployed  smart contract  from multiple  dapps like we use api in multiple centralized apps?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yzyzyzyz\n                \n                Oct 24, 2021 at 19:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It's a very common practice. For example: The target contract is of an established DEX, and the source contract allows to buy a specific token through the DEX... So kind of like if the DEX was publishing an API, and the source contract was calling the API.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 24, 2021 at 20:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","255":"2\n            \n        \n        \n            \n                \n                Thanks, Vlad, for your explanations \u00f0\u009f\u0091\u008d\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soulwish\n                \n                Oct 16, 2021 at 9:59\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","256":"Add a comment\n                \u00c2\u00a0|","257":"Add a comment\n                \u00c2\u00a0|","258":"thank you @Petr for the answer. so you say that <blockchain> will overwrite the existing data with new data. is this not breaking the rule that data in <blockchain> cant be removed\/erased?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alvin Christianto\n                \n                Oct 16, 2021 at 11:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The data is not removed from the <blockchain> - you can still access it using an archive node. It's only made unavailable for the contracts, because they can only access the current (and not historic) state.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 16, 2021 at 11:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                okay i got the point. thankyou @Petr\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alvin Christianto\n                \n                Oct 16, 2021 at 11:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","259":"I'm was trying to find a long term fair model that don't need administration after launched. Something the answers \"Who pays the fee?\" and \"When?\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Turupawn\n                \n                Oct 15, 2021 at 15:27\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","260":"Add a comment\n                \u00c2\u00a0|","261":"Add a comment\n                \u00c2\u00a0|","262":"I reinstalled go1.16.7, the problem is still the same.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0proxima\n                \n                Oct 14, 2021 at 9:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yep, I see the server part fails. It looks like statsd has been updated but the code base hasn't and gets around this by storing on older version of statsd in the vendor file so it compiles if you get the source from github.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0david_k\n                \n                Oct 14, 2021 at 12:31\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I cloned the source code from github and it succeeded\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0proxima\n                \n                Oct 14, 2021 at 13:37\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I now try to remove -u to execute the command.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0proxima\n                \n                Oct 14, 2021 at 13:58\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                All were successful, thank you very much for your patient answers.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0proxima\n                \n                Oct 14, 2021 at 14:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","263":"Hi, @Nikola. Thanx for your answer. I tried <web3>.jslib importing but the same error happened.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Famous Felix\n                \n                Oct 15, 2021 at 0:26\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","264":"I added hardhat.config.js & error log screenshots. PFA\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hardik Mandankaa\n                \n                Oct 21, 2021 at 6:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Adding gasLimit and gasPrice should resolve the error - { gasLimit: 2850000, gasPrice: ethers.utils.parseUnits('30', 'gwei')}\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0h.mavrodiev\n                \n                Oct 21, 2021 at 10:04\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Also tried it. But no solution found\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hardik Mandankaa\n                \n                Oct 21, 2021 at 10:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                can you share your deploy function? Make sure that your PRIVATE_KEY env variable have \"0x\"  or add      accounts: [0x${PRIVATE_KEY}],\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0h.mavrodiev\n                \n                Oct 21, 2021 at 11:45\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It works, If I remove chainlink library. With chainlink, not able to deploy.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hardik Mandankaa\n                \n                Oct 25, 2021 at 6:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","265":"Add a comment\n                \u00c2\u00a0|","266":null,"267":"1\n            \n        \n        \n            \n                \n                Thank you for your information. I found this post docs.r3.com\/en\/platform\/corda\/4.2\/enterprise\/\u00e2\u0080\u00a6 and I want to know if we can assume that the size of a state in a transaction is similar to the size of the transaction itself, just to have an idea of the database table space usage\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user10488162\n                \n                Oct 13, 2021 at 16:41\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Yes, they did what I suggested in my answer basically.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Oct 13, 2021 at 22:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","268":null,"269":"Add a comment\n                \u00c2\u00a0|","270":"I've looked into the solutions you suggested, all of them are temporary. I found a way using shelve and tempfile modules, and I think they might suffice my need. Thank you.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kim Jisena\n                \n                Oct 13, 2021 at 13:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","271":"Add a comment\n                \u00c2\u00a0|","272":"2\n            \n        \n        \n            \n                \n                Thanks Jon for pointing this out. I've changed my code structure and used the getBalance. Finally, it works!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Afa12\n                \n                Oct 15, 2021 at 2:07\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                What did you change your construct to? Can you please provide a working Vanilla example? I have a connection, and I can get the address, but when I run this line to get a balance I get a -32603 error. var balance = window.solana.request({           \"jsonrpc\": \"2.0\",           \"id\": 1,           \"method\": \"getBalance\",           \"params\": [wallet_address]    });\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Solbot\n                \n                Oct 18, 2021 at 0:22\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm getting the wallet_address from: var wallet_address = window.solana.publicKey.toString();\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Solbot\n                \n                Oct 18, 2021 at 0:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                stackoverflow.com\/questions\/69609838\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Solbot\n                \n                Oct 18, 2021 at 1:26\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                How can you get metadata on nft\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vince\n                \n                Oct 26, 2021 at 23:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","273":"Add a comment\n                \u00c2\u00a0|","274":"Its not to much detailed bro\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aditya Dev\n                \n                Oct 10, 2021 at 12:45\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I am here to answer the question, not writing your programs for you. The scope of an answer to write a full transaction nonce management system is massive. Study and get good.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Oct 10, 2021 at 17:04\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @Mikko Ohtamaa Great answer :D thx btw. Wanted some inspiration.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dimfred\n                \n                Jul 1, 2022 at 19:40\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","275":"So, any exchange of information is recorded as a transaction. Okay! Thanks!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Prab-mat\n                \n                Oct 11, 2021 at 14:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Prab-mat no problem. Happy to help...  ^_^\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Himanshu Bansal\n                \n                Oct 12, 2021 at 12:39\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","276":"Add a comment\n                \u00c2\u00a0|","277":"Add a comment\n                \u00c2\u00a0|","278":"Add a comment\n                \u00c2\u00a0|","279":"Add a comment\n                \u00c2\u00a0|","280":"Thank you very much for the answer, the solution \"SignedTransaction.txBits.size\" works (per single transaction), but is there any way to use the JDBC session and get the total <transactions>' size of a node? (e.g. I would like to know which is the transaction with the largest size)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user10488162\n                \n                Oct 11, 2021 at 9:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @user10488162 you could store that information for each transaction in a separate table using JDBC session. Just an idea..\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Oct 11, 2021 at 23:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Ok! thank you very much for your feedback!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user10488162\n                \n                Oct 12, 2021 at 6:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","281":"Add a comment\n                \u00c2\u00a0|","282":"Thanks! I'll do research on these :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mariusz Sidorowicz\n                \n                Oct 7, 2021 at 22:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","283":"Add a comment\n                \u00c2\u00a0|","284":"Thank you, can't believe I missed parsing data.result\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0eth_developer\n                \n                Oct 6, 2021 at 1:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","285":"Add a comment\n                \u00c2\u00a0|","286":null,"287":"But, my function is working and randomResult is fulfilled with a random number\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0UnPapeur\n                \n                Oct 7, 2021 at 14:09\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You fulfill your own request, and then the node later also fulfils your request\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Oct 8, 2021 at 15:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","288":"Add a comment\n                \u00c2\u00a0|","289":"Add a comment\n                \u00c2\u00a0|","290":"Add a comment\n                \u00c2\u00a0|","291":"Add a comment\n                \u00c2\u00a0|","292":null,"293":null,"294":null,"295":null,"296":"Add a comment\n                \u00c2\u00a0|","297":"Add a comment\n                \u00c2\u00a0|","298":"Add a comment\n                \u00c2\u00a0|","299":"Add a comment\n                \u00c2\u00a0|","300":"Add a comment\n                \u00c2\u00a0|","301":"Strangely I am still getting a revert, event when the transfer method is empty... Do you have an idea with what this could have to do? regarding the idea with Brownie; I will test that tomorrow\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sofien\n                \n                Oct 5, 2021 at 0:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Because the question does not contain repeatable example, your guess is as good as mine. I suggest learning how to debug issues like this yourself, so you can systematically determine the revert cause and do not need to do guesswork.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Oct 5, 2021 at 9:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","302":"1\n            \n        \n        \n            \n                \n                Thank you Rafi! Solved the problem for me too.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0crussell\n                \n                Dec 18, 2021 at 19:07\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                how did you not get an upvote for this? criminal! upvoted\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0lionbigcat\n                \n                Dec 30, 2021 at 9:01\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","303":null,"304":"Add a comment\n                \u00c2\u00a0|","305":null,"306":"Add a comment\n                \u00c2\u00a0|","307":"Add a comment\n                \u00c2\u00a0|","308":"Add a comment\n                \u00c2\u00a0|","309":"Add a comment\n                \u00c2\u00a0|","310":"Add a comment\n                \u00c2\u00a0|","311":"Add a comment\n                \u00c2\u00a0|","312":"Add a comment\n                \u00c2\u00a0|","313":null,"314":"Does the pattern continues after third byte? The doc only describes to the third byte but I assume it supports infinite number of bytes?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Hao-Cher Hong\n                \n                Jan 7, 2022 at 5:48\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Hao-CherHong  \"If the value is above 0x3fff, the high bit is set and the remaining 2 bits of the value are placed into the lower 2 bits of a third byte\" The encoding is to support u16 numbers which means a fourth byte will never be required and only part of the third byte can ever be used.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alexytsu\n                \n                Jun 16, 2022 at 2:48\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                fix url for solana <python> module: github.com\/michaelhly\/solana-py\/blob\/v0.23.3\/src\/solana\/utils\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ilyar\n                \n                Dec 6, 2022 at 13:52\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","315":"Add a comment\n                \u00c2\u00a0|","316":"Thank You So Much. Really Appreciate Your Response. Let Me Give It A Try\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Isaiah2240\n                \n                Sep 28, 2021 at 10:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                i get this error when compiling. how do i solve it\/ error below  not found contracts\/IUniswapV2Router.sol\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Isaiah2240\n                \n                Sep 28, 2021 at 12:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This message means that this contract path has not been found in your environment, if you are using a third party contract make sure you have all the contracts required for it in your path, also make sure the import path is correct in your contract, in any case this is hard to guess just with the info you provided, better to share more details about the contract you are using as well how you are compiling it\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0regcostajr\n                \n                Sep 28, 2021 at 13:31\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                its a third party contract, and i;m using solidity to compile. Here is the link    github.com\/Loudmarket\/LoudMarket\/blob\/main\/LM.sol\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Isaiah2240\n                \n                Sep 28, 2021 at 14:22\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you. really appreciate\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Isaiah2240\n                \n                Sep 28, 2021 at 14:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","317":"Add a comment\n                \u00c2\u00a0|","318":"I see. So is there any connection between e.g., the famous Jack Dorsey tweet and the underlying token? Like, what prevents me from simply minting another token, claiming its connected to the tweet, and selling it on an arbitrary NFT exchange?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zuza\n                \n                Sep 27, 2021 at 13:39\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @Zuza Technically, the token metadata probably links to the tweet or contains its hash or something (I'm not really sure about this particular case). And the tweet doesn't need to link to the token. So from the technical point of view - nothing prevents you from doing so... From the legal standpoint, that's a different story.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 27, 2021 at 14:37\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","319":"Add a comment\n                \u00c2\u00a0|","320":"Add a comment\n                \u00c2\u00a0|","321":"1\n            \n        \n        \n            \n                \n                thanks for replying i have an old version, because when typing openssl version, i got OpenSSL 1.0.2g  1 Mar 2016 ubuntu@ubuntu-vbox:\/usr\/local\/openssl-1.1.0l$ which openssl \/usr\/bin\/openssl\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0allouf\n                \n                Sep 26, 2021 at 10:07\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Your distribution may be too old, but as the answerer mentioned you can try to install version 1.1 using apt-get install libssl1.1\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jon C\n                \n                Sep 27, 2021 at 11:25\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","322":"Add a comment\n                \u00c2\u00a0|","323":"Thank you very much\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mohammed alzuharey\n                \n                Feb 6, 2022 at 21:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                can you guid me how to do that @user17014405\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user9467051\n                \n                Jun 8, 2022 at 10:39\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","324":"Add a comment\n                \u00c2\u00a0|","325":"Add a comment\n                \u00c2\u00a0|","326":"Nice job on finding that out! You should mark your answer as the correct answer, so others can be sure this issue was properly addressed.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zak Ayesh\n                \n                Sep 27, 2021 at 4:33\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","327":"Why not just throw out all the <transactions> of the user in the current block if they send you an invalid transaction (one they cannot afford)? Surely, no one else could have constructed that invalid transaction as the ID must be unique and the digital signature must be correct. I still don't understand the necessity of Proof of Work. Would appreciate further clarification.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bill Baits\n                \n                Sep 30, 2021 at 22:38\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @BillBaits What do you mean by invalid transaction? In my examples transaction are always valid, they are generated by the same person, who has private key. Every new transaction has different ID, since ID=hash(tx). Imagine you are node in the network. You received 2 blocks, transaction1 in block1 sends you some currency from Bob's account, transaction2 in block2 sends the same amount of currency to Alice's account from Bob's account. Bob tries to buy something from you. How would you determine which block (and underlying transaction) is correct?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zergatul\n                \n                Oct 1, 2021 at 10:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Okay, I understand what you mean now. Bob sends transaction1 to one miner and transaction2 to another miner. They both construct different blocks and now there is a discrepancy. I must not have grasped the type of problems that arise from having a fully decentralized network.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bill Baits\n                \n                Oct 2, 2021 at 4:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","328":"Add a comment\n                \u00c2\u00a0|","329":"Add a comment\n                \u00c2\u00a0|","330":null,"331":"Add a comment\n                \u00c2\u00a0|","332":null,"333":"Thank you very much! This works for contracts with less than 10000 tokens. If there are more, I get query returned more than 10000 results. Is this an infura limitation and would it help to setup my own <geth> instance?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alai\n                \n                Sep 28, 2021 at 22:45\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                @Alai Exactly, this 10k limit is imposed by Infura, you can bypass it by using your own node.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 29, 2021 at 7:42\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                Thank you very much. Do I need an archive node for this or is a full node sufficient?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alai\n                \n                Oct 16, 2021 at 13:00\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @Alai was the fast sync enough you to get the transfers?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0luca992\n                \n                Nov 22, 2021 at 21:35\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                I got it working with infura with the above code by specifying      fromBlock: x, toBlock: y.  and incrementing x and y in a loop where the range of x and y is small enough to return less than 10,000 results. @Alai\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0luca992\n                \n                Nov 26, 2021 at 23:17\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 5 more comments","334":null,"335":"Add a comment\n                \u00c2\u00a0|","336":"Add a comment\n                \u00c2\u00a0|","337":"Can I port 0.4.24 codes to the 0.5.0?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gbenga ogunbule\n                \n                Sep 23, 2021 at 8:19\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Far as I know then it isn't possible to automatically migrate code and you would need to make changes accordingly to docs.soliditylang.org\/en\/latest\/050-breaking-changes.html# I think it is easier to use different SafeMath.sol github.com\/ConsenSysMesh\/openzeppelin-solidity\/blob\/master\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Peteris\n                \n                Sep 23, 2021 at 9:42\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","338":"Add a comment\n                \u00c2\u00a0|","339":"But with this type of implementation what's is the point of passing this contract ? I have also see this in another coins but the same contract not verified so cannot read code.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saul Da Silva\n                \n                Sep 22, 2021 at 18:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @SaulDaSilva I don't know what are the contract authors' intentions. The UsingLiquidityProtectionService doesn't call any of the IPLPS methods, so it's unclear why they put it there. It might be an unfinished code and they might have planned to call the IPLPS functions later; or they might have forgotten to remove the setter & getter when they were deleting some other features.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 22, 2021 at 18:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I got it i don't know too author intentions, but for exemple if you see link you will note that seem to be implemented.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saul Da Silva\n                \n                Sep 22, 2021 at 18:40\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","340":"turns out to be couchdb which is using a lot of memory. i am running the peer and couchdb in the same pod, which resulted in high memory usage because of the couchdb. i have a cron job running which queries the statedb (string query). also, i am using the official <hyperledger>\/fabric-couchdb. for 3 <transactions> (committed already) the couchdb memory usage is 100Mi++. is this normal for couchdb?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Niraj Kumar\n                \n                Sep 24, 2021 at 17:08\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","341":"Add a comment\n                \u00c2\u00a0|","342":"Add a comment\n                \u00c2\u00a0|","343":"Add a comment\n                \u00c2\u00a0|","344":null,"345":null,"346":"Add a comment\n                \u00c2\u00a0|","347":null,"348":"Add a comment\n                \u00c2\u00a0|","349":"Add a comment\n                \u00c2\u00a0|","350":"But I still want effectively I can use multiple miners for creating new blocks, what should I change? Thanks.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nam V. Do\n                \n                Sep 20, 2021 at 10:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Does each block depend on the previous block? If so, I don\u00e2\u0080\u0099t see how this is possible.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tim Moore\n                \n                Sep 20, 2021 at 10:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","351":"Add a comment\n                \u00c2\u00a0|","352":"1\n            \n        \n        \n            \n                \n                Please add more explanation of your code\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zach Jensz\n                \n                Jun 4, 2022 at 13:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","353":"Yes... Even I am not able to figure out why, so raised a BUG with JetBrains. Here's the link youtrack.jetbrains.com\/issue\/KTIJ-19699\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sourabh\n                \n                Sep 21, 2021 at 3:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","354":"Add a comment\n                \u00c2\u00a0|","355":"Add a comment\n                \u00c2\u00a0|","356":"Add a comment\n                \u00c2\u00a0|","357":null,"358":"Add a comment\n                \u00c2\u00a0|","359":"Add a comment\n                \u00c2\u00a0|","360":null,"361":"1\n            \n        \n        \n            \n                \n                I understand that nonce (or rather the hash of it + block) is what miners are searching for. What I don't understand is how is nonce kept unknown to everyone, including the creater? If someone built this system and created a protocol, couldn't this person backtrack what each nonce is?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dyxdyx\n                \n                Sep 16, 2021 at 4:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Due to its (nonce's) randomization's nature.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Andy Jazz\n                \n                Sep 16, 2021 at 4:46\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You can't predict what number the random number generator will generate. In the same way, you cannot predict what the nonce will be.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Andy Jazz\n                \n                Sep 17, 2021 at 18:59\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @dyxdyx Combinatioin of previous block hash and nonce results next block hash. The miner must find such a nonce, that the resulting hash will have 19 leading zeros. This is pure luck, due to the \"quality\" of the SHA-256 algorithm. First of all, there is a mathematical proof, that if you take SHA-256 hash with 19 leading zero, you can't calculate or at least approximate the original value and the nonce. As an example, imagine that the hacker stole the database with SHA-256 password hashes. He can't \"guess\" the original value of the password, even if he knows password hash.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mykhailo Skliar\n                \n                Sep 17, 2021 at 21:38\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @dyxdyx The same with bitcoin nonce. Both miners and the hackers might need months to \"guess\" the correct nonce or original password. You would need to spend such a large amount of CPU energy that the operation of \"guessing\" the password or mining the bitcoin becomes very expensive for one miner and for one hacker. Of course, if 1 million hackers would unite and would try to guess your original password from SHA-256 hash at the same time, one of them would eventually succeed. The same is true for miners. If you want to become successful in mining unite with other miners and share the profit :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mykhailo Skliar\n                \n                Sep 17, 2021 at 21:42\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","362":"Add a comment\n                \u00c2\u00a0|","363":"Nice work! Can you mark this as the answer to your question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Sep 14, 2021 at 18:15\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @PatrickCollins sorry forgot to do that. SO says it will take 22 hours to mark it as correct answer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Devdeep Ghosh\n                \n                Sep 15, 2021 at 19:37\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","364":"Add a comment\n                \u00c2\u00a0|","365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":"Add a comment\n                \u00c2\u00a0|","372":"Add a comment\n                \u00c2\u00a0|","373":"This is a fork of the main Ethereum network and I am trying to send some USDC coins to my account. I found out that the owner of the tokens has some of them, so I use his address. Is there any other way to get multiple USDC coins in this smart contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0taranchik\n                \n                Sep 12, 2021 at 9:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @taranchik Unless you know the private key to the tokenHolder address (that you could use to execute the transfer() method directly from their address), they need to approve() the tokens first from their address directly. There's currently no other known way to spend tokens belonging to an other address without their key\/approval.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 12, 2021 at 10:04\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Passing into the ERC20 openzeppelin constructor token address, would it be possible to get some of these tokens somehow?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0taranchik\n                \n                Sep 12, 2021 at 10:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @taranchik Only tokens of the contract that you're instantiating (with the constructor). But since the USDC contract is already instantiated, you can't execute its constructor for the second time.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 12, 2021 at 11:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                So in other words is the approve function called in the browser via e.g MetaMask, or can it still be called in the contract if the user is invoking that function (is msg.sender)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dominic\n                \n                Jan 18, 2022 at 21:53\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","374":"Add a comment\n                \u00c2\u00a0|","375":"Add a comment\n                \u00c2\u00a0|","376":"1\n            \n        \n        \n            \n                \n                Please include any relevant information as text directly into your question, do not link or embed external images of source code or data. Images make it difficult to efficiently implement the given solution as they cannot be copied and offer poor usability to future users as they cannot be searched. See: Why not upload images of code\/errors when asking a question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Henry Ecker\n\u00e2\u0099\u00a6                \n                Sep 12, 2021 at 6:51\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I don't understand, I just put his code into the remix IDE and compiled the smart contract, I didn't add any extra code\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alb\u00c3\u00a9rico Dias Barreto Filho\n                \n                Sep 12, 2021 at 15:19\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Oh, yeah I got it. Thanks for the help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0WomanIn<blockchain>\n                \n                Sep 13, 2021 at 16:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @WomanIn<blockchain> could you mark it as the correct answer? because this error exists since solidity version 0.5 and has no clear answer, I think it would help other people  peace out\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alb\u00c3\u00a9rico Dias Barreto Filho\n                \n                Sep 13, 2021 at 22:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Definitely! Solidity has a lot of changes after the 0.5 version and in the 0.8 version.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0WomanIn<blockchain>\n                \n                Sep 15, 2021 at 0:35\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","377":"yep! i totally agree with this and i believe this is one of the appropriate way to configure the fabric network which span across different physical servers. might need to adjust the connection timeout and endorser timeout setting accordingly (depending on the number of peers across different physical servers)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Niraj Kumar\n                \n                Sep 15, 2021 at 5:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","378":"I did exactly in the examples above for the chain_spec and also added the genesis config while constructing runtime. My pallet is using the old format so I use the add_extra_genesis macro in the decl_storage!  to initialize keys. But I am unable to see local_keys when I try to retrieve them like let mut local_keys = T::AuthorityId::all();\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jdawg287\n                \n                Sep 10, 2021 at 6:40\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                My logs show the following: 2021-09-10 06:41:18.413   INFO ThreadId(24) pallet_customer: authority key from runtime storage: Public(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...))  2021-09-10 06:41:18.413   INFO ThreadId(24) pallet_customer: Local authority keys from keystore: []\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jdawg287\n                \n                Sep 10, 2021 at 6:45\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","379":null,"380":"With the smallest of changes to make it <python>ic, this worked. Tested on block with 248 transaction and your method was 6x faster than mine. Thanks\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Diop Chopra\n                \n                Sep 10, 2021 at 13:38\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","381":"Add a comment\n                \u00c2\u00a0|","382":"Add a comment\n                \u00c2\u00a0|","383":"Add a comment\n                \u00c2\u00a0|","384":"Can we have more than 1 emit per function? If so, does \"emit Transfer()\" have be the last one if it's one of the 2? Thanks!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vincent\n                \n                Jan 19, 2022 at 5:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Vincent you can emit multiple events in a function but it wont make sense because when we write functions we want to make sure each function does only one thing. also events will cost gas.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Jan 19, 2022 at 6:25\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                But what if I need to create a log that I want to access from a dapp? Currently I have this in TransferFrom(): ... emit EventLogs(sender, recipient, 'success', amountReceived, block.timestamp); emit Transfer(sender, recipient, amountReceived); But it doesn't seem to be working. Can I just remove the \"emit Transfer\"?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vincent\n                \n                Jan 19, 2022 at 6:32\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @Vincent  you better ask a question on stackoverflow with enough information and details and debugging information.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Jan 19, 2022 at 6:41\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","385":"Add a comment\n                \u00c2\u00a0|","386":null,"387":"Add a comment\n                \u00c2\u00a0|","388":"I managed to instantiate tokens, but how I would get for payments some of them?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0taranchik\n                \n                Sep 10, 2021 at 17:19\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","389":"Add a comment\n                \u00c2\u00a0|","390":"Add a comment\n                \u00c2\u00a0|","391":"Add a comment\n                \u00c2\u00a0|","392":"Add a comment\n                \u00c2\u00a0|","393":null,"394":"Add a comment\n                \u00c2\u00a0|","395":"Add a comment\n                \u00c2\u00a0|","396":"can you share your entire lib.rs file? Also, can you share how you are compiling the contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Josh Ford\n                \n                Sep 3, 2021 at 1:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Done! Thanks @Josh Ford\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0josedlujan\n                \n                Sep 3, 2021 at 1:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hmmmm... Everything looks good with your contract. The only difference is the three backticks at the end of your snippet (```) but I imagine you just added that now for the post right? Your lib.rs doesn't have those in it correct?  The only step left to debug is the compiling process..... Try deleting the compiled WASM file and recompile it using this command: docs.near.org\/docs\/develop\/contracts\/rust\/\u00e2\u0080\u00a6  If that doesn't work try deploying your contract to a different accountId and if that doesn't work let's jump on a call and tackle this in real-time. :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Josh Ford\n                \n                Sep 3, 2021 at 1:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks! i will follow the same process  on another computer... lets see.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0josedlujan\n                \n                Sep 3, 2021 at 2:49\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I follow the same tutorial and use the same commands on another computer and everything its fine... i will try to find the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0josedlujan\n                \n                Sep 3, 2021 at 16:48\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","397":"Add a comment\n                \u00c2\u00a0|","398":"Thank You soo much @Petr,   Now just more curious to know which one will be better to use ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Trimantra Software Solution\n                \n                Sep 1, 2021 at 9:58\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @TrimantraSoftwareSolution It depends on your use case... First of all, it's discouraged here at StackOverflow to ask\/answer opinion-based questions and answers, because it tends to bring heated arguments and flamewars sometimes... Apart from that, PoA can be better for one thing, PoW can be better for other. So it really does depend and I'm not able to answer without more context.... But my personal opinion in this situation is that unless you need a specific consensus algorithm, I'd go with the default one (which is PoW) simply because there might be more documentation and support available.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 1, 2021 at 10:13\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","399":null,"400":"Have you got an idea of the number of request\/mn allowed by the API ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jerem Lachkar\n                \n                Jan 10, 2022 at 16:01\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @JeremLachkar From my experience, it changes regularly and isn't especially clear from their SDK. I have an API key and I can do one request every three seconds, sometimes every two before I get a 429 error message to say my request has been throttled. That said, I've seen people who are making one a second. If you want to keep up to speed with what's going on with OpenSea, from a developer's perspective, their discord channel (the dev section) is active with fellow devs and bot builders. These kind of topics are regularly spoken about, so I found it useful.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0goodaytar\n                \n                Jan 20, 2022 at 14:43\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                hey @goodaytar do you mind posting a link to your github with the bot ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lucian Tarna\n                \n                Mar 16, 2022 at 8:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","401":"Add a comment\n                \u00c2\u00a0|","402":null,"403":"Add a comment\n                \u00c2\u00a0|","404":"Please add further details to expand on your answer, such as working code or documentation citations.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 1, 2021 at 16:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","405":"Add a comment\n                \u00c2\u00a0|","406":"Add a comment\n                \u00c2\u00a0|","407":null,"408":"Add a comment\n                \u00c2\u00a0|","409":"can you help me? same problem\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0stofu\n                \n                Sep 17, 2021 at 2:35\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yeah check out the settings in the dashboard. You need to toggle the feature\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TonyTheCannoli\n                \n                Sep 21, 2021 at 17:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","410":"Add a comment\n                \u00c2\u00a0|","411":null,"412":"Thx very much Taimoor!! That was it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Augusto Caro\n                \n                Aug 27, 2021 at 23:28\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Or he can replace internal with public!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ahmad Gorji\n                \n                Aug 28, 2021 at 11:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","413":"Add a comment\n                \u00c2\u00a0|","414":"Add a comment\n                \u00c2\u00a0|","415":"Add a comment\n                \u00c2\u00a0|","416":"Add a comment\n                \u00c2\u00a0|","417":"Add a comment\n                \u00c2\u00a0|","418":"Add a comment\n                \u00c2\u00a0|","419":"Please provide additional details in your answer. As it's currently written, it's hard to understand your solution.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 7, 2021 at 18:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","420":null,"421":"Thank you very much I figured out the solution by initializing the program account with some data.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Akshay S P\n                \n                Aug 29, 2021 at 17:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","422":"Hello and thank you for answering. One question: Do you mean that I need to recall mintDaily() function manually every day ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jeanne Zinoviev\n                \n                Aug 23, 2021 at 17:29\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                There is a problem in the code : require(lastMintTime + 86400 >= block.timestamp, \"mint already\" ); must be like this : require(lastMintTime + 86400 <= block.timestamp, \"mint already\" ); and lastMintTime = block.timestamp; in mintDaily() must be like this : lastMintTime += 86400; (Just noted this for future readers.) Thank you very much for answering my questions.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jeanne Zinoviev\n                \n                Aug 24, 2021 at 18:39\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","423":"Add a comment\n                \u00c2\u00a0|","424":"2\n            \n        \n        \n            \n                \n                Oh, all right, now is a lot more clear.  I can't upvote, but thanks!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TRRVNA\n                \n                Aug 23, 2021 at 1:46\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","425":"Add a comment\n                \u00c2\u00a0|","426":"Add a comment\n                \u00c2\u00a0|","427":"Add a comment\n                \u00c2\u00a0|","428":"so by default nethereum is using the not legacy, is there a way to work around the error message with non legacy?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0BigChief\n                \n                Jul 14, 2022 at 13:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","429":"Add a comment\n                \u00c2\u00a0|","430":"Add a comment\n                \u00c2\u00a0|","431":"Add a comment\n                \u00c2\u00a0|","432":"Error: Service(Client(StateDatabase(\"Expected pruning mode: constrained\")))  Got this error while running the mentioned command\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Makam Aravind\n                \n                Aug 31, 2021 at 5:02\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","433":null,"434":"The data I am planning to use maybe JSON data, an array, or a simple text file. so the file of data may not have any limit right?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0yamna iftikhar\n                \n                Aug 19, 2021 at 4:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","435":null,"436":"Add a comment\n                \u00c2\u00a0|","437":"What node version are you using? Did you try it out?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0BonisTech\n                \n                Jan 18, 2022 at 14:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","438":"Add a comment\n                \u00c2\u00a0|","439":"Add a comment\n                \u00c2\u00a0|","440":"1\n            \n        \n        \n            \n                \n                yep, that's correct way of getting the current block. I suggest having the ensure throwing correct Error::<T>::YourErrorNameHere\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0woss\n                \n                Aug 15, 2021 at 12:36\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                about the Weight i don't think you need the writes(1) since there is no write, also the read part of the weight is not needed since the current_block is in the cache for the duration of the current_block execution\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0woss\n                \n                Aug 15, 2021 at 12:37\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                so the answer is converting u32 to T::BlockNumber? solved your situation but not your question...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Clark Lee\n                \n                Aug 16, 2021 at 1:27\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @ClarkLee That is true. I have solved the first of the two questions, but I would still be interested to know how T::BlockNumber can be converted into a u32. Some kind of opposite to into() perhaps? In the above 'failed code' section I added .saturated_into::<u64>(), but that isn't a recognised function (even though it was in another's code).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dancing_carrot\n                \n                Aug 16, 2021 at 7:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Is it possible to use target_block = current_block_number.checked_add(block_delay.into()); I got a compile error: u32 not implemented.....BlockNumber\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gfan\n                \n                Apr 27, 2022 at 14:42\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","441":"Will changing the name and ticker and running the resulting executable effectively start a new <blockchain>? Would there be any changes required in the network discovery functionality, like changing the port it runs on, etc.? What else do I need to fork to have a competing <blockchain> and tooling?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OpenCoderX\n                \n                Nov 9, 2021 at 2:23\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I would use the cosmos sdk that can help you with your questions scroll down and hit start tutorial v1.cosmos.network\/sdk\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0AngelDev\n                \n                Nov 10, 2021 at 0:50\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Cosmos seems interesting. Thank You, I'll go through the tutorial. Any other suggestions for such a project?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OpenCoderX\n                \n                Nov 13, 2021 at 0:09\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                not any other suggestions that I can think of as long as you know Golang and follow the cosmos tutorial you should be fine\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0AngelDev\n                \n                Nov 22, 2021 at 22:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","442":"Add a comment\n                \u00c2\u00a0|","443":"Add a comment\n                \u00c2\u00a0|","444":null,"445":"Add a comment\n                \u00c2\u00a0|","446":"thank you for your answer , did you use ganache-cil to run it in port 8545 ? because I used the genech GUI the default port is 7545 . about the abi I really just copied the abi from the TodoList.json I am not sure if it generated the correct one or not and the likewise the address takes it from the same Json file . also if the connection of the MetaMask was incorrect , It did not change when the ganache changed ? .\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Fatima Almashhor\n                \n                Aug 13, 2021 at 13:46\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I don't know whats your connection status with Metamask is. but you stated that it reflected changes so i assumed that its working fine. You can also further check by importing the first account of ganache in Metamask. Just get the private key of the first account from ganache-cli console and paste it in Metamask. Make sure that correct balance is also shown in Metamask after account is created. Its even better if you run ganache-cli with a mnemonic with a -m \"string\" flag. In that way the same accounts will be created from the mnemonic to use the same account in Metamask\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 13, 2021 at 14:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                And yes. I gave a port  flag -p 8545 while running ganache-cli. I dont think port number is the problem assuming that you have used custom RPC settings in Metamask correctly. About the ABI and Contract Address part. this needs to be valid. I am passing the ABI in the same way like yours after reading from JSON file. This seems ok since it needs a JSON interface for ABI. For address part, I entered it manually like this \"0xD90d46Ae7427933760A52FE06Ba13C443A4E720C\" after deploying the contract. And i believe this is where you are having the issue. Check the output of ABI and Address to confirm\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 13, 2021 at 14:05\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The Address in the MetaMask is the same one in the <web3> contrast right ? because I have added a \"0x8c0199C5D6e4B22A1948358F1bf48dD095Ae5300'' after the ABI . Really annoying. I do not know where the problem comes from . :\"(\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Fatima Almashhor\n                \n                Aug 14, 2021 at 9:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Edit your question and share your Metamask settings. You must be using Custom RPC\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 14, 2021 at 12:44\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 13 more comments","447":"Add a comment\n                \u00c2\u00a0|","448":"I had to look into arrays and it seems it's the best way to store and retrieve data. After modifying and simplifying my code a little, I was able to get all instances of the Book struct with a single return statement. Thanks, Peteris.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ATRUES\n                \n                Aug 17, 2021 at 4:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","449":"Add a comment\n                \u00c2\u00a0|","450":"@jagtap, thank you for replying to me. can't we uninstall without restart the container? I have installed number of versions all the versions im seeing so that i need to uninstall few installed smartcontracts.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vijay\n                \n                Aug 12, 2021 at 8:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Vijay The above process completely removes the installed chaincodes. if you don't restart the peer container, you will get all installed chaincodes names whenever you do query.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cm Jagtap\n                \n                Aug 12, 2021 at 9:47\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                thanks @jagtap, okay got it. but my question is, is it possible that can we uninstall any one particular smart contract that i dont want?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vijay\n                \n                Aug 12, 2021 at 19:51\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","451":"Thank you for your answer, your idea is interresting but it's a little different from my wish.  Actually i just want store the time once the contract is deployed and put off the sell function until the time check return true.  If i can distinguish buy and sell <transactions> in transfer function, i'll be able to implement my wish i think.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gwynbleidd\n                \n                Aug 11, 2021 at 7:20\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                to store the time at contract deploy, do a variable in the constructor.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0djd\n                \n                Aug 13, 2021 at 4:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","452":"Hi thank you. I figured it out with your code and use solana_program::sysvar::clock::Clock; is that what you meant by \"system program account\"?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Russo\n                \n                Aug 11, 2021 at 10:41\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                you can set this account in your context pub system_program: AccountInfo<'info>, and pass in systemProgram: SystemProgram.programId\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0yangli-io\n                \n                Aug 11, 2021 at 14:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","453":"Thanks Chris.  I'll add these lines to my code where they're failing at the json() and see if anything comes up.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0B L\n                \n                Aug 10, 2021 at 15:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Keep us posted. Like i said not a full answer but not exactly a comment either.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Chris Doyle\n                \n                Aug 10, 2021 at 15:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","454":null,"455":"Add a comment\n                \u00c2\u00a0|","456":null,"457":"Add a comment\n                \u00c2\u00a0|","458":"Add a comment\n                \u00c2\u00a0|","459":"Your explanation is very detailed. Thank you\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kh1em\n                \n                Aug 10, 2021 at 3:30\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","460":null,"461":"Add a comment\n                \u00c2\u00a0|","462":null,"463":"1\n            \n        \n        \n            \n                \n                Thanks for your assistance. Is that possible to get all the NFTs of a particular asset_contract_address without pagination? Because I can see there is a max limit: 50 However, I want to perform computation on each NFT of any asset_contract_address.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Haider Yaqoob\n                \n                Aug 4, 2021 at 18:26\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @HaiderYaqoob Unfortunately the pagination is limited by the Opensea API, so it's not currently possible to bypass it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Aug 4, 2021 at 23:42\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PetrHejda You ever had problem that they are not returning all assets. I\/E on their page opnsea.io you see 88 and by api call you get only 7 example address:0x6f5174b6015238acf4ffdbece7c722a5911d104a\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0PyDeveloper\n                \n                Oct 1, 2021 at 12:25\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @programerAnel It seems that the UI (88 assets) takes the data from other sources as well than just the API (7 assets). Unfortunately I don't know the other sources. It's possible that the UI includes some deleted or sold or in-order NFTs, while the API doesn't?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 1, 2021 at 14:24\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                the url above no longer points to a valid response, however removing the pagination parameter ?offset=0&limit=20 does point the a response with the first 20 items in the contract (api.opensea.io\/api\/v1\/\u00e2\u0080\u00a6). Does anyone have an updated url with correct pagination parameters\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0xiaolingxiao\n                \n                Feb 19, 2022 at 17:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","464":"Added the link test link for more clarity - github.com\/solana-labs\/solana-<web3>.js\/blob\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Srinivas Valekar\n                \n                Sep 16, 2021 at 8:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","465":"huh okay, i understand. Thanks for the quick answer!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jitterbug\n                \n                Aug 4, 2021 at 2:46\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I think you could also configure port forwarding on your router connected to you ISP for the ports needed to your machine to enable this. But you likely have a dynamic IP. So best to use DDNS setup. Do note that this can lead to downtime for that node though, and likely should not be used as a boot node, instead static IPs should be used.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Aug 4, 2021 at 19:50\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","466":"1\n            \n        \n        \n            \n                \n                When <blockchain> ledger is tampered we get the (SERVICE_UNAVAILABLE) error, if chaincode is invoked. But how can we know if <blockchain> ledger is tampered from peer service logs? Also how can we know if state data is in doubt?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kushal Mahajan\n                \n                Aug 16, 2021 at 6:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","467":"Add a comment\n                \u00c2\u00a0|","468":"Add a comment\n                \u00c2\u00a0|","469":"And it says it in the image the OP included.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0T.J. Crowder\n                \n                Aug 3, 2021 at 7:43\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","470":null,"471":"Add a comment\n                \u00c2\u00a0|","472":"Add a comment\n                \u00c2\u00a0|","473":"Hi ! Thanks for you snippet but I search to do the same in <web3>js . Can you explain how did you does that please ? I don't find the \"logic\" behind the hood... thx\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jo Le Belge\n                \n                Sep 30, 2021 at 12:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","474":"Add a comment\n                \u00c2\u00a0|","475":"Add a comment\n                \u00c2\u00a0|","476":"Add a comment\n                \u00c2\u00a0|","477":"Hi @jworthington , Yes, there are no logs in the peer , So we can say that it is not contacting the peer , but how should I resolve this?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Enthusiast Coder\n                \n                Jul 31, 2021 at 17:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I don't know your network definition, but I guess you are using the standard local test_network. So there really shouldn't be any communication issues as they are all likely local docker images and all that works out of the box for everything local. But you can ping the servers, try telnet, etc. If the network is external to the JDK machine, then ip address instead of 'localhost' or similar may be the issue. If external, firewalls and such can interfere. telnet servername port should get you a telnet console if all tcp\/ip communication is available. I'd turn debug on for the peer, also.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jworthington\n                \n                Aug 2, 2021 at 0:27\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","478":null,"479":"Add a comment\n                \u00c2\u00a0|","480":"Add a comment\n                \u00c2\u00a0|","481":"Add a comment\n                \u00c2\u00a0|","482":"Add a comment\n                \u00c2\u00a0|","483":"Okay, but still having error of same like \"Data location must be \"memory\" or \"calldata\" for return parameter in function, but none was given.\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Neel gorasiya\n                \n                Jul 30, 2021 at 14:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Neelgorasiya Can you post a screenshot of your error and code?. I've tried the mentioned solution using remix.ethereum.org and it compiles and deploys fine.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MrFrenzoid\n                \n                Jul 30, 2021 at 18:58\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This is a different error you're having now, it seems that versions of solidity under 0.8.0 doesn't use the V2 of the ABI encoder (which supports arbitrarily levels of nested arrays, in this case the struct array which interally is processed as an array of arrays). So there's two solutions for that, you can either add \"pragma experimental ABIEncoderV2;\" on top of your current code, or use solidity 0.8.X version, also, mind specifying your solidity compiler version on your truffle config, since by default it will use the truffle's version: i.prntscr.com\/w50AcCbxTeeKADGLpDlvOQ.png .\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MrFrenzoid\n                \n                Jul 31, 2021 at 9:55\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You're welcome, yet, please consider closing the question (validating the answer or else) .\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MrFrenzoid\n                \n                Aug 1, 2021 at 16:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","484":"Add a comment\n                \u00c2\u00a0|","485":null,"486":"I use solidity ^0.5.0; and it shows error contracts\/1.sol:94:9: DeclarationError: Identifier not found or not unique. IERC20 tokenContract = IERC20(_tokenContract); ^----^\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0learn code\n                \n                Jul 27, 2021 at 14:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @learncode You probably forgot to define the interface in your code. I'm getting the same error only if I omit the interface definition.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jul 27, 2021 at 14:28\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I have compiled successfully but i got 1 new error This is :Gas estimation failed you can help me  ? goerli.etherscan.io\/tx\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0learn code\n                \n                Jul 27, 2021 at 14:39\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Does this mean I can use payable(msg.sender).transfer(address(this).balance); to transfer native token inside non-native token contract? Thus I can use such function to transfer locked up native token (for some reasons) in a non-native contract, and use IERC20's transfer function to transfer non-native token?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0haxpor\n                \n                Feb 16, 2022 at 7:43\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @haxpor Exactly.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Feb 16, 2022 at 8:03\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 4 more comments","487":"Add a comment\n                \u00c2\u00a0|","488":"Add a comment\n                \u00c2\u00a0|","489":"Where the suri come from?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gfan\n                \n                Nov 26, 2021 at 1:58\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","490":"Add a comment\n                \u00c2\u00a0|","491":"Add a comment\n                \u00c2\u00a0|","492":"Add a comment\n                \u00c2\u00a0|","493":"Add a comment\n                \u00c2\u00a0|","494":"Thank you. You gave me the answer I'd rather not to hear. I better go for Soliditiy.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aslan Demir\n                \n                Jul 25, 2021 at 10:24\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","495":"Thanks for your reply I somehow missed  \"(e.g. semi-fungible tokens)\" when I read it and also for mentioning better platform for Ethereum based questions.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ZSA\n                \n                Jul 25, 2021 at 7:43\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","496":"Add a comment\n                \u00c2\u00a0|","497":"Yes, thanks for the clarification, I changed the transfer function to transferFrom with three parameters: from, to, and value and everything works! thanks again\u00f0\u009f\u0098\u008a\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yifan Lim\n                \n                Jul 21, 2021 at 14:48\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","498":"Had the same problem with Avalanche, the solution works. My only doubt is that  Avalanche uses POS not POA\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Roberto Zerbini\n                \n                Mar 5, 2022 at 18:33\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","499":"It didn't work pip3 showing  errors from bitarray while pip was showing prior to that\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0aditya\n                \n                Jul 19, 2021 at 18:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I take it you are using Windows based on the PATH issue you referred to in your original post. I am using Mac OS 10.14.5 and \"pip3 install <web3>\" worked fine.  Make sure you are running your pip3 command from the same directory that pip is installed in. On my Windows machine it is C:\\<python>39\\Scripts\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Curry\n                \n                Jul 19, 2021 at 18:48\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","500":null,"501":"Add a comment\n                \u00c2\u00a0|","502":"Thanks for answering, The problem is when Mr.X withdraws the crypto into another wallet and you check it out with <blockchain> explorer, the origin of this transaction is his own wallet on that exchange.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arash Heidari\n                \n                Jul 19, 2021 at 8:49\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The exchange may call it Mr X wallet but truthfully it's fully controlled by exchange. The exchange has full control over the wallet. They can refuse to let Mr X withdraw his crypto or for example government can seize the exchange's infrastructure and no one will be able to withdraw.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tom\n                \n                Jul 19, 2021 at 9:05\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","503":null,"504":"Why this is accepted answer? How can this issue be fixed though?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0realplay\n                \n                Dec 24, 2021 at 15:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","505":"Add a comment\n                \u00c2\u00a0|","506":null,"507":"Add a comment\n                \u00c2\u00a0|","508":"Add a comment\n                \u00c2\u00a0|","509":"Add a comment\n                \u00c2\u00a0|","510":"Add a comment\n                \u00c2\u00a0|","511":"If you use this, make sure to add approriate Documentation, because if someone changes something, it could lead to a wrong totalCredits. Anyone who has the rights to change these functions needs to know what this variable totalCredits is about.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Daniel Bauer\n                \n                Jul 16, 2021 at 9:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Of course you are correct but this solution introduces no additional risks compared to the question. Anyone can change anything in any code to make it do something different.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0falopsy\n                \n                Jul 16, 2021 at 9:04\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","512":"Add a comment\n                \u00c2\u00a0|","513":null,"514":"Add a comment\n                \u00c2\u00a0|","515":"Add a comment\n                \u00c2\u00a0|","516":"Add a comment\n                \u00c2\u00a0|","517":"is there any similar way with smart contracts?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shreyas S Bhat\n                \n                Jul 9, 2021 at 6:46\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                There is no way to check the access key permissions inside a smart contract.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mikeDOTexe\n                \n                Jul 9, 2021 at 16:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","518":"Add a comment\n                \u00c2\u00a0|","519":"this code will run on a server? I don't think so...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jim\n                \n                Oct 23, 2021 at 22:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Jim This script is gonna run in your webpage, not on your server. But you need to have your app running on localhost or on server to metamask work. More info: stackoverflow.com\/questions\/65802366\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Silvio Guedes\n                \n                Oct 25, 2021 at 15:23\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Just would like to add onto Silvio Guedes answer that window.ethereum.enable() is a deprecrated method, instead you should be using window.ethereum.request({method: 'eth_requestAccounts'}).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0IntFooBar\n                \n                Dec 29, 2021 at 19:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @IntFooBar Thanks, I already edited.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Silvio Guedes\n                \n                Dec 30, 2021 at 21:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","520":"okay i understand the overflow and underflow but I want know that what the condition apply in assert like in require that the owner account token is always gather then the amount if it's false then it will give the error what condition actually says I just want to know it?what the meaning of that condition?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yadav Akash\n                \n                Jul 8, 2021 at 12:46\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                assert(tokenBalance[_to] + _amount >= tokenBalance[_to]); This checks whether the tokenBalance[_to] value becomes lower (i.e. overflows) when you add the _amount. If it does overflow (the value is not larger or equal), the assert() condition results in false, so it throws an exception.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jul 8, 2021 at 14:41\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                and what about second assert condition?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yadav Akash\n                \n                Jul 9, 2021 at 11:55\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It's pretty much the same. assert(tokenBalance[msg.sender] - _amount <= tokenBalance[msg.sender]) checks whether the tokenBalance[msg.sender] becomes higher (i.e. underflows) when you subtract the _amount. If it does underflow (the value is not smaller or equal), the assert() condition results in false, so it throws an exception.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jul 9, 2021 at 12:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","521":"18\n            \n        \n        \n            \n                \n                And careful to only use three quotation marks, I had four by accident and the error came up\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Oregano\n                \n                Dec 9, 2014 at 23:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","522":"Add a comment\n                \u00c2\u00a0|","523":null,"524":"Hello, Thanks for your reply. My version in my pallet is the same as that defined in my node. And this was the tutorial i followed  substrate.dev\/docs\/en\/tutorials\/create-a-pallet  Did everthing the tutorial asked me too\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dharjeezy\n                \n                Jul 11, 2021 at 7:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                line 295 Module => Pallet\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0fbielejec\n                \n                Jul 11, 2021 at 7:30\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","525":"Add a comment\n                \u00c2\u00a0|","526":"Add a comment\n                \u00c2\u00a0|","527":"Add a comment\n                \u00c2\u00a0|","528":"Add a comment\n                \u00c2\u00a0|","529":null,"530":"Add a comment\n                \u00c2\u00a0|","531":"Add a comment\n                \u00c2\u00a0|","532":"Add a comment\n                \u00c2\u00a0|","533":"Can you please share a link to the contract methods and the types?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Scott\n                \n                Jan 8, 2022 at 5:12\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","534":"1\n            \n        \n        \n            \n                \n                giters.com\/Orange-Wallet\/wallet-connect-dart It looks like here we have Dart implementation.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Volodymyr Bilovus\n                \n                Nov 23, 2021 at 13:10\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @VolodymyrBilovus sorry, I believe that implementation is building a wallet app themselves, not for dapps that want to connect to a wallet.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0josue.0\n                \n                Nov 30, 2021 at 16:35\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                There is now walletconnect_dart package which also supports connecting to Wallets and sending requests to the Wallets.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tom\n                \n                May 12, 2022 at 23:04\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","535":null,"536":"Add a comment\n                \u00c2\u00a0|","537":"Add a comment\n                \u00c2\u00a0|","538":"I think this is going to work but my program bumps into transaction issue related to the gas and gasPrice, I'll try to open a new question when I'm free, thank you very much for lending your hand!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0supdev\n                \n                Jul 10, 2021 at 15:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I am facing the same problem. I am receiving the error of gasPrice miscalculatian too. Even when i follow the same structure as best as I can. Did you fixed it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tolstenko\n                \n                Sep 16, 2021 at 10:50\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Tolstenko gasPrice miscalculation usually points to a general error, such as \"something is wrong\", and it can be caused by a slight detail different from the working answer. Please ask a separate question with steps to reproduce the issue.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 16, 2021 at 12:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","539":"Add a comment\n                \u00c2\u00a0|","540":null,"541":"Add a comment\n                \u00c2\u00a0|","542":null,"543":"Add a comment\n                \u00c2\u00a0|","544":"Add a comment\n                \u00c2\u00a0|","545":null,"546":null,"547":"Add a comment\n                \u00c2\u00a0|","548":null,"549":"Permalinks for serialize github.com\/hashblock\/solana-cli-program-template\/blob\/\u00e2\u0080\u00a6 and deserialize github.com\/hashblock\/solana-cli-program-template\/blob\/\u00e2\u0080\u00a6  This seems painfully manual... how can I invoke borshdeserialize in a way where it 'just works' and rehydrates my rust type from the u8 vec? Still reading \/ experimenting but haven't found prior art that fixes this either\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0viraj_os\n                \n                Nov 21, 2021 at 4:25\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","550":"Add a comment\n                \u00c2\u00a0|","551":"Add a comment\n                \u00c2\u00a0|","552":"Thank you for your help!  What is the best way to track when a random number is returned?  I was thinking I could check on an interval or a fixed amount of time like 2 minutes.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Holland Pleskac\n                \n                Jun 24, 2021 at 1:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                A great way is to emit an event whenever you request a random number, and have a function read the chain for the event. Otherwise, a \"simple\" way to do it is to have your program sleep for maybe 60 seconds.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Jun 24, 2021 at 9:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Do you know about how long the response takes on polygon? Thinking about building a game that requires some randomness, but if the response is too long, it probably wouldn't be playable\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lucas Rahn\n                \n                Mar 8, 2022 at 19:23\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Usually within a few blocks.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Mar 8, 2022 at 19:30\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","553":"1\n            \n        \n        \n            \n                \n                That worked for me.  Thank you so much for your help!  I just checked out their documentation and the requestRandomness() function has been updated.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Holland Pleskac\n                \n                Jun 23, 2021 at 17:12\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","554":"Add a comment\n                \u00c2\u00a0|","555":"Add a comment\n                \u00c2\u00a0|","556":"Add a comment\n                \u00c2\u00a0|","557":"Add a comment\n                \u00c2\u00a0|","558":null,"559":null,"560":"Add a comment\n                \u00c2\u00a0|","561":"Add a comment\n                \u00c2\u00a0|","562":"From the example I think it is migration hash attachment to signature but for me I prefer first transaction must be signature constraint. I mean every transaction are signature constraint    When I issue transaction on local it's work  but on production env it's doesn't work for me\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Siridet Sukkana\n                \n                Jun 19, 2021 at 1:15\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for your answer. I found my network map config version is V3 so it's can't default signature constraints. And then I try to use V4 it's work\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Siridet Sukkana\n                \n                Jun 19, 2021 at 10:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","563":"Add a comment\n                \u00c2\u00a0|","564":"Thank you very much for your valuable reply, I am still trying to create a <blockchain> network in my AWS Port (on behalf of my employer ). Now I changed the network to <hyperledger> Fabric, and trying to create a <blockchain> on followin tutorial.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ragesh S\n                \n                Aug 12, 2021 at 4:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please refer to the tutorial link - track-and-trace-<blockchain>.workshop.aws  Now I am stuck on the ( Set up a Fabric client > Configure client instance > Enroll Fabric admin  ) because in this section They are trying to download the '.pem' file from the S3 bucket, but this tutorial was doesn't mention the S3 Bucket in the perquisites, then how this works? I mean how was this '.pem' file created in the s3 bucket?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ragesh S\n                \n                Aug 12, 2021 at 4:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","565":null,"566":"Add a comment\n                \u00c2\u00a0|","567":"Add a comment\n                \u00c2\u00a0|","568":null,"569":"Add a comment\n                \u00c2\u00a0|","570":null,"571":"But if there are so many organizations then there will be limitations to be part of each channel.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ajit yadav\n                \n                Jun 11, 2021 at 12:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","572":"Thanks again Petr! I was pretty sure there was a call mechanism that keeps dApp reads free. I guess I'm curious now how a DDOS attack or just generally high read application is treated...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0webish\n                \n                Jun 9, 2021 at 12:59\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                DDOS protection is usually implemented on the JSON-RPC provider. They usually have a public API acting as a \"middleware\" before the actual request to the Tron daemon... So I can imagine there's protection on a router level, as well as on the HTTP server (e.g. nginx) for their public API \"middleware\". Most providers also use rate limiting of how many requests per sec\/min can each (valid) API key request... Only if the request is not stopped by the previous steps, the API \"middleware\" sends the eth_* request to the Tron daemon running on their (other) server, and proxies back the response.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jun 9, 2021 at 13:10\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","573":"Add a comment\n                \u00c2\u00a0|","574":"Add a comment\n                \u00c2\u00a0|","575":null,"576":"Add a comment\n                \u00c2\u00a0|","577":"Add a comment\n                \u00c2\u00a0|","578":null,"579":"Add a comment\n                \u00c2\u00a0|","580":"1\n            \n        \n        \n            \n                \n                not true, don't need js at all, <python> <web3> is totally fine\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0CodeNoob\n                \n                Jul 27, 2021 at 18:35\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","581":"Add a comment\n                \u00c2\u00a0|","582":"Add a comment\n                \u00c2\u00a0|","583":null,"584":"Add a comment\n                \u00c2\u00a0|","585":"Add a comment\n                \u00c2\u00a0|","586":"Add a comment\n                \u00c2\u00a0|","587":null,"588":"Thanks. My follow up question is, am I going to get whatever block is on top, or it would wait for the next block and return it as latest? The reason for this question is that I want to get the very latest block after the code is run, not whatever is on top as at when the code is run.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jonathan Otokun\n                \n                Jun 5, 2021 at 10:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                When you execute <web3>.eth.getBlock(\"latest\"), it returns the current latest mined block (e.g. block #100), and doesn't wait for a new block to be mined... If you run it again when there's a new block (e.g. #101), then it returns the block #101 as \"latest\".\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jun 5, 2021 at 10:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I added a follow up question below so I can format it properly.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jonathan Otokun\n                \n                Jun 5, 2021 at 11:24\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You can use a WSS provider (instead of a HTTP provider, usually passed in the new <web3>() constructor) and then subscribe to the \"newBlockHeaders\" WSS messages. This will send you a message each time when there's a new block, and you can use the provided block.number (from the message) to request the specific block (or simply the \"latest\")... A workaround with a HTTP provider would be to poll the <web3>.eth.getBlock(\"latest\") (e.g. each second using setTimeout()) but that might hit the rate limits of your provider.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jun 5, 2021 at 11:26\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @DavidJay Ethers.js uses the latest block as default. So you can pass 0 params to the getBlock() method and then read its timestamp property: const latestBlockTimestamp = (await provider.getBlock()).timestamp;\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 18, 2022 at 9:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","589":null,"590":"You totally right! In fact, when I went to sleep, what you explained came to mind. I didn't expose the address but if I did, I would see that there is no way to persist information that is not allocated in the <blockchain>. My confusion, sorry! Thanks for your comment, I really appreciate it! Thanks and see you!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0nastari\n                \n                Jun 4, 2021 at 13:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","591":null,"592":null,"593":"Add a comment\n                \u00c2\u00a0|","594":"Add a comment\n                \u00c2\u00a0|","595":"Add a comment\n                \u00c2\u00a0|","596":"Add a comment\n                \u00c2\u00a0|","597":"Add a comment\n                \u00c2\u00a0|","598":null,"599":"In all the samples, I see only evolvabletokens getting created, but in my case I need a fixed one, that never evolves. How do I achieve that.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0laplace\n                \n                Jun 1, 2021 at 4:03\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi @laplace , did you get the solution, like fixed one?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Benjamin\n                \n                Mar 14, 2022 at 12:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","600":null,"601":null,"602":"Add a comment\n                \u00c2\u00a0|","603":null,"604":"Add a comment\n                \u00c2\u00a0|","605":"Add a comment\n                \u00c2\u00a0|","606":"Add a comment\n                \u00c2\u00a0|","607":"Thanks for sharing this. \u00f0\u009f\u00a4\u008d\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dick Larsson\n                \n                Feb 23, 2022 at 20:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @DickLarsson I aim to please.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MetaStack\n                \n                Feb 24, 2022 at 17:56\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","608":"Add a comment\n                \u00c2\u00a0|","609":"How to pass address as an arg in the javascript file?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Azeem Lodhi\n                \n                May 26, 2021 at 10:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                is it passed like \"0x123123123123123123123123123\" like this ? @Mikko Ohtamaa\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Azeem Lodhi\n                \n                May 26, 2021 at 10:57\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes. You are correct. You need to pay attention to hex letter capitalisation because it is the source of checksum in Ethereum.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                May 26, 2021 at 11:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                How to interact with the contract deployed on BSC using truffle? @Mikko Ohtamaa\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Azeem Lodhi\n                \n                May 26, 2021 at 11:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                That is an another question. I suggest you look up tutorials on this topic.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                May 26, 2021 at 11:39\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","610":null,"611":null,"612":"Add a comment\n                \u00c2\u00a0|","613":null,"614":"Add a comment\n                \u00c2\u00a0|","615":"Add a comment\n                \u00c2\u00a0|","616":"Add a comment\n                \u00c2\u00a0|","617":"Add a comment\n                \u00c2\u00a0|","618":"Add a comment\n                \u00c2\u00a0|","619":"Add a comment\n                \u00c2\u00a0|","620":"Add a comment\n                \u00c2\u00a0|","621":"in case of own private Corda network, considering HSM in cloud. what happens if in future the keys have to be regenerated? how does that affect the identity of the node?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user3760894\n                \n                May 24, 2021 at 2:52\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","622":"Add a comment\n                \u00c2\u00a0|","623":"Add a comment\n                \u00c2\u00a0|","624":null,"625":null,"626":"Add a comment\n                \u00c2\u00a0|","627":"Please @AngelDev, check me as correct the answer. I'm really excited because it's my first time on Stackoverflow :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Fernando L\u00c3\u00b3pez\n                \n                Jun 8, 2021 at 18:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","628":"Add a comment\n                \u00c2\u00a0|","629":"Thank you for the answer. But especially during the development process, I always need to request ABI from solidity developers and update my project. I think If I access to ABI by address of the smart contract I will save alot of time. Do you any suggestions for this?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OguzKaanAkyalcin\n                \n                May 20, 2021 at 11:22\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Unless you can get the source code by address, it's not technically possible to generate the json from just address. It needs to be generated from the contract source code... \"If I access to ABI by address of the smart contract\" - It depends on your context, whether the contract authors have published their source code and whether the set (of source codes) is accessible in some searchable format (by address).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 20, 2021 at 11:47\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","630":"Are the ERC721 contracts mentioned here only useful if the contract owner is minting tokens for certain addresses? I'm actually looking for a structure where users can mint their own tokens without the central figure. Is there any security flaws if I were to simply remove the access control for the mint function and make it public? I'm just trying to make sense of the reason for the access limitation because I'm not sure if it's as important as the access control for transferring or burning a token.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kevvv\n                \n                May 19, 2021 at 23:30\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                If you want to open the minting feature, you can remove the authorization from the mint() function. From security standpoint, I can only think of higher probability of reaching the ID max value (if you chose to make it uint8 or some \"small\" datatype) and possible integer overflow (if you don't prevent it either using Solidity 0.8+, or checking with require\/assert). Otherwise, it's same level of security as if you only had authorized addresses, because they should be treated in the code as untrusted as well (e.g. don't trust but verify that they return some value if they're a contract).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 20, 2021 at 8:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Is it a more common approach to deploy a new contract when the URL is different (to signify a different creature as opposed to just a different variant) or is it better to re-use the old contract and keep adding different URLs for different things to the same contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kernel James\n                \n                Aug 2, 2022 at 1:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @KernelJames A general practice is one contract for one collection. So if you have a collection of \"cat NFTs\", you might want to deploy a new contract for another collection of \"dog NFTs\". But if your overal aim is to create a collection of \"animal NFTs\", they you might want to group all these tokens under the one collection.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Aug 2, 2022 at 6:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","631":null,"632":"You might want to consider formatting your answer in a more clear and concise manner, @AlirezaO.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DSDmark\n                \n                Dec 23, 2022 at 12:34\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","633":"Add a comment\n                \u00c2\u00a0|","634":null,"635":"1\n            \n        \n        \n            \n                \n                A clever approach for building the tree, thanks! However, how can I use CRUD operations in this case to modify my structure? let's say I would receive an update request with a payload: {\"key1\": \"newVal1\"} how can I update the value of the node in the tree?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0basilisk\n                \n                May 20, 2021 at 9:56\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                The proposed solution also does not consider nested objects or a list of nested objects, since the list will be directly converted to a string using str()\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0basilisk\n                \n                May 20, 2021 at 12:40\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","636":"Add a comment\n                \u00c2\u00a0|","637":"Add a comment\n                \u00c2\u00a0|","638":"Add a comment\n                \u00c2\u00a0|","639":"Add a comment\n                \u00c2\u00a0|","640":null,"641":null,"642":"Add a comment\n                \u00c2\u00a0|","643":"1\n            \n        \n        \n            \n                \n                I think this is the quickest I've ever gotten an accurate answer from Stack Overflow...So quick that I can't mark this answer as correct for another 8 minutes.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Adam\n                \n                May 11, 2021 at 0:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                here's a public query with the data: luabase.com\/run\/662c231eda384319b3a73478e63de23e\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0howMuchCheeseIsTooMuchCheese\n                \n                Jul 28, 2022 at 22:44\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","644":"Add a comment\n                \u00c2\u00a0|","645":"While this \"works\", doesn't really explain the error, especially because chain.wax.io resolves and has json.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0swhitman\n                \n                Nov 21, 2021 at 23:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                chain.wax.io has hotlink protection enabled since its used for WAX's first-party products, other sites trying to use the endpoint will probably get a Cloudflare error page.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0includenull\n                \n                Nov 23, 2021 at 0:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You gotta love it when the quickstart tutorial points you to something that causes and error.  With not explanation.  Thank you for this workaround.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0durbnpoisn\n                \n                May 7, 2022 at 14:51\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @durbnpoisn It did used to work, but that endpoint was made less public since block producers run them now. The dev docs are maintained on github now, there is a discussion of how to update the docs. Should it show just one endpoint, or show all of the options?  Best practice is to use many endpoints to avoid issues with downtimes, what's the point of a decentralized <blockchain> if every project uses the same endpoint?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0includenull\n                \n                May 8, 2022 at 19:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","646":"Is there a sample to demonstrade run a localhost DLT and an SSI application?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0allenchen\n                \n                Sep 4, 2021 at 2:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","647":"Add a comment\n                \u00c2\u00a0|","648":"Thank you so much Petr..I fixed all those typos..However ran into some other issues.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0<blockchain> Learner\n                \n                May 10, 2021 at 8:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                TypeError: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.  *** This is the line of code, balances[_toAddress] +=_noOfTokens;     balances[msg.sender] -= _noOfTokens;\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0<blockchain> Learner\n                \n                May 10, 2021 at 8:10\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Try fixing the other issues as well. Sometimes the error message tells you what you need to do, such as \"it's declared as view but it's not doing just view\" :-) If you run into a dead end, you can ask a separate question showing what you've tried so far, the minimal reproducible code example, error message, etc. You can find more tips how to ask a good question in the FAQ and help center articles.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 10, 2021 at 8:12\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Sure Peter. Let me post a separate question with the code snippets. Thanks so much !\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0<blockchain> Learner\n                \n                May 10, 2021 at 8:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","649":"Add a comment\n                \u00c2\u00a0|","650":"At the time I wrote the question, each 1000 result page of CovalentHQ API was giving timeout error if there were too many holders. I haven't re-tested now, because I lost interest in this project.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0tonalt\n                \n                Oct 22, 2021 at 20:52\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","651":"Add a comment\n                \u00c2\u00a0|","652":"1\n            \n        \n        \n            \n                \n                The snippet in my answer reacts to your original question about the error when you're sending BNB to a contract. It allows you to send BNB to the contract, so you (or any user) can later call the sell() function and the contract has now BNB to send back to the user. It doesn't return any tokens... If you want to buy tokens, you need to call the buy() function directly or from within the receive() function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 14:02\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @EvertonFigueiredo I updated my answer with example of calling the buy() function from within the receive() ... Can you specify what do you mean by \"doesn't work\"? I was able to successfully send ETH (should be same for BNB) in Remix and didn't run into any issue: 1) Commented out the redefinition of Approval and Transfer events in your ERC20Basic (they are already defined in the IERC20) and deployed DEX. 2) The deployment of DEX gave 100 * 10 ** 18 tokens to my deployer address. 3) Then I sent 100 wei to the contract from the same (deployer) address and received 100 tokens.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 14:32\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @EvertonFigueiredo I updated the answer with the code. Compiled with Solidity 0.8.1\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 14:46\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                I was putting buy () on receive () from within ERC20Basic. This must have been the error.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Everton Figueiredo\n                \n                May 7, 2021 at 14:47\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                That makes sense. The user is interacting with the DEX contract - not with the ERC20Basic when they are sending a transaction. So the DEX contract needs to implement the recieve() function. Glad it works now.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 14:49\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 11 more comments","653":"Thanks for your reply! I tried setting the env. variable COMPOSE_PROJECT_NAME to net. So when I run the test network for the first time, the network created in the name \"net_test\". But after I take the backup, I have removed the network \"net_test\" and re-start the network with backed by crypto materials (with the docker-compose file where I mentioned the networkmode as net), it is creating the network in the name \"docker_test\".\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 7:44\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                you need set COMPOSE_PROJECT_NAME when you restore your fabric network,I mean you better set COMPOSE_PROJECT_NAME every time when you start your fabric network\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Li Xian\n                \n                May 10, 2021 at 8:03\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I have mentioned COMPOSE_PROJECT_NAME as net when starting the restore network. But still the network name is named as docker_test instead of net_test and the Chaincode invoke and query are failing\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 9:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Sure, please find the attached peer log in the github - github.com\/SoundaryaA3098\/k8s_problem_statement\/blob\/master\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 9:35\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please find the docker-compose.yaml under github.com\/SoundaryaA3098\/k8s_problem_statement\/blob\/master\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 9:44\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","654":"Add a comment\n                \u00c2\u00a0|","655":"Add a comment\n                \u00c2\u00a0|","656":"Still getting this error:  invalid database url %spostgresql:\/\/node1:Password@chainlink-kovan.cjevl5icfjsu.us-east-1.rds.amazonaws.com:5432\/chainlink-kovan\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jaxcoder\n                \n                May 7, 2021 at 14:58\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                please try to change the DNS to the public IP, so change \"chainlink-kovan.cjevl5icfjsu.us-east-1.rds.amazonaws.com\" to the public IP of your server (given you from AWS) like 85.80.178.186 .\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rob-LinkRiver\n                \n                May 7, 2021 at 17:54\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                That didn't work either. I am getting the exact same error.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jaxcoder\n                \n                May 7, 2021 at 19:58\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Unable to initialize ORM: parse \"postgresql:\/\/node1:password\": invalid port \":Pharo0nKovan\" after host unable to open postgresql:\/\/node1:password@76.18.209.65:5432\/chainlink-kovan for gorm DB\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jaxcoder\n                \n                May 7, 2021 at 20:36\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","657":"Add a comment\n                \u00c2\u00a0|","658":"In this example that you gave, would this code also accept BNB?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Everton Figueiredo\n                \n                May 6, 2021 at 22:53\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @EvertonFigueiredo On the BSC network (where BNB is the native token) - yes. On the Ethereum network (where BNB is an ERC-20 token) - no.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 6, 2021 at 23:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Warning! Error encountered during contract execution [out of gas] , When I try to send to my contract this error appears, do you know how to tell me why?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Everton Figueiredo\n                \n                May 7, 2021 at 12:45\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @EvertonFigueiredo It's a very general error message and it could be caused by anything from different implementation of your contract to incorrect use (maybe you're trying to buy tokens from a contract that doesn't have them? or you're sending incorrect wei amount to the buy() function?). Please ask a separate question where you provide a minimal reproducible example, so that others are able to get to the very same error as you by following your description.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 12:56\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Could you have a look? stackoverflow.com\/questions\/67435585\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Everton Figueiredo\n                \n                May 7, 2021 at 13:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","659":"Add a comment\n                \u00c2\u00a0|","660":"Add a comment\n                \u00c2\u00a0|","661":"Add a comment\n                \u00c2\u00a0|","662":"2\n            \n        \n        \n            \n                \n                Thank you~. To be honest I don't understand the smart contract logics well now. I solved my problem like one time request an approve outside of the contract and request a transaction to spend user token (in allowances).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0sung chul\n                \n                May 6, 2021 at 5:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Seong how did you do it? Can you a example code?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Crazy\n                \n                Nov 3, 2021 at 9:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @seongcheolryu  how did you do it? Can you a example code?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0YNX\n                \n                Jan 6, 2022 at 12:25\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","663":"Add a comment\n                \u00c2\u00a0|","664":null,"665":"Add a comment\n                \u00c2\u00a0|","666":"Add a comment\n                \u00c2\u00a0|","667":"Add a comment\n                \u00c2\u00a0|","668":"Thank you, it works! There is another problem, I now have another invalid opcode DUP. Is it good to simply use the latest chain fork? How do you get these info? My Google didn't come up with any useful info (i.e. what's the release\/version roadmap, what is the mainnet fork currently is). Sorry if I ask stupid questions, I am new\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luke Vo\n                \n                May 3, 2021 at 15:19\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Not sure if you mean the original DUP or DUP<n>. If you mean the newer DUP<n>, it was added in the Berlin hardfork. The original I'm not sure ... How I got to the Istanbul fork: I googled \"selfbalance ethereum opcode\" and found the EIP-1884. Then I searched for \"EIP-1884 hardfork\" because I learned somewhere earlier that new opcodes get implemented mostly in hardforks... But it's a good idea to include all the forks first (not just the latest one), and experiment later. The forks define a diff of added\/removed features - not the whole sum of them, so you need to include all forks.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 3, 2021 at 15:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks you are correct, I have just tested it. I added Berlin hardfork to genesis but still have the problem, so I can confirm the forks are not the whole sum of them. I am using this code to determine what forks there are for now.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luke Vo\n                \n                May 3, 2021 at 15:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It looks like something's wrong with my Solc compiler because I have the same problem even on Ropsten testnet. I think there is no DUP opcode, just DUP1 to DUP16.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luke Vo\n                \n                May 3, 2021 at 21:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","669":null,"670":"Already tried, doesn't change anything, the transaction gets reverted anyway\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Carlo Parisi\n                \n                May 2, 2021 at 19:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @CarloParisi Transaction can revert for a number of reasons, including a failing require() statement inside the funciton body (or the function dependencies such as other functions and external contracts that it calls). My snippet solves one of the reasons and that is calculating the correct function signature. Unfortunately solving all possible reasons why a transaction can fail is usually out of scope for a StackOverflow answer, but I suggest you to debug the execution trace, look for require and assert statements that might cause the tx to revert.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 2, 2021 at 19:40\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm looking at the VM trace, but it is assembly and it is quite hard to understand, following the called function I should pass all the require\/modifiers Is there something easier than the VM trace?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Carlo Parisi\n                \n                May 2, 2021 at 20:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                My usual approach is to read the contract source code and look for require and assert statements, including in all functions (possibly in other contracts) that it calls. If you don't have the target contract(s) source code, then yea, it's going to be a bit complicated and you'll need to use VM trace or a similar tool (my favorite is Panoramix, included in BscScan).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 2, 2021 at 20:10\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","671":"Add a comment\n                \u00c2\u00a0|","672":"Add a comment\n                \u00c2\u00a0|","673":"Add a comment\n                \u00c2\u00a0|","674":"Add a comment\n                \u00c2\u00a0|","675":null,"676":"Add a comment\n                \u00c2\u00a0|","677":"Add a comment\n                \u00c2\u00a0|","678":"3\n            \n        \n        \n            \n                \n                I've used _transferFrom(seller, msg.sender, _tokenId); insted of  _transfer(seller, msg.sender, _tokenId); because I'm using ERC721Full but it worked nicely. Thank you!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0acampana\n                \n                May 7, 2021 at 15:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                What is the line that starts with \"mapping\" doing?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ianwt\n                \n                Apr 21, 2022 at 17:59\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @ianwt A mapping is a dictionary-like datatype. You can easily retrieve a value by its key, but you cannot retrieve a key by a value. Note that the keys have to be unique, the values don't... In the example above, the key is the token ID, and the value is the token price. So in this case its easy to query a token price by its ID.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 21, 2022 at 21:26\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Got it, thank you! what is the value of this mapping when the contract is initially used to mint an NFT? Is it 0? That is, does allowBuy have to be explicitly called with a positive value before the NFT is purchasable? Thanks again\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ianwt\n                \n                Apr 22, 2022 at 1:34\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @ianwt Exactly. Default value for each key is 0. And because the buy() function requires price > 0 (i.e. non-default value), you effectively need to invoke allowBuy() before the NFT is purchasable.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 22, 2022 at 9:11\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","679":"Add a comment\n                \u00c2\u00a0|","680":null,"681":"Add a comment\n                \u00c2\u00a0|","682":"Add a comment\n                \u00c2\u00a0|","683":"You helped me to understood how it works! Thank you so much !!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0LeClient\n                \n                Apr 28, 2021 at 13:22\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","684":"Add a comment\n                \u00c2\u00a0|","685":"Ah ok, I understand thank you! It really makes sense to only replicate the blocks and not single <transactions>, that can easily send again by the application in case it does not get a validation answer from the peers.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Strohhut\n                \n                Apr 28, 2021 at 17:33\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for your answer, but I have a question: when a node is follower, it only received and save block from leader, leader is only node can create block?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tr\u00e1\u00ba\u00a7n Minh To\u00c3\u00a0n\n                \n                Jul 26, 2022 at 1:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                That is correct, only the leader in Raft creates the block, but the block is sent not-signed and each follower signs the block itself\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0yacovm\n                \n                Jul 26, 2022 at 10:48\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","686":null,"687":"Thanks for your reply. I will be thankful if you deliver a sample smart contract that gets the above candlestick data.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Crypto Miner\n                \n                Apr 27, 2021 at 9:34\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @CryptoMiner Unfortunately I don't know any. But if you DYOR, I'm sure you'll find some that do exactly this or at least some very similar thing. There are providers that provide prices of BNB\/USD to the Chainlink oracles, so there might be also consumers that consume these data.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 27, 2021 at 9:39\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","688":"Add a comment\n                \u00c2\u00a0|","689":"In terms of creating a dice game, what if we use future block to determine the winning number. Player will place the bet in current block and lock and with a second contract we are going to determine the winner. Would it be possible in this way?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wowocado\n                \n                Apr 27, 2021 at 19:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                If the possible winnings are big enough, the player can keep betting with the parameters of the possible next block that they are going to mine (until they in fact mine it with the expected parameters). The need for guessing correct block.timestamp that they are going to mine with a 1 second accuracy lowers the odds significantly, and it's plausible for most real-life use cases. But to answer the original question - it's still determinable (and not truly random)... Edit: The dishonest miner could also place multiple bets from multiple addresses in one block to higher their chances.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 27, 2021 at 20:27\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thank you for the great answer. I really appreciate it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wowocado\n                \n                Apr 27, 2021 at 20:41\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","690":"Add a comment\n                \u00c2\u00a0|","691":null,"692":"Thank you Petr, I'll try this out! I already marked your answer as correct one, because it must be, it's very logical!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Apr 25, 2021 at 22:05\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","693":"Add a comment\n                \u00c2\u00a0|","694":null,"695":"Add a comment\n                \u00c2\u00a0|","696":"Add a comment\n                \u00c2\u00a0|","697":"Add a comment\n                \u00c2\u00a0|","698":"Add a comment\n                \u00c2\u00a0|","699":null,"700":"Add a comment\n                \u00c2\u00a0|","701":"Add a comment\n                \u00c2\u00a0|","702":null,"703":null,"704":null,"705":null,"706":null,"707":"Add a comment\n                \u00c2\u00a0|","708":null,"709":"1\n            \n        \n        \n            \n                \n                Thank you Mikko, now I understand!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Apr 17, 2021 at 18:07\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","710":"what mean this my friend\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zoubair ELhattab\n                \n                Apr 15, 2021 at 11:19\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @ZoubairELhattab It means that you cannot import the address programatically - you need a user to import it manually into MetaMask.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 15, 2021 at 11:20\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                sorry if i bother , there are another solution or another application similar metamask can do this\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zoubair ELhattab\n                \n                Apr 15, 2021 at 11:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Not that I'm aware of. But I'd recommend editing your question and stating what goal are you trying to achieve (possibly user experience - so that it's easy for them to vote) and hopefully someone else will give a better answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 15, 2021 at 11:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","711":"I know how to code it, but my system got err.. does it has any conditions before use it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OYU\n                \n                Apr 13, 2021 at 14:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                check if both the chaincodes are installed on the same endorsing peer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aditya Joshi\n                \n                Apr 13, 2021 at 14:05\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                sorry but do you mean both chaincodes should install on the same peer? I installed sell's on the sell peers, and dealer do so\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OYU\n                \n                Apr 13, 2021 at 14:30\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yes, both chaincodes must be installed on each endorsing peer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aditya Joshi\n                \n                Apr 13, 2021 at 15:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Sorry but could you give me a further instruction, plz. My English is not very good.. I mean, I have installed ORG3's chaincode on ORG3's peer, and ORG2's chaincode on ORG2's peer, do you mean i should install ORG2's chaincode ont ORG3's peer, too?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OYU\n                \n                Apr 14, 2021 at 1:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","712":"Add a comment\n                \u00c2\u00a0|","713":null,"714":"Add a comment\n                \u00c2\u00a0|","715":"Add a comment\n                \u00c2\u00a0|","716":"Thank you! I have seen all the other solutions but I need especially the thing with <blockchain> to show it in a PoC\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tristan S\n                \n                Apr 11, 2021 at 13:51\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","717":"Add a comment\n                \u00c2\u00a0|","718":"Add a comment\n                \u00c2\u00a0|","719":"Add a comment\n                \u00c2\u00a0|","720":"Add a comment\n                \u00c2\u00a0|","721":"I have read something about that, but broadcaster is not supposed to work on the entire internet. (or so I have read) It is only for specific networks or local networks. How does that work then?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0l4x3 l4x3\n                \n                Apr 10, 2021 at 12:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @l4x3l4x3 This is more of an networking topic than software development, so you might get better and more detailed answers at serverfault.com... But basically it's not broadcasting on 255.255.255.0 - it's rather building a map of peers that you can \"broadcast\" to using a set of individual calls (so this way they learn about your presence). You can get their list by connecting to the known list of peers and recursively getting addresses of their known peers, and their known peers...  See this SO answer and its comments for more details.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 10, 2021 at 12:16\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","722":"Add a comment\n                \u00c2\u00a0|","723":"Add a comment\n                \u00c2\u00a0|","724":null,"725":"1\n            \n        \n        \n            \n                \n                @Discoradian Thanks for answering - very much appreciate it! I should have phrased my question differently cause I'm actually very familiar with IPFS, how adding\/removing files changes folder Hashes, CID's, etc. What I was trying to understand is - again, if \u00e2\u0080\u009cI\u00e2\u0080\u0099m the only one that\u00e2\u0080\u0099s allowed to make further modifications\u00e2\u0080\u009d to a folder I uploaded to IPFS, or \u00e2\u0080\u009ccan anyone out there on IPFS do that as well?\u00e2\u0080\u009d It\u00e2\u0080\u0099s strictly a question re permissions, not practicality or mutability. I updated my question to give the full context of what exactly I\u00e2\u0080\u0099m trying to achieve - please check it out!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Apr 10, 2021 at 15:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Sirab33 I've read your updated question. So you understand when the file is updated, the dir CID changes, you update that in Solidity, great. So wouldn't the question be more \"who can update the tokenuri method?\" as anyone could download your IPFS files, change them, and upload them with a new CID, as IPFS is completely open. However your tokenuri method I'm assuming has permission involved, and that's really the content that's being pointed to. So the real problem to address is \"Who can update the TokenURI?\" and if that's just you, sounds like you're all set.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Discordian\n                \n                Apr 10, 2021 at 16:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Discoradian Thanks for responding again. To answer your question: \"wouldn't the question be more 'who can update the tokenuri method?'\" The answer is \"No. My question is and remains what it always was, the gist of it being: can anyone update any directory on IPFS?\"   The reason I updated my original question was to provide you with further context re why I asked my original question, but I never changed my original question. I actually literally ended my updated question by saying \u00e2\u0080\u009cI FIRST want to go back to my original question\/concern.\u00e2\u0080\u009d   Perhaps you glossed over that.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Apr 10, 2021 at 19:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Either way, you did answer my original question now by writing that \"IPFS is completely open\" - which I actually find really surprising, if not downright crazy.  Cause if anyone out there can upload anything into any existing IPFS directory - even one they didn\u00e2\u0080\u0099t create, well that seems like an invitation for chaos.  I think I\u00e2\u0080\u0099ll have to dig deeper into that. Anyway, thanks again!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Apr 10, 2021 at 19:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Sirab33 I'm not sure where the confusion stems from but the data is immutable, so nobody can add anything into an existing IPFS directory, it'd always be a copy, a different hash, for different data.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Discordian\n                \n                Apr 10, 2021 at 21:06\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","726":"Add a comment\n                \u00c2\u00a0|","727":null,"728":"There isn't any log or warning, that's the issue! The only way to reproduce it, is the following: create an initiating flow which sends some data and waits to receive some other data. Create a receiver flow which receive this data and sends back an answer, and then waits to receive some other data, which we know it will never comes (we intentionally create the bug). At this point the initiator has again the control of the flow, and he completes, and calls receiverSession.close\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Federico Bellini\n                \n                Apr 15, 2021 at 14:50\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The problem is that no warnings or exceptions are thrown by the recevierSession.close method, because we actually have a bug in our code (one receive call is not answered in the responder flow), and we don't know it! It looks everything is working perfectly, but it's not\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Federico Bellini\n                \n                Apr 15, 2021 at 14:52\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                It would be nice for a framework like Corda, to be 100% sure that when the initiator flow completes, also all the responders have completed successfully, and not that they are stuck somewhere..\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Federico Bellini\n                \n                Apr 15, 2021 at 14:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","729":"1\n            \n        \n        \n            \n                \n                Thank you for the suggestions!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0it4ddict\n                \n                Apr 8, 2021 at 12:45\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","730":"Add a comment\n                \u00c2\u00a0|","731":"Add a comment\n                \u00c2\u00a0|","732":"Add a comment\n                \u00c2\u00a0|","733":"Add a comment\n                \u00c2\u00a0|","734":"Add a comment\n                \u00c2\u00a0|","735":"Thanks furas! I skimmed over that sha256 method, you were right about the return as well. Thanks again. :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ThomasATU\n                \n                Apr 1, 2021 at 13:12\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","736":null,"737":"Did you read my question? You didn't catch my question!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Denis Deniben\n                \n                Apr 2, 2021 at 10:34\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Updated for clarity. You can\u00e2\u0080\u0099t use the fallback if you use too much gas.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Apr 2, 2021 at 11:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                i think you dont know about tron development\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Denis Deniben\n                \n                Apr 2, 2021 at 16:35\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Could you clarify what you\u00e2\u0080\u0099re trying to do?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Apr 2, 2021 at 16:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I try design smart contract like that: users make deposit some trx and random user take all trx that was deposit)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Denis Deniben\n                \n                Apr 2, 2021 at 18:28\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","738":"1\n            \n        \n        \n            \n                \n                Thank you for your response @NukeManDan. But it seems that the tests you are referring to (mock.rs and tests.rs) look like unit\/integration tests. I was referring to something more like system test suite which checks the expected behavior of a runtime.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jdawg287\n                \n                Apr 2, 2021 at 8:03\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                There are a few tools in github.com\/substrate-developer-hub\/awesome-substrate that might be of interest, but I am not aware of any specific full testing suite available for generic substrate chains. The allowed customizations on your runtime are near infinite , so I wouldn't expect such a tool without needing heavy customizations needed anyhow.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Apr 2, 2021 at 17:29\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                node\/executor\/tests is probably the closest to what you want, from the included node in substrate\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Apr 2, 2021 at 18:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                OK I see why it is difficult to have a full testing suite for substrate based chains. I'll look into node\/executor\/tests and try to come up with something. Thanks a lot I'll mark this as answered.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jdawg287\n                \n                Apr 5, 2021 at 2:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","739":"Thanks for your help, the problem is partly solved.  Cardano-rosetta will use the extended_key as the private key and derive the public key from it (simply the second half of the string).  It can then call the \/construction\/derive endpoint with this public key to get a payment address.  This payment address is different to the payment address derived using cardano-addresses.  If I use the payment address derived using cardano-addresses rosetta gives an UtxowFailure (InvalidWitnessesUTXOW ..) error.  How can I derive offline the same payment address that cardano-rosetta will derive?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0John\n                \n                Apr 7, 2021 at 15:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The address generated by send-transaction-example.ts should match the output of cat utxo.prv | cardano-address key public --with-chain-code  | cardano-address address payment --network-tag testnet.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0soccer193\n                \n                Apr 8, 2021 at 3:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Perhaps its because cardano-rosetta is returning an enterprise address and cardano-addresses is returning some other type.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0John\n                \n                Apr 8, 2021 at 20:02\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","740":"Add a comment\n                \u00c2\u00a0|","741":"Add a comment\n                \u00c2\u00a0|","742":"Add a comment\n                \u00c2\u00a0|","743":"1\n            \n        \n        \n            \n                \n                AMB now supports 2.2 since Jan 4th\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MonoThreaded\n                \n                Jan 18, 2022 at 15:09\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","744":"Hi Petr, token is added to the wallet and it's visible for other addresses. The issue is, that it's not visible for that Vault address. [Updated description]\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Mar 30, 2021 at 13:02\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                When you say \"not visible in Vault address\" are you sure you have added the token on vault account?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Mar 30, 2021 at 14:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MikkoOhtamaa yes, I am sure, I am updating description with screenshot of the wallet.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Mar 30, 2021 at 16:40\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Worth to mention, that I tested this contract on two separate networks, Ropsten testnet and local Ganache network: both behaves the same and invisible in MetaMask but transaction exists\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Mar 30, 2021 at 16:42\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Sounds like a bug in MetaMask and you need to take it to their customer support\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Mar 30, 2021 at 18:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","745":"Add a comment\n                \u00c2\u00a0|","746":"Add a comment\n                \u00c2\u00a0|","747":"Thanks for your answer. so as I realized if the predefined port goes down ( or other main active nodes ). the whole system goes down and <blockchain> verification doesn't work anymore right ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0rouzbehsbz\n                \n                Mar 30, 2021 at 7:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                How would the port go down? It's just a parameter of the communication protocol.... As long as you have few nodes that are able to communicate on the (P2P) network on the specified port, you have a functioning P2P network between them. But if a computer is not able to communicate on the port (and there are no backup ways such as a secondary port in the network definition), it would not be able to connect and use the network.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 30, 2021 at 8:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                alright I think I get it. so what about IP addresses ? did we need some nodes with static IP addresses 24\/7 online ? like a server ? and in other nodes we have list of that main nodes that their IP addresses never changes ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0rouzbehsbz\n                \n                Mar 30, 2021 at 9:02\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                The static IPs are not needed - your app can always wait for other nodes to broadcast their presence. But if you want to be able to connect to other nodes quickly, they should have a static IP that IP should be defined in the app so it knows where to connect on startup.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 30, 2021 at 9:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Thanks for the explanation\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0rouzbehsbz\n                \n                Mar 30, 2021 at 12:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","748":"Thanks mate, its exactly what you said, i passed an EC_KEY to EC_KEY_check_key without generating.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ayoub Mafkoud\n                \n                Mar 30, 2021 at 11:14\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","749":null,"750":"Add a comment\n                \u00c2\u00a0|","751":"Add a comment\n                \u00c2\u00a0|","752":"Add a comment\n                \u00c2\u00a0|","753":"Add a comment\n                \u00c2\u00a0|","754":"Add a comment\n                \u00c2\u00a0|","755":"Add a comment\n                \u00c2\u00a0|","756":null,"757":"Thanks I got one step closer but the value is undefined 0x4b8ca107efbc8b096c011f64d2c2d7aebdaec7fe: undefined 0x7901b2b9caaeff5478d14873c39765373a48f890: undefined\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DedicatedDreamer\n                \n                Mar 22, 2021 at 21:26\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                oh sorry, my mistake... should be var value = jsonData.texts[key]; or jsonData['texts'][key] (basically the same, but let's stay in one convension, edited\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Flash Thunder\n                \n                Mar 23, 2021 at 7:30\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","758":"3\n            \n        \n        \n            \n                \n                The ERC-20 standard transfer assumes that the send amount is sent fully and the full amount is available to sent. It  would break on all decentralised and centralised exchange. Unless you plan to use to the token just for yourself, your modified transfer() token could not connect to larger DeFi ecosystem any way.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Mar 21, 2021 at 15:43\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                @MikkoOhtamaa That's correct. It's also one of the reasons why I've written the note \"is vulnerable to integer overflow\". Since Solidity 0.8, the validation whether the amount is available, is done automatically through the underflow\/overflow check. But in earlier versions, one should implement a custom check through require or use a library such as SafeMath.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 21, 2021 at 15:48\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                @Saulius You should define the admin address value to your address that you hold the private key to. Then you can transfer the tokens (from the admin address) the same way as you would transfer any other token - by calling the transfer() function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 21, 2021 at 19:18\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                @Saulius I'm not sure what you mean by the \"wallet hash\". If you mean the private key, you can use for example the <web3>.js privateKeyToAccount() function or the Metamask Import feature. If you mean the keccak256 hash of the address, then it's impossible to convert it back to an address... Also keep in mind that the address are checkum and later versions of Solidity do not accept addresses with incorrect checkum.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 21, 2021 at 21:42\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                @Saulius So I'd recommend to better describe the issue in a separate question.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 21, 2021 at 21:42\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 4 more comments","759":"Add a comment\n                \u00c2\u00a0|","760":"Add a comment\n                \u00c2\u00a0|","761":"Add a comment\n                \u00c2\u00a0|","762":null,"763":null,"764":null,"765":"Add a comment\n                \u00c2\u00a0|","766":"hello thank you, but can you tell me please anyone between both is the best\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wafa AB\n                \n                Mar 19, 2021 at 13:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                it depends on your use case and requirements according to that you can choose, for enterprise permissioned application Fabric is leading currently and have used in many enterprise grade applicaiton.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Moolshanker Kothari\n                \n                Mar 23, 2021 at 10:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","767":"Add a comment\n                \u00c2\u00a0|","768":null,"769":"Add a comment\n                \u00c2\u00a0|","770":"Add a comment\n                \u00c2\u00a0|","771":"Add a comment\n                \u00c2\u00a0|","772":"Add a comment\n                \u00c2\u00a0|","773":"Add a comment\n                \u00c2\u00a0|","774":"This is obvious and not helpful for someone trying to learn how to work with the more current releases.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user2799827\n                \n                Oct 31, 2021 at 16:29\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","775":"Add a comment\n                \u00c2\u00a0|","776":"Thanks. I'm new to Solidity, and I had no idea A) that read-only and read\/write functions had to be called differently, or even B) that the JavaScript tests were using <web3> calls. Now I know more about where to look for documentation.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Wiebe\n                \n                Mar 9, 2021 at 16:53\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","777":"Add a comment\n                \u00c2\u00a0|","778":"Many thanks for your great reply. May I know that should I need to update the channel configure too after I replaced new certs in crypto-config folder ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ray Lau\n                \n                Mar 24, 2021 at 11:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                No. If you keep the old private key, the new cert will work normally same like expired cert\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0harisato\n                \n                Mar 24, 2021 at 11:17\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Oh, I just test it on fabric v1.4. But I think it works on both versions because it uses openssl lib to renew the cert\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0harisato\n                \n                Mar 24, 2021 at 11:32\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","779":"Add a comment\n                \u00c2\u00a0|","780":null,"781":"Add a comment\n                \u00c2\u00a0|","782":"Add a comment\n                \u00c2\u00a0|","783":"Add a comment\n                \u00c2\u00a0|","784":"Add a comment\n                \u00c2\u00a0|","785":"Thank you for your answer, but the first problem I see in creating a new wallet that signs the miner reward each time, is that there's no single <blockchain>'s wallet, but it's kinda non existent. Is this behaviour allowed? A \"ghost\" wallet that spits token from nowhere?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Caius\n                \n                Mar 1, 2021 at 20:04\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I've updated the question trying to answer you on the parts you've cited, since a comment would be too long\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Caius\n                \n                Mar 1, 2021 at 20:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Caius It's not a ghost wallet that spits tokens from nowhere, it's the rule that allows tokens to be created in the first place. The miner is permitted to attach a \"reward\" transaction with one output and no inputs.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0David Schwartz\n                \n                Mar 1, 2021 at 20:10\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @Caius There's no reason to sign it and very good reasons not to. You don't want mining equipment to have to have private keys.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0David Schwartz\n                \n                Mar 1, 2021 at 20:23\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Oh, one correction. Bitcoin does allow the reward transaction to have multiple outputs. That makes it more convenient for cases where miners are splitting rewards.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0David Schwartz\n                \n                Mar 1, 2021 at 20:31\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 4 more comments","786":null,"787":"Add a comment\n                \u00c2\u00a0|","788":null,"789":"Add a comment\n                \u00c2\u00a0|","790":"Add a comment\n                \u00c2\u00a0|","791":"Add a comment\n                \u00c2\u00a0|","792":"Add a comment\n                \u00c2\u00a0|","793":null,"794":"Add a comment\n                \u00c2\u00a0|","795":"Add a comment\n                \u00c2\u00a0|","796":"Add a comment\n                \u00c2\u00a0|","797":"Add a comment\n                \u00c2\u00a0|","798":"That's interesting. I thought about this option of splitting everything into different contracts, but it seemed like it might be a headache. Or that it could get out of hand quickly and you would end up with a dozen contracts - even more, in no time... So are you familiar with contracts\/projects that take this approach? Can you give examples? I'd love to look up their code on Etherscan.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Feb 20, 2021 at 0:53\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                By the way, are you confirming that we are indeed NOT ALLOWED to change the signatures of methods such as ownerOf() and balanceOf() by adding additional arguments to them, as I suggested in my original question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Feb 20, 2021 at 0:55\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You could technically change the method signatures, but then they would not follow the ERC-721 standard (and that's probably what you mean by the \"not allowed\"). So I strongly discourage that... I'm not that familiar with the NFTs practical examples that much, so I don't know any examples, but I'm sure if you DYOR, you'll find examples. My answer is based on observing and writing implementations of ERC-20, where you also don't see many contracts defining 2+ tokens (even for the practical reasons that Etherscan and other <blockchain> explorers would not recognize 2+ tokens in the same contract).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Feb 20, 2021 at 1:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                OK got it. Makes sense. And yes, when I said \"not allowed\" I did mean that you certainly could change method signatures if you wanted to - but then you'd no longer be conformant to the ERC721 standards.  I will continue researching this - and hopefully others will chime in with their advice as it could be useful to others. Thanks again!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Feb 20, 2021 at 1:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                In terms of your suggestion to put each ERC721 in its own separate externally deployed contract, and then have the GameContract refer to those contracts, what if you wanted to add another element to your game? So you already have Weapons and Vehicles, and now you want to add Potions for example. Is there a way to design your GameContract so that it's able to accept new elements\/ERC721 contracts and Tokens so you can keep growing it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Feb 21, 2021 at 1:46\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","799":"Add a comment\n                \u00c2\u00a0|","800":null,"801":"Exactly. My problem was they were on separate networks. Make sure your explorer runs on the same network as fabric.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Navid K\n                \n                May 10, 2021 at 5:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes, this solved my problem. I had to make sure all of the container runs in the same network.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Quek Yao Jing\n                \n                May 27, 2021 at 13:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","802":"I heard that <hyperledger> also supports pluggable consensus protocol too. Do you have any idea about that? Thanks a lot.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0monir zaman\n                \n                Feb 20, 2021 at 1:12\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Sorry I do not know about <hyperledger>. All I know it was IBM led effort and it is not doing well coindesk.com\/ibm-<blockchain>-revenue-misses-job-cuts-sources\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 25, 2021 at 9:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I have searched a lot about Parity Ethereum implementation from scratch in a private environment, but could not find any that works. Do you know any tutorials or documentation that might help? Thanks in advance.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0monir zaman\n                \n                Apr 5, 2021 at 2:56\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Read the source code. Your use case is so niche that it is not worth of writing documentation for. Everyone who gets involved this needs to understand the node software source code anyways.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Apr 5, 2021 at 13:26\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Hi Mikko, The documentation of parity is not that rich. However, I find Substrate Parity which ahs a great documentation. I believe you know that but if you not you may check that out.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0monir zaman\n                \n                May 6, 2021 at 4:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","803":"you are awesome thank you very much for this!!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhon alino\n                \n                Feb 16, 2021 at 18:35\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                needs a const before user at the for loop\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0l30c0d35\n                \n                Dec 8, 2021 at 17:20\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","804":"Add a comment\n                \u00c2\u00a0|","805":"Add a comment\n                \u00c2\u00a0|","806":"Add a comment\n                \u00c2\u00a0|","807":null,"808":"Add a comment\n                \u00c2\u00a0|","809":"Add a comment\n                \u00c2\u00a0|","810":"Add a comment\n                \u00c2\u00a0|","811":"Add a comment\n                \u00c2\u00a0|","812":"Please avoid direct solicitations for help, especially including an e-mail address. It's only likely to result in that e-mail address getting spammed. Stack Overflow questions and answers are for all users and future readers... it's not a traditional forum in this sense.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TylerH\n                \n                Feb 9, 2021 at 19:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","813":"Got it. Do you know if the most popular cryptocurrancies has api for this? Bitcoin, Tezos, Monero, etc?!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tony Starkus\n                \n                Feb 9, 2021 at 0:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes, all <blockchain>s have API to query the wallet balance. For each <blockchain>, you need to figure out how.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 9, 2021 at 2:18\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","814":"the key question for me is how to securely store private keys on devices? For web app in case you are using browser anyway to access app, Metamask (or any other wallet) is great solution. In case you are developing a mobile app, and do not want to rely on any external software, you would need to create your own wallet to store private keys securely. Then you could use stored private keys to sign <transactions>. The example referred in this medium post is hardcoding the private key, which is big red no no.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0luk\n                \n                Oct 24, 2022 at 16:43\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","815":"Thank you for the feedback, do you think it is something that can be implemented in an existing <blockchain> schema or would it require a full rebuild from the ground up?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dralexhunter\n                \n                Feb 7, 2021 at 22:59\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","816":"Add a comment\n                \u00c2\u00a0|","817":"Add a comment\n                \u00c2\u00a0|","818":"Add a comment\n                \u00c2\u00a0|","819":"Add a comment\n                \u00c2\u00a0|","820":"Add a comment\n                \u00c2\u00a0|","821":null,"822":"Add a comment\n                \u00c2\u00a0|","823":"Add a comment\n                \u00c2\u00a0|","824":"Add a comment\n                \u00c2\u00a0|","825":"I don't understand, but its work i think.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ixar\n                \n                Feb 8, 2021 at 21:48\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","826":"Add a comment\n                \u00c2\u00a0|","827":"Add a comment\n                \u00c2\u00a0|","828":"I get what you mean but it can create confusion if someone only find out the discrepancy issue after sometime when they try to retrieve that record from 4 peers.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Calvin Cheng\n                \n                Feb 2, 2021 at 1:51\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","829":"with this '$.\"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\".transaction.size'  unfortunately return null !!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mohammadjavadkh\n                \n                Jan 31, 2021 at 7:39\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Are you sure that's an exact match on that key?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Charlieface\n                \n                Jan 31, 2021 at 7:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                excuse me. your answer is correct. I call '$.\"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\".transaction that return null. but '$.\"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\".transaction.size return correct answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mohammadjavadkh\n                \n                Jan 31, 2021 at 7:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Have made further update for changing hash keys\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Charlieface\n                \n                Jan 31, 2021 at 7:54\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","830":"My question how can I deploy docker container by using smart contracts\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ram\n                \n                Jan 31, 2021 at 8:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","831":"So if I want to verify a customer's subscription, do I have to pass all the data over again (id, city, start date, end date)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 30, 2021 at 10:43\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Yes, if the contract saved them\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 30, 2021 at 10:44\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                one last question to be sure that I understand you correctly. What is contract storage?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 30, 2021 at 10:49\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Add contract sample to answer. Contract storage is data describing the state of the contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 30, 2021 at 11:25\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","832":"Add a comment\n                \u00c2\u00a0|","833":"Actually I asked a more specific question here link\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mario Roma\n                \n                Jan 29, 2021 at 12:02\n                        \n                            \n                        \n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","834":"Add a comment\n                \u00c2\u00a0|","835":"Add a comment\n                \u00c2\u00a0|","836":"Add a comment\n                \u00c2\u00a0|","837":"Indeed   Removal of identities is disabled in the fabric-ca-server by default, but may be enabled by starting the fabric-caserver with the \u00e2\u0080\u0093cfg.identities.allowremove option.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Badr Bellaj\n                \n                Oct 26, 2022 at 12:56\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","838":"thanks for answer @MadJackall . I have one more question . I need to send some http Request from smart contract , and as far as I know in Ethereum we couldn't send any request to out of chain , but we can use oraclize _query for this . But this is payable and eht discounts from smart contract account , right ? Request number may be huge . I think that we need alternatively write service that make this api calls and then call smart contract function with already getting data . Is this approach good ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nigar Atakishiyeva\n                \n                Jan 30, 2021 at 20:14\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                To give good advice, you need a description of the entire process that you are trying to implement and the requirements for it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 31, 2021 at 7:05\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I need to develop marketplace dapp.The problem is in login process.We have microservice for auth logic.And in current state when user login then call smart contract login function which send httpRequest (oraclize_query) to our auth microservice, handle response and detect user is registered in our service or not . But I think this approach isn't good logically.I think we can this api call in frontend side with react and handle response ,I mean do this out of smart contract . And use smart contract only for like storeProducts getProducts operations.I'm new , can you help me @MadJackall please?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nigar Atakishiyeva\n                \n                Jan 31, 2021 at 8:06\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I think that if authorization is not directly related to the <blockchain> account, then it is better to perform it through a web service directly, without using the <blockchain> as a proxy element.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 31, 2021 at 12:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","839":"Add a comment\n                \u00c2\u00a0|","840":"My project is a dapp where users make reservations that can only be accepted if there are certain weather conditions. There will also be a refund function. Now I'm at the stage where I analyze all the technologies to understand which one to use. I am comparing ethereum nodes like <geth> \/ parity with infura (node as a service) and I would like to make a comparison with BlockCypher as well.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Micheal\n                \n                Jan 25, 2021 at 2:54\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                but in any case I suppose that infura and blockcyphher are different. Infura exposes a node's APIs, while blockcyphher does not.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Micheal\n                \n                Jan 25, 2021 at 21:33\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","841":"Add a comment\n                \u00c2\u00a0|","842":"Add a comment\n                \u00c2\u00a0|","843":null,"844":"Now I understand. Thank you so much!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zoha Malik\n                \n                Jan 24, 2021 at 19:14\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","845":"3\n            \n        \n        \n            \n                \n                It's good to explain what this code does. Stack Overflow is not for copying+pasting answers, but for gaining knowledge, while solving problems.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0LoukasPap\n                \n                Jan 23, 2021 at 12:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","846":"Add a comment\n                \u00c2\u00a0|","847":null,"848":"Add a comment\n                \u00c2\u00a0|","849":"Add a comment\n                \u00c2\u00a0|","850":"I was digging for the last couple of days without any result, actually, I saw his issue, I don't have any invalid block to apply (invalidate\/reconsider) To give you an idea, I run the full node first time on Windows Server, then I mined the first block on my Windows Machine, when I try to add a Linux based node, it won't sync or accepted I'm not sure why even I checked all ports\/firewall, etc..\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user48429\n                \n                Jan 21, 2021 at 22:17\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","851":"So is it correct to say that the backend requests new blocks from the <geth>, extracts events from them and selects the necessary ones?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 22, 2021 at 10:14\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Yes, though backend does not request the new blocks. Your Ethereum node (<geth> is not the only one) requests the new blocks and manages the authoritative state. Your backend then just reads the variables in this state it chooses to.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 22, 2021 at 10:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                thanks, you gave me the clearest answer. Ok so in the end it is my backend that is listening for events. Is it correct?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 22, 2021 at 10:39\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Can I ask you another question? I wrote this question in stackExchange. <geth> can be both a full node and a light node but I was asked this question link\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 22, 2021 at 10:42\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Backend listening for the event is correct.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 22, 2021 at 12:02\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 1 more comment","852":"I am working on a project where a client wants to make a reservation in a city, but the reservation is accepted only if the weather conditions are good. The first step is to send a transaction to the smart contract with the customer id and other parameters such as the city where to make the reservation. After collecting this data through an oracle, the smart contract compares the data, determines if a reservation is valid and saves 'id, true' or 'id, false'. My question is: where is this data ('id, true' or 'id, false') saved?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mario Roma\n                \n                Jan 21, 2021 at 10:22\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                My second question is: periodically, the oracle sends updated weather data to the smart contract and if there are any changes I must be able to change 'id, true' -> 'id, false' to indicate that due to changes that reservation is not more valid. Is it possible to do it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mario Roma\n                \n                Jan 21, 2021 at 10:22\n            \n        \n    \n    \n        \n            \n                    2\n            \n        \n        \n            \n                \n                @MarioRoma contracts have internal storage slots. The contract can write to them or read them using a key. It is a key-value trie. Every update to contract's storage is tracked via hashing the contract's storage trie, then this change is going to change all the hashes up the hierarchy until the hash of the entire Block. It is stored on all the 10k nodes of Ethereum network.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nulik\n                \n                Jan 21, 2021 at 11:52\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","853":"And if I want to avoid paying for fees alto<geth>er?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user3362334\n                \n                Jan 19, 2021 at 12:18\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                You can use MySQL.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 19, 2021 at 20:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","854":"Not getting the point. How 10min time become average time required to validate a new block. A block is generated with all pending <transactions> since the last successful block. Is this understanding ok?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user3717550\n                \n                Jan 20, 2021 at 14:54\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                10 minutes is the time it takes to find the \"happy\" hash of the new block. Verifying <transactions> takes significantly less time.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 20, 2021 at 15:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Finding hash (first 19 zeros) of all pending <transactions> after previous block using nonce means verification and proof of work is successful. Hece block creation is done. And the miner will get reward of 12.5 bitcoin is my understanding ok?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user3717550\n                \n                Jan 20, 2021 at 16:40\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                In general, yes. But the miner can select not all pending <transactions> into a block, but only some of them at will - for example, with the highest fee.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 20, 2021 at 19:00\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I've some more query to understand this properly - 1) If some <transactions> are missed to be included in a block. Again new block is created using newer <transactions> and those <transactions> are still not included to newer block what will happen to those older pending <transactions>? 2) Is it not mandatory to add new blocks in 10min interval? 3) Can't we say new bitcoin is mined at 10min interval? 4) one block adding means 6.25 bitcoin mined. Is my understanding correct? 5) If there is no transaction happen in long period of time, there will be no new block and no bitcoin mined. Correct?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user3717550\n                \n                Jan 20, 2021 at 20:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    \n                \u00c2\u00a0|\u00c2\u00a0\n            Show 2 more comments","855":"Add a comment\n                \u00c2\u00a0|","856":"Add a comment\n                \u00c2\u00a0|","857":"Add a comment\n                \u00c2\u00a0|","858":"Add a comment\n                \u00c2\u00a0|","859":"Add a comment\n                \u00c2\u00a0|","860":"Add a comment\n                \u00c2\u00a0|","861":"Add a comment\n                \u00c2\u00a0|","862":"Add a comment\n                \u00c2\u00a0|","863":"Add a comment\n                \u00c2\u00a0|","864":"Add a comment\n                \u00c2\u00a0|","865":"Add a comment\n                \u00c2\u00a0|","866":"I understand that Ethereum would take lot of gas for implementation and <transactions>, i was looking for applications that requires automation of AI and <blockchain> can help  without a third party intervention. Also <blockchain> adds immutability that adds security to the AI results.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Geeky Star\n                \n                Jan 23, 2021 at 3:12\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                The problem with current smart contracts is that they do not support floating point numbers which limits prediction accuracy. I looked at some of the fixed point implementations but was not convinced with any.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Geeky Star\n                \n                Jan 23, 2021 at 3:13\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","867":"Add a comment\n                \u00c2\u00a0|","868":null,"869":null,"870":"Add a comment\n                \u00c2\u00a0|","871":"I am assuming they all are participating to<geth>er. Here, I have just divided to explain the scenario in which some nodes receiving 0 and some are receiving 1.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0decoder1799\n                \n                Jan 13, 2021 at 8:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                \"In addition, if some replica misses messages that were discarded by all non-faulty replicas, it will need to be brought up to date by transferring all or a portion of the service state\" (pmg.csail.mit.edu\/papers\/osdi99.pdf, part 4.3)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 13, 2021 at 9:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Here, no message will be fully discarded by all non-faulty nodes as each non-faulty is receiving messages crafted by colluded group. I am not able to understand your suggest statement meaning  in this context.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0decoder1799\n                \n                Jan 13, 2021 at 9:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                PBFT defines the algorithm in which the nodes that receive the message determine its truth. But it does not define how the true message is delivered to those nodes that have not received it. This is provided by other mechanisms, such as the <blockchain> protocol.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 13, 2021 at 20:15\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","872":"Add a comment\n                \u00c2\u00a0|","873":null,"874":"Add a comment\n                \u00c2\u00a0|","875":"Thanks @Aditya Joshi. The images are updated. What about the chaincode? Do I need to change anything there?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Salma558\n                \n                Jan 8, 2021 at 17:47\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","876":"Thank you for your response. Privatekey is not required when transfort erc20 token via Metamask. I would like to implement it in a way that Metamask sends tokens. What should I do?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aleksa Misovic\n                \n                Jan 7, 2021 at 18:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","877":null,"878":"Add a comment\n                \u00c2\u00a0|","879":"Add a comment\n                \u00c2\u00a0|","880":"Add a comment\n                \u00c2\u00a0|","881":"Error: waves: unrecognized service\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cherry\n                \n                Jan 6, 2021 at 11:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I suspect you have no file named waves in \/etc\/init.d\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Raman Sailopal\n                \n                Jan 6, 2021 at 11:59\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Can you tell me how can I solve this problem? i am just newbie\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cherry\n                \n                Jan 6, 2021 at 12:12\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Future occurrence: I ran into the problem lately, the solution did not work and this helped me out: gist.github.com\/alyleite\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DanOps\n                \n                Oct 11, 2022 at 14:22\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","882":null,"883":"Add a comment\n                \u00c2\u00a0|","884":"Add a comment\n                \u00c2\u00a0|","885":"Add a comment\n                \u00c2\u00a0|","886":"Add a comment\n                \u00c2\u00a0|","887":null,"888":"So the only incentive is a higher probability for you next block to appear in the main chain? Do I understand correctly that this longest chain selecting algorithm is embedded in the node client code and is not enforced from anywhere externally?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0tjumma\n                \n                Jan 2, 2021 at 11:25\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes. But you can create your own client with any other chain selection algorithm.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 2, 2021 at 12:04\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","889":"4\n            \n        \n        \n            \n                \n                9 terabytes with ssd caching? you don't say.. let's all sell our livers to iterate over a mapping why don't we..  how about just doing mapping.keys() and then iterating over that?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Eight Rice\n                \n                Sep 6, 2021 at 17:57\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","890":"Add a comment\n                \u00c2\u00a0|"},"Answer2":{"0":null,"1":"The issue was that I hadn't enrolled bootstrap identity yet.\nBelow code does that\nconst enrollment = await ca.enroll({ enrollmentID: 'adminusername', enrollmentSecret: 'adminpassword' });\n        const x509Identity = {\n        credentials: {\n            certificate: enrollment.certificate,\n            privateKey: enrollment.key.toBytes(),\n          },\n        mspId: 'Org2MSP',\n        type: 'X.509',\n        };\n        await wallet.put('admin', x509Identity);\n\nOnce bootstrap identity is enrolled, create user object for that identity with below code\nconst walletPath = path.join(process.cwd(), 'wallet');\nconst wallet = await Wallets.newFileSystemWallet(walletPath);\nconst provider = wallet.getProviderRegistry().getProvider(adminIdentity.type);\nconst adminUser = await provider.getUserContext(adminIdentity, 'admin');\n\nNow invoke newIdentityService() of FabricCAServices class as below to get list of identities.\nconst FabricCAServices = require('fabric-ca-client');\nlet connectionProfile = yaml.safeLoad(fs.readFileSync('..\/gateway\/connection-org2.yaml', 'utf8'));\n\/\/ Create a new CA client for interacting with the CA.\nconst caInfo = connectionProfile.certificateAuthorities['ca.org2.example.com'];\nconst caTLSCACerts = caInfo.tlsCACerts.pem;\nconst ca = new FabricCAServices(caInfo.url, { trustedRoots: caTLSCACerts, verify: false }, caInfo.caName);\nlet identityService = ca.newIdentityService();\nlet registeredidentities = await identityService.getAll(adminUser);\nconsole.dir(registeredidentities, { depth: null })","2":null,"3":null,"4":null,"5":"I think first error is when you build a transaction, you need to pass an object:\n tx_hash = contract.functions.mintTo(<web3>.toChecksumAddress('0x466086b7002d6836c2E4Ca05472deD70A7f5213b')).buildTransaction({\n\n        \"chainId\": chain_id,\n        \"gasPrice\": w3.eth.gas_price,\n        \"from\": whatever_address,\n        \"nonce\": nonce_value,\n})\n\nchain Ids\nNETWORK_CHAIN_IDS = {\n  1: \"Ethereum Main Network\",\n  3: \"Ropsten Test Network\",\n  4: \"Rinkeby Test Network\",\n  5: \"Goerli Test Network\",\n  42: \"Kovan Test Network\",\n  56: \"Binance Smart Chain\",\n  1337: \"Ganache\",\n};","6":null,"7":"how the owner.call() will send ether to receiver since receiver wasn't set to any address\n\nIt sends an internal transaction to the owner address.\nIf you want the user to specify a custom receiver, you can define the receiver address as a param of the function:\nfunction transferEther(address receiver) external payable {\n    payable(receiver).call{value: msg.value}(\"\");\n}\n\n\nMind that on the first line of the transferEther() function body, you're owerwriting the existing owner value with msg.sender (the user executing the function). Which effectively just sends the funds back to the sender (plus sets them as the owner).\naddress payable public owner;\n\nfunction transferEther() external payable {\n    \/\/ overwrite the existing `owner`\n    owner = payable(msg.sender);\n\n    \/\/ ...\n\n    \/\/ send ETH to the (new) `owner`\n    owner.call{value: msg.value}(\"\");\n\nYou most likely wanted to omit the owner = ... assigning.","8":"The answer was surprisingly easy which is not surprising given the lack of documentation \u00f0\u009f\u0098\u008b. I was trying to multisign a tx and one of the signers was using the wrong ledger to sign his transaction.\nBelieve it or not but you can specify which signer from the key ring will sign, then take the wrong ledger and sign. You won\u00e2\u0080\u0099t get an error message.","9":null,"10":null,"11":null,"12":null,"13":"Your contract has a constructor and expects an argument.\nconstructor(string memory initialMessage) public {\n        message = initialMessage;\n    }\n\nSo when you deploy it you have to pass an argument.\nconst Inbox = artifacts.require(\"Inbox\");\n\nmodule.exports = function (deployer) {\n  \/\/ passing an argument \n  deployer.deploy(Inbox, \"myInitialMessage\");\n};","14":"I am not a crypto expert, but the difficulty is calculated using the bits field in the block header, not the block address hash. So you have to get block header querying https:\/\/<blockchain>.info\/rawblock\/<block_hash> (see https:\/\/www.<blockchain>.com\/api\/<blockchain>_api), unpack the content of the bits and calculate current_target and current difficulty.\nBlock difficulty is recalculated only at blocks with height \/\/ 2016 == 0.\nSo there is no need to query each and every block generated between two dates but only each 2016th + 2.\nAlso, please note that list_block_adress contain time in descending order.","15":"They duplicate some of the raw <blockchain> data and aggregations of this data in their own searchable databases.\nExample:\n\nEach token mint emits a Transfer() event log with params of the token sender (0x0 in case of a token mint), receiver, and the token ID.\nThere is a standardized function that each NFT collection can implement to return the token metadata - name, description, and image URL - in a standardized output format.\nA marketplace subscribes to events of newly minted tokens (usually only on their users' collections), then queries the metadata of the newly minted token (by its ID available from the event log), and stores the metadata in their own searchable database (e.g. ElasticSearch).","16":null,"17":null,"18":null,"19":null,"20":null,"21":"I just found out that I have used wrong variable at nested loop in sendToWinner() function:\n        for(uint8 participatorIndex = 0; participatorIndex<participators.length; participatorIndex++){\n            rate = uint8(balances[participators[participatorIndex]]*100\/pot);\n            for(; participatorIndex<rate ; participatorsRatesIndex++){\n                participatorsRates[participatorsRatesIndex] = participatorIndex;\n            }\n            balances[participators[participatorIndex]]=0;\n        }\n\nFor for(; participatorIndex<rate ; participatorsRatesIndex++){ instead participatorIndex I should have written participatorsRatesIndex. Because it became infinite loop it couldn't work but now it is working.","22":null,"23":null,"24":null,"25":"block.timestamp is a global variable returning the time of the block when the function is executed (by sending a transaction). Or the current time if the function is called (by performing a read-only call).\npragma solidity ^0.8;\n\ncontract MyContract {\n    function mint() external {\n        require(block.timestamp >= 1640995200, \"Not yet available\");\n        \/\/ ... rest of your code\n    }\n}","26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":"As of now, you cannot log out of Metamask by <web3> or Ethereum api. You have to manually disconnect Metamask.\naccountChanged listener will just detect if Metamask connects to a different account.","33":"Each proxy contract for a Chainlink Price Feed can have multiple underlying aggregator contracts, with one of them being set as the 'active' one at any given instance. Ie whenever the Chainlink Labs team deploys new versions of the aggregator, they update the proxy contract to set the current aggregator version to be the new one, and all new price data starts getting written to the new aggregator.\nBased on this, if you want historical price data for a proxy contract\/price pair from the last couple weeks or so, you'd need to go to the current aggregator for the proxy contract, then get the current round info (including timestamp), then go back in aggregator rounds in a loop until you get to a round that is less than your search parameter timestamp.\nTo find the current aggregator contract address for a proxy contract, you can call the aggregator getter function in the proxy contract.\nThe phase ID can be thought of as an incrementing ID number that the proxy contract uses to identify each aggregator as it gets added to the proxy, so the first one is 1, second is 2 etc. To find out what the current phase ID is of the current aggregator, you can use the phaseId getter function in the proxy contract.\nAggregator round IDs start from 1 and increase by 1 each time. Eg you can  use the aggregator latestRound getter function to find the last round that it stored, and then start from that number as an input parameter to getRoundData, and then reduce the number by one and loop through until you reach your point in time.\nUnlike Aggregator round IDs, proxy round IDs are those big really long numbers like 36893488147419113293, and are actually just a derived value based on the aggregator phase ID and the aggregator round ID. This is done to ensure the proxy round IDs are always increasing in value, and that there will never be any overlap between the same rounds across different aggregators, eg round 5000 from aggregator with phase ID 1 should have a lower proxy round ID that round 5000 from aggregator with phase ID 2\nIn Solidity you can easily replicate the proxy round ID derived value with the following formula, passing in the phase ID of the aggregator and the aggregator round ID\nreturn uint80(uint256(_phaseId) << 64 | _aggregatorRoundId);\n\nYou can even then take that derived value and pass it into the proxy contract getRoundData function, and get the same data result as calling getRoundData in the aggregator contract for the given aggregator round ID.\nI find A good way to play around with these is to interact with the functions directly on etherescan, and see the data returned. Ie here's the Kovan ETH\/USD proxy and its latest aggregator\nRegarding the answer your second question, the best way is to start from 'now', ie get the latest aggregator, grab the latest round in the aggregator and then go back in time by reducing the aggregator round ID by 1, and continue to get pricing info until the round timestamp is < your search timestamp.\nFinally, looping in Solidity is not very gas efficient. Another approach you can take is to off-load the external computation to an oracle, and the oracle can give you the correct round ID, and you can then take that and verify the results on-chain. Here's an example of that design pattern in the form of an external adapter that retrieves historical price data based on a timestamp. There is a live version of this running on Kovan too, check out the readme for more info","34":"Yes, by using configtxlator binary that's included. For example:\nconfigtxlator proto_decode --input the_one_you_fetched.pb --type common.Block--output human_readable.json","35":null,"36":null,"37":null,"38":null,"39":"if you declared two mint functions then you have to explicitly use the fully qualified signature.\nExample:\ntoken[\"mint(address,uint256)\"](owner.address, <web3>.utils.toWei(\"1000\", 'ether'))\n\nI found the solution here\nhttps:\/\/github.com\/ethers-io\/ethers.js\/issues\/407","40":null,"41":null,"42":"The payable modifier of the invest() function allows to send the main token of whichever network is the contract deployed on.\nSo if it's on Ethereum network, users can send ETH along with the transaction invoking the function.\nIf it's deployed on the BSC network, users can send BNB along with the transaction invoking the function.\nIf it's deployed on the Tron network, ... they can send TRX.\netc.","43":"POW is a consensus algorithm, it helps multiple actors\/nodes\/parties to agree on what should be the actual state of the system that everyone will consider valid. So it simply solves a different problem than linking blocks to each other in a <blockchain>. There are actually many different other consensus algorithms like Proof of Stake for example.","44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":"Graph search algorithms could be of use :D Common ones are BFS and DFS. The general gist of the approach is to start with any node and visit its neighbours while keeping track of which ones you have already visited (so you don't have to go over them again).\nIn your case I think it would be sensible to start with any random node, and do the process iteratively. I found a fantastic explanation here, please check it out.\nThis is a fun exercise actually","51":"Assuming that you're running a private network and not connecting to an already existing public network (e.g. Ropsten, Rinkeby, Kovan, ...).\nYou can add the pre-funded accounts to your genesis.json, under the alloc property. Example from the linked documentation:\n\"alloc\": {\n    \"7df9a875a174b3bc565e6424a0050ebc1b2d1d82\": { \"balance\": \"300000\" },\n    \"f41c74c9ae680c1aa78f42e5647a62f353b7bdde\": { \"balance\": \"400000\" }\n}\n\nThese accounts will be funded in the first block, so you'll need to re-init your network in order to fund the accounts.\n\nIf you want to fund your accounts on a public network, you can't just re-init the whole public network. But there are so called faucets for testnet networks, that give you some small amount of testnet ETH. Example: https:\/\/faucet.metamask.io\/ (requires MetaMask wallet extension to be installed in your browser).","52":null,"53":"You have two typos\ncompiled_sol=compile_standard({\n    # not \"solidity\"\n    \"language\":\"Solidity\",\n    # not \"simpleStorage\"\n    \"sources\":{\"SimpleStorage.sol\":{\"content\":simple_storage_file}},\n    \"settings\":{\n        \"outputSelection\":{\n            \"*\":{\n                \"*\":[\"abi\",\"metadata\",\"evm.bytecode\",\"evm.sourceMap\"]\n            }\n        }\n    }\n},","54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":"Yes, it's possible to send states using send() and receive(). Here is a code sample that I tested to see if it works:\nclass TestContract : Contract{\n    companion object{\n        @JvmStatic\n        val ID = \"package net.corda.sample.TestContract\"\n    }\n    override fun verify(tx: LedgerTransaction) {\n\n    }\n}\n@BelongsToContract(TestContract::class)\nclass TestState(val owner : Party, val value : String) : ContractState {\n    override val participants: List<AbstractParty>\n        get() = listOf(owner)\n}\n\n\n@InitiatingFlow\n@StartableByRPC\nclass receiveStateFlow(private val counterparty: Party) : FlowLogic<Unit>() {\n    override val progressTracker = ProgressTracker()\n    val log = loggerFor<receiveStateFlow>()\n\n    @Suspendable\n    override fun call() {\n        val counterpartySession = initiateFlow(counterparty)\n        val counterpartyData = counterpartySession.sendAndReceive<TestState>(\"hello\")\n        counterpartyData.unwrap { msg ->\n            log.warn(msg.value)\n            assert((msg.participants.first()) == counterparty)\n        }\n    }\n}\n\n@InitiatedBy(receiveStateFlow::class)\nclass sendStateFlow(private val counterpartySession: FlowSession) : FlowLogic<Unit>() {\n    @Suspendable\n    override fun call() {\n        val counterpartyData = counterpartySession.receive<String>()\n        counterpartyData.unwrap { msg ->\n            assert(msg == \"hello\")\n        }\n        val newState = TestState(serviceHub.myInfo.legalIdentities.first(), \"someValue\")\n        counterpartySession.send(newState)\n    }\n}\n\nHowever, this method will not consume any states. This can only happen if you use those states as the output of a Transaction. Hence, the Party that receives the states should use those exact states as a output in a TransactionBuilder in the same Flow and go on with signing and finalising the transaction.","61":null,"62":"We added a couple of guides about how to deploy and configure your own giver in developer network. Please, check them out:\nWork with devnet with everdev tool - https:\/\/github.com\/tonlabs\/everdev\/blob\/main\/docs\/work_with_devnet.md\nConfigure giver in AppKit - https:\/\/tonlabs.gitbook.io\/appkit-js\/guides\/custom_giver","63":null,"64":null,"65":null,"66":"No, this is not possible, at least in a token contract, because the token contract only \"knows\" that the user send or approved tokens and that's all that can know, it could be possible in a dex or cex contract","67":null,"68":"51% is and attack vector for Proof of work (PoW) consensus mechanism. While Eth 2.0 uses Proof of stake (PoS) which is less prone to 51% attack and it does not require 51% nodes for confirming transaction rather having control over 51% of staked amount.\nBoth of PoW and PoS are widely covered in detail by online community so i will just drop link so can know the basic differences.\nPoW vs PoS\nNot all 200k validators participate in validation process in proof of stake out of whole pool of validators a few are chosen randomly to validate transaction. Incase of Ethereum its called a validator committee which has 128 validators that verify the transaction. And the probability of having more bad actors in validators committee rather then good is really low one in trillion here is the math for it\nConfirmations\nNo of blocks added to the chain after the block containing your transaction. So if your tx is in block no 10 and current chain height is 25 then confirmations size will be 15. Confirmation ensure that there is no (close to none) probability of fork before you use the funds. With each block confirmation the probability of fork decreases exponentially. Confirmations does not mean the number of validators that confirmed your blocks","69":null,"70":null,"71":null,"72":null,"73":"You are trying to change the data in the declarative part of the contract code. Put the change in the contract constructor or function.\n\/\/ SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\ncontract simple\n{\n    uint public a = 3;\n\n    constructor()\n    {\n      a = 16; \n    }\n\n    function changeData() public\n    {\n      a = 16;\n    }\n\n}","74":"The messages construct accordingly to TL-B scheme.\nIn general, the message has type that called \"Message X\"\nThis type has 3 parts.\nThe first part is the \"CommonMsgInfo\"\n           \/* int_msg_info$0\n           ihr_disabled:Bool\n           bounce:Bool\n           bounced:Bool\n           src:MsgAddressInt\n           dest:MsgAddressInt *\/\n        message_.store(false, true, true, false, address(0), address(this));\n        message_.storeTons(0);\/\/value:CurrencyCollection\n        message_.storeUnsigned(0, 1);\/\/value:CurrencyCollection (for other currencies)\n        \/\/ In the next 4 fields we store zeroes, because <blockchain> software will replace them\n        \/\/ with the correct values after this function finishes execution.         \n        message_.storeTons(0);\/\/ihr_fee:Grams\n        message_.storeTons(0);\/\/fwd_fee:Grams\n        message_.store(uint64(0));\/\/created_lt:uint64\n        message_.store(uint32(0));\/\/created_at:uint32\n\nThe second part has type \"init\"\n        message_.storeUnsigned(0, 1); \/\/no initial state\n\nThe third part has type \"body\"\n        message_.storeUnsigned(1, 1); \/\/1 because, we don't store body in current cell\n        message_.store(body);","75":"To obtain all NFTs under a user account, the following conditions are required:\n\nA collection needs to be created under the account to store NFT.\nThe collection provides a public method to query its NFT list.","76":"Is it possible to authorize a server to sign <transactions> on user's behalf?\n\nNo.\nOr: only if your smart contracts support some kind of specially signed messages, but they aren't compatible with any normal Ethereum <transactions> and this is your application-specific logic.","77":null,"78":"TL;DR\n\nHLF by design is deterministic so the orderer nodes are important. Only they participate in consensus not all peers and the blocks they produce are Final (Not prone to forks).\nNo you cannot make a peer orderer as well. Your network configuration for HLF must have at least one orderer to work\n\n<hyperledger> Fabric (HLF) vs Bitcoin\nHLF is a private permissioned <blockchain> where as Bitcoin is a public permissionless <blockchain>. You should not expect them to work similarly.\nPublic <blockchain>s\nIn public <blockchain> for example bitcoin everyone is treated equal in other words no one have special privileges you may think well miner are the ones minning block but the important point is anyone can become miner its open game no restriction on who can become miner or who can run a node etc.\nPrivate <blockchain>\nIn private <blockchain> for example HLF roles are predefined at the time of setting up and starting <blockchain>. Each role has certain tasks and privileges and restriction. The no of organisations  peers, endorser peers, orderers, channels all are predefined and some have special privileges which no other role has like orderer whose is responsible for receiving endorsed <transactions> from peers and put them into blocks then these blocks are distributed to all peers. These blocks are Final.\nBut Why?\nPrivate <blockchain>s (Like HLF) full-fill special use cases for example supply chain, B2B operations In such use cases one may want to harness positives of <blockchain> like transparency, auditing, provenance but may also want some sort of role based access or restrictions of certain data to certain audience public <blockchain>s like Ethereum and bitcoin does not fit here.\nNow coming toward your question\nWhy is there an orderer node in HLF isn't it redundant ?\nNo it's not redundant, HLF has deterministic consensus algorithms where as Ethereum and Bitcoin have probabilistic consensus algorithms which means there can be ledger forks. In HLF there are no Ledger forks because fork occur when two equal participants have conflict at a common point. Incase of HLF the participants are not equal as peers cannot participate in consensus process the block order set by orderers is Final. And rightfully so because for the use cases it is designed for does not want forks and want to have special roles and much much more transaction throughput.\nMust must Read !\n\nhttps:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-2.2\/orderer\/ordering_service.html#what-is-ordering\n\nNo it is not possible to assign peers orderer's role you must have at least 1 orderer in your HLF network to work.","79":null,"80":"In order to change variables you need to implement setter method.\nuint256 public mintCost = 0.05 ether;\n\nfunction setCost(uint256 _newCost) public onlyOwner {\n        mintCost = _newCost;\n }\n\nAbove piece of code init a state variable that can be used as minting cost of a token and the function setCost is used to update its value. Also notice in onlyOwner that means function is restricted to be used by owner of the contract only. You can read more about function modifier from solidity docs\nGas prices are set while sending <transactions> incase you are using remix IDE it allows you to set gas price for each transaction.","81":null,"82":null,"83":null,"84":null,"85":null,"86":"A) Yes, it is fine to use the same data with the same or new node key\nB) Nope, everything should work smoothly unless there are two nodes at the same time using the same node key\nC) Nodes don't keep track of IP addresses explicitly, as far as I know, they only care about TCP connections","87":"You can use the method: ledger.getAccountInfoByAddress (https:\/\/testnet.znn.space\/#!api.md Under dual-ledger)\nWhen connecting to your node, you can just curl it using:\ncurl -X POST http:\/\/127.0.0.1:35997 -H 'Content-Type: application\/json' -d '{\"jsonrpc\": \"2.0\", \"id\": 20, \"method\": \"ledger.getAccountInfoByAddress\",\"params\": [\"z1qz5p95pa8c6wq9pvfkg642gjv4nnaayx6vhm2w\"]}' | jq\nOutput looks like:","88":"You can use curl on the command line and access the method: embedded.pillar.getAll (https:\/\/testnet.znn.space\/#!api.md)\nI passed the output to the command jq so it can be easily read.\n\ncurl -X POST http:\/\/127.0.0.1:35997    -H 'Content-Type:\napplication\/json' -d '{\"jsonrpc\": \"2.0\", \"id\": 20, \"method\":\n\"embedded.pillar.getAll\",\"params\": [0, 299]}' | jq\n\nThis will give you the output of:","89":null,"90":"the contract manages the balance by itself rather than using the balance from the <blockchain>\n\nEach state change (in this case change of balances storage property value) is recorded on the <blockchain>. So the contract is reading the balance from the <blockchain>.\nHowever, the way Ethereum network is designed, an address can only have few properties - its bytecode (non-zero bytecode means it's a smart contract), its balance, and few others. Since there's only one property for balance (and not a list of balances), it's used for the native ETH balance. Any token balances are stored in the contracts of the respective tokens.\nYou can read more about the token balance storage design in the final version of ERC-20 and the linked documents. This is the first standard that introduced tokens on Ethereum.","91":null,"92":"Ethers contract.on() (docs) is invoked when an event with the specified name is emitted.\nYour snippet is passing a function name (atomicMatch_), not an event name.\nThe atomicMatch_ function effectively emits the event named OrdersMatched. That's why changing the handler to contract.on('OrdersMatched') fixes the issue.\n\nAlso, the sandbox is using a built-in provider under the getDefaultProvider(), which is communicating with the app over WSS. Your snippet is using a HTTPS provider that is by design unable to listen to events. You'll need to use a WSS provider as well (they are supported by Infura).","93":null,"94":null,"95":null,"96":"The default number of transactionConfirmationBlocks is 24 which takes a long time to complete. Setting this to 1 as below solved my issue.\nthis.setState({contract: new <web3>.eth.Contract(\n      credentialArtifact.abi,\n      deployedNetworkCred.address,\n        {transactionConfirmationBlocks: 1}\n  )});","97":"Debugging with truffle is pain in ass. Specially if you have no previous experience of cli-debugging Although here is their complete guide.\nThis includes everything setting breakpoints, displaying variables, execute and print expressions etc\nAs a rule of thumb if you are working on a project that involves writing single or two smart contract you may wanna use remix IDE. It is very user friendly and has everything. You can code deploy test debug your smart contracts with great ease.","98":"Yes it is default behaviour. By default transaction is sent by accounts[0] and since Sendcoin() function uses msg.sender ( msg.sender: A global variable in solidity that is always equal to the account that sent the transaction) as sender and account passed in parameter as receiver therefore you see the coins being deducted from account[0] and sent to account[0]\nTo change this use below code to pass optionals to change the account sending transaction\ninstance.sendCoin(accounts[1], 10, {from: accounts[2]})","99":null,"100":"You do not need a smart contract to sign or send a transaction. The transferring of ETH is built into the protocol. This can be accomplished by using libraries such as <web3> or ethers if you're a developer. If you're not a developer, this can be accomplished by using tools such as Metamask.\nSteps to send a transaction using ethers.js:\n\nInstantiate your provider and signer using ethers.providers. and Signer.\nThen sign a transaction using signer.signTransaction.\nUse provider to send the transaction using provider.sendTransaction.\n\nReferences:\nEthers.js: https:\/\/docs.ethers.io\/v5\/api\/\n<web3>.js: https:\/\/<web3>js.readthedocs.io\/en\/v1.5.2\/\nmetamask: https:\/\/metamask.io","101":null,"102":null,"103":null,"104":"Your function is not payable, please use:\nfunction payRequest(address payable _recipient, uint256 _amount)payable public {\n        \n        (bool success, bytes memory transactionBytes) = _recipient.call{value:_amount}('');\n        \n        emit TransactionBytes(transactionBytes);\n        \n        emit RequestPaid(msg.sender, _amount);\n    }\n\nI don't see from which account the ether are from.\nYou don't declare your variables in the contract (for example before the event as done in the best practices).\nTo be fully transparent, your contract seems strange or incomplete to me.","105":"Perhaps you have not previously given permission for the miner to sign the genesis block.\nPOA uses the Clique API to manage the seal list.\n> clique.proposals\n{}\n> clique.propose(\"0xc077f8420d5b6c125897d9c5e21293ff6f77855c\", true)\ntrue\n> clique.proposals\n{\n  0xc077f8420d5b6c125897d9c5e21293ff6f77855c: true\n}\n> clique.getSnapshot()\n{\n  hash: \"0xfbfe67cd638d21f528036130cc703be8f8fdccb934d871f3f8c2eccda1ed4bf5\",\n  number: 11,\n  recents: {\n    10: \"0xc077f8420d5b6c125897d9c5e21293ff6f77855c\",\n    11: \"0x726794b16f6c5b0be0b78d7713a876ed3da8be1a\"\n  },\n  signers: {\n    0x726794b16f6c5b0be0b78d7713a876ed3da8be1a: {},\n    0xc077f8420d5b6c125897d9c5e21293ff6f77855c: {}\n  },\n  tally: {},\n  votes: []\n}`enter code here`\nenter code here\n\nYou can see more details in this manual: https:\/\/yenhuang.gitbooks.io\/<blockchain>\/content\/interact-with-private-chain-on-android\/build-the-private-chain.html\nYou can also top up your balance using:\neth.sendTransaction({from:eth.coinbase, to:eth.accounts[1], value: <web3>.toWei(0.05, \"ether\")})","106":null,"107":"Turns out I was using the System Program ID to derive the PDA in my client code, rather than using my actual Program ID.\nShould be:\n  const [sandboxPda, sandboxBump] = await PublicKey.findProgramAddress([Buffer.from('seed')], <PROGRAM_ID>);","108":null,"109":null,"110":null,"111":"Your approach, calling the store() function right on the item, is in fact a more straightforward way to achieve the same result as the lecturer's code.\nSo to answer your questions:\n\nWhat is this address function? I assume it gets the address of the contract instance.\n\nCorrect. Even though the simpleStorages[_simpleStorageIndex] doesn't store the actual SimpleStorage instance. Within your contract, it only stores a helper object that contains a pointer to the external contract address, as well as interface definition of the SimpleStorage (but not the actual instance of the external contract).\nTypecasting the helper object to an address returns the address of the external contract.\n\nThen why do we pass it to a constructor(?) of SimpleStorage\n\nYou're not passing it to the SimpleStorage constructor - that would be new SimpleStorage(<constructor_params>) with the new keyword (effectively deploying the SimpleStorage contract to a new address). You're instantiating the helper object described above, passing it the external contract address.\n\nWhy do all this when calling store on the instance itself without going through addresses works.\n\nI don't know the lecturer's intentions behind this code. Maybe they use it later in the course to describe some optimization or as a bridge to show some other topic. But both ways work.","112":null,"113":"obviously I would have to have some extrinsic functions that are exposed through my dapp so that when they click and pay for membership, in the runtime, the membership pallet will add that user as a member. Can anyone confirm my thoughts on this?\n\nYou can easily do this. pallet_membership is just a container for members. As you will find in the pallet_membership::Config, there are special origins that can be defined as those who have the authority to add or remove a member.\nYou need a new pallet that will handle the payment to join new members. Let's call this pallet_membership_payment. Once pallet_membership_payment has received the correct payment, it can call into pallet_membership::add_member with whatever origin is required to satisfy it. Not that even if the origin requirement of add_member is EnsureRoot, pallet_membership_payment can still practically get over it, if it is coded as such.\n\n\nShould I just create a smart contract to handle membership logic and deploy it on edgeware or some other parachain that already exists.\n\nThe answer to this really depends on how much further logic does your application have next to handling this membership via fees. Also, it depends on the smart contract payment model (end user pays the fees) works for you If this is it, then it is pretty simple. You might have an easier time in a smart contract model. But, if you need certain optimisations, less fees, more performance etc. you will probably have to consider being your own (para)chain.","114":null,"115":null,"116":"There's a slight difference between live networks (e.g. Ethereum mainnet or Ropsten testnet) and emulators (such as Remix VM or Ganache).\nWhen you want to deploy a contract, its compiled bytecode is passed as the data field of a transaction that doesn't have a recipient (the to field is omitted).\n\nOn a live network, the transaction is broadcasted to the network, and waiting in the mempool to be mined.\nWhen a miner mines this transaction, the EVM on their machine calculates the state changes that were made during its execution (in other words, the contract deployment) and broadcasts the state changes (e.g. storing the contract bytecode under the newly created address storage) to the rest of the network.\n\nHowever, each instance of an EVM emulator usually runs on one machine (e.g. in your browser in case of Remix) and doesn't have access to a network of miners. Plus it would be ineffective to wait for an external miner to mine your transaction every time during development.\nSo when you send a transaction on an emulator, it's locally executed and wrapped in a new block right away.\n\nSo to answer your questions:\n\nDoes deploy a contract mean create a new block in <blockchain>?\n\n\nlive networks - no\nemulators - yes\n\n\nWhenever there is a method call on the contract, does it always generate a transaction in the block?\n\nThere's a difference between a transaction (read-write) and a call (read-only). For <transactions>, see above. Read-only calls are not mined at all (so they are free), and they are only invoked on the machine of your node provider (or in the emulator).","117":"Firstly, \"injecting\" a transaction into the <blockchain> network does not mean that it will be immediately accepted for execution (included in the block) - it depends on the queue size determined by the current load, as well as on the transaction prioritization capabilities determined by the protocol used.\nSecondly, the most popular <blockchain> networks based on the Bitcoin and Ethereum protocols use conditional finalization of the transaction - the block in which the transaction was included can be excluded from the main chain due to a fork and, thus, the transaction becomes unexecuted again and returns to the pending queue.\nIn order to make sure that the transaction is finally included in the main chain (more precisely, with a sufficiently high probability), it is recommended to wait until another 4-6 blocks are added \"on top\" of the block with the transaction. For Bitcoin, this time will be 40-60 minutes, and for Ethereum - 60-90 seconds.","118":null,"119":null,"120":null,"121":"You can find the smart contract address by looking at the field \"Interacted With (To)\". Here you have the clickable hash code of the contract.\nIn your example, it looks as follows\n\nThen, you can follow the contract link to find more details. In your case it's https:\/\/etherscan.io\/address\/0x7be8076f4ea4a4ad08075c2508e481d6c946d12b#code","122":"swapExactETHForTokens() definition\nfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n    external\n    virtual\n    override\n    payable\n    ensure(deadline)\n    returns (uint[] memory amounts)\n{\n\ntakes the 4th argument deadline and passes it to the ensure modifier\nmodifier ensure(uint deadline) {\n    require(deadline >= block.timestamp, 'UniswapV2Router: EXPIRED');\n    _;\n}\n\nwhich effectively reverts the transaction with the EXPIRED message if the deadline (4th parameter passed to the function) is lower than the block time.\nIn the linked transaction, you passed 1637842091 as the value of deadline, which is 2021-11-25 12:08:11 UTC. However, the block containing the transaction was mined approx. 1.5 hour later - at 2021-11-25 13:48:34 UTC. The deadline is lower than the block time, which caused the transaction to revert.\n\nSolution: Either provide higher gasPrice so that the transaction has higher probability of being mined within the 10 minute window (specified in the JS snippet), or increase the deadline value so that it's still valid at the time when the block is mined.","123":null,"124":null,"125":null,"126":"I would like to know if creating contracts in Solidity and placing them on the Ethereum network generates any monetary costs?\n\nWhen you deploy a smart contract onto the Ethereum <blockchain>, you must pay a small fee since you're storing bytes of code on the chain.\nThe cost of deployment depends on 4 things:\n\nThe amount of bytecode in the contract\nThe flat fee of 32k gas (create opcode)\nThe transaction data sent when deploying the contract\nAny code run before the creation of the contract (in the constructor)\n\n\nIf it generates any costs, can I create my own network with Solidity so as not to generate costs?\n\nYou can look into creating your own testnet, look into Ganache.","127":"it appears your env variables are not set correctly, and it looks like in this case it's your <web3>_INFURA_PROJECT_ID.\nYou can fix it by setting the variable in your .env file and adding dotenv: .env to your brownie-config.yaml.\nbrownie-config.yaml:\ndotenv: .env\n.env:\nexport <web3>_INFURA_PROJECT_ID=YOUR_PROJECT_ID_HERE\nRemember to save these files.\nAdditionally, you should be on at least brownie version v1.14.6. You can find out what version you're on with:\nbrownie --version","128":null,"129":null,"130":"It seems that the way to handle this is to foresee a separate login flow for the web app after all.\nEven when the user already has logged in into Tronlink, it needs to obtain a token to authenticate rest calls.\nThe way it would appear to work is by generating a random nonce and storing this nonce along with the public key in the User table.\nThe login flow then consists of signing the  nonce in the front-end, and verifying the signature in the backend after which the token will be generated and returned.","131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":"You don't need the 0x in the private key, just put the exact key you got from metamask :)","141":null,"142":"Problem is not module nor function but endpoint.\nIn Solana Doc I found endpoint for mainnet:\nhttps:\/\/api.mainnet-beta.solana.com\n\nhttps:\/\/solana-api.projectserum.com\n\nand it gives all values.\n\nOn other page you can see that\n\ndevnet is only playground for tests and tokens are not real\ntestnet is only for stress test and tokens are not real\n\n#Devnet#\n\n- Devnet serves as a playground for anyone who wants to take Solana for a test drive, as a user, token holder, app developer, or validator.\n- Application developers should target Devnet.\n- Potential validators should first target Devnet.\n- Key differences between Devnet and Mainnet Beta:\n    - Devnet tokens are not real\n    - Devnet includes a token faucet for airdrops for application testing\n    - Devnet may be subject to ledger resets\n    - Devnet typically runs a newer software version than Mainnet Beta\n\n#Testnet#\n\n-Testnet is where we stress test recent release features on a live cluster, particularly focused on network performance, stability and validator behavior.\n- Testnet tokens are not real\n- Testnet may be subject to ledger resets.\n- Testnet includes a token faucet for airdrops for application testing\n- Testnet typically runs a newer software release than both Devnet and Mainnet Beta\n\n\nMinimal working example for tests:\nfrom solana.rpc.api import Client\n\nall_addresses = [\n    '2AQdpHJ2JpcEgPiATUXjQxA8QmafFegfQwSLWSprPicm',\n    'Vote111111111111111111111111111111111111111',\n    'fake address',\n]\n\n#endpoint = 'https:\/\/api.devnet.solana.com'    # probably for `developing`\n#endpoint = 'https:\/\/api.testnet.solana.com'   # probably for `testing`\nendpoint = 'https:\/\/api.mainnet-beta.solana.com'\n#endpoint = 'https:\/\/solana-api.projectserum.com'\n\nsolana_client = Client(endpoint)\n\nfor address in all_addresses:\n    print('address:', address)\n    \n    #result = solana_client.get_confirmed_signature_for_address2(address, limit=1)\n    result = solana_client.get_signatures_for_address(address)#, before='89Tv9s2uMGaoxB8ZF1LV9nGa72GQ9RbkeyCDvfPviWesZ6ajZBFeHsTPfgwjGEnH7mpZa7jQBXAqjAfMrPirHt2')\n    \n    if 'result' in result:\n        print('len:', len(result['result']))\n\n        # I use `[:5]` to display only first 5 values\n        for number, item in enumerate(result['result'][:5], 1):\n            print(number, 'signature:', item['signature'])\n\n        # check if there is `4SNQ4h1vL9GkmSnojQsf8SZyFvQsaq62RCgops2UXFYag1Jc4MoWrjTg2ELwMqM1tQbn9qUcNc4tqX19EGHBqC5u`\n        for number, item in enumerate(result['result'], 1):\n            if item['signature'].startswith('4SN'):\n                print('found at', number, '>>>', item['signature'])\n\n    else:\n        # error message \n        print(result)\n\n    print('---')\n\n    #solana_client.get_account_info(address)\n\nResult:\naddress: 2AQdpHJ2JpcEgPiATUXjQxA8QmafFegfQwSLWSprPicm\nlen: 1000\n1 signature: 89Tv9s2uMGaoxB8ZF1LV9nGa72GQ9RbkeyCDvfPviWesZ6ajZBFeHsTPfgwjGEnH7mpZa7jQBXAqjAfMrPirHt2\n2 signature: 3Ku2rDnAVo5Mj3r9CVSGHJjvn4H9rxzDvc5Cg5uyeCC9oa6p7enAG88pSfRfxcqhBh2JiWSo7ZFEAD3mP8teS1Yg\n3 signature: 3wiYCmfXb9n6pT3mgBag7jx6jBjeKZowkYmeakMibw4GtERFyyitrmmoPU6t28HpJJgWkArymWEGWQj8eiojswoD\n4 signature: 5vjV1wKU3ZEgyzqXCKrJcJx5jGC8LPqRiJBwhPcu62HQU64mkrvkK8LKYaTzX4x4p26UXSufWM57zKSxRrMgjWn3\n5 signature: 3aLk4xZPcWRogtvsFe8geYC177PK8s47mgqUErteRc9NJ4EF2iHi3GPsaj5guTwyiabhwivFhrrEk4YQgiE2hZs8\nfound at 970 >>> 4SNQ4h1vL9GkmSnojQsf8SZyFvQsaq62RCgops2UXFYag1Jc4MoWrjTg2ELwMqM1tQbn9qUcNc4tqX19EGHBqC5u\n---\naddress: Vote111111111111111111111111111111111111111\nlen: 1000\n1 signature: 67RRbUWGCrwmJ3hhLL7aB2K8gc6MewxwgAdfG7FeXQBaSstacqvuo9QUPZ6nhqXjJwYpKHihNJwFfcaAZHuyFmMc\n2 signature: 67PsyRRw8bXgtsB49htxcW2FE9cyyBrocUKacnrxJpqaBpFT6QDLrCkyovWnM8XyGKxTv3kqzmW72SH7gj3N8YJr\n3 signature: 675FWqrAjE5Bt6rf3KD2H2PCKUmEtrcD8BRRypdS7m2V22zXhrGn3SktP6JYW4ws6xEqDj52MZMH8RwNjoqgW4mt\n4 signature: 671K7N9FwaMAyBC4MEYbYb1ACYAendBbRMqKPvr3h63dt5ybAPHyppjHwxq1yPDjqaRUwCBVU9o5dVqgsdVabint\n5 signature: 666jBXXLwmB5tuvufhNn8Q7A3eCzGo6CBFD5BYJkuGfBf1bRoAGz4DeEpUAKsUrRk4NdRBhYkwfrhyZjgFmo3Dp2\n---\naddress: fake address\n{'jsonrpc': '2.0', 'error': {'code': -32602, 'message': 'Invalid param: Invalid'}, 'id': 3}\n---\n\n\nBTW:\nBecause it gets only 1000 values you may not see 4SNQ... which is at position ~1200 at this moment, but if you use before=\nget_signatures_for_address(address, before='89Tv9s2uMGaoxB8ZF1LV9nGa72GQ9RbkeyCDvfPviWesZ6ajZBFeHsTPfgwjGEnH7mpZa7jQBXAqjAfMrPirHt2')\n\nthen it should be at position ~970\n\nBTW:\nOn Solana Explorer you have big button to change Mainnet to Devnet and when you use Devnet then\n2AQdpHJ2JpcEgPiATUXjQxA8QmafFegfQwSLWSprPicm also gives 0 items.\nThe same on Solana Beach. There is also big button to change Mainnet to Devnet and when you use Devnet then\n2AQdpHJ2JpcEgPiATUXjQxA8QmafFegfQwSLWSprPicm gives 0 items.","143":null,"144":null,"145":"I just got the solution, this is happening because I was trying to sync a bitcoin node that will sync around 400GB of data(approx) as mentioned by @David. So the solution to it was to make my bitcoin node, a test node it can be done by either making the testnet=1 or regtest=1. After this my bitcoin.conf file looks like this\nrpcuser=user\nrpcpassword=password\ntestnet=1\n[test]\nrpcbind=127.0.0.1\nrpcport=18332\n\nor if you want to use regtest then\nrpcuser=user\nrpcpassword=Password\nrpcallowip=127.0.0.1\nregtest=1\n[regtest]\nrpcbind=127.0.0.1\nrpcport=18443\n\nMake sure you use only one(either regtest or testnode). More details about options in config file can be found here.","146":"I will post this answer since the only other answer available in this post is wrong and the comments seem to be overseen.\nThe answer is no. Substrate, with its canonicalization of the database that can happen even before finalization, it's not possible to have a proper proof of work <blockchain>, as it's impossible to reverse blocks after canonicalization.\nIt was decided by the management of the project I'm working with to move off substrate because of this issue. Technical details here.\nI'm posting this information about substrate regardless of whether this design good or bad, it's what it's. I can see pros and cons to it.","147":null,"148":"FirstContract derives from ERC721 but your link at the end of the question points at ERC20 contract. So the definition of transfer() in the ERC20 is not relevant in this context.\n\nfirstContract._admin.transfer(value);\n\nThis snippet is attempting to use the Solidity native transfer() member of the address payable type, i.e. transfer ETH (not an ERC20 token). But it's failing because the firstContract._admin is not visible.\nIt would be visible if the FirstContract was a parent of SecondContract, as well as if the _admin had public visibility modifier. Since it doesn't have any visibility modifier specified, the default value internal is used.\n\nGive the _admin property the public visibility modifier\n\naddress payable public _admin;\n\nThen you need to change the call of firstContract._admin (property) to firstContract._admin() (function) because of the way that the compiler handles public properties in external contracts. See more about autogenerated getter functions in the docs.\n\nChange the call from the property to the function\n\nfirstContract._admin().transfer(value);\n\n\nMind that the SecondContract doesn't hold any ETH and currently has no way to receive any. So if you were trying to transfer() more than the current balance of the SecondContract (which is 0), the transaction would revert.\nFor testing purposes, you can add the payable modifier to the constructor and send it some ETH with the deployment transaction, so that you can test the transferValue().\nconstructor(address _address) payable {","149":"Access types:\npublic - can be used when contract was deployed, can be used in inherited contract\nexternal can be used when contract was deployed , can NOT be used in inherited contract\ninternal - can NOT be used when contract was deployed , can be used in inherited contract\nprivate - can NOT be used when contract was deployed, can NOT be used in inherited contract","150":null,"151":null,"152":null,"153":"Before calling mintPomoBot function, with the same account (msg.sender) you need to call approve(spender, amount) function on RoboToken smart contract where spender = NFTPomoBots' address and amount = 1","154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":"You're almost there. Given your example of a <blockchain> used for rental property use, I would assume that each transaction on the <blockchain> records who is currently renting the property. Using Alice and Bob as example names, let's say Alice is the current renter but her rental agreement has expired. If Bob wants to rent the place next, Alice would first transfer ownership back to the landlord, and from there the landlord would transfer ownership to Bob. On the <blockchain>, it would look something like this:\nAlice transfers ownership to Landlord\nLandlord transfers ownership to Bob\nNow, let say Bob wants to leave a review later on. How can we verify that Bob has been a previous renter? Well, it's simple. All we would need to do is go back through the <blockchain>'s history and check that rental ownership has been transferred to Bob at some point, which in this case it has. The <blockchain> is the database. Anyone who has had their names previously written down on the <blockchain> may leave a review.\nEDIT\nTo answer your question in the comments, how do we know that the transaction Alice transfers ownership to Landlord is true? Well, this transaction is considered valid if we can verify that Alice was the one to submit it. But how does this work?\nAlice would have been given a private key and a public key when setting up an address for the <blockchain>. You can think of the public key as a unique identifier for her, which in this case is just \u00e2\u0080\u009cAlice\u00e2\u0080\u009d since there\u00e2\u0080\u0099s no other Alice\u00e2\u0080\u0099s in this example. The private key is like a password: you need it in order to access your account and submit valid <transactions> to the <blockchain>.\nIn order for Alice to submit a valid transaction in her name, she would have to digitally sign it using her private key. There\u00e2\u0080\u0099s signing function that looks like this:\nSign(transaction, private key) = Signature\n\nGiven a transaction, Alice can use her private key to \u00e2\u0080\u009csign it\u00e2\u0080\u009d and produce a signature that\u00e2\u0080\u0099s sent to the miner. When the miner gets this transaction along with the signature, they can verify using a second function:\nVerify(transaction, Signature, public key) = True\/False\n\nUsing this function, the miner can verify if the transaction WAS in fact made with the private key associated with the public key. If it was, it\u00e2\u0080\u0099s a valid transaction and can be added to the <blockchain>.\nI don\u00e2\u0080\u0099t know the math behind these functions because it\u00e2\u0080\u0099s quite complicated, so unfortunately I can\u00e2\u0080\u0099t explain in detail here.\nI recommend watching 3Blue1Brown\u00e2\u0080\u0099s video on Bitcoin, which goes over digital signing. It\u00e2\u0080\u0099s a long video but it goes over all of the basics of understanding <blockchain> in an easy to understand way.\nEDIT 2\nIn your second follow up question, there would have to be a rule coded into the <blockchain> that the Landlord cannot rent out the property to anyone else while there is a current renter. In this case, if the Landlord tries to submit this transaction while Alice is renting:\nLandlord transfers ownership to Bob\nthe validator would go back in the <blockchain>'s history and check that the last renter has transferred ownership back to the Landlord, which in this case is not true. The <blockchain> would still have Alice recorded down as the current renter, and so this transaction would be considered invalid. Since Alice is the only with the private key to her account, she's the only one that can transfer ownership back to the Landlord so it can be rented again.","163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":"The behavior of miners and other nodes is determined by the specific protocol of the network. That is, either such a block can be considered invalid and not accepted as \"next\", or the block will be accepted, but the <transactions> included in it will be ignored. In some <blockchain>s, the miner who created such a block can be somehow fined - excluded from the pool of miners, deprived of part of the collateral.","174":null,"175":"Just rewrite your code like this in 'compile.js'.This work fine even in 0.8.0 version of solidity\nconst path = require('path');\nconst fs = require('fs');\nconst solc = require('solc');\n\nconst inboxpath = path.resolve(__dirname, 'Contracts', 'Inbox.sol');\nconst source = fs.readFileSync(inboxpath, 'UTF-8');\n\nvar input = {\n    language: 'Solidity',\n    sources: {\n        'Inbox.sol' : {\n            content: source\n        }\n    },\n    settings: {\n        outputSelection: {\n            '*': {\n                '*': [ '*' ]\n            }\n        }\n    }\n};\n\nvar output = JSON.parse(solc.compile(JSON.stringify(input)));\n\n\/\/ console.log(output.contracts['Inbox.sol']['Inbox']);\n\n\/\/ exports.abi = output.contracts['Inbox.sol']['Inbox'].abi;\n\/\/ exports.bytecode = output.contracts['Inbox.sol']['Inbox'].evm.bytecode.object;","176":null,"177":null,"178":null,"179":"Solidity source code is compiled to the EVM-compatible bytecode. Then you can deploy the bytecode to the actual live network.\nAfter you compile the code (using solc, short for the Solidity compiler), you can update it and recompile for as many times as you want.\n\nBut, I'm guessing you wanted to ask if you can update the code after you've deployed it to the network.\nThe simple answer is: No. Bytecode is immutable, and once you've deployed it, there's no way to change it.\nHaving said that, ... you can make use of the Proxy pattern, where you don't actually change the bytecode, just a pointer (value in storage) to an address that holds the contract implementation. This allows you to deploy a new version of your contract to a new implementation address (in the background), while users still interact with the original proxy address (in the front). See this page by OpenZeppelin for more details, code examples, and diagrams of how this works in more depth.\nAdvanced topic: Thanks to the combination of selfdestruct and create2 EVM opcodes, it's also possible to destroy the contract and redeploy it with new constructor params. This article sums it up neatly.","180":"You have peer discovery disabled in your code, usually, you do it when you specify peers you want to connect to but since you don't do it - the SDK client just didn't know to what peers it should connect so it connected to none of them, got 0 responses and threw an error. So I changed this line from your example:\ndiscovery: { enabled: false, asLocalhost: true }\n\nto:\ndiscovery: { enabled: true, asLocalhost: true }\n\nAnd it worked.","181":"Solution:\nReplace this:\nimport {Contract} from '@ethersproject\/contracts'\n\nFor this:\nimport {Contract} from '@usedapp\/core\/node_modules\/@ethersproject\/contracts'","182":null,"183":"I have not used v2.2 before but I have successfully used v1.4 and 2.1 before and what can tell you is that \"join <transactions>\" are submitted to the orderer in the network.\nThe orderer has a port number of 7050. So you can try the code below to see if your orderer is listening on port 7053 or 7050.\ntelnet localhost 7053\ntelnet localhost 7050\n\nBefore trying the codes, make sure you start your network.","184":"Should be some breaking changes. Most probably the copy of the example you have are old version. If you visit the latest readme, the new version should be initiated with:\nimport { create } from 'ipfs-http-client'\nconst client = create()\nconst client = create(new URL('http:\/\/127.0.0.1:5002'))\nconst { cid } = await client.add('Hello world!')\n\nYou can rollback to use the old version by specifiying the version no @, i.e. npm install ipfs-http-client@42.0.0. Instead of npm install ipfs-http-client which always pull the latest version (53.X now).\nIt's also possible to view your installed version in 'package.json' file to see the version you are using and edit with the version you need, 'delete node_modules' folder and re-run npm install. But this requires you to save, which needs a parameter -s, so to run is npm install -s ipfs-http-client\nVersion 42, sample code should be the one you are using 'https:\/\/github.com\/ipfs\/js-ipfs\/tree\/v42.0.0'.\nVersion 53(or the official 1.0 release), tells that there is a breaking change if you visit the official github site; where ipfs-http-client requires a create() and not to be used directly.","185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":"You should pass {\"withType\": true} to the sign method too.\nconst s1 = u8aToHex(alice.sign(actualPayload, {\"withType\": true}));\n\nsr25519 uses randomness for signing, so the results won't be the same, but they should have the same length.","192":null,"193":null,"194":null,"195":"A view function promises not to modify the contract state - such as not to modify storage variables. See the docs for more info.\nBut your code modifies the balance variable, which is a storage variable.\nfunction withdraw (uint wdraw_amt) public view returns(string memory error){\n    if(wdraw_amt<=balance){\n     balance -= wdraw_amt;    \/\/ <-- here\n    }\n\n\nand updates the balance according to the deposits and withdraws\n\nSince one of your requirements is to actually update the storage variable, you need to remove the view modifier in order to be able to do that.\nfunction withdraw (uint wdraw_amt) public returns(string memory error){\n\nUsers will then need to send a transaction (not a call) to execute the withdraw() function.\n\nWhen you have a function executed by a transaction (and not by a call), you can get the string output in two ways.\n\nRevert reason message\nfunction withdraw(uint wdraw_amt) public {\n    if (wdraw_amt <= balance) {\n        balance -= wdraw_amt;\n    } else {\n        revert(\"Insufficient Balance\");\n    }\n}\n\n\nEvent log\nevent Error(string _message);\n\nfunction withdraw(uint wdraw_amt) public {\n    if (wdraw_amt <= balance) {\n        balance -= wdraw_amt;\n    } else {\n        emit Error(\"Insufficient Balance\");\n    }\n}","196":null,"197":"You will need to check the docker log of the peer\ndocker logs <container id>\n\nThere is insufficient information provided to help you.","198":null,"199":null,"200":null,"201":"The current version of aggregation used is called \"OCR\" or \"Off-Chain Reporting\". FluxAggregator was the previous aggregation method. The code and contracts for OCR can be found in this repo:\nhttps:\/\/github.com\/smartcontractkit\/libocr\nRunning your own feeds isn't officially supported yet (this is being worked on), so there isn't any documentation, but it is possible to run your own feed using that code if you really need to. You could also aggregate a couple of \"Chainlink AnyAPI\" requests in your contract to simulate a feed.\nIf this is for a hackathon (or just to demo your app) and there's no existing data feed for the data you need, I'd suggest using the \"AnyAPI\" feature and a single Chainlink node, so you can focus on your application and not on building an oracle network. Once it's time to go to production\/mainnet, the Chainlink Labs team can assist you in making a decentralized oracle network. You can reach them here on the Chainlink website.\nReference: OCR Announcement Blog","202":null,"203":null,"204":"You've understood almost everything correctly.  The last bit to understand is that the buyer \/ seller are not the same thing as the recipient \/ sending token account.  Tokens (including NFTs) are stored in SPL token accounts, which are separate accounts from the buyer and seller, which are system accounts with SOL.\nIf you look at the transaction in the explorer: https:\/\/explorer.solana.com\/tx\/3sRxEfGD2VmrJmw3YsULDER42HW3W2eiAv74Tn41MoL1YQmtELDcEiRf29cBPfsxRVcqXCEkCmwPJNihxAtfRZ4S, you'll see that the buyer spending 50 SOL is indeed GWcJPnrAuMqN83D8wDvmtoAdGATJGLsCRvgZ85qxXP3j, but that the recipient token account is 7wuC7oveWkSoYoBR1WT5ZwMn62uQddSebWghQrQdFE72. GWcJPnrAuMqN83D8wDvmtoAdGATJGLsCRvgZ85qxXP3j cannot hold tokens, but 7wuC7oveWkSoYoBR1WT5ZwMn62uQddSebWghQrQdFE72 can, and is owned by GWcJPnrAuMqN83D8wDvmtoAdGATJGLsCRvgZ85qxXP3j.\nYou can read more about the Solana account model at https:\/\/docs.solana.com\/developing\/programming-model\/accounts and more info about the SPL token program at https:\/\/spl.solana.com\/token","205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":"Interestingly, I found this quote in the metaplex documentation:\n\nThe SPL Metadata program supports storing up to five co-creators that\nshare potential future profits from sales for the items as defined by\nseller_fee_basis_points . Each creator needs to be added as part of\nthe minting process and is required to approve metadata that was used\nin his name using the sign_metadata endpoint. Unverified artwork\ncannot be sold with Metaplex.\nDuring the first sale, creators share in 100% of the proceeds, while\nin follow up sales, they share in proceeds as a percentage determined\nby seller_fee_basis_points. Whether or not a metadata is considered in\nsecond sale or not is determined by the primary_sale_happened boolean\non the Metadata account.\n\nMy interpretation of this is that the expected behavior should be for the initial sale to get divided between creators using the ratios defined by each creator's share. Sounds like you're experiencing something different.\nKeep in mind that this documentation is for the parent project. Candy-machine-mint seems to be a fork and they may have altered some of that behavior.","212":null,"213":"First check your account balance : balance = <web3>.eth.getBalance(someAddress); then try to specify the gaslimit contractInstance.createProposal(\"ADHD\", \"Foo\", 2, {from: <web3>.eth.accounts[1], gas:3000000})","214":null,"215":"I cannot make a modifier to check the address.\n\nYou can, but the address needs to be in a variable, set after the contract B has been deployed.\npragma solidity ^0.8;\n\ncontract ContractA {\n    address contractB;\n    \n    modifier onlyContractB {\n        require(msg.sender == contractB);\n        _;\n    }\n\n    function foo() external onlyContractB {\n    }\n    \n    function setContractBAddress(address _contractB) external {\n        contractB = _contractB;\n    }\n}\n\npragma solidity ^0.8;\n\ninterface IContractA {\n    function foo() external;\n}\n\ncontract ContractB {\n    IContractA contractA;\n    \n    constructor(address _contractA) {\n        contractA = IContractA(_contractA);\n    }\n\n    function callFoo() external {\n        contractA.foo();\n    }\n\n}\n\n\nDeploy contract A\nDeploy contract B, passing it the \"A\" address in the constructor\nSet the contractB value in \"Contract A\".\n\nI left out any auth mechanism while setting the contractB address in ContractA for simplicity. In this example, anyone can set the address, which you probably don't want, and you should add a mechanism allowing only authorized senders to set the contractB value in ContractA.","216":"I believe the addresses are off:\nConstructor Arguments of your contract:\n-----Decoded View---------------\nArg [0] : vrfCoordinator (address): 0xa36085f69e2889c224210f603d836748e7dc0088\nArg [1] : link (address): 0xdd3782915140c8f3b190b5d67eac6dc5760c46e9\nArg [2] : keyHash (bytes32): 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4\nArg [3] : fee (uint256): 100000000000000000\nVia Chainlinks Docs:\nLINK    0xa36085F69e2889c224210F603D836748e7dC0088\nVRF Coordinator 0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9\nKey Hash    0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4\nFee 0.1 LINK\nSwitched Link and VRF are probably the culprit.","217":"Below is the step-by-step guide to create a bitcoin address via the Bash command line on Linux.\n\nWarning! See Edit #1 at the end.\n\nThis way you will understand how you can create an app (wallet) that generates Bitcoin addresses.\nWallet and public address are different things: a wallet is an application that creates and stores private keys and makes the public key available as the crypto address where the coins will be received.\nNote that the steps are incremental. The next step always has the copy of the previous step.\n# a1) Prerequisite of installed applications.\napt-get install -y openssl base58 grep xxd\n\n# a2) Choose a password.\nPASSWORD=\"my-difficult-passphrase\"\n\n# a3) Hash SHA256 over the password.\n#     Don't use echo because it adds \\n to the end.\nPASSWORD=\"my-difficult-passphrase\"; printf $PASSWORD | openssl sha256\n\n# a4) Keep only the hex output. We're going to use this often.\nPASSWORD=\"my-difficult-passphrase\"; printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# a5) Add two magic numbers...\n#     - at the beginning: 302e0201010420\n#     - and at the end: a00706052b8104000a\n#     They relate to secp256k1 refers to the parameters of the elliptic curve used in Bitcoin's <cryptography>.\nPASSWORD=\"my-difficult-passphrase\"; printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\"\n\n# a6) Get the bytes of this hex.\nPASSWORD=\"my-difficult-passphrase\"; printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps\n\n# a7) Generate the Elliptic-curve key pair.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps)\n\n# At this point we have the key pair.\n# b) With the public key we will make the bitcoin address.\n# c) The private key is converted to WIF format (Wallet Import Format)\n\n# b1) Extract the hex value from the public key.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n'\n\n# b2) Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps\n\n# b3) Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256\n\n# b4) Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# b5) Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps\n\n# b6) Hash RIPEMD-160.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160\n\n# b7) Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\"\n\n# b8) We prefix the hex with \"00\".\n#     Bitcoin P2PKH addresses begin with the version byte value 0x00.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\"\n\n# Now get a checksum by passing the SHA256 hash twice in the hex bytes.\n\n# b9) Checksum loop 1. Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps\n\n# b10) Checksum loop 1. Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256\n\n# b11) Checksum loop 1. Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# b12) Checksum loop 2. Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps\n\n# b13) Checksum loop 2. Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256\n\n# b14) Checksum loop 2. Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# b15) Get the first 4 bytes (or 8 chars) of the checksum.\nPASSWORD=\"my-difficult-passphrase\"; printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\"\n\n# Checksum completed here.\n\n# b16) Add the checksum to the end of the\n#      hex prefixed with \"00\" in step b8.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\")$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\"\n\n# b17) Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\")$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\" | xxd -r -ps\n\n# b18) Encode with Base58.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\")$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | grep -o \"[0-9a-f]\" | tr -d '\\n' | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl ripemd160 | grep -o \"[0-9a-f]\\{40\\}\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\" | xxd -r -ps | base58\n\n# Here the bitcoin address ends\n\n# c1) Extract the hex value from the private key.\nPASSWORD=\"my-difficult-passphrase\"; openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n'\n\n# c2) Ensures length of 32 bytes (or 64 chars) by padding with zeros.\nPASSWORD=\"my-difficult-passphrase\"; printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\"\n\n# c3) We prefix the hex with \"80\".\n#     The magic number 0x80 signals the version of the private key.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\"\n\n# Again: Now get a checksum by passing the SHA256 hash twice in the hex bytes.\n\n# c4) Checksum loop 1. Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps\n\n# c5) Checksum loop 1. Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256\n\n# c6) Checksum loop 1. Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# c7) Checksum loop 2. Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps\n\n# c8) Checksum loop 2. Hash SHA256.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256\n\n# c9) Checksum loop 2. Keep only the hex output.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\"\n\n# c10) Get the first 4 bytes (or 8 chars) of the checksum.\nPASSWORD=\"my-difficult-passphrase\"; printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\"\n\n# Checksum completed here.\n\n# c11) Add the checksum to the end of the\n#      hex prefixed with \"80\" in step c3.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\")$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\"\n\n# c12) Convert to bytes.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\")$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\" | xxd -r -ps\n\n# c13) Encode with Base58.\nPASSWORD=\"my-difficult-passphrase\"; printf \"$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\")$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\")a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | grep -o \"[0-9a-f]\" | tr -d '\\n')\" | grep -o \"[0-9a-f]\\{64\\}$\")\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | xxd -r -ps | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | grep -o \"^[0-9a-f]\\{8\\}\")\" | xxd -r -ps | base58\n\n# Here the private key as WIF ends\n\n\nBelow is the same sequence of steps in one line commands for Bash:\nPASSWORD=\"my-difficult-passphrase\"; printf \"\\nBitcoin Wallet\\n\\nPassword:\\n$PASSWORD\\n\\nPrivate Key:\\n$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | sha256sum | sed 's\/[^a-z0-9]\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | sed 's\/[ :]\/\/g' | tr -d '\\n')\" | sed 's\/.*\\(.\\{64\\}$\\)\/\\1\/')\\n\\nPrivate Key, WIF:\\n$(printf \"$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf $PASSWORD | openssl sha256 | sed 's\/^.*\\s\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | sed 's\/[ :]\/\/g' | tr -d '\\n')\" | sed 's\/.*\\(.\\{64\\}$\\)\/\\1\/')\")$(printf \"80$(printf \"0000000000000000000000000000000000000000000000000000000000000000$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | openssl sha256 | sed 's\/^.*\\s\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -10 | head -3 | sed 's\/[ :]\/\/g' | tr -d '\\n')\" | sed 's\/.*\\(.\\{64\\}$\\)\/\\1\/')\" | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | sed 's\/\\(.\\{8\\}\\).*\/\\1\/')\" | xxd -r -ps | base58)\\n\\nPublic Key:\\n$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | sha256sum | sed 's\/[^a-z0-9]\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | sed 's\/[ :]\/\/g' | tr -d '\\n')\\n\\nPublic Key, Wallet:\\n$(printf \"$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | openssl sha256 | sed 's\/^.*\\s\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | sed 's\/[ :]\/\/g' | tr -d '\\n' | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | xxd -r -ps | openssl ripemd160 | sed 's\/.*\\s\/\/' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g')\")$(printf \"00$(openssl ec -inform DER -text -noout -in <(printf \"302e0201010420$(printf \"$PASSWORD\" | openssl sha256 | sed 's\/^.*\\s\/\/g')a00706052b8104000a\" | xxd -r -ps) 2>\/dev\/null | tail -6 | head -5 | sed 's\/[ :]\/\/g' | tr -d '\\n' | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | xxd -r -ps | openssl ripemd160 | sed 's\/.*\\s\/\/' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g')\" | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | xxd -r -ps | openssl sha256 | sed 's\/^.*\\s\/\/g' | awk 'ORS=\" \"' | sed 's\/\\W\/\/g' | sed 's\/\\(.\\{8\\}\\).*\/\\1\/')\" | xxd -r -ps | base58)\\n\\n\"\n\nThe output of this command:\n\n\nNow the same one line command for PowerShell (perhaps for Windows).\n$password=\"my-difficult-passphrase\"; $tempFile=\"$env:temp\/btcaddress.tmp\"; [System.IO.File]::WriteAllText($tempFile, $password); $passwordSha256=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value; $passwordSha256Secp256k1=\"302e0201010420${passwordSha256}a00706052b8104000a\"; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($passwordSha256Secp256k1)); $keys=$($(openssl ec -inform DER -text -noout -in $tempFile | Select-String \"(?<=^\\s+)[0-9a-f:]+\").Matches | Select-Object -Property Value | ForEach-Object -Process {$_.Value.Replace(\":\", \"\")}); $keyPrivate=$keys[0]+$keys[1]+$keys[2]; $keyPublic=$keys[3]+$keys[4]+$keys[5]+$keys[6]+$keys[7]; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPublic)); $keyPublicSha256=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPublicSha256)); $keyPublicSha256Ripemd160=$(openssl ripemd160 $tempFile | Select-String \"[0-9a-f]{40}\").Matches[0].Value; $keyPublicSha256Ripemd160Prefixed=\"00\"+$keyPublicSha256Ripemd160; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPublicSha256Ripemd160Prefixed)); $keyPublicSha256Ripemd160Checksum=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPublicSha256Ripemd160Checksum)); $keyPublicSha256Ripemd160Checksum=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value.Substring(0, 8); $bitcoinKeyPublic=\"$keyPublicSha256Ripemd160Prefixed$keyPublicSha256Ripemd160Checksum\"; $keyPrivatePrefixed=\"80\"+$keyPrivate.PadLeft(64, '0'); [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPrivatePrefixed)); $keyPrivateChecksum=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value; [System.IO.File]::WriteAllBytes($tempFile, [System.Convert]::FromHexString($keyPrivateChecksum)); $keyPrivateChecksum=$(openssl sha256 $tempFile | Select-String \"[0-9a-f]{64}\").Matches[0].Value.Substring(0, 8); $bitcoinKeyPrivate=\"$keyPrivatePrefixed$keyPrivateChecksum\"; function Base58 { param ([parameter(valuefrompipeline=$true)] [string]$1) $i=[bigint]::Parse($1,\"AllowHexSpecifier\"); $chars=@(); $index =@('1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','J','K','L','M','N','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','m','n','o','p','q','r','s','t','u','v','w','x','y','z'); if (($1).length % 2 -ne 0 -OR $i -lt 0) { $1=\"0$1\"; $i=[bigint]::Parse($1, \"AllowHexSpecifier\"); } while($i -gt 0) { $m=([bigInt]$i % 58); $i=([bigInt]$i \/ 58); $chars+=$index[$m]; } [array]::reverse($chars); $i=$chars -join (''); $1 -split \"(..)\" | ForEach-Object { if ($_ -match \"00\") { $i=(\"1\"+$i); } else { return; } }; $chars=@(); $chars.clear(); $index=@(); $index.clear(); return $i; }; $bitcoinKeyPrivateBase58=Base58($bitcoinKeyPrivate); $bitcoinKeyPublicBase58=Base58($bitcoinKeyPublic); [System.IO.File]::Delete($tempFile); Write-Output \"Bitcoin Wallet`n`nPassword:`n$password`n`nPrivate Key:`n$keyPrivate`n`nPrivate Key, WIF:`n$bitcoinKeyPrivateBase58`n`nPublic Key:`n$keyPublic`n`nPublic Key, Wallet:`n$bitcoinKeyPublicBase58`n`n\"\n\nThe output of this command:\n\n\nFor the above commands just copy and paste into the terminal.\nYou can check the generated data on other sites. Use the same password in Brain Wallet mode and uncheck \"Compressed address\".\nBitAddress.org\n\nCoinb.in\n\n\nEdit #1\nBetween steps a4 and a5 we have a very large number as a result. But not all numbers in the 2^256 range are on the mathematical secp256k1 elliptic curve used for finding a matching public key. The range, is actually from 0 to 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 (in decimal: 115792089237316195423570985008687907852837564279074904382605163141518161494337), as defined in the SEC2 standard. Read more about DOES THAT MEAN THERE ARE 2^256 POSSIBLE PRIVATE KEYS?.\nCheck if the hash is less than this value. The following command displays the hash value in decimal numeric format:\nPASSWORD=\"my-difficult-passphrase\"; echo \"ibase=16; $(printf $PASSWORD | openssl sha256 | grep -o \"[0-9a-f]\\{64\\}\" | tr a-z A-Z)\" | bc | awk 'ORS=\" \"' | sed 's\/\\W\/\/g'","218":null,"219":null,"220":null,"221":null,"222":null,"223":"let <web3> = require('@solana\/<web3>.js');\nlet splToken = require('@solana\/spl-token');\n\n\/\/ load up the first 32 bytes of the 64 byte array that was in our keyfile.json\n\/\/ Only need the first 32 bytes so I use slice() just to make sure it's the correct length\nlet firstWinPrivKey = [237,158,92,107,132,192,1,57,8,20,213,108,29,227,37,8,3,105,196,244,8,221,184,199,62,253,98,131,33,165,165,215,14,7,46,23,221,242,240,226,94,79,161,31,192,163,13,25,106,53,34,215,83,124,162,156,8,97,194,180,213,179,33,68]\n    .slice(0,32);\n  \/\/ print the length of the array so we know it is correct\n  \/\/ the fromSeed() method requires 32 bytes\n\n console.log(firstWinPrivKey.length);\n  let firstWinWallet = <web3>.Keypair.fromSeed(Uint8Array.from(firstWinPrivKey));\n  console.log(firstWinWallet.secretKey);\n  console.log(firstWinWallet.publicKey.toString());\n\nNotice that you have to cast the array to a Uint8Array (Uint8Array.from())\nWhen we print out the secretKey, you'll see the same bytes you passed in.\nAnd finally when we print out the publicKey you'll see that same value that we saw with the command line\n> solana address\nNow you can use the wallet in code.\nHere's the final output from this short script:\n32\nUint8Array(64) [\n  237, 158,  92, 107, 132, 192,   1,  57,   8,  20, 213,\n  108,  29, 227,  37,   8,   3, 105, 196, 244,   8, 221,\n  184, 199,  62, 253,  98, 131,  33, 165, 165, 215,  14,\n    7,  46,  23, 221, 242, 240, 226,  94,  79, 161,  31,\n  192, 163,  13,  25, 106,  53,  34, 215,  83, 124, 162,\n  156,   8,  97, 194, 180, 213, 179,  33,  68\n]\nwm4MapPtFaUoSsyBJppVnChYMGvHzTeAL6BNZ5GmSqH","224":null,"225":"BSC and Ethereum smart contracts only have access to the current state - not to historical states at previous blocks.\nAlso, there's currently no EVM opcode (hence no Solidity function) to look up the amount of <transactions> by an address.\n\nIf your use case allows to use off-chain tools, one of the ways to get the count of outgoing <transactions> by an address is the <web3> method getTransactionCount() (wrapper for the eth_getTransactionCount RPC method). If your provider is an archive node (and allows requesting historic states), you can get the transaction count at two specific blocks and compare the values, which will give you the count difference between the specified blocks.","226":"You can simply enroll your new user cryptographic material (MSP and TLS) from your CA and deploy a client container analog to the admin one, but pointing to the new material (with different volumes and env variables CORE_PEER_ID, CORE_PEER_MSPCONFIGPATH, etc.).\nAnyone, at any point you are going to need to develop a client application with the SDK to implement more complex operations and execution flows.\nYou can also look for some higher level tool. IBM <blockchain> Platform extension for VSCode is a good one.","227":"In order to get going initially, <geth> uses a set of bootstrap nodes whose endpoints are recorded in the source code.\n\nSource: <geth> docs\nHere's the list of the bootstrap nodes hardcoded in the <geth> source code: https:\/\/github.com\/ethereum\/go-ethereum\/blob\/v1.10.11\/params\/bootnodes.go#L23\nThe --bootnodes option allows you to overwrite this list with your own. Example from the above linked docs:\n<geth> --bootnodes enode:\/\/pubkey1@ip1:port1,enode:\/\/pubkey2@ip2:port2,enode:\/\/pubkey3@ip3:port3","228":null,"229":"You should either call the build function with await\nconst priceFetcher = await UniswapTokenPriceFetcher.build(token1, token2)\n\nor followed by then\nUniswapTokenPriceFetcher.build(token1, token2).then(priceFetcher => {...})\n\nI don't see any other way.","230":null,"231":"I looked at the dependencies in the codesandbox page and it imports globally the buffer package. I tried doing the same locally with require('buffer\/'), but no luck. However, it works using it as const Buffer = require('buffer\/').Buffer and calling the method Buffer.from to get the buffer from the serialized data.\nconst Buffer = require('buffer\/').Buffer\n...\nconst buf = Buffer.from(borsh.serialize(schema, task));","232":"remove default localhost account (i.e. Localhost 8545 ) first and then add the new network with details and chain ID as 1337","233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":"If you're using Anchor, that likely means that you're on-chain.  To get the supply of a token mint on-chain, you'll need to pass it in to your program, deserialize the data in the account as a Token Mint, and then read the supply field.\nHere's an example of a test doing that: https:\/\/github.com\/solana-labs\/solana-program-library\/blob\/756696ee8e7b8dbe640113079ba11447ba3524c1\/token\/program\/src\/processor.rs#L4234-L4235","240":null,"241":"Ah, I got the answer to my problem elsewhere. It turns out that my assumption that the Concordium node requires a secure connection was wrong, in fact it doesn't support secure connections, so the URL was the wrong part.\nSo to fix the problem, I needed to create the client like this:\n\/\/ to allow non secure connections\nAppContext.SetSwitch(\"System.Net.Http.SocketsHttpHandler.Http2UnencryptedSupport\", true);\n\nusing var channel = GrpcChannel.ForAddress(\"http:\/\/192.168.1.18:10001\");","242":null,"243":null,"244":null,"245":null,"246":"That's right, everything is indeed public, so if you want to get the balance for someone else's account, you can simply use getBalance if it's SOL (https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#getbalance) or getTokenAccountBalance if it's an SPL Token account (https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#gettokenaccountbalance).","247":null,"248":null,"249":"If you want the name of the token and other pieces of metadata, you likely want to query the Solana token-list.  Check out the repo at https:\/\/github.com\/solana-labs\/token-list","250":"You begin talking about a \"member\", but later you talk about a \"peer\".\nYou cannot restrict operations per peer. Every peer joined to the channel with the chaincode installed must proceed in the same way, so that the chaincode works in a deterministic way.\nBut you can, of course, restrict operations for the requestor, by evaluating its user ID, MSP ID, certificate attributes or whatever you want. For instance, in Go chaincodes, it is usually evaluated in BeforeTransaction function:\n\ntype SmartContract struct {\n    contractapi.Contract\n}\n\nfunc checkACL(ctx contractapi.TransactionContextInterface) error {\n    \/\/ Read incoming data from stub\n    stub := ctx.GetStub()\n\n    \/\/ Extract operation name\n    operation, parameters := stub.GetFunctionAndParameters()\n    operationSplitted := strings.Split(operation, \":\")\n    operationName := operationSplitted[len(operationSplitted)-1]\n\n    \/\/ Get requestor info from stub\n    mspID, err := cid.GetMSPID(stub)\n    userID, err := cid.GetID(stub)\n    value, found, err := cid.GetAttributeValue(stub, \"role\")\n\n    \/\/ Evaluate your ACLs by contrasting the operation and the requestor your own way\n    \/\/ ...\n\n    \/\/ Return error when disallowed\n\n    \/\/ Operation allowed\n    return nil\n}\n\nfunc BeforeTransaction(ctx contractapi.TransactionContextInterface) error {\n    return checkACL(ctx)\n}\n\nfunc NewSmartContract() *SmartContract {\n    sc := new(SmartContract)\n    sc.BeforeTransaction = BeforeTransaction\n    \/\/ ...\n    return sc\n}","251":null,"252":null,"253":"Your\n        function kill() public onlyOwner \n        {\n            selfdestrct(owner);\n        }\n\nInside of another function, move it outside, and everything will works. Please, check closing brakets }.\nAlso You will want to fix the typo selfdestruct\nHere is working code:\n\/\/ SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ncontract CrowdFunding \n{\n    \n    struct Investor\n    {\n        address payable addr;\n        uint amount;\n    }\n    \n    address payable public owner;       \n    uint public NumOfInvestors; \n    uint public deadline;       \n    string public status;       \n    bool public isOver;         \n    uint public goalAmount;     \n    uint public totalAmount;    \n    mapping (uint => Investor) public investors; \n    \n    modifier onlyOwner () \n    {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    \n    function crowdfunding(uint _duration, uint _goalAmount) public\n    {\n        owner == msg.sender;\n        deadline = block.timestamp + _duration;\n        \n        goalAmount = _goalAmount;\n        status = \"Funding\";\n        isOver = false;\n        NumOfInvestors = 0;\n        totalAmount = 0;\n    }\n    \n    \n    function fund() payable public\n    {\n       \n        require(!isOver);\n        \n        Investor storage inv = investors[NumOfInvestors++]; \n        inv.addr = payable(msg.sender);                      \n        inv.amount = msg.value;                     \n        totalAmount += inv.amount;\n    }\n    \n   \n    function checkGoalReached () public onlyOwner \n    {\n        \n        \n        require(!isOver);\n        \n        \n        require(block.timestamp >= deadline);\n        \n        if(totalAmount >= goalAmount) \n        {  \n            status = \"Campaign succeeded.\";\n            isOver = true;\n            \n            address payable self = payable(address(this));\n            uint256 balance = self.balance;\n            if(!owner.send(balance)) \n            {\n                revert();\n            }\n            else \n            { \n                \n                uint i = 0;\n                status = \"Campaign Failed.\";\n                isOver = true;\n                \n                while (i <= NumOfInvestors) \n                {\n                    \n                    if(!investors[i].addr.send(investors[i].amount)) \n                    {\n                        revert();   \n                    }\n                    \n                    i++;\n                }\n            }\n        }\n        \n        \n\n    }\n        function kill() public onlyOwner \n        {\n            selfdestruct(owner);\n        }\n}","254":"You can define an interface of the target contract in the source contract. Example:\nTargetContract, deployed on the 0x123 address:\npragma solidity ^0.8;\n\ncontract TargetContract {\n    function foo() external pure returns (bool) {\n        return true;\n    }\n}\n\nSourceContract, pointing to the 0x123 TargetContract\npragma solidity ^0.8;\n\ninterface ITargetContract {\n    function foo() external returns (bool);\n}\n\ncontract SourceContract {\n    function baz() external {\n        ITargetContract targetContract = ITargetContract(address(0x123));\n        bool returnedValue = targetContract.foo();\n    }\n}","255":"near-seed-phrase works just fine, and the key generated by it is used for account creation (proof), but then Wallet generates a new random keypair and adds it to the account (proof) and stores it in the Local Storage of the browser. Thus, if you compare the key in the local storage, that won't match the one that is derived from the seed phrase since Wallet does not want you to invalidate your seed phrase after you sign in from a new device (you should be able to just remove the access key after you are done with the session).\nLet's re-iterate, Wallet only uses the key derived from the seed phrase to add a fresh key to a given account, and never stores the seed phrase or the key derived from the seed phrase in the local storage.","256":null,"257":"1. Can <blockchain> be implemented without cryptocurrency ?\n\nYes. <blockchain> is a way of storing data, where each block is chained to the previous one. For example:\nBlock 1:\n{\n    data: 'foo',\n    previousHash: '0000000000000000000000000000000000000000000000000000000000000000'\n};\n\nBlock 2:\n{\n    data: 'bar',\n    previousHash: 'd807da8ba0473afd6cb13d465d21e2d1e0e14598d8555afe5fe3e88c7e114b05'\n};\n\nwhere the previousHash in \"Block 2\" is the hash of the \"Block 1\".\n\n\n2. Are apps built on Ganache centralized or decentralized ?\n\nGanache is a local <blockchain> and Ethereum-like network emulator usually used for development and testing. Multiple instances of Ganache are not able to communicate with each other, so by this definition it's a centralized system.\nHowever, apps that are built and tested locally on Ganache, can be deployed to decentralized networks such as Ethereum Ropsten testnet, Ethereum Mainnet, BSC Mainnet, etc.\n\n\n3. Does every smart contract, Decentralized application, Ethereum Transaction, all of it live on One Giant <blockchain> which is the Ethereum Main Network ?\n\nSmart contracts and <transactions> - yes, they all are stored in the Ethereum network <blockchain>.\nDApps - they are usually consisted of smart contracts (see above) and off-chain apps (usually written in JavaScript and other web languages) that are usually hosted on a private server or a regular shared hosting.\n\nHow is that manageable\n\nCurrently, the Ethereum <blockchain> size is between 0.5 TB and 1 TB, depending on what node software you're using, and it's growing over time (source). It's discouraged here at StackOverflow to present personal opinions so I'll leave it to your decision if that's manageable or not. :)","258":"Since you're storing to the mapping under the same key (dictConfirmAccess[_nik] = ...), the value gets overwritten.\nUsing the Remix VM emulator, it's currently not possible to access the previous states.\nIf this situation happened on a live network, you could connect to an archive node and retrieve the historical value using the combination of\n\nthe storage slot number\ndeterminable, based on the property order in the contract and the mapping key - source\n\nand the block number\nfor which you want to get the value\n\n\nFor example using the <web3> getStorageAt method\nconst historicalValue = await <web3>.eth.getStorageAt(\n    contractAddress,\n    storageSlotNumber,\n    blockNumber\n);\n\nNote that the historical values are accessible only using off-chain tools and are not accessible from the contract itself (or other contracts).","259":null,"260":null,"261":"This ability is not exposed for now on the JS side. To do this properly, we would need to expose this struct definition: https:\/\/github.com\/solana-labs\/solana-program-library\/blob\/e8b7009cc4d8cdd87232ccfc9ce93ab203ada496\/token\/js\/client\/token.js#L1519\nOn your side, for testing, you can copy that struct layout, then call decode on the transaction data to deserialize it.  In (untested) code, this would look like:\nconst decodedTransaction = Transaction.from(encodedTransaction);\nconst TransferInstructionLayout = BufferLayout.struct([\n    BufferLayout.u8('instruction'),\n    Layout.uint64('amount'),\n]);\nconst instructionData = TransferInstructionLayout.decode(decodedTransaction.instructions[0].data);\nconsole.log(instructionData.amount);\n\nThere may be some steps missing, but this will get you most of the way there! And if you want to add a PR to expose these, then everyone else can use them.","262":"go 1.17.2 isn't a supported version for fabric-ca 1.5.2 check the release notes for the supported version here https:\/\/github.com\/<hyperledger>\/fabric-ca\/releases\/tag\/v1.5.2\nhowever there is also an issue with a dependency that has changed an api such that using the -u option on go get means that it will download and use an incompatible version. This applies only to the server so for the server\ngo get github.com\/<hyperledger>\/fabric-ca\/cmd\/fabric-ca-server\n\nshould work, but you can also do\ngo get github.com\/<hyperledger>\/fabric-ca\/cmd\/...\n\nto include a client build as well\nYou can of course just get official builds from https:\/\/github.com\/<hyperledger>\/fabric-ca\/releases\/tag\/v1.5.2","263":"I got stuck with this problem for a week.\nI imported <web3> unity package in my project and use [DllImport(\"__internal\")] for connecting its function in <web3>.jslib plugin.\nusing System;\nusing System.Runtime.InteropServices;\nusing UnityEngine;\nusing UnityEngine.SceneManagement; \npublic class MobileLogin : MonoBehaviour\n{\n    [DllImport(\"__Internal\")]\n    private static extern void MobileConnect();\n\n    [DllImport(\"__Internal\")]\n    private static extern string ConnectAccount();\n\n    [DllImport(\"__Internal\")]\n    private static extern void SetConnectAccount(string value);\n\nprivate int expirationTime;\nprivate string account; \n\npublic void OnLogin()\n{\n    MobileConnect();\n    OnConnected();\n}\n\nasync private void OnConnected()\n{\n    account = ConnectAccount();\n    while (account == \"\") {\n        await new WaitForSeconds(1f);\n        account = ConnectAccount();\n    };\n    \/\/ save account for next scene\n    PlayerPrefs.SetString(\"Account\", account);\n    \/\/ reset login message\n    SetConnectAccount(\"\");\n    \/\/ load next scene\n    SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex + 1);\n}\n\npublic void OnSkip(){\n    \/\/ move to next scene\n    SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex + 1);    \n}}\n\nBut when it runs, I got with this error:\nEntryPointNotFoundException: MobileConnect\nWebLogin.OnLogin () (at Assets\/<web3>Unity\/Scripts\/Scenes\/WebLogin.cs:23)\nUnityEngine.Events.InvokableCall.Invoke () (at \n<7d87237cea3743d093e22c5b98f74fba>:0)\nUnityEngine.Events.UnityEvent.Invoke () (at \n<7d87237cea3743d093e22c5b98f74fba>:0)","264":null,"265":null,"266":null,"267":"It's complicated. A state in a CorDapp is a simple Java class, but its information is spread in multiple tables, depending on its history, its status that changes and on how you use that state  (e.g. if you make a token out of it with Token SDK).\nThe only reasonable way to get this information is to query the database you are using to monitor the size of the vault tables throughout the lifecycle of the states and make some calculation.","268":null,"269":"What you want to do is to take information from a Token like uniswap\nuniswap didn't save all the existing tokens, that's an impossible thing to do\nevery time you write the address of a token on uniswap, it makes requests to the smart contract, calling up existing functions thanks to the ERC-20 standard\nthe functions that are called are\ntotalSupply() \/\/ to get the total supply\n\ndecimals() \/\/ to get the number of decimals\n\nname() \/\/ to get the name of the token (e.g. Bitcoin)\n\nsymbol() \/\/ to get the symbol of the token (e.g. BTC)\n\nto obtain this data you have to make a call through <web3>, which will return the data you request\n\/\/ initialize <web3>\nconst <web3> = require(\"<web3>\");\n\n\/\/ save only the ABI of the standard, so you can re-use them for all the tokens\n\/\/ in this ABI you can find only the function totalSupply ()\nconst ABI = [\n     {\n         \"type\": \"function\",\n         \"name\": \"totalSupply\",\n         \"inputs\": [],\n         \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n         \"stateMutability\": \"view\",\n         \"payable\": false,\n         \"constant\": true \/\/ for backward-compatibility\n     }\n];\n\n\/\/ run the JS function\nasync function run() {\n     const <web3> = new <web3>(<YourNodeUrl>);\n\/\/ create the <web3> contract\n     const contract = new <web3>.eth.Contract(ABI, <TokenAddress>);\n\/\/ call the function and get the totalSupply\n     const totalSupply = await contract.methods.totalSupply().call();\n     console.log(totalSupply);\n}","270":null,"271":null,"272":"The RPC method that you're using does not exist.  You'll want to use getBalance to get the SOL on the wallet: https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#getbalance\nTo get all of the non-SOL token balances owned by that wallet, you'll have to use getTokenAccountsByOwner using that wallet id: https:\/\/docs.solana.com\/developing\/clients\/jsonrpc-api#gettokenaccountsbyowner","273":"as you can read on that contract\n\/\/ given an input amount of an asset and pair reserves, returns the maximum output amount of the other asset\n\nwith that function u can find that\nevery token have to be declared with all their decimals, so if WETH have 18 decimals, and you want to put 1000 WETH, you need to write 1000000000000000000000\nsame thing for tokens","274":"Maintain a local ACID-compliant of <transactions> and used nonces before broadcasting them out. An example here.","275":null,"276":null,"277":null,"278":null,"279":null,"280":"You can get the size of the transaction from SignedTransaction.txBits.size, for example from the SignedTransaction object returned when you sign the transaction or when you call FinalityFlow:\nval finalTx = subFlow(FinalityFlow(signedTx, listOf(session))).txBits.size\n\nTo access the NODE_TRANSACTION table there are no direct APIs, but you can create a JDBC session from the serviceHub, for example:\nserviceHub.jdbcSession().createStatement()\n.execute(\"SELECT * FROM NODE_TRANSACTION WHERE XXXX;\")","281":"The problem was the data was being saved correctly but when fetching the records solidity was assigning msg.sender to the creator of the contract not the one who sent the transaction. So, in order to deal with this I am sending the user address from frontend in the call function and receiving the address as a parameter in the respective functions. So instead of using the msg.sender I am using the address that I am receiving from frontend.","282":"You can use Multicall contract for small wins. A proper solution is indexers like TheGraph that continuously read the <blockchain> and keep the data available indexed.","283":"Here is a thesis of IPFS + Hadoop for Big Data analysis.\nhttps:\/\/www.cse.unsw.edu.au\/~hpaik\/thesis\/showcases\/16s2\/scott_brisbane.pdf (1 slide summing up)\nhttps:\/\/s3-ap-southeast-2.amazonaws.com\/scott-brisbane-thesis\/decentralising-big-data-processing.pdf (actual paper)","284":null,"285":null,"286":null,"287":null,"288":null,"289":"In most cases args will be base64 encoded JSON string.\nHere's an example of how we decode them on NEAR Indexer for Explorer side.\nActionView::FunctionCall {\n    method_name,\n    args,\n    gas,\n    deposit,\n} => {\n    if let Ok(decoded_args) = base64::decode(args) {\n        if let Ok(mut args_json) = serde_json::from_slice(&decoded_args) {\n            escape_json(&mut args_json);\n            arguments[\"args_json\"] = args_json;\n        }\n    }\n\n\nIs this in developers hand and could be any binary format?\n\nYes.\nRainbow Bridge-related <transactions> have borsh-serialized args which are not possible to decode into JSON.\nref: https:\/\/github.com\/near\/near-indexer-for-explorer\/blob\/master\/src\/models\/serializers.rs#L94-L103","290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":"In the 'Job Spec' section, you can see the oracle address in the initiator part of the JSON spec. In the example above, it's 0x0a31078cd57d23bf9e8e8f1ba78356ca2090569e","297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":"Your are near to finish that stuff but I will write down desired solution. Please have a look.\n $url=\"https:\/\/<blockchain>.info\/multiaddr?active=1AT4ES3ee1N6iBzzbdK8xvcAV3CBTRKcbS|1FHcYth4LRJMwNx2y8NR5DH7sYCiVzXs3Y&n=1\";\n $value = file_get_contents($url);\n $FinalBalance = $value;\n $data=json_decode($FinalBalance);\n echo $data->wallet->final_balance;\n echo $data->addresses[0]->final_balance;\n echo $data->addresses[1]->final_balance;\n exit;\n\nYou are going to access the inner object so you have to provide proper reference whether it is an array or an object.","305":null,"306":null,"307":"In version pragma solidity ^0.8.9, my working code looks like this\nInbox.sol\npragma solidity ^0.8.9;\n\ncontract Inbox {\n    string public message;\n    \n    constructor(string memory initialMessage) {\n        message = initialMessage;\n    }\n    \n    function setMessage(string memory newMessage) public {\n        message = newMessage;\n    }\n}\n\ncompile.js\nconst path = require('path');\nconst fs = require('fs');\nconst solc = require('solc');\n\nconst inboxPath = path.resolve(__dirname, 'contracts', 'Inbox.sol');\nconst source = fs.readFileSync(inboxPath, 'utf8');\n\nconst input = {\n    language: 'Solidity',\n    sources: {\n        'Inbox.sol': {\n            content: source,\n        },\n    },\n    settings: {\n        outputSelection: {\n            '*': {\n                '*': ['*'],\n            },\n        },\n    },\n};\n\nmodule.exports = JSON.parse(solc.compile(JSON.stringify(input))).contracts['Inbox.sol'].Inbox;\n\nInbox.test.js\nconst assert = require('assert');\nconst ganache = require('ganache-cli');\nconst <web3> = require('<web3>');\nconst <web3> = new <web3>(ganache.provider());\n\nconst { abi, evm } = require('..\/compile');\n\nlet accounts;\nlet inbox;\n\nbeforeEach(async () => {\n    \/\/ Get a list of all accounts\n    accounts = await <web3>.eth.getAccounts();\n    inbox = await new <web3>.eth.Contract(abi)\n        .deploy({\n            data: evm.bytecode.object,\n            arguments: ['Hi there!'],\n        })\n        .send({ from: accounts[0], gas: '1000000' });\n});\n\ndescribe('Inbox', () => {\n    it('deploys a contract', () => {\n        console.log(inbox);\n    });\n});","308":null,"309":null,"310":"The error is caused by a typo.\nChange the unit256 to uint256 (unsigned integer).","311":null,"312":"You can write a script and use docker file to run all these commands or a simple shell script file which fulfils all these details.","313":null,"314":null,"315":"I have solved this by contacting opensea support. It seems they distinguish contracts of marketplaces and collectibles by your introduction. So I created a ticket at opensea support website and told them we are a marketplace. Not a collectible or collection. They are really slow though. It took about 15 days for us to change our smart contract tokens' creators.","316":null,"317":"That \"data\" field is encoded in base64 and it represents the Input Data field available in explorer:\nhttps:\/\/testnet-explorer.elrond.com\/<transactions>\/89a15e2ea521764d21ac2de83064dd7c1848f83dff4dcbad0518fdf41a70d889\n\nESDTNFTTransfer@4d45584641524d2d623933653630@01234f@059e1d46a9c3b89ca2@000000000000000005004f79ec44bb13372b5ac9d996d749120f476427627ceb@636f6d706f756e6452657761726473\n\nIt can be decoded using an online base64 decoder.","318":"Is there some standardization on how this ID is assigned?\n\nThe ERC-721 standard explicitly states that there is no standard to assign the ID (except for the uint256 datatype):\n\nWhile some ERC-721 smart contracts may find it convenient to start with ID 0 and simply increment by one for each new NFT, callers SHALL NOT assume that ID numbers have any specific pattern to them, and MUST treat the ID as a \u00e2\u0080\u009cblack box\u00e2\u0080\u009d.\n\n\n\ne.g., do you really own this tweet, or do you only own it if you apply the tweet->token ID mapping\n\nToken ownership does not mean that you own the underlying resource. It only means that you own the token (representing the resource).\n\n\nCould you provide a few examples of how exactly is the token ID assigned to some (well-known) NFTs?\n\n\nCryptoKitties - link, line 412, incrementing\nuint256 newKittenId = kitties.push(_kitty) - 1;\n\n\nCryptoPunks - link, lines 73 and 83, assigning ID set by the (authorized) caller\nmapping (uint => address) public punkIndexToAddress;\n\nfunction setInitialOwner(address to, uint punkIndex) {\n    \/\/ ...\n    punkIndexToAddress[punkIndex] = to;","319":"Does your wallet have enough ETH on it to pay for gas?\nIf you don't have enough ETH in your wallet, that means you cannot pay the gas fee when the scripts run. Place some ETH into your mainnet wallet and that will fix this issue.","320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":"The issue was with this line, making the artist ID all uppercase.\n\n\nconst artistID = validator.validated.data.artist.toUpperCase() \/\/ Changed this \nconst artistID = validator.validated.data.artist \/\/ To this","327":"You are missing double spending problem. If you have some amount of currency you can create unlimited amount of valid <transactions>. How you would know which one is correct?\nThis is why Proof-of-Work was implemented. It allows nodes to check which <transactions> are valid, and which try to double spend.","328":null,"329":"It is unlikely you can gas optimize this even further.\nYou will hit the block size limit with 10,000 <transactions>.\nFor operations that cannot fit into one Ethereum transaction, must be done in batches.\nJust set first 0...1000 addresses in one transaction, then 1000 ... 2000.\nAlternative you can use some kind of Merkle tree claim process to optimise the Ethereum state size and push the gas cost to the user.","330":null,"331":null,"332":null,"333":"You can loop through all Transfer() events emitted by the collection contract.\nYou're looking for transfers from address 0x0 (minted tokens). And excluding from the list transfers to address 0x0 (destroyed tokens).\nOne way to achieve this is by using the <web3> Contract getPastEvents() function (docs).\nconst myContract = new <web3>.eth.Contract(abiJson, contractAddress);\nmyContract.getPastEvents('Transfer', {\n    filter: {\n        _from: '0x0000000000000000000000000000000000000000'\n    },\n    fromBlock: 0\n}).then((events) => {\n    for (let event of events) {\n        console.log(event.returnValues._tokenId);\n    }\n});","334":null,"335":null,"336":"Using API\nhttps:\/\/api.elrond.com\/usernames\/<herotag>\n\nE.g.:\nhttps:\/\/api.elrond.com\/usernames\/event\nredirects to\nhttps:\/\/api.elrond.com\/accounts\/erd1hw78kxyj353x52hmmq6dzxgexynwt4m29q2uvpq6xdm90z3halvsl7cn6g\nand returns\n{\n  \"address\": \"erd1hw78kxyj353x52hmmq6dzxgexynwt4m29q2uvpq6xdm90z3halvsl7cn6g\",\n  \"nonce\": 7,\n  \"balance\": \"254914476000000000\",\n  \"rootHash\": \"QU6o17Qw4KUPnpU6e6QbEuvKUTA8SPy52QFseslWsG4=\",\n  \"txCount\": 9,\n  \"scrCount\": 12,\n  \"username\": \"event.elrond\",\n  \"shard\": 1,\n  \"developerReward\": \"0\"\n}\n\nUsing erdpy\nerdpy dns resolve <herotag>.elrond --proxy=https:\/\/gateway.elrond.com\n\nwhere <herotag> should be replaced by its value.\nE.g.:\nerdpy dns resolve event.elrond --proxy=https:\/\/gateway.elrond.com\n\noutputs\nerd1hw78kxyj353x52hmmq6dzxgexynwt4m29q2uvpq6xdm90z3halvsl7cn6g\n\nDetails:\n$ erdpy --version\nerdpy 1.0.12","337":null,"338":null,"339":null,"340":null,"341":"Okay so I ran into this issue too and I was able to solve the issue by upgrading the cardano-cli\nconfirmed that this version of the cli:\ncardano-cli --version\ncardano-cli 1.30.1 - linux-aarch64 - ghc-8.10\ngit rev 0fb43f4e3da8b225f4f86557aed90a183981a64f\n\nworks with this version of the node:\ncardano-node --version\ncardano-node 1.34.1 - linux-aarch64 - ghc-8.10\ngit rev 73f9a746362695dc2cb63ba757fbcabb81733d23","342":"in compile.js\nvar output = JSON.parse(solc.compile(JSON.stringify(input))); \/\/ an object\n\/\/ it spits out bytecode and interface\n\n\nmodule.exports = output.contracts[\"Lottery.sol\"][\"Lottery\"];\n\nin deploy.js\n    const { abi, evm } = require(\".\/compile\");","343":"You can use the ABI link in the Remix Solidity compiler tab. It will copy the ABI JSON of the currently selected source code to your clipboard.","344":null,"345":null,"346":null,"347":null,"348":null,"349":"does the smart contract have 1 NFT or many NFTs\n\nThe ERC-721 standard defines a smart contract as a collection of multiple NFTs.\n\none smart contract for each type of my NFTs like dogs, cats... ? or it doesn't matter ?\n\nIt depends on your use case. There's no \"best\" or \"correct\" way.\n\nAnd when I own an NFT, is it that I own a mapping\n\nTechnically, nobody owns the mapping. But in most cases, your address is the value for the token ID key in the mapping.","350":"Using an ExecutorService to run this operation has the potential to run each iteration concurrently. This means that they can all see prevBlock as null before any task has the opportunity to set it. If each iteration depends on the result of the previous operation, there\u00e2\u0080\u0099s no reason to use an  ExecutorService at all. Instead, run each mining operation synchronously within the loop.","351":"You can try this\nconsole.log(wallet.publicKey.toBase58());","352":null,"353":null,"354":null,"355":"I had the same issue but then I installed with npm and it worked\nnpm install -g ganache-cli","356":null,"357":null,"358":"The <web3>.eth's getPending<transactions> method returns an empty array because it's returning only <transactions> originating from an account on your node. Here's the source code (assuming you are on <geth>).\nYou can use eth.subscribe to get all the pending <transactions>:\nconst <web3> = require('<web3>');\nconst url = 'wss:\/\/ENDPOINT';\nconst <web3> = new <web3>(url);\n\nvar options = {\n    address: null,\n    topics: [\n        null\n    ]\n};\n\nvar subscription = <web3>.eth.subscribe('logs', options, function(error, result){\n    if (!error) console.log('got result');\n    else console.log(error);\n}).on(\"data\", function(log){\n    console.log('got data', log);\n}).on(\"changed\", function(log){\n    console.log('changed');\n});\n\nThis might be useful too.","359":null,"360":null,"361":null,"362":null,"363":"So I found an answer to my question. I was using the wrong Ethereum Data Feed Address. I updated address to 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e which is for ETH\/USD on Rinkeby Test Net and it compiles and deploys perfectly with no errors","364":"When the sender sends ETH to your contract address and doesn't specify any function (i.e. the data field of the tx is empty), the receive() gets executed.\nSince the receive() just calls buyToken(), it produces the same set of actions as if the user executed the buyToken() directly.\nBut other contracts can make a different use of the receive() function. Example of a simple bank contract:\npragma solidity ^0.8;\n\ncontract MyContract {\n    mapping (address => uint256) public balances;\n\n    receive() external payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw(uint256 _amount) external {\n        require(_amount <= balances[msg.sender], 'Insufficient balance');\n        balances[msg.sender] -= _amount;\n        payable(msg.sender).transfer(_amount);\n    }\n}\n\nOr a timelock:\npragma solidity ^0.8;\n\ncontract MyContract {\n    uint256 public constant unlockAfter = 1640995200; \/\/ 2022-01-01\n\n    receive() external payable {\n        \/\/ anyone can send funds to this contract\n    }\n\n    function withdraw() external {\n        require(msg.sender == address(0x123), 'Not authorized');\n        require(block.timestamp >= unlockAfter, 'Not unlocked yet');\n        payable(msg.sender).transfer(address(this).balance);\n    }\n}\n\n\nThe fallback() functions is used when the function signature (first 4 bytes of the data field) doesn't match any of the existing functions.\npragma solidity ^0.8;\n\ncontract MyContract {\n    function foo() external {\n        \/\/ executed when the `data` field starts with `0xc2985578`, the signature of `foo()`\n    }\n    \n    fallback() external {\n        \/\/ executed when the `data` field is empty or starts with an unknown function signature\n    }\n}","365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":"This is how. Assuming you are in \/Users\/{User}\/Bitcoin where Bitcoin Core was compiled:\n.\/src\/bitcoind -datadir=\"\/Volumes\/My SSD\/Bitcoin\"","375":null,"376":"The error occurs because you must specify a value in the constructor when implementing the contract. If you do not pass a value, the contract will throw this error. I attached an image with your code working in ide remix.\nRemix ss with code working:","377":null,"378":null,"379":null,"380":"The eth_getBlockByNumber method receive as the latest parameter a boolean specifying if you want the full transaction object list or not:\n1 - QUANTITY|TAG - integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the default block parameter.\n2 - Boolean - If true it returns the full transaction objects, if false only the hashes of the <transactions>.\n\nSo in your code you can do something like that:\n# I'm not sure about the <python> code, this is just a sample\nblock = w3.eth.get_block(block_height, true)\nblock_transValue_eth = 0\nfor tx in block['<transactions>']:\n    block_transValue_eth += tx.value\nprint block_transValue_eth\n\nAnd avoid doing an RPC call to get each transaction.","381":"The choice of \"endpoint\" to call on a smart contract in Solana is decided by that buffer that you passed in as the data of the instruction.  Given that data, the program decides which instruction processor to call.\nIn your example, the choice of instruction is likely based on the first byte of the instruction, so 0 may correspond to MetadataInstruction::CreateMetadataAccount.\nYour best bet is to use a package provided by the program developer. In the case of the metadata program, the instruction and type definitions live at: https:\/\/github.com\/solana-labs\/oyster\/blob\/e79c5a66ed5290d3fb752f4cd6b4e90f7974ec94\/packages\/common\/src\/actions\/metadata.ts","382":"In your .env set ENABLE_EXPERIMENTAL_ADAPTERS=true and restart your node.","383":"Keypair.fromSeed() takes a Unit8Array check\nbuffer.toJSON().data this returns a 64 length array, So this contains both the public key and private key respectively. Check this\nlet a = new Uint8Array(buffer.toJSON().data.slice(0,32))\nconst key = Keypair.fromSeed(a);\n\nI tried the above and this works.\nkey has a public key and private key component.","384":"From the docs:\n\nSolidity events give an abstraction on top of the EVM\u00e2\u0080\u0099s logging functionality. Applications can subscribe and listen to these events through the RPC interface of an Ethereum client.\n\nIt's easier for an off-chain app to subscribe to new event logs than to a variable change. Especially when the variable is not public.\nSame goes for querying historical event logs (easy through the JSON-RPC API and its wrappers such as <web3> or Ethers.js), vs. historical changes of the variable (complicated, would need to query a node for each block and look for the changes proactively).\nExample: The ERC-20 token standard defines the Transfer() event. A token contract emits this event each time a transfer (of its tokens) occurs. This allows a <blockchain> explorer (or any other off-chain app) to react to this event - for example to update their own database of token holders. Without the event, they would have no way (or a very complicated way at least) to learn about the transfer.","385":null,"386":null,"387":null,"388":null,"389":"To add a new token for devnet only, you can put in a normal token addition pull request, but you'll have to specify \"chainId\": 103 for devnet.  This is defined at [1], and you can see all of the current devnet tokens at [2].\n[1] https:\/\/github.com\/solana-labs\/token-list\/blob\/c1ff0ac267d03397f56a7030b02d357f90d49f79\/src\/lib\/tokenlist.ts#L5\n[2] https:\/\/github.com\/solana-labs\/token-list\/blob\/c1ff0ac267d03397f56a7030b02d357f90d49f79\/src\/tokens\/solana.tokenlist.json#L7513","390":null,"391":null,"392":"Will the same contract work in the Binance Smart Chain too?\n\nYes, actually if you developed a contract that works in ethereum, it will works in all the EVM (Ethereum Virtual Machine) compatible chains. For getting started, I suggest you read the solidity doc, try the examples in remix online ide, and deploy to testnet (all the chains have testnet).\np.s. how to get the test coin? google search testnet faucet","393":null,"394":null,"395":null,"396":"I assume you are referring to the Quick-start guide for building smart contracts in Rust?\nLet's check a few things to make sure you didn't miss any steps.\n\nDid you create a lib.rs file and copy the contents of this smart contract into that file?\n\nDid you successfully deploy the contract using near-cli after you compiled it to WASM?\n\nAre you invoking the methods using near-cli and replacing YOUR_ACCOUNT_HERE with the testnet accountId you just deployed the contract to?\n\n\nIf so, would you be able to share your code \/ commands so I can help you debug your issue? This tutorial was updated recently (less than a month from today) so it should work, but while I'm waiting for your response I will run through the steps to make sure we don't have a bug on our end. :)\n** UPDATE **\nJust went through the tutorial and it worked for me. Here was my command using near-cli:\nnear call ex-1.testnet increment --accountId ex-1.testnet\n\nAnd the response:\nScheduling a call: ex-1.testnet.increment()\nReceipt: 3UTWH43Tgxy1kSSvoax5cRu8A2VEDKZqzgZaEXTwzsBD\n    Log [ex-1.testnet]: Increased number to 1\n    Log [ex-1.testnet]: Make sure you don't overflow, my friend.\nTransaction Id 2U92KghmCqihUuURVaLGj8x8FrBhQ5z1vE35BVdZG1ob\nTo see the transaction in the transaction explorer, please open this url in your browser\nhttps:\/\/explorer.testnet.near.org\/<transactions>\/2U92KghmCqihUuURVaLGj8x8FrBhQ5z1vE35BVdZG1ob\n\nFeel free to reach out on our Discord for further assistance. The proper channel for this discussion would be #near-sdk-rs under #development but #dev-support is ok too. :)","397":null,"398":"It depends on your genesis.json config, not on the CLI params.\nYou're using Proof of Authority (PoA) if you have the clique defined in the config. If you don't have it, you're using Proof of Work (PoW).\nFor more info, see \"Clique Example\" in the docs.","399":null,"400":null,"401":"It is better to use standard ERC20 or whatever kind of token you want to create. here is the standard ERC20 contract. To use the standard ERC20 contract, you have to import it and your token contract should inherit it. Like this:\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC20\/ERC20.sol\";\n\ncontract YOUR_TOKEN_CONTRACT is ERC20{\n\n   constructor() ERC20(YOU_TOKEN_NAME, YOUR_TOKEN_SYMBOL){\n   \/\/code here\n   \/\/for example _mint(msg.sender, 100000);\n   }\n   \/\/code here\n}\n\nStandard ERC20 contract has a function to return total supply called totalSupply(). So it makes it easier to write token contracts.\nAlso you have syntax error in your code!\nTo return a value you have to follow this syntax:\nfunction CheckTotalSupply(uint supply) public retuns(uint){\n        return supply;\/\/                      ^ this is returns with (s) at its end\n      \/\/^ this is return whitout (s) at its end\n    }\n\nin retuns you specify what kind of variable you want to return then in return you return the values in order you specified in returns","402":null,"403":null,"404":null,"405":"The function you would want to run is get_round().\nget_round() is similar to get_price() but you specify a timestamp and it will return the closest price that occurred just before that timestamp.\nYou can see this function on GitHub.\nFull documentation is still underway for the Chainlink+Solana integration so keep your eyes out on this page in the chainlink docs to find it in the future.","406":"I found the solution !\nTurns out that my <geth> Ethereum node is not fully synchronized and thus whatever API call I conduct via the ethers library, it will act as like the Ethereum chain is empty.\nI connected into my <geth> Ethereum node via:\n<geth> attach http:\/\/localhost:8545\n\nand then run the command:\neth.syncing\n\nto check if the synchronization is completed. If it is done, then it will return \"false\".","407":null,"408":"I am sure there is no such toolchain yet.\nI am a Terra smart contract developer using the skills you mentioned and going through the process you meant in every-day-basis.\nUnfortunately, I also could not found the answer for toolchain which makes development easy for developers.\nBut, if you take the partial optimization into the account, you can do that!\nFor example, you can build bash script for both building and testing(unit & integration-test) the Rust-written smart contracts, since they are related with cargo ... commands.\nAbout the deployment and testing smart contracts on terra network, you can also build script using Terra SDK(.js or .py). For the convenience, you select the testnet since LocalTerra needs manual start. That script illustrates the deploy and interact procedure in order.\nSurely, it is not the best answer, just improvement advice from my personal experience.","409":null,"410":null,"411":null,"412":null,"413":"But when I use command \"ion operation create\"...\n\nThe CLI is completely experimental (as it is using a test library) and on development pause since last year, we did not anticipate anyone would know about it since we didn't advertise it on front page, but I have just opened a PR to make it use the ION SDK instead, it should be merged soon, I am not sure if it was working before my PR (probably was), but it should definitely work now.\n\nThat DID belongs to mainet.\n\nThe CLI was written with the assumption that it targets mainnet. But it is fine, the request will work perfectly fine against the testnet. The test: prefix in the DID string is purely cosmetic for the most part.\n\nBut with my DID (generate by myself), it shows this error\n\nSince you are testing testnet DIDs and your node is setup as such (\"didMethodName\": \"ion:test\", seen in your config above), you must therefore prefix your unique DID suffix string with did:ion:test:<unique_suffix>, you didn't in your screenshot, hence the error. I hope this makes sense. The error message you are seeing in the screenshot also says exactly that.\n\nStep 3: I resolve with DID \"did:ion:test:EiC3YoSodQ20tJcgKjLXr65BHr2KwnQWsUnm3VOiYUFMeA\", but It proved \"not found\"\n\nION DID tool should work. Sanity: assuming you've setup the node to be able to write, did you wait for that transaction to be confirmed? You can check by checking the transaction hash that is printed out when batch writer kicks in every 10 minutes (based on your conifg \"batchingIntervalInSeconds\": 600,). Even though the post request immediately returns a DID Document, that is just for your convenience to know that 1. the node accepted your request and queues it, and 2. shows what your DID Document will look like once it is confirmed, purely for your convenience. But we all know bitcoin <transactions> takes a while to confirm, especially on testnet, where the confirmation time is less predictable.","414":null,"415":"How can I send test BAT or AAVE or any other token to myself?\n\nAs far as I'm aware, there are no \"official\" BAT or AAVE token contract on the testnets. By official, I mean - supported by the original token authors or their team.\nSo you can do what some people before you did as well. Copy-paste the BAT token source code, and deploy it on the testnet. Only in this case, you modify the constructor or other functions to mint the tokens to your address, or to give you some kind of authorization (owner for example).\nOr you can write and deploy a custom token contract. Either from scratch - or by extending the OpenZeppelin ERC-20.sol opensource implementation, you just call their constructor with your values.\npragma solidity ^0.8;\n\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC20\/ERC20.sol\";\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/access\/Ownable.sol\";\n\ncontract MyToken is ERC20, Ownable {\n    \/\/ sets the token metadata such as name and symbol, also sets the `owner` to `msg.sender`\n    constructor() ERC20(\"MyToken\", \"MyT\") {}\n    \n    \/\/ effectively mints the `_amount` of new tokens to the `owner`\n    function mint(uint256 _amount) external onlyOwner {\n        _mint(msg.sender, _amount);\n    }\n}\n\n\n\nCan I reuse the same generated Eth address for all ETH Tokens?\n\nThe token balance of an address is stored on each token contract - not on the address alone. So there's no capacity limit of how many tokens can an address own, if that's your concern.\nFor some people it might be important to use separate address for each token for privacy reasons. If you separate the tokens that you own to multiple addresses, it's much harder to estimate how much you (as a person) own in total.\nAnother reason that some people use is redundancy. If you lose access to one of your addresses, you still have multiple others with balance.","416":null,"417":null,"418":"I think you want (I use dot notation for simplicity):\n{\n  \"selector\": {\n    \"Company.Associate.access\": {\n      \"$elemMatch\": {\n        \"create\": {\n          \"$exists\": true\n        }\n      }\n    }\n  }\n}\n\n...or maybe...\n{\n  \"selector\": {\n    \"Company.Associate.access\": {\n      \"$elemMatch\": {\n        \"create\": \"allowed\"\n      }\n    }\n  }\n}","419":null,"420":null,"421":null,"422":"you can add a functionm, below like that.\nBut you have to excute mintDaily() manually\n    uint256 constant private dailyMinted = 2000e18;\n    uint256 lastMintTime;\n\n    address public _owner;\n    \n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        address owner\n    ) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n\n        _owner = owner;\n        lastMintTime = block.timestamp;\n    }\n    \n    function mintDaily() public {\n        require(_owner == msg.sender, \"not permitted\");\n        \/\/ 24h = 86400\n        require(lastMintTime + 86400 >= block.timestamp, \"mint already\" );\n        _mint(msg.sender, dailyMinted);\n        lastMintTime = block.timestamp;\n    }","423":"I finally was able to figure out was wrong. The file I edited was runtime\/src\/lib.rs instead of pallets\/template\/src\/lib.rs . I didn't realize there were multiple of them. The tutorial involves deleting the contents of the whole lib.rs and replacing with a new one","424":null,"425":"I found the answers to my questions.\nI Have to Use Infura from  this page\nplease check this information\nand at first You have to create project in infura and get ID\nand use this code :\n\n\n<web3> = new <web3>(new <web3>.providers.HttpProvider(\"https:\/\/ropsten.infura.io\/v3\/3c68e\/*Your Own ID*\/1753\"));","426":null,"427":"The testnet is pretty volatile and it is reset very often (maybe weekly), without any warnings.\nElrond recommends developers to use the devnet, it is reset maybe once every 3-4 months, so it's more stable.\nYou can get the provider like this:\nfunction getDevnetProvider() {\n    return new proxyProvider_1.ProxyProvider(\"https:\/\/devnet-gateway.elrond.com\", { timeout: 5000 });\n}\n\nAnd the devnet explorer is here: https:\/\/devnet-explorer.elrond.com\/","428":null,"429":null,"430":"Your error clearly states that while you are trying to deploy to your local network, it is not up and running. So, what you have to do is simply open a new terminal window and run:\nsolana-keygen new\n\nsave the seed phrase and other relevant details somewhere secure and then, run\nsolana-test-validator\n\nNow in a separate terminal window where you had earlier tried to deploy, type\nanchor deploy \n\nagain and it should be successfully deployed.\nElse, if you were trying to deploy on any other network, for example, devnet. Then you would want to airdrop some SOL into the account generated after running solana-keygen new using the command:\nsolana airdrop 1 <RECIPIENT_ACCOUNT_ADDRESS> --url https:\/\/api.devnet.solana.com\n\nThen use additional flags in your deploy command as follows:\nanchor deploy --provider.cluster devnet","431":null,"432":null,"433":null,"434":null,"435":null,"436":"For example, I'd like to collect transaction data such as input address, output address, transaction time, transaction amount, etc. for Ethereum.\n\nYou can iterate over all blocks and <transactions> using <web3>.eth.get_block call. You need, however, parse the transaction content yourself.\nTo access all the data, it is recommended that you run your own node to have the maximum network bandwidth for JSON-RPC calls.\n\nAlso, do I must have my own Ethereum wallet(address) in order to access their data with <web3>py?\n\nAddress is just a derived from a random number and you do not need to generate one.","437":null,"438":null,"439":null,"440":"Here is the working code:\n#[pallet::weight(10_000 + T::DbWeight::get().writes(1))]\n    pub fn set_block_delay(origin: OriginFor<T>, block: T::BlockNumber) -> DispatchResult {\n        let caller = ensure_signed(origin)?;\n        \n        let current_block_number = <frame_system::Pallet<T>>::block_number();\n\n        let block_delay: u32 = 10;\n\n        let target_block = current_block_number + block_delay.into();\n\n        ensure!(target_block < block, \"fail\");\n\n        Ok(())\n    }","441":null,"442":null,"443":null,"444":null,"445":"You may have set BSC Testnet on Metamask like this:\nNew RPC URL: https:\/\/data-seed-prebsc-1-s1.binance.org:8545\/\nChain id: 97\nBut change into this:\nNew RPC URL: https:\/\/data-seed-prebsc-2-s3.binance.org:8545\/\nChain id: 97\nIf still doesn't work, also change Chain ID into 0x61","446":"So I tried the same code using truffle and ganache and it works for me. The only difference is that i am running ganache on port 8545 and connecting  metamask with that port in url. I believe that you are providing somewhat incorrect values here const todoList = new <web3>.eth.Contract(TodoList.abi, ADRESS);\nMake Sure that your contract's abi and address is correct. Read details about instantiation of contract object with correct values here\nHere is how i am reading the JSON file:\nconst TodoList = JSON.parse(fs.readFileSync('.\/build\/contracts\/TodoList.json', 'utf8'));.\nI am simply extracting the abi from it just like your code. For Contract Address part, I get the address manually from the output console after running truffle migrate --reset all.\nAfter this you will get a receipt information in console like this\nReplacing 'TodoList'\n   --------------------\n   > transaction hash:    0x00d16b5ee5f4ddad354543a100d7c730114f5668d5f3b35f1a2306764335c32d\n   > Blocks: 0            Seconds: 0\n   > contract address:    0x5592F579627C9123F2EB77429B3E6e66891C6a9A\n   > block number:        11\n   > block timestamp:     1628967561\n   > account:             0xa0aC73a479e9B6F5b5Ee0b0Fd241bbb1D83C5ec2\n   > balance:             99.95728292\n   > gas used:            363127 (0x58a77)\n   > gas price:           20 gwei\n   > value sent:          0 ETH\n   > total cost:          0.00726254 ETH\n\nYou need to copy the contract address and put it like this: \"0x5592F579627C9123F2EB77429B3E6e66891C6a9A\"\ntruffle-config.js file: Use this configuration for compiling the contracts\n\/**\n * Use this file to configure your truffle project. It's seeded with some\n * common settings for different networks and features like migrations,\n * compilation and testing. Uncomment the ones you need or modify\n * them to suit your project as necessary.\n *\n * More information about configuration can be found at:\n *\n * trufflesuite.com\/docs\/advanced\/configuration\n *\n * To deploy via Infura you'll need a wallet provider (like @truffle\/hdwallet-provider)\n * to sign your <transactions> before they're sent to a remote public node. Infura accounts\n * are available for free at: infura.io\/register.\n *\n * You'll also need a mnemonic - the twelve word phrase the wallet uses to generate\n * public\/private key pairs. If you're publishing your code to GitHub make sure you load this\n * phrase from a file you've .gitignored so it doesn't accidentally become public.\n *\n *\/\n\n\/\/ const HDWalletProvider = require('@truffle\/hdwallet-provider');\n\/\/\n\/\/ const fs = require('fs');\n\/\/ const mnemonic = fs.readFileSync(\".secret\").toString().trim();\n\nmodule.exports = {\n  \/**\n   * Networks define how you connect to your ethereum client and let you set the\n   * defaults <web3> uses to send <transactions>. If you don't specify one truffle\n   * will spin up a development <blockchain> for you on port 9545 when you\n   * run `develop` or `test`. You can ask a truffle command to use a specific\n   * network from the command line, e.g\n   *\n   * $ truffle test --network <network-name>\n   *\/\n\n  networks: {\n    \/\/ Useful for testing. The `development` name is special - truffle uses it by default\n    \/\/ if it's defined here and no other network is specified at the command line.\n    \/\/ You should run a client (like ganache-cli, <geth> or parity) in a separate terminal\n    \/\/ tab if you use this network and you must also set the `host`, `port` and `network_id`\n    \/\/ options below to some value.\n    \/\/\n    development: {\n     host: \"127.0.0.1\",     \/\/ Localhost (default: none)\n     port: 7545,            \/\/ Standard Ethereum port (default: none)\n     network_id: \"*\"       \/\/ Any network (default: none)\n    },\n    \/\/ Another network with more advanced options...\n    \/\/ advanced: {\n    \/\/ port: 8777,             \/\/ Custom port\n    \/\/ network_id: 1342,       \/\/ Custom network\n    \/\/ gas: 6000000,           \/\/ Gas sent with each transaction (default: ~6700000)\n    \/\/ gasPrice: 20000000000,  \/\/ 20 gwei (in wei) (default: 100 gwei)\n    \/\/ from: <address>,        \/\/ Account to send txs from (default: accounts[0])\n    \/\/ websocket: true        \/\/ Enable EventEmitter interface for <web3> (default: false)\n    \/\/ },\n    \/\/ Useful for deploying to a public network.\n    \/\/ NB: It's important to wrap the provider as a function.\n    \/\/ ropsten: {\n    \/\/ provider: () => new HDWalletProvider(mnemonic, `https:\/\/ropsten.infura.io\/v3\/YOUR-PROJECT-ID`),\n    \/\/ network_id: 3,       \/\/ Ropsten's id\n    \/\/ gas: 5500000,        \/\/ Ropsten has a lower block limit than mainnet\n    \/\/ confirmations: 2,    \/\/ # of confs to wait between deployments. (default: 0)\n    \/\/ timeoutBlocks: 200,  \/\/ # of blocks before a deployment times out  (minimum\/default: 50)\n    \/\/ skipDryRun: true     \/\/ Skip dry run before migrations? (default: false for public nets )\n    \/\/ },\n    \/\/ Useful for private networks\n    \/\/ private: {\n    \/\/ provider: () => new HDWalletProvider(mnemonic, `https:\/\/network.io`),\n    \/\/ network_id: 2111,   \/\/ This network is yours, in the cloud.\n    \/\/ production: true    \/\/ Treats this network as if it was a public net. (default: false)\n    \/\/ }\n  },\n\n  \/\/ Set default mocha options here, use special reporters etc.\n  mocha: {\n    \/\/ timeout: 100000\n  },\n\n  \/\/ Configure your compilers\n  compilers: {\n    solc: {\n      version: \"0.5.0\",    \/\/ Fetch exact version from solc-bin (default: truffle's version)\n      docker: false,        \/\/ Use \"0.5.1\" you've installed locally with docker (default: false)\n      settings: {          \/\/ See the solidity docs for advice about optimization and evmVersion\n       optimizer: {\n         enabled: false,\n         runs: 200\n       },\n       evmVersion: \"byzantium\"\n      }\n    }\n  },\n\n  \/\/ Truffle DB is currently disabled by default; to enable it, change enabled: false to enabled: true\n  \/\/\n  \/\/ Note: if you migrated your contracts prior to enabling this field in your Truffle project and want\n  \/\/ those previously migrated contracts available in the .db directory, you will need to run the following:\n  \/\/ $ truffle migrate --reset --compile-all\n\n  db: {\n    enabled: false\n  }\n};","447":null,"448":"I just wanted to add to @Peteris' answer by saying that it is also possible to return multiple instances of a struct without creating an array. A function can have multiple return values but you still use a single return in that case:\nfunction getBookDetails()\n    public\n    view\n    returns (Book memory, Book memory, Book memory)\n{\n    return (book1, book2, book3);\n}\n\nOf course, since book3 is only visible in setBookDetails, it will only work if you make it available to the function, e.g. by making it a storage variable, moving the declaration to the function or passing it in via a parameter.","449":null,"450":null,"451":null,"452":"I'm assuming you're using anchor\nlet now_ts = Clock::get().unwrap().unix_timestamp;\n\nYou will need to pass in the system program account","453":null,"454":null,"455":null,"456":null,"457":"Here are the rustdocs for the command, and it's implementation in the node template - this looks for specific from your chain specification file based on what you pass that is configued. In the template at the time of writing, the template only has dev and \"everything else\" mode:\n    fn load_spec(&self, id: &str) -> Result<Box<dyn sc_service::ChainSpec>, String> {\n        Ok(match id {\n            \"dev\" => Box::new(chain_spec::development_config()?),\n            \"\" | \"local\" => Box::new(chain_spec::local_testnet_config()?),\n            path =>\n                Box::new(chain_spec::ChainSpec::from_json_file(std::path::PathBuf::from(path))?),\n        })\n    }\n\nThus you would need to specify another in\/node\/src\/chainspec.rs and configure the \/node\/src\/commnad.rs to use the correct one when called.","458":"You need to understand the differences between test Ethereum networks, public Ethereum networks and private Ethereum networks first. Read more about Ethereum public, test and private networks here. Also, each test network has its own compatibility with different Ethereum clients.\nSo, you are supposed to test your code using Ethereum private networks or test networks like Rinkeby and then deploy to Mainnet.","459":"When tx.receipt != null does it also means that Ethereum state updated?\n\nThe receipt can have non-null value when the transaction is reverted - which means the state was not updated. You can find this information in the receipt field status\n\ntrue is successful\nfalse is reverted\n\nNote: The recently implemented EIP-2718 effectively allows for transaction receipts without the status field, so it's possible that there are going to be some transaction types without the status in the future. Also, <transactions> before the Byzantinum hard fork (October 2017) don't have the status field as well.\n\nAs to your original question, both ways are valid.\nIf you're building a small application that doesn't have much logic or is okay to fail sometimes, the second option seems to be less robust (in terms of working with asynchronicity). You just wait for the txHash (that you only receive after the tx has been mined into a block), and then you get the tx receipt (containing the event log) based on the hash.\nBut what if your app crashes between getting the tx hash and processing the event log from the receipt? If this is your concern, you might want to implement a way to store the tx hash to a DB, listen to the event logs (your point 1), and compare each event log (containing the hash of its transaction) with the stored tx hashes.","460":null,"461":null,"462":null,"463":"The assets endpoint (docs) has the asset_contract_address filter that allows you to filter by a contract address. Which will effectively allow you to paginate through all NFTs of the contract (that Opensea knows of).\nExample:\ncurl 'https:\/\/api.opensea.io\/api\/v1\/assets?offset=0&limit=20&asset_contract_address=0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb'","464":null,"465":"I think your local machine doesn't have a public IP address.\nI recommend you to set your AWS as the bootnode then connect from your local machine.","466":"If the state data is in doubt, you can stop peer, drop state database, and upon restart peer will rebuild state database. When peer is stopped, the command peer node rebuild-dbs will drop state database for you. See the command documentation.\nIf the <blockchain> ledger itself is in doubt, you will need to either replace the peer or reset the peer to genesis blocks using peer node reset command. See the command documentation.","467":"If you are using <web3>.js you can pass transaction hash to a function like <web3>.eth.getTransaction(transactionHash [, callback]) to get information about the transaction. It will also include a value field which you have passed to the transaction\nRead more about transaction receipts and logs here","468":null,"469":"They provide a new address for each new payment and therefore it won't matter which address sent the bitcoin because the address it was sent to is associated with your payment and your payment only.\nNote that this is an assumption based on how similar payment methods work and I don't know this site.","470":null,"471":"SubstraTEE (today) relies on SGX and IAS, so it adopts all integrity and confidentiality assumptions from SGX.\nRemote attestation is verified by our <blockchain> to gain public auditability, without the need for a verifier to obtain a license with Intel or use IAS at all. In this regard, we add security assumptions of that <blockchain> too. Our goal is to launch a parachain on both Kusama and Polkadot, so your threat model should involve the Kusama and Polkadot Chains too.\nbtw: SubstraTEE is being rebranded to Integritee (https:\/\/integritee.network)","472":null,"473":null,"474":"Refer to this video: https:\/\/youtu.be\/-AuExRijtrA, it neatly explains how can we connect with relayer and send tokens to Cosmos Hub with IBC.\nHowever, if it's not clear from the video, i am explaining the steps below:\nYou need to remove the relayer configuration if you have used (otherwise you can ignore it)\nrm -rf ~\/.starport\/relayer\nAfterwards, start your chain in the development mode using starport c serve -r\nUse default values to configure a relayer: starport relayer configure and send small amount of real ATOMs to the relayer address on the Hub. The relayer address is printed by the command used above. Wait about 10-15 seconds to make sure the balance has been updated.\nstarport relayer connect\nWait for the connection to process, now you can send tokens to the Hub:\nappd tx ibc-transfer transfer ... ... --from alice","475":null,"476":null,"477":null,"478":null,"479":"The keyword I left out is \"bitwise\" (as Nathan mentioned).\nSo, if, for example,               sha3(valueA)=0x44=0b01000100, and\n                                   sha3(valueB)=0x34=0b00110100, then:\n(sha3(valueA)=0x44=0b01000100 and sha3(valueB))=0x70=0b01110000\n\nPS\nfun fact: XOR with all 1s is a \"bit flip\"","480":"It appears that you're using a mix of new and old unfortunately.  The error that you're seeing:\nError: failed to get recent blockhash: Invalid params: unknown variant `finalized`, expected one of `max`, `recent`, `root`, `single`, `singleGossip`.\n\nis because you're using a newer version of @solana\/<web3>.js with a very old version of the network.  The easiest solution is to downgrade to @solana\/<web3>.js version 0.78.2 to keep following the tutorial.\nSeparately, there are a lot of newer tools for local development.  If you're using a new version of the network and SDK, there's a binary called solana-test-validator (https:\/\/docs.solana.com\/developing\/test-validator) which is much easier than developing against Docker.","481":null,"482":null,"483":"Answer to the original question\nStrings in Solidity are internally processed as arrays of characters, and you need to specify the data location of the return value for dynamic values such as arrays (see picture below).\n\nThat is because Solidity, as a language, was based on C++ and JS.\nAlso, the (\"official\") Solidity compiler and associated utilities are written in C++, and you don't have strings in C nor C++. just arrays of chars, so that might be the reason why strings in solidity are processed as arrays of characters.\n  ...\n\n  \/\/ You should consider using \"<blockchain>.timestamp\" instead of \"now\".\n  function createTask(string memory _content, string memory _author) public {\n    tasks.push(Task(tasks.length, now, _content, _author, false));\n  }\n\n  function getTask(uint id) public view \n    returns(\n      uint,\n      uint,\n      string memory,\n      string memory,\n      bool\n   ) {\n     return(\n       id,\n       tasks[id].date,\n       tasks[id].content,\n       tasks[id].author,\n       tasks[id].completed  \/\/ Also, removed the comma here because it would drop an empty tuple error.\n     );\n   }\n   \n   ...\n\nAnswering the newer question\nTypeError: This type is only supported in the new experimental ABI encoder.\nMake sure to add pragma experimental ABIEncoderV2; on top of your code, since solidity versions under 0.8.0 don't support dynamic arrays with a depth level deeper than 1 by default, and you'll need to enable the experimental ABI for it to work, for example, arrays of arrays, or in your case, an array of structs.","484":null,"485":null,"486":null,"487":"You are right. In order to tackle such problems, there are devices that keep on updating their positions after a specified duration. For example, the GPS sensor on the truck will send its location (and store it on the ledger) after every 15 minutes. So, in this way, that particular problem can be solved.\nSimilarly, other problems can also be solved.\nIf you want to learn more about the use of IoT with <blockchain> (especially <hyperledger> Fabric), you can check out this course: https:\/\/courses.cognitiveclass.ai\/courses\/course-v1:IBMDeveloperSkillsNetwork+BC0202EN+v1\/course\/","488":null,"489":"Found the answer myself.\n\nI reversed the aura and grandpa authorities IDs. Make sure AURA uses Sr25519 ss58 Addresses and grandpa uses Ed25519 ss58 Addresses.\nThe code to start the node was wrong, I added --scheme Ed25519\/Sr25519 to make sure key added in keystore is OK.\n\nnode-template key insert \\\n    --base-path \/peer-data-1 \\\n    --chain local \\\n    --key-type aura \\\n    --scheme Sr25519 \\\n    --suri \"0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37\";\nnode-template key insert \\\n    --base-path \/peer-data-1 \\\n    --chain local \\\n    --key-type gran \\\n    --scheme Ed25519 \\\n    --suri \"0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37\";\nls -l \/peer-data-1\/chains\/local_testnet\/keystore;\nRUST_LOG=runtime=debug\nnode-template \\\n    --base-path \/peer-data-1 \\\n    --name Node1 \\\n    --chain \/genesis\/customSpecRaw.json \\\n    --keystore-path \/peer-data-1\/chains\/local_testnet\/keystore\/ \\\n    --node-key 0x0e32f2687f1234deb25e20a50c39db5cdf0a2f2ccb84995189522fc9f20beb37 \\\n    --port 30333 \\\n    --ws-port 9944 \\\n    --rpc-port 9933 \\\n    --unsafe-ws-external \\\n    --unsafe-rpc-external \\\n    --rpc-cors=all \\\n    --prometheus-external \\\n    --log info \\\n    --wasm-execution Compiled \\\n    --ws-max-connections 1000 \\\n    --pool-limit 10000 \\\n    --pool-kbytes 20480 \\\n    --max-runtime-instances 100 \\\n    --validator \\\n    --bootnodes \/ip4\/$SUBSTRATE_0_SERVICE_HOST\/tcp\/30333\/p2p\/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp","490":"This problem can be fixed by adding miners to the \"trustedMiner\" entry in the config file because pow doesn't necessary detect miners that fit your specs.\nI went to a Filecoin miner info aggregation site (I used \"https:\/\/filrep.io\/\") and added miners to the trustedMiner section of the config file used in the apply command to start a Filecoin deal.\nFor example the \"trustedMiners\" line in your config file should look like this:\n\"trustedMiners\":  [\"<Miner Id>\", \"<Miner Id>\",\"<Miner Id>\", \"<Miner Id>\", ...],\n\nwith however many miners you want to add.\nThen you would execute the command:\npow config apply --watch <CID> -o -c new-config-file.json\nBtw the --watch flag is optional as it just allows you to see the status of the deal in real time.","491":"Liquidity pools with more than two tokens are possible although they're not common as most major DEXs don't support them, off the top of my head the only places I can think of that support them are Curve and Balancer.\nThe typical two token liquidity pool, like those seen in Uniswap, functions on the idea that when adding liquidity you provide an equal value of each token, calculated with the formula:\nx*y=k\nSo that the product of the quantities of the tokens is a constant, giving each token a weight of 50% in the equation. This is called the constant product market maker model.\nThree or more token liquidity pools operate on the same concept but shift the weights around to accommodate the new tokens. So we could see something like:\nxyz=k\nBut instead of each token being weighted for 50% as we saw for the two token model, we might have x be weighted for 20% whereas y and z are both weighted for 40%","492":null,"493":null,"494":"You'll need to use solidity ( or any other smart contract language ) to create the smart contract (backend), and then you can use flutter to create the app (frontend).\nThen you can use a library to connect your app with your contract such as <web3>dart.\nContracts are stored and executed by the <blockchain>, and thus can't be hardcoded into frontend applications.","495":null,"496":"It seems that I'm approaching the solution with this piece of code :\nconst <web3> = require(\"<web3>\");\n\nlet <web3> = new <web3>(\n    new <web3>.providers.WebsocketProvider(\"wss:\/\/mainnet.infura.io\/ws\/v3\/cc44823998a0412294a47680xxxxxxxx\")\n);\n\nlet abi = JSON.parse('[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]')\n\nconst instance = new <web3>.eth.Contract(abi, '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f');\n\n\/\/<web3>.eth.getBlockNumber().then(console.log)\n\n    instance.getPastEvents(\n        \"allEvents\",\n        {fromBlock: \"12908000\", toBlock: \"12908094\"},\n        (errors, events) => {\n            if (!errors) {\n                \/\/console.log('it is ok')\n                \/\/console.log(events)\n             }\n        }\n    ).then(r => {\n        console.log(r)\n    });","497":"It is because when you call transfer in mint, msg.sender (in transfer) is the address of the calling contract (the one that implements mint) not the address of the person calling mint. Therefore, token needs to have enough balance to perform the operation.\nThe only time msg.sender stays the same is when the call is to another function in the contract. Call to another contract changes the msg.sender to the address of the calling contract. Without this, anyone can use msg.sender to authorize other <transactions> in other contracts.","498":null,"499":null,"500":null,"501":"The given swagger docs can be used to connect to Hornet running on localhost.\nhttps:\/\/editor.swagger.io\/?url=https:\/\/raw.githubusercontent.com\/rufsam\/protocol-rfcs\/master\/text\/0026-rest-api\/rest-api.yaml","502":"As far as I know both of them are centralized entities so what happens is:\nMr X and Mr Y send their crypto to the exchange controlled wallets. The exchanges keep the record in their own DB\/ledger who owns what. Then when Mr Y and Mr X make a trade the exchanges record that trade in their own DB\/ledger and nothing is recorded on public <blockchain>. Now Mr X withdraws the crypto from one of the exchanges and it gets recorded on public <blockchain> (If he withdraws BTC then it will be recorded on BTC <blockchain>). So Mr X and Mr Y can do thousands of trades without paying network fees as everything happens in the exchange's internal system (they may have per trade fee)\nDeFi - I have no idea how it works, as didn't dig into it :)","503":null,"504":"having the same issue..\nafter changing the contract addresses and abi's.\napproving fails ..","505":"You can technically \"try to spend\" the coins as many times as you want. However, only one transaction can be added to the block, and the others will be rejected. The leftover <transactions> can't be added to newer blocks either as the output is no longer a UTXO.\nThe tricky part is when two different miners grab two different <transactions> from the same output and there is network latency so they both add the block to their own chain. At this point you would need to look at the longest chain concept and understand orphaned chains, why we have confirmations to begin with, proof-of-work, etc.","506":null,"507":"Have you created Orderer profile in your configtx.yaml ?\nOrdered system channel is required for order and peer for channel initialization.\nRefer this link for configtx.yaml\nhttps:\/\/medium.com\/@msakhilvinayak\/understanding-configurations-in-<hyperledger>-fabric-ff3f5c23625a","508":null,"509":null,"510":null,"511":"To expand on my comments, this is how I will do it.\npragma solidity 0.8.6;\nimport \u00e2\u0080\u009c@openzeppelin\/contracts\/utils\/structs\/EnumerableSet.sol\u00e2\u0080\u009d;\n\ncontract Test {\nusing EnumerableSet for EnumerableSet.AddressSet;\n\nstruct Stake {\n      uint256 lockedToken;\n      uint256 creditsEarned;\n   }\n  \n  \/\/ Rewards = RatioOfCreditsEarnedByStakeholder * MonthlyRewards\n\n  EnumerableSet.AddressSet private stakeholders;\n  mapping(address => Stake) private stakeholderToStake;\n      \n  uint256 private totalCredits;\n\n  function createStake(\n     address stakeholder,\n     uint256 lockedToken,\n     uint256 creditsEarned\n  ) public {\n      stakeholders.add(stakeholder);\n      stakeholderToStake[stakeholder] = Stake({\n      lockedToken: lockedToken,\n      creditsEarned: creditsEarned\n     });\n    totalCredits += creditsEarned;\n  }\n      \n  function distributeRewards() public {\n  \/\/do whatever you want with totalCredits here\n   }","512":"To access your local-running testnet through Polkadot.js Apps, scroll down in this sidebar to \"local development\" and enter the URL to your running node, probably something like ws:\/\/localhost:9944 if you didn't make any changes. You will not be deploying this as a test network, because that section of the UI is just for long-running test networks by teams that want to test their functionality long-term. For throwaway use cases of local development, use Local Development by scrolling down in the sidebar.","513":null,"514":null,"515":"This log output is related to an overload of your <blockchain> connection.\nThis notification is usually related to the usage of public websocket connections and\/or free third party NaaS Provider. To fix this connection issue you can either run an own full node or change the tier or the third party NaaS provider. Also it is recommended to use Chainlink version 0.10.8 or higher, as the HeadTracker has been revised here and performs more efficient.\nIn regard to the question let me try to give you a small technical overview, which may clarify the payload of a Chainlink node to it's remote full node:\nYour Chainlink node establishes a connection to a full node. There the Chainlink node initiates various subscriptions, which are a special feature of the websocket protocol to enable bidirectional communication. More precisely, this means that the Chainlink node is informed if a certain \"state\" of the subscription changes. Basically, the node interacts with using JSON-RPC methods and uses the following methods to initiate and process various functions internally:\neth_getBlockByNumber,eth_getBalance,eth_getTransactionReceipt,eth_getTransactionCount,eth_getLogs,eth_subscribe,eth_unsubscribe,eth_sendRawTransaction and eth_Call\nhttps:\/\/ethereum.org\/uk\/developers\/docs\/apis\/json-rpc\/\nThe high amount of interactions of the Chainlink node are especially executed during the syncing process via the internal HeadTracker service. This service initiates a \"head\" subscription in order to interact with every single incoming new blockheader.\nDuring this syncing process it uses the JSON-RPC methods eth_GetBlockByNumber and eth_getBalance to get all the necessary information from the block. So these two methods are used\/ executed every block. The number of requests now depends on the average blocktime of the network the Chainlink node is connected to\nAn example would be the Kovan Testnet:\nThe avg. blocktime here is 6.7sec, which means you get a daily request number of approx. 21.000\nDuring fulfilling job requests, those request also includes following methods: eth_getTransactionReceipt, eth_sendRawTransaction, eth_getLogs, eth_subscribe, eth_unsubscribe, eth_getTransactionCount and eth_call, which increases the total number significantly depending on the number of job requests.\nIt should also be noted that especially with faster <blockchain>s (e.g. polygon) there is a very high payload of the WebSocket and you have to deal with a good full node connection in detail, as many full nodes do not receive such a high number of requests permanently.","516":null,"517":"Yep! You can view the permissions for access keys via our access keys RPC endpoints:\nhttps:\/\/docs.near.org\/docs\/api\/rpc#access-keys\nAn easy way to do this is to run a near-cli command:\nnear keys ACCOUNT_ID\nhttps:\/\/docs.near.org\/docs\/tools\/near-cli#near-keys","518":null,"519":"You need to run this code on a web application running on localhost or on a server. And, of course, you need to have MetaMask installed on your browser.\nPut this code on a script section of your site:\nawait window.ethereum.request({method: 'eth_requestAccounts'});\nconst provider = new ethers.providers.<web3>Provider(window.ethereum);\nconst contract = new ethers.Contract(smartContractAddress, abi, provider);\nbalance = await contract.getBalance(\"0x7C76C63DB86bfB5437f7426F4C37b15098Bb81da\");","520":"These two assert conditions provide a way to prevent integer overflow and underflow.\nThe max value of uint256 is 2^256-1, which is approx. 10^77. If you want to add two numbers that would result in a value larger that the max value, it would overflow the integer.\n\nExample with smaller values so it's easier to imagine:\nLargest value of uint8 is 255. So if you have a value 250 and you want to add 10, it overflows the max value, and becomes 4 (because 255  + 1 equals 0 in case of uint8).\nThe same goes the other way around. You have a value 5 and want to subtract 10. Since it's an unsigned integer, there's no negative numbers, and it underflows and becomes 251 (because 5 - 5 is 0, and then the remaining 5 is subtracted from the \"max value + 1\").\n\nYou can find more info about the integer overflow\/underflow vulnerability in the SWC registry: https:\/\/swcregistry.io\/docs\/SWC-101","521":"You are not putting a \" before the end of the line. \n\nUse \"\"\" if you want to do this:\n\n\"\"\" a very long string ...... \n....that can span multiple lines\n\"\"\"","522":null,"523":null,"524":null,"525":null,"526":"You have defined the TokenFarm (uppercase T) on this line\nconst TokenFarm = artifacts.require('TokenFarm.sol')\n\nThen you're trying to re-assign it on this line\nconst TokenFarm = await TokenFarm.deployed()\n\n\nSolution: Assign to another const name (for example tokenFarm - lowercase T) instead of re-assigning the already existing TokenFarm.\nconst tokenFarm = await TokenFarm.deployed()","527":null,"528":null,"529":null,"530":null,"531":"I think that using the setTimeout function has improved the processing... Not sure but it seems to work a little better now. This is far from perfect because I'm facing another issue but it seems I'm on the right path :\n\/\/ Parcourir tous les blocs entre bloc courant et bloc-1000 et lister \n\/\/ toutes les <transactions> de chaque bloc, avec temporisation de 5 \n\/\/ secondes entre chaque bloc.\n\nlet index = 0\n<web3>.eth.getBlockNumber().then(blockNumber => {\n    for (let i = blockNumber - 1000; i <= blockNumber; i++) {\n        setTimeout(function(index) {\n            getBlockInfo(i).then()\n            console.log('next')\n            console.log(\"index=\" + index)\n        }, 5000 * index, index)\n        index = index+1\n    }\n});\n\nasync function getBlockInfo(i) {\n    await <web3>.eth.getBlock(i).then(block => {\n        block.<transactions>.forEach(function (t) {\n            <web3>.eth.getTransaction(t).then(transaction => {\n                console.log(i + ' ' + transaction.hash + ' ' + transaction.from + ' ' + transaction.to)\n            }).catch((error) => {\n                console.log('erreur')\n            })\n        })\n    }).catch((error) => {console.log(error)})\n}","532":null,"533":"You'll get confirmation every time you spend ethereum \/ gas.\nThe only way you won't get that confirmation is when you call a contract method marked as view using call() instead of send().\nIn this case the wallet will compute locally the result since there is no need to modify anything in the <blockchain>.","534":null,"535":null,"536":"It's the Typed transaction envelope added in the EIP-2718. Implementation of this EIP was deployed in April 2021 in the Berlin hardfork (source).\nThe field allows to use future transaction types without backwards compatibility. An example of a new incompatible tx type (value 0x01) is in the EIP-2930, also deployed in the Berlin hardfork.\nProbably because it's a new field, it's not yet (June 2021) included in the JSON-RPC documentation. But other documentations, such as ethers.js, already started covering it.\n\nYou can get the transaction status (if it succeeded or reverted) from the transaction receipt field status. It's not included in the regular getTransactionByHash method used in your question.\nMind that the status is not included in pre-Byznatium (October 2017) <transactions> and can also be missing in some future transaction types.","537":"To get an exhaustive list of all entries of a mapped storage function, you should have a look at the query_map function described at: https:\/\/github.com\/polkascan\/py-substrate-interface#query-a-mapped-storage-function\nThis example actually describes how to retrieve all accounts, in case you want to retrieve all identities, you need to transform it to:\nresult = substrate.query_map('Identity', 'IdentityOf')\n\nfor account, identity_info in result:\n    print(f\"Identity of account '{account.value}': {identity_info.value}\")\n\n\nYou can find a list of all available storage functions per module\/pallet at https:\/\/polkascan.io\/polkadot\/runtime-module","538":null,"539":"You can pass multiple --ethereum-rpc in the command\ne.g.\ncargo run -p graph-node --release -- \\\n  --postgres-url postgresql:\/\/<USERNAME><:PASSWORD>@localhost:5432\/<POSTGRES_DB_NAME> \\\n  --ethereum-rpc mainnet:https:\/\/mainnet.infura.io \\\n  --ethereum-rpc goerli:https:\/\/...\n  --ipfs 127.0.0.1:5001 \\\n  --debug\n\nRef: https:\/\/github.com\/graphprotocol\/graph-node\/pull\/1027","540":null,"541":"I managed to find the solution. As the instructions are referred to previous starport vervions (prior to Stargate), you should type instead of \"starport add wasm\" the command \"starport module import wasm\". Then use \"appd tx wasm\" in order to check the wasm availability","542":null,"543":null,"544":"For transfer money you just need the receiving address the from address is msg.sender and value is msg.value which should be mention in value field under Gas Limit field , the correct function is as follow:\n function transfer(address payable _to) external payable returns (bool) {\n        _to.transfer( msg.value);\n        return true;\n    }\n\nP.S: in case of want to create Token , you should initiate total supply for contract and better to follow ERC20 standard","545":null,"546":null,"547":null,"548":null,"549":"If you are passing in the &[u8] of data to try_from_slice but the overall account data size is greater than your data you will get that borsh error as it defaults to checking the deserialized length with the overall slice length (or something like that):\n\nCapture the actual size of the data you are storing by taking the .len() of the try_to_vec() output and write that in the account data block and then store your data. When you deserialize, use the stored len and use that to create a slice of that size from the account data to pass to try_from_slice. You can see an example (using a BTreeMap instead of your array but you get the idea) here https:\/\/github.com\/hashblock\/solana-cli-program-template\/blob\/main\/program\/src\/account_state.rs at L66 (serialize) and L85 (deserialize).","550":"The implementation of that function uses global data.  Programs cannot use global data","551":null,"552":"Chainlink VRF follows the request and receive cycle of getting a number. This means, it has to look outside the <blockchain> to get a response.\nSo, 2 <transactions> actually take place:\n\nYour requesting transaction\nThe response transaction\n\nThis is necessary to look outside the <blockchain> like this, otherwise you'll get a deterministic number as opposed to random. The speed at which the random number is returned, is dictated by the block time of the <blockchain> you're using.\nSo for Ethereum, the fastest time possible for a Random Number to be returned is 2 * block time, or about 30ish seconds.\nOn faster chains like polygon, this is drastically lower.","553":"There is a pull request in flight to update the documentation. The new API will looks like:\nrequestRandomness(keyHash, fee);\n\ninstead of:\nrequestRandomness(keyHash, fee, userprovidedseed);","554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":"Looking at the image, it is clear that you have some states which use HashConstraint. I would recommend you to follow the below steps and perform a migration of HashConstraint States to Signature Constraint.\n\nStop your node.\nSign the jar. To externally sign the jar use the jarsigner. By default, if you do not disable signing in Corda version 4, the jar is signed when you run the deployNodes task.\nReplace the old jar with this newly signed jar.\nStart the node by disabling the hash constraint, by setting the Java system property to -Dnet.corda.node.disableHashConstraints=\u00e2\u0080\u009dtrue\u00e2\u0080\u009d.\nStart the node.\nRun a flow that consumes old Hash constraint states and issues new signature constraint states. You should see the new states using signature constraints.\n\nYou can refer to a sample that does this here.\nTake a look at this blog to read more on this topic.\nFinally, you can also take a look at a video which shows how to do the same.\nYou can find more information on contract migration in docs as well.","563":"Edit: Always be weary of contracts still in the dev branch. With that being said, v0.8 Chainlink Client is now out of the dev branch and this answer is still relevant.\nI ran into the same issue and contacted Avneet from the Chainlink team. Turns out this is caused by a change in the Solidity language starting from v0.7:\n\nBreaking change in v0.7:\n\nusing A for B only affects the contract it is mentioned in. Previously, the effect was inherited. Now, you have to repeat the using statement in all derived contracts that make use of the feature.\nhttps:\/\/docs.soliditylang.org\/en\/v0.7.0\/070-breaking-changes.html\n\n\nTherefore, you need to add\nusing Chainlink for Chainlink.Request;\nto the top of your contract, like so:\ncontract MyClient {\n  using Chainlink for Chainlink.Request;","564":null,"565":null,"566":"Unfortunately, The Graph does not currently support nested queries. They currently have it on the roadmap, so my recommendation is to subscribe to their releases in their repository or check their #announcements channel in Discord.","567":null,"568":null,"569":"In order to get a token balance, you need to know the address of the token contract, because the token balance of an address is stored on the token contract.\nMetaMask only shares the saved accounts to the requesting app (and the user needs to manually confirm this action first). But it doesn't share the token addresses, that the user added to their MM UI.\nSo if you know the token address, you can use a simple <web3> call for example:\nconst jsonAbi = {}; \/\/ JSON ABI of the token contract\nconst contractAddress = \"0x123\"; \/\/ address of the token contract\nconst tokenAddress = \"0xfF3d\"; \/\/ address of which you want to get the token balance\n\nconst token = new <web3>.eth.Contract(jsonAbi, contractAddress);\nconst balance = await token.balanceOf(tokenAddress);","570":null,"571":null,"572":"It depends on how you call it.\nThe eth_call JSON-RPC method is free.\nThe eth_sendTransaction method creates a transaction and consumes gas in the form of native currency (in case of the Tron network, that's TRX).\nSome wallet apps only support the transaction mode and do not support calls. Some JSON-RPC wrapper libraries such as <web3>js allow you to chose between the call (using the library .call() method) and the transaction (using the library .send() method).\nNote: Even though the methods are prepended eth_, they are used on the Tron network as well.","573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":"There are some bridge applications that allow you to perform cross-chain operations (mostly run by exchanges). But these are operated on a different layer, unrelated to smart contracts.\n\nWhat you're asking is not possible if you want to stick strictly to smart contracts.\nHowever, you can use the oracle pattern. Create an off-chain app (the oracle) that listens to <transactions> from your contract to a specific address. Each transaction (from your contract to the target address) will trigger an action in the off-chain app - e.g. reading Bitcoin data. The oracle then sends another transaction to your smart contract, passing it the off-chain data.","585":"For some reason visual code choose a different solc compiler than the one i installed so when you run a solidity you have to use\n\nsolcjs --bin --base-path . .\/file name\n\nand that will use the solc that you installed using\n\nnpm install -g solc\n\nWorked for me, hope it works for all of you","586":"Lisk SDK has a maximum block size of 30kb.\nThe value is currently configurable between 10kb and 30kb.\nLisk HQ tested up to 100kb with success, so it's possible that later version will push those config boundaries.\nYou can always edit the config schema ( framework\/src\/schema\/application_config_schema.ts ) in the SDK sources code to edit those values yourself ; but you must take into account the impact it has on the network : you may need to increase the block time, and set it to 15s instead of 10s for example.","587":null,"588":"The getBlock() docs point to the defaultBlock for information about the values.\n\n\"earliest\" - String: The genesis block\n\"latest\" - String: The latest block (current head of the <blockchain>)\n\"pending\" - String: The currently mined block (including pending <transactions>)\n\nSo \"latest\" is the newest block. \"Earliest\" on the other hand, is the oldest block.","589":null,"590":null,"591":null,"592":null,"593":null,"594":"Form offical website, I find azure <blockchain> will be retired.\n\nAnd I try to create it on portal and also try to create it by azure cli, all failed.\n\nIn conclusion:\nAzure recommends that users who have created a <blockchain> service provide the service and recommend that they migrate as soon as possible. For users who need to create this service, the service is not provided.\nSo this should be the willingness to fail to create success, you can raise a support ticket to confirm it.","595":null,"596":null,"597":"You have two syntax errors in your code:\n\ncontract should be lowercase, not Contract\nconstructor is missing closing brace }\n\nThen you're going to run into a type conversion error with the uint(decimals). When you look at the remote contract, you see that decimals() is a view function - not a property. So you should read its value as if you were calling a function: decimals().\n\nCombined all to<geth>er:\n\/\/ SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC20\/ERC20.sol\";\n\/\/ removed the IERC20 import, not needed in this context\n\ncontract GToken is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(\"GToken\", \"GTKN\") public {\n        _mint(msg.sender, 1000000 * 10 ** decimals()); \/\/ calling the `decimals()` function\n    }\n}","598":null,"599":"In case the ticket is not replaceable by others of the same type (e.g. concert ticket) you would need a NonFungibleToken. To build a very basic one you would need to do the following steps:\n\ncreate a state YourState that extends TokenType (or implements ContractState, if you need to have a contract associated with the state that can be verified with the transaction)\ncreate a var issuedTokenType = IssuedTokenType(ourIdentity(), YourState). An IssueTokenType associates a TokenType with an Issuer party\ncreate a var nft = new NonFungibleToken(issuedTokenType, holder, UUID) this creates a Non-Fungible Token issued by Issuer with holder (a Party) as a receiver\nissue the token subFlow(new IssueTokens(listOf(nft)))\n\nThere are many other ways, depending on what you need and how rich your State needs to be (it can be QueryableState, SchedulableState etc), and the token-sdk provides many helpers to help you create, issue and redeem tokens. All of them have their pros and cons, it depends on what you need to achieve.\nI suggest you go through the sources here below to learn how to use the token-sdk:\n\nthis cordapp example where there is basically what you need. Check out the CouponTokenType that is used to issue NonFungibleTokens in IssueCoupon flow\nthe official tutorial, where you will learn how to use token sdk specifically\nthe token-sdk repo on github, where there is additional documentation with various standard examples and the architectural design of the type of tokens available in token-sdk\nthe samples dedicated to token-sdk available for both Java and Kotlin. All of them create and issue tokens.\n\nWith the above sources you will definitely be able to find everything you need to create and issue the type of token you need.","600":null,"601":null,"602":"From what i see on that list, the bot watcher looks at \"0x3ae4222d06dacba3618526359a25bee8aecdbd92\" this contract, and looks at incoming <transactions> in that contract and somehow finds all the info there not sure how though and clearly it dosnt list all the <transactions> there.\nNot sure how those bots work but I'm guessing they snipe through that contract and it's a known bot contract so poopcoin watches it.\nEDIT: The watched contract is actually bogged finance contract, and you have to hold atleast 750 bog to use it. The contract is just orders people can make. And bog finacnce runs the bot and buys the orders that are in the contract.","603":null,"604":null,"605":null,"606":null,"607":"looking over https:\/\/github.com\/iancoleman\/bip39\nI found I had to specify the correct ravencoin network specifications (don't really understand what this object means) but once I did, it worked perfectly.\nfunction getAddress(node, network) {\n    const bitcoin = require('bitcoinjs-lib');\n    return bitcoin.payments.p2pkh({ pubkey: node.publicKey, network }).address;\n}\n\nfunction getNetwork() {\n    \/* https:\/\/github.com\/iancoleman\/bip39\/blob\/c4f0c2908faab1452937e50a7d3a400fed42a0a8\/src\/js\/bitcoinjs-extensions.js *\/\n    return {\n        messagePrefix: '\\x16Raven Signed Message:\\n',\n        bip32: {\n          public: 0x0488B21E,\n          private: 0x0488ADE4,\n        },\n        pubKeyHash: 0x3c,\n        scriptHash: 0x7a,\n        wif: 0x80,\n    };\n}\n\n\nfunction BIP44() {\n    \/* create a BIP44, rvn, account 0, external address *\/\n    const bip32 = require('bip32');\n    const root = bip32.fromSeed(\n        Buffer.from(\n        'dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd',\n        'hex',\n        ),\n    );\n    const childAuto = root.derivePath(\"m\/44'\/175'\/0'\/0\/0\");\n    const childManual = root\n        .deriveHardened(44)\n        .deriveHardened(175)\n        .deriveHardened(0)\n        .derive(0)\n        .derive(0);\n    return getAddress(childAuto, getNetwork());\n    \n}\nconsole.log(BIP44());","608":null,"609":"You need deploy other contracts beforehand, write down their addresses and pass addresses when MasterChef is deployed.","610":null,"611":null,"612":"Solution\nFollowing on from Serhii's answer above. The actual error that was thrown was that my app didn't have permission to transfer tokens.\nI had to logout of my app and re-login to the sam2 account, it added full key permissions, meaning the JS posted in my question works as expected.","613":null,"614":"Most of this is not related to the token code and is an economics topic. Which is offtopic here at StackOverflow, so I'm just going to briefly say something that is only partially correct: As long as there's enough buyers and sellers willing to buy\/sell the token for the price of gold, the token is going to have a price of gold.\n\nHowever, you can define functions in your contract that control its total supply, which affects the price (sometimes affects the price - economics again).\nTake a look at the PAXG source code:\n\/**\n * @dev Increases the total supply by minting the specified number of tokens to the supply controller account.\n * @param _value The number of tokens to add.\n * @return A boolean that indicates if the operation was successful.\n *\/\nfunction increaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\n    totalSupply_ = totalSupply_.add(_value);\n    balances[supplyController] = balances[supplyController].add(_value);\n    emit SupplyIncreased(supplyController, _value);\n    emit Transfer(address(0), supplyController, _value);\n    return true;\n}\n\n\/**\n * @dev Decreases the total supply by burning the specified number of tokens from the supply controller account.\n * @param _value The number of tokens to remove.\n * @return A boolean that indicates if the operation was successful.\n *\/\nfunction decreaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\n    require(_value <= balances[supplyController], \"not enough supply\");\n    balances[supplyController] = balances[supplyController].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n    emit SupplyDecreased(supplyController, _value); \n    emit Transfer(supplyController, address(0), _value);\n    return true;\n}\n\nBy executing these functions (can be executed only from an authorized address - this check is performed in the onlySupplyController modifier), you can manipulate the balance of address that is present in the value of the supplyController property.\n\nOther tokens that peg their value to some off-chain asset, also have a built-in buy function (and sometimes a sell function as well) which allows buying\/selling the token from\/to a predefined holder for a predefined price. That might also create an incentive for the buyers and sellers to use the built-in functions instead of less profitable price on an exchange, which might effectively affect the price.","615":null,"616":null,"617":"As the name \"on-chain analysis\" suggests, the base data are collected from <blockchain>s. Most analytics companies combine the <blockchain> data with their own knowledge. Sometimes it's combined with public data that are just complicated to filter out. And sometimes they're using non-public data that they got from exchanges and other sources (possibly for this specific purpose of combining with other data and reselling the combined product, but not reselling the raw data).\nExample: Exchange X has\n\ncold wallets A, B and C - All of this is published by the exchange.\nhot wallets D, E, F and G - Part of this is public knowledge, part is info from the exchange directly to the analytics company.\nuser deposit wallets H, I, J, K, L, ... - The exchange told the analytics company and keeps them updated on new and removed deposit addresses (in exchange for some fee). Part of the agreement might be that the analytics company can't share these addresses, just the combined amount.\n\nThe analytics company can watch <transactions> coming from\/to these wallets (this is the public <blockchain> data) and make a sum of how much crypto has arrived to or left from the exchange.","618":null,"619":null,"620":null,"621":null,"622":null,"623":"Goerli Etherscan has a different API host.\nYou need to use https:\/\/api-goerli.etherscan.io\/ instead of https:\/\/api.etherscan.io\/\nSource: https:\/\/goerli.etherscan.io\/apis#accounts","624":null,"625":null,"626":null,"627":"You need insert the attribute value\nvalue = {greeting}\nin the input:\n  <input onChange={e => setGreetingValue(e.target.value)} \n        placeholder=\"Introduce uno nuevo\" \n        value={greeting}\n        \/>\n\nAlso initialize with two quotes useState ():\nconst [greeting, setGreetingValue] = useState ('')\nYou will probably now have a issue with the metamask nonce, which will tell you that it is too high like message error like this:\nNonce too high. Expected nonce to be 1 but got 2\n\nYou will reset account in metamask, or import a new account.","628":null,"629":"You can get ABI JSON during compilation of the contract source code. The inputs for compilation are source code and few other values (such as optimizer settings)... The outputs include the ABI JSON and bytecode... So you don't really need to deploy the contract to get the json, just compile it (without deployment).\nIt's not possible to get ABI JSON purely from a bytecode (or an address that contains just the bytecode).\n\nIf the contract has source code published, you can compile the source code to get the ABI JSON.\nIf if doesn't have the source code published, it's also possible that the contract implements some standard (e.g. ERC-20). If you know whether and what standard it implements, you can use a general ABI JSON that reflects on this standard (e.g. this is ABI JSON of a ERC-20 standard). However, it does not reflect any functions that the contract might have used to extend the standard-defined minimum.","630":"The ERC-721 standard does not define a \"best\" or \"correct\" way to mint new tokens (such as whether it should be open or restricted) and it's up to each contract developer to implement or omit the minting feature in a way that reflects their needs.\n\nCreating of NFTs (\"minting\") and destruction NFTs (\"burning\") is not included in the specification. Your contract may implement these by other means. Please see the event documentation for your responsibilities when creating or destroying NFTs.\n\nBut having a whitelist of addresses that are authorized to mint new tokens (e.g. MINTER_ROLE or onlyOwner) seems to be more common than allowing anyone to freely mint new tokens.\n\nEven though it's theoretically possible to deploy new contract each time a new token is minted, it's not a standard approach (and I personally haven't seen any contract that does it). In most cases the minting process \"just\" creates a new ID, stores a new string\/URL value associated with the ID, associates this new token with an owner address (of the token, not a contract owner), plus updates some metadata such as amount of tokens owned by an address (see example below).\nThe token owner can then transfer their tokens, give anyone control over their tokens, and do other stuff depending on the contract implementation.\nThe mappings that you point out in your question (_owners and _balances) suggest that they store token owner (not contract owner) addresses as well as amount of tokens held by each address.\nExample:\n\nContract owner mints token ID 1 to address 0x123.\n\nValue of _owners[1] is 0x123 (was 0, the default value)\n\nValue of _balances[0x123] becomes 1 (was 0, the default value)\n\n\n\nContract owner mints token ID 2 to address 0x123.\n\nValue of _owners[1] is still 0x123\n\nValue of _owners[2] is now 0x123 (was 0, the default value)\n\nValue of _balances[0x123] becomes 2 (because they now own 2 tokens)","631":null,"632":null,"633":"Bytecode of a smart contract is published in a transaction (that is mined in a block), and then stored in a storage of the network (usually Ethereum or Binance Smart Chain) associated with an address.\nSo each time when you're interacting with a smart contract, you're interacting with an address that is associated with a storage chunk containing the bytecode. Plus the bytecode points to other storage slots where the values of its variables are stored.\nAll state changes (including changes of the storage values) are part of the ledger database. The raw <blockchain> data only contain the state changes (not the current state), but most higher layers return the current state by default (you can still chose to fetch an older state, e.g. the \"defaultBlock\" param here). And some layers even disallow accessing previous states (e.g. Solidity and Vyper languages for writing smart contracts - you can compile this code to the bytecode).\n\n\nBut how does the the smart contract know when to pay the project team?\n\nA smart contract can access current balance of any address, including its own. It can also have a variable containing the funding goal. Comparing these two values tells you whether the goal has been reached and whether the smart contract should pay the project team.\nHowever, smart contracts currently don't have any native timers (such as cronjobs) or event handlers - and functions are executed after a transaction is sent to the address of the smart contract (data field of the transaction states what function you want to execute and what arguments you're passing).\nSo you need to either send the transaction (executing the withdraw() function) manually or using some offchain tool (that can watch the current balance and then send the transaction executing the function for you).\npragma solidity ^0.8;\n\ncontract MyContract {\n    uint256 constant FUNDING_GOAL = 1 ether;\n    address constant TEAM_ADDRESS = address(0x123);\n\n    \/**\n     * Throws if the current balance is lower than the goal\n     * Otherwise sends all of the current balance to the predefined address\n     *\n     * Need to send transaction with correct value of the `data` field\n     * to execute this `withdraw()` function.\n     * Most client apps generate the correct value of `data` field for you\n     * after selecting the function name and specifying argument values.\n     *\/\n    function withdraw() external {\n        require(address(this).balance >= FUNDING_GOAL, 'Haven\\'t reached the funding goal');\n        payable(TEAM_ADDRESS).transfer(address(this).balance);\n    }\n    \n    \/**\n     * Allows this contract to receive native currency of the network (usually ETH or BNB)\n     *\/\n    receive() external payable {}\n}","634":null,"635":null,"636":null,"637":null,"638":null,"639":"If the burn() function has a public or external visibility modifier, you can execute it by submitting a transaction containing the function signature and the argument value(s) in the data field.\nOne of the ways is to build the data field value manually or semi-manually\nconst data = <web3>.eth.abi.encodeFunctionCall({\n    name: 'burn',\n    type: 'function',\n    inputs: [{\n        type: 'uint256',\n        name: '_amount'\n    }]\n}, [10000]);\n\nwhich returns\n0x42966c680000000000000000000000000000000000000000000000000000000000002710\n\n\n42966c68 is the function signature\n2710 is hex value for 10000 (dec)\n\nand pass it to any wallet that supports custom data field (e.g. MyEtherWallet).\n\nAnother way is to instantiate your contract with <web3>.eth.Contract and execute the function from there. This generates the data field for you and if you've configured your <web3> instance correctly, it also uses your private key to sign the transaction and broadcasts it to the network.\nconst contract = new <web3>.eth.Contract(jsonInterface, contractAddress);\ncontract.methods.burn(10000).send({from: yourAddress});","640":null,"641":null,"642":null,"643":"I think you want:\nSELECT DATE(block_timestamp) as date, AVG(receipt_gas_used)\nFROM `bigquery-public-data.crypto_ethereum.<transactions>`\nWHERE DATE(block_timestamp) BETWEEN '2015-07-30' AND '2021-05-10'\nGROUP BY date\nORDER BY date;\n\nYou probably don't need the WHERE clause, but I left it in.","644":null,"645":"Try another endpoint, for example try https:\/\/wax.greymass.com instead of https:\/\/chain.wax.io, this should resolve your problem.","646":null,"647":"Don't use Bitcoin as a reference for figuring out what smart contracts are and how they are included in the <blockchain>. That is not the purpose of Bitcoin so several pieces will be missing to really understand the integration of smart contracts.\nSorry for not directly following your questions, I just believe that a more detailed explanation is required to really understand how smart contracts are included \/ executed.\nAs you are asking about smart contracts let's take the practical example of Ethereum to explain how they are included in the <blockchain> and how to interact with them. ( The main idea is similar for other smart contract <blockchain>s )\nAccounts :\nLet's start by differentiating two types of Ethereum account :\n\nExternally Owned Accounts (EOA)\nContract Accounts (CA)\n\nExternally Owned Accounts:\nAn EOA is what you already know in Bitcoin, a user that holds a private key and a public address. An EOA is autonomous \/ proactive (You can decide to do something with your account whenever you want).\nAn EOA can send a public transaction as it can sign it with its private key.\nContract Accounts:\nA CA does not have private key but only a public address as you must be able to uniquely identify the smart contract on the <blockchain>. A CA is reactive only (A CA account actions will always be the result of an EOA action).\nA CA account cannot send a public transaction like an EOA would as it cannot sight it with a public key since it doesn't have one.\nIn Ethereum there is this notion of account state.\nBasically a mapping from addresses (EOA and CA) to a specific state.\nThe state of a specific account contains information's such as the balance and the nonce (number of <transactions> \/ contracts that this account created) and for CA this is expanded with code hash and storage hash.\n<transactions>\nA transaction can be:\n\nsmart contract creation\na value\/data transfer from account A to account B.\n\nSmart contract creation :\nThis transaction has no specific receiving address.\nIt includes data containing the smart contract code in the 'data' field.\nThe <blockchain> state will be updated to account for the new smart contract as long as this transaction is included in a block and consensus is reached.\nAn EOA address will be deterministically given to your smart contract (see this thread for an explanation on how it is done) and a new mapping is added in the account state for your smart contract containing the contract's code. You can now send transfer <transactions> to your smart contract address.\nValue\/Data transfer from account A to account B.\nNow let's say you want to call the method \"setName\" of your smart contract.\nYou or anyone can send a transaction from your account address (A) to the smart contract address (B) with the relevant information in the 'data' field (which method to call, parameters, etc..)\nThe execution itself will take place in the Ethereum Virtual Machine (EVM) where your contracts code will be interpreted and any change to the account states will be recorded.\nWith all of that in mind I suppose the answer to your questions will be clearer :\nBut how the computer program is getting executed?\nIt is executed inside the EVM on nodes. This execution will find it's origin in an EOA transaction calling the smart contract. The result of the execution is the changes to the account states.\nhow <transactions> are getting validated?\nSmart contracts cannot issue <transactions> as they are referenced as CA accounts. The original EOA transaction creating or calling the smart contract is validated as any other transaction and submitted to the normal consensus scheme of the <blockchain>.\nThe confusion might come from the fact that a smart contract can send funds to another address (EOA or CA), but they don't do so in the form of a public transaction.\nThis is possible because smart contracts are deterministic, therefore if you have the <blockchain> you have all the smart contract creation and smart contract calls in the form of <transactions> in the <blockchain>, and executing a smart contract in the EVM can change the account state. so if you send funds from (account A - EOA) to (account B - CA) that forwards them to (account C - EOA or CA) inside the EVM during its execution, it is recorded and replayable as everything is deterministic.\nSo if a smart contracts does something illegal ( spending more than its balance ) the original transaction that triggered it is invalid.\nhow consensus achieved?\nThere is no explicit consensus for smart contracts actions, it only directly concern blocks and <transactions>.\nWhile the whole answer is quite Ethereum specific, I hope it gives you a better idea of the integration of smart contracts in a <blockchain> system.","648":null,"649":"Your createProduct method returns nothing. It is for this reason that it does not work. You can change your method like\nfunction createProduct(\n    string memory _name,\n    string memory _category,\n    int256 _price\n  ) public returns (Product) {\n      productsCount++;\n      products[productsCount] = Product(\n        productsCount,\n        _name,\n        _category,\n        _price\n      );\n    \n      emit ProductCreated(productsCount, _name, _category, _price);\n      return products[productsCount];\n}\n\nOr you can create another method that will call createProduct to create a product and then return it.","650":null,"651":"The problem is that the DEX contract was not extending to the ERC20Basic contract\nSo I had to do:\ncontract DEX is ERC20Basic\nThis solved it, but I still have problems with the purchase and sale contract.","652":"According to the transaction detail on BscScan, you're trying to send 0.1 BNB and not calling any function.\nYour contract does not have the receive(), nor the fallback() function, that would accept the incoming BNB.\nSo all you need to do is implement the receive() function. Mind the payable modifier that allows this function to accept BNB.\ncontract ERC20Basic is IERC20 {\n    \/\/ rest of your code\n\n    receive() external payable {\n        \/\/ can call the buy() function\n        buy();\n    }\n}\n\nYou can see in the screenshot that when you send 100 wei (or 100 jager in case of BNB) to the contract, the receive() function executes the buy() function and produces the Bought event log.\nHere's the whole code implemented on your contract:\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n\nfunction totalSupply() external view returns (uint256);\nfunction balanceOf(address account) external view returns (uint256);\nfunction allowance(address owner, address spender) external view returns (uint256);\n\nfunction transfer(address recipient, uint256 amount) external returns (bool);\nfunction approve(address spender, uint256 amount) external returns (bool);\nfunction transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n\nevent Transfer(address indexed from, address indexed to, uint256 value);\nevent Approval(address indexed owner, address indexed spender, uint256 value);\n    \n}\n\n\ncontract ERC20Basic is IERC20 {\n\nstring public constant name = \"ByeSeel\";\nstring public constant symbol = \"BYS\";\nuint8 public constant decimals = 18;\n\n\n\/\/event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n\/\/event Transfer(address indexed from, address indexed to, uint tokens);\n\n\nmapping(address => uint256) balances;\n\nmapping(address => mapping (address => uint256)) allowed;\n\nuint256 totalSupply_ = 100 * 10 ** 18;\n\nusing SafeMath for uint256;\n\nconstructor() public {\nbalances[msg.sender] = totalSupply_;\n}\n\nfunction totalSupply() public override view returns (uint256) {\nreturn totalSupply_;\n}\n\nfunction balanceOf(address tokenOwner) public override view returns (uint256) {\n    return balances[tokenOwner];\n}\n\nfunction transfer(address receiver, uint256 numTokens) public override returns (bool) {\n    require(numTokens <= balances[msg.sender]);\n    balances[msg.sender] = balances[msg.sender].sub(numTokens);\n    balances[receiver] = balances[receiver].add(numTokens);\n    emit Transfer(msg.sender, receiver, numTokens);\n    return true;\n}\n\nfunction approve(address delegate, uint256 numTokens) public override returns (bool) {\n    allowed[msg.sender][delegate] = numTokens;\n    emit Approval(msg.sender, delegate, numTokens);\n    return true;\n}\n\nfunction allowance(address owner, address delegate) public override view returns (uint) {\n    return allowed[owner][delegate];\n}\n\nfunction transferFrom(address owner, address buyer, uint256 numTokens) public override returns (bool) {\n    require(numTokens <= balances[owner]);\n    require(numTokens <= allowed[owner][msg.sender]);\n\n    balances[owner] = balances[owner].sub(numTokens);\n    allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\n    balances[buyer] = balances[buyer].add(numTokens);\n    emit Transfer(owner, buyer, numTokens);\n    return true;\n}\n\nevent Received(address, uint);\n receive() external payable {\n emit Received(msg.sender, msg.value);\n}\n\n }\n\nlibrary SafeMath {\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n  assert(b <= a);\n  return a - b;\n}\n\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n  uint256 c = a + b;\n  assert(c >= a);\n  return c;\n} }\n\ncontract DEX {\n\n    event Bought(uint256 amount);\n    event Sold(uint256 amount);\n    \n    \n    IERC20 public token;\n    \n    constructor() public {\n        token = new ERC20Basic();\n    }\n    \n    function buy() payable public {\n        uint256 amountTobuy = msg.value;\n        uint256 dexBalance = token.balanceOf(address(this));\n        require(amountTobuy > 0, \"You need to send some Ether\");\n        require(amountTobuy <= dexBalance, \"Not enough tokens in the reserve\");\n        token.transfer(msg.sender, amountTobuy);\n        emit Bought(amountTobuy);\n    }\n    \n    function sell(uint256 amount) public {\n        require(amount > 0, \"You need to sell at least some tokens\");\n        uint256 allowance = token.allowance(msg.sender, address(this));\n        require(allowance >= amount, \"Check the token allowance\");\n        token.transferFrom(msg.sender, address(this), amount);\n        payable(msg.sender).transfer(amount);\n        emit Sold(amount);\n    }\n    \n    receive() external payable {\n        buy();\n    }\n\n}","653":"you have not set the value of COMPOSE_PROJECT_NAME,set it arbitrary value before you start your fabric network\nexport COMPOSE_PROJECT_NAME=net\n\nthis variable setting starts chaincode containers on the same bridge network as the peers","654":null,"655":null,"656":"Please change the syntax of your DATABASE_URL to:\nDATABASE_URL=postgresql:\/\/\"username\":\"password\"@\"public-ip-pg-server\":5432\/\"database-name\"\njust change:\n\"username\" : you need to configure a new user, because the default\/admin user postgres will not work for it.\n\"password\" : password of the user\n\"public-ip-pg-server\" : the public ip address of your postgresql-server\n\"database-name\" : the name of your database\nPS: delete all \" in your syntax (;\nHere is the link to the official documentation: https:\/\/docs.chain.link\/docs\/connecting-to-a-remote-database\/","657":null,"658":null,"659":null,"660":null,"661":null,"662":"When your AnotherContract executes the approve() function in MyToken, the msg.sender in MyToken is AnotherContract - not the original transaction sender.\nWhich effectively approves AnotherContract's tokens to be spent by _spender.\n\nUnless the MyToken has a way to delegate the approval (e.g. by using a deprecated tx.origin instead of msg.sender, which introdues a security flaw), the user will have to execute the approval manually, and not through your external contract.\nMany ERC-20 implementations use this approach for security purposes. For example to prevent a situation, where a scammer would persuade a user to execute their malicious function, because the user would think they are getting an airdrop.\n\/\/ function name suggests that the caller is going to receive an airdrop\nfunction claimAirdrop() external {\n     \/*\n      * fortunately, this won't work\n      * and the tx sender can't approve the scammer to spend their tokens this way\n      *\/\n    USDTcontract.approve(scammer, 1000000);\n}","663":"The error was produced by <python> SDK function chaincode_query.\nI have oppened an issue in the <hyperledger> Fabric <python> SDK. However, to solve the issue I am using chaincode_invoke instead of chaincode_query.\nchaincode_invoke\nNow, I can generate and retrieve logs from [get] method.\nlog\n... and also verify it:\nbase64 of the log","664":null,"665":null,"666":null,"667":null,"668":"The selfbalance opcode was implemented in the Istanbul chain fork (source).\nYou need to allow the fork in your genesis.json\n{\n  \"config\": {\n    \"istanbulBlock\": 0,","669":null,"670":null,"671":"The transaction has been reverted to the initial state.\n\nThis is the important part of the error message in your case.\n\nNote: The called function should be payable if you send value\n\nThis is just a note, possibly because this combination often happens. But since your function and transaction doesn't send any value, it doesn't apply to your case.\n\nround.add(1);\n\nThis (failing) snippet suggests, that there's supposed to be a library used for uint, but it's not defined. I'm gonna go with the SameMath library, because of the .add() function name and the use on uint. But in theory, it could be any library, SafeMath is just the most probable option in this context.\nMind that round.add(1); (using SafeMath) returns the value of round incremented by 1, but it doesn't store the (incremented) value anywhere. This looks like a typo and the real usage should be round = round.add(1);\nYour code doesn't show any usage of the SafeMath library, but also doesn't show the Solidity version, so I'm going to divide my answer into 3 parts.\n\nYou're using Solidity 0.8+.\nSameMath is not needed, because integer overflow is handled on a lower level, and you can safely replace\n\/\/ even with correctly imported SafeMath, it doesn't update the stored value\nround.add(1);\n\nto\n\/\/ updates the stored value\nround++;\n\n\nYou're using Solidity 0.7 or older, and SafeMath for uint256 (not uint)\nChange the definition\nuint public round;\n\nto\nuint256 public round;\n\nThis way, SafeMath will be used for round and it will allow to use the function .add().\nMind that you might want to also store the incremented value, see the bold paragraph with example above.\n\nYou're using Solidity 0.7 or older, and not using SafeMath at all.\nYou need to import the SafeMath library and then make changes described in the point 2.","672":"Here is some implementation of burn:\n\n    pub fn burn(&mut self, amount: U128String){\n        let balance = self.internal_unwrap_balance_of(env::predecessor_account_id());\n        assert!(balance>=amount);\n        self.internal_update_account(&env::predecessor_account_id(), balance - amount);\n        assert!(self.total_supply>=amount);\n        self.total_supply -= amount;\n    }\n\n    \/\/\/ Inner method to save the given account for a given account ID.\n    \/\/\/ If the account balance is 0, the account is deleted instead to release storage.\n    pub fn internal_update_account(&mut self, account_id: &AccountId, balance: u128) {\n        if balance == 0 {\n            self.accounts.remove(account_id);\n        } else {\n            self.accounts.insert(account_id, &balance); \/\/insert_or_update\n        }\n    }\n\n    pub fn internal_unwrap_balance_of(&self, account_id: &AccountId) -> Balance {\n        match self.accounts.get(&account_id) {\n            Some(balance) => balance,\n            None => 0,\n        }\n    }\n\nwe're using something similar here: https:\/\/github.com\/alpha-fi\/cheddar\/blob\/master\/cheddar\/src\/internal.rs","673":null,"674":null,"675":null,"676":null,"677":null,"678":"You can use just the _transfer() function, see my buy() function for an example of implementation.\nThe approvals for sale can be done using a custom mapping - in my example tokenIdToPrice. If the value is non-zero, the token ID (mapping key) is for sale.\nThis is a basic code that allows selling an NTF. Feel free to expand on my code to allow \"give away for free\", \"whitelist buyers\" or any other feature.\npragma solidity ^0.8.4;\n\nimport 'https:\/\/github.com\/OpenZeppelin\/openzeppelin-contracts\/blob\/master\/contracts\/token\/ERC721\/ERC721.sol';\n\ncontract MyToken is ERC721 {\n    event NftBought(address _seller, address _buyer, uint256 _price);\n\n    mapping (uint256 => uint256) public tokenIdToPrice;\n\n    constructor() ERC721('MyToken', 'MyT') {\n        _mint(msg.sender, 1);\n    }\n\n    function allowBuy(uint256 _tokenId, uint256 _price) external {\n        require(msg.sender == ownerOf(_tokenId), 'Not owner of this token');\n        require(_price > 0, 'Price zero');\n        tokenIdToPrice[_tokenId] = _price;\n    }\n\n    function disallowBuy(uint256 _tokenId) external {\n        require(msg.sender == ownerOf(_tokenId), 'Not owner of this token');\n        tokenIdToPrice[_tokenId] = 0;\n    }\n    \n    function buy(uint256 _tokenId) external payable {\n        uint256 price = tokenIdToPrice[_tokenId];\n        require(price > 0, 'This token is not for sale');\n        require(msg.value == price, 'Incorrect value');\n        \n        address seller = ownerOf(_tokenId);\n        _transfer(seller, msg.sender, _tokenId);\n        tokenIdToPrice[_tokenId] = 0; \/\/ not for sale anymore\n        payable(seller).transfer(msg.value); \/\/ send the ETH to the seller\n\n        emit NftBought(seller, msg.sender, msg.value);\n    }\n}\n\nHow to simulate the sale:\n\nThe contract deployer (msg.sender) gets token ID 1.\nExecute allowBuy(1, 2) that will allow anyone to buy token ID 1 for 2 wei.\nFrom a second address, execute buy(1) sending along 2 wei, to buy the token ID 1.\nCall (the parent ERC721) function ownerOf(1) to validate that the owner is now the second address.","679":null,"680":null,"681":null,"682":"What I'm receiving is I guess result of selling 1 DAI for WETH\n\nIt's \"how much WETH you can buy with 1 DAI\". You can easily convert this number to \"how much DAI you need to buy 1 WETH\" by calculating (1 \/ X).\nconsole.log(\"Need \" + (1 \/ sellTrade.executionPrice.toSignificant(6)) + \" DAI to get 1 WETH\");\n\n1 \/ 0.000366619 = 2727.6273188241744","683":"Assuming _rOwned holds the actual token balance of each address:\nYou're correctly emitting the Transfer events, but need to update the token balances as well.\n\nThis line sets the _msgSender() balance to _tTotal, which you don't want according to your description.\n_rOwned[_msgSender()] = _rTotal; \/\/ incorrect\n\nYou want them to have the remaining _tTotransfer.\n\nAnd the same goes for other initial owners\n_rOwned[_msgSender()] = _tTotransfer; \/\/ replace the above line to this\nemit Transfer(address(0), _msgSender(), _tTotransfer);\n\n_rOwned[_devsWallet] = _tToDevs;\nemit Transfer(address(0), _devsWallet, _tToDevs);\n\nrOwned[_marketingWallet] = _tToMarketing;\nemit Transfer(address(0), _marketingWallet, _tToMarketing);\n\nrOwned[_apesWallet] = _tToApes;\nemit Transfer(address(0), _apesWallet, _tToApes);","684":null,"685":"It's too wasteful to do a consensus round for each transaction. Instead, the Raft leader aggregates several <transactions> into a batch, and then creates a block from that batch, using a block cutter object.\nThen, the Raft leader initiates a consensus round to make the block be replicated to all followers via the Raft protocol.","686":null,"687":"Solidity can't query off-chain resources on its own. But you can use an oracle that will deliver the data to your contract.\nA widely-used oracle service is Chainlink. Your contract queries their contract, pays with LINK for the query, and one of the Chanlink providers call your (predefined) callback function with the desired data.\nOr you can build a simple oracle service on your own. Your off-chain app listens to specific <transactions> (from&to a predefined address in a predefined format). When this specific transaction is send, the off-chain app retrieves the off-chain data and sends a transaction (from a connected account) to your contract, passing the data.","688":null,"689":"Is there any way to predict this function?\n\nA miner can publish their block number with a timestamp that fits to<geth>er with other criteria:\n\ndifficulty is given for some time\ncoinbase is given for even longer period of time\nmsg.sender (the real transaction sender and signer) can be one of the miner's addresses\n\nThere's no way how to generate truly indeterminable random number on-chain. But you can use an oracle that returns an off-chain generated \"random\" number.","690":null,"691":null,"692":"When ContractB calls ContractA, the msg.sender in ContractA is ContractB address.\nBased on the code and the error message, the owner (0x123) didn't allow ContractB to spend their tokens.\nYou need to set the value of allowed[<owner>][<ContractB>] to be at least the amount of tokens that you want to send.\nMost likely you have an approve() function (defined in the token standard) that you can use. In the linked example, the caller of the function would be the owner, the spender would be the ContractB and the value would be any value equal or higher than the amount of tokens that you want to send (mind the decimals).","693":null,"694":null,"695":null,"696":null,"697":"You can fix this issue by doing\n\n$ npm install aeproject-utils prompts aeproject-logger","698":null,"699":null,"700":null,"701":"Yes, check the current blockNumber (use eth.blockNumber in the <geth> console).\nNote that if the node is out of sync then eth.syncing should give more info.","702":null,"703":null,"704":null,"705":null,"706":null,"707":"It's the other way around.\n\nTransaction is created by a client application (in a form on JSON object) and signed by the sender's private key\nsent to a node\nand broadcasted to the network by the node, where it waits in the mempool (list of <transactions> not yet mined) to be mined.\nA miner includes it in a block\nIf the transaction recipient is this smart contract, miner of the transaction executes it to be able to calculate its state changes. Also, after it's included in a block, all nodes validate and project the state changes on their side.\n\nSo to sum it up: This code doesn't create <transactions>. But it's executed when a transaction to a contract that contains this code is mined.\n\nExample:\nYour code is deployed on address 0x123. A sender sends a transaction to your contract 0x123, with data field (of the transaction) stating that they want to execute the function voteForCandidate() with bytes32 candidate having value 0x01.\nWhen the transaction gets mined, the miner executes the contract in their EVM instance and calculates the state changes, that result in incrementing storage value of votesReceived[0x01]. Then broadcasts this information (alto<geth>er with all other <transactions> that they mined) to the network so that every node knows that votesReceived[0x01] on address 0x123 has been changed in this transaction.","708":null,"709":"who is default owner of the contract\n\nBy default, contracts are not owned by anyone.\n\nCan anyone else use this contract and this public function to approve spender amounts w\/o any restrictions?\n\nYou need to read internal _approve() function logic to understand how it works and you will find how it works and what are the restrictions.\n\nSo, who can execute smart contract public\/external functions?\n\nAnyone.\n\nI know I can use Ownable.sol smart contract, which allows to add onlyOwner,\n\nThis is not related to approve(). You need to also read ERC-20 spec and first understand what approve() does.","710":null,"711":"To invoke one chaincode from another chaincode, you need to make sure that\nthat both chaincodes are installed on each endorsing peer, after that you can do chaincode to chaincode invocation.\nChaincode to chaincode invocation be pretty straight forward, here is an example:\n\/\/ Invoke\nfunc (am *accountManagement) Invoke(stub shim.ChaincodeStubInterface) \npeer.Response {\nactionName, params := stub.GetFunctionAndParameters()\n\nif actionName == \"callAnotherCC\" {\n    chainCodeArgs := util.ToChaincodeArgs(\"anotherCCFunc\", \"paramA\")\n    response := stub.InvokeChaincode(\"anotherCCName\", chainCodeArgs, \"channelName\")\n\n    if response.Status != shim.OK {\n       return shim.Error(response.Message)\n    }\n    return shim.Success(nil)\n}\n\n\/\/ NOTE: This is an example, hence assuming only valid call is to call another chaincode\nreturn shim.Error(fmt.Sprintf(\"[ERROR] No <%s> action defined\", actionName))\n}\n\nThis example is from the implementation of previous shim library, you can update this according to the latest shim library","712":"Most of the time a RemainingScaleBytesNotEmptyException is raised, it is type registry related. In a Substrate runtime (like Kusama, Polkadot, etc) specific types are defined, which are not (yet) exposed in the metadata, so libraries have to include a decomposition to primitives of those types.\nSome pointers for troubleshooting:\n\nThe wrong type registry is being used. Most of the time py-substrate-interface can auto-discover which chain its talking to, so only the url have to be specified (https:\/\/github.com\/polkascan\/py-substrate-interface#autodiscover-mode). But with custom runtimes or development properties like type_registry_preset and ss58_format need to be set manually\n\nBecause of a recent runtime upgrade the local type registry is out-dated and needs to be updated. This can be achieved by updating the py-scale-codec package, run the substrate.reload_type_registry() function or always use the remote type registries with the use_remote_preset kwarg (See https:\/\/github.com\/polkascan\/py-substrate-interface#keeping-type-registry-presets-up-to-date)\n\nWhen developing a custom runtime, introduced types can be added in a custom JSON file in the format like https:\/\/github.com\/polkascan\/py-scale-codec\/blob\/master\/scalecodec\/type_registry\/rococo.json and provided during init (See https:\/\/github.com\/polkascan\/py-substrate-interface#substrate-node-template)","713":null,"714":"You can run a full node (or connect to an external provider that runs a full node, but most of them have some rate limits and some don't allow subscriptions) and then query the JSON-RPC API.\nA widely used wrapper for the JSON-RPC API calls is <web3>js. You can use their <web3>.eth library because of the compatilibity between Ethereum and BSC.\nIf you want to download all <transactions>, you'll need to loop through all blocks from 1 to latest using the getBlock() method, which also returns all <transactions> in this particular block.\nFor subscribing to new <transactions>, you'll subscribe to the newBlockHeaders event, from which you can get the block number and query the block (see previous paragraph).","715":null,"716":null,"717":"For the first paragraph of your question\nreference https:\/\/<hyperledger>-fabric.readthedocs.io\/en\/release-1.4\/orderer\/ordering_service.html#orderers-and-the-transaction-flow \u00ef\u00bc\u008cwe saimple divide tx flow into two step,proposal and ordering,when you query chaincode, just need proposl without involving ordering,after proposal success, you will get result.\nFor the second paragraph of your question\nIn the fabric v1.4.2 sources code,which at peer\/chaincode\/common.go,the function chaincodeInvokeOrQuery is used as chaicode query or invoke and this method will call method ChaincodeInvokeOrQuery\nin the comment of method ChaincodeInvokeOrQuery\n\/\/ ChaincodeInvokeOrQuery invokes or queries the chaincode. If successful, the\n\/\/ INVOKE form prints the ProposalResponse to STDOUT, and the QUERY form prints\n\/\/ the query result on STDOUT. \n\nthis means if you call chaincode query in cli or terminal,It will output the result(asset value) On STDOUT,and the chaincode invoke will output ProposalResponse\nbut you can observe that ChaincodeInvokeOrQuery return same format result(ProposalResponse) what ever you call query or invoke,this means the result of query include the endorsing signature as well,but we choose not to output it.\nfunc ChaincodeInvokeOrQuery(\n    spec *pb.ChaincodeSpec,\n    cID string,\n    txID string,\n    invoke bool,\n    signer msp.SigningIdentity,\n    certificate tls.Certificate,\n    endorserClients []pb.EndorserClient,\n    deliverClients []api.PeerDeliverClient,\n    bc common.BroadcastClient,\n) (*pb.ProposalResponse, error) {\n    \/\/ Build the ChaincodeInvocationSpec message\n    invocation := &pb.ChaincodeInvocationSpec{ChaincodeSpec: spec}\n\n    creator, err := signer.Serialize()\n    if err != nil {\n        return nil, errors.WithMessage(err, fmt.Sprintf(\"error serializing identity for %s\", signer.GetIdentifier()))\n    }\n\n    funcName := \"invoke\"\n    if !invoke {\n        funcName = \"query\"\n    }\n\n    \/\/ extract the transient field if it exists\n    var tMap map[string][]byte\n    if transient != \"\" {\n        if err := json.Unmarshal([]byte(transient), &tMap); err != nil {\n            return nil, errors.Wrap(err, \"error parsing transient string\")\n        }\n    }\n\n    prop, txid, err := putils.CreateChaincodeProposalWithTxIDAndTransient(pcommon.HeaderType_ENDORSER_TRANSACTION, cID, invocation, creator, txID, tMap)\n    if err != nil {\n        return nil, errors.WithMessage(err, fmt.Sprintf(\"error creating proposal for %s\", funcName))\n    }\n\n    signedProp, err := putils.GetSignedProposal(prop, signer)\n    if err != nil {\n        return nil, errors.WithMessage(err, fmt.Sprintf(\"error creating signed proposal for %s\", funcName))\n    }\n    var responses []*pb.ProposalResponse\n    for _, endorser := range endorserClients {\n        proposalResp, err := endorser.ProcessProposal(context.Background(), signedProp)\n        if err != nil {\n            return nil, errors.WithMessage(err, fmt.Sprintf(\"error endorsing %s\", funcName))\n        }\n        responses = append(responses, proposalResp)\n    }\n\n    if len(responses) == 0 {\n        \/\/ this should only happen if some new code has introduced a bug\n        return nil, errors.New(\"no proposal responses received - this might indicate a bug\")\n    }\n    \/\/ all responses will be checked when the signed transaction is created.\n    \/\/ for now, just set this so we check the first response's status\n    proposalResp := responses[0]\n   \n    \/\/till here,query and invoke almost same,if invoke ,it will continue execution \n      ordering step,if query ,it will return \n\n    if invoke {\n        if proposalResp != nil {\n            if proposalResp.Response.Status >= shim.ERRORTHRESHOLD {\n                return proposalResp, nil\n            }\n            \/\/ assemble a signed transaction (it's an Envelope message)\n            env, err := putils.CreateSignedTx(prop, signer, responses...)\n            if err != nil {\n                return proposalResp, errors.WithMessage(err, \"could not assemble transaction\")\n            }\n            var dg *deliverGroup\n            var ctx context.Context\n            if waitForEvent {\n                var cancelFunc context.CancelFunc\n                ctx, cancelFunc = context.WithTimeout(context.Background(), waitForEventTimeout)\n                defer cancelFunc()\n\n                dg = newDeliverGroup(deliverClients, peerAddresses, certificate, channelID, txid)\n                \/\/ connect to deliver service on all peers\n                err := dg.Connect(ctx)\n                if err != nil {\n                    return nil, err\n                }\n            }\n\n            \/\/ send the envelope for ordering\n            if err = bc.Send(env); err != nil {\n                return proposalResp, errors.WithMessage(err, fmt.Sprintf(\"error sending transaction for %s\", funcName))\n            }\n\n            if dg != nil && ctx != nil {\n                \/\/ wait for event that contains the txid from all peers\n                err = dg.Wait(ctx)\n                if err != nil {\n                    return nil, err\n                }\n            }\n        }\n    }\n\n    return proposalResp, nil\n}","718":null,"719":"It is used by generic-seeder in it's PushVersion function, which corresponds to the \"version\" message used in handshakes between new bitcoin peers.\nFrom the bitcoin wiki:\n\nnonce     uint64_t: Node random nonce, randomly generated every time a version packet is sent. This nonce is used to detect connections to self.\n\nThe PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime) routine is the equivalent routine in the Bitcoin source:\nvoid PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime)\n{\n<...>\n    uint64_t nonce = pnode.GetLocalNonce();\n<...>\n    m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n<...>\n}","720":null,"721":"Nodes can broadcast their presence on a predefined port and in a predefined message format. Other nodes can be listening on this port, so that they \"catch\" the message from a new node (broadcasting their presence).\nSome clients also have a predefined list of trusted nodes that are usually maintained by the network core development team or some other trusted groups, so that the client doesn't have to wait for other nodes to broadcast their presence and can communicate with these trusted nodes right away.","722":null,"723":null,"724":null,"725":"IPFS is immutable, meaning when you add your directory along with the files, the directory gets a unique CID based on the contents of the directory. So in a sense, nobody can modify it, not even you, because it's immutable. I believe this confusion can be resolved with more background on how IPFS works.\nWhen you add things to IPFS each file is hashed, and given a CID. The same is true for directories, but their CID can more easily be understood as a sum of the contents of the directory. So if any files in the directory are updated, added, or deleted, the directory gets a new CID.\nUnderstanding this, if someone else added the exact same content in the exact same way, they'd end up with the exact same CID! With this, if two people added the same CID, and a third person requested that file (or directory), both nodes would be able to serve the data, as we know it's exactly the same. The same is true if you simply shared your CID and another node pinned it, both nodes would have the same data, so if anyone requested it, both nodes would be able to serve it.\nSo your local copy, cannot be edited by anyone. In a sense, if you're relying on the IPFS CID as the address of your data, not even by you! This is why IPFS is typically referred to as \"immutable\", because any data you request via an IPFS CID will always be the same. If you change any of the data, you'll get a new CID.\nMore info can be found here: Content Addressing & Immutability\nIf you read all this and thought \"well what if I want mutable data?\", I'd recommend looking into IPNS and possibly ipfs-sync if you're looking for a tool to automatically update IPNS for you.","726":"\"Memorizing\" the hashes of previous blocks is not workable, because a new node must be able to start from scratch (with no memory) and validate the previous blocks on its own.  It should not have to \"trust\" other nodes.  That is a major design goal of <blockchain>.\nThe hash difficulty is necessary to limit the speed at which new blocks can be created worldwide (for example one new block worldwide every 10 minutes).  If they could be created very quickly then a malicious node could create an incorrect (but valid looking) chain that is the longest of any other node's. The rule is that the longest chain is accepted.\nEDIT:\nJust to expand... <blockchain> design anticipates that occasionally a small number (say, 1 or 2) of malicious blocks could be added to the \"longest\" chain and would be accepted as valid temporarily. It is expected that the non-malicious majority of hashing power worldwide will eventually come up with an even longer chain that discards the malicious block(s) (performing a co-called \"<blockchain> rewrite\").\nThat is why it is recommended to wait for a certain number of blocks to be added (so-called \"confirmations\", e.g. 6) before accepting a new block as correct (because it is extremely unlikely to ever be rewritten at that point). It's also why the so-called \"51%\" attack (meaning the majority of worldwide hashing power is conspiring malliciously) is a vulnerability.","727":null,"728":null,"729":null,"730":null,"731":"Short answer: Currently not possible using Truffle. But if you know what you're doing, you could keep the storage with more low-level approach.\n\nBy running truffle migrate you are usually running a javascript code that deploys the Solidity contract using the standard CREATE EVM opcode. So every time you're running truffle migrate, Truffle deploys the contract to a new address that has empty storage slots.\nEven though it's possible to redeploy a smart contract to an already used address using CREATE2 opcode (and to keep the original storage data), Truffle currently doesn't support this option.\nNote: The --reset option only runs all migrations from the beginning in case of previous failure, but has no effect on the storage or the contract address.\n\nYou could achieve this goal (keeping the storage) by setting the (contract deployment) transaction data to an instruction to deploy to an address that already contains a self-destruct contract. But it's much more low-level approach than Truffle currently allows. If you want to learn more about this technique, these articles would be a good start:\n\nhttps:\/\/blog.ricmoo.com\/wisps-the-magical-world-of-create2-5c2177027604\nhttps:\/\/medium.com\/@jason.carver\/defend-against-wild-magic-in-the-next-ethereum-upgrade-b008247839d2","732":"Metamask doesn't share the private key directly for security reasons. And sometimes it doesn't even have the key - for instance when the user is using the Metamask UI to operate a hardware wallet account.\nYou'll need to construct the transaction object and pass it to the ethereum.request() method. This will open the Metamask window where the user can sign or decline the transaction request.\nCode example is pretty straightforward and is in the linked documentation.","733":"You cannot update it unless you have used a proxy or otherwise coded in that you can update it. You'll have to redeploy.\nUpdating a live smart contract","734":null,"735":"See tutorial again.\nIt uses own function sha256() instead of standard hashlib.sha256() and this sha256() has .hexdigest() at the end:\ndef sha256(message):\n    return hashlib.sha256(message.encode('ascii')).hexdigest()\n\nAnd later it uses this sha256() before digest.startswith()\n  digest = sha256(...)\n  if digest.startswith(prefix):\n      # ... code ...\n\nAnd your forgot .hexdigest() in your code.\n  digest = hashlib.sha256(...).hexdigest()\n  if digest.startswith(prefix):\n      # ... code ...\n\n\nBy the way: I think return digest in tutorial is in wrong place - it will return digest in first loop but it should do this inside if digest.startswith(prefix):\n     digest = hashlib.sha256(str(hash(message)).encode('utf-8') + str(i).encode('utf-8')).hexdigest()\n\n     if digest.startswith(prefix):\n        print(\"after\", i, \"iterations found nonce:\", digest)\n        return digest\n\nIf after 1000 iterations it will not find digest with prefix then it will return None","736":null,"737":null,"738":"There is an overview here on the DevHub\nAnd there are examples throughout substrate that include tests.rs and mock.rs files to use as reference.\nIf you have not already, checkout the create a pallet tutorial and the recipes all have some tasty examples to look at for these as well.","739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":"How to calculate the data field size\n(when you're sending a transaction calling a smart contract function)\nThe data field value could be divided into three parts:\n\n0x\n4 bytes (8 hex characters) - This is the function signature, it identifies the function that you are going to call.\n\nThe value is first 4 bytes of keccak256 hash of the function name and argument types. Example: transfer(address,uint256) => a9059cbb\n\n\nthe rest of data - Arguments passed into the function.\n\n\nThe easiest way is to use a library that calculates the size for you. :) For example <web3>js function encodeFunctionCall().\nExample:\nconst result = <web3>.eth.abi.encodeFunctionCall({\n    name: 'transfer',\n    type: 'function',\n    inputs: [{\n        type: 'address',\n        name: ''\n    },{\n        type: 'uint256',\n        name: ''\n    }]\n}, ['0x1231231231231231231231231231231231231231', '1']);\nconsole.log(result);\n\nReturns\n0xa9059cbb00000000000000000000000012312312312312312312312312312312312312310000000000000000000000000000000000000000000000000000000000000001\n\n\na9059cbb is the function signature\n0000000000000000000000001231231231231231231231231231231231231231 is the address type (256bit, 64 hex chars) first argument\n0000000000000000000000000000000000000000000000000000000000000001 is the uint256 type (256bit, 64 hex chars) second argument\n\nSo the result is 0x and 136 hex characters, which makes 68 bytes.","746":null,"747":"Usual implementation of P2P connection is to have one predefined port (for example in case of Bitcoin Core it's 8333) and the applications periodically broadcast their messages on this particular port.\nIt's also usual to have in your app a preset list of nodes that are likely to be online 24\/7, so that the app can listen to their messages right from the startup and doesn't have to wait for other nodes to broadcast their presence.\nThe app can keep a list of currently active nodes (for example the ping period is 60 seconds, so any node that has pinged within the last 60 seconds is considered active) in case it needs to communicate with the other nodes directly.\nBut most communication is usually done via broadcasting and listening to messages on the predefined port.","748":"TLDR: you didn't create (or set) any key\nAn EC_KEY object in OpenSSL, like the objects for other publickey schemes with parameters (DSA and DH), can actually be in one of 4 states:\n\nthe object exists but is not set at all\n\nthe object has the paramweters set, but neither private nor public key\n\nthe object has the parameters and public key set, but not private key; this is commonly used by parties other than the key owner\n\nthe object has the parameters set and both private and public key; this is commonly used by the key owner\n\n\nFor EC the parameters are often loosely called a \"curve\" but technically that is imprecise: they actually include an underlying field (here Fp, the integers modulo a particular 256-bit prime); the coefficients of a short Weierstrass equation defining a curve over that field; and a prechosen 'base' or 'generator' point on that curve. Mathematically these parameters form a finite group, and OpenSSL actually stores them in a related but different object type EC_GROUP.\nEC_KEY_new_by_curve_name produces state 2 -- it has the parameters (specifically EC_GROUP) set, but no key -- so EC_KEY_check_key has no key to check, and fails.\nIn general whenever any OpenSSL crypto function returns a failure indication (and often but not always when an SSL\/TLS function does) you should look at the error stack. (Note the subsequent item there, PROG9, is mostly obsolete; OpenSSL 1.1.0 up automatically initializes library data, including the error strings, without you coding it explicitly as in older versions.) With this code\n\/* SO 66847659 2021-03-29 *\/\n#include <stdio.h>\n#include <openssl\/ec.h>\n#include <openssl\/obj_mac.h>\n#include <openssl\/err.h>\n\nint main (void){\n  EC_KEY * ec = EC_KEY_new_by_curve_name(NID_secp256k1);\n  if( EC_KEY_check_key(ec) <= 0 ) ERR_print_errors_fp(stdout);\n  return 0;\n}\n\nI get the more specific and helpful error message\n140659993163520:error:100B1043:elliptic curve routines:EC_KEY_check_key:passed a null parameter:crypto\/ec\/ec_key.c:258:\n\nIf you want to generate a new keypair, after creating the EC_KEY object (with parameters) call EC_KEY_generate_key -- or better style since 1.0.0 in 2010 is to use the higher-level generic EVP_PKEY interface instead of the algorithm-specific one.\nOTOH if you want to use an existing keypair, or publickey, there are numerous options depending on the details of your environment and data that you didn't specify.","749":null,"750":null,"751":null,"752":"It sound simply but for me this day was hard. What i just didn't do) Here is code that works:\nconst TronWeb = require(\"tronweb\");\n\nconst tronWeb = new TronWeb({\n    fullHost: 'https:\/\/api.shasta.trongrid.io',\n    headers: { \"TRON-PRO-API-KEY\": '6ad9cb75-****-4f4c-a9cf-2156aa5e8453' },\n    privateKey: 'c4f27f7b0*********67d3714405141cdf61b6ecddfdd612b21c891'\n});\n\nasync function f() {\n    let instance = await tronWeb.contract().at('TNSRwKB4YpLQTbmG9tST9zAqXXssho5hgZ');\n    let result = await instance['g']().call();\n    console.log(result);\n}\nf();\n\nSee how correct need to type method\nBefore:\n let instance = await tronWeb.contract(\"TNSRwKB4YpLQTbmG9tST9zAqXXssho5hgZ\");\n let result = await instance().f().call(); - WRONG\nAfter:\n  let instance = await tronWeb.contract().at('TNSRwKB4YpLQTbmG9tST9zAqXXssho5hgZ');\n  let result = await instance['f']().call(); - RIGHT!\nOr:\n  let instance = await tronWeb.contract().at('TNSRwKB4YpLQTbmG9tST9zAqXXssho5hgZ');\n  let result = await instance.f().call(); - RIGHT!\n\n' instead of \", to call method ['name of method']().call(); and instance without ()","753":null,"754":"In getBlockByHeight() in <blockchain>Controller.js, you are configuring a route for\n\/block\/height\/:height\n\nThat will NOT handle a request for:\n\/block\/0\n\nThe route code is expecting\n\/block\/height\/0\n\nSo, you're either requesting the wrong URL from the client or your server code is configuring the wrong route specification.","755":null,"756":null,"757":"You could use syntax like that:\n   Object.keys(jsonData['texts']).forEach(function(key) {\n        var value = jsonData['texts'][key];\n        console.log(key + ':');\n        console.log(value);\n    });\n\nPlease note that value is still an object, thats why I console.log it separately.","758":"Yes, it's possible. All Ethereum token standards (ERC-20, ERC-721, ...) only define an interface and few other points (such as when to emit events). So you're free to implement the methods however you need.\n\nLet's say you have a very simple transfer() implementation without the fees.\nNote: This doesn't follow the ERC-* standards and is vulnerable to integer overflow in Solidity <= 0.7.6. I've simplified it to better show the calculations.\nfunction transfer(address _to, uint256 _amount) external {\n    balances[msg.sender] -= _amount;\n    balances[_to] += _amount;\n}\n\nAdding the fees is just a matter of a small calculation:\naddress admin = address(0x123);\n\nfunction transfer(address _to, uint256 _amount) external returns (bool) {\n    uint256 fee = (_amount \/ 100) * 3; \/\/ Calculate 3% fee\n\n    balances[msg.sender] -= _amount; \/\/ subtract the full amount\n    balances[admin] += fee; \/\/ add the fee to the admin balance\n    balances[_to] += (_amount - fee); \/\/ add the remainder to the recipient balance\n}\n\nNote: This is to demonstrate the basics, and doesn't take into account few cases such as _amount having value not divisible by 100 (the fee is not going to be precisely 3% in that case).","759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":"Assuming you have TronWeb installed.\nYou can do TronWeb.createAccount() to generate an address and save the output, example from docs.\nYou may need to check balance of address one by one by posting to TronGrid, https:\/\/api.trongrid.io\/wallet\/getaccount, example from docs","770":"You can try setting the CORE_PEER_MSCONFIGPATH variable:\necho $CORE_PEER_MSPCONFIGPATH\n\nIf you have set this environment variable, you can get output at this path:\n\/home\/www\/byfn-on-k8s\/crypto-config\/peerOrganizations\/org1.example.com\/users\/Admin@org1.example.com\/msp\n\nwhich is the path of your msp.\nthen you can check msp dir in this path is correct or not.\n\nIf there is no output, you may not have set the CORE_PEER_MSPCONFIGPATH environment variable.","771":"Change the compiler version in the truffle-config.js file to match the one your are using in your smart contract","772":"I finaly found the solution. The Story how i found it:\nShort Story:\nPrerequisites: Install indy-sdk, aries-cloudagent, <python>3_indy and <python> 3.6.9+ on your machine. See the long story if you don\u00c2\u00b4t know how to do that.\n<python> 3.6.9 comes out of the box with Ubuntu18LTS\n\ninstall aries-cloudagent-<python> (aca-py) localy.\nrun aca-py first with the provision command to config your aca-py instance. Use the argument wallet-type indy for that\nrun aca-py normaly with the start command and your config-params. Be sure to use the --wallet-type indy flag to be able to connect to an indy ledger\n\nLong Story:\nInside the aries-cloudagent-<python> (aca-py) code, it seems that the configuration, which ledger to use (e.g. an indy ledger) comes from the specified wallet type.\n1st.: providing arguments: --wallet-type indy\n-> this returned the error, that --wallet-name and --wallet-key parameters are needed. So i provided them:\n.\/scripts\/run_docker start \n-e http:\/\/127.0.0.1:8000 \n-it http 127.0.0.1 8000 \n-ot http\n--admin 127.0.0.1 11000\n--admin-insecure-mode\n--log-level DEBUG\n--genesis-url https:\/\/raw.githubusercontent.com\/CHempel-esatus\/SSI4DE_Genesis\/master\/pool_<transactions>_genesis \n--trace \n--recreate-wallet \n--wallet-type indy \n--wallet-name test \n--wallet-key 12345\n\n2nd.: This results in the following error, telling that no Database for the wallet is provided.\n2021-03-16 09:19:45,447 indy.libindy DEBUG _indy_loop_callback: >>> command_handle: 0, err , args: (0,)\n2021-03-16 09:19:45,447 indy.libindy WARNING _indy_loop_callback: Function returned error \n2021-03-16 09:19:45,449 indy.libindy DEBUG _indy_loop_callback <<<\n2021-03-16 09:19:45,449 aries_cloudagent.commands.start ERROR Exception during startup:\nTraceback (most recent call last):\n  File \"\/home\/indy\/aries_cloudagent\/indy\/sdk\/wallet_setup.py\", line 169, in open_wallet\n    credentials=json.dumps(self.wallet_access),\n  File \"\/home\/indy\/.pyenv\/versions\/3.6.13\/lib\/<python>3.6\/site-packages\/indy\/wallet.py\", line 127, in open_wallet\n    open_wallet.cb)\nindy.error.WalletNotFoundError\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"\/home\/indy\/aries_cloudagent\/commands\/start.py\", line 72, in init\n    await startup\n  File \"\/home\/indy\/aries_cloudagent\/commands\/start.py\", line 28, in start_app\n    await conductor.setup()\n  File \"\/home\/indy\/aries_cloudagent\/core\/conductor.py\", line 91, in setup\n    self.root_profile, self.setup_public_did = await wallet_config(context)\n  File \"\/home\/indy\/aries_cloudagent\/config\/wallet.py\", line 40, in wallet_config\n    profile = await mgr.open(context, profile_cfg)\n  File \"\/home\/indy\/aries_cloudagent\/indy\/sdk\/profile.py\", line 161, in open\n    opened = await indy_config.open_wallet()\n  File \"\/home\/indy\/aries_cloudagent\/indy\/sdk\/wallet_setup.py\", line 182, in open_wallet\n    ) from x_indy\n  File \"\/home\/indy\/aries_cloudagent\/indy\/sdk\/wallet_setup.py\", line 169, in open_wallet\n    credentials=json.dumps(self.wallet_access),\n  File \"\/home\/indy\/.pyenv\/versions\/3.6.13\/lib\/<python>3.6\/site-packages\/indy\/wallet.py\", line 127, in open_wallet\n    open_wallet.cb)\naries_cloudagent.core.error.ProfileNotFoundError: Wallet 'test' not found: Error: Wallet not found\n  Caused by: No wallet database exists\n\n3rd.: The documentation of aca-py at https:\/\/github.com\/<hyperledger>\/aries-cloudagent-<python>\/blob\/main\/DevReadMe.md explicitly says:\n\nRunning Locally: For local development, we recommend using the provided Docker scripts to run the ACA-Py software\n\n4th.: aca-py is able to use sqlite, which is installed in the docker container. To see that aca-py is compatible with sqlite, run\n.\/scripts\/run_docker start --help\nwhich returns the list of available arguments. One is the following:\n--wallet-storage-type <storage-type>\n                        Specifies the type of Indy wallet backend to use.\n                        Supported internal storage types are 'basic' (memory),\n                        'default' (sqlite), and 'postgres_storage'. The\n                        default, if not specified, is 'default'. [env var:\n                        ACAPY_WALLET_STORAGE_TYPE] \n\n\n5th: Running\n.\/scripts\/run_docker provision \n-e http \n--genesis-url \nhttps:\/\/raw.githubusercontent.com\/CHempel-esatus\/SSI4DE_Genesis\/master\/pool_<transactions>_genesis \n--recreate-wallet \n--wallet-type indy \n--wallet-name test \n--wallet-key 12345\n\nreturns\nSuccessfully tagged aries-cloudagent-run:latest\nCreated new profile\nProfile backend: indy\nProfile name: test\nNo public DID\nLedger configured\n\nThis is weird, because now he is able to find sqlite. This seems to configure the Database properly so it can be used. But because it is inside a docker container, and the container discarding every change, this internal configuration will never be available.\n6th. To solve this, i\u00c2\u00b4ve installed on an Ubuntu18LTS the aries cloud-agent package localy from https:\/\/pypi.org\/project\/aries-cloudagent\/\npip3 install aries-cloudagent\npip3 install <python>3_indy\n\nand followed the installation instructions for the indy-sdk https:\/\/github.com\/<hyperledger>\/indy-sdk\nI also installed sqlite on the local machine with:\nsudo apt install sqlite\n\n7th.: After i rebooted the system, i executed:\naca-py provision -e http:\/\/127.0.0.1:8000 --genesis-url https:\/\/raw.githubusercontent.com\/CHempel-esatus\/SSI4DE_Genesis\/master\/pool_<transactions>_genesis --recreate-wallet --wallet-type indy --wallet-name test --wallet-key test\n\nreturning\nCreated new profile\nProfile backend: indy\nProfile name: test\nNo public DID\nLedger configured\n\n\n8th.: After that, i cloud run aca-py and connect to my ledger using the admin-REST-api","773":null,"774":"I got it fixed by matching the compiler version to the code version...","775":"You can use most of the same tools, such as <web3>. Just use the binance as the provider (JS):\n\/\/ mainnet \nconst <web3> = new <web3>('https:\/\/bsc-dataseed1.binance.org:443');\n\/\/ testnet\nconst <web3> = new <web3>('https:\/\/data-seed-prebsc-1-s1.binance.org:8545');\n\nIn <python> you have to add middlewear:\nfrom <web3> import <web3>\nfrom <web3>.middleware import <geth>_poa_middleware\n\n<web3> = <web3>(<web3>.WebsocketProvider(\n  \"wss:\/\/bsc-ws-node.nariox.org:443\",\n  websocket_timeout=60,\n))\n<web3>.middleware_onion.inject(<geth>_poa_middleware, layer=0)","776":"To change the state of a smart contract you need to send a transaction instead of call.\nChange:\nsubject.returnAndIncrement.call ()\n\nTo:\n  subject.returnAndIncrement.send({..}) \/\/ you can pass options such gas, account .. \n\nFor more details look at the <web3>js doc\nBut the return of send transaction is not the value you are looking for, you may need to look in the logs to get the value;","777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":"Payable should be the recipient, not the sender address. Also, your syntax is slightly incorrect.\nAssuming admin is saved as address (not payable)\npayable(admin).transfer(address(this).balance);\n\nAnd if admin is already address payable, it's enough to call just this\nadmin.transfer(address(this).balance);","784":null,"785":"wouldn't a client generate a new wallet for \"his\" <blockchain> each time it goes back online? If so, wouldn't this create a mess on the <transactions> signed on the chain? Since each miner (therefore peer) signing its own reward would use a different <blockchain> wallet than the other peers? Wouldn't this lead to any problems?\n\nYou don't say what problems you think this will lead to. I can't think of any.\n\nFor what I think is definitively more straightforward to use the fee amount to reward the miner, but this doesn't solve my doubts at all. Since the outputs of the <transactions> are signed upon creation, how could the peer initiating the transaction know upfront the possible miner who finds the block? And if he can't know it, how could possibly the miner \"extract\" its reward without tampering the transaction itself?\n\nThe simplest solution to this is for the transaction itself to just contain its inputs and outputs. The fee is the difference between the total inputs and the total outputs.\nThe miner just includes the transaction in the block of <transactions> they mine. They also add one additional transaction into the block, sending themselves the reward. Obviously, they know their own destination address. Every participant who receives the newly-mined block checks to make sure this transaction is valid (just as they check every other one) and doesn't claim a larger reward than is allowed.\n\nAnd if the answer is not to generate a new wallet each time, where could you possibly store that very first private key of the chain's wallet where no one can see it, but still be able to use it, without having to put a server in the middle?\n\nTypically in a file on the local disk. The private key isn't really needed anyway -- you only need it to send. You don't need it to mine or report. So it can be prompted for or decrypted only when actually needed.\n\nOf course it could create a new transaction, and add that to the block. But who would sign that transaction? From where those reward tokens come?\n\nThe usual rule is that the reward transaction has no inputs, one output, and no signature. The tokens come from the pool of unclaimed miner reward tokens which can be finite or infinite depending on the <blockchain>'s design. (For bitcoin, this pool is finite.)","786":null,"787":"You can use WalletConnect mobile linking to communicate between Android apps and Ethereum wallets for signing the documents.\nYou can use <web3>j to communicate with Ethereum JSON-RPC.","788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":"These parameters are set in the node's chain_spec.rs in the template code and an example from polkadot code that ingests a JSON file for a specific chain (examples)\nTo get this generated for you automatically that you can then customize, build the node and then follow the flow outlined in the cumulus workshop to get a plain chainspec, edit as you see fit, and then generate a custom final one that you can use when starting your nodes.","796":null,"797":"Yes, assuming the chain itself doesn't die.\nDying means all of the nodes hosting stop \"seeding\" it to new nodes that want to join the network.\nMost <blockchain>s don't prune old <transactions>, though there are exceptions, including some that compress the entire <blockchain> state into a single ZKProof.","798":"My approach would be to define 3 separate contracts on 3 separate addresses:\n\naddress 0x123123 as the Weapons ERC-721 token contract\naddress 0x456456 as the Vehicles ERC-721 token contract\naddress 0x789789 as the actual game contract\n\nIn the game contract, you can then call the NFTs contracts to get or validate values:\nfunction attack(uint attackerWeaponId) {\n    require(weaponsContract.isOwnerOf(msg.sender, attackerWeaponId));\n    \/\/ ...\n}\n\nThe isOwnerOf() function takes 2 arguments, address owner and uint256 weaponId. Also, a user can probably own more weapons so that's why I'm showing the validation.\nAnd the weapons contract balanceOf(address) would reflect the total amount of the Weapon NFTs that the user has.\nmapping (address => Weapon[]) userOwnedWeapons;\n\nfunction balanceOf(address owner) external view returns (uint256) {\n    return userOwnedWeapons[msg.sender].length;\n}","799":null,"800":null,"801":"I think you should double-check your network. Explorer should be spun up on the same network with Fabric, so that the peers and other nodes can be connected. To check the Fabric network name, you should check in the docker-compose file which set it up and look for CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE or you can navigate to you CLI and run docker network ls. You should be able to find your fabric network name with the DRIVER which should be bridge\nAlso, you should make sure that your Fabric network is up and running properly before bringing Explorer up.","802":"Parity has pluggable consensus engines.","803":"Using Polkadot JS: https:\/\/polkadot.js.org\/docs\/\nTo query all acccounts you need to look at all the entries of system.account\nlet users = substrate.query.system.account.entries();\n\nThen to look at the total balance of a particular user you need to look at their data.free and add that to their data.reserved.\nHere is how you will get the data for the first user:\nlet account_id = util_crypto.encodeAddress(users[0][0].slice(-32));\nlet free_balance = users[0][1].data.free.toNumber();\nlet reserved_balance = users[0][1].data.reserved.toNumber();\n\nFrom there, you should be able to figure out how to sort the list and create the output you want.\nEDIT:\nHere is a full script for others:\nvar { ApiPromise, WsProvider } = require('@polkadot\/api');\nvar { encodeAddress } = require('@polkadot\/util-crypto')\n\nasync function main() {\n    \/\/ Substrate node we are connected to and listening to remarks\n    const provider = new WsProvider('ws:\/\/localhost:9944');\n    const api = await ApiPromise.create({ provider });\n\n    \/\/ Get general information about the node we are connected to\n    const [chain, nodeName, nodeVersion] = await Promise.all([\n        api.rpc.system.chain(),\n        api.rpc.system.name(),\n        api.rpc.system.version()\n    ]);\n    console.log(\n        `You are connected to chain ${chain} using ${nodeName} v${nodeVersion}`\n    );\n\n    \/\/ Adjust how many accounts to query at once.\n    let limit = 50;\n    let result = [];\n    let last_key = \"\";\n\n    while (true) {\n        let query = await api.query.system.account.entriesPaged({ args: [], pageSize: limit, startKey: last_key });\n\n        if (query.length == 0) {\n            break\n        }\n\n        for (const user of query) {\n            let account_id = encodeAddress(user[0].slice(-32));\n            let free_balance = user[1].data.free.toString();\n            let reserved_balance = user[1].data.reserved.toString();\n            result.push({ account_id, free_balance, reserved_balance });\n            last_key = user[0];\n        }\n    }\n\n    console.log(result)\n}","804":"Answering my question here.\nBased on @Gari Singh's answer above the certificate that you have to use in the \"tlsCACerts\" parameter in the connection.json file has to be created by combining the intermediate and root CA into a single file. The first block in the file should be the intermediate CA and the second block should be the root CA. This certificate chaining is required because the intermediate CA is signed by the root CA and the client should pass both so that they can be validated properly. Comprehensive explanation can be found here: https:\/\/www.thesslstore.com\/blog\/root-certificates-intermediate\/\nThe final thing that I was missing because of which I was getting the error \"Failed to evaluate transaction: Error: Committer must be connectable\" was that I was passing 3 orderers in the \"channels\" section of the config and only passing one of their details in the \"orderers\" section of the config. Adding the ip and other details for the other 2 orderers took care of that issue.","805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":"To execute this query successfully you'll need to treat the hash value as a blob type Ion literal, which can be done using backticks and{{...}} :\nSELECT * FROM history(Users) AS h WHERE h.hash = `{{8kmIsF2X2HonQDhuoosBbKZtSQCjHZgnyUmPGZa9pJc=}}`\n\nReference: https:\/\/docs.aws.amazon.com\/qldb\/latest\/developerguide\/ql-reference.query.html#ql-reference.query.backtick\nIt is worth noting that this query scans every revision for all documents in the Users table. QLDB's\nhistory does not support indexes and this query will degrade as the table grows.","813":"For Ethereum the API is called <web3>.eth.getBalance.\nThere is no generic solution because each <blockchain> uses its own incompatible wallet technology.","814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":"Yes, you will see \"hello world 2\" after deployed the contract but you will never be able to see \"newHello\" output. because it sets the empty string whenever you setHello() function is using.","826":null,"827":"You can also do it with <web3>.js. As function\nconst getTxConfirmations = (txHash) => Promise.all([\n    <web3>.eth.getTransaction(txHash).then(tx => tx.blockNumber),\n    <web3>.eth.getBlockNumber()\n]).then(([blockNumber, currentBlockNumber]) => (currentBlockNumber - blockNumber))\n\nAnd with Truffle console:\ntruffle(develop)> <web3>.eth.getTransaction('0x7a28a121c41085ef52d449f64120dbc422ec70b4d324c076c8d89222cf7188c8').then(tx => tx.blockNumber)\n1\ntruffle(develop)> <web3>.eth.getBlockNumber()\n5\ntruffle(develop)> const getTxConfirmations = (txHash) => Promise.all([<web3>.eth.getTransaction(txHash).then(tx => tx.blockNumber), <web3>.eth.getBlockNumber()]).then(([blockNumber, currentBlockNumber]) => (currentBlockNumber - blockNumber))\nundefined\ntruffle(develop)> getTxConfirmations('0x7a28a121c41085ef52d449f64120dbc422ec70b4d324c076c8d89222cf7188c8')\n4","828":"Persisting \/ committing blocks is independent of validating <transactions> and updating the state.  As long as the block is the correct sequence and signed by the correct orderer(s), it will be committed.  Fabric than annotates each transaction in the block with metadata indicating the validity of each transaction.\n\nAs both Org1 and Org2 have peers which successfully endorse the transaction, the transaction is valid for peers which have not been tampered with.  If there were not enough peers available to endorse the transaction, it would be considered invalid by all peers.  There is no need to halt the system as <transactions> are being properly handled with the context of the network trust parameters.","829":"The path\n'$.017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894.transaction.size'\ncannot have a node starting with a 0. So enclose it in quotes:\n'$.\"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\".transaction.size'.\nYou also have a problem with your actual JSON, in that it has trailing commas, which is not supported in SQL Server, nor in the vast majority of parsers and browsers, as it is against the spec.\n\nIf you have different key names for each value, then you need to break out the JSON with OPENJSON:\nSELECT b.*, j.[key] AS hash, JSON_VALUE(j.value,'$.transaction.size') as jj\nFROM <blockchain> as d\nCROSS APPLY OPENJSON(d.json_data) AS j","830":null,"831":"The data transmitted as part of a transaction (method and parameters) is stored in the <blockchain>. The results of transaction processing by the contract are stored in the local storage of each node. The contract has access to its data at any time.\nAn example of a contract is below:\n\nthe AddCustomer method is called transactionally and adds a user\nthe GetCustomerById method is called \"locally\" and shows user data by his identifier\n\npragma solidity 0.5.0;\n\ncontract Gym\n{\n    address  Owner   ;\n\n    struct Customer\n    {\n       bytes32  name ;\n       bytes32  surname ;\n       bytes32  start_date ;\n       bytes32  end_date ;\n    }\n\n    mapping (bytes32 => Customer) Customers ;\n\n\n   constructor() public\n   {\n      Owner = tx.origin ;\n\n   }\n\n   function AddCustomer(bytes32 id_, bytes32 name_, bytes32 surname_, bytes32 start_date_, bytes32 end_date_) public\n   {\n          Customers[id_]=Customer({       name: name_, \n                                       surname: surname_,\n                                    start_date: start_date_,\n                                      end_date: end_date_\n                                   }) ;\n   }\n\n    function GetCustomerById(bytes32 id_) public view returns (bytes32, bytes32, bytes32, bytes32 retVal)\n    {\n       return(Customers[id_].name, Customers[id_].surname, Customers[id_].start_date, Customers[id_].end_date) ;\n    }\n\n}","832":null,"833":null,"834":"Or must it be my backend asking to do the same operations for day 2 and every day of the week?\n\nYes.","835":"I found the error myself, you need to remove the -tmp flag before starting, create your folders with the command -d \/ node \/ node1, and after inserting the keys, restart the nodes","836":null,"837":"This has solved the issue. I had to add the 2 flags of --cfg.identities.allowremove and --cfg.affiliations.allowremove and then restart docker and it worked.","838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":"You can fix it by doing reenroll as you said.\nThe update command of IdentityService is to update the identity of registered user in CA.\nSince this is not the process of updating the certificate, the only way to obtain a certificate containing the newly modified Attr is to obtain a new certificate (the certificate is the X.509 standard).\n\nWhy does the attr change require a new certificate?\n\nFabric generally uses the X.509 certificate standard method.(when not using idemix)\nActually not only Fabric, almost all certificates on the web follow the standard.\nIn Fabric, the Attr is existed in extensions in the X509(v3) certificate and has the following format.\n\nX509v3 extensions:\n    ...\n    1.2.3.4.5.6.7.8.1:\n        {\"attrs\":{\"hf.Affiliation\":\"org1.department1\",\"hf.EnrollmentID\":\"appUser5\",\"hf.Type\":\"client\",\"userType\":\"userType\"}}\n    ...\n\n\nIn other words, when Attr is modified, extensions are modified.\nIn X.509(v3), extenstions are also included in the certificate integrity verification process.\nThe integrity verification process is implemented based on PKI and Hash, and is provided in the form of attaching the signature signed by the CA to the hashed data (including extensions) to the certificate.\nThat is, if extensions are modified, the signature in the certificate must be modified, which means that a new certificate must be issued.\n\n\nCome back to Fabric,\n\nThe reenroll command is an act of newly issuing enrolled user data based on the registered user.\nAfter updating, a new certificate is issued through the reenroll command to obtain a certificate that includes new Attrs in the corresponding certificate.\n\nThe following example code has been tested and works. See this.\n\/\/ registerUser, enrollUser, updateUser, reEnrollUser\n\n\/*\n * Copyright IBM Corp. All Rights Reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n *\/\n\n'use strict';\n\nconst { Wallets } = require('fabric-network');\nconst FabricCAServices = require('fabric-ca-client');\nconst fs = require('fs');\nconst path = require('path');\n\nasync function main() {\n    try {\n        \/\/ 0. given, already enrolled 'admin'\n        const ccpPath = path.resolve(__dirname, '..', '..', 'test-network', 'organizations', 'peerOrganizations', 'org1.example.com', 'connection-org1.json');\n        const ccp = JSON.parse(fs.readFileSync(ccpPath, 'utf8'));\n        const caURL = ccp.certificateAuthorities['ca.org1.example.com'].url;\n        const ca = new FabricCAServices(caURL);\n        const walletPath = path.join(process.cwd(), 'wallet');\n        const wallet = await Wallets.newFileSystemWallet(walletPath);\n        const provider = wallet.getProviderRegistry().getProvider('X.509');\n        \n        \/\/ 1. register testUser\n        const adminIdentity = await wallet.get('admin');\n        const appUser = 'testUser';\n        const adminUser = await provider.getUserContext(adminIdentity, 'admin');\n        const secret = await ca.register({\n                affiliation: 'org1.department2',\n                attrs: [{name: 'userType', value: 'userType', ecert: true}],\n                enrollmentID: appUser,\n                role: 'client'\n        }, adminUser);\n\n        \/\/ 2. enroll testUser\n        const enrollment = await ca.enroll({\n                enrollmentID: appUser,\n                enrollmentSecret: secret\n        });\n        const x509Identity = {\n                credentials: {\n                        certificate: enrollment.certificate,\n                        privateKey: enrollment.key.toBytes(),\n                },\n                mspId: 'Org1MSP',\n                type: 'X.509',\n        };\n        await wallet.put(appUser, x509Identity);\n\n        \/\/ 3. update testUser's Identity in Fabric-CA\n        const appUserIdentity = await wallet.get(appUser);\n        const newAppUser = await provider.getUserContext(appUserIdentity, appUser);\n        const identityService = ca.newIdentityService();\n        var theIdentityRequest = { enrollmentID: appUser, affiliation: 'org1.department1', attrs: [ {name: 'userType', value: 'Student', ecert: true} ] };\n        let response = await identityService.update(appUser, theIdentityRequest, adminUser);\n        console.log(\"userIdenity attributes: \", response.result.attrs);\n\n        \/\/ 4. reenroll testUser\n        const newEnrollment = await ca.reenroll(newAppUser);\n        const newX509Identity = {\n                credentials: {\n                        certificate: newEnrollment.certificate,\n                        privateKey: newEnrollment.key.toBytes(),\n                },\n                mspId: 'Org1MSP',\n                type: 'X.509',\n        };\n        await wallet.put(`new_${appUser}`, newX509Identity);\n\n    } catch (error) {\n        console.error(`Failed to register user \"appUser\": ${error}`);\n        process.exit(1);\n    }\n}\n\nls wallet\ntestUser.id  new_testUser.id\n\nThe result of docode the issued certificate\n(hf.Affiliation and userType are updated)\n\/\/ attrs in 'enroll' Certificate's extensions\n{\"attrs\": \"hf.Affiliation\":\"org1.department2\",\"hf.EnrollmentID\":\"testUser\",\"hf.Type\":\"client\",\"userType\":\"userType\"}}\n\n\/\/ attrs in 'reenroll' Certificate's extensions\n{\"attrs\":{\"hf.Affiliation\":\"org1.department1\",\"hf.EnrollmentID\":\"testUser\",\"hf.Type\":\"client\",\"userType\":\"Student\"}}\n\n\n[P.S] Looking at the Version indicated in the client's identity, it seems that there may be a way to upgrade the existing one, but I have not checked or tried it.","845":null,"846":null,"847":null,"848":"The value you're trying to scrape - the total ICX balance - appears to be the sum of the \"available\" ICX, and the \"staked\" ICX:\n\nI've added the red lines for emphasis. The sum of these two values is the total ICX balance. Again, if you log your browser's network traffic, you'll find that these values come from requests made to different REST APIs. One is a HTTP GET request, the other an HTTP POST request. Again, you can find out how the POST payload is supposed to look by looking at the network traffic logs. If you need a little guidance for how to approach these kinds of network-traffic-sniffing solutions, I recommend you read this answer I posted for a different question, where someone needed help scraping information from a page about different wines and vineyards, and that page also happened to make XHR requests to a REST API. In it, I go more in-depth about each step of logging your network traffic, and finding the information you're looking for.\ndef get_available_icx(address):\n\n    import requests\n\n    url = \"https:\/\/tracker.icon.foundation\/v3\/address\/info\"\n\n    params = {\n        \"address\": address\n    }\n\n    response = requests.get(url, params=params)\n    response.raise_for_status()\n\n    return float(response.json()[\"data\"][\"balance\"])\n\ndef get_staked_icx(address):\n\n    import requests\n\n    url = \"https:\/\/wallet.icon.foundation\/api\/v3\"\n\n    form_data = {\n        \"jsonrpc\": \"2.0\",\n        \"id\": 0,\n        \"method\": \"icx_call\",\n        \"params\": {\n            \"from\": \"hx0000000000000000000000000000000000000000\",\n            \"to\": \"cx0000000000000000000000000000000000000000\",\n            \"dataType\": \"call\",\n            \"data\": {\n                \"method\": \"getDelegation\",\n                \"params\": {\n                    \"address\": address\n                }\n            }\n        }\n    }\n\n    response = requests.post(url, json=form_data)\n    response.raise_for_status()\n\n    return int(response.json()[\"result\"][\"totalDelegated\"], 16) \/ (10 ** 18)\n\n\n\ndef main():\n\n    address = \"hx4ae18d8f72200dc564673a0ae7206d862992753c\"\n\n    total_icx = get_available_icx(address) + get_staked_icx(address)\n    print(total_icx)\n    \n    return 0\n\n\nif __name__ == \"__main__\":\n    import sys\n    sys.exit(main())","849":"You're right. This page is populated asynchronously using JavaScript, so BeautifulSoup and similar tools won't be able to see the specific content you're trying to scrape.\nHowever, if you log your browser's network traffic, you can see some (XHR) HTTP GET requests being made to a REST API, which serves its results in JSON. This JSON happens to contain the information you're looking for. It actually makes several such requests to various API endpoints, but the one we're interested in is called txList (short for \"transaction list\" I'm guessing):\ndef main():\n\n    import requests\n\n    url = \"https:\/\/tracker.icon.foundation\/v3\/block\/txList\"\n\n    params = {\n        \"height\": \"29562412\",\n        \"page\": \"1\",\n        \"count\": \"10\"\n    }\n\n    response = requests.get(url, params=params)\n    response.raise_for_status()\n\n    base_url = \"https:\/\/tracker.icon.foundation\/transaction\/\"\n\n    for transaction in response.json()[\"data\"]:\n        print(base_url + transaction[\"txHash\"])\n\n    return 0\n\n\nif __name__ == \"__main__\":\n    import sys\n    sys.exit(main())\n\nOutput:\nhttps:\/\/tracker.icon.foundation\/transaction\/0x9e5927c83efaa654008667d15b0a223f806c25d4c31688c5fdf34936a075d632\nhttps:\/\/tracker.icon.foundation\/transaction\/0xd64f88fe865e756ac805ca87129bc287e450bb156af4a256fa54426b0e0e6a3e\n>>>","850":null,"851":"A very good question, sir.\nUsually, in setups like this backend signs the transaction with its wallet key. The backend has a hot wallet with ETH balance to be able to create and broadcast <transactions>.\nThe transaction is pushed to Ethereum API node over JSON-RPC. The node broadcasters the transaction to P2P network. A miner picks up the transaction from the mempool. A new block is created. The miner broadcasts the newly crated block back to the peer-to-peer network. Your Ethereum node picks up the new block. <web3>.js backend application polls or subscribes events related to the smart contracts from your Ethereum node. Backend event <web3>.js handlers are fired for the state changes in the new block.\nNote that the blocks can be also rolled back in the case of a minor <blockchain> reorganisation. In the case or reorganisation, the event handlers fire again (twice, thrice, etc.) for each competing block. Minor <blockchain> reorganisation may occur many times in an hour. The current state is probabilistic, so you always need to wait for a few blocks to be sure.\nFor events and <transactions> by other actors in the <blockchain>, you just subscribe to the events and process them as new blocks arrive from miners to your node.","852":null,"853":null,"854":null,"855":"You have to convert argument of decodefunctions tobytes. Also struct.pack returns bytes and codecs.decode returns stringso have to convert results of decode to bytes also.\nimport hashlib\nimport codecs\nimport struct\nimport sys\n\n<blockchain>Object = {\n    'version':536871426,\n    'previousHash': b'aa11661d07d7e13b94403bc00a9786b07fe711140743f0f9d7e35a478d80e840',\n    'merkleRoot': b'a41494afe694e450a7163103fd08ea3d4b5fcb30556165f6e567893989c39222',\n    'bits': 0x19030d6c,\n    'time':1610982871,\n    'nonce':3341292488\n}\n\n\n<blockchain>Header = (\n    struct.pack('<L', <blockchain>Object['version']) +\n    bytes(codecs.decode(<blockchain>Object['previousHash'])[::-1], 'utf-8') +\n    bytes(codecs.decode(<blockchain>Object['merkleRoot'])[::-1], 'utf-8') +\n    struct.pack('<L', <blockchain>Object['time']) +\n    struct.pack('<L', <blockchain>Object['bits']) +\n    struct.pack('<L', <blockchain>Object['nonce'])\n)\n\n<blockchain>HashObject = hashlib.sha256(<blockchain>Header).digest()\n<blockchain>HashDigest = hashlib.sha256(<blockchain>HashObject).hexdigest()\n\nprint(<blockchain>HashDigest)\n\nResult:\n2d2a436603cca71be4c27b51e5e1aa7911cc6cf4ff5ad67a13c17ab7127d7f85","856":null,"857":null,"858":null,"859":"The use of the IBFT consensus (as well as any consensus of the BFT group) involves the allocation of a special pool of validators, no more than a few dozen, which, by collecting explicit confirmations from each other, determine the validity of the block (or a separate transaction) and the possibility of its inclusion in the chain (for example, this is how Ripple works). For the public Ethereum, this, firstly, violates the very concept of equality of nodes in the network, and secondly, when trying to expand the pool of validators to a comparable number of nodes participating in the public Ethereum, it will inevitably lead to the collapse of the consensus process.\nTherefore, in the public Ethereum, PoW is used, which does not imply the presence of \"special\" nodes and any explicit confirmations - the consensus is based on the fact that following the general rules: finding a \"lucky\" hash and adding a new block to the longest fork, the node has the highest probability of receiving block creation rewards.","860":null,"861":null,"862":null,"863":null,"864":null,"865":"To integrate Chainlink with another <blockchain>, you need 3 pieces:\n\nA way to read events from the new <blockchain>\nA way to send <transactions> from the node to the new <blockchain>\nA LINK token bridge\n\n#1 is defined by external initiators. These are just processes that learn how to read the new <blockchain>s\n#2 is defined by external adapters. These are just processes that can write back to the chains (and do anything else really)\n#3 There isn't a standard token bridge for all <blockchain>s, but one could actually build a token bridge out of Chainlink's proof of reserve.\nA good example of a <blockchain> integration with a very different <blockchain> is Chainlink with Conflux. You can see the example code in their repos.","866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":"emit NotEnoughEth('Please make sure to send correct amount');\n\nyou can't do this.\nto be able to emit a types.Log you need your evm.Call() to execute without doing a revert. There are 2 instructions in the EVM you are referring to: makeLog (https:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/instructions.go#L828) this is the one that creates and Event log. And opRevert (https:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/instructions.go#L806) , so if you do the revert, your Call() will return an error, and all the result of the transaction on ethereum State database will be reverted and nothing will be saved. Since the storage is cancelled, there is no way for your Log to be saved on the <blockchain>.\nThis is the code that will check for error, and reverts to previously saved state (aka Snapshot) :\n    if err != nil {\n        evm.StateDB.RevertToSnapshot(snapshot)\n        if err != ErrExecutionReverted {\n            gas = 0\n        }\n        \/\/ TODO: consider clearing up unused snapshots:\n        \/\/} else {\n        \/\/  evm.StateDB.DiscardSnapshot(snapshot)\n    }\n    return ret, gas, err\n}\n\nhttps:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/evm.go#L280\nEven though the opRevert() instruction doesn't explicitly returns an error, the Jump table is configured to always return an error for opRevert :\ninstructionSet[REVERT] = &operation{\n    execute:    opRevert,\n    dynamicGas: gasRevert,\n    minStack:   minStack(2, 0),\n    maxStack:   maxStack(2, 0),\n    memorySize: memoryRevert,\n    reverts:    true,\n    returns:    true,\n}\n\nhttps:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/jump_table.go#L155\nand the Interpreter will issue errExecutionReverted on its own:\n    case operation.reverts:\n        return res, ErrExecutionReverted\n\nhttps:\/\/github.com\/ethereum\/go-ethereum\/blob\/2aaff0ad76991be8851ae30454d2e2e967704102\/core\/vm\/interpreter.go#L297","873":null,"874":null,"875":null,"876":null,"877":null,"878":"Adding the following exclusion on my Application class fixed the above mentioned problem.\n@EnableAutoConfiguration(exclude = [org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration::class])","879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":"Declare owned contract before NLtoken contract.\nAnd keep in mind that the event name is case sensitive:\nemit Transfer(0, owner, _mintedAmount);\nemit Transfer (owner, _target,_mintedAmount);","887":null,"888":"By attaching his block to the longest chain a miner increases the chances that the block he created will get into the main chain and, accordingly, that he will receive a reward for creating a block. If the created block falls out of the main chain, then the miner will not receive a reward for it (Ethereum implements a more complex reward mechanism for creating a block, but in the simplest representation it is close to this).\nTheoretically, each of the nodes can choose to which of the forks to add the block he created, but if he wants the block to remain in the main chain, he is forced to follow the general rule.","889":"The best way to iterate over the keys is that when a key is added you also emit a Solidity event.\nYou get keys from the event logs. This can be done client-side (JavaScript, <python>) but not within Solidity itself, as EVM does not have access to event data.\nSolidity\/EVM does not store iterable keys due to efficiency reasons in execution constrained environment.\nMore information here.","890":null},"# of Vote for A2":{"0":null,"1":0.0,"2":null,"3":null,"4":null,"5":1.0,"6":null,"7":1.0,"8":0.0,"9":null,"10":null,"11":null,"12":null,"13":1.0,"14":1.0,"15":2.0,"16":null,"17":null,"18":null,"19":null,"20":null,"21":-1.0,"22":null,"23":null,"24":null,"25":0.0,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":1.0,"33":5.0,"34":2.0,"35":null,"36":null,"37":null,"38":null,"39":15.0,"40":null,"41":null,"42":0.0,"43":1.0,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":0.0,"51":3.0,"52":null,"53":0.0,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":0.0,"61":null,"62":1.0,"63":null,"64":null,"65":null,"66":1.0,"67":null,"68":1.0,"69":null,"70":null,"71":null,"72":null,"73":1.0,"74":2.0,"75":2.0,"76":1.0,"77":null,"78":0.0,"79":null,"80":2.0,"81":null,"82":null,"83":null,"84":null,"85":null,"86":2.0,"87":0.0,"88":0.0,"89":null,"90":1.0,"91":null,"92":2.0,"93":null,"94":null,"95":null,"96":0.0,"97":0.0,"98":1.0,"99":null,"100":2.0,"101":null,"102":null,"103":null,"104":0.0,"105":1.0,"106":null,"107":5.0,"108":null,"109":null,"110":null,"111":1.0,"112":null,"113":4.0,"114":null,"115":null,"116":3.0,"117":1.0,"118":null,"119":null,"120":null,"121":0.0,"122":3.0,"123":null,"124":null,"125":null,"126":0.0,"127":3.0,"128":null,"129":null,"130":0.0,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":0.0,"141":null,"142":2.0,"143":null,"144":null,"145":-2.0,"146":0.0,"147":null,"148":1.0,"149":20.0,"150":null,"151":null,"152":null,"153":3.0,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":1.0,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":1.0,"174":null,"175":0.0,"176":null,"177":null,"178":null,"179":1.0,"180":2.0,"181":6.0,"182":null,"183":1.0,"184":1.0,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":1.0,"192":null,"193":null,"194":null,"195":1.0,"196":null,"197":0.0,"198":null,"199":null,"200":null,"201":1.0,"202":null,"203":null,"204":1.0,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":2.0,"212":null,"213":1.0,"214":null,"215":3.0,"216":5.0,"217":2.0,"218":null,"219":null,"220":null,"221":null,"222":null,"223":6.0,"224":null,"225":1.0,"226":1.0,"227":2.0,"228":null,"229":1.0,"230":null,"231":6.0,"232":8.0,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":-1.0,"240":null,"241":1.0,"242":null,"243":null,"244":null,"245":null,"246":2.0,"247":null,"248":null,"249":2.0,"250":0.0,"251":null,"252":null,"253":0.0,"254":4.0,"255":3.0,"256":null,"257":0.0,"258":1.0,"259":null,"260":null,"261":1.0,"262":0.0,"263":1.0,"264":null,"265":null,"266":null,"267":0.0,"268":null,"269":0.0,"270":null,"271":null,"272":1.0,"273":2.0,"274":1.0,"275":null,"276":null,"277":null,"278":null,"279":null,"280":3.0,"281":1.0,"282":1.0,"283":1.0,"284":null,"285":null,"286":null,"287":null,"288":null,"289":2.0,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":2.0,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":0.0,"305":null,"306":null,"307":1.0,"308":null,"309":null,"310":0.0,"311":null,"312":1.0,"313":null,"314":null,"315":1.0,"316":null,"317":2.0,"318":1.0,"319":0.0,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":2.0,"327":2.0,"328":null,"329":1.0,"330":null,"331":null,"332":null,"333":11.0,"334":null,"335":null,"336":6.0,"337":null,"338":null,"339":null,"340":null,"341":1.0,"342":1.0,"343":1.0,"344":null,"345":null,"346":null,"347":null,"348":null,"349":3.0,"350":0.0,"351":4.0,"352":null,"353":null,"354":null,"355":17.0,"356":null,"357":null,"358":1.0,"359":null,"360":null,"361":null,"362":null,"363":2.0,"364":4.0,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":-1.0,"375":null,"376":1.0,"377":null,"378":null,"379":null,"380":2.0,"381":2.0,"382":0.0,"383":2.0,"384":1.0,"385":null,"386":null,"387":null,"388":null,"389":4.0,"390":null,"391":null,"392":1.0,"393":null,"394":null,"395":null,"396":2.0,"397":null,"398":2.0,"399":null,"400":null,"401":1.0,"402":null,"403":null,"404":null,"405":1.0,"406":1.0,"407":null,"408":1.0,"409":null,"410":null,"411":null,"412":null,"413":1.0,"414":null,"415":1.0,"416":null,"417":null,"418":2.0,"419":null,"420":null,"421":null,"422":1.0,"423":0.0,"424":null,"425":0.0,"426":null,"427":9.0,"428":null,"429":null,"430":17.0,"431":null,"432":null,"433":null,"434":null,"435":null,"436":1.0,"437":null,"438":null,"439":null,"440":2.0,"441":null,"442":null,"443":null,"444":null,"445":0.0,"446":1.0,"447":null,"448":0.0,"449":null,"450":null,"451":null,"452":5.0,"453":null,"454":null,"455":null,"456":null,"457":1.0,"458":1.0,"459":3.0,"460":null,"461":null,"462":null,"463":5.0,"464":null,"465":3.0,"466":0.0,"467":1.0,"468":null,"469":0.0,"470":null,"471":2.0,"472":null,"473":null,"474":0.0,"475":null,"476":null,"477":null,"478":null,"479":0.0,"480":2.0,"481":null,"482":null,"483":2.0,"484":null,"485":null,"486":null,"487":1.0,"488":null,"489":5.0,"490":0.0,"491":1.0,"492":null,"493":null,"494":3.0,"495":null,"496":0.0,"497":2.0,"498":null,"499":null,"500":null,"501":0.0,"502":1.0,"503":null,"504":2.0,"505":0.0,"506":null,"507":0.0,"508":null,"509":null,"510":null,"511":2.0,"512":1.0,"513":null,"514":null,"515":3.0,"516":null,"517":4.0,"518":null,"519":0.0,"520":0.0,"521":281.0,"522":null,"523":null,"524":null,"525":null,"526":0.0,"527":null,"528":null,"529":null,"530":null,"531":0.0,"532":null,"533":2.0,"534":null,"535":null,"536":2.0,"537":4.0,"538":null,"539":1.0,"540":null,"541":1.0,"542":null,"543":null,"544":1.0,"545":null,"546":null,"547":null,"548":null,"549":7.0,"550":1.0,"551":null,"552":6.0,"553":2.0,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":1.0,"563":1.0,"564":null,"565":null,"566":0.0,"567":null,"568":null,"569":1.0,"570":null,"571":null,"572":1.0,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":5.0,"585":1.0,"586":4.0,"587":null,"588":4.0,"589":null,"590":null,"591":null,"592":null,"593":null,"594":2.0,"595":null,"596":null,"597":0.0,"598":null,"599":2.0,"600":null,"601":null,"602":0.0,"603":null,"604":null,"605":null,"606":null,"607":0.0,"608":null,"609":1.0,"610":null,"611":null,"612":1.0,"613":null,"614":0.0,"615":null,"616":null,"617":0.0,"618":null,"619":null,"620":null,"621":null,"622":null,"623":0.0,"624":null,"625":null,"626":null,"627":5.0,"628":null,"629":1.0,"630":5.0,"631":null,"632":null,"633":1.0,"634":null,"635":null,"636":null,"637":null,"638":null,"639":1.0,"640":null,"641":null,"642":null,"643":2.0,"644":null,"645":11.0,"646":null,"647":1.0,"648":null,"649":0.0,"650":null,"651":0.0,"652":1.0,"653":1.0,"654":null,"655":null,"656":1.0,"657":null,"658":null,"659":null,"660":null,"661":null,"662":5.0,"663":0.0,"664":null,"665":null,"666":null,"667":null,"668":3.0,"669":null,"670":null,"671":1.0,"672":2.0,"673":null,"674":null,"675":null,"676":null,"677":null,"678":14.0,"679":null,"680":null,"681":null,"682":1.0,"683":0.0,"684":null,"685":0.0,"686":null,"687":0.0,"688":null,"689":0.0,"690":null,"691":null,"692":1.0,"693":null,"694":null,"695":null,"696":null,"697":0.0,"698":null,"699":null,"700":null,"701":0.0,"702":null,"703":null,"704":null,"705":null,"706":null,"707":0.0,"708":null,"709":1.0,"710":null,"711":1.0,"712":4.0,"713":null,"714":3.0,"715":null,"716":null,"717":1.0,"718":null,"719":1.0,"720":null,"721":0.0,"722":null,"723":null,"724":null,"725":6.0,"726":0.0,"727":null,"728":null,"729":null,"730":null,"731":1.0,"732":6.0,"733":1.0,"734":null,"735":1.0,"736":null,"737":null,"738":2.0,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":4.0,"746":null,"747":0.0,"748":0.0,"749":null,"750":null,"751":null,"752":0.0,"753":null,"754":0.0,"755":null,"756":null,"757":2.0,"758":4.0,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":2.0,"770":2.0,"771":3.0,"772":3.0,"773":null,"774":0.0,"775":2.0,"776":1.0,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":1.0,"784":null,"785":1.0,"786":null,"787":1.0,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":1.0,"796":null,"797":1.0,"798":1.0,"799":null,"800":null,"801":3.0,"802":1.0,"803":8.0,"804":0.0,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":1.0,"813":1.0,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":0.0,"826":null,"827":7.0,"828":1.0,"829":2.0,"830":null,"831":2.0,"832":null,"833":null,"834":1.0,"835":2.0,"836":null,"837":2.0,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":3.0,"845":null,"846":null,"847":null,"848":1.0,"849":1.0,"850":null,"851":7.0,"852":null,"853":null,"854":null,"855":1.0,"856":null,"857":null,"858":null,"859":4.0,"860":null,"861":null,"862":null,"863":null,"864":null,"865":2.0,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":0.0,"873":null,"874":null,"875":null,"876":null,"877":null,"878":1.0,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":1.0,"887":null,"888":1.0,"889":2.0,"890":null},"User of A2":{"0":null,"1":"alex devassy","2":null,"3":null,"4":null,"5":"Yilmaz","6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":"Yuri Ginsburg","15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":"Yilmaz","33":"Harry Papacharissiou","34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":"ferrouskid","51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":"oalfreda","61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":"hassan ahmed","69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":"Amber Johnson","97":null,"98":null,"99":null,"100":"pygeek","101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":"furas","143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":"Andrej","154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":"Jasper","163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":"Cromewar","182":null,"183":null,"184":"Han","185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":"Amin Talebi","192":null,"193":null,"194":null,"195":"Petr Hejda","196":null,"197":null,"198":null,"199":null,"200":null,"201":"Zak Ayesh","202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":"Sergio Cabral","218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":"SiarheiK","254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":"david_k","263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":"Alessandro Baffa","281":"Usama","282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":"Petr Hejda","334":null,"335":null,"336":"ROMANIA_engineer","337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":"user2117196","356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":"Alb\u00c3\u00a9rico Dias Barreto Filho","377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":"Pisomanik","384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":"Josh Ford","397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":"Guorong","409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":"banishee","423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":"Ahmad Gorji","446":"Taimoor","447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":"AurevoirXavier","466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":"Sonia Singla","475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":"MrFrenzoid","484":null,"485":null,"486":null,"487":"Pratik Patil","488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":"Josh Ford","518":null,"519":"Silvio Guedes","520":"Petr Hejda","521":"aaronasterling","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":"Petr Hejda","537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":"Petr Hejda","570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":"JesusTheHun","587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":"Alessandro Baffa","600":null,"601":null,"602":"OsS","603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":"hroussille","648":null,"649":"Muller Roufaou","650":null,"651":null,"652":"Petr Hejda","653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":"Petr Hejda","679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":"Petr Hejda","693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":"Mikko Ohtamaa","710":null,"711":null,"712":"Arjan","713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":"JoelFan","727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":"furas","736":null,"737":null,"738":"Dan Shields","739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":"Flash Thunder","758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":"Li Xian","771":null,"772":"Futureman2007","773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":"David Schwartz","786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":"jasonph","802":null,"803":"Shawn Tabrizi","804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":"mcches","813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":"Charlieface","830":null,"831":"Mad Jackal","832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":"Mikko Ohtamaa","890":null},"A2_answeredtime":{"0":null,"1":"Jan 1, 2022 at 8:12","2":null,"3":null,"4":null,"5":"Dec 30, 2021 at 15:09","6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":"Dec 24, 2021 at 8:12","15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":"Dec 19, 2021 at 4:12","33":"Dec 17, 2021 at 6:04","34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":"Dec 12, 2021 at 13:08","51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":"Dec 17, 2021 at 23:20","61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":"Dec 6, 2021 at 12:54","69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":"Dec 15, 2021 at 11:45","97":null,"98":null,"99":null,"100":"Nov 29, 2021 at 0:45","101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":"Nov 19, 2021 at 15:54","143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":"Nov 17, 2021 at 22:56","154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":"Nov 13, 2021 at 20:28","163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":"Nov 9, 2021 at 22:55","182":null,"183":null,"184":"Nov 11, 2021 at 4:44","185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":"Nov 10, 2021 at 11:00","192":null,"193":null,"194":null,"195":"Nov 3, 2021 at 11:38","196":null,"197":null,"198":null,"199":null,"200":null,"201":"Nov 2, 2021 at 22:54","202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":"Mar 10, 2022 at 23:36","218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":"Oct 16, 2021 at 9:55","254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":"Oct 14, 2021 at 7:01","263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":"Oct 9, 2021 at 2:45","281":"Oct 13, 2021 at 17:35","282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":"Sep 26, 2021 at 8:35","334":null,"335":null,"336":"Sep 23, 2021 at 12:14","337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":"Oct 18, 2021 at 2:19","356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":"Sep 12, 2021 at 5:44","377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":"Sep 10, 2021 at 14:36","384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":"Sep 2, 2021 at 3:50","397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":"Oct 28, 2021 at 21:39","409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":"Aug 23, 2021 at 5:03","423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":"Aug 13, 2021 at 20:08","446":"Aug 13, 2021 at 12:41","447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":"Aug 4, 2021 at 2:29","466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":"Aug 5, 2021 at 10:50","475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":"Jul 29, 2021 at 1:37","484":null,"485":null,"486":null,"487":"Jul 28, 2021 at 9:55","488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":"Jul 8, 2021 at 21:26","518":null,"519":"Jul 23, 2021 at 3:30","520":"Jul 8, 2021 at 9:53","521":"Aug 24, 2010 at 23:07","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":"Jun 30, 2021 at 20:29","537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":"Jun 11, 2021 at 7:20","570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":"Jun 5, 2021 at 15:17","587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":"May 31, 2021 at 22:44","600":null,"601":null,"602":"Jun 12, 2021 at 18:10","603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":"Oct 10, 2021 at 22:54","648":null,"649":"May 11, 2021 at 2:39","650":null,"651":null,"652":"May 7, 2021 at 13:17","653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":"May 4, 2021 at 11:17","679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":"Apr 25, 2021 at 13:56","693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":"Apr 16, 2021 at 7:58","710":null,"711":null,"712":"Apr 13, 2021 at 8:36","713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":"Apr 8, 2021 at 9:19","727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":"Apr 1, 2021 at 0:57","736":null,"737":null,"738":"Apr 1, 2021 at 2:18","739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":"Mar 22, 2021 at 21:19","758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":"Mar 24, 2021 at 8:01","771":null,"772":"Mar 16, 2021 at 10:01","773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":"Mar 1, 2021 at 20:00","786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":"Mar 25, 2021 at 23:22","802":null,"803":"Feb 16, 2021 at 17:05","804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":"Feb 9, 2021 at 19:10","813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":"Jan 31, 2021 at 7:28","830":null,"831":"Jan 30, 2021 at 10:42","832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":"Jan 2, 2021 at 8:51","890":null},"Comments for A2":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":"how to get chain id?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nikesh Kedlaya\n                \n                Dec 30, 2021 at 15:14,@NikeshKedlaya paste it to the answer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Dec 30, 2021 at 15:17,Updated the transaction like you mentioned. Still the same error!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nikesh Kedlaya\n                \n                Dec 30, 2021 at 15:33,@NikeshKedlaya  Now please share the code with mint function and transfer function\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yilmaz\n                \n                Dec 30, 2021 at 15:39,Updated my question with ERC271Tradable file\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nikesh Kedlaya\n                \n                Dec 30, 2021 at 15:46","6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":"Hi thank you for you answer ! My problem came from a missundertanding between hash and target ! You made it clear now. PS : You look like a crypto expert to me now ;)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cl\u00c3\u00a9ment Perroud\n                \n                Dec 25, 2021 at 10:38","15":"Thanks. That means they are using normal DBs for rest of the operations.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Monty\n                \n                Dec 23, 2021 at 18:34,That means by listening to mint event, we save NFT data into other database (mongodb,mysql) which is used to list, categorise, sort, filter, etc the NFT token data. And sell\/purchase is handled by smart contracts. Am I right ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Afraz Ahmad\n                \n                Mar 1, 2022 at 20:01,@AfrazAhmad That's correct.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 2, 2022 at 0:00,@PetrHejda how we group NFTs to make collections on the basis of types (e.g. music, art ) and show to users. Do we do that using other databases to group those NFTs ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Afraz Ahmad\n                \n                Mar 7, 2022 at 7:46,@AfrazAhmad This depends on your architectural design.But generally speaking - yes, you can tag each token or contract and store these tags in another database, as well as the Transfer events and their aggregations.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 7, 2022 at 8:28","16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":"Thank you, I got it now! I did came across a question on how do I generate the timestamp for specific human-readable date, but found bunch of converters online when doing a quick google search.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0coriden\n                \n                Dec 19, 2021 at 22:45,@coriden The timestamp (also known as \"unix timestamp\") is a standardized date format. Its value is the amount of seconds (or milliseconds in some cases) since January 1st, 1970, 00:00:00 UTC. Many programming languages have a way to convert a human readable date to the timestamp (unfortunately, Solidity currently can do that only on a very limited basis - only from a relative expression such as \"now + 1 year\", but not from an absolute date such as \"2021-12-31\"). And, as you say, there are many online tools that can convert it as well.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Dec 22, 2021 at 19:25","26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":"Thanks for this. could decode with configtxlator binary\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alex devassy\n                \n                Dec 17, 2021 at 9:29","35":null,"36":null,"37":null,"38":null,"39":"This should be the accepted answer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arenzel\n                \n                Feb 12, 2022 at 10:50","40":null,"41":null,"42":"thank you for your info\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bartu \u00c5\u009e\u00c4\u00b1rac\u00c4\u00b1\n                \n                Dec 14, 2021 at 20:09","43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":"Oh okay, So It's like I thought. I need to get every node peers list and then go iteratively inside them to check everyone. I will need to add this as a http request so I can get list of all nodes from any node. Will check it for sure. Thanks for tip.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user15921\n                \n                Dec 12, 2021 at 13:18,but what is the best approach to get nodes of a node? Should I send connection with all peers list already or make a HTTP request while running a search to every node? I will need to get each node http server to ask for their nodes.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user15921\n                \n                Dec 12, 2021 at 13:20,yes I agree, I think something like pinging other nodes should be very simple :D\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ferrouskid\n                \n                Dec 12, 2021 at 13:26,Good, all I need to make a bst or dst through nodes, and when I get whole list of nodes and it's connections then I can use this data to visualize the data\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user15921\n                \n                Dec 12, 2021 at 13:56,Out of curiosity, why do you need a visualisation of the network if its decentralised?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ferrouskid\n                \n                Dec 12, 2021 at 14:21","51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":"it is possible with oracles.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Dec 7, 2021 at 14:16,but how you will distinguish when the user transfer a token or is swaping tokens?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Dec 7, 2021 at 14:24,you can check only if that is realized in a single transaction\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhonny\n                \n                Dec 7, 2021 at 14:25,simply modify the _transfer function to fetch price of token before call and emit the price in modified Transfer event. Yes it must be all done in single transaction i guess that goes without saying\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Dec 7, 2021 at 20:41","67":null,"68":"I've read In regards to <blockchain>, reaching consensus means that at least 51% of the nodes on the network agree on the next global state of the network. Ref so I thought it applies to ALL despite the used mechanism\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nora\n                \n                Dec 7, 2021 at 10:11,Same for bitcoin, are we really asking for validation from 51% of ALL the validators in the network? It doesn't seem to be feasible\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nora\n                \n                Dec 7, 2021 at 10:12,That is correct in PoS 51% attack exists but it is in a different way and much less likely to be able to pull off since its involves not corrupting the nodes rather the 51% staked amount  (which in case of eth is billions of dollars) Ref Edited my answer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Dec 7, 2021 at 13:10","69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":"Thanks for answering this. I went with a custodial scheme.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0r.beer\n                \n                Dec 3, 2021 at 22:17","77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":"If I deploy smart contract to a private network and manages its own balance, is there any case I need to use the native ETH balance? Like the gas price, gas limit etc?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 30, 2021 at 11:09,@JoeyYiZhao Exactly what you said, you'd need to pay for the gas with ETH. However, you could also set up the private network to use zero gas prices, which would effectively eliminate the need for ETH on the private network (assuming the network is not flooded with spam <transactions>).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 30, 2021 at 13:53,Is it common thing to do to make gas price as 0 in private network? I'd like to see whether I miss anything if I do that?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Dec 1, 2021 at 3:17","91":null,"92":"Hmm that is interesting because when I put wss:\/\/mainnet.infura.io\/ws\/v3\/key link there I do not get any response, when I put https:\/\/mainnet.infura.io\/v3\/key it works fine so it looks like it works the other way you described\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sowam\n                \n                Nov 30, 2021 at 9:28,@Sowam That is interesting. I'm not that familiar with the Ethers.js library, maybe they're actively polling the requests over HTTPS (asking each X seconds for an update), and the WSS malfunction might be related to something else... Generally, WSS keeps an open connection allowing for constant flow of messages both ways - while during HTTPS connection your app acts as a client sending separate requests to the server, but a server can't send a message to a client without the client's prior request... Maybe someone more skilled in Ethers.js and\/or Infura will be able to resolve it better.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 30, 2021 at 9:59,I fixed that by changing ethers.providers.JsonRpcProvider to thers.providers.WebSocketProvider, works fine now, thanks\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sowam\n                \n                Nov 30, 2021 at 10:22","93":null,"94":null,"95":null,"96":null,"97":"What about runtime errors? My contract is deployed without any issues but function call fails. How to debug it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sagar V\n                \n                Jan 5 at 15:10,what error does it show upon failure?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0hassan ahmed\n                \n                Jan 6 at 23:19","98":null,"99":null,"100":"Thanks for that. Yes I am a developer so that I can do that. If I deploy a contract and a few <transactions> are generated from the contract, does the contact block contains all the <transactions>?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 0:48,@Joey Yi Zhao Yes, the smart contract's ethereum address will have a ledger of <transactions> executed listed just like any other ethereum address.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0pygeek\n                \n                Nov 29, 2021 at 1:13,when you say ledger, does it mean a block in the Ethereum block chain? And all other <transactions> will be in the same block for the same ledger?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 1:42,@JoeyYiZhao no, I meant the list of <transactions> related to your smart contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0pygeek\n                \n                Nov 29, 2021 at 1:47,so the ledger is in one block, and each transaction is in its own block?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 1:52","101":null,"102":null,"103":null,"104":"I added the payable keyword in the function but still the same issue. Do you know how I can specify which account the ether are from?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 12:02,The way you do it is like the contract send money and there is no _recipient.transfer(_amount)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gwenael\n                \n                Nov 29, 2021 at 13:16,what do you mean by there is no _recipient.transfer(_amount)? The _recipient is a pass in address parameter and I use call method to transfer. Do you mean I need to change from call to transfer method?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 29, 2021 at 22:18,This is the recommended method to use when you're just sending Ether via calling the fallback function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Gwenael\n                \n                Nov 30, 2021 at 7:19","105":"Do I need to use genesis? I just use this command to launch the <blockchain>: <geth> --datadir data\/node1 --http --dev --http.corsdomain \"*\" --http.api <web3>,eth,debug,personal,net,miner --allow-insecure-unlock --mine. And it doesn't have Clique API. How can I enable it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 28, 2021 at 22:27,In general, it should be bundled with official releases <geth> & Tools on the official website <geth>.ethereum.org\/downloads\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dmitrii Dimtiks\n                \n                Nov 29, 2021 at 9:41","106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":"Thank you so much! This really confirmed my ideas.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0michaelassaf\n                \n                Jan 14, 2022 at 20:38","114":null,"115":null,"116":"So for a live network, it will wait until all miners in the network applied the state change, then a new block will be created? so for a live network, deploy a contact will create a new block eventually? Am I understand correctly?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Joey Yi Zhao\n                \n                Nov 27, 2021 at 9:49,@JoeyYiZhao Miners don't wait for others to apply the submitted state changes. I'd correct your statement to \"deploying a contract will be included (but will not create) in a new block eventually\" ... You can read more about the concept of Ethereum mining on this wiki page.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 27, 2021 at 12:54","117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":"Mr. furas, thank you so much! I was not aware of the diferences between the endpoints! Thank you again!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mr. N\n                \n                Nov 21, 2021 at 19:26,Thank you very much! so any idea what to do if there are over 1000 <transactions>? should I just use before= and equate it to the 1000th transaction?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nazim Kerimbekov\n                \n                Dec 11, 2021 at 7:27,@NazimKerimbekov you could use before= with 1000th transaction\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0furas\n                \n                Dec 11, 2021 at 10:46","143":null,"144":null,"145":null,"146":"Hey, your blog post got some of us at Parity Technologies talking, and we think there are some points which you did not get quite right. I believe we have reached out to discuss things with you, if you would like that.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shawn Tabrizi\n                \n                Oct 17, 2022 at 17:05,@ShawnTabrizi Hi Shawn. We checked all our emails and found nothing. Can you please email Benjamin Marsh and we'll arrange a meeting? I kind of fail to find a way to communicate without disclosing contact information publicly, which I'm trying to avoid to avoid spam. Feel free to suggest any other way for contact.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0The Quantum Physicist\n                \n                Oct 18, 2022 at 13:24,You can email me at shawn@parity.io\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shawn Tabrizi\n                \n                Oct 18, 2022 at 18:15","147":null,"148":"Wow thank you this makes perfect sense. So in this case firstContract._admin().transfer(value); the compiler is calling two functions? First the getter function and then the transfer function using the returned value of the first function?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kevvv\n                \n                Nov 18, 2021 at 22:14,@Kevvv Exactly. Just to be specific - the transfer() in your case is a member function of the address payable type, so it transfers ETH. It's not related to the ERC20 transfer() function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 18, 2021 at 22:20","149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":"Thanks Jasper. That makes sense.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paris\n                \n                Nov 16, 2021 at 10:17,Another piece of the puzzle for me is to understand how the information that is to be added to the <blockchain> is known to be true, even by the miner.   So, say a miner has good intentions and does the proof of work to get a piece of information to the <blockchain>. For example, that Alice is transferring ownership to the Landlord. How does the miner know that this piece of information is indeed true and worth investing the computational power to have a chance to get it added?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paris\n                \n                Nov 16, 2021 at 10:24,@Paris I\u00e2\u0080\u0099ve updated my answer with your question above. Hopefully it helps. If this answer was useful\/answers your original question, generally the stack overflow procedure is to upvote\/accept the answer ;)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jasper\n                \n                Nov 17, 2021 at 7:26,Jasper, thank you. That's clear.   A follow up on that. Let's say the Landlord is malicious and submits information to the <blockchain> that he is transferring ownership to another person, which Alice would not be happy about because she still lives there and has ownership. Would Alice (or all the participants in that <blockchain> account) also need to verify that the information being submitted is true? I know I keep digging but I keep finding places where there could be a breakdown in the validity of the information.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paris\n                \n                Nov 18, 2021 at 19:44,Also, I'm new to this so can't upvote yet but I've accepted your answer (my first one ;))\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Paris\n                \n                Nov 18, 2021 at 19:45","163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":"Hi, thankyou for your answer, It is connected at localhost 7053 and while setting my network up which is doing fine I guess that means orderers are ported successfully right? but while creating channels its not working. :(\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Charchit Dhawan\n                \n                Nov 10, 2021 at 5:43,Running the network successfully means that the orderer is running but does not guarantee that it is running on the specified port. If you can confirm that the scripts you're running are from the official Github repository, I could check it and see what could possibly be wrong.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rockson\n                \n                Nov 10, 2021 at 12:11,Line 27 of docker file says that the orderer should be running on port 7050. This is confirmed by line 45 of the channel configuration file.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rockson\n                \n                Nov 10, 2021 at 12:33,The onsadmin command specifies that -o is the orderer's address which should be running on 7050.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rockson\n                \n                Nov 10, 2021 at 12:36,I would recommend modifying line 40  of this file and try again.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rockson\n                \n                Nov 10, 2021 at 12:37","184":"Nice to know it works, there's some tiny learning to npm(package manager). If you're interested in nodeJS, NPM is worth investing and pretty straight-forward.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Han\n                \n                Nov 12, 2021 at 1:00,Thanks but, i knew it already, tell something new. \u00f0\u009f\u0098\u0083\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aryan\n                \n                Nov 12, 2021 at 2:38","185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":"Yes I understand that I have to either remove the view modifier or the update of variable to overcome that error, but im asking if there is a way to display the error on running the function?? Im looking for the output to be in this way: link\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0xBatmanx\n                \n                Nov 3, 2021 at 12:34,Thanks for clarification, I updated my answer with ways to get the string from a transaction (that doesn't return values for transaction, unless it's an internal transation between contracts).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Nov 3, 2021 at 16:11,Thanks! The ways you mentioned work. I am using require(wdraw_amt <= balance,\"Insufficient funds, Try lesser amount!.\"); which shows the error too, I thought to let you know. Thanks for the help brother!. Appreciate it!!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0xBatmanx\n                \n                Nov 4, 2021 at 17:15","196":null,"197":"Thank you @Christopher . Sorry for the insufficient information. I reinstalled the docker and <hyperledger> Fabric and the problem has gone.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Leo\n                \n                Nov 7, 2021 at 6:20","198":null,"199":null,"200":null,"201":"Thank you. Actually, I'm trying to setup multiple nodes (for different type of data, not for crypto prices) with their respective oracles and then setup aggregator which will aggregate results just like chianlink is doing for prices.  So first of all, is it the right strategy to create feed like setup for other type of information? And secondly, Am I going in right direction or should be using something else provided by chainlink\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zeeshan Hanif\n                \n                Nov 3, 2021 at 5:34,The official Chainlink feeds I linked to above are a bit more complicated than the design you are listing, but you can certainly do that (that's what I was talking about in the 2nd paragraph of my answer). If this is or a hackathon (or just to demo your app) and there's no existing data feed for the data you need, I'd suggest using the \"AnyAPI\" feature and a single Chainlink node. Once it's time to go to mainnet, the Chainlink Labs team can assist you in making a decentralized oracle network. You can reach them here: chain.link\/data-feeds\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zak Ayesh\n                \n                Nov 3, 2021 at 18:03,Thanks. Yes for now its for hackathon but will need proper setup for mainnet\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zeeshan Hanif\n                \n                Nov 3, 2021 at 18:18","202":null,"203":null,"204":"Thanks for taking the time out to answer - I ended up figuring out the the buyer's address can be determined when the spl token program initialises an account (and the seller's address seems to come from the same thing happening with a token account of the seller when the account is closed by the spl token program) so your answer is absolutely right. Thanks again!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0lsg93\n                \n                Nov 1, 2021 at 15:06","205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":"This does indeed seem to be the case. Which leads to the follow-up question: How is the splitting of this minting fee from the treasury wallet usually handled?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Torantula\n                \n                Nov 29, 2021 at 22:45,@Torantula my best answer to your follow-up question is that the documentation I quoted above is incorrect. From conversations with others in the Solana community, it appears that the initial minting fee is paid entirely to the wallet that created the NFT. This also matches the behavior described by the OP.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0emersonthis\n                \n                Nov 30, 2021 at 23:01","212":null,"213":null,"214":null,"215":"Hi, thank you for your answer! From what I understand, after the creation of Contract A and Contract B, someone (most probably only the owner of contract A) should manually call the setContractBAddress function, right?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Flendor\n                \n                Oct 28, 2021 at 10:19,@Flendor exactly\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 28, 2021 at 10:23","216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":"I've also used Keypair.fromSecretKey(Uint8Array.from(<private_key_here>))\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0C.OG\n                \n                Oct 27, 2021 at 8:45,Thanks for the really helpful example, I was able to use this to generate a working wallet, but found that my address differs from what I had on Phantom, where I had exported the seed phrase (12 words BIP39).   I used solana-keygen recover 'prompt:\/\/?key=0\/0' -o keypair.json to generate the seed file per docs.solana.com\/wallet-guide\/file-system-wallet  Any idea what I'm doing wrong?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0<blockchain>wtf\n                \n                Jan 31, 2022 at 15:34,Try logging into your Phantom wallet in your browser.  You need to export your private key.  You have to choose Setttings (gear in lower right) of Phantom wallet.  Then you have to scroll down and choose the Export Private Key.  You'll have to provide your password. You can see all of that in this image: i.stack.imgur.com\/w8LIq.png Once you do that, you'll have the proper key which you'll use in a call to  var phantomSecret = from_b58(\"your-private-key-as-a-string\");\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0raddevus\n                \n                Feb 1, 2022 at 15:55,seriously config your code it's all white how hard is it to put a javascript tag in your ```\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0max89\n                \n                Mar 27, 2022 at 13:14","224":null,"225":"This is what I needed, thank you very much!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Oct 24, 2021 at 20:53","226":"Thank you (again) for the answer \u00f0\u009f\u0099\u0082 Talking about the environment variables, should I change them only to point to the right certificates (CORE_PEER_TLS ones and CORE_PEER_MSPCONFIGPATH) and leave the others unchanged?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arnaldo\n                \n                Oct 25, 2021 at 10:34","227":"So basically for the first time it's like a server-client architecture?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shobhit Tewari\n                \n                Oct 24, 2021 at 15:59,@ShobhitTewari It's still peer-to-peer, just the first peers are defined (instead of discovered).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 24, 2021 at 17:35","228":null,"229":"On the first solution, how do I know when priceFetcher is ready to be used?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Apollo\n                \n                Oct 24, 2021 at 15:42,The line after const priceFetcher = await UniswapTokenPriceFetcher.build(token1, token2) will not run until priceFetcher is available. Therefore on the next line you can be sure that priceFecter will contain the value resolved by the promise. That's how await works.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marcello Del Buono\n                \n                Oct 24, 2021 at 17:21,So a call to the function without the await keyword would execute next lines of code while waiting for build to complete?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Apollo\n                \n                Oct 25, 2021 at 18:30,Yest. A call to an async function without await returns a promise and moves on to the next line while the promise is still pending. If you instead put await in front of the async function, Javascript will keep doing something else until the promise resolves a value. Only then javascript will assign the resolved value to priceFetcher and move to the next line.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Marcello Del Buono\n                \n                Oct 25, 2021 at 18:43","230":null,"231":null,"232":"You needn't delete localhost 8545. You'd just need to set the chain id as 1337 instead of 5777\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Madhavan Malolan\n                \n                Oct 23, 2021 at 13:49","233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":"any batched operation for this function? i.e. a function that takes multiple pubkeys as input, instead of just one?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DaveTheAl\n                \n                Apr 16, 2022 at 9:15,Not for this getBalance \/ getTokenAccountBalance, you'll instead have to use getMultipleAccounts with jsonParsed encoding, and then extract the balance from the result there: docs.solana.com\/developing\/clients\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jon C\n                \n                Apr 16, 2022 at 10:48,where can I submit a feature request for this? xD\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DaveTheAl\n                \n                Apr 16, 2022 at 16:45,github.com\/solana-labs\/solana\/issues go for it!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jon C\n                \n                Apr 17, 2022 at 10:54","247":null,"248":null,"249":null,"250":"Basically, I want to allow or disallow a smart contract to do the processing (and then generate the corresponding transaction) based on the organization (or consortium) of the one who invokes it. And I think doing this in the smart contract itself like you said is the simplest way to do it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arnaldo\n                \n                Oct 19, 2021 at 13:18,Yes. You can define a BeforeTransaction function per contract and evaluate mspID. I think you can also define one only BeforeTransaction function and evaluate operationSplitted[0] (If I remember correctly, it may be the contract name). Your ACL conditions may be Go maps or you can even save them in the world state.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kekomal\n                \n                Oct 19, 2021 at 13:56,In Java, it's sufficient to override the beforeTransaction method of the interface ContractInterface that is implemented by the custom contract, right? I've tried to do so, but it seems that that handler is not invoked.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arnaldo\n                \n                Oct 19, 2021 at 15:29,It should be sufficient... <hyperledger>.github.io\/fabric-chaincode-java\/release-2.2\/api\/org\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kekomal\n                \n                Oct 20, 2021 at 6:16","251":null,"252":null,"253":"But I did check my brackets, and they are all in pairs. Can you show me which closing bracket was the one you added?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Cyan\n                \n                Oct 16, 2021 at 10:14,yeah, I added working example\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0SiarheiK\n                \n                Oct 16, 2021 at 10:17,Added example well compiling in remix\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0SiarheiK\n                \n                Oct 16, 2021 at 12:03","254":"Thank  a lot for your answer. It worked for me. But I am very confused, is it a good practice?  Should we use a deployed  smart contract  from multiple  dapps like we use api in multiple centralized apps?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yzyzyzyz\n                \n                Oct 24, 2021 at 19:07,It's a very common practice. For example: The target contract is of an established DEX, and the source contract allows to buy a specific token through the DEX... So kind of like if the DEX was publishing an API, and the source contract was calling the API.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 24, 2021 at 20:04","255":"Thanks, Vlad, for your explanations \u00f0\u009f\u0091\u008d\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soulwish\n                \n                Oct 16, 2021 at 9:59","256":null,"257":null,"258":"thank you @Petr for the answer. so you say that <blockchain> will overwrite the existing data with new data. is this not breaking the rule that data in <blockchain> cant be removed\/erased?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alvin Christianto\n                \n                Oct 16, 2021 at 11:00,The data is not removed from the <blockchain> - you can still access it using an archive node. It's only made unavailable for the contracts, because they can only access the current (and not historic) state.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 16, 2021 at 11:03,okay i got the point. thankyou @Petr\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0alvin Christianto\n                \n                Oct 16, 2021 at 11:46","259":null,"260":null,"261":null,"262":"I reinstalled go1.16.7, the problem is still the same.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0proxima\n                \n                Oct 14, 2021 at 9:14,Yep, I see the server part fails. It looks like statsd has been updated but the code base hasn't and gets around this by storing on older version of statsd in the vendor file so it compiles if you get the source from github.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0david_k\n                \n                Oct 14, 2021 at 12:31,I cloned the source code from github and it succeeded\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0proxima\n                \n                Oct 14, 2021 at 13:37,I now try to remove -u to execute the command.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0proxima\n                \n                Oct 14, 2021 at 13:58,All were successful, thank you very much for your patient answers.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0proxima\n                \n                Oct 14, 2021 at 14:03","263":"Hi, @Nikola. Thanx for your answer. I tried <web3>.jslib importing but the same error happened.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Famous Felix\n                \n                Oct 15, 2021 at 0:26","264":null,"265":null,"266":null,"267":"Thank you for your information. I found this post docs.r3.com\/en\/platform\/corda\/4.2\/enterprise\/\u00e2\u0080\u00a6 and I want to know if we can assume that the size of a state in a transaction is similar to the size of the transaction itself, just to have an idea of the database table space usage\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user10488162\n                \n                Oct 13, 2021 at 16:41,Yes, they did what I suggested in my answer basically.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Oct 13, 2021 at 22:17","268":null,"269":null,"270":null,"271":null,"272":"Thanks Jon for pointing this out. I've changed my code structure and used the getBalance. Finally, it works!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Afa12\n                \n                Oct 15, 2021 at 2:07,What did you change your construct to? Can you please provide a working Vanilla example? I have a connection, and I can get the address, but when I run this line to get a balance I get a -32603 error. var balance = window.solana.request({           \"jsonrpc\": \"2.0\",           \"id\": 1,           \"method\": \"getBalance\",           \"params\": [wallet_address]    });\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Solbot\n                \n                Oct 18, 2021 at 0:22,I'm getting the wallet_address from: var wallet_address = window.solana.publicKey.toString();\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Solbot\n                \n                Oct 18, 2021 at 0:27,stackoverflow.com\/questions\/69609838\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Solbot\n                \n                Oct 18, 2021 at 1:26,How can you get metadata on nft\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Vince\n                \n                Oct 26, 2021 at 23:10","273":null,"274":"Its not to much detailed bro\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aditya Dev\n                \n                Oct 10, 2021 at 12:45,I am here to answer the question, not writing your programs for you. The scope of an answer to write a full transaction nonce management system is massive. Study and get good.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Oct 10, 2021 at 17:04,@Mikko Ohtamaa Great answer :D thx btw. Wanted some inspiration.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dimfred\n                \n                Jul 1, 2022 at 19:40","275":null,"276":null,"277":null,"278":null,"279":null,"280":"Thank you very much for the answer, the solution \"SignedTransaction.txBits.size\" works (per single transaction), but is there any way to use the JDBC session and get the total <transactions>' size of a node? (e.g. I would like to know which is the transaction with the largest size)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user10488162\n                \n                Oct 11, 2021 at 9:43,@user10488162 you could store that information for each transaction in a separate table using JDBC session. Just an idea..\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alessandro Baffa\n                \n                Oct 11, 2021 at 23:32,Ok! thank you very much for your feedback!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user10488162\n                \n                Oct 12, 2021 at 6:06","281":null,"282":"Thanks! I'll do research on these :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mariusz Sidorowicz\n                \n                Oct 7, 2021 at 22:28","283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":"I see. So is there any connection between e.g., the famous Jack Dorsey tweet and the underlying token? Like, what prevents me from simply minting another token, claiming its connected to the tweet, and selling it on an arbitrary NFT exchange?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zuza\n                \n                Sep 27, 2021 at 13:39,@Zuza Technically, the token metadata probably links to the tweet or contains its hash or something (I'm not really sure about this particular case). And the tweet doesn't need to link to the token. So from the technical point of view - nothing prevents you from doing so... From the legal standpoint, that's a different story.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 27, 2021 at 14:37","319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":"Nice job on finding that out! You should mark your answer as the correct answer, so others can be sure this issue was properly addressed.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zak Ayesh\n                \n                Sep 27, 2021 at 4:33","327":"Why not just throw out all the <transactions> of the user in the current block if they send you an invalid transaction (one they cannot afford)? Surely, no one else could have constructed that invalid transaction as the ID must be unique and the digital signature must be correct. I still don't understand the necessity of Proof of Work. Would appreciate further clarification.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bill Baits\n                \n                Sep 30, 2021 at 22:38,@BillBaits What do you mean by invalid transaction? In my examples transaction are always valid, they are generated by the same person, who has private key. Every new transaction has different ID, since ID=hash(tx). Imagine you are node in the network. You received 2 blocks, transaction1 in block1 sends you some currency from Bob's account, transaction2 in block2 sends the same amount of currency to Alice's account from Bob's account. Bob tries to buy something from you. How would you determine which block (and underlying transaction) is correct?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zergatul\n                \n                Oct 1, 2021 at 10:17,Okay, I understand what you mean now. Bob sends transaction1 to one miner and transaction2 to another miner. They both construct different blocks and now there is a discrepancy. I must not have grasped the type of problems that arise from having a fully decentralized network.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Bill Baits\n                \n                Oct 2, 2021 at 4:32","328":null,"329":null,"330":null,"331":null,"332":null,"333":"Thank you very much! This works for contracts with less than 10000 tokens. If there are more, I get query returned more than 10000 results. Is this an infura limitation and would it help to setup my own <geth> instance?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alai\n                \n                Sep 28, 2021 at 22:45,@Alai Exactly, this 10k limit is imposed by Infura, you can bypass it by using your own node.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 29, 2021 at 7:42,Thank you very much. Do I need an archive node for this or is a full node sufficient?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alai\n                \n                Oct 16, 2021 at 13:00,@Alai was the fast sync enough you to get the transfers?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0luca992\n                \n                Nov 22, 2021 at 21:35,I got it working with infura with the above code by specifying      fromBlock: x, toBlock: y.  and incrementing x and y in a loop where the range of x and y is small enough to return less than 10,000 results. @Alai\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0luca992\n                \n                Nov 26, 2021 at 23:17","334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":"But I still want effectively I can use multiple miners for creating new blocks, what should I change? Thanks.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Nam V. Do\n                \n                Sep 20, 2021 at 10:13,Does each block depend on the previous block? If so, I don\u00e2\u0080\u0099t see how this is possible.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tim Moore\n                \n                Sep 20, 2021 at 10:15","351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":"Nice work! Can you mark this as the answer to your question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Sep 14, 2021 at 18:15,@PatrickCollins sorry forgot to do that. SO says it will take 22 hours to mark it as correct answer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Devdeep Ghosh\n                \n                Sep 15, 2021 at 19:37","364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":"Please include any relevant information as text directly into your question, do not link or embed external images of source code or data. Images make it difficult to efficiently implement the given solution as they cannot be copied and offer poor usability to future users as they cannot be searched. See: Why not upload images of code\/errors when asking a question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Henry Ecker\n\u00e2\u0099\u00a6                \n                Sep 12, 2021 at 6:51,I don't understand, I just put his code into the remix IDE and compiled the smart contract, I didn't add any extra code\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alb\u00c3\u00a9rico Dias Barreto Filho\n                \n                Sep 12, 2021 at 15:19,Oh, yeah I got it. Thanks for the help.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0WomanIn<blockchain>\n                \n                Sep 13, 2021 at 16:54,@WomanIn<blockchain> could you mark it as the correct answer? because this error exists since solidity version 0.5 and has no clear answer, I think it would help other people  peace out\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Alb\u00c3\u00a9rico Dias Barreto Filho\n                \n                Sep 13, 2021 at 22:08,Definitely! Solidity has a lot of changes after the 0.5 version and in the 0.8 version.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0WomanIn<blockchain>\n                \n                Sep 15, 2021 at 0:35","377":null,"378":null,"379":null,"380":"With the smallest of changes to make it <python>ic, this worked. Tested on block with 248 transaction and your method was 6x faster than mine. Thanks\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Diop Chopra\n                \n                Sep 10, 2021 at 13:38","381":null,"382":null,"383":null,"384":"This is very helpful, thank you for explaining this. Highly appreciate it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Niccola Tartaglia\n                \n                Sep 9, 2021 at 16:34","385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":"can you share your entire lib.rs file? Also, can you share how you are compiling the contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Josh Ford\n                \n                Sep 3, 2021 at 1:25,Done! Thanks @Josh Ford\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0josedlujan\n                \n                Sep 3, 2021 at 1:29,Hmmmm... Everything looks good with your contract. The only difference is the three backticks at the end of your snippet (```) but I imagine you just added that now for the post right? Your lib.rs doesn't have those in it correct?  The only step left to debug is the compiling process..... Try deleting the compiled WASM file and recompile it using this command: docs.near.org\/docs\/develop\/contracts\/rust\/\u00e2\u0080\u00a6  If that doesn't work try deploying your contract to a different accountId and if that doesn't work let's jump on a call and tackle this in real-time. :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Josh Ford\n                \n                Sep 3, 2021 at 1:54,Thanks! i will follow the same process  on another computer... lets see.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0josedlujan\n                \n                Sep 3, 2021 at 2:49,I follow the same tutorial and use the same commands on another computer and everything its fine... i will try to find the problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0josedlujan\n                \n                Sep 3, 2021 at 16:48","397":null,"398":"Thank You soo much @Petr,   Now just more curious to know which one will be better to use ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Trimantra Software Solution\n                \n                Sep 1, 2021 at 9:58,@TrimantraSoftwareSolution It depends on your use case... First of all, it's discouraged here at StackOverflow to ask\/answer opinion-based questions and answers, because it tends to bring heated arguments and flamewars sometimes... Apart from that, PoA can be better for one thing, PoW can be better for other. So it really does depend and I'm not able to answer without more context.... But my personal opinion in this situation is that unless you need a specific consensus algorithm, I'd go with the default one (which is PoW) simply because there might be more documentation and support available.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Sep 1, 2021 at 10:13","399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":"Hello and thank you for answering. One question: Do you mean that I need to recall mintDaily() function manually every day ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jeanne Zinoviev\n                \n                Aug 23, 2021 at 17:29,There is a problem in the code : require(lastMintTime + 86400 >= block.timestamp, \"mint already\" ); must be like this : require(lastMintTime + 86400 <= block.timestamp, \"mint already\" ); and lastMintTime = block.timestamp; in mintDaily() must be like this : lastMintTime += 86400; (Just noted this for future readers.) Thank you very much for answering my questions.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jeanne Zinoviev\n                \n                Aug 24, 2021 at 18:39","423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":"yep, that's correct way of getting the current block. I suggest having the ensure throwing correct Error::<T>::YourErrorNameHere\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0woss\n                \n                Aug 15, 2021 at 12:36,about the Weight i don't think you need the writes(1) since there is no write, also the read part of the weight is not needed since the current_block is in the cache for the duration of the current_block execution\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0woss\n                \n                Aug 15, 2021 at 12:37,so the answer is converting u32 to T::BlockNumber? solved your situation but not your question...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Clark Lee\n                \n                Aug 16, 2021 at 1:27,@ClarkLee That is true. I have solved the first of the two questions, but I would still be interested to know how T::BlockNumber can be converted into a u32. Some kind of opposite to into() perhaps? In the above 'failed code' section I added .saturated_into::<u64>(), but that isn't a recognised function (even though it was in another's code).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0dancing_carrot\n                \n                Aug 16, 2021 at 7:25,Is it possible to use target_block = current_block_number.checked_add(block_delay.into()); I got a compile error: u32 not implemented.....BlockNumber\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gfan\n                \n                Apr 27, 2022 at 14:42","441":null,"442":null,"443":null,"444":null,"445":null,"446":"thank you for your answer , did you use ganache-cil to run it in port 8545 ? because I used the genech GUI the default port is 7545 . about the abi I really just copied the abi from the TodoList.json I am not sure if it generated the correct one or not and the likewise the address takes it from the same Json file . also if the connection of the MetaMask was incorrect , It did not change when the ganache changed ? .\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Fatima Almashhor\n                \n                Aug 13, 2021 at 13:46,I don't know whats your connection status with Metamask is. but you stated that it reflected changes so i assumed that its working fine. You can also further check by importing the first account of ganache in Metamask. Just get the private key of the first account from ganache-cli console and paste it in Metamask. Make sure that correct balance is also shown in Metamask after account is created. Its even better if you run ganache-cli with a mnemonic with a -m \"string\" flag. In that way the same accounts will be created from the mnemonic to use the same account in Metamask\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 13, 2021 at 14:02,And yes. I gave a port  flag -p 8545 while running ganache-cli. I dont think port number is the problem assuming that you have used custom RPC settings in Metamask correctly. About the ABI and Contract Address part. this needs to be valid. I am passing the ABI in the same way like yours after reading from JSON file. This seems ok since it needs a JSON interface for ABI. For address part, I entered it manually like this \"0xD90d46Ae7427933760A52FE06Ba13C443A4E720C\" after deploying the contract. And i believe this is where you are having the issue. Check the output of ABI and Address to confirm\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 13, 2021 at 14:05,The Address in the MetaMask is the same one in the <web3> contrast right ? because I have added a \"0x8c0199C5D6e4B22A1948358F1bf48dD095Ae5300'' after the ABI . Really annoying. I do not know where the problem comes from . :\"(\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Fatima Almashhor\n                \n                Aug 14, 2021 at 9:25,Edit your question and share your Metamask settings. You must be using Custom RPC\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Taimoor\n                \n                Aug 14, 2021 at 12:44","447":null,"448":"I also tried this method and it worked, though I had to explicitly change the compiler to pragma abicoder v2. I later found out from the Solidity doc (docs.soliditylang.org\/en\/v0.8.7\/\u00e2\u0080\u00a6) that is automatically activated by default starting from Solidity 0.8.0. So I used a more recent version to test this method and it worked. Thanks for the help @cameel.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ATRUES\n                \n                Aug 17, 2021 at 4:38,True, with such a wide version range (>=0.4.0 <0.9.0) you do need the pragma. If your contract is actually meant to work with all these versions, you should use the older form (pragma experimental ABIEncoderV2) which works also before 0.7.4. But I'd actually recommend to just be more specific about the versions you support.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cameel\n                \n                Aug 17, 2021 at 22:23,Also note that the reason you need the abicoder pragma is the use of a struct as the return value on an external function. You do not need it for value types like uint or address or if the function is internal. But anyway, if you do not have a good reason to stick with older compiler versions it's better to just use 0.8.x where you do not have to worry about it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0cameel\n                \n                Aug 17, 2021 at 22:27","449":null,"450":null,"451":null,"452":"Hi thank you. I figured it out with your code and use solana_program::sysvar::clock::Clock; is that what you meant by \"system program account\"?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Russo\n                \n                Aug 11, 2021 at 10:41,you can set this account in your context pub system_program: AccountInfo<'info>, and pass in systemProgram: SystemProgram.programId\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0yangli-io\n                \n                Aug 11, 2021 at 14:46","453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":"Your explanation is very detailed. Thank you\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0kh1em\n                \n                Aug 10, 2021 at 3:30","460":null,"461":null,"462":null,"463":"Thanks for your assistance. Is that possible to get all the NFTs of a particular asset_contract_address without pagination? Because I can see there is a max limit: 50 However, I want to perform computation on each NFT of any asset_contract_address.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Haider Yaqoob\n                \n                Aug 4, 2021 at 18:26,@HaiderYaqoob Unfortunately the pagination is limited by the Opensea API, so it's not currently possible to bypass it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Aug 4, 2021 at 23:42,@PetrHejda You ever had problem that they are not returning all assets. I\/E on their page opnsea.io you see 88 and by api call you get only 7 example address:0x6f5174b6015238acf4ffdbece7c722a5911d104a\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0PyDeveloper\n                \n                Oct 1, 2021 at 12:25,@programerAnel It seems that the UI (88 assets) takes the data from other sources as well than just the API (7 assets). Unfortunately I don't know the other sources. It's possible that the UI includes some deleted or sold or in-order NFTs, while the API doesn't?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Oct 1, 2021 at 14:24,the url above no longer points to a valid response, however removing the pagination parameter ?offset=0&limit=20 does point the a response with the first 20 items in the contract (api.opensea.io\/api\/v1\/\u00e2\u0080\u00a6). Does anyone have an updated url with correct pagination parameters\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0xiaolingxiao\n                \n                Feb 19, 2022 at 17:58","464":null,"465":"huh okay, i understand. Thanks for the quick answer!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jitterbug\n                \n                Aug 4, 2021 at 2:46,I think you could also configure port forwarding on your router connected to you ISP for the ports needed to your machine to enable this. But you likely have a dynamic IP. So best to use DDNS setup. Do note that this can lead to downtime for that node though, and likely should not be used as a boot node, instead static IPs should be used.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Aug 4, 2021 at 19:50","466":"When <blockchain> ledger is tampered we get the (SERVICE_UNAVAILABLE) error, if chaincode is invoked. But how can we know if <blockchain> ledger is tampered from peer service logs? Also how can we know if state data is in doubt?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kushal Mahajan\n                \n                Aug 16, 2021 at 6:10","467":null,"468":null,"469":"And it says it in the image the OP included.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0T.J. Crowder\n                \n                Aug 3, 2021 at 7:43","470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":"Okay, but still having error of same like \"Data location must be \"memory\" or \"calldata\" for return parameter in function, but none was given.\"\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Neel gorasiya\n                \n                Jul 30, 2021 at 14:36,@Neelgorasiya Can you post a screenshot of your error and code?. I've tried the mentioned solution using remix.ethereum.org and it compiles and deploys fine.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MrFrenzoid\n                \n                Jul 30, 2021 at 18:58,This is a different error you're having now, it seems that versions of solidity under 0.8.0 doesn't use the V2 of the ABI encoder (which supports arbitrarily levels of nested arrays, in this case the struct array which interally is processed as an array of arrays). So there's two solutions for that, you can either add \"pragma experimental ABIEncoderV2;\" on top of your current code, or use solidity 0.8.X version, also, mind specifying your solidity compiler version on your truffle config, since by default it will use the truffle's version: i.prntscr.com\/w50AcCbxTeeKADGLpDlvOQ.png .\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MrFrenzoid\n                \n                Jul 31, 2021 at 9:55,You're welcome, yet, please consider closing the question (validating the answer or else) .\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MrFrenzoid\n                \n                Aug 1, 2021 at 16:46","484":null,"485":null,"486":null,"487":null,"488":null,"489":"Where the suri come from?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0gfan\n                \n                Nov 26, 2021 at 1:58","490":null,"491":null,"492":null,"493":null,"494":"Thank you. You gave me the answer I'd rather not to hear. I better go for Soliditiy.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aslan Demir\n                \n                Jul 25, 2021 at 10:24","495":null,"496":null,"497":"Yes, thanks for the clarification, I changed the transfer function to transferFrom with three parameters: from, to, and value and everything works! thanks again\u00f0\u009f\u0098\u008a\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yifan Lim\n                \n                Jul 21, 2021 at 14:48","498":null,"499":null,"500":null,"501":null,"502":"Thanks for answering, The problem is when Mr.X withdraws the crypto into another wallet and you check it out with <blockchain> explorer, the origin of this transaction is his own wallet on that exchange.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Arash Heidari\n                \n                Jul 19, 2021 at 8:49,The exchange may call it Mr X wallet but truthfully it's fully controlled by exchange. The exchange has full control over the wallet. They can refuse to let Mr X withdraw his crypto or for example government can seize the exchange's infrastructure and no one will be able to withdraw.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tom\n                \n                Jul 19, 2021 at 9:05","503":null,"504":"Why this is accepted answer? How can this issue be fixed though?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0realplay\n                \n                Dec 24, 2021 at 15:47","505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":"If you use this, make sure to add approriate Documentation, because if someone changes something, it could lead to a wrong totalCredits. Anyone who has the rights to change these functions needs to know what this variable totalCredits is about.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Daniel Bauer\n                \n                Jul 16, 2021 at 9:00,Of course you are correct but this solution introduces no additional risks compared to the question. Anyone can change anything in any code to make it do something different.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0falopsy\n                \n                Jul 16, 2021 at 9:04","512":null,"513":null,"514":null,"515":null,"516":null,"517":"is there any similar way with smart contracts?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Shreyas S Bhat\n                \n                Jul 9, 2021 at 6:46,There is no way to check the access key permissions inside a smart contract.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mikeDOTexe\n                \n                Jul 9, 2021 at 16:28","518":null,"519":"this code will run on a server? I don't think so...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jim\n                \n                Oct 23, 2021 at 22:33,@Jim This script is gonna run in your webpage, not on your server. But you need to have your app running on localhost or on server to metamask work. More info: stackoverflow.com\/questions\/65802366\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Silvio Guedes\n                \n                Oct 25, 2021 at 15:23,Just would like to add onto Silvio Guedes answer that window.ethereum.enable() is a deprecrated method, instead you should be using window.ethereum.request({method: 'eth_requestAccounts'}).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0IntFooBar\n                \n                Dec 29, 2021 at 19:36,@IntFooBar Thanks, I already edited.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Silvio Guedes\n                \n                Dec 30, 2021 at 21:54","520":"okay i understand the overflow and underflow but I want know that what the condition apply in assert like in require that the owner account token is always gather then the amount if it's false then it will give the error what condition actually says I just want to know it?what the meaning of that condition?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yadav Akash\n                \n                Jul 8, 2021 at 12:46,assert(tokenBalance[_to] + _amount >= tokenBalance[_to]); This checks whether the tokenBalance[_to] value becomes lower (i.e. overflows) when you add the _amount. If it does overflow (the value is not larger or equal), the assert() condition results in false, so it throws an exception.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jul 8, 2021 at 14:41,and what about second assert condition?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Yadav Akash\n                \n                Jul 9, 2021 at 11:55,It's pretty much the same. assert(tokenBalance[msg.sender] - _amount <= tokenBalance[msg.sender]) checks whether the tokenBalance[msg.sender] becomes higher (i.e. underflows) when you subtract the _amount. If it does underflow (the value is not smaller or equal), the assert() condition results in false, so it throws an exception.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jul 9, 2021 at 12:46","521":"And careful to only use three quotation marks, I had four by accident and the error came up\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Oregano\n                \n                Dec 9, 2014 at 23:13","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":"Can you please share a link to the contract methods and the types?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Scott\n                \n                Jan 8, 2022 at 5:12","534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":"Permalinks for serialize github.com\/hashblock\/solana-cli-program-template\/blob\/\u00e2\u0080\u00a6 and deserialize github.com\/hashblock\/solana-cli-program-template\/blob\/\u00e2\u0080\u00a6  This seems painfully manual... how can I invoke borshdeserialize in a way where it 'just works' and rehydrates my rust type from the u8 vec? Still reading \/ experimenting but haven't found prior art that fixes this either\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0viraj_os\n                \n                Nov 21, 2021 at 4:25","550":null,"551":null,"552":"Thank you for your help!  What is the best way to track when a random number is returned?  I was thinking I could check on an interval or a fixed amount of time like 2 minutes.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Holland Pleskac\n                \n                Jun 24, 2021 at 1:54,A great way is to emit an event whenever you request a random number, and have a function read the chain for the event. Otherwise, a \"simple\" way to do it is to have your program sleep for maybe 60 seconds.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Jun 24, 2021 at 9:41,Do you know about how long the response takes on polygon? Thinking about building a game that requires some randomness, but if the response is too long, it probably wouldn't be playable\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Lucas Rahn\n                \n                Mar 8, 2022 at 19:23,Usually within a few blocks.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Patrick Collins\n                \n                Mar 8, 2022 at 19:30","553":"That worked for me.  Thank you so much for your help!  I just checked out their documentation and the requestRandomness() function has been updated.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Holland Pleskac\n                \n                Jun 23, 2021 at 17:12","554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":"From the example I think it is migration hash attachment to signature but for me I prefer first transaction must be signature constraint. I mean every transaction are signature constraint    When I issue transaction on local it's work  but on production env it's doesn't work for me\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Siridet Sukkana\n                \n                Jun 19, 2021 at 1:15,Thanks for your answer. I found my network map config version is V3 so it's can't default signature constraints. And then I try to use V4 it's work\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Siridet Sukkana\n                \n                Jun 19, 2021 at 10:28","563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":"Thanks again Petr! I was pretty sure there was a call mechanism that keeps dApp reads free. I guess I'm curious now how a DDOS attack or just generally high read application is treated...\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0webish\n                \n                Jun 9, 2021 at 12:59,DDOS protection is usually implemented on the JSON-RPC provider. They usually have a public API acting as a \"middleware\" before the actual request to the Tron daemon... So I can imagine there's protection on a router level, as well as on the HTTP server (e.g. nginx) for their public API \"middleware\". Most providers also use rate limiting of how many requests per sec\/min can each (valid) API key request... Only if the request is not stopped by the previous steps, the API \"middleware\" sends the eth_* request to the Tron daemon running on their (other) server, and proxies back the response.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jun 9, 2021 at 13:10","573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":"Thanks. My follow up question is, am I going to get whatever block is on top, or it would wait for the next block and return it as latest? The reason for this question is that I want to get the very latest block after the code is run, not whatever is on top as at when the code is run.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jonathan Otokun\n                \n                Jun 5, 2021 at 10:15,When you execute <web3>.eth.getBlock(\"latest\"), it returns the current latest mined block (e.g. block #100), and doesn't wait for a new block to be mined... If you run it again when there's a new block (e.g. #101), then it returns the block #101 as \"latest\".\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jun 5, 2021 at 10:57,I added a follow up question below so I can format it properly.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jonathan Otokun\n                \n                Jun 5, 2021 at 11:24,You can use a WSS provider (instead of a HTTP provider, usually passed in the new <web3>() constructor) and then subscribe to the \"newBlockHeaders\" WSS messages. This will send you a message each time when there's a new block, and you can use the provided block.number (from the message) to request the specific block (or simply the \"latest\")... A workaround with a HTTP provider would be to poll the <web3>.eth.getBlock(\"latest\") (e.g. each second using setTimeout()) but that might hit the rate limits of your provider.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Jun 5, 2021 at 11:26,@DavidJay Ethers.js uses the latest block as default. So you can pass 0 params to the getBlock() method and then read its timestamp property: const latestBlockTimestamp = (await provider.getBlock()).timestamp;\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 18, 2022 at 9:47","589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":"In all the samples, I see only evolvabletokens getting created, but in my case I need a fixed one, that never evolves. How do I achieve that.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0laplace\n                \n                Jun 1, 2021 at 4:03,Hi @laplace , did you get the solution, like fixed one?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Benjamin\n                \n                Mar 14, 2022 at 12:45","600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":"Thanks for sharing this. \u00f0\u009f\u00a4\u008d\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dick Larsson\n                \n                Feb 23, 2022 at 20:47,@DickLarsson I aim to please.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0MetaStack\n                \n                Feb 24, 2022 at 17:56","608":null,"609":"How to pass address as an arg in the javascript file?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Azeem Lodhi\n                \n                May 26, 2021 at 10:57,is it passed like \"0x123123123123123123123123123\" like this ? @Mikko Ohtamaa\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Azeem Lodhi\n                \n                May 26, 2021 at 10:57,Yes. You are correct. You need to pay attention to hex letter capitalisation because it is the source of checksum in Ethereum.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                May 26, 2021 at 11:03,How to interact with the contract deployed on BSC using truffle? @Mikko Ohtamaa\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Azeem Lodhi\n                \n                May 26, 2021 at 11:30,That is an another question. I suggest you look up tutorials on this topic.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                May 26, 2021 at 11:39","610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":"Please @AngelDev, check me as correct the answer. I'm really excited because it's my first time on Stackoverflow :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Fernando L\u00c3\u00b3pez\n                \n                Jun 8, 2021 at 18:13","628":null,"629":"Thank you for the answer. But especially during the development process, I always need to request ABI from solidity developers and update my project. I think If I access to ABI by address of the smart contract I will save alot of time. Do you any suggestions for this?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OguzKaanAkyalcin\n                \n                May 20, 2021 at 11:22,Unless you can get the source code by address, it's not technically possible to generate the json from just address. It needs to be generated from the contract source code... \"If I access to ABI by address of the smart contract\" - It depends on your context, whether the contract authors have published their source code and whether the set (of source codes) is accessible in some searchable format (by address).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 20, 2021 at 11:47","630":"Are the ERC721 contracts mentioned here only useful if the contract owner is minting tokens for certain addresses? I'm actually looking for a structure where users can mint their own tokens without the central figure. Is there any security flaws if I were to simply remove the access control for the mint function and make it public? I'm just trying to make sense of the reason for the access limitation because I'm not sure if it's as important as the access control for transferring or burning a token.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kevvv\n                \n                May 19, 2021 at 23:30,If you want to open the minting feature, you can remove the authorization from the mint() function. From security standpoint, I can only think of higher probability of reaching the ID max value (if you chose to make it uint8 or some \"small\" datatype) and possible integer overflow (if you don't prevent it either using Solidity 0.8+, or checking with require\/assert). Otherwise, it's same level of security as if you only had authorized addresses, because they should be treated in the code as untrusted as well (e.g. don't trust but verify that they return some value if they're a contract).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 20, 2021 at 8:21,Is it a more common approach to deploy a new contract when the URL is different (to signify a different creature as opposed to just a different variant) or is it better to re-use the old contract and keep adding different URLs for different things to the same contract?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Kernel James\n                \n                Aug 2, 2022 at 1:43,@KernelJames A general practice is one contract for one collection. So if you have a collection of \"cat NFTs\", you might want to deploy a new contract for another collection of \"dog NFTs\". But if your overal aim is to create a collection of \"animal NFTs\", they you might want to group all these tokens under the one collection.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Aug 2, 2022 at 6:57","631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":"I think this is the quickest I've ever gotten an accurate answer from Stack Overflow...So quick that I can't mark this answer as correct for another 8 minutes.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Adam\n                \n                May 11, 2021 at 0:54,here's a public query with the data: luabase.com\/run\/662c231eda384319b3a73478e63de23e\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0howMuchCheeseIsTooMuchCheese\n                \n                Jul 28, 2022 at 22:44","644":null,"645":"While this \"works\", doesn't really explain the error, especially because chain.wax.io resolves and has json.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0swhitman\n                \n                Nov 21, 2021 at 23:07,chain.wax.io has hotlink protection enabled since its used for WAX's first-party products, other sites trying to use the endpoint will probably get a Cloudflare error page.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0includenull\n                \n                Nov 23, 2021 at 0:14,You gotta love it when the quickstart tutorial points you to something that causes and error.  With not explanation.  Thank you for this workaround.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0durbnpoisn\n                \n                May 7, 2022 at 14:51,@durbnpoisn It did used to work, but that endpoint was made less public since block producers run them now. The dev docs are maintained on github now, there is a discussion of how to update the docs. Should it show just one endpoint, or show all of the options?  Best practice is to use many endpoints to avoid issues with downtimes, what's the point of a decentralized <blockchain> if every project uses the same endpoint?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0includenull\n                \n                May 8, 2022 at 19:57","646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":"The snippet in my answer reacts to your original question about the error when you're sending BNB to a contract. It allows you to send BNB to the contract, so you (or any user) can later call the sell() function and the contract has now BNB to send back to the user. It doesn't return any tokens... If you want to buy tokens, you need to call the buy() function directly or from within the receive() function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 14:02,@EvertonFigueiredo I updated my answer with example of calling the buy() function from within the receive() ... Can you specify what do you mean by \"doesn't work\"? I was able to successfully send ETH (should be same for BNB) in Remix and didn't run into any issue: 1) Commented out the redefinition of Approval and Transfer events in your ERC20Basic (they are already defined in the IERC20) and deployed DEX. 2) The deployment of DEX gave 100 * 10 ** 18 tokens to my deployer address. 3) Then I sent 100 wei to the contract from the same (deployer) address and received 100 tokens.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 14:32,@EvertonFigueiredo I updated the answer with the code. Compiled with Solidity 0.8.1\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 14:46,I was putting buy () on receive () from within ERC20Basic. This must have been the error.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Everton Figueiredo\n                \n                May 7, 2021 at 14:47,That makes sense. The user is interacting with the DEX contract - not with the ERC20Basic when they are sending a transaction. So the DEX contract needs to implement the recieve() function. Glad it works now.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 7, 2021 at 14:49","653":"Thanks for your reply! I tried setting the env. variable COMPOSE_PROJECT_NAME to net. So when I run the test network for the first time, the network created in the name \"net_test\". But after I take the backup, I have removed the network \"net_test\" and re-start the network with backed by crypto materials (with the docker-compose file where I mentioned the networkmode as net), it is creating the network in the name \"docker_test\".\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 7:44,you need set COMPOSE_PROJECT_NAME when you restore your fabric network,I mean you better set COMPOSE_PROJECT_NAME every time when you start your fabric network\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Li Xian\n                \n                May 10, 2021 at 8:03,I have mentioned COMPOSE_PROJECT_NAME as net when starting the restore network. But still the network name is named as docker_test instead of net_test and the Chaincode invoke and query are failing\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 9:15,Sure, please find the attached peer log in the github - github.com\/SoundaryaA3098\/k8s_problem_statement\/blob\/master\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 9:35,Please find the docker-compose.yaml under github.com\/SoundaryaA3098\/k8s_problem_statement\/blob\/master\/\u00e2\u0080\u00a6\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Soundarya\n                \n                May 10, 2021 at 9:44","654":null,"655":null,"656":"Still getting this error:  invalid database url %spostgresql:\/\/node1:Password@chainlink-kovan.cjevl5icfjsu.us-east-1.rds.amazonaws.com:5432\/chainlink-kovan\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jaxcoder\n                \n                May 7, 2021 at 14:58,please try to change the DNS to the public IP, so change \"chainlink-kovan.cjevl5icfjsu.us-east-1.rds.amazonaws.com\" to the public IP of your server (given you from AWS) like 85.80.178.186 .\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Rob-LinkRiver\n                \n                May 7, 2021 at 17:54,That didn't work either. I am getting the exact same error.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jaxcoder\n                \n                May 7, 2021 at 19:58,Unable to initialize ORM: parse \"postgresql:\/\/node1:password\": invalid port \":Pharo0nKovan\" after host unable to open postgresql:\/\/node1:password@76.18.209.65:5432\/chainlink-kovan for gorm DB\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jaxcoder\n                \n                May 7, 2021 at 20:36","657":null,"658":null,"659":null,"660":null,"661":null,"662":"Thank you~. To be honest I don't understand the smart contract logics well now. I solved my problem like one time request an approve outside of the contract and request a transaction to spend user token (in allowances).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0sung chul\n                \n                May 6, 2021 at 5:07,@Seong how did you do it? Can you a example code?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Crazy\n                \n                Nov 3, 2021 at 9:03,@seongcheolryu  how did you do it? Can you a example code?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0YNX\n                \n                Jan 6, 2022 at 12:25","663":null,"664":null,"665":null,"666":null,"667":null,"668":"Thank you, it works! There is another problem, I now have another invalid opcode DUP. Is it good to simply use the latest chain fork? How do you get these info? My Google didn't come up with any useful info (i.e. what's the release\/version roadmap, what is the mainnet fork currently is). Sorry if I ask stupid questions, I am new\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luke Vo\n                \n                May 3, 2021 at 15:19,Not sure if you mean the original DUP or DUP<n>. If you mean the newer DUP<n>, it was added in the Berlin hardfork. The original I'm not sure ... How I got to the Istanbul fork: I googled \"selfbalance ethereum opcode\" and found the EIP-1884. Then I searched for \"EIP-1884 hardfork\" because I learned somewhere earlier that new opcodes get implemented mostly in hardforks... But it's a good idea to include all the forks first (not just the latest one), and experiment later. The forks define a diff of added\/removed features - not the whole sum of them, so you need to include all forks.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                May 3, 2021 at 15:40,Thanks you are correct, I have just tested it. I added Berlin hardfork to genesis but still have the problem, so I can confirm the forks are not the whole sum of them. I am using this code to determine what forks there are for now.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luke Vo\n                \n                May 3, 2021 at 15:43,It looks like something's wrong with my Solc compiler because I have the same problem even on Ropsten testnet. I think there is no DUP opcode, just DUP1 to DUP16.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Luke Vo\n                \n                May 3, 2021 at 21:20","669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":"I've used _transferFrom(seller, msg.sender, _tokenId); insted of  _transfer(seller, msg.sender, _tokenId); because I'm using ERC721Full but it worked nicely. Thank you!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0acampana\n                \n                May 7, 2021 at 15:56,What is the line that starts with \"mapping\" doing?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ianwt\n                \n                Apr 21, 2022 at 17:59,@ianwt A mapping is a dictionary-like datatype. You can easily retrieve a value by its key, but you cannot retrieve a key by a value. Note that the keys have to be unique, the values don't... In the example above, the key is the token ID, and the value is the token price. So in this case its easy to query a token price by its ID.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 21, 2022 at 21:26,Got it, thank you! what is the value of this mapping when the contract is initially used to mint an NFT? Is it 0? That is, does allowBuy have to be explicitly called with a positive value before the NFT is purchasable? Thanks again\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ianwt\n                \n                Apr 22, 2022 at 1:34,@ianwt Exactly. Default value for each key is 0. And because the buy() function requires price > 0 (i.e. non-default value), you effectively need to invoke allowBuy() before the NFT is purchasable.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 22, 2022 at 9:11","679":null,"680":null,"681":null,"682":null,"683":"You helped me to understood how it works! Thank you so much !!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0LeClient\n                \n                Apr 28, 2021 at 13:22","684":null,"685":"Ah ok, I understand thank you! It really makes sense to only replicate the blocks and not single <transactions>, that can easily send again by the application in case it does not get a validation answer from the peers.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Strohhut\n                \n                Apr 28, 2021 at 17:33,Thanks for your answer, but I have a question: when a node is follower, it only received and save block from leader, leader is only node can create block?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tr\u00e1\u00ba\u00a7n Minh To\u00c3\u00a0n\n                \n                Jul 26, 2022 at 1:34,That is correct, only the leader in Raft creates the block, but the block is sent not-signed and each follower signs the block itself\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0yacovm\n                \n                Jul 26, 2022 at 10:48","686":null,"687":"Thanks for your reply. I will be thankful if you deliver a sample smart contract that gets the above candlestick data.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Crypto Miner\n                \n                Apr 27, 2021 at 9:34,@CryptoMiner Unfortunately I don't know any. But if you DYOR, I'm sure you'll find some that do exactly this or at least some very similar thing. There are providers that provide prices of BNB\/USD to the Chainlink oracles, so there might be also consumers that consume these data.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 27, 2021 at 9:39","688":null,"689":"In terms of creating a dice game, what if we use future block to determine the winning number. Player will place the bet in current block and lock and with a second contract we are going to determine the winner. Would it be possible in this way?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wowocado\n                \n                Apr 27, 2021 at 19:53,If the possible winnings are big enough, the player can keep betting with the parameters of the possible next block that they are going to mine (until they in fact mine it with the expected parameters). The need for guessing correct block.timestamp that they are going to mine with a 1 second accuracy lowers the odds significantly, and it's plausible for most real-life use cases. But to answer the original question - it's still determinable (and not truly random)... Edit: The dishonest miner could also place multiple bets from multiple addresses in one block to higher their chances.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 27, 2021 at 20:27,Thank you for the great answer. I really appreciate it.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Wowocado\n                \n                Apr 27, 2021 at 20:41","690":null,"691":null,"692":"Thank you Petr, I'll try this out! I already marked your answer as correct one, because it must be, it's very logical!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Apr 25, 2021 at 22:05","693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":"Thank you Mikko, now I understand!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Saulius\n                \n                Apr 17, 2021 at 18:07","710":null,"711":"I know how to code it, but my system got err.. does it has any conditions before use it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OYU\n                \n                Apr 13, 2021 at 14:02,check if both the chaincodes are installed on the same endorsing peer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aditya Joshi\n                \n                Apr 13, 2021 at 14:05,sorry but do you mean both chaincodes should install on the same peer? I installed sell's on the sell peers, and dealer do so\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OYU\n                \n                Apr 13, 2021 at 14:30,yes, both chaincodes must be installed on each endorsing peer\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Aditya Joshi\n                \n                Apr 13, 2021 at 15:57,Sorry but could you give me a further instruction, plz. My English is not very good.. I mean, I have installed ORG3's chaincode on ORG3's peer, and ORG2's chaincode on ORG2's peer, do you mean i should install ORG2's chaincode ont ORG3's peer, too?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0OYU\n                \n                Apr 14, 2021 at 1:04","712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":"I have read something about that, but broadcaster is not supposed to work on the entire internet. (or so I have read) It is only for specific networks or local networks. How does that work then?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0l4x3 l4x3\n                \n                Apr 10, 2021 at 12:03,@l4x3l4x3 This is more of an networking topic than software development, so you might get better and more detailed answers at serverfault.com... But basically it's not broadcasting on 255.255.255.0 - it's rather building a map of peers that you can \"broadcast\" to using a set of individual calls (so this way they learn about your presence). You can get their list by connecting to the known list of peers and recursively getting addresses of their known peers, and their known peers...  See this SO answer and its comments for more details.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Apr 10, 2021 at 12:16","722":null,"723":null,"724":null,"725":"@Discoradian Thanks for answering - very much appreciate it! I should have phrased my question differently cause I'm actually very familiar with IPFS, how adding\/removing files changes folder Hashes, CID's, etc. What I was trying to understand is - again, if \u00e2\u0080\u009cI\u00e2\u0080\u0099m the only one that\u00e2\u0080\u0099s allowed to make further modifications\u00e2\u0080\u009d to a folder I uploaded to IPFS, or \u00e2\u0080\u009ccan anyone out there on IPFS do that as well?\u00e2\u0080\u009d It\u00e2\u0080\u0099s strictly a question re permissions, not practicality or mutability. I updated my question to give the full context of what exactly I\u00e2\u0080\u0099m trying to achieve - please check it out!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Apr 10, 2021 at 15:14,@Sirab33 I've read your updated question. So you understand when the file is updated, the dir CID changes, you update that in Solidity, great. So wouldn't the question be more \"who can update the tokenuri method?\" as anyone could download your IPFS files, change them, and upload them with a new CID, as IPFS is completely open. However your tokenuri method I'm assuming has permission involved, and that's really the content that's being pointed to. So the real problem to address is \"Who can update the TokenURI?\" and if that's just you, sounds like you're all set.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Discordian\n                \n                Apr 10, 2021 at 16:15,@Discoradian Thanks for responding again. To answer your question: \"wouldn't the question be more 'who can update the tokenuri method?'\" The answer is \"No. My question is and remains what it always was, the gist of it being: can anyone update any directory on IPFS?\"   The reason I updated my original question was to provide you with further context re why I asked my original question, but I never changed my original question. I actually literally ended my updated question by saying \u00e2\u0080\u009cI FIRST want to go back to my original question\/concern.\u00e2\u0080\u009d   Perhaps you glossed over that.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Apr 10, 2021 at 19:07,Either way, you did answer my original question now by writing that \"IPFS is completely open\" - which I actually find really surprising, if not downright crazy.  Cause if anyone out there can upload anything into any existing IPFS directory - even one they didn\u00e2\u0080\u0099t create, well that seems like an invitation for chaos.  I think I\u00e2\u0080\u0099ll have to dig deeper into that. Anyway, thanks again!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Apr 10, 2021 at 19:08,@Sirab33 I'm not sure where the confusion stems from but the data is immutable, so nobody can add anything into an existing IPFS directory, it'd always be a copy, a different hash, for different data.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Discordian\n                \n                Apr 10, 2021 at 21:06","726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":"Thanks furas! I skimmed over that sha256 method, you were right about the return as well. Thanks again. :)\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0ThomasATU\n                \n                Apr 1, 2021 at 13:12","736":null,"737":null,"738":"Thank you for your response @NukeManDan. But it seems that the tests you are referring to (mock.rs and tests.rs) look like unit\/integration tests. I was referring to something more like system test suite which checks the expected behavior of a runtime.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jdawg287\n                \n                Apr 2, 2021 at 8:03,There are a few tools in github.com\/substrate-developer-hub\/awesome-substrate that might be of interest, but I am not aware of any specific full testing suite available for generic substrate chains. The allowed customizations on your runtime are near infinite , so I wouldn't expect such a tool without needing heavy customizations needed anyhow.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Apr 2, 2021 at 17:29,node\/executor\/tests is probably the closest to what you want, from the included node in substrate\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Shields\n                \n                Apr 2, 2021 at 18:41,OK I see why it is difficult to have a full testing suite for substrate based chains. I'll look into node\/executor\/tests and try to come up with something. Thanks a lot I'll mark this as answered.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Jdawg287\n                \n                Apr 5, 2021 at 2:17","739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":"Thanks for your answer. so as I realized if the predefined port goes down ( or other main active nodes ). the whole system goes down and <blockchain> verification doesn't work anymore right ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0rouzbehsbz\n                \n                Mar 30, 2021 at 7:07,How would the port go down? It's just a parameter of the communication protocol.... As long as you have few nodes that are able to communicate on the (P2P) network on the specified port, you have a functioning P2P network between them. But if a computer is not able to communicate on the port (and there are no backup ways such as a secondary port in the network definition), it would not be able to connect and use the network.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 30, 2021 at 8:03,alright I think I get it. so what about IP addresses ? did we need some nodes with static IP addresses 24\/7 online ? like a server ? and in other nodes we have list of that main nodes that their IP addresses never changes ?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0rouzbehsbz\n                \n                Mar 30, 2021 at 9:02,The static IPs are not needed - your app can always wait for other nodes to broadcast their presence. But if you want to be able to connect to other nodes quickly, they should have a static IP that IP should be defined in the app so it knows where to connect on startup.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 30, 2021 at 9:36,Thanks for the explanation\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0rouzbehsbz\n                \n                Mar 30, 2021 at 12:15","748":"Thanks mate, its exactly what you said, i passed an EC_KEY to EC_KEY_check_key without generating.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Ayoub Mafkoud\n                \n                Mar 30, 2021 at 11:14","749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":"Thanks I got one step closer but the value is undefined 0x4b8ca107efbc8b096c011f64d2c2d7aebdaec7fe: undefined 0x7901b2b9caaeff5478d14873c39765373a48f890: undefined\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0DedicatedDreamer\n                \n                Mar 22, 2021 at 21:26,oh sorry, my mistake... should be var value = jsonData.texts[key]; or jsonData['texts'][key] (basically the same, but let's stay in one convension, edited\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Flash Thunder\n                \n                Mar 23, 2021 at 7:30","758":"The ERC-20 standard transfer assumes that the send amount is sent fully and the full amount is available to sent. It  would break on all decentralised and centralised exchange. Unless you plan to use to the token just for yourself, your modified transfer() token could not connect to larger DeFi ecosystem any way.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Mar 21, 2021 at 15:43,@MikkoOhtamaa That's correct. It's also one of the reasons why I've written the note \"is vulnerable to integer overflow\". Since Solidity 0.8, the validation whether the amount is available, is done automatically through the underflow\/overflow check. But in earlier versions, one should implement a custom check through require or use a library such as SafeMath.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 21, 2021 at 15:48,@Saulius You should define the admin address value to your address that you hold the private key to. Then you can transfer the tokens (from the admin address) the same way as you would transfer any other token - by calling the transfer() function.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 21, 2021 at 19:18,@Saulius I'm not sure what you mean by the \"wallet hash\". If you mean the private key, you can use for example the <web3>.js privateKeyToAccount() function or the Metamask Import feature. If you mean the keccak256 hash of the address, then it's impossible to convert it back to an address... Also keep in mind that the address are checkum and later versions of Solidity do not accept addresses with incorrect checkum.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 21, 2021 at 21:42,@Saulius So I'd recommend to better describe the issue in a separate question.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Mar 21, 2021 at 21:42","759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":"This is obvious and not helpful for someone trying to learn how to work with the more current releases.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0user2799827\n                \n                Oct 31, 2021 at 16:29","775":null,"776":"Thanks. I'm new to Solidity, and I had no idea A) that read-only and read\/write functions had to be called differently, or even B) that the JavaScript tests were using <web3> calls. Now I know more about where to look for documentation.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Dan Wiebe\n                \n                Mar 9, 2021 at 16:53","777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":"Thank you for your answer, but the first problem I see in creating a new wallet that signs the miner reward each time, is that there's no single <blockchain>'s wallet, but it's kinda non existent. Is this behaviour allowed? A \"ghost\" wallet that spits token from nowhere?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Caius\n                \n                Mar 1, 2021 at 20:04,I've updated the question trying to answer you on the parts you've cited, since a comment would be too long\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Caius\n                \n                Mar 1, 2021 at 20:10,@Caius It's not a ghost wallet that spits tokens from nowhere, it's the rule that allows tokens to be created in the first place. The miner is permitted to attach a \"reward\" transaction with one output and no inputs.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0David Schwartz\n                \n                Mar 1, 2021 at 20:10,@Caius There's no reason to sign it and very good reasons not to. You don't want mining equipment to have to have private keys.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0David Schwartz\n                \n                Mar 1, 2021 at 20:23,Oh, one correction. Bitcoin does allow the reward transaction to have multiple outputs. That makes it more convenient for cases where miners are splitting rewards.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0David Schwartz\n                \n                Mar 1, 2021 at 20:31","786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":"That's interesting. I thought about this option of splitting everything into different contracts, but it seemed like it might be a headache. Or that it could get out of hand quickly and you would end up with a dozen contracts - even more, in no time... So are you familiar with contracts\/projects that take this approach? Can you give examples? I'd love to look up their code on Etherscan.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Feb 20, 2021 at 0:53,By the way, are you confirming that we are indeed NOT ALLOWED to change the signatures of methods such as ownerOf() and balanceOf() by adding additional arguments to them, as I suggested in my original question?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Feb 20, 2021 at 0:55,You could technically change the method signatures, but then they would not follow the ERC-721 standard (and that's probably what you mean by the \"not allowed\"). So I strongly discourage that... I'm not that familiar with the NFTs practical examples that much, so I don't know any examples, but I'm sure if you DYOR, you'll find examples. My answer is based on observing and writing implementations of ERC-20, where you also don't see many contracts defining 2+ tokens (even for the practical reasons that Etherscan and other <blockchain> explorers would not recognize 2+ tokens in the same contract).\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Petr Hejda\n                \n                Feb 20, 2021 at 1:13,OK got it. Makes sense. And yes, when I said \"not allowed\" I did mean that you certainly could change method signatures if you wanted to - but then you'd no longer be conformant to the ERC721 standards.  I will continue researching this - and hopefully others will chime in with their advice as it could be useful to others. Thanks again!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Feb 20, 2021 at 1:21,In terms of your suggestion to put each ERC721 in its own separate externally deployed contract, and then have the GameContract refer to those contracts, what if you wanted to add another element to your game? So you already have Weapons and Vehicles, and now you want to add Potions for example. Is there a way to design your GameContract so that it's able to accept new elements\/ERC721 contracts and Tokens so you can keep growing it?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Sirab33\n                \n                Feb 21, 2021 at 1:46","799":null,"800":null,"801":"Exactly. My problem was they were on separate networks. Make sure your explorer runs on the same network as fabric.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Navid K\n                \n                May 10, 2021 at 5:43,Yes, this solved my problem. I had to make sure all of the container runs in the same network.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Quek Yao Jing\n                \n                May 27, 2021 at 13:47","802":"I heard that <hyperledger> also supports pluggable consensus protocol too. Do you have any idea about that? Thanks a lot.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0monir zaman\n                \n                Feb 20, 2021 at 1:12,Sorry I do not know about <hyperledger>. All I know it was IBM led effort and it is not doing well coindesk.com\/ibm-<blockchain>-revenue-misses-job-cuts-sources\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 25, 2021 at 9:10,I have searched a lot about Parity Ethereum implementation from scratch in a private environment, but could not find any that works. Do you know any tutorials or documentation that might help? Thanks in advance.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0monir zaman\n                \n                Apr 5, 2021 at 2:56,Read the source code. Your use case is so niche that it is not worth of writing documentation for. Everyone who gets involved this needs to understand the node software source code anyways.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Apr 5, 2021 at 13:26,Hi Mikko, The documentation of parity is not that rich. However, I find Substrate Parity which ahs a great documentation. I believe you know that but if you not you may check that out.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0monir zaman\n                \n                May 6, 2021 at 4:20","803":"you are awesome thank you very much for this!!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0jhon alino\n                \n                Feb 16, 2021 at 18:35,needs a const before user at the for loop\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0l30c0d35\n                \n                Dec 8, 2021 at 17:20","804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":"Please avoid direct solicitations for help, especially including an e-mail address. It's only likely to result in that e-mail address getting spammed. Stack Overflow questions and answers are for all users and future readers... it's not a traditional forum in this sense.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0TylerH\n                \n                Feb 9, 2021 at 19:17","813":"Got it. Do you know if the most popular cryptocurrancies has api for this? Bitcoin, Tezos, Monero, etc?!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Tony Starkus\n                \n                Feb 9, 2021 at 0:15,Yes, all <blockchain>s have API to query the wallet balance. For each <blockchain>, you need to figure out how.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Feb 9, 2021 at 2:18","814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":"I get what you mean but it can create confusion if someone only find out the discrepancy issue after sometime when they try to retrieve that record from 4 peers.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Calvin Cheng\n                \n                Feb 2, 2021 at 1:51","829":"with this '$.\"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\".transaction.size'  unfortunately return null !!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mohammadjavadkh\n                \n                Jan 31, 2021 at 7:39,Are you sure that's an exact match on that key?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Charlieface\n                \n                Jan 31, 2021 at 7:40,excuse me. your answer is correct. I call '$.\"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\".transaction that return null. but '$.\"017989w06d3f902f1f362dfg48f862dba6a605229e99859a91d854f93ac13894\".transaction.size return correct answer.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0mohammadjavadkh\n                \n                Jan 31, 2021 at 7:45,Have made further update for changing hash keys\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Charlieface\n                \n                Jan 31, 2021 at 7:54","830":null,"831":"So if I want to verify a customer's subscription, do I have to pass all the data over again (id, city, start date, end date)?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 30, 2021 at 10:43,Yes, if the contract saved them\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 30, 2021 at 10:44,one last question to be sure that I understand you correctly. What is contract storage?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 30, 2021 at 10:49,Add contract sample to answer. Contract storage is data describing the state of the contract\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 30, 2021 at 11:25","832":null,"833":null,"834":null,"835":null,"836":null,"837":"Indeed   Removal of identities is disabled in the fabric-ca-server by default, but may be enabled by starting the fabric-caserver with the \u00e2\u0080\u0093cfg.identities.allowremove option.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Badr Bellaj\n                \n                Oct 26, 2022 at 12:56","838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":"Now I understand. Thank you so much!\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Zoha Malik\n                \n                Jan 24, 2021 at 19:14","845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":"So is it correct to say that the backend requests new blocks from the <geth>, extracts events from them and selects the necessary ones?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 22, 2021 at 10:14,Yes, though backend does not request the new blocks. Your Ethereum node (<geth> is not the only one) requests the new blocks and manages the authoritative state. Your backend then just reads the variables in this state it chooses to.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 22, 2021 at 10:32,thanks, you gave me the clearest answer. Ok so in the end it is my backend that is listening for events. Is it correct?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 22, 2021 at 10:39,Can I ask you another question? I wrote this question in stackExchange. <geth> can be both a full node and a light node but I was asked this question link\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0EMANUEL\n                \n                Jan 22, 2021 at 10:42,Backend listening for the event is correct.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mikko Ohtamaa\n                \n                Jan 22, 2021 at 12:02","852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":"So the only incentive is a higher probability for you next block to appear in the main chain? Do I understand correctly that this longest chain selecting algorithm is embedded in the node client code and is not enforced from anywhere externally?\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0tjumma\n                \n                Jan 2, 2021 at 11:25,Yes. But you can create your own client with any other chain selection algorithm.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Mad Jackal\n                \n                Jan 2, 2021 at 12:04","889":null,"890":null},"A3":{"0":null,"1":null,"2":"<hyperledger> Fabric World State is not immutable but is only meant to have the latest state so you can quickly propose or endorse <transactions> based on the current state.\nIf you intentionally tamper and remove any key's or change the values in world state\n\nIf you keep transacting without involving the tampered record, it may continue to remain wrong in your world-state till any transaction involving the tampered record is performed.\nIf you propose a transaction based on the tampered record, other nodes will not endorse your transaction.\nIf any other node proposes a transaction that involved the tampered record, it will result in your malicious node not being able to endorse the transaction but If other nodes provide necessary endorsement and the transaction goes through, the world state would be updated automatically and undo the tampering.\n\nHope this clarifies.","3":"Copy the abi from remix, not from the console.","4":"Is your website https enabled? If not then it won't work","5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":"This seems to be only because of anchor's version, I had the following versions installed:\nRust 1.59.0\nsolana-cli 1.9.6\nanchor-lang 0.22.1\n\nI couldn't deploy to devnet because of\nError: Custom: Invalid blockhash\nThere was a problem deploying: Output { status: ExitStatus(unix_wait_status(256)), stdout: \"\", stderr: \"\" }.\n\nSo I just changed anchor-lang to 0.22.0 and all worked well.","23":null,"24":null,"25":null,"26":null,"27":null,"28":"address payable private owner;\n\nthen set the owner in constructor as msg.sender:\nconstructor() {\n    setOwner(msg.sender);\n  }\n\nthis is setOwner:\nfunction setOwner(address newOwner) private {\n    owner = payable(newOwner);\n  }\n\nthis is withdraw function:\n function withdraw() external onlyOwner {\n     (bool success,)=owner.call{value:address(this).balance}(\"\");\n    \/\/ if it is not success, throw error\n     require(success,\"Transfer failed!\");\n   }\n\nMake sure only owner can call this so write a modifier:\n modifier onlyOwner() {\n    if (msg.sender != getContractOwner()) {\n      revert OnlyOwner();\n    }\n    _;\n  }\n\nrevert OnlyOwner is sending custom message with newer versions of solidity:\n\/\/\/ Only owner has an access!\n  error OnlyOwner();","29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":"in beforeEach() block of code get your contract object by -\nconst token = await ethers.getContractFactory(\"Token\")\nIf you haven't defined beforeEach() block define it before it() block\n  beforeEach(async function () {\n    Token = await ethers.getContractFactory(\"Token\")\n    token = await token.deploy()\n  })\n\ndefine Token and token using let keyword before, also somewhere in your code you may be missing await somewhere so that could be also the reason. Thanks.","40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":"There are no automatic givers in net.ton.dev now. But you can get rubins from here: faucet.extraton.io Also you can create automatic giver in this test network by yourself.","63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":"Another way is to call the parent's constructor if you are inheriting. For example, let's say you have \"Name\" contract\ncontract Name {\n    string public name;\n\n    constructor(string memory _name) {\n        name = _name;\n    }\n}\n\nNow my base contract should inherit from \"Name\" contract\n\/\/ I deployed a new Name contract\ncontract Base is Name(\"Ronaldo\"){}","78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":"I've had this error for days and have seen it posted alot online.\nI was simply 1 directory up from where I needed to be - I followed the Patrick Collins tutorial very closey with the addition of setting up a virtual env, so maybe others are simply having the same problem I had.\nI was originally in a directory \"\\demos\\<web3> brownie\" which contained a folder called \"brownie\" and my <python> virtual env files.\nThe script is now running when I'm in directory \"\\demos\\<web3> brownie\\brownie\" which contains the brownie build, script, contract directories","128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":"funny I was working on this exact same issue this morning.. and just like furas pointed out, it's the endpoint, need to use the mainnet endpoint:\nhttps:\/\/api.mainnet-beta.solana.com\n\nAnd I found it's bit confusing even though the doc says you need to input base-58 address, I tried same as you did it gives me the same error, turns out I just need to copy paste my address directly","143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":"public: anyone can access the function\nprivate: only this smart contract can call this function\ninternal: only this smart contract and smart contracts that inherit from it can call this function\nexternal: anyone can access this function unless this smart contract\n\nNote that external uses less gas than public so if the function is not used by your contract, prefer external over public.\nMore explanations in this article","150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":"It will work with solc version 0.4.17.","176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":"If you want to interact with dApps, you need to take a part in <transactions> which are occurred between you and the dApps. To do so, you need to have an account on the <blockchain> network, and the metamask simply appears as a tool to manage your account. You could have several accounts, and Metamask also works for that.  By using metamask, you can do switch accounts, sign a transaction with the account you want and so on.","188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":"It seems to be attached to the Ganache that you are running, as its stated there. Ganache GUI opens up the instance of ganache-cli","199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":"What worked for me, in this case, is This video\nI downloaded Ganache from the following link\nInstalled it and just hit the Quick Start\nIt will launch the ganache as shared below in the screenshot. You can see the Network ID and RPC Server details.\n\nAs a Next step, delete the HTTP:\/\/localhost:8545 network and create a new network with Ganache RPC Server details and Network ID as shared below. I have just changed my port from default to 3000.\n\nHere you Go!\n\nHope it helps. Also, feel free to share your thoughts if you have other approaches as I am also in the learning phase :-)\nThanks.","207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":"import { Keypair } from \"@solana\/<web3>.js\";\nimport fs from \"fs\";\n\nfunction loadKeypairFromFile(filename: string): Keypair {\n  \n  const secret = JSON.parse(fs.readFileSync(filename).toString()) as number[];\n  const secretKey = Uint8Array.from(secret);\n  return Keypair.fromSecretKey(secretKey);\n}","224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":"I ran into this exact problem just now, however since I have nvm, my cheap work around is to used node v16 for now.","241":null,"242":null,"243":"You can change UInt8Array to String like \"kNykCXNxgePDjFbDWjPNvXQRa8U12Ywc19dFVaQ7tebUj3m7H4sF4KKdJwM7yxxb3rqxchdjezX9Szh8bLcQAjb\" by using bs58.encode() or PublicKey.toBase58();\nlet secretKey = keyPair.secretKey.toBase58();","244":null,"245":null,"246":"Following code worked to get the balance for SOL after Jon Cinque's answer (maybe helpful for others or future me):\nconst <web3> = require(\"@solana\/<web3>.js\");\nconst { Keypair, Transaction, SystemProgram, LAMPORTS_PER_SOL, sendAndConfirmTransaction, clusterApiUrl } = require(\"@solana\/<web3>.js\");\n\nlet secretKey = Uint8Array.from([233, 65, ... (rest of my secret)]);\n\nlet fromKeypair = Keypair.fromSecretKey(secretKey);\n\nlet connection = new <web3>.Connection(clusterApiUrl('devnet'));\n\n(async () => {\n\n    const balance = await connection.getBalance(\n        fromKeypair.publicKey\n    );\n    console.log(balance)\n})()\n\nOutput: 7912350560 which is correct, since I have 7.912350560 SOL in that account.\nBut for the SPL Token it didn't work yet...","247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":"This method works for me to get SOL Balance\n  const [userSOLBalance, setSOLBalance] = useState<number>()\n if (wallet.publicKey) {\n  const SOL = connection.getAccountInfo(wallet.publicKey)\n  SOL.then((res) => setSOLBalance(res.lamports \/ LAMPORTS_PER_SOL))\n}","273":null,"274":null,"275":"Based on Truffle Docs, There are 2 important things to note in <blockchain> area :\n\n<transactions>\nCalls\n\n<transactions> is a transaction can be as simple as sending Ether to another account, or as complicated as executing a contract function or adding a new contract to the network. It need cost ether to run (gas)\nCalls can be used to execute code on the network, though no data will be permanently changed. Calls are free to run, and their defining characteristic is that they read data.\nhope it answer your question","276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":"I solved it by doing: npm install @chainlink\/contracts --save\nand in the yaml file doing:","303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":"I needed the same with Ethers instead of <web3>, here i the code snippet for ethers.js:\nconst getTransferEvents = async () => { \n    const provider = new ethers.providers.<web3>Provider(window.ethereum)\n    const contract = new ethers.Contract(\"address\", \"abi\", provider);\n\n    const events = await contract.queryFilter('Transfer', 0);\n\n    console.log(events);\n};","334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":"Even after installing with the below command its possible you will run into the same issue.\nnpm install -g ganache-cli\n\nIn this case check if your path in environment variable is set correctly or is missing.\nEnvironment Variable -> System Variable -> Path\nIt should be something like this\n%UserProfile%\\AppData\\Roaming\\npm\n\nAlso once this is set, close your cmd or terminal and try running the Ganache-cli command in a fresh terminal instance.","356":null,"357":null,"358":null,"359":null,"360":null,"361":"This \"secret number\", or nonce, is absolutely random.\nYou can choose any nonce you like, with any digits.\nDepending on the difficulty of the correct hash requirements, you might need quintillions of attempts to finally guess the correct hash.\nThere is a mathematical proof that any nonce you try is not better than any other. Otherwise SHA-256 hash algorithm would be easy to break. So you just need enough CPU power to try as much numbers as possible.\nP.S. Of course, if you would try milliard numbers, each of them with milliard digits, then your algorithm would be too slow, I guess.\nSo if I would be a miner, I would start with 0 and then try any possible number in a natural sequence. The less digits the number has, the faster the algorithm should be.","362":null,"363":null,"364":"The fallback functions are invoked automatically by the Ethereum Virtual Machine (EVM) which is why they are marked as external. Since it cannot be called explicitly, gas cannot be sent explicitly to this function. Instead, the EVM provides a fixed stipend of 2,300 gas for this function. If the gas cost is more than 2300 an exception will be thrown. It is important that you should be testing fallback function's gas consumption before deploying your contract\ncontract Fallback {\n    fallback () external payable {\n    }\n}\n\n\nIt has no arguments and\nreturn data. It gets executed every time ether is received. It is required to be implemented within a contract if the contract is intended to receive ether; otherwise,\nan exception will be thrown and ether will be returned.\n\nUpdate\nAfter pragma solidity  ^0.8.12;, fallback can receive argument and have a return statement\n\nIf you call a function that does not exist in the contract, your contract will fall back into the fallback(). it will invoke fallback\n\nIf the contract is expected to receive\nether, then the fallback function has to be declared with the payable modifier.\n\nAnother use case is for proxy contracts which routes the incoming requests to the upgradeable target contract. the fallback function in proxy contract actually calls the target contract's functions.\nfunction _fallback() internal virtual {\n      _beforeFallback();\n       \/\/ calling the target function code\n      _delegate(_implementation());\n  }\n\n\n\nreceive()\nfallback function is called under multiple conditions and this makes writing code for each condition hard. That is why receive is added. receive is called only when contract receives ether so fallback should be executed only if a function signature is not\nimplemented within a contract.","365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":"Solidity events are pieces of data that are emitted and stored in the <blockchain>. When you emit an event it creates a log that front-end applications can use to trigger changes in the UI.\nIt's a cheap form of storage.\nYou can define an event like this:\nevent Message(address indexed sender, address indexed recipient, string message);\n\nand emit an event like this:\nemit Message(msg.sender, _recipient, \"Hello World!\");\n\nRead this article for more information and this one to learn how to get events in JavaScript using Ethers.js","385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":"I started with the testnet because it was more descriptive to me like my understanding was -> the testnet is almost the mainnet, and the devnet is like totally dynamic and buggy. But it appeared that the devnet is more stable and it has an official faucet which is soooo important.","428":null,"429":null,"430":"solana config set --url devnet\n  Config File: \/home\/.config\/solana\/cli\/config.yml\n  RPC URL: https:\/\/api.devnet.solana.com\n  WebSocket URL: wss:\/\/api.devnet.solana.com\/ (computed)\n  Keypair Path: \/home\/.config\/solana\/id.json\n  Commitment: confirmed\n\n\nsolana config get\n\nthis is how anchor will know where to deploy solana program to. we need to air drop\nsolana airdrop 2 --url devnet\nsolana balance --url devnet\n\n\n\n{\nIf you want to create a wallet specific to each project\nin andhor.toml file\n wallet = \".\/id.json\"\n\nthen in the project directory:\n solana-keygen new -o id.json  \n\nthis will generate this:\n pubkey: 9bFcXvyjBuELw522FTRSU1umTTGaSLLD5iujjpQK6wt6\n\nsince you are using this wallet airdro\n solana airdrop 2 9bFcXvyjBuELw522FTRSU1umTTGaSLLD5iujjpQK6wt6 --url devnet\n\n}\n\nopen anchor.toml file. update the file\n\/\/ [programs.localnet] change to devnet\n[programs.devnet]\n\n\/\/ cluster = \"localnet\" change to devnet\ncluster = \"devnet\"\n\n\nanchor build\n\n\nthis creates a new build with new programId. access this program id\n\nsolana address -k target\/deploy\/yourprojectname-keypair.json\n\nthis will give you the programId of deployed contract\n\nNow in lib.rs and anchor.toml update the declareId with this code.\n\nlib.rs\n declare_id!(\"paste the programId of deployed contract\"); \n\nanchor.toml\n  yourProjectName = \"paste the programId of deployed contract\"\n\n\nnow run anchor build again\nnow we are ready to deploy\n\nanchor deploy","431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":"Try this\nrinkeby: {\n      provider: function() {\n        return new HDWalletProvider(\n          `dfsfsd,artist,test,hour,test,tse,wish,police,trade,gfh,sfdf,ssfsd`, \/\/ array of private keys(use yours get from metamask or recover)\n          `https:\/\/rinkeby.infura.io\/v3\/${process.env.INFURA_API_KEY}` \/\/ Url to an Ethereum node\n        )\n      },\n      networkCheckTimeout: 10000,\n      gas: 5000000,\n      gasPrice: 25000000000,\n      network_id: 4\n    }","447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":"Move your project folder to C:\/\/ drive (or wherever pip install packages).\nIt's not a problem in Linux because there's no disk partition in Linux.","456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":"The bscscan api is not reliable. The problem is that the API is behind a cloudfare DDoS protection and a captcha is asked sometimes.  With <python> code, there is no way to bypass this captcha check, unfortunately.","474":null,"475":null,"476":null,"477":null,"478":null,"479":"The keyword I left out is \"bitwise\" (as Nathan mentioned).\nSo, if, for example,               sha3(valueA)=0x44=0b01000100, and\n                                   sha3(valueB)=0x34=0b00110100, then:\n(sha3(valueA)=0x44=0b01000100 and sha3(valueB))=0x70=0b01110000\n\nPS\nfun fact: XOR with all 1s is a \"bit flip\"","480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":"I came here to find a solution to allow the owner to withdraw any token which accidentally can be sent to the address of my smart contract. I believe it can be useful for others:\n \/**\n * @dev transfer the token from the address of this contract  \n * to address of the owner \n *\/\nfunction withdrawToken(address _tokenContract, uint256 _amount) external onlyOwner {\n    IERC20 tokenContract = IERC20(_tokenContract);\n\n    \/\/ needs to execute `approve()` on the token contract to allow itself the transfer\n    tokenContract.approve(address(this), _amount);\n\n    tokenContract.transferFrom(address(this), owner(), _amount);\n}","487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":"If you look closely you will see that the address where you top up to the exchange and the address where you transfer out when you withdraw are in most cases not the same. After you top up your digital currency to the exchange via the <blockchain>, the exchange will record the amount of your top up, at which point you can see your asset, but he is not the asset on the <blockchain>. You can interpret it as a record. You can use it to make <transactions> similar to BTC\/USDT. It will only be recorded on the <blockchain> when you top up or withdraw.","503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"(Assuming you don't have\/want line breaks in your string...)\n\nHow long is this string really?\n\nI suspect there is a limit to how long a line read from a file or from the commandline can be, and because the end of the line gets choped off the parser sees something like s1=\"some very long string.......... (without an ending \") and thus throws a parsing error?\n\nYou can split long lines up in multiple lines by escaping linebreaks in your source like this:\n\ns1=\"some very long string.....\\\n...\\\n....\"","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":"It seems like the new command according to starport version 0.19.5 is starport scaffold module wasm.","542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":"You need to declare the state variable as a string which will work in this case.\nIn React:\nstate = { playerEthervalue: ''};\nconst accounts = await <web3>.eth.getAccounts();\n\n\/\/ Send the ethers to transaction, initiate the transaction\nawait lottery.methods.getPlayersAddress().send({ from: accounts[0], \n           value: <web3>.utils.toWei(this.state.playerEthervalue, 'ether') });\n\n\nIn solidity(.sol):\nfunction getPlayersAddress() public payable {    \n require(msg.value >= 0.00000001 ether);\n players.push(msg.sender); \n}","575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":"use metamask wallet and choose kovan network,and go faucet http:\/\/faucet.parastate.io\/ to get test token","605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":"bsc: {\n  networkCheckTimeout: 999999,\n  provider: () => new HDWalletProvider(mnemonic, `https:\/\/data-seed-prebsc-1-s1.binance.org:8545`),\n  network_id: 97, \/\/ Ropsten's id\n  gas: 5500000, \/\/ Ropsten has a lower block limit than mainnet\n  confirmations: 10, \/\/ # of confs to wait between deployments. (default: 0)\n  timeoutBlocks: 200, \/\/ # of blocks before a deployment times out  (minimum\/default: 50)\n  skipDryRun: true \/\/ Skip dry run before migrations? (default: false for public nets )\n},\n\n\n\nadding network timeout should help","661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":"I'm not sure what do you exactly mean by a transaction. You can use DID for many use cases, signing a transaction could be just one of them (but it depends what is the transaction if a particular <blockchain> supports crypto algorithms used by specific DID).\nOverall, if your DID is written to a <blockchain> and is publicly available, a bank or other party should resolve the DID Document containing the current public key. That allows you to rotate your keys, which means creating a new key pair when your private key leaks.","668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":"\/\/ mapping is for fast lookup. the longer operation, the more gas\nmapping(uint => NftItem) private _idToNftItem;\n\nfunction buyNft(uint tokenId) public payable{\n    uint price=_idToNftItem[tokenId].price;\n    \/\/ this is set in erc721 contract\n    \/\/ Since contracts are inheriting, I want to make sure I use this method in ERC721\n    address owner=ERC721.ownerOf(tokenId);\n    require(msg.sender!=owner,\"You already own this nft\");\n    require(msg.value==price,\"Please submit the asking price\");\n    \/\/ since this is purchased, it is not for sale anymore \n    _idToNftItem[tokenId].isListed=false;\n    _listedItems.decrement();\n    \/\/ this is defined in ERC721\n    \/\/ this already sets owner _owners[tokenId] = msg.sender;\n    _transfer(owner,msg.sender,tokenId);\n    payable(owner).transfer(msg.value);\n  }\n\nthis is Nft struct\nstruct NftItem{\n    uint tokenId;\n    uint price;\n    \/\/ creator and owner are not same. creator someone who minted. creator does not change\n    address creator;\n    bool isListed;\n  }","679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":"Checkout Write permission Section from Install Support Docs\nhttps:\/\/docs.starport.network\/guide\/install.html\ncurl https:\/\/get.starport.network\/starport | bash -> For write access\nsudo mv starport \/usr\/local\/bin\/ -> To move it into sub-root folders","696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":"Here's an example of how you would sign your Metamask transaction:\nexport const mintNFT = async(url, name, description) => {\n    \n    \/\/error handling\n    if (url.trim() == \"\" || (name.trim() == \"\" || description.trim() == \"\")) { \n        return {\n            success: false,\n            status: \"\u00e2\u009d\u0097Please make sure all fields are completed before minting.\",\n        }\n    }\n  \n    \/\/make metadata\n    const metadata = new Object();\n    metadata.name = name;\n    metadata.image = url;\n    metadata.description = description;\n\n    \/\/pinata pin request\n    const pinataResponse = await pinJSONToIPFS(metadata);\n    if (!pinataResponse.success) {\n        return {\n            success: false,\n            status: \"\u00f0\u009f\u0098\u00a2 Something went wrong while uploading your tokenURI.\",\n        }\n    } \n    const tokenURI = pinataResponse.pinataUrl;  \n\n    \/\/load smart contract\n    window.contract = await new <web3>.eth.Contract(contractABI, contractAddress);\/\/loadContract();\n\n    \/\/set up your Ethereum transaction\n    const transactionParameters = {\n        to: contractAddress, \/\/ Required except during contract publications.\n        from: window.ethereum.selectedAddress, \/\/ must match user's active address.\n        'data': window.contract.methods.mintNFT(window.ethereum.selectedAddress, tokenURI).encodeABI() \/\/make call to NFT smart contract \n    };\n  \n    \/\/sign transaction via Metamask\n    try {\n        const txHash = await window.ethereum\n            .request({\n                method: 'eth_sendTransaction',\n                params: [transactionParameters],\n            });\n        return {\n            success: true,\n            status: \"\u00e2\u009c\u0085 Check out your transaction on Etherscan: https:\/\/ropsten.etherscan.io\/tx\/\" + txHash\n        }\n    } catch (error) {\n        return {\n            success: false,\n            status: \"\u00f0\u009f\u0098\u00a5 Something went wrong: \" + error.message\n        }\n    }\n}\n\nIn this example, we're signing a transaction to mint an NFT. You can check out more details here: https:\/\/docs.alchemyapi.io\/alchemy\/tutorials\/nft-minter#step-8-implement-the-mintnft-function","733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":"from this: https:\/\/github.com\/MetaMask\/metamask-extension\/issues\/8990\n\nconst accounts = await window.ethereum.request({\n    method: \"wallet_requestPermissions\",\n    params: [{\n        eth_accounts: {}\n    }]\n}).then(() => ethereum.request({\n    method: 'eth_requestAccounts'\n}))\n\nconst account = accounts[0]\n\n\nCredit to nikita: https:\/\/github.com\/nikitamarcius","743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":"Step 1 - npm install ton web and crypto lib\nconst TronWeb = require('tronweb');\nvar crypto = require('crypto');\n\nStep 2 - Generate random private key and use the private key to create tronweb account\nvar privateKey = crypto.randomBytes(32).toString('hex');\nconsole.log(\"Private Key\", privateKey);\n\nconst HttpProvider = TronWeb.providers.HttpProvider;\nconst fullNode = new HttpProvider(\"https:\/\/api.trongrid.io\");\nconst solidityNode = new HttpProvider(\"https:\/\/api.trongrid.io\");\nconst eventServer = new HttpProvider(\"https:\/\/api.trongrid.io\");\nconst tronWeb = new TronWeb(fullNode,solidityNode,eventServer,privateKey);\n\nconst wallet = await tronWeb.createAccount();\nconsole.log(wallet);\n\nStep 3 - result\n{\nprivateKey: 'D526E0AB73B3552F0B0FB85838DB364D90C1CAC4BC76294373FABA83C04914DD',\npublicKey: '04CA86DEFC9C8828DB52DBF6DD44872DE863AC53126B9D49260AB677CB0B9A18BC0276A58DAC04928AEDDAC85B8CFDFA8A8536832735BD8C5E0AE84BE2E505D83F',\n  address: {\n    base58: 'TVFFvcUB6CWLFh45n28Ve1XRmu1NYSKS34',\n    hex: '41D3737C4D6B5105692B01409738D29CD796876602'\n  }\n}\n\nGenerate a random mnemonic (total number 12) and using TRON path \"m\/44'\/195'\" by default, return the 0th account address and private key\ntronWeb.createRandom()\n{\n  \"mnemonic\": {\n    \"phrase\": \"chimney cloth deny claim play rude love dose apart shove rack stone\",\n    \"path\": \"m\/44'\/195'\/0'\/0\/0\",\n    \"locale\": \"en\"\n  },\n  \"privateKey\": \"0x79092289f3bfde55f079202e3642b2c4ba071d5f0b85d65b1919c8724e94848c\",\n  \"publicKey\": \"0x0421c47d627bc2d856760dda17b42b726b4bc8f5def76aed0cbcd71566d0ffedfc3904c9c854854a5019b8373d2aed0c6b96ff5f3be07722403088742b0949a6c9\",\n  \"address\": \"TEFAyPnainfiAJBuhExfMLJeHHxD2DZJmF\",\n}","770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":"All configurations seems good, however you have to upgrade explorer version to be compatible with <hyperledger> fabric version.\nSo please use  v1.1.4 instead of v1.1.1\nAlso make sure that you have mounted crypto config correctly, try to access this path inside the container  \/tmp\/crypto\/peerOrganizations\/acme.com\/tlsca\/tlsca.acme.com-cert.pem\nTry to change tlsCACerts path to use peer tls ca.crt\n\/tmp\/crypto\/peerOrganizations\/acme.com\/peers\/peer1.acme.com\/tls\/ca.crt\nYou have mentioned that the same configurations works with <hyperledger> fabric v2, if you have tried it locally not on the same server so I please disable the firewall on the server and give it a try\nTo check if you can reach domain and port please try this\ncat > \/dev\/tcp\/peer1.acme.com\/7051\nCheck this\nhttps:\/\/support.bluemedora.com\/s\/article\/Using-Bash-to-test-if-a-TCP-port-on-a-remote-system-is-open","802":null,"803":null,"804":null,"805":null,"806":"Can my backend call a smart contract function to be executed on a certain date? If it can, how?\n\nUsually these kind of calls cannot be guaranteed. It is better to create a function that anyone can call after a certain date. Even if your backend fails, others can pick up the work.","807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":"I am not sure if my response will be the best, but this is an option do find it.\nI usually search in the explorer.rsk.co\n\nFirst you can check the block number which your transaction was mined\nAfter you can view the last block mined.\nThe difference between the block numbers is the number of confirmations\n\nI hope it is useful to you :)","828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":"Might be the way you're defining your private key.\n\nInstead of a mnemonic, you can alternatively provide a\nprivate key or array of private keys as the first parameter. When\nproviding an array, address_index and num_addresses are fully\nsupported.\n\nvar HDWalletProvider = require(\"truffle-hdwallet-provider\");\n\/\/load single private key as string\nvar provider = new HDWalletProvider(\"3f841bf589fdf83a521e55d51afddc34fa65351161eead24f064855fc29c9580\", \"http:\/\/localhost:8545\");\n\n\/\/ Or, pass an array of private keys, and optionally use a certain subset of addresses\nvar privateKeys = [\n  \"3f841bf589fdf83a521e55d51afddc34fa65351161eead24f064855fc29c9580\",\n  \"9549f39decea7b7504e15572b2c6a72766df0281cea22bd1a3bc87166b1ca290\",\n];\nvar provider = new HDWalletProvider(privateKeys, \"http:\/\/localhost:8545\", 0, 2); \/\/start at address_index 0 and load both addresses","862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":"Well, the easiest way to get the keys for your mapping variable, you can use the tool SmartMuv. This tool provides the list of mapping keys with their values and you can use it anyway.","890":null},"# of Vote for A3":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":0.0,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":0.0,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":0.0,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":0.0,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":0.0,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":10.0,"522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":0.0,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"User for A3":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"Ashish kulkarni","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"A3_answered_time":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"Dec 31, 2015 at 9:18","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"Comment or A3":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":"Add a comment\n                \u00c2\u00a0|","23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":"Add a comment\n                \u00c2\u00a0|","176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":"Add a comment\n                \u00c2\u00a0|","207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":"Add a comment\n                \u00c2\u00a0|","241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":"Your answer could be improved with additional supporting information. Please edit to add further details, such as citations or documentation, so that others can confirm that your answer is correct. You can find more information on how to write good answers in the help center.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Community\nBot                \n                Sep 15, 2022 at 13:21\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"I have the same problem but this doesn't solve the issue. Putting additional 2 slashes makes first of them escape for the second one. And the last slash still causes problem.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0I.P.\n                \n                Mar 24, 2021 at 18:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @I.P. that appears to have been a typo in the post; it should be fixed now. However, see also Windows path in <python>.\n                \n                \n\u00e2\u0080\u0093\u00c2\u00a0Karl Knechtel\n                \n                Aug 7, 2022 at 4:18\n            \n        \n    \n\n            \n\t    \n\n        \n                    Add a comment\n                \u00c2\u00a0|","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":"Add a comment\n                \u00c2\u00a0|","661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"Answer4":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":"https:\/\/github.com\/project-serum\/anchor\/issues\/1157#issuecomment-1065828414\ntry solana cli 1.8.12 as 1.9.* seems to have issues deploying on devnet","23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":"The error is most simple that you probably think, the default chain id for test networks in metamask is not the same as the hardhat chain id, you should go to metamask, then config, networks, localhost and change chain id to 31337","207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"You can try this:\n\ns = r'long\\annoying\\path'","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"# Votes for Answer4":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":0.0,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":0.0,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":8.0,"522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"Userfor Answer4":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"ZakS","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"Last edited time for Answer4":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"Nov 3, 2019 at 17:28","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"Comment":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":"Add a comment\n                \u00c2\u00a0|","23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":"Add a comment\n                \u00c2\u00a0|","207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"Add a comment\n                \u00c2\u00a0|","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"Answer5":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":"I had similar error in chainlink contract github example. I changed this line  in Execute Struct\npub system_program:Program<'info,System>,\n\nto this:\n#[account(address=system_program::ID)]\n\/\/\/ CHECK:\npub system_program:AccountInfo<'info>,\n\nI had to import system_program\nuse anchor_lang::solana_program::system_program;","23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"I too had this problem, though there were answers here I want to an important point to this\nafter \n\/ there should not be empty spaces.Be Aware of it","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"# of Vote for Answer5":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":0.0,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":5.0,"522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"User for answer5":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":"Yilmaz","23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"madhu131313","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null},"Answered_time_A5":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":"May 1, 2022 at 3:57","23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null,"192":null,"193":null,"194":null,"195":null,"196":null,"197":null,"198":null,"199":null,"200":null,"201":null,"202":null,"203":null,"204":null,"205":null,"206":null,"207":null,"208":null,"209":null,"210":null,"211":null,"212":null,"213":null,"214":null,"215":null,"216":null,"217":null,"218":null,"219":null,"220":null,"221":null,"222":null,"223":null,"224":null,"225":null,"226":null,"227":null,"228":null,"229":null,"230":null,"231":null,"232":null,"233":null,"234":null,"235":null,"236":null,"237":null,"238":null,"239":null,"240":null,"241":null,"242":null,"243":null,"244":null,"245":null,"246":null,"247":null,"248":null,"249":null,"250":null,"251":null,"252":null,"253":null,"254":null,"255":null,"256":null,"257":null,"258":null,"259":null,"260":null,"261":null,"262":null,"263":null,"264":null,"265":null,"266":null,"267":null,"268":null,"269":null,"270":null,"271":null,"272":null,"273":null,"274":null,"275":null,"276":null,"277":null,"278":null,"279":null,"280":null,"281":null,"282":null,"283":null,"284":null,"285":null,"286":null,"287":null,"288":null,"289":null,"290":null,"291":null,"292":null,"293":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null,"300":null,"301":null,"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null,"316":null,"317":null,"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null,"327":null,"328":null,"329":null,"330":null,"331":null,"332":null,"333":null,"334":null,"335":null,"336":null,"337":null,"338":null,"339":null,"340":null,"341":null,"342":null,"343":null,"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"354":null,"355":null,"356":null,"357":null,"358":null,"359":null,"360":null,"361":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null,"369":null,"370":null,"371":null,"372":null,"373":null,"374":null,"375":null,"376":null,"377":null,"378":null,"379":null,"380":null,"381":null,"382":null,"383":null,"384":null,"385":null,"386":null,"387":null,"388":null,"389":null,"390":null,"391":null,"392":null,"393":null,"394":null,"395":null,"396":null,"397":null,"398":null,"399":null,"400":null,"401":null,"402":null,"403":null,"404":null,"405":null,"406":null,"407":null,"408":null,"409":null,"410":null,"411":null,"412":null,"413":null,"414":null,"415":null,"416":null,"417":null,"418":null,"419":null,"420":null,"421":null,"422":null,"423":null,"424":null,"425":null,"426":null,"427":null,"428":null,"429":null,"430":null,"431":null,"432":null,"433":null,"434":null,"435":null,"436":null,"437":null,"438":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null,"455":null,"456":null,"457":null,"458":null,"459":null,"460":null,"461":null,"462":null,"463":null,"464":null,"465":null,"466":null,"467":null,"468":null,"469":null,"470":null,"471":null,"472":null,"473":null,"474":null,"475":null,"476":null,"477":null,"478":null,"479":null,"480":null,"481":null,"482":null,"483":null,"484":null,"485":null,"486":null,"487":null,"488":null,"489":null,"490":null,"491":null,"492":null,"493":null,"494":null,"495":null,"496":null,"497":null,"498":null,"499":null,"500":null,"501":null,"502":null,"503":null,"504":null,"505":null,"506":null,"507":null,"508":null,"509":null,"510":null,"511":null,"512":null,"513":null,"514":null,"515":null,"516":null,"517":null,"518":null,"519":null,"520":null,"521":"Aug 17, 2013 at 6:56","522":null,"523":null,"524":null,"525":null,"526":null,"527":null,"528":null,"529":null,"530":null,"531":null,"532":null,"533":null,"534":null,"535":null,"536":null,"537":null,"538":null,"539":null,"540":null,"541":null,"542":null,"543":null,"544":null,"545":null,"546":null,"547":null,"548":null,"549":null,"550":null,"551":null,"552":null,"553":null,"554":null,"555":null,"556":null,"557":null,"558":null,"559":null,"560":null,"561":null,"562":null,"563":null,"564":null,"565":null,"566":null,"567":null,"568":null,"569":null,"570":null,"571":null,"572":null,"573":null,"574":null,"575":null,"576":null,"577":null,"578":null,"579":null,"580":null,"581":null,"582":null,"583":null,"584":null,"585":null,"586":null,"587":null,"588":null,"589":null,"590":null,"591":null,"592":null,"593":null,"594":null,"595":null,"596":null,"597":null,"598":null,"599":null,"600":null,"601":null,"602":null,"603":null,"604":null,"605":null,"606":null,"607":null,"608":null,"609":null,"610":null,"611":null,"612":null,"613":null,"614":null,"615":null,"616":null,"617":null,"618":null,"619":null,"620":null,"621":null,"622":null,"623":null,"624":null,"625":null,"626":null,"627":null,"628":null,"629":null,"630":null,"631":null,"632":null,"633":null,"634":null,"635":null,"636":null,"637":null,"638":null,"639":null,"640":null,"641":null,"642":null,"643":null,"644":null,"645":null,"646":null,"647":null,"648":null,"649":null,"650":null,"651":null,"652":null,"653":null,"654":null,"655":null,"656":null,"657":null,"658":null,"659":null,"660":null,"661":null,"662":null,"663":null,"664":null,"665":null,"666":null,"667":null,"668":null,"669":null,"670":null,"671":null,"672":null,"673":null,"674":null,"675":null,"676":null,"677":null,"678":null,"679":null,"680":null,"681":null,"682":null,"683":null,"684":null,"685":null,"686":null,"687":null,"688":null,"689":null,"690":null,"691":null,"692":null,"693":null,"694":null,"695":null,"696":null,"697":null,"698":null,"699":null,"700":null,"701":null,"702":null,"703":null,"704":null,"705":null,"706":null,"707":null,"708":null,"709":null,"710":null,"711":null,"712":null,"713":null,"714":null,"715":null,"716":null,"717":null,"718":null,"719":null,"720":null,"721":null,"722":null,"723":null,"724":null,"725":null,"726":null,"727":null,"728":null,"729":null,"730":null,"731":null,"732":null,"733":null,"734":null,"735":null,"736":null,"737":null,"738":null,"739":null,"740":null,"741":null,"742":null,"743":null,"744":null,"745":null,"746":null,"747":null,"748":null,"749":null,"750":null,"751":null,"752":null,"753":null,"754":null,"755":null,"756":null,"757":null,"758":null,"759":null,"760":null,"761":null,"762":null,"763":null,"764":null,"765":null,"766":null,"767":null,"768":null,"769":null,"770":null,"771":null,"772":null,"773":null,"774":null,"775":null,"776":null,"777":null,"778":null,"779":null,"780":null,"781":null,"782":null,"783":null,"784":null,"785":null,"786":null,"787":null,"788":null,"789":null,"790":null,"791":null,"792":null,"793":null,"794":null,"795":null,"796":null,"797":null,"798":null,"799":null,"800":null,"801":null,"802":null,"803":null,"804":null,"805":null,"806":null,"807":null,"808":null,"809":null,"810":null,"811":null,"812":null,"813":null,"814":null,"815":null,"816":null,"817":null,"818":null,"819":null,"820":null,"821":null,"822":null,"823":null,"824":null,"825":null,"826":null,"827":null,"828":null,"829":null,"830":null,"831":null,"832":null,"833":null,"834":null,"835":null,"836":null,"837":null,"838":null,"839":null,"840":null,"841":null,"842":null,"843":null,"844":null,"845":null,"846":null,"847":null,"848":null,"849":null,"850":null,"851":null,"852":null,"853":null,"854":null,"855":null,"856":null,"857":null,"858":null,"859":null,"860":null,"861":null,"862":null,"863":null,"864":null,"865":null,"866":null,"867":null,"868":null,"869":null,"870":null,"871":null,"872":null,"873":null,"874":null,"875":null,"876":null,"877":null,"878":null,"879":null,"880":null,"881":null,"882":null,"883":null,"884":null,"885":null,"886":null,"887":null,"888":null,"889":null,"890":null}}