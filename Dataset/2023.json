{"Title":{"0":"Create a <crypto> payment forwarder","1":"Wallet drained of 110 UNI \"Hacked\" [closed]","2":"Uniswap getAmountsIn Gives WILD Results","3":"ValueError: Unknown URI - must be a path to an IPC socket, a websocket beginning with 'ws' or a URL beginning with 'http'","4":"Error HH801: Plugin @nomicfoundation\/<hardhat>-toolbox requires the following dependencies to be installed:","5":"QR code format standard for blockchain transactions","6":"Transaction has been reverted by the <evm> ( <pancakeswap> manual trade bot in js)","7":"serviceHub.startFlow from a cordaService class versus subFlow calling from Corda flow","8":"TypeError: Cannot read properties of un<defi>ned (reading 'JsonRpcProvider');","9":"File was processed with loaders: * .\/node_modules\/<babel-loader>\/lib\/index.js . You may need an additional loader to handle the result of these loaders","10":"Insufficient balance when transferring <token> from another address, after migrating the data from old contract to new contract","11":"I'm getting this error while using <truffle> <react> box with command","12":"<hardhat> throws 'ProviderError: HttpProviderError' when I run my deploy script","13":"Is it possible to sign multiple messages using MetaMask all at once?","14":"I'm having some issues querying 24h volume data from <subgraph>. Is anyone able to help out? [closed]","15":null,"16":"Error: Error occurred while verifying paramssubVerifierParams need to equal threshold 1 while using the web3auth\/node-sdk","17":"Type Error Cannot read properties of un<defi>ned (reading 'Web3Provider') at fetchingData","18":"How to write this encoding algorithm in <solidity>","19":"ingress_expiry not within expected range error in candid ui. <motoko> language, console prompted a breaking change on running dfx deploy","20":"Switch metamask networks","21":"Getting an error \"TypeError: Cannot read properties of un<defi>ned (reading 'AlchemyProvider')\" in <ether>JS","22":"Is there a way to create a blockchain that will act as a <database> to my web app?","23":"Sending USDTC to a new Tron address in testnet --\"Unrecorded <token>\"","24":"Why not use a stablecoin as the base currency of a blockchain? [closed]","25":"Issue with <hyperledger> fabric go build command","26":"How can I get chain id explorer?","27":"Nextjs 13.0.2 and <ether>s why is my Provider un<defi>ned?","28":"Do nodes that are not validators verify blocks in proof of stake?","29":"logout metamask user onClick a button how can I implement it?","30":"Should I write a function on chain in smart contract or off chain?","31":"<solana> <nft> Collection update creators and royalties address","32":"Blockchain Integration in <android> [closed]","33":"Error: Invalid email\/password combination with Node.js and <mongodb>","34":"<solidity>: Call Deposit function with value","35":"getBalance and getBlock not working web3 with next.js","36":"Can ETH miners check all the data which is stored in <ether>eum?","37":"TypeError: Member \"length\" not found or not visible after argument-dependent lookup in mapping(address => mapping(uint256 => uint256))","38":"How to create a bnb1... address for BNB-beacon-chain from mnemonic in <python>?","39":"[Ganache\/ <truffle>]revert TX Limit Exceeded -- Reason given: TX Limit Exceeded","40":"Where to practice <solidity> after learning its basics? [closed]","41":"ERC721: invalid <token> ID when trying to connect two smart contracts","42":"The transaction has been reverted to the initial state. The called function should be payable if you send value","43":"Getting <bitcoin> from block to wallet [closed]","44":"Why can't I open <remix> IDE in my browser?","45":"When calling a smart contract function, do the params record on blockchain?","46":"How can I get transactions from a wallet using alchemy websockets","47":"Can I create private eth network that no external one can join it?","48":"kiwi <token> pool batchpayment address to <defi>ned wallet","49":"How to Send Bep-20 <token> to Multiple addresses without using for loop in web3 or <ether>s","50":"How is it possible to make random\/pseudorandom numbers in the <move> language?","51":"\"Not Enough Fund\" when doing buying <token> transaction in <solidity> with <remix> IDE","52":"Unable to deploy the vrfcoordinatorv2mock on the local development environment","53":"Does `web3.eth.getLogs` find reverted transactions?","54":"Unable to transact Operator.setAuthorizedSenders on <chainlink> - Goerli","55":"How to re<move> a user from <hyperledger> Fabric Network","56":"Not able to bridge deployed ERC20 <token> through POS Bridge using <matic>js, getting this error \"execution reverted: ERC20: approve to the zero address\"","57":"Uniswap v2 swap() function. What are balance0 & balance1?","58":"Sync Erigon to Geth","59":"Approximating cost of using <chainlink> for custom <api>","60":"Why is <chainlink> oracle function call failing?","61":"Guidance in Application of Bloackchain Based DDoS Mitigation Stragtegies","62":"How to automate a <chainlink> Job to call a smart-contract function that requires the caller to be a given admin address?","63":"Faucet contract only permits owner to perform transactions","64":"signature verification failed; please verify account number and chain-id: unauthorized","65":"How to get <ether> for Goerli Testnet online faucets aren't working?","66":"web3<py> <ether>eum<testerprovider> - Basic interactions with a smart contract fail","67":"<solana> Anchor Lang: anchor init creates <project> with TypeError: Cannot read properties of un<defi>ned (reading 'methods')","68":"Not able to correctly send a transaction - BSC Testnet & Web3","69":"web3<py> <ether>eum<testerprovider> - Basic transaction fails","70":"Error while creating DID using Didkit-wasm library","71":"I've tried <npm> install --legacy-peer-deps","72":"Why Uniswap V2's function getPair() is returning a null address","73":"Chialisp environment set up","74":"ReferenceError: Sonr01 is not <defi>ned","75":"web3.<py> function get_block tranactions is not in the current block","76":"What is different nami wallet signing and payment.skey signing?","77":"How to get the total number of cardano <token> listed on a marketplace by policyId and script address of the marketplace?","78":"Is this a correct way to calculate price for <token>s with different decimals?","79":"Why does transact and wait behave differently when within a function is behaving different?","80":"N<ether>eum sending <ether> fail","81":"How can i get a list of latest <ether>eum transactions?","82":"How to trade on Opensea with smart contract <solidity>","83":"Is there a way to get the value of a <crypto> in another one with uniswap","84":"Cannot make connection to metamask","85":"Multicall taking 300 seconds to return result","86":"Private <ether>eum blockchain not working for static ip","87":"How i make my smart-contract interact with my <token>?","88":"Private <ether>eum blockchain deployment on <kubernetes>","89":"Not able to create a network using @aws-sdk\/client-managedblockchain","90":"I am trying to use the <python> blocknative SDK but I keep receiving a Handshake Error and timing out","91":"I'm trying to run a js script on the blockchain using <hardhat>. After running it in the command line it throws an error","92":"how to send contract parameters when send <nft> to marketplace address at cardano?","93":"Trying to get <token> info from Smart Contract address - bitQuery <api>s","94":"How is the block size of <bitcoin> 1MB whereas the algorithm it uses (SHA-256) has a block size of only 512 bits?","95":"Failed to deploy <hyperledger-fabric>","96":"TypeError: contract.methods.balanceOf is not a function","97":"Any blockchain bridge with <api> for BTC to WBTC conversion?","98":"How to link all transactions related to one policy number in blockchain","99":"opensea <api> v2 giving \"invalid signature\" when try to list <nft> on <polygon> network","100":"Why is constant node participation necessary in blockchains?","101":"Deploying to fuji network with <hardhat> creates HttpProviderError","102":"how to implement the ERC20 <token> transferFrom method in <solidity> smartcontract","103":"Error HH411: The library @<hardhat>\/console.so, imported from contracts\/<nft>Marketplace.sol, is not installed. Try installing it using <npm>","104":"Blockchain outbound oracle code sample in <solidity>","105":"What does 'need genesis.json file as the only argument' mean?","106":"\"Parsing error: Unexpected <token>, expected \\\",\\\" (20:2)\", ')' expected(1005)","107":"<solidity> getting different selector","108":"<chainlink> async bridge task returns HTTP Error 422","109":"Advantage\/Disadvantage between <chainlink> VRF and an off-chain random number transaction performed by your server?","110":"Converting a TRON address to Base58 doesn't work","111":"ECDSA : MalformedPointError: Length of string does not match lengths of any of the enabled (raw uncompressed hybrid compressed) encodings of the curve","112":"useContractWrite function not working in useEffect hook when dependency Array changes","113":"How to identify wh<ether> an TX is a simple incoming \"SOL\/<token> transfer\" one?","114":"How to stop a <hardhat> node running on <localhost>?","115":"How Threshold Signatures have the same Address \/ Public Key","116":"How to generate the genesis key pair for Proof of Stake?","117":"Tor<py> Stream #4: closed already; Connection broken: IncompleteRead(634 bytes read, 3974 more expected)","118":"Deployment issue using sepoila test network","119":"GET .json file 404 not found when loading a smart contract","120":"cargo build-bpf command not working for <solana>","121":"Smart contract works as intended when deployed in <remix> VM but not in Goerli Testnet","122":"Logged events not showing up in Ganache or in Transaction log","123":"initialize Issue about Corda's flow test","124":"theGraph: create <subgraph> loading but not working","125":"My function call is returning expensive gas cost on metamask","126":"Not seeing json file under contracts after compiling a contract on Brownie","127":"Plugin @nomicfoundation\/<hardhat>-toolbox requires the following dependencies to be installed","128":"How to make a Factory Contract which deploys a UUPS Proxy?","129":"Is there any possible ways to auto<matic>ally fetch the DEX interacted users wallet addresses in the <ether>scan.io site?","130":"How Web3j is used to get the SC wrappers and operate with them using Java (Eclipse ide)","131":"How to use cosmos <token>view <api> with postman in 2023\u00a3\u00bf","132":"Near smart-contract, How to change beneficiary in \"Donation\" from documentation?","133":"How do I limit the max supply of an Elrond <nft> collection?","134":"<python> : {'detail': [{'loc': ['body'], 'msg': 'value is not a valid dict', 'type': 'type_error.dict'}]}","135":"Does flashbots signer wallet (a compromised wallet) with web.<py> requires wallet to have a eth in it","136":"\"Failed during: git fetch --force origin refs\/heads\/master:refs\/remotes\/origin\/master \"","137":"<pancakeswap> Response is encoded","138":"Get CALL_EXCEPTION details","139":"Flamenco rendering farm","140":"Pipx can not build packages when trying to install eth-brownie","141":"Meta transactions for third party contract","142":"<crypto>currency wallet mnemonic seed phrase","143":"How to verify TransparentUpgradeableProxy which is deployed using create2?","144":"Giving maximum allowance of a <token> to a contract. What are best practices?","145":"Is there a chance that the tron wallet that I created is already used by someone? [closed]","146":"How to filter after group by in this Dune Analytics example?","147":"INVALID_SIGNATURE on hedera <nft> creation [closed]","148":"Does BNB Beacon Chain (Government chain) support smart contracts?","149":"For\/If Loop has no errors but does not push the value to the array","150":"Assertion failed error in minting using bn.js","151":"Error with Blockchain Test Difficulty Adjustment","152":"<solana> Web3 | Transaction success and returns no signature in some cases","153":"ParserError: Expected '{' but got 'constant' in <remix> IDE","154":"Enrollment certificate of user does not have the attribute values assigned to it when registering it using <hyperledger-fabric>-sdk-java","155":"How to transfer decimal <matic>s?","156":"<solana> spl-<token> transfer fee \"Error: Program(IncorrectProgramId)\"","157":"Cannot install blockchain_parser getting 'legacy-install-failure'","158":"Why do we need deployments.fixture?","159":"How to detect contract creation timestamp in <ether>eum blockchain nodes?","160":"How to decode data from uniswap transaction in <python>","161":"Does a Corda node communication with Notary is same as in case of another peer node?","162":"Flutter: how to send transaction to metamask using flutter_web3 package","163":"Tron trc20 address generation in Dart language","164":"Cannot read properties of un<defi>ned (reading '_hex') Next js buy<nft>","165":"Encountering the error \"Error: chaincode argument error: invalid character ']' after object key\"","166":"what is alt mempool in EIP-4337 (Account Abstraction)","167":"Creating a wallet on <ether> creates it on all EVN supported networks?"},"Title_link":{"0":"https:\/\/stackoverflow.com\/questions\/75404859\/create-a-<crypto>-payment-forwarder","1":"https:\/\/stackoverflow.com\/questions\/75403950\/wallet-drained-of-110-uni-hacked","2":"https:\/\/stackoverflow.com\/questions\/75401594\/uniswap-getamountsin-gives-wild-results","3":"https:\/\/stackoverflow.com\/questions\/75397968\/valueerror-unknown-uri-must-be-a-path-to-an-ipc-socket-a-websocket-beginning","4":"https:\/\/stackoverflow.com\/questions\/75395981\/error-hh801-plugin-nomicfoundation-<hardhat>-toolbox-requires-the-following-depe","5":"https:\/\/stackoverflow.com\/questions\/75390253\/qr-code-format-standard-for-blockchain-transactions","6":"https:\/\/stackoverflow.com\/questions\/75388885\/transaction-has-been-reverted-by-the-<evm>-<pancakeswap>-manual-trade-bot-in-js","7":"https:\/\/stackoverflow.com\/questions\/75385788\/servicehub-startflow-from-a-cordaservice-class-versus-subflow-calling-from-corda","8":"https:\/\/stackoverflow.com\/questions\/75385248\/typeerror-cannot-read-properties-of-un<defi>ned-reading-jsonrpcprovider","9":"https:\/\/stackoverflow.com\/questions\/75383347\/file-was-processed-with-loaders-node-modules-<babel-loader>-lib-index-js-yo","10":"https:\/\/stackoverflow.com\/questions\/75384463\/insufficient-balance-when-transferring-<token>-from-another-address-after-migrati","11":"https:\/\/stackoverflow.com\/questions\/75382922\/im-getting-this-error-while-using-<truffle>-<react>-box-with-command","12":"https:\/\/stackoverflow.com\/questions\/75382026\/<hardhat>-throws-providererror-httpprovidererror-when-i-run-my-deploy-script","13":"https:\/\/stackoverflow.com\/questions\/75371115\/is-it-possible-to-sign-multiple-messages-using-metamask-all-at-once","14":"https:\/\/stackoverflow.com\/questions\/75370707\/im-having-some-issues-querying-24h-volume-data-from-<subgraph>-is-anyone-able-to","15":null,"16":"https:\/\/stackoverflow.com\/questions\/75370012\/error-error-occurred-while-verifying-paramssubverifierparams-need-to-equal-thre","17":"https:\/\/stackoverflow.com\/questions\/75369804\/type-error-cannot-read-properties-of-un<defi>ned-reading-web3provider-at-fetch","18":"https:\/\/stackoverflow.com\/questions\/75368440\/how-to-write-this-encoding-algorithm-in-<solidity>","19":"https:\/\/stackoverflow.com\/questions\/75365813\/ingress-expiry-not-within-expected-range-error-in-candid-ui-<motoko>-language-co","20":"https:\/\/stackoverflow.com\/questions\/75364350\/switch-metamask-networks","21":"https:\/\/stackoverflow.com\/questions\/75363351\/getting-an-error-typeerror-cannot-read-properties-of-un<defi>ned-reading-alche","22":"https:\/\/stackoverflow.com\/questions\/75363321\/is-there-a-way-to-create-a-blockchain-that-will-act-as-a-<database>-to-my-web-app","23":"https:\/\/stackoverflow.com\/questions\/75361453\/sending-usdtc-to-a-new-tron-address-in-testnet-unrecorded-<token>","24":"https:\/\/stackoverflow.com\/questions\/75358600\/why-not-use-a-stablecoin-as-the-base-currency-of-a-blockchain","25":"https:\/\/stackoverflow.com\/questions\/75353252\/issue-with-<hyperledger-fabric>-go-build-command","26":"https:\/\/stackoverflow.com\/questions\/75353010\/how-can-i-get-chain-id-explorer","27":"https:\/\/stackoverflow.com\/questions\/75351780\/nextjs-13-0-2-and-<ether>s-why-is-my-provider-un<defi>ned","28":"https:\/\/stackoverflow.com\/questions\/75351182\/do-nodes-that-are-not-validators-verify-blocks-in-proof-of-stake","29":"https:\/\/stackoverflow.com\/questions\/75347334\/logout-metamask-user-onclick-a-button-how-can-i-implement-it","30":"https:\/\/stackoverflow.com\/questions\/75346097\/should-i-write-a-function-on-chain-in-smart-contract-or-off-chain","31":"https:\/\/stackoverflow.com\/questions\/75343535\/<solana>-<nft>-collection-update-creators-and-royalties-address","32":"https:\/\/stackoverflow.com\/questions\/75342903\/blockchain-integration-in-<android>","33":"https:\/\/stackoverflow.com\/questions\/75342844\/error-invalid-email-password-combination-with-node-js-and-<mongodb>","34":"https:\/\/stackoverflow.com\/questions\/75342742\/<solidity>-call-deposit-function-with-value","35":"https:\/\/stackoverflow.com\/questions\/75341434\/getbalance-and-getblock-not-working-web3-with-next-js","36":"https:\/\/stackoverflow.com\/questions\/75340159\/can-eth-miners-check-all-the-data-which-is-stored-in-<ether>eum","37":"https:\/\/stackoverflow.com\/questions\/75331155\/typeerror-member-length-not-found-or-not-visible-after-argument-dependent-loo","38":"https:\/\/stackoverflow.com\/questions\/75327623\/how-to-create-a-bnb1-address-for-bnb-beacon-chain-from-mnemonic-in-<python>","39":"https:\/\/stackoverflow.com\/questions\/75330824\/ganache-<truffle>revert-tx-limit-exceeded-reason-given-tx-limit-exceeded","40":"https:\/\/stackoverflow.com\/questions\/75326649\/where-to-practice-<solidity>-after-learning-its-basics","41":"https:\/\/stackoverflow.com\/questions\/75321169\/erc721-invalid-<token>-id-when-trying-to-connect-two-smart-contracts","42":"https:\/\/stackoverflow.com\/questions\/75319247\/the-transaction-has-been-reverted-to-the-initial-state-the-called-function-shou","43":"https:\/\/stackoverflow.com\/questions\/75316106\/getting-<bitcoin>-from-block-to-wallet","44":"https:\/\/stackoverflow.com\/questions\/75313261\/why-cant-i-open-<remix>-ide-in-my-browser","45":"https:\/\/stackoverflow.com\/questions\/75312516\/when-calling-a-smart-contract-function-do-the-params-record-on-blockchain","46":"https:\/\/stackoverflow.com\/questions\/75311957\/how-can-i-get-transactions-from-a-wallet-using-alchemy-websockets","47":"https:\/\/stackoverflow.com\/questions\/75310192\/can-i-create-private-eth-network-that-no-external-one-can-join-it","48":"https:\/\/stackoverflow.com\/questions\/75308511\/kiwi-<token>-pool-batchpayment-address-to-<defi>ned-wallet","49":"https:\/\/stackoverflow.com\/questions\/75306388\/how-to-send-bep-20-<token>-to-multiple-addresses-without-using-for-loop-in-web3-or","50":"https:\/\/stackoverflow.com\/questions\/75308006\/how-is-it-possible-to-make-random-pseudorandom-numbers-in-the-<move>-language","51":"https:\/\/stackoverflow.com\/questions\/75305408\/not-enough-fund-when-doing-buying-<token>-transaction-in-<solidity>-with-<remix>-ide","52":"https:\/\/stackoverflow.com\/questions\/75304865\/unable-to-deploy-the-vrfcoordinatorv2mock-on-the-local-development-environment","53":"https:\/\/stackoverflow.com\/questions\/75301410\/does-web3-eth-getlogs-find-reverted-transactions","54":"https:\/\/stackoverflow.com\/questions\/75301080\/unable-to-transact-operator-setauthorizedsenders-on-<chainlink>-goerli","55":"https:\/\/stackoverflow.com\/questions\/75296535\/how-to-re<move>-a-user-from-<hyperledger-fabric>-network","56":"https:\/\/stackoverflow.com\/questions\/75297027\/not-able-to-bridge-deployed-erc20-<token>-through-pos-bridge-using-<matic>js-gettin","57":"https:\/\/stackoverflow.com\/questions\/75289706\/uniswap-v2-swap-function-what-are-balance0-balance1","58":"https:\/\/stackoverflow.com\/questions\/75288805\/sync-erigon-to-geth","59":"https:\/\/stackoverflow.com\/questions\/75288167\/approximating-cost-of-using-<chainlink>-for-custom-<api>","60":"https:\/\/stackoverflow.com\/questions\/75288132\/why-is-<chainlink>-oracle-function-call-failing","61":"https:\/\/stackoverflow.com\/questions\/75282584\/guidance-in-application-of-bloackchain-based-ddos-mitigation-stragtegies","62":"https:\/\/stackoverflow.com\/questions\/75279757\/how-to-automate-a-<chainlink>-job-to-call-a-smart-contract-function-that-requires","63":"https:\/\/stackoverflow.com\/questions\/75279610\/faucet-contract-only-permits-owner-to-perform-transactions","64":"https:\/\/stackoverflow.com\/questions\/75279327\/signature-verification-failed-please-verify-account-number-and-chain-id-unauth","65":"https:\/\/stackoverflow.com\/questions\/75274351\/how-to-get-<ether>-for-goerli-testnet-online-faucets-arent-working","66":"https:\/\/stackoverflow.com\/questions\/75273662\/web3<py>-<ether>eum<testerprovider>-basic-interactions-with-a-smart-contract-fail","67":"https:\/\/stackoverflow.com\/questions\/75273199\/<solana>-anchor-lang-anchor-init-creates-<project>-with-typeerror-cannot-read-prop","68":"https:\/\/stackoverflow.com\/questions\/75272080\/not-able-to-correctly-send-a-transaction-bsc-testnet-web3","69":"https:\/\/stackoverflow.com\/questions\/75273182\/web3<py>-<ether>eum<testerprovider>-basic-transaction-fails","70":"https:\/\/stackoverflow.com\/questions\/75268527\/error-while-creating-did-using-didkit-wasm-library","71":"https:\/\/stackoverflow.com\/questions\/75266712\/ive-tried-<npm>-install-legacy-peer-deps","72":"https:\/\/stackoverflow.com\/questions\/75266526\/why-uniswap-v2s-function-getpair-is-returning-a-null-address","73":"https:\/\/stackoverflow.com\/questions\/75265698\/chialisp-environment-set-up","74":"https:\/\/stackoverflow.com\/questions\/75265553\/referenceerror-sonr01-is-not-<defi>ned","75":"https:\/\/stackoverflow.com\/questions\/75265106\/web3-<py>-function-get-block-tranactions-is-not-in-the-current-block","76":"https:\/\/stackoverflow.com\/questions\/75254379\/what-is-different-nami-wallet-signing-and-payment-skey-signing","77":"https:\/\/stackoverflow.com\/questions\/75254178\/how-to-get-the-total-number-of-cardano-<token>-listed-on-a-marketplace-by-policyid","78":"https:\/\/stackoverflow.com\/questions\/75254110\/is-this-a-correct-way-to-calculate-price-for-<token>s-with-different-decimals","79":"https:\/\/stackoverflow.com\/questions\/75252149\/why-does-transact-and-wait-behave-differently-when-within-a-function-is-behaving","80":"https:\/\/stackoverflow.com\/questions\/75250879\/n<ether>eum-sending-<ether>-fail","81":"https:\/\/stackoverflow.com\/questions\/75247618\/how-can-i-get-a-list-of-latest-<ether>eum-transactions","82":"https:\/\/stackoverflow.com\/questions\/75246540\/how-to-trade-on-opensea-with-smart-contract-<solidity>","83":"https:\/\/stackoverflow.com\/questions\/75238503\/is-there-a-way-to-get-the-value-of-a-<crypto>-in-another-one-with-uniswap","84":"https:\/\/stackoverflow.com\/questions\/75234925\/cannot-make-connection-to-metamask","85":"https:\/\/stackoverflow.com\/questions\/75234366\/multicall-taking-300-seconds-to-return-result","86":"https:\/\/stackoverflow.com\/questions\/75230786\/private-<ether>eum-blockchain-not-working-for-static-ip","87":"https:\/\/stackoverflow.com\/questions\/75226235\/how-i-make-my-smart-contract-interact-with-my-<token>","88":"https:\/\/stackoverflow.com\/questions\/75219926\/private-<ether>eum-blockchain-deployment-on-<kubernetes>","89":"https:\/\/stackoverflow.com\/questions\/75218186\/not-able-to-create-a-network-using-aws-sdk-client-managedblockchain","90":"https:\/\/stackoverflow.com\/questions\/75213112\/i-am-trying-to-use-the-<python>-blocknative-sdk-but-i-keep-receiving-a-handshake-e","91":"https:\/\/stackoverflow.com\/questions\/75212865\/im-trying-to-run-a-js-script-on-the-blockchain-using-<hardhat>-after-running-it","92":"https:\/\/stackoverflow.com\/questions\/75210416\/how-to-send-contract-parameters-when-send-<nft>-to-marketplace-address-at-cardano","93":"https:\/\/stackoverflow.com\/questions\/75208891\/trying-to-get-<token>-info-from-smart-contract-address-bitquery-<api>s","94":"https:\/\/stackoverflow.com\/questions\/75206101\/how-is-the-block-size-of-<bitcoin>-1mb-whereas-the-algorithm-it-uses-sha-256-has","95":"https:\/\/stackoverflow.com\/questions\/75202477\/failed-to-deploy-<hyperledger-fabric>","96":"https:\/\/stackoverflow.com\/questions\/75199753\/typeerror-contract-methods-balanceof-is-not-a-function","97":"https:\/\/stackoverflow.com\/questions\/75195770\/any-blockchain-bridge-with-<api>-for-btc-to-wbtc-conversion","98":"https:\/\/stackoverflow.com\/questions\/75188804\/how-to-link-all-transactions-related-to-one-policy-number-in-blockchain","99":"https:\/\/stackoverflow.com\/questions\/75178759\/opensea-<api>-v2-giving-invalid-signature-when-try-to-list-<nft>-on-<polygon>-networ","100":"https:\/\/stackoverflow.com\/questions\/75176117\/why-is-constant-node-participation-necessary-in-blockchains","101":"https:\/\/stackoverflow.com\/questions\/75173136\/deploying-to-fuji-network-with-<hardhat>-creates-httpprovidererror","102":"https:\/\/stackoverflow.com\/questions\/75164179\/how-to-implement-the-erc20-<token>-transferfrom-method-in-<solidity>-smartcontract","103":"https:\/\/stackoverflow.com\/questions\/75159635\/error-hh411-the-library-<hardhat>-console-so-imported-from-contracts-<nft>marketp","104":"https:\/\/stackoverflow.com\/questions\/75158676\/blockchain-outbound-oracle-code-sample-in-<solidity>","105":"https:\/\/stackoverflow.com\/questions\/75155806\/what-does-need-genesis-json-file-as-the-only-argument-mean","106":"https:\/\/stackoverflow.com\/questions\/75154338\/parsing-error-unexpected-<token>-expected-202-expected1005","107":"https:\/\/stackoverflow.com\/questions\/75152691\/<solidity>-getting-different-selector","108":"https:\/\/stackoverflow.com\/questions\/75152488\/<chainlink>-async-bridge-task-returns-http-error-422","109":"https:\/\/stackoverflow.com\/questions\/75141635\/advantage-disadvantage-between-<chainlink>-vrf-and-an-off-chain-random-number-tran","110":"https:\/\/stackoverflow.com\/questions\/75135433\/converting-a-tron-address-to-base58-doesnt-work","111":"https:\/\/stackoverflow.com\/questions\/75130702\/ecdsa-malformedpointerror-length-of-string-does-not-match-lengths-of-any-of-t","112":"https:\/\/stackoverflow.com\/questions\/75130325\/usecontractwrite-function-not-working-in-useeffect-hook-when-dependency-array-ch","113":"https:\/\/stackoverflow.com\/questions\/75128150\/how-to-identify-wh<ether>-an-tx-is-a-simple-incoming-sol-<token>-transfer-one","114":"https:\/\/stackoverflow.com\/questions\/75125299\/how-to-stop-a-<hardhat>-node-running-on-<localhost>","115":"https:\/\/stackoverflow.com\/questions\/75123696\/how-threshold-signatures-have-the-same-address-public-key","116":"https:\/\/stackoverflow.com\/questions\/75123420\/how-to-generate-the-genesis-key-pair-for-proof-of-stake","117":"https:\/\/stackoverflow.com\/questions\/75120494\/tor<py>-stream-4-closed-already-connection-broken-incompleteread634-bytes-rea","118":"https:\/\/stackoverflow.com\/questions\/75119834\/deployment-issue-using-sepoila-test-network","119":"https:\/\/stackoverflow.com\/questions\/75117694\/get-json-file-404-not-found-when-loading-a-smart-contract","120":"https:\/\/stackoverflow.com\/questions\/75115721\/cargo-build-bpf-command-not-working-for-<solana>","121":"https:\/\/stackoverflow.com\/questions\/75109764\/smart-contract-works-as-intended-when-deployed-in-<remix>-vm-but-not-in-goerli-tes","122":"https:\/\/stackoverflow.com\/questions\/75104393\/logged-events-not-showing-up-in-ganache-or-in-transaction-log","123":"https:\/\/stackoverflow.com\/questions\/75100609\/initialize-issue-about-cordas-flow-test","124":"https:\/\/stackoverflow.com\/questions\/75092548\/thegraph-create-<subgraph>-loading-but-not-working","125":"https:\/\/stackoverflow.com\/questions\/75089016\/my-function-call-is-returning-expensive-gas-cost-on-metamask","126":"https:\/\/stackoverflow.com\/questions\/75086317\/not-seeing-json-file-under-contracts-after-compiling-a-contract-on-brownie","127":"https:\/\/stackoverflow.com\/questions\/75081462\/plugin-nomicfoundation-<hardhat>-toolbox-requires-the-following-dependencies-to-b","128":"https:\/\/stackoverflow.com\/questions\/75080835\/how-to-make-a-factory-contract-which-deploys-a-uups-proxy","129":"https:\/\/stackoverflow.com\/questions\/75079707\/is-there-any-possible-ways-to-auto<matic>ally-fetch-the-dex-interacted-users-walle","130":"https:\/\/stackoverflow.com\/questions\/75073916\/how-web3j-is-used-to-get-the-sc-wrappers-and-operate-with-them-using-java-eclip","131":"https:\/\/stackoverflow.com\/questions\/75068193\/how-to-use-cosmos-<token>view-<api>-with-postman-in-2023","132":"https:\/\/stackoverflow.com\/questions\/75068116\/near-smart-contract-how-to-change-beneficiary-in-donation-from-documentation","133":"https:\/\/stackoverflow.com\/questions\/75068002\/how-do-i-limit-the-max-supply-of-an-elrond-<nft>-collection","134":"https:\/\/stackoverflow.com\/questions\/75067632\/<python>-detail-loc-body-msg-value-is-not-a-valid-dict-type","135":"https:\/\/stackoverflow.com\/questions\/75061661\/does-flashbots-signer-wallet-a-compromised-wallet-with-web-<py>-requires-wallet","136":"https:\/\/stackoverflow.com\/questions\/75056460\/failed-during-git-fetch-force-origin-refs-heads-masterrefs-remotes-origin-m","137":"https:\/\/stackoverflow.com\/questions\/75054779\/<pancakeswap>-response-is-encoded","138":"https:\/\/stackoverflow.com\/questions\/75050673\/get-call-exception-details","139":"https:\/\/stackoverflow.com\/questions\/75049069\/flamenco-rendering-farm","140":"https:\/\/stackoverflow.com\/questions\/75044510\/pipx-can-not-build-packages-when-trying-to-install-eth-brownie","141":"https:\/\/stackoverflow.com\/questions\/75041393\/meta-transactions-for-third-party-contract","142":"https:\/\/stackoverflow.com\/questions\/75040081\/<crypto>currency-wallet-mnemonic-seed-phrase","143":"https:\/\/stackoverflow.com\/questions\/75039889\/how-to-verify-transparentupgradeableproxy-which-is-deployed-using-create2","144":"https:\/\/stackoverflow.com\/questions\/75037449\/giving-maximum-allowance-of-a-<token>-to-a-contract-what-are-best-practices","145":"https:\/\/stackoverflow.com\/questions\/75036966\/is-there-a-chance-that-the-tron-wallet-that-i-created-is-already-used-by-someone","146":"https:\/\/stackoverflow.com\/questions\/75035359\/how-to-filter-after-group-by-in-this-dune-analytics-example","147":"https:\/\/stackoverflow.com\/questions\/75030672\/invalid-signature-on-hedera-<nft>-creation","148":"https:\/\/stackoverflow.com\/questions\/75030659\/does-bnb-beacon-chain-government-chain-support-smart-contracts","149":"https:\/\/stackoverflow.com\/questions\/75029717\/for-if-loop-has-no-errors-but-does-not-push-the-value-to-the-array","150":"https:\/\/stackoverflow.com\/questions\/75019715\/assertion-failed-error-in-minting-using-bn-js","151":"https:\/\/stackoverflow.com\/questions\/75019314\/error-with-blockchain-test-difficulty-adjustment","152":"https:\/\/stackoverflow.com\/questions\/75017435\/<solana>-web3-transaction-success-and-returns-no-signature-in-some-cases","153":"https:\/\/stackoverflow.com\/questions\/75014969\/parsererror-expected-but-got-constant-in-<remix>-ide","154":"https:\/\/stackoverflow.com\/questions\/75014811\/enrollment-certificate-of-user-does-not-have-the-attribute-values-assigned-to-it","155":"https:\/\/stackoverflow.com\/questions\/75010458\/how-to-transfer-decimal-<matic>s","156":"https:\/\/stackoverflow.com\/questions\/75008106\/<solana>-spl-<token>-transfer-fee-error-programincorrectprogramid","157":"https:\/\/stackoverflow.com\/questions\/75007886\/cannot-install-blockchain-parser-getting-legacy-install-failure","158":"https:\/\/stackoverflow.com\/questions\/75004417\/why-do-we-need-deployments-fixture","159":"https:\/\/stackoverflow.com\/questions\/75003990\/how-to-detect-contract-creation-timestamp-in-<ether>eum-blockchain-nodes","160":"https:\/\/stackoverflow.com\/questions\/74993037\/how-to-decode-data-from-uniswap-transaction-in-<python>","161":"https:\/\/stackoverflow.com\/questions\/74992529\/does-a-corda-node-communication-with-notary-is-same-as-in-case-of-another-peer-n","162":"https:\/\/stackoverflow.com\/questions\/74990780\/flutter-how-to-send-transaction-to-metamask-using-flutter-web3-package","163":"https:\/\/stackoverflow.com\/questions\/74987461\/tron-trc20-address-generation-in-dart-language","164":"https:\/\/stackoverflow.com\/questions\/74985710\/cannot-read-properties-of-un<defi>ned-reading-hex-next-js-buy<nft>","165":"https:\/\/stackoverflow.com\/questions\/74981615\/encountering-the-error-error-chaincode-argument-error-invalid-character-a","166":"https:\/\/stackoverflow.com\/questions\/74979149\/what-is-alt-mempool-in-eip-4337-account-abstraction","167":"https:\/\/stackoverflow.com\/questions\/74974850\/creating-a-wallet-on-<ether>-creates-it-on-all-evn-supported-networks"},"# of answers":{"0":0.0,"1":0.0,"2":0.0,"3":0.0,"4":0.0,"5":0.0,"6":0.0,"7":0.0,"8":0.0,"9":0.0,"10":0.0,"11":0.0,"12":0.0,"13":1.0,"14":0.0,"15":null,"16":0.0,"17":1.0,"18":0.0,"19":0.0,"20":0.0,"21":0.0,"22":0.0,"23":0.0,"24":0.0,"25":1.0,"26":2.0,"27":1.0,"28":0.0,"29":0.0,"30":1.0,"31":0.0,"32":1.0,"33":1.0,"34":1.0,"35":1.0,"36":1.0,"37":1.0,"38":0.0,"39":0.0,"40":0.0,"41":1.0,"42":1.0,"43":0.0,"44":0.0,"45":1.0,"46":0.0,"47":0.0,"48":0.0,"49":1.0,"50":0.0,"51":1.0,"52":0.0,"53":0.0,"54":1.0,"55":0.0,"56":1.0,"57":1.0,"58":0.0,"59":2.0,"60":1.0,"61":0.0,"62":2.0,"63":1.0,"64":0.0,"65":1.0,"66":0.0,"67":1.0,"68":0.0,"69":0.0,"70":0.0,"71":0.0,"72":0.0,"73":1.0,"74":0.0,"75":1.0,"76":0.0,"77":0.0,"78":0.0,"79":0.0,"80":0.0,"81":0.0,"82":0.0,"83":1.0,"84":1.0,"85":0.0,"86":0.0,"87":0.0,"88":1.0,"89":0.0,"90":0.0,"91":0.0,"92":0.0,"93":0.0,"94":1.0,"95":0.0,"96":0.0,"97":1.0,"98":1.0,"99":0.0,"100":1.0,"101":1.0,"102":0.0,"103":0.0,"104":1.0,"105":0.0,"106":1.0,"107":0.0,"108":1.0,"109":0.0,"110":0.0,"111":0.0,"112":0.0,"113":0.0,"114":1.0,"115":1.0,"116":0.0,"117":1.0,"118":0.0,"119":0.0,"120":0.0,"121":0.0,"122":0.0,"123":0.0,"124":0.0,"125":0.0,"126":1.0,"127":0.0,"128":0.0,"129":0.0,"130":0.0,"131":1.0,"132":0.0,"133":1.0,"134":1.0,"135":0.0,"136":0.0,"137":0.0,"138":1.0,"139":0.0,"140":0.0,"141":0.0,"142":1.0,"143":0.0,"144":0.0,"145":1.0,"146":0.0,"147":3.0,"148":0.0,"149":1.0,"150":0.0,"151":0.0,"152":0.0,"153":0.0,"154":0.0,"155":1.0,"156":1.0,"157":1.0,"158":1.0,"159":2.0,"160":0.0,"161":1.0,"162":0.0,"163":0.0,"164":1.0,"165":1.0,"166":0.0,"167":1.0},"# of votes":{"0":0.0,"1":-5.0,"2":0.0,"3":0.0,"4":0.0,"5":0.0,"6":2.0,"7":0.0,"8":0.0,"9":0.0,"10":0.0,"11":0.0,"12":0.0,"13":0.0,"14":0.0,"15":null,"16":1.0,"17":0.0,"18":0.0,"19":0.0,"20":-1.0,"21":0.0,"22":-1.0,"23":0.0,"24":0.0,"25":1.0,"26":1.0,"27":1.0,"28":-1.0,"29":-1.0,"30":0.0,"31":-1.0,"32":-2.0,"33":1.0,"34":0.0,"35":2.0,"36":0.0,"37":0.0,"38":-1.0,"39":0.0,"40":-1.0,"41":0.0,"42":0.0,"43":-5.0,"44":0.0,"45":0.0,"46":0.0,"47":0.0,"48":0.0,"49":0.0,"50":0.0,"51":0.0,"52":0.0,"53":-1.0,"54":-1.0,"55":0.0,"56":0.0,"57":-1.0,"58":-1.0,"59":-1.0,"60":0.0,"61":0.0,"62":0.0,"63":0.0,"64":3.0,"65":0.0,"66":1.0,"67":0.0,"68":-1.0,"69":0.0,"70":0.0,"71":-2.0,"72":0.0,"73":0.0,"74":0.0,"75":1.0,"76":0.0,"77":-1.0,"78":0.0,"79":0.0,"80":0.0,"81":0.0,"82":0.0,"83":0.0,"84":0.0,"85":0.0,"86":0.0,"87":0.0,"88":1.0,"89":-1.0,"90":0.0,"91":0.0,"92":-2.0,"93":0.0,"94":1.0,"95":-2.0,"96":0.0,"97":-2.0,"98":0.0,"99":0.0,"100":0.0,"101":0.0,"102":0.0,"103":0.0,"104":-1.0,"105":0.0,"106":-1.0,"107":0.0,"108":0.0,"109":1.0,"110":0.0,"111":-1.0,"112":-1.0,"113":0.0,"114":0.0,"115":0.0,"116":0.0,"117":2.0,"118":-1.0,"119":1.0,"120":1.0,"121":0.0,"122":0.0,"123":0.0,"124":0.0,"125":1.0,"126":0.0,"127":0.0,"128":0.0,"129":0.0,"130":0.0,"131":-1.0,"132":-1.0,"133":1.0,"134":-1.0,"135":-1.0,"136":1.0,"137":0.0,"138":2.0,"139":-1.0,"140":0.0,"141":-1.0,"142":-1.0,"143":0.0,"144":-2.0,"145":-4.0,"146":0.0,"147":2.0,"148":0.0,"149":0.0,"150":0.0,"151":0.0,"152":0.0,"153":0.0,"154":0.0,"155":-1.0,"156":-1.0,"157":-2.0,"158":1.0,"159":0.0,"160":0.0,"161":0.0,"162":0.0,"163":0.0,"164":-1.0,"165":-1.0,"166":1.0,"167":-1.0},"# of views":{"0":8.0,"1":11.0,"2":15.0,"3":11.0,"4":11.0,"5":14.0,"6":10.0,"7":14.0,"8":52.0,"9":12.0,"10":9.0,"11":6.0,"12":17.0,"13":27.0,"14":25.0,"15":null,"16":4.0,"17":32.0,"18":13.0,"19":10.0,"20":10.0,"21":24.0,"22":19.0,"23":9.0,"24":18.0,"25":20.0,"26":33.0,"27":117.0,"28":14.0,"29":14.0,"30":33.0,"31":20.0,"32":26.0,"33":52.0,"34":28.0,"35":26.0,"36":49.0,"37":32.0,"38":46.0,"39":10.0,"40":17.0,"41":50.0,"42":24.0,"43":26.0,"44":20.0,"45":40.0,"46":24.0,"47":8.0,"48":13.0,"49":26.0,"50":13.0,"51":29.0,"52":21.0,"53":14.0,"54":23.0,"55":21.0,"56":28.0,"57":47.0,"58":27.0,"59":40.0,"60":31.0,"61":14.0,"62":41.0,"63":17.0,"64":261.0,"65":23.0,"66":55.0,"67":33.0,"68":15.0,"69":25.0,"70":12.0,"71":21.0,"72":26.0,"73":18.0,"74":10.0,"75":33.0,"76":16.0,"77":15.0,"78":38.0,"79":19.0,"80":16.0,"81":21.0,"82":31.0,"83":29.0,"84":30.0,"85":40.0,"86":28.0,"87":29.0,"88":37.0,"89":15.0,"90":16.0,"91":26.0,"92":28.0,"93":33.0,"94":38.0,"95":37.0,"96":27.0,"97":22.0,"98":28.0,"99":45.0,"100":30.0,"101":45.0,"102":42.0,"103":26.0,"104":34.0,"105":69.0,"106":35.0,"107":17.0,"108":13.0,"109":40.0,"110":35.0,"111":27.0,"112":29.0,"113":12.0,"114":48.0,"115":28.0,"116":30.0,"117":95.0,"118":27.0,"119":26.0,"120":63.0,"121":25.0,"122":43.0,"123":46.0,"124":20.0,"125":28.0,"126":15.0,"127":106.0,"128":39.0,"129":28.0,"130":9.0,"131":25.0,"132":17.0,"133":53.0,"134":123.0,"135":26.0,"136":34.0,"137":33.0,"138":56.0,"139":25.0,"140":20.0,"141":19.0,"142":48.0,"143":46.0,"144":33.0,"145":49.0,"146":17.0,"147":63.0,"148":14.0,"149":27.0,"150":33.0,"151":14.0,"152":39.0,"153":17.0,"154":28.0,"155":30.0,"156":37.0,"157":52.0,"158":39.0,"159":71.0,"160":113.0,"161":46.0,"162":48.0,"163":48.0,"164":26.0,"165":16.0,"166":44.0,"167":32.0},"Avatar":{"0":"https:\/\/lh4.googleusercontent.com\/-DM62_R48FHA\/AAAAAAAAAAI\/AAAAAAAAADk\/cKcqgrQmVmA\/photo.jpg?sz=32","1":"https:\/\/www.gravatar.com\/avatar\/3c259c812b9336ef24676d7e7ae6701d?s=32&d=identicon&r=PG&f=1","2":"https:\/\/lh3.googleusercontent.com\/a\/ALm5wu3TCDvjbMf66rqhbZZV9cU0fns9sVXwTd2vaXS4gQ=k-s32","3":"https:\/\/www.gravatar.com\/avatar\/13f16cb13cff4a61e1dde1828da3685b?s=32&d=identicon&r=PG&f=1","4":"https:\/\/graph.facebook.com\/407699506330334\/picture?type=large","5":"https:\/\/i.stack.imgur.com\/l7zrQ.jpg?s=32&g=1","6":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp52Ghlb2OmL4oQNa51sQt0GDO0hBC48qY_KGJYE=k-s32","7":"https:\/\/i.stack.imgur.com\/TERy9.jpg?s=32&g=1","8":"https:\/\/www.gravatar.com\/avatar\/56d61be31438e7e4492586d5c99a0181?s=32&d=identicon&r=PG","9":"https:\/\/lh3.googleusercontent.com\/a-\/AAuE7mBOqZT_IYP5QDZLhXIsgWVhgUw3afbDo-o5O0ZN=k-s32","10":"https:\/\/www.gravatar.com\/avatar\/68c38845d40c1f30ac6450a788e2aba9?s=32&d=identicon&r=PG","11":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgrFpqb3_nxRGR43w0OsfNdrpVLWOabsDqmA_eGHg=k-s32","12":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwIX4vwL7yW9VzvH0bcUKzKcSewuolbsajJ2wem=k-s32","13":"https:\/\/www.gravatar.com\/avatar\/661cde552cf4782ab276dec4338c5b9b?s=32&d=identicon&r=PG","14":"https:\/\/www.gravatar.com\/avatar\/a62d7e7dbcb09eb4fea366b8f04cece9?s=32&d=identicon&r=PG","15":null,"16":"https:\/\/i.stack.imgur.com\/Ps6Cv.jpg?s=32&g=1","17":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjGDHrXfaV6reYNuTQMqrCQTVvNtAgjEuD4aRbWPg=k-s32","18":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhruUl7kOIpI76jLc8-n84OMjk2xDLy9Fc56iW2qA=k-s32","19":"https:\/\/i.stack.imgur.com\/akv8S.jpg?s=32&g=1","20":"https:\/\/i.stack.imgur.com\/9wSPI.jpg?s=32&g=1","21":"https:\/\/i.stack.imgur.com\/hZKJB.jpg?s=32&g=1","22":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp5IEY2VEJq2H9uNyRwVlg4ci740zUmp87adju8E=k-s32","23":"https:\/\/www.gravatar.com\/avatar\/90d2dfd075e2fbf7faf5ea8e02013d4f?s=32&d=identicon&r=PG","24":"https:\/\/www.gravatar.com\/avatar\/213cf20196c4e61ac1a1fa61e4c66740?s=32&d=identicon&r=PG","25":"https:\/\/www.gravatar.com\/avatar\/dd6c9d44850f03d964ffb4e99b66ed06?s=32&d=identicon&r=PG&f=1","26":"https:\/\/www.gravatar.com\/avatar\/db7e38be5c4b02479ee330a0d1425494?s=32&d=identicon&r=PG","27":"https:\/\/i.stack.imgur.com\/tTyml.png?s=32&g=1","28":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjneHFjgQhFsDizqspOshH_wpHGbuE04_XDpFfT=k-s32","29":"https:\/\/www.gravatar.com\/avatar\/904e4a339da47df5e30ae9f45f7a9391?s=32&d=identicon&r=PG&f=1","30":"https:\/\/i.stack.imgur.com\/05dkF.png?s=32&g=1","31":"https:\/\/www.gravatar.com\/avatar\/80221821d577ee5804e5cb58a61de710?s=32&d=identicon&r=PG","32":"https:\/\/i.stack.imgur.com\/Z26NK.jpg?s=32&g=1","33":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ghi3VWn7zfdf9SlOnK1w6SMMELECIKl-iVBd-5hnw=k-s32","34":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyKEBFboEuhz8AzlAP7jJdC0Xm681Dj8jaqB4yU=k-s32","35":"https:\/\/lh3.googleusercontent.com\/a\/AItbvmlLfhUWhWVGEu5j14STB57P9bmfJdr59AjEZMDa=k-s32","36":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ghx31jmZDSe3plM3fmUQGhlmUc-10bMkI4ljoKvEQ=k-s32","37":"https:\/\/www.gravatar.com\/avatar\/68c38845d40c1f30ac6450a788e2aba9?s=32&d=identicon&r=PG","38":"https:\/\/i.stack.imgur.com\/MCNUg.jpg?s=32&g=1","39":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GisfIV9U2AZWviESB4wDmP_y5MyLDe7TVtw9oNZ0g=k-s32","40":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp66QEkq8BgNr5gCmLeJ86cyDXeKvjsKOVEYTHgA=k-s32","41":"https:\/\/www.gravatar.com\/avatar\/6200d563aff35aafa200c093cb508e38?s=32&d=identicon&r=PG&f=1","42":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjZo_JPwhwdoAdd5MnMld4NOj7ilOIPv5_uIlxqJA=k-s32","43":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp54mL813U9MdFPhkQhVCpaGvTYh-lEyAMQnCV02=k-s32","44":"https:\/\/lh3.googleusercontent.com\/a\/ALm5wu0TJzPR_5Fa4Xqp0SWVN1JiA05RnNIuNo9ADh6B=k-s32","45":"https:\/\/i.stack.imgur.com\/05dkF.png?s=32&g=1","46":"https:\/\/www.gravatar.com\/avatar\/838c0c17dc6e33509287a9d4e1e1d4c3?s=32&d=identicon&r=PG","47":"https:\/\/www.gravatar.com\/avatar\/661cde552cf4782ab276dec4338c5b9b?s=32&d=identicon&r=PG","48":"https:\/\/www.gravatar.com\/avatar\/6d6459bb6db14bd4647b93da5dc52db8?s=32&d=identicon&r=PG","49":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Gi905bd7RP6Z015tk170hoxgzk3KMSYioeflKTibA=k-s32","50":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwpusDrrKgG_uWHNtHkwWTJvsBnVnigZFDkvOT1=k-s32","51":"https:\/\/www.gravatar.com\/avatar\/68c38845d40c1f30ac6450a788e2aba9?s=32&d=identicon&r=PG","52":"https:\/\/www.gravatar.com\/avatar\/244832ac781461be97248e2d519f74c5?s=32&d=identicon&r=PG&f=1","53":"https:\/\/lh3.googleusercontent.com\/a\/ALm5wu1uKKh82PvRL1_1MaQo0Gi_89f1bBhEtT4UOwbg=k-s32","54":"https:\/\/lh6.googleusercontent.com\/-UX3vYRzPkHY\/AAAAAAAAAAI\/AAAAAAAAGPI\/jS5R_6-k2D8\/photo.jpg?sz=32","55":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp6YhAdRGdx1Gkk6wIzeOs2sOm8bo6nVb_Bx-IuJ=k-s32","56":"https:\/\/www.gravatar.com\/avatar\/6a7cd838a1746eac489302b443a69414?s=32&d=identicon&r=PG&f=1","57":"https:\/\/i.stack.imgur.com\/zG5KD.jpg?s=32&g=1","58":"https:\/\/www.gravatar.com\/avatar\/f0e21f827962a199bb8073c3b88820b4?s=32&d=identicon&r=PG&f=1","59":"https:\/\/www.gravatar.com\/avatar\/47b58e08add5a976afde9e0bc78c8b20?s=32&d=identicon&r=PG","60":"https:\/\/www.gravatar.com\/avatar\/ce4f09fde3503345e3e370ab8903e3d7?s=32&d=identicon&r=PG","61":"https:\/\/www.gravatar.com\/avatar\/1681b6a3067a224b7d044adcaa90b593?s=32&d=identicon&r=PG&f=1","62":"https:\/\/i.stack.imgur.com\/FJmrw.png?s=32&g=1","63":"https:\/\/graph.facebook.com\/133091069116026\/picture?type=large","64":"https:\/\/i.stack.imgur.com\/7LNdp.jpg?s=32&g=1","65":"https:\/\/www.gravatar.com\/avatar\/26679f8938246bb7d1bba3c0f082a3f3?s=32&d=identicon&r=PG&f=1","66":"https:\/\/i.stack.imgur.com\/DQKBd.jpg?s=32&g=1","67":"https:\/\/www.gravatar.com\/avatar\/0f5dcaf02e42c7fc4c2c8a06678dd1ec?s=32&d=identicon&r=PG&f=1","68":"https:\/\/lh3.googleusercontent.com\/a\/AItbvmn-LQBSeSQOhgdZU6tlmICxGBLtiqXuD8bozmg6=k-s32","69":"https:\/\/i.stack.imgur.com\/DQKBd.jpg?s=32&g=1","70":"https:\/\/lh3.googleusercontent.com\/a\/ALm5wu3GkHtxF7qorj-esVUGGcGcPqgMkTiUHjB13VjF=k-s32","71":"https:\/\/i.stack.imgur.com\/ePp3m.jpg?s=32&g=1","72":"https:\/\/i.stack.imgur.com\/LTCxL.jpg?s=32&g=1","73":"https:\/\/www.gravatar.com\/avatar\/c2c88e997937565fbe284ed9cc35001e?s=32&d=identicon&r=PG&f=1","74":"https:\/\/lh3.googleusercontent.com\/a-\/AFdZucq-UthvLlNvlK47ysBpK8NdtzpGYTzkcdt0zl1k=k-s32","75":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp6h-Jrmtjp09Iwec7CLeR-82ZuT83X2mRqrroJJ=k-s32","76":"https:\/\/i.stack.imgur.com\/iaTqf.jpg?s=32&g=1","77":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgBi-notKKEqmrdj8QHqPd<py>JJS6pQI1dY-e8Fz=k-s32","78":"https:\/\/lh3.googleusercontent.com\/-XdUIqdMkCWA\/AAAAAAAAAAI\/AAAAAAAAAAA\/4252rscbv5M\/photo.jpg?sz=32","79":"https:\/\/www.gravatar.com\/avatar\/51724f0b4dd572fede8fa58a3e25b238?s=32&d=identicon&r=PG&f=1","80":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GizGSM75Xlmx5vVvYgx1S5WcrdkXFHtxQbxaTnHdiU=k-s32","81":"https:\/\/www.gravatar.com\/avatar\/cdcee4f4a7932ff16707d00a35baea3d?s=32&d=identicon&r=PG&f=1","82":"https:\/\/www.gravatar.com\/avatar\/303698bfc65368883591816d5d24603e?s=32&d=identicon&r=PG","83":"https:\/\/i.stack.imgur.com\/LTCxL.jpg?s=32&g=1","84":"https:\/\/www.gravatar.com\/avatar\/04c0c838b7538f515de23ebfce570547?s=32&d=identicon&r=PG","85":"https:\/\/www.gravatar.com\/avatar\/d5447d832a6447526a9afe3af12e3501?s=32&d=identicon&r=PG","86":"https:\/\/lh3.googleusercontent.com\/a\/ALm5wu2vKfN-BUWgbW2BFtfUGsnDdEnwtwNIsno4qcMM=k-s32","87":"https:\/\/i.stack.imgur.com\/TOrNN.jpg?s=32&g=1","88":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp7Bf0KG1aaWkOb6ByEk2KUCZCh8dsIlxDxiqFdx=k-s32","89":"https:\/\/lh3.googleusercontent.com\/a-\/AFdZucqUQBaN-3BUbttdttquj_UvWXDBR13DKLZ_IkbTCQ=k-s32","90":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp4yIL2QMF5daEJiU5OzPIC2UDcrJcDmdELkjXNV=k-s32","91":"https:\/\/www.gravatar.com\/avatar\/1b65b0de936a1855bc55f0170655fde2?s=32&d=identicon&r=PG","92":"https:\/\/i.stack.imgur.com\/iaTqf.jpg?s=32&g=1","93":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GhUivdAQAhNmHWThjTDaTxqZlyAzxOeBOtvU6pIqw=k-s32","94":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjG2BQ1ErUHwXfw4DaKH4sa_chdMNdpe8NyU0vI_Q=k-s32","95":"https:\/\/www.gravatar.com\/avatar\/e527888deb64b57626e201dce5577f25?s=32&d=identicon&r=PG","96":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp4QI9C2gTqr0Hx_xzyaVT_X_s5eq05zPfNkBese=k-s32","97":"https:\/\/www.gravatar.com\/avatar\/faa40520e754efee66e3a62896a60ab3?s=32&d=identicon&r=PG","98":"https:\/\/www.gravatar.com\/avatar\/a4823880ca10af842866156d6b580304?s=32&d=identicon&r=PG","99":"https:\/\/lh6.googleusercontent.com\/-YOMq8Itq9uU\/AAAAAAAAAAI\/AAAAAAAAAFk\/EAZ6mOhM30k\/photo.jpg?sz=32","100":"https:\/\/www.gravatar.com\/avatar\/e27bf4b19b3c2649294feec4ea7cb7bd?s=32&d=identicon&r=PG&f=1","101":"https:\/\/i.stack.imgur.com\/FONtp.jpg?s=32&g=1","102":"https:\/\/www.gravatar.com\/avatar\/39e041431961af91e24fa39b12211717?s=32&d=identicon&r=PG","103":"https:\/\/www.gravatar.com\/avatar\/b99f13cb2d9c77c68d191af19b00da1d?s=32&d=identicon&r=PG&f=1","104":"https:\/\/www.gravatar.com\/avatar\/f4fbd4e95a3112f427f7acf11649e302?s=32&d=identicon&r=PG","105":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GjTj7JP-o5GTqygYjAcD9jqWyCr0NYzNV5-9WTMCQ=k-s32","106":"https:\/\/www.gravatar.com\/avatar\/123be7cf765937547959d1adea944477?s=32&d=identicon&r=PG","107":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","108":"https:\/\/i.stack.imgur.com\/JqoIv.jpg?s=32&g=1","109":"https:\/\/i.stack.imgur.com\/wEkDC.jpg?s=32&g=1","110":"https:\/\/www.gravatar.com\/avatar\/90d2dfd075e2fbf7faf5ea8e02013d4f?s=32&d=identicon&r=PG","111":"https:\/\/www.gravatar.com\/avatar\/96ed2a81993917e4f0e92d8dd2b751f2?s=32&d=identicon&r=PG","112":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJyTeob4l5dKFA07DHHekOwQ8FABQVCqGiJ-9Qn7=k-s32","113":"https:\/\/www.gravatar.com\/avatar\/c9ba5f724c02785892f2f964d7aecf5d?s=32&d=identicon&r=PG","114":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ggt-koZVyTTCLAyd-yL-hviP3UHZEMWs-CEB7boIQ=k-s32","115":"https:\/\/i.stack.imgur.com\/ponQd.jpg?s=32&g=1","116":"https:\/\/www.gravatar.com\/avatar\/10b586f5dd0d04b071bac89fa5a777b1?s=32&d=identicon&r=PG&f=1","117":"https:\/\/www.gravatar.com\/avatar\/511e8edf6080a81b993eeb4f6fca89a4?s=32&d=identicon&r=PG&f=1","118":"https:\/\/www.gravatar.com\/avatar\/5b5386246128e191ce718078ea5519ea?s=32&d=identicon&r=PG&f=1","119":"https:\/\/www.gravatar.com\/avatar\/0854a4f3d600975312e8c30e397416e2?s=32&d=identicon&r=PG","120":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GgvHZidO1nkdn0dTIz02pLMmn48BaqHXru9JQ1iOg=k-s32","121":"https:\/\/lh6.googleusercontent.com\/-0k3RBvOuqUw\/AAAAAAAAAAI\/AAAAAAAAAAA\/ACHi3rcYhg0Zo0uO9F1RITfS0dbXwkxFmw\/photo.jpg?sz=32","122":"https:\/\/www.gravatar.com\/avatar\/7332b577a6f335348555a3887aa240d8?s=32&d=identicon&r=PG","123":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp5FZxPwA3xZEzJ3zeHPNp7DWU7-PhF-D1r8rQ0F=k-s32","124":"https:\/\/www.gravatar.com\/avatar\/ee6180080e04b6a1bcd0488bd4f48611?s=32&d=identicon&r=PG","125":"https:\/\/www.gravatar.com\/avatar\/faa748bf44254d6ec5a84ac5bb63a206?s=32&d=identicon&r=PG&f=1","126":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp7uTdHUkb5bu-rCW9oznRKvIm16bHIwavA5YcqB=k-s32","127":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzkxFOO_hGtaiO0dfYeEBStkv3rlIzxIQZX4fJQ=k-s32","128":"https:\/\/i.stack.imgur.com\/JyuKk.jpg?s=32&g=1","129":"https:\/\/i.stack.imgur.com\/VvAVW.jpg?s=32&g=1","130":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJws9l0SCB3L9RLvoMwt2IossWe1Z5WjEUVG5SLQ=k-s32","131":"https:\/\/www.gravatar.com\/avatar\/0093c40307dba2e8c446ce9cce5a1e2e?s=32&d=identicon&r=PG","132":"https:\/\/www.gravatar.com\/avatar\/09f457001be3ad5fe8a4a5ae08e6c985?s=32&d=identicon&r=PG","133":"https:\/\/lh5.googleusercontent.com\/-V3Ojgd4EGWo\/AAAAAAAAAAI\/AAAAAAAAAPo\/DkNX5drDVdU\/photo.jpg?sz=32","134":"https:\/\/www.gravatar.com\/avatar\/96ed2a81993917e4f0e92d8dd2b751f2?s=32&d=identicon&r=PG","135":"https:\/\/lh5.googleusercontent.com\/--E1psQJX144\/AAAAAAAAAAI\/AAAAAAAAAAA\/AMZuucnHss4y6CMN3a-U-zU0P6-pHuGfVQ\/photo.jpg?sz=32","136":"https:\/\/www.gravatar.com\/avatar\/ca3bcc77861e597a0f29ad5707c649da?s=32&d=identicon&r=PG","137":"https:\/\/www.gravatar.com\/avatar\/0be3cf3f8e950631d57d196826bbc492?s=32&d=identicon&r=PG&f=1","138":"https:\/\/www.gravatar.com\/avatar\/3c09e95be17155127f26dc09766abd18?s=32&d=identicon&r=PG&f=1","139":"https:\/\/www.gravatar.com\/avatar\/005261a1315a133aa6724e3900ecd71f?s=32&d=identicon&r=PG","140":"https:\/\/lh3.googleusercontent.com\/a\/ALm5wu1EolRkQ_VvO6SH2n46Rty0PXs9ut3HscuqmtWiotE=k-s32","141":"https:\/\/www.gravatar.com\/avatar\/0479895ee0845c56f3d6f40887e9e61f?s=32&d=identicon&r=PG&f=1","142":"https:\/\/i.stack.imgur.com\/TkEas.jpg?s=32&g=1","143":"https:\/\/i.stack.imgur.com\/gaWDA.png?s=32&g=1","144":"https:\/\/www.gravatar.com\/avatar\/352f4e58f6055c025c615e75c2c3160e?s=32&d=identicon&r=PG&f=1","145":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJxCouO-MuCu4nYBu_rgrt-o-BNMfswKrxwnfEGR=k-s32","146":"https:\/\/www.gravatar.com\/avatar\/?s=32&d=identicon&r=PG&f=1","147":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp6dsgj9dTpFNzOmF4AwTMMgXUlD35_0dnCqT6-5=k-s32","148":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ghps-7vQkmQMO3Jqt9vL7rh7vW177XCxIp_KQIgOQ=k-s32","149":"https:\/\/www.gravatar.com\/avatar\/1083bcf651aade396935e05c0ddb7de8?s=32&d=identicon&r=PG&f=1","150":"https:\/\/lh3.googleusercontent.com\/a\/AItbvmlnZ0YaU5ddV1VRKA3to20wYcKxVOLGr0jb9fBP=k-s32","151":"https:\/\/www.gravatar.com\/avatar\/1f914c144e38ba201b588f54a7e8d3cc?s=32&d=identicon&r=PG","152":"https:\/\/i.stack.imgur.com\/jQgv7.jpg?s=32&g=1","153":"https:\/\/www.gravatar.com\/avatar\/d2bea72828b3d144a5004dd6840db923?s=32&d=identicon&r=PG","154":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ghnyoh2A4Xan2VVHjFGA3eJmWkGFlCLRJqMKNfK=k-s32","155":"https:\/\/lh3.googleusercontent.com\/-XdUIqdMkCWA\/AAAAAAAAAAI\/AAAAAAAAAAA\/4252rscbv5M\/photo.jpg?sz=32","156":"https:\/\/www.gravatar.com\/avatar\/45d82a44fef8ddd5f7c9bb23e13aea3d?s=32&d=identicon&r=PG&f=1","157":"https:\/\/www.gravatar.com\/avatar\/24a727998e3931097a4f7af32c5636d5?s=32&d=identicon&r=PG&f=1","158":"https:\/\/lh3.googleusercontent.com\/a\/AEdFTp4n2Gwj3Qlk5bZCf-UpJFjUplWDCDYUmf1udalw=k-s32","159":"https:\/\/www.gravatar.com\/avatar\/be531b94558519cdacc740a2d644cf39?s=32&d=identicon&r=PG&f=1","160":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJwmges_JeXA_CC5K5QASzsaR8SEZQzmdqDHlCDH=k-s32","161":"https:\/\/i.stack.imgur.com\/TERy9.jpg?s=32&g=1","162":"https:\/\/lh3.googleusercontent.com\/a-\/AAuE7mA954TKUXiySgUPjVVYVz87tLgmS2S2F4ogW_lf0A=k-s32","163":"https:\/\/lh3.googleusercontent.com\/a\/ALm5wu2mLeEO8X8EeQsNpWduzMw6L5Dt8WgfJ2CWzwzMWQ=k-s32","164":"https:\/\/lh3.googleusercontent.com\/a\/AATXAJzGwfKO9ZF83ZCnrOR7DW0B9nRuMuxJ9yO8HxgB=k-s32","165":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14Ghnyoh2A4Xan2VVHjFGA3eJmWkGFlCLRJqMKNfK=k-s32","166":"https:\/\/lh3.googleusercontent.com\/a-\/AOh14GiTjbzlEeAuvUB7XA8DD2Ns_GDAoLc8ByTP-PMjAQ=k-s32","167":"https:\/\/i.stack.imgur.com\/zm790.jpg?s=32&g=1"},"Question posted time":{"0":"3 hours ago","1":"4 hours ago","2":"8 hours ago","3":"13 hours ago","4":"16 hours ago","5":"yesterday","6":"yesterday","7":"yesterday","8":"yesterday","9":"yesterday","10":"yesterday","11":"yesterday","12":"yesterday","13":"2 days ago","14":"2 days ago","15":null,"16":"2 days ago","17":"2 days ago","18":"2 days ago","19":"Feb 6 at 19:38","20":"Feb 6 at 17:00","21":"Feb 6 at 15:32","22":"Feb 6 at 15:29","23":"Feb 6 at 12:42","24":"Feb 6 at 7:51","25":"Feb 5 at 15:08","26":"Feb 5 at 14:31","27":"Feb 5 at 11:06","28":"Feb 5 at 9:15","29":"Feb 4 at 18:21","30":"Feb 4 at 15:20","31":"Feb 4 at 7:08","32":"Feb 4 at 4:12","33":"Feb 4 at 3:55","34":"Feb 4 at 3:25","35":"Feb 3 at 22:02","36":"Feb 3 at 19:20","37":"Feb 3 at 3:17","38":"Feb 2 at 18:40","39":"Feb 3 at 2:11","40":"Feb 2 at 17:09","41":"Feb 2 at 9:39","42":"Feb 2 at 6:05","43":"Feb 1 at 20:56","44":"Feb 1 at 16:28","45":"Feb 1 at 15:29","46":"Feb 1 at 14:48","47":"Feb 1 at 12:27","48":"Feb 1 at 10:07","49":"Feb 1 at 6:28","50":"Feb 1 at 9:24","51":"Feb 1 at 3:36","52":"Feb 1 at 1:41","53":"Jan 31 at 18:11","54":"Jan 31 at 17:44","55":"Jan 31 at 11:35","56":"Jan 31 at 12:18","57":"Jan 30 at 20:20","58":"Jan 30 at 18:45","59":"Jan 30 at 17:41","60":"Jan 30 at 17:38","61":"Jan 30 at 9:43","62":"Jan 30 at 2:18","63":"Jan 30 at 1:44","64":"Jan 30 at 0:19","65":"Jan 29 at 11:02","66":"Jan 29 at 8:48","67":"Jan 29 at 7:17","68":"Jan 29 at 1:33","69":"Jan 29 at 7:13","70":"Jan 28 at 14:56","71":"Jan 28 at 9:42","72":"Jan 28 at 9:04","73":"Jan 28 at 5:58","74":"Jan 28 at 5:20","75":"Jan 28 at 3:02","76":"Jan 27 at 5:27","77":"Jan 27 at 4:46","78":"Jan 27 at 4:34","79":"Jan 26 at 22:06","80":"Jan 26 at 19:38","81":"Jan 26 at 14:40","82":"Jan 26 at 13:06","83":"Jan 25 at 18:45","84":"Jan 25 at 13:46","85":"Jan 25 at 13:02","86":"Jan 25 at 7:26","87":"Jan 24 at 19:18","88":"Jan 24 at 10:04","89":"Jan 24 at 6:41","90":"Jan 23 at 17:39","91":"Jan 23 at 17:14","92":"Jan 23 at 13:46","93":"Jan 23 at 11:31","94":"Jan 23 at 6:03","95":"Jan 22 at 17:27","96":"Jan 22 at 10:40","97":"Jan 21 at 18:49","98":"Jan 20 at 19:55","99":"Jan 19 at 22:03","100":"Jan 19 at 17:31","101":"Jan 19 at 13:39","102":"Jan 18 at 19:12","103":"Jan 18 at 13:01","104":"Jan 18 at 11:38","105":"Jan 18 at 7:23","106":"Jan 18 at 3:05","107":"Jan 17 at 22:05","108":"Jan 17 at 21:38","109":"Jan 17 at 3:05","110":"Jan 16 at 14:12","111":"Jan 16 at 6:06","112":"Jan 16 at 4:46","113":"Jan 15 at 20:22","114":"Jan 15 at 13:11","115":"Jan 15 at 8:00","116":"Jan 15 at 6:51","117":"Jan 14 at 18:53","118":"Jan 14 at 17:15","119":"Jan 14 at 11:50","120":"Jan 14 at 4:08","121":"Jan 13 at 13:19","122":"Jan 13 at 2:49","123":"Jan 12 at 18:09","124":"Jan 12 at 6:50","125":"Jan 11 at 21:07","126":"Jan 11 at 16:38","127":"Jan 11 at 10:19","128":"Jan 11 at 9:28","129":"Jan 11 at 7:43","130":"Jan 10 at 17:46","131":"Jan 10 at 9:53","132":"Jan 10 at 9:47","133":"Jan 10 at 9:37","134":"Jan 10 at 9:02","135":"Jan 9 at 18:42","136":"Jan 9 at 11:14","137":"Jan 9 at 8:35","138":"Jan 8 at 19:28","139":"Jan 8 at 15:37","140":"Jan 7 at 23:35","141":"Jan 7 at 15:09","142":"Jan 7 at 11:49","143":"Jan 7 at 11:17","144":"Jan 7 at 1:08","145":"Jan 6 at 23:17","146":"Jan 6 at 19:33","147":"Jan 6 at 12:00","148":"Jan 6 at 11:59","149":"Jan 6 at 10:26","150":"Jan 5 at 14:09","151":"Jan 5 at 13:39","152":"Jan 5 at 11:02","153":"Jan 5 at 7:17","154":"Jan 5 at 6:57","155":"Jan 4 at 19:35","156":"Jan 4 at 16:02","157":"Jan 4 at 15:44","158":"Jan 4 at 10:59","159":"Jan 4 at 10:19","160":"Jan 3 at 11:56","161":"Jan 3 at 11:09","162":"Jan 3 at 8:30","163":"Jan 2 at 22:11","164":"Jan 2 at 18:09","165":"Jan 2 at 11:04","166":"Jan 2 at 5:08","167":"Jan 1 at 13:24"},"reputation score for questioner":{"0":"71","1":"1","2":"9","3":"1","4":"1","5":"1,043","6":"21","7":"89","8":"1","9":"1","10":"3","11":"1","12":"11","13":"1","14":"1","15":null,"16":"31","17":"3","18":"1","19":"1","20":"7","21":"318","22":"1","23":"33","24":"43","25":"11","26":"17","27":"193","28":"1","29":"23","30":"11","31":"81","32":"350","33":"601","34":"23","35":"21","36":"13","37":"3","38":"1","39":"131","40":"1","41":"109","42":"27","43":"1","44":"1","45":"11","46":"1","47":"1","48":"1","49":"1","50":"1","51":"3","52":"21","53":"109","54":"61","55":"1","56":"55","57":"3,560","58":"33","59":"1","60":"1","61":"1","62":"1","63":"1","64":"140","65":"1","66":"6,508","67":"147","68":"1","69":"6,508","70":"29","71":"1","72":"5","73":"170","74":"21","75":"13","76":"302","77":"95","78":"1","79":"43","80":"145","81":"1","82":"1","83":"5","84":"17.8k","85":"11","86":"1","87":"1","88":"13","89":"29","90":"1","91":"1","92":"302","93":"134","94":"13","95":"1","96":"1","97":"1","98":"112","99":"1","100":"746","101":"874","102":"1","103":"1","104":"1","105":"21","106":"1","107":"165","108":"345","109":"21","110":"33","111":"1","112":"1","113":"43","114":"69","115":"1,664","116":"861","117":"1,098","118":"1","119":"11","120":"21","121":"11","122":"53","123":"1","124":"1","125":"11","126":"1","127":"31","128":"11","129":"11","130":"27","131":"1","132":"19","133":"372","134":"1","135":"1","136":"11","137":"35","138":"429","139":"11","140":"1","141":"3,003","142":"37","143":"11","144":"17","145":"3","146":"4,179","147":"31","148":"1","149":"3","150":"127","151":"1","152":"75","153":"1","154":"1","155":"45","156":"1","157":"1","158":"25","159":"1","160":"1","161":"89","162":"119","163":"11","164":"46","165":"1","166":"11","167":"45"},"User name for questioning":{"0":"OpperDev","1":"LOHA","2":"Trent Kennelly","3":"bounmath","4":"Decentralized Developer","5":"WrRaThY","6":"Vinicius Lopes","7":"Benjamin","8":"Raj Nakrani","9":"LIFE HACKER","10":"391","11":"Darshana Mule","12":"John Pioc","13":"Abdulhamid","14":"0xdaG","15":null,"16":"Ketan Jakhar","17":"dracodes","18":"Hoang Anh Phan","19":"Angad Manroy","20":"Ali Hashim","21":"Asir Shahriar Roudra","22":"Janith Wanninayake","23":"Kon","24":"Bob Dobbs","25":"Apenguindeveloper","26":"user18039014","27":"patrick","28":"Aarav Dayal","29":"Alfaz Sozib","30":"Huowuge","31":"Fares_Hassen","32":"Hanif Shaikh","33":"Bukenya KizzaRoland","34":"Danny D","35":"Caleb Kutz","36":"Gap","37":"391","38":"kitton ebnalov","39":"Eric Lee","40":"Namit Patel","41":"XypriL","42":"Abhishek Yadav","43":"userid81214293","44":"Splendor White","45":"Huowuge","46":"0xDegen","47":"Abdulhamid","48":"Syed Isa","49":"sri vijay","50":"MoBerlin","51":"391","52":"Kai_11","53":"XaEk","54":"SrikanthVarma A","55":"Bishwaroop Dey","56":"Ankit Pareek","57":"suchislife","58":"Arun","59":"stan14","60":"Warlock","61":"gdrag0n","62":"sam","63":"manman","64":"Dan Gerchcovich","65":"Karan Singh","66":"u2gilles","67":"djd","68":"ro_ma","69":"u2gilles","70":"Parshant Singh","71":"Himanshu","72":"Shadq","73":"codemonkeytony","74":"hamssa  hassnawee","75":"zl zero","76":"Lovely","77":"Robin Khan","78":"detoso","79":"Murat Saglam","80":"Angelo Schuler Piletti","81":"rexydye","82":"J\u00a8\u00a6r\u00a8\u00a6my Combe","83":"Shadq","84":"pheromix","85":"Ashrita Gupta","86":"kush","87":"Hash1","88":"yeshwanth b","89":"vijay kumar","90":"Based Potato","91":"alwin","92":"Lovely","93":"std124_lf","94":"Raunak Nahar","95":"sola","96":"jbetoras","97":"Muhammad Ali","98":"user08152017","99":"ibrahim Ramzan","100":"Michael Moreno","101":"Tahlil","102":"sonia","103":"Ashish Singh","104":"learner","105":"Saumya Prasad","106":"K1ngAdrian","107":"user3102158","108":"chicco.caste21","109":"itsnot<crypto>its<crypto>e","110":"Kon","111":"king1982","112":"Achyut Adhikari","113":"Marco C. Stewart","114":"Hassam Ullah","115":"Anters Bear","116":"nistelrooy41001662","117":"jip<py>joe4","118":"49_Shorna","119":"Alexandra","120":"Kunal Badole","121":"Ali Jouahri","122":"Sam","123":"\u00bd\u00ad\u00d0\u00a1\u00b0\u00d7","124":"clintonaikhu","125":"Tsss","126":"novice","127":"Piyush Yadav","128":"Mueed","129":"PRINCESS PRANITI","130":"Avinash Kumar Singh","131":"Bailan","132":"Stephen Kresov","133":"Emile Haas","134":"king1982","135":"owodunni david","136":"Devansh Gupta","137":"GPaul","138":"ekimpl","139":"nightlyprogrammer","140":"J.O.E","141":"iLiA","142":"Syre Musk","143":"Navid Far","144":"Fithos","145":"Abbas makhzomi","146":"KubiK888","147":"Vishal kumar","148":"Anh Duong","149":"Anim3Add1ct","150":"World's famous people","151":"Ches","152":"insaneray","153":"Seyar","154":"Divyansh Gupta","155":"asusrid","156":"OXI","157":"Krina Shah","158":"Ariel Kotch","159":"scluk","160":"evan","161":"Benjamin","162":"Ganesh Sivakumar","163":"Neon RolePlay","164":"MALIK forz","165":"Divyansh Gupta","166":"???","167":"NivN"},"User for questioning_link":{"0":"https:\/\/stackoverflow.com\/users\/11246977\/opperdev","1":"https:\/\/stackoverflow.com\/users\/21182868\/loha","2":"https:\/\/stackoverflow.com\/users\/20509822\/trent-kennelly","3":"https:\/\/stackoverflow.com\/users\/21179604\/bounmath","4":"https:\/\/stackoverflow.com\/users\/9377175\/decentralized-developer","5":"https:\/\/stackoverflow.com\/users\/1402861\/wrrathy","6":"https:\/\/stackoverflow.com\/users\/21174104\/vinicius-lopes","7":"https:\/\/stackoverflow.com\/users\/12489459\/benjamin","8":"https:\/\/stackoverflow.com\/users\/21166057\/raj-nakrani","9":"https:\/\/stackoverflow.com\/users\/13300574\/life-hacker","10":"https:\/\/stackoverflow.com\/users\/21122454\/0391","11":"https:\/\/stackoverflow.com\/users\/19304392\/darshana-mule","12":"https:\/\/stackoverflow.com\/users\/17808474\/john-pioc","13":"https:\/\/stackoverflow.com\/users\/21124538\/abdulhamid","14":"https:\/\/stackoverflow.com\/users\/21163496\/0xdag","15":null,"16":"https:\/\/stackoverflow.com\/users\/15199431\/ketan-jakhar","17":"https:\/\/stackoverflow.com\/users\/14285166\/dracodes","18":"https:\/\/stackoverflow.com\/users\/16841696\/hoang-anh-phan","19":"https:\/\/stackoverflow.com\/users\/19429849\/angad-manroy","20":"https:\/\/stackoverflow.com\/users\/18332847\/ali-hashim","21":"https:\/\/stackoverflow.com\/users\/13191278\/asir-shahriar-roudra","22":"https:\/\/stackoverflow.com\/users\/21158828\/janith-wanninayake","23":"https:\/\/stackoverflow.com\/users\/20525176\/kon","24":"https:\/\/stackoverflow.com\/users\/12128677\/bob-dobbs","25":"https:\/\/stackoverflow.com\/users\/21152147\/apenguindeveloper","26":"https:\/\/stackoverflow.com\/users\/18039014\/user18039014","27":"https:\/\/stackoverflow.com\/users\/14157298\/patrick","28":"https:\/\/stackoverflow.com\/users\/19327072\/aarav-dayal","29":"https:\/\/stackoverflow.com\/users\/15443889\/alfaz-sozib","30":"https:\/\/stackoverflow.com\/users\/20979285\/huowuge","31":"https:\/\/stackoverflow.com\/users\/20310974\/fares-hassen","32":"https:\/\/stackoverflow.com\/users\/19493508\/hanif-shaikh","33":"https:\/\/stackoverflow.com\/users\/14123774\/bukenya-kizzaroland","34":"https:\/\/stackoverflow.com\/users\/18314416\/danny-d","35":"https:\/\/stackoverflow.com\/users\/20006874\/caleb-kutz","36":"https:\/\/stackoverflow.com\/users\/20423979\/gap","37":"https:\/\/stackoverflow.com\/users\/21122454\/0391","38":"https:\/\/stackoverflow.com\/users\/21135540\/kitton-ebnalov","39":"https:\/\/stackoverflow.com\/users\/13051498\/eric-lee","40":"https:\/\/stackoverflow.com\/users\/21111881\/namit-patel","41":"https:\/\/stackoverflow.com\/users\/16153243\/xypril","42":"https:\/\/stackoverflow.com\/users\/18017232\/abhishek-yadav","43":"https:\/\/stackoverflow.com\/users\/20797789\/userid81214293","44":"https:\/\/stackoverflow.com\/users\/20624293\/splendor-white","45":"https:\/\/stackoverflow.com\/users\/20979285\/huowuge","46":"https:\/\/stackoverflow.com\/users\/21126112\/0xdegen","47":"https:\/\/stackoverflow.com\/users\/21124538\/abdulhamid","48":"https:\/\/stackoverflow.com\/users\/21124423\/syed-isa","49":"https:\/\/stackoverflow.com\/users\/19379944\/sri-vijay","50":"https:\/\/stackoverflow.com\/users\/16690149\/moberlin","51":"https:\/\/stackoverflow.com\/users\/21122454\/0391","52":"https:\/\/stackoverflow.com\/users\/15969144\/kai-11","53":"https:\/\/stackoverflow.com\/users\/21020292\/xaek","54":"https:\/\/stackoverflow.com\/users\/8832739\/srikanthvarma-a","55":"https:\/\/stackoverflow.com\/users\/21117465\/bishwaroop-dey","56":"https:\/\/stackoverflow.com\/users\/14178025\/ankit-pareek","57":"https:\/\/stackoverflow.com\/users\/687137\/suchislife","58":"https:\/\/stackoverflow.com\/users\/6873810\/arun","59":"https:\/\/stackoverflow.com\/users\/21112489\/stan14","60":"https:\/\/stackoverflow.com\/users\/19899047\/warlock","61":"https:\/\/stackoverflow.com\/users\/21109095\/gdrag0n","62":"https:\/\/stackoverflow.com\/users\/17106677\/sam","63":"https:\/\/stackoverflow.com\/users\/17603927\/manman","64":"https:\/\/stackoverflow.com\/users\/7102846\/dan-gerchcovich","65":"https:\/\/stackoverflow.com\/users\/16359245\/karan-singh","66":"https:\/\/stackoverflow.com\/users\/3131604\/u2gilles","67":"https:\/\/stackoverflow.com\/users\/16557524\/djd","68":"https:\/\/stackoverflow.com\/users\/21102098\/ro-ma","69":"https:\/\/stackoverflow.com\/users\/3131604\/u2gilles","70":"https:\/\/stackoverflow.com\/users\/20786425\/parshant-singh","71":"https:\/\/stackoverflow.com\/users\/21098650\/himanshu","72":"https:\/\/stackoverflow.com\/users\/14302886\/shadq","73":"https:\/\/stackoverflow.com\/users\/4029296\/codemonkeytony","74":"https:\/\/stackoverflow.com\/users\/19768306\/hamssa-hassnawee","75":"https:\/\/stackoverflow.com\/users\/21097205\/zl-zero","76":"https:\/\/stackoverflow.com\/users\/16131186\/lovely","77":"https:\/\/stackoverflow.com\/users\/13026962\/robin-khan","78":"https:\/\/stackoverflow.com\/users\/13931513\/detoso","79":"https:\/\/stackoverflow.com\/users\/10580813\/murat-saglam","80":"https:\/\/stackoverflow.com\/users\/15650422\/angelo-schuler-piletti","81":"https:\/\/stackoverflow.com\/users\/16617420\/rexydye","82":"https:\/\/stackoverflow.com\/users\/18046526\/j%c3%a9r%c3%a9my-combe","83":"https:\/\/stackoverflow.com\/users\/14302886\/shadq","84":"https:\/\/stackoverflow.com\/users\/1045704\/pheromix","85":"https:\/\/stackoverflow.com\/users\/20516352\/ashrita-gupta","86":"https:\/\/stackoverflow.com\/users\/20387820\/kush","87":"https:\/\/stackoverflow.com\/users\/21075107\/hash1","88":"https:\/\/stackoverflow.com\/users\/21071709\/yeshwanth-b","89":"https:\/\/stackoverflow.com\/users\/19737896\/vijay-kumar","90":"https:\/\/stackoverflow.com\/users\/21067552\/based-potato","91":"https:\/\/stackoverflow.com\/users\/17554929\/alwin","92":"https:\/\/stackoverflow.com\/users\/16131186\/lovely","93":"https:\/\/stackoverflow.com\/users\/16881135\/std124-lf","94":"https:\/\/stackoverflow.com\/users\/15896627\/raunak-nahar","95":"https:\/\/stackoverflow.com\/users\/21061215\/sola","96":"https:\/\/stackoverflow.com\/users\/21059552\/jbetoras","97":"https:\/\/stackoverflow.com\/users\/21056870\/muhammad-ali","98":"https:\/\/stackoverflow.com\/users\/2370461\/user08152017","99":"https:\/\/stackoverflow.com\/users\/21046585\/ibrahim-ramzan","100":"https:\/\/stackoverflow.com\/users\/12574341\/michael-moreno","101":"https:\/\/stackoverflow.com\/users\/7769344\/tahlil","102":"https:\/\/stackoverflow.com\/users\/21038522\/sonia","103":"https:\/\/stackoverflow.com\/users\/21035913\/ashish-singh","104":"https:\/\/stackoverflow.com\/users\/21034331\/learner","105":"https:\/\/stackoverflow.com\/users\/17663452\/saumya-prasad","106":"https:\/\/stackoverflow.com\/users\/21032410\/k1ngadrian","107":"https:\/\/stackoverflow.com\/users\/3102158\/user3102158","108":"https:\/\/stackoverflow.com\/users\/8920392\/chicco-caste21","109":"https:\/\/stackoverflow.com\/users\/19212006\/itsnot<crypto>its<crypto>e","110":"https:\/\/stackoverflow.com\/users\/20525176\/kon","111":"https:\/\/stackoverflow.com\/users\/20972446\/king1982","112":"https:\/\/stackoverflow.com\/users\/19039963\/achyut-adhikari","113":"https:\/\/stackoverflow.com\/users\/20105861\/marco-c-stewart","114":"https:\/\/stackoverflow.com\/users\/14436172\/hassam-ullah","115":"https:\/\/stackoverflow.com\/users\/6158471\/anters-bear","116":"https:\/\/stackoverflow.com\/users\/4172765\/nistelrooy41001662","117":"https:\/\/stackoverflow.com\/users\/9476628\/jip<py>joe4","118":"https:\/\/stackoverflow.com\/users\/11932469\/49-shorna","119":"https:\/\/stackoverflow.com\/users\/21006253\/alexandra","120":"https:\/\/stackoverflow.com\/users\/18629021\/kunal-badole","121":"https:\/\/stackoverflow.com\/users\/20852656\/ali-jouahri","122":"https:\/\/stackoverflow.com\/users\/19595785\/sam","123":"https:\/\/stackoverflow.com\/users\/20994232\/%e6%b1%9f%e5%b0%8f%e7%99%bd","124":"https:\/\/stackoverflow.com\/users\/19859851\/clintonaikhu","125":"https:\/\/stackoverflow.com\/users\/19607309\/tsss","126":"https:\/\/stackoverflow.com\/users\/20984701\/novice","127":"https:\/\/stackoverflow.com\/users\/18110288\/piyush-yadav","128":"https:\/\/stackoverflow.com\/users\/14043623\/mueed","129":"https:\/\/stackoverflow.com\/users\/9507066\/princess-praniti","130":"https:\/\/stackoverflow.com\/users\/17524907\/avinash-kumar-singh","131":"https:\/\/stackoverflow.com\/users\/20972760\/bailan","132":"https:\/\/stackoverflow.com\/users\/20717348\/stephen-kresov","133":"https:\/\/stackoverflow.com\/users\/10802002\/emile-haas","134":"https:\/\/stackoverflow.com\/users\/20972446\/king1982","135":"https:\/\/stackoverflow.com\/users\/13657813\/owodunni-david","136":"https:\/\/stackoverflow.com\/users\/20888913\/devansh-gupta","137":"https:\/\/stackoverflow.com\/users\/7248322\/gpaul","138":"https:\/\/stackoverflow.com\/users\/1285155\/ekimpl","139":"https:\/\/stackoverflow.com\/users\/20953460\/nightlyprogrammer","140":"https:\/\/stackoverflow.com\/users\/20954895\/j-o-e","141":"https:\/\/stackoverflow.com\/users\/10404891\/ilia","142":"https:\/\/stackoverflow.com\/users\/11453634\/syre-musk","143":"https:\/\/stackoverflow.com\/users\/10076700\/navid-far","144":"https:\/\/stackoverflow.com\/users\/8531654\/fithos","145":"https:\/\/stackoverflow.com\/users\/16889189\/abbas-makhzomi","146":"https:\/\/stackoverflow.com\/users\/3635544\/kubik888","147":"https:\/\/stackoverflow.com\/users\/20688450\/vishal-kumar","148":"https:\/\/stackoverflow.com\/users\/14001520\/anh-duong","149":"https:\/\/stackoverflow.com\/users\/16395089\/anim3add1ct","150":"https:\/\/stackoverflow.com\/users\/19850691\/worlds-famous-people","151":"https:\/\/stackoverflow.com\/users\/20936902\/ches","152":"https:\/\/stackoverflow.com\/users\/2956396\/insaneray","153":"https:\/\/stackoverflow.com\/users\/20069075\/seyar","154":"https:\/\/stackoverflow.com\/users\/15064505\/divyansh-gupta","155":"https:\/\/stackoverflow.com\/users\/9563674\/asusrid","156":"https:\/\/stackoverflow.com\/users\/16193560\/oxi","157":"https:\/\/stackoverflow.com\/users\/14787138\/krina-shah","158":"https:\/\/stackoverflow.com\/users\/20878664\/ariel-kotch","159":"https:\/\/stackoverflow.com\/users\/12329340\/scluk","160":"https:\/\/stackoverflow.com\/users\/19179888\/evan","161":"https:\/\/stackoverflow.com\/users\/12489459\/benjamin","162":"https:\/\/stackoverflow.com\/users\/12223786\/ganesh-sivakumar","163":"https:\/\/stackoverflow.com\/users\/20613024\/neon-roleplay","164":"https:\/\/stackoverflow.com\/users\/16829490\/malik-forz","165":"https:\/\/stackoverflow.com\/users\/15064505\/divyansh-gupta","166":"https:\/\/stackoverflow.com\/users\/13805200\/%ec%9c%a4%ec%84%b1%eb%af%bc","167":"https:\/\/stackoverflow.com\/users\/3578188\/nivn"},"Headline":{"0":"Create a <crypto> payment forwarder","1":"Wallet drained of 110 UNI \"Hacked\" [closed]","2":"Uniswap getAmountsIn Gives WILD Results","3":"ValueError: Unknown URI - must be a path to an IPC socket, a websocket beginning with 'ws' or a URL beginning with 'http'","4":"Error HH801: Plugin @nomicfoundation\/<hardhat>-toolbox requires the following dependencies to be installed:","5":"QR code format standard for blockchain transactions","6":"Transaction has been reverted by the <evm> ( <pancakeswap> manual trade bot in js)","7":"serviceHub.startFlow from a cordaService class versus subFlow calling from Corda flow","8":"TypeError: Cannot read properties of un<defi>ned (reading 'JsonRpcProvider');","9":"File was processed with loaders: * .\/node_modules\/<babel-loader>\/lib\/index.js . You may need an additional loader to handle the result of these loaders","10":"Insufficient balance when transferring <token> from another address, after migrating the data from old contract to new contract","11":"I'm getting this error while using <truffle> <react> box with command","12":"<hardhat> throws 'ProviderError: HttpProviderError' when I run my deploy script","13":"Is it possible to sign multiple messages using MetaMask all at once?","14":"I'm having some issues querying 24h volume data from <subgraph>. Is anyone able to help out? [closed]","15":null,"16":"Error: Error occurred while verifying paramssubVerifierParams need to equal threshold 1 while using the web3auth\/node-sdk","17":"Type Error Cannot read properties of un<defi>ned (reading 'Web3Provider') at fetchingData","18":"How to write this encoding algorithm in <solidity>","19":"ingress_expiry not within expected range error in candid ui. <motoko> language, console prompted a breaking change on running dfx deploy","20":"Switch metamask networks","21":"Getting an error \"TypeError: Cannot read properties of un<defi>ned (reading 'AlchemyProvider')\" in <ether>JS","22":"Is there a way to create a blockchain that will act as a <database> to my web app?","23":"Sending USDTC to a new Tron address in testnet --\"Unrecorded <token>\"","24":"Why not use a stablecoin as the base currency of a blockchain? [closed]","25":"Issue with <hyperledger> fabric go build command","26":"How can I get chain id explorer?","27":"Nextjs 13.0.2 and <ether>s why is my Provider un<defi>ned?","28":"Do nodes that are not validators verify blocks in proof of stake?","29":"logout metamask user onClick a button how can I implement it?","30":"Should I write a function on chain in smart contract or off chain?","31":"<solana> <nft> Collection update creators and royalties address","32":"Blockchain Integration in <android> [closed]","33":"Error: Invalid email\/password combination with Node.js and <mongodb>","34":"<solidity>: Call Deposit function with value","35":"getBalance and getBlock not working web3 with next.js","36":"Can ETH miners check all the data which is stored in <ether>eum?","37":"TypeError: Member \"length\" not found or not visible after argument-dependent lookup in mapping(address => mapping(uint256 => uint256))","38":"How to create a bnb1... address for BNB-beacon-chain from mnemonic in <python>?","39":"[Ganache\/ <truffle>]revert TX Limit Exceeded -- Reason given: TX Limit Exceeded","40":"Where to practice <solidity> after learning its basics? [closed]","41":"ERC721: invalid <token> ID when trying to connect two smart contracts","42":"The transaction has been reverted to the initial state. The called function should be payable if you send value","43":"Getting <bitcoin> from block to wallet [closed]","44":"Why can't I open <remix> IDE in my browser?","45":"When calling a smart contract function, do the params record on blockchain?","46":"How can I get transactions from a wallet using alchemy websockets","47":"Can I create private eth network that no external one can join it?","48":"kiwi <token> pool batchpayment address to <defi>ned wallet","49":"How to Send Bep-20 <token> to Multiple addresses without using for loop in web3 or <ether>s","50":"How is it possible to make random\/pseudorandom numbers in the <move> language?","51":"\"Not Enough Fund\" when doing buying <token> transaction in <solidity> with <remix> IDE","52":"Unable to deploy the vrfcoordinatorv2mock on the local development environment","53":"Does `web3.eth.getLogs` find reverted transactions?","54":"Unable to transact Operator.setAuthorizedSenders on <chainlink> - Goerli","55":"How to re<move> a user from <hyperledger> Fabric Network","56":"Not able to bridge deployed ERC20 <token> through POS Bridge using <matic>js, getting this error \"execution reverted: ERC20: approve to the zero address\"","57":"Uniswap v2 swap() function. What are balance0 & balance1?","58":"Sync Erigon to Geth","59":"Approximating cost of using <chainlink> for custom <api>","60":"Why is <chainlink> oracle function call failing?","61":"Guidance in Application of Bloackchain Based DDoS Mitigation Stragtegies","62":"How to automate a <chainlink> Job to call a smart-contract function that requires the caller to be a given admin address?","63":"Faucet contract only permits owner to perform transactions","64":"signature verification failed; please verify account number and chain-id: unauthorized","65":"How to get <ether> for Goerli Testnet online faucets aren't working?","66":"web3<py> <ether>eum<testerprovider> - Basic interactions with a smart contract fail","67":"<solana> Anchor Lang: anchor init creates <project> with TypeError: Cannot read properties of un<defi>ned (reading 'methods')","68":"Not able to correctly send a transaction - BSC Testnet & Web3","69":"web3<py> <ether>eum<testerprovider> - Basic transaction fails","70":"Error while creating DID using Didkit-wasm library","71":"I've tried <npm> install --legacy-peer-deps","72":"Why Uniswap V2's function getPair() is returning a null address","73":"Chialisp environment set up","74":"ReferenceError: Sonr01 is not <defi>ned","75":"web3.<py> function get_block tranactions is not in the current block","76":"What is different nami wallet signing and payment.skey signing?","77":"How to get the total number of cardano <token> listed on a marketplace by policyId and script address of the marketplace?","78":"Is this a correct way to calculate price for <token>s with different decimals?","79":"Why does transact and wait behave differently when within a function is behaving different?","80":"N<ether>eum sending <ether> fail","81":"How can i get a list of latest <ether>eum transactions?","82":"How to trade on Opensea with smart contract <solidity>","83":"Is there a way to get the value of a <crypto> in another one with uniswap","84":"Cannot make connection to metamask","85":"Multicall taking 300 seconds to return result","86":"Private <ether>eum blockchain not working for static ip","87":"How i make my smart-contract interact with my <token>?","88":"Private <ether>eum blockchain deployment on <kubernetes>","89":"Not able to create a network using @aws-sdk\/client-managedblockchain","90":"I am trying to use the <python> blocknative SDK but I keep receiving a Handshake Error and timing out","91":"I'm trying to run a js script on the blockchain using <hardhat>. After running it in the command line it throws an error","92":"how to send contract parameters when send <nft> to marketplace address at cardano?","93":"Trying to get <token> info from Smart Contract address - bitQuery <api>s","94":"How is the block size of <bitcoin> 1MB whereas the algorithm it uses (SHA-256) has a block size of only 512 bits?","95":"Failed to deploy <hyperledger-fabric>","96":"TypeError: contract.methods.balanceOf is not a function","97":"Any blockchain bridge with <api> for BTC to WBTC conversion?","98":"How to link all transactions related to one policy number in blockchain","99":"opensea <api> v2 giving \"invalid signature\" when try to list <nft> on <polygon> network","100":"Why is constant node participation necessary in blockchains?","101":"Deploying to fuji network with <hardhat> creates HttpProviderError","102":"how to implement the ERC20 <token> transferFrom method in <solidity> smartcontract","103":"Error HH411: The library @<hardhat>\/console.so, imported from contracts\/<nft>Marketplace.sol, is not installed. Try installing it using <npm>","104":"Blockchain outbound oracle code sample in <solidity>","105":"What does 'need genesis.json file as the only argument' mean?","106":"\"Parsing error: Unexpected <token>, expected \\\",\\\" (20:2)\", ')' expected(1005)","107":"<solidity> getting different selector","108":"<chainlink> async bridge task returns HTTP Error 422","109":"Advantage\/Disadvantage between <chainlink> VRF and an off-chain random number transaction performed by your server?","110":"Converting a TRON address to Base58 doesn't work","111":"ECDSA : MalformedPointError: Length of string does not match lengths of any of the enabled (raw uncompressed hybrid compressed) encodings of the curve","112":"useContractWrite function not working in useEffect hook when dependency Array changes","113":"How to identify wh<ether> an TX is a simple incoming \"SOL\/<token> transfer\" one?","114":"How to stop a <hardhat> node running on <localhost>?","115":"How Threshold Signatures have the same Address \/ Public Key","116":"How to generate the genesis key pair for Proof of Stake?","117":"Tor<py> Stream #4: closed already; Connection broken: IncompleteRead(634 bytes read, 3974 more expected)","118":"Deployment issue using sepoila test network","119":"GET .json file 404 not found when loading a smart contract","120":"cargo build-bpf command not working for <solana>","121":"Smart contract works as intended when deployed in <remix> VM but not in Goerli Testnet","122":"Logged events not showing up in Ganache or in Transaction log","123":"initialize Issue about Corda's flow test","124":"theGraph: create <subgraph> loading but not working","125":"My function call is returning expensive gas cost on metamask","126":"Not seeing json file under contracts after compiling a contract on Brownie","127":"Plugin @nomicfoundation\/<hardhat>-toolbox requires the following dependencies to be installed","128":"How to make a Factory Contract which deploys a UUPS Proxy?","129":"Is there any possible ways to auto<matic>ally fetch the DEX interacted users wallet addresses in the <ether>scan.io site?","130":"How Web3j is used to get the SC wrappers and operate with them using Java (Eclipse ide)","131":"How to use cosmos <token>view <api> with postman in 2023\u00a3\u00bf","132":"Near smart-contract, How to change beneficiary in \"Donation\" from documentation?","133":"How do I limit the max supply of an Elrond <nft> collection?","134":"<python> : {'detail': [{'loc': ['body'], 'msg': 'value is not a valid dict', 'type': 'type_error.dict'}]}","135":"Does flashbots signer wallet (a compromised wallet) with web.<py> requires wallet to have a eth in it","136":"\"Failed during: git fetch --force origin refs\/heads\/master:refs\/remotes\/origin\/master \"","137":"<pancakeswap> Response is encoded","138":"Get CALL_EXCEPTION details","139":"Flamenco rendering farm","140":"Pipx can not build packages when trying to install eth-brownie","141":"Meta transactions for third party contract","142":"<crypto>currency wallet mnemonic seed phrase","143":"How to verify TransparentUpgradeableProxy which is deployed using create2?","144":"Giving maximum allowance of a <token> to a contract. What are best practices?","145":"Is there a chance that the tron wallet that I created is already used by someone? [closed]","146":"How to filter after group by in this Dune Analytics example?","147":"INVALID_SIGNATURE on hedera <nft> creation [closed]","148":"Does BNB Beacon Chain (Government chain) support smart contracts?","149":"For\/If Loop has no errors but does not push the value to the array","150":"Assertion failed error in minting using bn.js","151":"Error with Blockchain Test Difficulty Adjustment","152":"<solana> Web3 | Transaction success and returns no signature in some cases","153":"ParserError: Expected '{' but got 'constant' in <remix> IDE","154":"Enrollment certificate of user does not have the attribute values assigned to it when registering it using <hyperledger-fabric>-sdk-java","155":"How to transfer decimal <matic>s?","156":"<solana> spl-<token> transfer fee \"Error: Program(IncorrectProgramId)\"","157":"Cannot install blockchain_parser getting 'legacy-install-failure'","158":"Why do we need deployments.fixture?","159":"How to detect contract creation timestamp in <ether>eum blockchain nodes?","160":"How to decode data from uniswap transaction in <python>","161":"Does a Corda node communication with Notary is same as in case of another peer node?","162":"Flutter: how to send transaction to metamask using flutter_web3 package","163":"Tron trc20 address generation in Dart language","164":"Cannot read properties of un<defi>ned (reading '_hex') Next js buy<nft>","165":"Encountering the error \"Error: chaincode argument error: invalid character ']' after object key\"","166":"what is alt mempool in EIP-4337 (Account Abstraction)","167":"Creating a wallet on <ether> creates it on all EVN supported networks?"},"Question Posted time":{"0":"today","1":"today","2":"today","3":"today","4":"today","5":"yesterday","6":"yesterday","7":"yesterday","8":"yesterday","9":"yesterday","10":"yesterday","11":"yesterday","12":"yesterday","13":"2 days ago","14":"2 days ago","15":null,"16":"2 days ago","17":"2 days ago","18":"2 days ago","19":"3 days ago","20":"3 days ago","21":"3 days ago","22":"3 days ago","23":"3 days ago","24":"3 days ago","25":"4 days ago","26":"4 days ago","27":"4 days ago","28":"4 days ago","29":"5 days ago","30":"5 days ago","31":"5 days ago","32":"5 days ago","33":"5 days ago","34":"5 days ago","35":"6 days ago","36":"6 days ago","37":"6 days ago","38":"7 days ago","39":"6 days ago","40":"7 days ago","41":"7 days ago","42":"7 days ago","43":"8 days ago","44":"8 days ago","45":"8 days ago","46":"8 days ago","47":"8 days ago","48":"8 days ago","49":"8 days ago","50":"8 days ago","51":"8 days ago","52":"8 days ago","53":"9 days ago","54":"9 days ago","55":"9 days ago","56":"9 days ago","57":"10 days ago","58":"10 days ago","59":"10 days ago","60":"10 days ago","61":"10 days ago","62":"10 days ago","63":"10 days ago","64":"11 days ago","65":"11 days ago","66":"11 days ago","67":"11 days ago","68":"11 days ago","69":"11 days ago","70":"12 days ago","71":"12 days ago","72":"12 days ago","73":"12 days ago","74":"12 days ago","75":"12 days ago","76":"13 days ago","77":"13 days ago","78":"13 days ago","79":"14 days ago","80":"14 days ago","81":"14 days ago","82":"14 days ago","83":"15 days ago","84":"15 days ago","85":"15 days ago","86":"15 days ago","87":"16 days ago","88":"16 days ago","89":"16 days ago","90":"17 days ago","91":"17 days ago","92":"17 days ago","93":"17 days ago","94":"17 days ago","95":"18 days ago","96":"18 days ago","97":"19 days ago","98":"20 days ago","99":"21 days ago","100":"21 days ago","101":"21 days ago","102":"22 days ago","103":"22 days ago","104":"22 days ago","105":"22 days ago","106":"22 days ago","107":"23 days ago","108":"23 days ago","109":"23 days ago","110":"24 days ago","111":"24 days ago","112":"24 days ago","113":"25 days ago","114":"25 days ago","115":"25 days ago","116":"25 days ago","117":"26 days ago","118":"26 days ago","119":"26 days ago","120":"26 days ago","121":"27 days ago","122":"27 days ago","123":"28 days ago","124":"28 days ago","125":"29 days ago","126":"29 days ago","127":"29 days ago","128":"29 days ago","129":"29 days ago","130":"30 days ago","131":"30 days ago","132":"30 days ago","133":"30 days ago","134":"30 days ago","135":"1 month ago","136":"1 month ago","137":"1 month ago","138":"1 month ago","139":"1 month ago","140":"1 month ago","141":"1 month ago","142":"1 month ago","143":"1 month ago","144":"1 month ago","145":"1 month ago","146":"1 month ago","147":"1 month ago","148":"1 month ago","149":"1 month ago","150":"1 month ago","151":"1 month ago","152":"1 month ago","153":"1 month ago","154":"1 month ago","155":"1 month ago","156":"1 month ago","157":"1 month ago","158":"1 month ago","159":"1 month ago","160":"1 month ago","161":"1 month ago","162":"1 month ago","163":"1 month ago","164":"1 month ago","165":"1 month ago","166":"1 month ago","167":"1 month ago"},"Last modified time":{"0":"today","1":"today","2":"today","3":"today","4":"today","5":"yesterday","6":"yesterday","7":"yesterday","8":"yesterday","9":"yesterday","10":"yesterday","11":"yesterday","12":"yesterday","13":"yesterday","14":"2 days ago","15":null,"16":"2 days ago","17":"2 days ago","18":"2 days ago","19":"3 days ago","20":"3 days ago","21":"3 days ago","22":"3 days ago","23":"3 days ago","24":"3 days ago","25":"2 days ago","26":"3 days ago","27":"3 days ago","28":"4 days ago","29":"5 days ago","30":"5 days ago","31":"5 days ago","32":"5 days ago","33":"5 days ago","34":"5 days ago","35":"5 days ago","36":"6 days ago","37":"6 days ago","38":"7 days ago","39":"6 days ago","40":"7 days ago","41":"7 days ago","42":"7 days ago","43":"8 days ago","44":"8 days ago","45":"8 days ago","46":"8 days ago","47":"8 days ago","48":"8 days ago","49":"3 days ago","50":"8 days ago","51":"8 days ago","52":"8 days ago","53":"9 days ago","54":"8 days ago","55":"9 days ago","56":"9 days ago","57":"10 days ago","58":"10 days ago","59":"7 days ago","60":"9 days ago","61":"10 days ago","62":"6 days ago","63":"8 days ago","64":"2 days ago","65":"yesterday","66":"11 days ago","67":"11 days ago","68":"11 days ago","69":"11 days ago","70":"12 days ago","71":"12 days ago","72":"12 days ago","73":"11 days ago","74":"12 days ago","75":"10 days ago","76":"13 days ago","77":"13 days ago","78":"13 days ago","79":"14 days ago","80":"14 days ago","81":"14 days ago","82":"14 days ago","83":"14 days ago","84":"14 days ago","85":"15 days ago","86":"15 days ago","87":"16 days ago","88":"16 days ago","89":"16 days ago","90":"17 days ago","91":"17 days ago","92":"15 days ago","93":"17 days ago","94":"15 days ago","95":"16 days ago","96":"18 days ago","97":"17 days ago","98":"20 days ago","99":"21 days ago","100":"21 days ago","101":"16 days ago","102":"21 days ago","103":"22 days ago","104":"22 days ago","105":"22 days ago","106":"22 days ago","107":"23 days ago","108":"22 days ago","109":"23 days ago","110":"24 days ago","111":"24 days ago","112":"24 days ago","113":"25 days ago","114":"22 days ago","115":"25 days ago","116":"25 days ago","117":"16 days ago","118":"26 days ago","119":"26 days ago","120":"26 days ago","121":"27 days ago","122":"27 days ago","123":"24 days ago","124":"28 days ago","125":"28 days ago","126":"24 days ago","127":"28 days ago","128":"29 days ago","129":"29 days ago","130":"30 days ago","131":"29 days ago","132":"30 days ago","133":"28 days ago","134":"30 days ago","135":"1 month ago","136":"1 month ago","137":"1 month ago","138":"1 month ago","139":"1 month ago","140":"1 month ago","141":"1 month ago","142":"1 month ago","143":"1 month ago","144":"1 month ago","145":"1 month ago","146":"1 month ago","147":"2 days ago","148":"1 month ago","149":"1 month ago","150":"1 month ago","151":"1 month ago","152":"1 month ago","153":"1 month ago","154":"1 month ago","155":"1 month ago","156":"30 days ago","157":"14 days ago","158":"1 month ago","159":"1 month ago","160":"28 days ago","161":"1 month ago","162":"1 month ago","163":"1 month ago","164":"1 month ago","165":"1 month ago","166":"1 month ago","167":"1 month ago"},"Problem Description":{"0":"I am trying to make my own <crypto>currency payment forwarder, (like https:\/\/<api>rone.com\/), but I am facing an issue, this is my code:\nconst <crypto>Account = require('send-<crypto>');\nconst WebSocket = require('ws');\nconst qrcode = require('qrcode-terminal');\nconst clipboardy = require('clipboardy');\n\nconst init = async function() {\n    const socket = new WebSocket('wss:\/\/ws.blockchain.info\/inv');\n    const wallets = [];\n    socket.on('open', stream => {\n        console.log('WebSocket opened');\n        setInterval(() => socket.send(JSON.stringify({\"op\": \"ping\"})), 10000);\n    });\n    socket.on('error', err => {\n        console.error(err.message);\n    });\n    socket.on('message', stream => {\n        try {\n            const response = JSON.parse(stream.toString('utf-8'));\n            if (JSON.stringify(response).includes('pong')) {\n                console.log('pong');\n                return;\n            }\n            console.log('SOCKET RESPONSE', response);\n            let outAddr = response.x.out[0].addr;\n            wallets.find(w => w.addr == outAddr).callback(response);\n        } catch (error) {\n            console.error(error);\n        }\n    })\n    const generateWallet = function() {\n        const privateKey = <crypto>Account.newPrivateKey();\n        const account = new <crypto>Account(privateKey);\n        return account;\n    }\n    \n    const genWalletAndWatch = async function(currency, callback) {\n        if (currency !== 'BTC') throw new Error('Only BTC is supported currently.');\n        const wallet = generateWallet();\n        wallets.push({addr: (await wallet.address('BTC')), callback});\n        socket.send(JSON.stringify({\"op\":\"addr_sub\", \"addr\": (await wallet.address(currency))}));\n        return (await wallet.address(currency));\n    }\n    socket.onopen = async function(e) {\n        const wallet = await genWalletAndWatch('BTC', (response) => {\n            console.log('ANSWER', JSON.stringify(response));\n        });\n        console.log(wallet);\n        qrcode.generate('<bitcoin>:'+wallet, {small: true});\n        clipboardy.writeSync(wallet);\n    }\n};\n\ninit();\n\nThis is a test code so there is no any express server or forward for the moment, I am only trying to create a btc address then to detect when a payment is done, but my problem is: The payment is never detected by the WebSocket, i can create a wallet without problem, I can ping the blockchain.info WebSocket <api> successfully, but the \"addr_sub\" never works, I've tried to send BTC etc, nothing is working.","1":"Closed. This question is not about programming or software development. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     This question does not appear to be about a specific programming problem, a software algorithm, or software tools primarily used by programmers. If you believe the question would be on-topic on another Stack Exchange site, you can leave a comment to explain where the question may be able to be answered.\n                \n                    \n                        Closed 4 hours ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nI was shocked and upset to discover that my wallet was drained of 110 UNI. I have provided a link to the transaction for your reference: https:\/\/bscscan.com\/tx\/0x83d3c6d1c10caa2ce1c3a3a3aef34b672ed309d48f0ae1145d0e5cf5255786fc.\nI understand that these types of incidents can happen, but it doesn't make it any less distressing for me. I have always been diligent in ensuring the security of my wallet and I cannot believe that this has happened. I would be so grateful if you could help me recover my funds.\nAdditionally, I would like to know if the contract I interacted with in this transaction is legitimate or if I was hacked.\nAppreciate any updates or information that you can provide. I am just trying to get to the bottom of what happened and prevent anything like this from happening in the future.\nThank you so much for taking the time to read my message. I am looking forward to hearing back from you soon and resolving this issue tog<ether>.","2":"I have a function inside an arbitrage bot that is supposed to use getAmountsIn to determine the profitability of the trade.  However, due to the current implementation, every single trade results in a high predicted loss.  Below, you'll find the relevant code, a printout displaying the heavy loss prediction, and my own math that seems to contradict the finding of getAmountsIn\nWhere is this implementation going wrong?\nThe code:\n        const determineProfitability = async (_routerPath, _<token>0Contract, _<token>0, _<token>1, uPairValue, sPairValue) => {\n\n            let reserves, exchangeToBuy, exchangeToSell, reserve0, reserve1\n\n            if (_routerPath[0]._address == uRouter._address) {\n                reserves = await getReserves(sPairValue)\n                otherReserves = await getReserves(uPairValue)\n                exchangeToBuy = 'Uniswap'\n                exchangeToSell = 'Sushiswap'\n\n            } else {\n                reserves = await getReserves(uPairValue)\n                otherReserves  = await getReserves(sPairValue)\n                exchangeToBuy = 'Sushiswap'\n                exchangeToSell = 'Uniswap'\n            }\n\n            try { \n\n                \/\/ v-- This is where the calculation seems to go wrong --v\n\n                let result = await _routerPath[0].methods.getAmountsIn(reserves[0], [_<token>1.address, _<token>0.address]).call()\n\n                const <token>0In = result[0]\n                const <token>1In = result[1] \n\n                result = await _routerPath[1].methods.getAmountsOut(<token>1In, [_<token>1.address, _<token>0.address]).call()\n\n                const { amountIn, amountOut } = await getEstimatedReturn(<token>0In, _routerPath, _<token>0, _<token>1)\n  \n                const gasPrice = await web3.eth.getGasPrice();\n                const gasCalc = (gasPrice * 21000).toString();\n                const estimatedGasCost = web3.utils.fromWei(gasCalc, '<ether>')                \n\n                let ethBalanceBefore = await web3.eth.getBalance(account) \n                ethBalanceBefore = web3.utils.fromWei(ethBalanceBefore, '<ether>')\n                const ethBalanceAfter = ethBalanceBefore - estimatedGasCost\n\n                const amountDifference = amountOut - amountIn\n                let wethBalanceBefore = await _<token>0Contract.methods.balanceOf(account).call() \n                wethBalanceBefore = web3.utils.fromWei(wethBalanceBefore, '<ether>')\n\n                const wethBalanceAfter = amountDifference + Number(wethBalanceBefore)\n                const wethBalanceDifference = wethBalanceAfter - Number(wethBalanceBefore)\n\n                const totalGained = wethBalanceDifference - Number(estimatedGasCost)\n\n                if (totalGained < 0 || amountOut < amountIn) {\n                    return false\n                }\n\n                amount = <token>0In\n                return true\n\n            } catch (error) {      \n                console.log(error)\n                return false\n            }\n\n        }\n\nHere's the printout:\nSwap Initiated on Sushiswap, Checking Price...\n\nCurrent Block: 16587119\n-----------------------------------------\nUNISWAP   | WETH\/FXS     | 142\nSUSHISWAP | WETH\/FXS     | 143\n\nPercentage Difference: -0.70%\n\nDetermining Direction...\n\nPotential Arbitrage Direction:\n\nBuy  -->     Sushiswap\nSell     -->     Uniswap\n\nDetermining Profitability...\n\nuPair Address: 0xecBa967D84fCF0405F6b32Bc45F4d36BfDBB2E81\nsPair Address: 0x61eB53ee427aB4E007d78A9134AaCb3101A2DC23\n\nReserves on Uniswap (0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D)\nWETH: 94.71862096607386039\nFXS: 13480.822150599881758659\n\nReserves on Sushiswap (0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F)\nOtherWETH: 1263.203664453649794659\nOtherFXS: 180432.001225073992589556\n\n<token>0In: 102.30694284028118994\n<token>1In: 13480.822150599881758659\nresult[0]: 13480.822150599881758659\nresult[1]: 47.288164798785998402\n\nEstimated amount of WETH needed to buy enough FXS on Sushiswap      | 102.30694284028118994\nEstimated amount of WETH returned after swapping FXS on Uniswap | 47.288164798785998402\n\n\u00a9\u00b0\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00d0\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00b4\n\u00a9\u00a6       (index)       \u00a9\u00a6         Values         \u00a9\u00a6\n\u00a9\u00c0\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00e0\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00c8\n\u00a9\u00a6 ETH Balance Before  \u00a9\u00a6 '0.011059137636702474' \u00a9\u00a6\n\u00a9\u00a6  ETH Balance After  \u00a9\u00a6  0.010474034995509474  \u00a9\u00a6\n\u00a9\u00a6   ETH Spent (gas)   \u00a9\u00a6  '0.000585102641193'   \u00a9\u00a6\n\u00a9\u00a6          -          \u00a9\u00a6                        \u00a9\u00a6\n\u00a9\u00a6 WETH Balance BEFORE \u00a9\u00a6      '0.00003675'      \u00a9\u00a6\n\u00a9\u00a6 WETH Balance AFTER  \u00a9\u00a6  -55.018741291495196   \u00a9\u00a6\n\u00a9\u00a6  WETH Gained\/Lost   \u00a9\u00a6  -55.018778041495196   \u00a9\u00a6\n\u00a9\u00a6  Total Gained\/Lost  \u00a9\u00a6   -55.01936314413639   \u00a9\u00a6\n\u00a9\u00b8\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00d8\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00a4\u00a9\u00bc\nNo Arbitrage Currently Available\n\nHere's my math on this:\nWETH reserves on UniSwap were 94.7186209660738\nAt a price of 1 WETH \/ 143 FXS on Sushiswap, the output from using all that WETH would be 13544.7627981486000 FXS\nSelling that amount of FXS of Uniswap at a price of 1 WETH \/ 142 FXS would provide a return in WETH of 95.38565351\nGas was 0.0005851026412 ETH for this transaction\nThere are also .3% transaction fees to account for on Uniswap and Sushiswap\n\nSo here's the calculation: \n95.38565351 - (95.38565351 * .003) - 0.0005851026412 - 94.7186209660738 - (94.7186209660738 *.003) = 0.0981357135770 ETH\n\nNow, just for fun, what if we change the transaction fee to 30% for each?\n\nThen the total becomes -56.1647251402709 ETH ... very close to the -55.01936314413639 ETH final calculation spurred on by getAmountsIn.  \n\nI don't know if that last bit is a false equivalency or not, but I've seen it when doing the math on 10-20 or more swaps like this.  In any case, there should have been a gain of nearly .1 ETH on this transaction.  So why is getAmountsIn giving me such a drastically different number?","3":"I am using Brownie and added a Ganache local network using the following command:\nbrownie networks add Development ganache-local host=HTTP:\/\/127.0.0.1:7545 cmd=ganache-cli\nAfter compiling, I try to deploy the smart contracts with brownie run <token>.<py>  --network ganache-local Then, I get the following error:\n<token><project> is the active <project>.\n  File \"brownie\/_cli\/__main__.<py>\", line 64, in main\n    importlib.import_module(f\"brownie._cli.{cmd}\").main()\n  File \"brownie\/_cli\/run.<py>\", line 45, in main\n    network.connect(CONFIG.argv[\"network\"])\n  File \"brownie\/network\/main.<py>\", line 40, in connect\n    web3.connect(host, active.get(\"timeout\", 30))\n  File \"brownie\/network\/web3.<py>\", line 68, in connect\n    raise ValueError(\nValueError: Unknown URI - must be a path to an IPC socket, a websocket beginning with 'ws' or a URL beginning with 'http'\n\nI did some digging and found this in the source code:\nif self.provider is None:\n    if uri.startswith(\"ws\"):\n        self.provider = WebsocketProvider(uri, {\"close_timeout\": timeout})\n    elif uri.startswith(\"http\"):\n        self.provider = HTTPProvider(uri, {\"timeout\": timeout})\n    else:\n        raise ValueError(\n                    \"Unknown URI - must be a path to an IPC socket, a websocket \"\n                    \"beginning with 'ws' or a URL beginning with 'http'\"\n                )\n\nDoes this mean I have to set a provider (like Alchemy) for my local network? Does that even make sense?","4":"yarn <hardhat>\nyarn run v1.22.19\n$ D:\\Codeing\\Blockchain\\<hardhat>\\node_modules\\.bin\\<hardhat>\nError HH801: Plugin @nomicfoundation\/<hardhat>-toolbox requires the following dependencies to be installed: @<ether>s<project>\/providers, @nomicfoundation\/<hardhat>-network-helpers, @nomicfoundation\/<hardhat>-chai-matchers, @nomiclabs\/<hardhat>-<ether>s, @nomiclabs\/<hardhat>-<ether>scan, @types\/chai, @types\/mocha, @typechain\/<ether>s-v5, @typechain\/<hardhat>, chai, <ether>s, <hardhat>-gas-reporter, <solidity>-coverage, ts-node, typechain, <typescript>.\nPlease run: <npm> install --save-dev \"@<ether>s<project>\/providers@^5.4.7\" \"@nomicfoundation\/<hardhat>-network-helpers@^1.0.0\" \"@nomicfoundation\/<hardhat>-chai-matchers@^1.0.0\" \"@nomiclabs\/<hardhat>-<ether>s@^2.0.0\" \"@nomiclabs\/<hardhat>-<ether>scan@^3.0.0\" \"@types\/chai@^4.2.0\" \"@types\/mocha@>=9.1.0\" \"@typechain\/<ether>s-v5@^10.1.0\" \"@typechain\/<hardhat>@^6.1.2\" \"chai@^4.2.0\" \"<ether>s@^5.4.7\" \"<hardhat>-gas-reporter@^1.0.8\" \"<solidity>-coverage@^0.8.1\" \"ts-node@>=8.0.0\" \"typechain@^8.1.0\" \"<typescript>@>=4.5.0\"\n\nHi i am facing this issues..when tring to yarn <hardhat>","5":"I'm trying to create a QR code generator that would generate transaction data for some of the common blockchains and wallets.\nThere is some confusion about the format for different blockchains, but at least for main blockchains - it seems to be <defi>ned as:\n<ether>eum:0xb794f5ea0ba39494ce839613fffba74279579268?amount=1.123\n\nfor ETH (or BTC) and\n<ether>eum:0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\/transfer?address=0xb794f5ea0ba39494ce839613fffba74279579268&uint256=111.123e6\n\nfor <evm>-compatible coins (like USDC here).\nsource: https:\/\/eips.<ether>eum.org\/EIPS\/eip-681\nhowever... BNB doesn't seem to follow that format. I tried the following:\nbinance:0xba5830175b16e5e48d94c6fa11041ff9ed3bae5a?amount=1.123\nbnb:0xba5830175b16e5e48d94c6fa11041ff9ed3bae5a?amount=1.123\nbinance:0xba5830175b16e5e48d94c6fa11041ff9ed3bae5a?amount=1.123&memo=1234\n\nand:\n\nboth Binance and Exodus apps don't understand any of the above (not even eth or btc) - I'd appreciate links to their qr code requirements specs\n\nTrust Wallet doesn't accept a BNB address written like that (funnily enough - amount and memo work flawlessly - same here, docs links would be amazing\n\nmetamask (which is Binance smart chain compatible) doesn't understand any of the BNB options - same here\n\n\nI have honestly spent hours researching this topic and I am simply astonished by the lack of documentation in that regard.\nas a bonus, just for the sake of informing others - XRP has its own super complex QR code format and it's available as a package here: https:\/\/www.<npm>js.com\/package\/ripple-address-codec\nanyway. any help will be greatly appreciated!\ncheers","6":"Guys i'm trying to do an manual trade bot in pancake for study , but i can't understand what it's wrong with my code now , i'm trying for a few days understand what is wrong but i really don't know what is happen.\nconst Web3 = require('web3');\n\nasync function swap<token>(privateKeys, <token>Address, amount, bnbAddress) {\n  \/\/ made an web3 instance with URL from Binance Smart Chain\n  const web3 = new Web3(new Web3.providers.HttpProvider('https:\/\/bsc-dataseed.binance.org\/'));\n\n  \/\/ Get atual g\u00a8\u00a2s price\n  const gasPrice = await web3.eth.getGasPrice();\n\n  \/\/ Loop to get all pk's\n  for (const privateKey of privateKeys) {\n    \/\/ get the account of my pk\n    const account = web3.eth.accounts.privateKeyToAccount(privateKey);\n\n    \/\/ <defi>ne transaction options\n    const options = {\n      from: account.address,\n      to: <token>Address,\n      value: 0,\n      gasPrice: gasPrice,\n      gas: '200000',\n      data: bnbAddress,\n    };\n\n    \/\/ assign and send the transaction to trade <token>\n    const signedTransaction = await web3.eth.accounts.signTransaction(options, privateKey);\n    web3.eth.sendSignedTransaction(signedTransaction.rawTransaction);\n  }\n}\n\n\/\/ all pk ( multi wallet system)\nconst privateKeys = [\n  'my private key'\n\n];\n\n\/\/ <token> address on Binance Smart Chain\nconst <token>Address = '0xe9e7cea3dedca5984780bafc599bd69add087d56';\n\n\/\/ Quantity of <token>s to be traded\nconst amount = '2';\n\n\/\/<token> output\nconst bnbAddress = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c';\n\nswap<token>(privateKeys, <token>Address, amount,?bnbAddress);\n\nand the error is :\nerror after run the code\ni tried some changes in code variables but nothing really works ... I'm really need help with this error and understand what is wrong to do this error","7":"Is there a difference in calling one flow as subflow from another corda flow versus calling the same flow from a cordaservice class as serviceHub.startFlow?\nIn terms of thead utilisation or suspending etc?\nI encountered a scenario where calling a flow from CordaService function got me error like\njava.lang.IllegalArgumentException: Transaction context is missing. This might happen if a suspendable method is not annotated with @Suspendable annotation.\nwhereas calling the same flows from another flow using subflows worked fine.","8":"let provider = new <ether>s.providers.JsonRpcProvider(url);\n^\nTypeError: Cannot read properties of un<defi>ned (reading 'JsonRpcProvider')\nat Object. (e:\\Error\\readblockchain.js:12:37)\n\u00a1\u00fb[90m    at Module._compile (node:internal\/modules\/cjs\/loader:1159:14)\u00a1\u00fb[39m\n\u00a1\u00fb[90m    at Module._extensions..js (node:internal\/modules\/cjs\/loader:1213:10)\u00a1\u00fb[39m\n\u00a1\u00fb[90m    at Module.load (node:internal\/modules\/cjs\/loader:1037:32)\u00a1\u00fb[39m\n\u00a1\u00fb[90m    at Module._load (node:internal\/modules\/cjs\/loader:878:12)\u00a1\u00fb[39m\n\u00a1\u00fb[90m    at Function.executeUserEntryPoint [as runMain] (node:internal\/modules\/run_main:81:12)\u00a1\u00fb[39m\n\u00a1\u00fb[90m    at node:internal\/main\/run_main_module:23:47\u00a1\u00fb[39m\nNode.js v18.12.1\nPS E:\\Error>See The Image-->>\nHad the same problem few days ago, turned out to be problem with a beta release of <ether>s.js.\nThe fix for me was to downgrade \"<ether>s\" to version 5.4 in the package.json, then  folder and lastly <npm> install to install <ether>s again.\nStep 1 :in package.json\n     {\n       \"dependencies\": {\n       \"<ether>s\": \"5.4\"      <<-------------\n       }\n     }\n\nStep 2 : Delete node_modules\nStep 3 : <npm> install","9":".\/node_modules\/array-to-txt-file\/index.js 1:0\nModule parse failed: Unexpected character '#' (1:0)\nFile was processed with these loaders:\n\n.\/node_modules\/<babel-loader>\/lib\/index.js\nYou may need an additional loader to handle the result of these loaders.\n\n\n#!\/usr\/bin\/env node\n| var fs = require('fs');\n| var _ = require('lodash');\n\nIm getting this error while executing the blockchain <project>\nI tried to resolve it but no solution is available here. So I have to raise a query here. Hope to get answer. Thank you","10":"I create a migration data function to transfer the data from old contract to the new one, in case we need to update the contract. The function is working properly, I have checked the all the data has been <move>d to the new contract. But when I run the transfer function, it said that Reason provided by the contract: \"<erc1155>: insufficient balance for transfer\".\nmigrateData function\n\/\/ <defi>ne the mapping of addresses to balances\nmapping(address => mapping(uint256 => uint256)) public _balances;\n\n\/\/ <defi>ne the mapping of address to <token>Ids owned\nmapping(address => uint256[]) public _<token>Ids;\n\n\/\/ <defi>ne the mapping of <token>Id to price\nmapping(uint256 => uint256) public _<token>Price;\n\naddress[] public _ownerAddresses;\n\nfunction migrateData(address _oldContract) public payable {\n        <nft>Minter oldContract = <nft>Minter(_oldContract);\n        address[] memory allAddresses = oldContract.getAllAddresses();\n        for (uint i = 0; i < allAddresses.length; i++) {\n            address holder = allAddresses[i];\n            _ownerAddresses.push(holder);\n            uint256[] memory <token>Ids = oldContract.get<token>IdsByAddress(holder);\n            for (uint j = 0; j < <token>Ids.length; j++) {\n                uint256 <token>Id = <token>Ids[j];\n                _balances[holder][<token>Id] += oldContract.getBalanceOf(holder, <token>Id);\n                _<token>Ids[holder] = oldContract.get<token>IdsByAddress(holder);\n                _<token>Price[<token>Id] = oldContract.get<token>Price(<token>Id);\n            }\n        }\n    }\n\ntransfer function\n\/\/ Transfers the <token>s from one address to another.\n    function transfer(address addr, uint256 <token>Id, uint256 amount) public {\n        require(_balances[msg.sender][<token>Id] >= amount, \"Not enough balance\");\n        \/\/ Transfer the <token>\n        _safeTransferFrom(msg.sender, addr, <token>Id, amount, \"\");\n        \/\/ Update the sender's balance\n        _balances[msg.sender][<token>Id] -= amount;\n        \/\/ Update the recipient's balance\n        _balances[addr][<token>Id] += amount;\n        \/\/ Add the <token>Id to the address\n        _<token>Ids[addr].push(<token>Id);\n        \/\/ Set the price of the <token>\n        _<token>Price[<token>Id] = _<token>Price[<token>Id];\n    }\n\nI have make sure to check the amount of the <token> and it has the corrected amount from where we left in oldContract.\nIs there any extra step I have to do first to make the data that I migrate from old contract to be usable in new contract?","11":"<truffle> unbox <react>  \n\nError: Error making request to https:\/\/raw.githubusercontent.com\/<truffle>-box\/<react>-box\/master\/<truffle>-box.json. Got error: connect ETIMEDOUT 49.44.79.236:443. Please check the format of the requested resource.\nTried uninstalling and reinstalling <truffle>, didn't work.","12":"I'm trying to deploy my contract to the goerli testnet however <hardhat> keeps throwing this error:\nError: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https:\/\/links.<ether>s.org\/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (reason=\"execution reverted\", method=\"estimateGas\", transaction={\"from\":\"0xb5E8683Aa524069C5714Fc2D8c3e64F78f2862fb\",\"data\":\"0x6103e86009556... (I shortened it down)\",\"accessList\":null}, error={\"name\":\"ProviderError\",\"_stack\":\"ProviderError: HttpProviderError\\n    at HttpProvider.request (C:\\\\Programming\\\\Personal <project>s\\\\<nft> Minting Dapp\\\\smart-contract\\\\node_modules\\\\<hardhat>\\\\src\\\\internal\\\\core\\\\providers\\\\http.ts:78:19)\\n    at LocalAccountsProvider.request (C:\\\\Programming\\\\Personal <project>s\\\\<nft> Minting Dapp\\\\smart-contract\\\\node_modules\\\\<hardhat>\\\\src\\\\internal\\\\core\\\\providers\\\\accounts.ts:187:34)\\n    at processTicksAndRejections (node:internal\/process\/task_queues:95:5)\\n    at async <ether>sProviderWrapper.send (C:\\\\Programming\\\\Personal <project>s\\\\<nft> Minting Dapp\\\\smart-contract\\\\node_modules\\\\@nomiclabs\\\\<hardhat>-<ether>s\\\\src\\\\internal\\\\<ether>s-provider-wrapper.ts:13:20)\",\"code\":3,\"_isProviderError\":true,\"data\":\"0xbfc6c337000000000000000000000000fd7bfa171b5b81b79c245456e986db2f32fbfadb\"}, code=UNPREDICTABLE_GAS_LIMIT, version=providers\/5.7.2)\n    at Logger.makeError (C:\\Programming\\Personal <project>s\\<nft> Minting Dapp\\smart-contract\\node_modules\\@<ether>s<project>\\logger\\src.ts\\index.ts:269:28)\n    at Logger.throwError (C:\\Programming\\Personal <project>s\\<nft> Minting Dapp\\smart-contract\\node_modules\\@<ether>s<project>\\logger\\src.ts\\index.ts:281:20)\n    at checkError (C:\\Programming\\Personal <project>s\\<nft> Minting Dapp\\smart-contract\\node_modules\\@<ether>s<project>\\providers\\src.ts\\json-rpc-provider.ts:78:20)\n    at <ether>sProviderWrapper.<anonymous> (C:\\Programming\\Personal <project>s\\<nft> Minting Dapp\\smart-contract\\node_modules\\@<ether>s<project>\\providers\\src.ts\\json-rpc-provider.ts:642:20)\n    at step (C:\\Programming\\Personal <project>s\\<nft> Minting Dapp\\smart-contract\\node_modules\\@<ether>s<project>\\providers\\lib\\json-rpc-provider.js:48:23)\n    at Object.throw (C:\\Programming\\Personal <project>s\\<nft> Minting Dapp\\smart-contract\\node_modules\\@<ether>s<project>\\providers\\lib\\json-rpc-provider.js:29:53)\n    at rejected (C:\\Programming\\Personal <project>s\\<nft> Minting Dapp\\smart-contract\\node_modules\\@<ether>s<project>\\providers\\lib\\json-rpc-provider.js:21:65)\n    at processTicksAndRejections (node:internal\/process\/task_queues:95:5) {\n  reason: 'execution reverted',\n  code: 'UNPREDICTABLE_GAS_LIMIT',\n  method: 'estimateGas',\n  transaction: {\n    from: '0xb5E8683Aa524069C5714Fc2D8c3e64F78f2862fb',\n    data: '0x6103e86009556... (I shortened it down)',\n    accessList: null\n  }\n\nHere is my contract:\n\/\/ SPDX-License-Identifier: MIT\npragma <solidity> ^0.8.15;\n\n\/\/\/ @title John's ERC721A Contract\n\/\/\/ @author John Pioc (www.johnpioc.com)\n\/\/\/ @notice This contract can be used to mint ERC721A standard <nft>s with industry standard functionality - whitelisted addresses, reveals, <nft> metadata, etc.\n\nimport \"erc721a\/contracts\/ERC721A.sol\";\nimport \"@<openzeppelin>\/contracts\/access\/Ownable.sol\";\nimport \"@<openzeppelin>\/contracts\/utils\/Strings.sol\";\nimport \"@<openzeppelin>\/contracts\/utils\/<crypto>graphy\/MerkleProof.sol\";\nimport {DefaultOperatorFilterer} from \".\/DefaultOperatorFilterer.sol\";\n\nerror CallerIsNotUser();\nerror InvalidWhitelistAllocation();\nerror MintingTooMany();\nerror InsufficientFunds();\nerror MintingOverCollectionSize();\nerror SaleIsClosed();\nerror MintingOverWhitelistAllocation();\nerror InvalidProof();\nerror URIQueryForNonexistent<token>();\n\ncontract <nft> is ERC721A, Ownable, DefaultOperatorFilterer {\n\n    using Strings for uint256;\n\n    enum SaleState {\n        CLOSED,\n        WHITELIST,\n        PUBLIC\n    }\n\n    uint256 public collectionSize = 1000;\n    uint256 public publicMintPrice = 0.1 <ether>;\n    uint256 public publicMaxMintAmount = 3;\n    uint256 public whitelistAllocation = 500;\n    uint256 public whitelistMintPrice = 0.05 <ether>;\n    uint256 public whitelistMaxMintAmount = 1;\n    bytes32 public whitelistMerkleRoot;\n    string public unrevealedUri = \"https:\/\/exampleUnrevealedUri.com\";\n    string public baseUri = \"https:\/\/exampleUri.com\/\";\n    bool public isRevealed;\n    SaleState public saleState;\n\n    \/\/\/ @notice Modifier to verify that caller doesn't come from a contract\n    modifier callerIsUser() {\n        if (tx.origin != msg.sender) revert CallerIsNotUser();\n        _;\n    }\n\n    constructor() ERC721A (\"<nft>\", \"<nft>\") {\n        isRevealed = false;\n        saleState = SaleState.CLOSED;\n    }\n\n    \/\/\/ @notice Function to mint <nft>s during the public sale\n    \/\/\/ @param _mintAmount Number of <nft>s to mint\n    function publicMint(uint64 _mintAmount) public payable callerIsUser {\n        if (_numberMinted(msg.sender) - _getAux(msg.sender) + _mintAmount > publicMaxMintAmount) revert MintingTooMany();\n        if (totalSupply() + _mintAmount > collectionSize) revert MintingOverCollectionSize();\n        if (saleState != SaleState.PUBLIC) revert SaleIsClosed();\n        if (msg.value < _mintAmount * publicMintPrice) revert InsufficientFunds();\n\n        _safeMint(msg.sender, _mintAmount);\n    }\n\n    \/\/\/ @notice Function to mint <nft>s during the whitelist sale\n    \/\/\/ @param _merkleProof Merkle Proof for caller's address\n    \/\/\/ @param _mintAmount Number of <nft>s to mint\n    function whitelistMint(bytes32[] calldata _merkleProof, uint64 _mintAmount) public payable callerIsUser {\n        if (_getAux(msg.sender) + _mintAmount > whitelistMaxMintAmount) revert MintingTooMany();\n        if (totalSupply() + _mintAmount > whitelistAllocation) revert MintingOverWhitelistAllocation();\n        if (saleState != SaleState.WHITELIST) revert SaleIsClosed();\n        if (msg.value < _mintAmount * whitelistMintPrice) revert InsufficientFunds();\n\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender));\n        if(!(MerkleProof.verify(_merkleProof, whitelistMerkleRoot, leaf))) revert InvalidProof();\n\n        _setAux(msg.sender, _getAux(msg.sender) + _mintAmount);\n        _safeMint(msg.sender, _mintAmount);\n    }\n\n    \/\/\/ @notice Sets a new collection size\n    \/\/\/ @dev Only owner can call this function\n    \/\/\/ @param _collectionSize New Collection Size\n    function setCollectionSize(uint256 _collectionSize) public onlyOwner {\n        collectionSize = _collectionSize;\n    }\n\n    \/\/\/ @notice Sets a new public mint price\n    \/\/\/ @dev Only owner can call this function\n    \/\/\/ @param _publicMintPrice New public mint price\n    function setPublicMintPrice(uint256 _publicMintPrice) public onlyOwner {\n        publicMintPrice = _publicMintPrice;\n    }\n\n    \/\/\/ @notice Sets a new public max mint amount\n    \/\/\/ @dev Only owner can call this function\n    \/\/\/ @param _publicMaxMintAmount New public max mint amount\n    function setPublicMaxMintAmount(uint256 _publicMaxMintAmount) public onlyOwner {\n        publicMaxMintAmount = _publicMaxMintAmount;\n    }\n\n    \/\/\/ @notice Sets a new whitelist allocation\n    \/\/\/ @dev Only owner can call this function. New whitelist allocation cannot be greater than collection size\n    \/\/\/ @param _whitelistAllocation New whitelist allocation\n    function setWhitelistAllocation(uint256 _whitelistAllocation) public onlyOwner {\n        if (_whitelistAllocation > collectionSize) revert InvalidWhitelistAllocation();\n        whitelistAllocation = _whitelistAllocation;\n    }\n\n    \/\/\/ @notice Sets a new whitelist mint price\n    \/\/\/ @dev Only owner can call this function\n    \/\/\/ @param _whitelistMintPrice New whitelist mint price\n    function setWhitelistMintPrice(uint256 _whitelistMintPrice) public onlyOwner {\n        whitelistMintPrice = _whitelistMintPrice;\n    }\n\n    \/\/\/ @notice Sets a new whitelist max mint amount\n    \/\/\/ @dev Only owner can call this function\n    \/\/\/ @param _whitelistMaxMintAmount New whitelist max mint amount\n    function setWhitelistMaxMintAmount(uint256 _whitelistMaxMintAmount) public onlyOwner {\n        whitelistMaxMintAmount = _whitelistMaxMintAmount;\n    }\n\n    \/\/\/ @notice Sets a new whitelist merkle root\n    \/\/\/ @dev Only owner can call this function\n    \/\/\/ @param _whitelistMerkleRoot New whitelist merkle root\n    function setWhitelistMerkleRoot(bytes32 _whitelistMerkleRoot) public onlyOwner {\n        whitelistMerkleRoot = _whitelistMerkleRoot;\n    }\n\n    \/\/\/ @notice Sets a new unrevealed URI\n    \/\/\/ @dev Only owner can call this function\n    \/\/\/ @param _unrevealedUri New unrevealed URI\n    function setUnrevealedUri(string memory _unrevealedUri) public onlyOwner {\n        unrevealedUri = _unrevealedUri;\n    }\n\n    \/\/\/ @notice Sets a new base URI\n    \/\/\/ @dev Only owner can call this function\n    \/\/\/ @param _baseUri New base URI\n    function setBaseUri(string memory _baseUri) public onlyOwner {\n        baseUri = _baseUri;\n    }\n\n    \/\/\/ @notice Toggles reveal from false to true, vice ve<rsa>\n    \/\/\/ @dev Only owner can call this function. Starts at false\n    function toggleRevealed() public onlyOwner {\n        isRevealed = !isRevealed;\n    }\n\n    \/\/\/ @notice Sets a new sale state\n    \/\/\/ @dev Only owner can call this function. 0 = CLOSED, 1 = WHITELIST, 2 = PUBLIC\n    \/\/\/ @param _saleState new sale state\n    function setSaleState(uint256 _saleState) public onlyOwner {\n        saleState = SaleState(_saleState);\n    }\n\n    \/\/\/ @notice Generates and returns the <token> URI for a given <token> ID\n    \/\/\/ @param _<token>Id An <nft>'s <token> ID\n    function <token>URI(uint256 _<token>Id) public view override returns (string memory) {\n        if (!_exists(_<token>Id)) revert URIQueryForNonexistent<token>();\n        if (!isRevealed) return unrevealedUri;\n\n        return string(abi.encodePacked(baseUri, _<token>Id.toString(), \".json\"));\n    }\n\n    \/\/\/ @notice Withdraws all ETH from contract to owner's address\n    \/\/\/ @dev Only owner can call this function\n    function withdraw() public payable onlyOwner {\n        (bool os,) = payable(owner()).call{value: address(this).balance}(\"\");\n        require(os);\n    }\n\n    \/\/\/ @notice All functions below are mandatory add-ons as per the Default Operator Filterer protocol\n\n    function transferFrom(address from, address to, uint256 <token>Id) public payable override onlyAllowedOperator(from) {\n        super.transferFrom(from, to, <token>Id);\n    }\n\n    function safeTransferFrom(address from, address to, uint256 <token>Id) public payable override onlyAllowedOperator(from) {\n        super.safeTransferFrom(from, to, <token>Id);\n    }\n\n    function safeTransferFrom(address from, address to, uint256 <token>Id, bytes memory data)\n        public\n        payable\n        override\n        onlyAllowedOperator(from)\n    {\n        super.safeTransferFrom(from, to, <token>Id, data);\n    }\n}\n\nHere is my config file:\nimport { <hardhat>UserConfig } from \"<hardhat>\/config\";\nimport \"@nomicfoundation\/<hardhat>-toolbox\";\nimport \"@nomiclabs\/<hardhat>-waffle\";\nimport \"dotenv\/config\";\nimport \"@typechain\/<hardhat>\";\n\nconst GOERLI_RPC_URL = process.env.GOERLI_RPC_URL;\nconst PRIVATE_KEY = process.env.PRIVATE_KEY;\nconst <ether>SCAN_<api>_KEY = process.env.<ether>SCAN_<api>_KEY;\n\nconst config: <hardhat>UserConfig = {\n  <solidity>: {\n    version: \"0.8.17\",\n    settings: {\n      optimizer: {\n        enabled: true,\n        runs: 200\n      }\n    }\n  },\n  networks: {\n    goerli: {\n      url: GOERLI_RPC_URL,\n      accounts: [PRIVATE_KEY!],\n      chainId: 5,\n      allowUnlimitedContractSize: true,\n    }\n  },\n  <ether>scan: {\n    <api>Key: {\n      goerli: <ether>SCAN_<api>_KEY!\n    }\n  }\n};\n\nexport default config;\n\n\nand here is my deploy script:\n\/\/ imports\nimport { <ether>s, run, network } from '<hardhat>';\n\n\/\/ async main\nasync function main() {\n  const contractFactory = await <ether>s.getContractFactory(\"<nft>\");\n  const contract = await contractFactory.deploy();\n  console.log(`Contract deployed to ${contract.address}`);\n\n  if (network.config.chainId === 5 && process.env.<ether>SCAN_<api>_KEY) {\n    console.log(\"Waiting for block confirmations...\")\n    await contract.deployTransaction.wait(6)\n    await verify(contract.address, [])\n  }\n}\n\n\/\/ async function verify(contractAddress, args) {\nconst verify = async (contractAddress: string, args: any[]) => {\n  console.log(\"Verifying contract...\")\n  try {\n    await run(\"verify:verify\", {\n      address: contractAddress,\n      constructorArguments: args,\n    })\n  } catch (e: any) {\n    if (e.message.toLowerCase().includes(\"already verified\")) {\n      console.log(\"Already Verified!\")\n    } else {\n      console.log(e)\n    }\n  }\n}\n\n\/\/ main\nmain()\n  .then(() => process.exit(0))\n  .catch((error) => {\n    console.error(error)\n    process.exit(1)\n  })\n\nI ran the command:\nnpx <hardhat> run scripts\/deploy.ts --network goerli\n\nAnd by running that command, it throws the error. I double checked that the it's grabbing the environment variables and everything. I actually forked all this code from one of my repos where the deploy script worked back then, however now it's not","13":"I have 100 messages that I want to sign using metamask. Is there a way to sign them all at once\nI've tried Batchrequest using web3 js but the Metamask ask the user to sign messages one by one","14":"Closed. This question needs debugging details. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     Edit the question to include desired behavior, a specific problem or error, and the shortest code necessary to reproduce the problem. This will help others answer the question.\n                \n                    \n                        Closed 2 days ago.\n                    \n                \n            This post was edited and submitted for review 2 days ago.\n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\n<subgraph> query\ni'm getting crazy with Uniswap <subgraph> <api>, i'm trying to get 24h volume for <token>s, but apparently the response i got has an outdated timestamp. I was able to query price data  and the volume USD which by default is updated to 2021. What am i doing wrong?\nhere it is my qwery:\n{\nswaps(orderDirection: desc) {\nid\n<token>0 {\nname\nsymbol\ndecimals\n<token>DayData(first: 1, orderBy: priceUSD, orderDirection: desc) {\npriceUSD\nvolumeUSD\n}\n}\n<token>1 {\nname\nsymbol\ndecimals\n<token>DayData(first: 1, orderBy: priceUSD, orderDirection: desc) {\npriceUSD\nvolumeUSD\n}\n}\n}\n}\nI tried to add the latest block number but the result is the same.\nSo, how do i query the current timestamp? What i would like to have is current price and 24h volume USD.\nI'm missing something for sure but i have no clue what. Sorry the answer must be pretty simple but i'm kinda new to <subgraph> so be patient with me.\nThanks in advance to anyone able to help. I'll be forever grateful!","15":null,"16":"i am recieving Error: Error occurred while verifying paramssubVerifierParams need to equal threshold 1\nweb3auth.ts\n\nimport { Web3Auth } from '@web3auth\/node-sdk';\nimport { CHAIN_NAMESPACES, SafeEventEmitterProvider } from '@web3auth\/base';\nimport { WEB3AUTH } from '..\/config\/globals';\nimport logger from '..\/config\/logger';\n\nexport const web3auth = new Web3Auth({\n  clientId: WEB3AUTH.clientId,\n  chainConfig: {\n    chainNamespace: CHAIN_NAMESPACES.EIP155,\n    chainId: WEB3AUTH.chainId,\n    rpcTarget: WEB3AUTH.rpcTarget,\n    displayName: '<polygon> Mainnet',\n    blockExplorer: 'https:\/\/<polygon>scan.com',\n    ticker: '<matic>',\n    tickerName: '<matic>',\n  },\n  web3AuthNetwork: process.env.NODE_ENV === 'production' ? 'mainnet' : 'testnet',\n});\n\nexport const connect = async (<token>: string): Promise<void> => {\n  try {\n    const provider = (await web3auth.connect({\n      verifier: WEB3AUTH.verifier, \/\/ replace with your verifier name\n      verifierId: WEB3AUTH.verifierId, \/\/ replace with your verifier id, setup while creating the verifier on Web3Auth's Dashboard\n      id<token>: <token>, \/\/ replace with your newly created unused JWT <token>.\n      subVerifierInfoArray: [\n        {\n          verifier: 'ga-google',\n          id<token>: <token>,\n        },\n        {\n          verifier: 'zt-email',\n          id<token>: <token>,\n        },\n      ],\n    })) as SafeEventEmitterProvider;\n    if (!provider) logger.error('error');\n    const ethPrivKey = await provider.request({ method: 'eth_private_key' });\n    logger.info('ETH Private Key', ethPrivKey);\n  } catch (error) {\n    throw error;\n  }\n};\n\ncontroller.ts\nweb3authHandler = asyncHandler(async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      web3auth.init();\n      const access<token>: string = res.locals.access<token>;\n      const data = await connect(access<token>);\n      console.log('data: ', data);\n      return new SuccessResponse('Successful web3auth', { data }).send(res);\n    } catch (error) {\n      throw error;\n    }\n  });\n\nWhat should i do now? I am completely stuck here. Also provide me with more insights of web3auth. What should I use as the verifier and verifierId?","17":"It must show console log Big Number instead its showing error.\nexpected output\nerror occured\nI am new to blockchain. I have connected the private key of <hardhat> with wallet but its showing Type Error. The expected output and the output which Ive got has attached along with this.\nimport <react>, { useState, useEffect } from \"<react>\";\nimport { <ether>s, BigNumber } from \"<ether>s\";\nimport Web3Modal from \"web3modal\";\n\n\/\/INTERNAL IMPORT\nimport {\n    checkIfWalletConnected,\n    connectWallet,\n    connectingWithBoo<token>,\n    connectingWithLIfe<token>,\n    connectingWithSingleSwap<token>,\n    connectingWithIWTH<token>,\n    connectingWithDAI<token>,\n} from \"..\/Utils\/appFeatures\";\n\nimport { IWETHABI } from \".\/constants\";\n\/\/ import ERC20 from \".\/ERC20.json\";\n\nexport const Swap<token>Context = <react>.createContext();\nexport const Swap<token>ContextProvider = ({ children }) => {\n    const swap = \"Welcome to swap my <token>\";\n\n    \/\/USESTATE\n  const [account, setAccount] = useState(\"\");\n  const [<ether>, set<ether>] = useState(\"\");\n  const [networkConnect, setNetworkConnect] = useState(\"\");\n  const [weth9, setWeth9] = useState(\"\");\n  const [dai, setDai] = useState(\"\");\n\n  const [<token>Data, set<token>Data] = useState([]);\n  const add<token> = [\n   \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n   \"0x15Ff10fCc8A1a50bFbE07847A22664801eA79E0f\",\n   \"0xAe9Ed85dE2670e3112590a2BB17b7283ddF44d9c\",\n  ];\n\n\n  \/\/FETCH DATA\n  const fetchingData = async () => {\n    try{\n      \/\/GET USER ACCOUNT\n      const userAccount = await checkIfWalletConnected();\n      setAccount(userAccount);\n      \/\/CREATE PROVIDER\n      const web3modal = new Web3Modal();\n      const connection = await web3modal.connect();\n      const provider = new <ether>s.providers.Web3Provider(connection);\n      \/\/CHECK Balance\n      const balance = await provider.getBalance(userAccount);\n      console.log(balance);\n\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  useEffect(()=>{\n    fetchingData();\n  },[]);\n  \n    return (\n        <Swap<token>Context.Provider value={{swap}}>\n          {children}\n        <\/Swap<token>Context.Provider>\n    );\n};","18":"I am trying to implement this encoding\nargtypes =[\"address\", \"uint256\"]\nargs =[yourAddress, parse<ether>(gtAmount)]\nkeccak256(toUtf8Bytes(\"mint\"))+AbiCoder().encode(argtypes, args).slice(2)\n\nThis is a JS sudo code. Could you give me some advise how to write it in <solidity>","19":"I was following a course tutorial to create a small decentralized bank application using <dfinity>'s internet computer.\nthe main.mo file is as follows:\nimport Debug \"mo:base\/Debug\";\nimport Float \"mo:base\/Float\";\nimport Time \"mo:base\/Time\";\n\nactor DBank {\n  stable var currentValue: Float = 300;\n  stable var startTime = Time.now();\n  Debug.print(debug_show(currentValue));\n\n  public func topUp(amount: Float){\n    currentValue += amount;\n    Debug.print(debug_show(currentValue));\n  };\n\n  public func withdraw(amount: Float){\n    let tempValue: Float = currentValue - amount;\n    if(tempValue >= 0){\n        currentValue -= amount;\n        Debug.print(debug_show(currentValue));\n    } else{\n      Debug.print(\"Withdrawal amount is more than Balance.\")\n    }\n  };\n\n  public query func checkBalance(): async Float{\n    return currentValue;\n  };\n\n  public func compound() {\n    let currentTime = Time.now();\n    let timeElapsedNS = currentTime - startTime;\n    let timeElapsedSec = timeElapsedNS \/ 1_000_000_000;\n    currentValue := currentValue * (1.01 ** Float.fromInt(timeElapsedSec));\n  };\n\n}\n\nThe Candid Interface was working until I changed the the data type of currentValue from Nat to float. It showed a warning when i ran dfx deploy on the terminal:\nuser***@hp:~\/ic-<project>s\/dbank$ dfx deploy\nDeploying all canisters.\nAll canisters have already been created.\nBuilding canisters...\nBuilding frontend...\nInstalling canisters...\nWARNING!\nCandid interface compatibility check failed for canister 'dbank'.\nYou are making a BREAKING change. Other canisters or frontend clients relying on your canister may stop working.\n\nMethod checkBalance: func () -> (float64) query is not a subtype of func () -> (nat) query\nDo you want to proceed? yes\/No\nyes\n\nI do not have the original warning, I tried to recreate it so float64 and nat might be interchanged.\nOn deployment the Candid UI shows this:\nAn error happened in Candid canister:\nError: Server returned an error:\nCode: 400 (Bad Request)\nBody: Specified ingress_expiry not within expected range:\nMinimum allowed expiry: 2023-02-06 19:04:14.511184689 UTC\nMaximum allowed expiry: 2023-02-06 19:09:44.511184689 UTC\nProvided expiry:        2023-02-06 19:25:14.339 UTC\nLocal replica time:     2023-02-06 19:04:14.511189299 UTC\nat _.query (http:\/\/127.0.0.1:8000\/index.js:2:8821)\nat async http:\/\/127.0.0.1:8000\/index.js:2:100976\nat async getRemoteDidJs (http:\/\/127.0.0.1:8000\/index.js:2:266158)\nat async Object.fetchActor (http:\/\/127.0.0.1:8000\/index.js:2:265243)\nat async http:\/\/127.0.0.1:8000\/index.js:2:271946\n\nI was thinking wh<ether> this could be a problem from Time module but couldn't find much about it, as the module documentation page has been re<move>d.\nLooked up the ingress_expiry problem and tried it's solutions:\nthe local machine's time is correct and in sync with the actual time.\nUsing wsl1 in vscode, it is the latest version i suppose as running wsl --update shows you have the latest version\nThe breaking change warning in the question description was orginally prompted for the checkBalance() function but I could not include anything worthwhile.","20":"I have to switch metamask netwrok using web3 js or <ether> js in my <react>js application.what i have to do i used this code to switch the testnets but it's not make any sense\nwindow.<ether>eum.request({\n  method: \"wallet_add<ether>eumChain\",\n  params: [{\n    chainId: \"0x89\",\n    rpcUrls: [\"https:\/\/rpc-mainnet.<matic>.network\/\"],\n    chainName: \"<matic> Mainnet\",\n    nativeCurrency: {\n      name: \"<matic>\",\n      symbol: \"<matic>\",\n      decimals: 18\n    },\n    blockExplorerUrls: [\"https:\/\/<polygon>scan.com\/\"]\n  }]\n});\n\nOR\n  \/\/ Check if the MetaMask account is connected to <polygon>\n  const networkId = await web3.eth.net.getId();\n\n  if (networkId !== <polygon>NetworkId) {\n    \/\/ Prompt the user to switch to <polygon>\n    await window.<ether>eum.enable();\n\n    \/\/ Check if the user has switched to <polygon>\n    const updatedNetworkId = await web3.eth.net.getId();\n    if (updatedNetworkId === <polygon>NetworkId) {\n      console.log('Successfully switched to <polygon>');\n    } else {\n      console.error('Failed to switch to <polygon>');\n    }\n  } else {\n    console.log('Already connected to <polygon>');\n  }","21":"I just want to get the latest block number . I followed the docs of Alchemy, but getting the error:\nconst provider = new <ether>s.providers.AlchemyProvider(\n                                      ^\n\nTypeError: Cannot read properties of un<defi>ned (reading 'AlchemyProvider')\n    at Object.<anonymous> (D:\\BlockChain\\<ether> JS\\readBlockchain.js:5:39)\n    at Module._compile (node:internal\/modules\/cjs\/loader:1105:14)\n    at Object.Module._extensions..js (node:internal\/modules\/cjs\/loader:1159:10)\n    at Module.load (node:internal\/modules\/cjs\/loader:981:32)\n    at Function.Module._load (node:internal\/modules\/cjs\/loader:822:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal\/modules\/run_main:77:12)  \n    at node:internal\/main\/run_main_module:17:47\n\nHere is my code to find the latest block :\nconst { <ether>s } = require(\"<ether>s\");\nrequire(\"dotenv\").config();\n\nconst network = \"mainnet\";\nconst provider = new <ether>s.providers.AlchemyProvider(\n  network,\n process.env.ALCHEMY_<api>_KEY\n);\n\nconst querryBlockchain = async () => {\n  const blockNumber = await provider.getBlockNumber();\n  console.log(blockNumber);\n};\n\nquerryBlockchain();\n\nThe code works just fine if specify the actual path of providers . Here is the modified code:\nconst { AlchemyProvider } = require(\"@<ether>s<project>\/providers\");\nrequire(\"dotenv\").config();\n\nconst network = \"mainnet\";\n\nconst provider = new AlchemyProvider(network, process.env.ALCHEMY_<api>_KEY);\n\nconst querryBlockchain = async () => {\n  const blockNumber = await provider.getBlockNumber();\n  console.log(blockNumber);\n};\n\nquerryBlockchain();","22":"Hi I'm an undergraduate student who's doing a <project> on vessel tracking system using blockchain. Im really new to this an I would really appreciate any help you guys can give me. My <project> is that Ill get location and other important data about the vessel and send them via a satellite directly to my <database>. That <database> must be blockchain like one so it will increase the trust among the entities by providing them transparency in tracking details of the vessel. Then it all will be displayed in a web application to users to interact with there private key according to there vessel.\nI did a small research on Blockchain, but didn\u00a1\u00aft find something that\u00a1\u00afs directly relevant to my <project>. They are all about creating Blockchain and doing transactions and creating bank like apps. I found out about <bigchain>DB and Blockchain <mongodb> but I have no idea about If it is suitable for my <project>. I need from you guys is that to find a path to create a blockchain like <database> to store and retrieve my data real-time to the web application. I Dont know is this even possible to do. I am sorry if my English is bad. I hope you guys can understand me and I would really appreciate if anyone can give any insight on this, you guys will be saving my life <3. thank you","23":"I have a newly generated TRON address in testnet - Shasta. I'm trying to send USDC to it, from a faucet - usdcfaucet.com. While on an <ether>eum testnet it'll get received fine, if I send it there, on TRON there's been ocurring an error\n\"Unrecorded <token>\"\nAnd my balance has never increased.\n\nWhat's the matter?\nDoes TRON require activatation, or explicit creation on a <token> account, perhaps?","24":"Closed. This question is not about programming or software development. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     This question does not appear to be about a specific programming problem, a software algorithm, or software tools primarily used by programmers. If you believe the question would be on-topic on another Stack Exchange site, you can leave a comment to explain where the question may be able to be answered.\n                \n                    \n                        Closed 3 days ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nChains like <ether>eum use Eth for gas, and then a stablecoin is delivered as a contract.\nI'm thinking that it might be nice to actually use a stablecoin as the BASE <token> for a new blockchain.  That way, the value never changes, gas value is stable, etc.\nAssume the stablecoin really is stable and 1-to-1 backed correctly.\nIs there any reason not to do this?\nWhy hasn't anyone done this?","25":"package main\n\nimport (\n    \"encoding\/json\"\n    \"fmt\"\n    \"strconv\"\n\n    \"github.com\/<hyperledger>\/fabric-sdk-go\/pkg\/client\/channel\"\n    \"github.com\/<hyperledger>\/fabric-sdk-go\/pkg\/client\/event\"\n    \"github.com\/<hyperledger>\/fabric-sdk-go\/pkg\/client\/ledger\"\n    \"github.com\/<hyperledger>\/fabric-sdk-go\/pkg\/client\/resmgmt\"\n    \"github.com\/<hyperledger>\/fabric-sdk-go\/pkg\/common\/errors\/retry\"\n    \"github.com\/<hyperledger>\/fabric-sdk-go\/pkg\/common\/providers\/fab\"\n    \"github.com\/<hyperledger>\/fabric-sdk-go\/pkg\/core\/config\"\n    \"github.com\/<hyperledger>\/fabric-sdk-go\/pkg\/fabsdk\"\n)\n\ntype Degree struct {......\n\nI am new to Blockchain programming and I am trying to build a degree verification application with the help of my friend. We wrote the whole program, Installed\/Set Up <hyperledger> Fabric, Go on Ubuntu 22.04. When we try to run it using\ngo build fabric.go (or) go run fabric.go\n\nWe get the following error,\n\nfabric.go:7:2: no required module provides package github.com\/<hyperledger>\/fabric\/core\/chaincode\/shim; to add it: go get github.com\/<hyperledger>\/fabric\/core\/chaincode\/shim fabric.go:8:2: no required module provides package github.com\/<hyperledger>\/fabric\/protos\/peer; to add it: go get github.com\/<hyperledger>\/fabric\/protos\/peer\n\nWe tried installing the required Go module dependencies as it suggested and we keep getting\n\ngo: module github.com\/<hyperledger>\/fabric@upgrade found (v2.1.1+incompatible), but does not contain package github.com\/<hyperledger>\/fabric\/core\/chaincode\/shim\n\nand\ngo: module github.com\/<hyperledger>\/fabric@upgrade found (v2.1.1+incompatible), but does not contain package github.com\/<hyperledger>\/fabric\/protos\/peer\nI have no idea how to proceed further and I could use your help. Please explain it as if you are explain it to a five year old, because as I said I am new to this and I am not fully versed with all the terms. I am learning fabric by making <project>s.","26":"I am building a dApp with <ether>sjs and metamask and everything works fine however, I want to be able to get the chain explorer so users can check the details of their transaction.\nAt the moment, new <ether>s.providers.Web3Provider(window.<ether>eum).network gives me the chain ID but not the block explorer URL as in https:\/\/goerli.<ether>scan.io\/ for goerli test net.\nHow can I get the block explorer of any chain ID?","27":"I'm trying to access the <ether>s provider like this in Nextjs 13.0.1:\nimport { <ether>s } from \"<ether>s\";\n\nexport const signMessage = () => {\n  \n  const provider = new <ether>s.providers.Web3Provider(window.<ether>eum);\n  const signer = provider.getSigner();\n\n  try {\n    signer.signMessage(\"Hey hey\").then((result) => {\n      console.log(result);\n    });\n  } catch (error) {\n    \/\/ handle error\n    console.log(error);\n  }\n};\n\nBut it always gives me the error:\nUnhandled Runtime Error\nTypeError: Cannot read properties of un<defi>ned (reading 'Web3Provider')\n\nI've tried different providers but always get the error message above.\nSomeone knows why it's working for Nextjs 12 but not for Next 13?","28":"In proof of stake, do nodes that are not validators verify blocks?\nI am aware that in PoS the validators validate the block and sign it.\nSo when a 51% attacks occurs on a PoS network if the majority of the validators belong to the same malicious person, he will be able to forge a block with invalid transactions and validate it.\nDoes this mean the network (non validator nodes) do not validate them?","29":"I am working on a dapp and I have implemented signing option using <ether> js but I want to also call a fucntion onclick a button to logout connected metamask wallet. Before I have used <moralis> v1 logout fucntion but in this version there is no option to logout. How can i do this?\nI am using Next.js, <ether> js, and <moralis>","30":"I'm confused about in what case should I put function logic on-chain in smart contract? or off-chain in frontend as <ether>s.js\/ web3js etc.\nIn web2, I think no matter I put the function in frontend or backend, they have same performance.\nHere is a example on-chain:\n\/\/ give an address bonus <token> if its current balance is more than 0. \n\/\/ Maximum is 100. \n\nfunction bonus(address anyAddress) public {\n    if (balanceOf(anyAddress) >= 0 && balanceOf(anyAddress) < 100)  {\n        _mint(anyAddress, 100 - balanceOf(anyAddress));\n    } \n}\n\nObviously, I can use frontend logic to code the a function by calling the _mint() and balanceOf() function on-chain, which can perform the same result, and maybe save gas.\nSo, why should I put packaged function on chain?","31":"I'm in the process of acquiring assets for an <solana> <nft> collection. I want to change the royaltie fees address to 1 new wallet. I know about Metaboss cli that can facilitate doing that easily, but what do I need to have to do so? should I first adjust the update authority of the collection? change offchain or onchain data? do I need mataplex format json files ready for each <nft>? it's somewhat hard to find relevant info for my usecase as metaboss docs dont explain alot.","32":"Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     We don\u00a1\u00aft allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.\n                \n                    \n                        Closed 5 days ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nI have seen many tutorial on blockchain but they all are some how assuming the learner to be web developer or kind of related field. Is there some stuff for <android> developer to learn so that we can use <android> studio with blockchain technology.? if yes then please provide some resecures.","33":"Am trying to login my admin , i <defi>ned the login credentials both in the <mongodb> and in the .env so here is the code which has a problem.\nconst Admin = require('..\/models\/admin');\nconst Voters = require('..\/models\/voters');\nconst bcrypt = require('bcrypt');\n\nexports.checkCredentials = async (req, res, next) => {\n  const email = req.body.email;\n  const password = req.body.password;\n\n  Admin.findOne({ email: email }).exec(async (error, adminData) => {\n    if (error) {\n      \/\/ some error occured\n      return res.status(400).json({ error });\n    }\n    if (adminData) {\n      \/\/ email is correct checking for password\n      const match = await bcrypt.compare(password, adminData.password);\n      if (match) {\n        req.adminID = adminData._id;\n        next();\n      } else {\n        return res.status(200).json({\n          msg: 'Invalid email\/password combination yyy',\n        });\n      }\n    } else {\n      \/\/ no data found for given email\n      return res.status(200).json({\n        msg: 'Invalid email\/password combination !!!!',\n      });\n    }\n  });\n};\n\nexports.verifyVoter = async (req, res, next) => {\n  let query;\n  if (req.query.voterID) {\n    query = {\n      voterID: req.query.voterID,\n    };\n  } else {\n    query = {\n      phone: req.body.phone,\n    };\n  }\n  console.log(query);\n  Voters.findOne(query).exec(async (error, voterData) => {\n    if (error) {\n      \/\/ some error occured\n      return res.status(400).json({ error });\n    }\n    if (voterData) {\n      \/\/ Voter found\n      if (voterData.hasRegistered === true) {\n        return res.status(200).json({\n          msg: 'Voter already registered',\n        });\n      } else {\n        req.phone = voterData.phone;\n        req.district = voterData.pinCode;\n        req._id = voterData._id;\n        next();\n      }\n    } else {\n      \/\/ no data found for given Voter\n      return res.status(200).json({\n        msg: 'Invalid VoterID',\n      });\n    }\n  });\n};\n\n\nthat code above brings an error but this is how i <defi>ned my admin credentials in the .env\nADMIN_EMAIL = bkroland19@gmail.com\nADMIN_PASSWORD =felinho\/013\n\nand  this is how i <defi>ned them in <mongodb>\n{\n    \"email\": \"bkroland19@gmail.com\",\n    \"password\": \"felinho\/013\"\n}\n\n\nand this is the resulting error i get yet the email am entering matches those two emails.\nAny help please\nAm expecting to be allowed to login in when i enter the credentials as they are in the <mongodb> <database>","34":"I have a deposit smart contract (Bank) below. I can use <remix> entering the value and calling the Deposit function.\nHow can i write a smart contract to do the same (Sender) below. I tried adding the interface but I cant seem to add a value when i call the sendDeposit\n\n\/\/\/\/ Bank Smart Contract\npragma <solidity> ^0.8.0;\n\ncontract bank {\n    uint256 public amountIn;\n    function deposit() external payable returns(uint256) {\n        amountIn = msg.value ;\n        return amountIn;\n    }\n}\n\n\/\/\/\/\/ SENDER Contract\npragma <solidity> ^0.8.0;\n\ninterface Receiver {\n\n    function deposit() external payable returns(uint256);\n}\n\ncontract sender {\n    Receiver private receiver = Receiver(0x0fC5022f7B5c4Df39A836);\n\n    function sendDeposit(uint256 _amount) public payable {\n        receiver.deposit{value: _amount}();\n    }\n\n\n    receive() external payable {\n         require(msg.value > 0, \"You cannot send 0 <ether>\");\n    }\n\n }\n\nI tried writing it like this, but there is no value in the transaction send\n function sendDeposit(uint256 _amount) public payable { receiver.deposit{value: _amount}(); }","35":"here is an example of getting the first 10 blocks\nI tried this and nothing comes back. No errors either.\nexport const useBlock = async () => {\n  const web3 = new Web3(window.<ether>eum);\n  const blocks: BlockTransactionString[]  = [];\n\n  for (let i = 0; i < 10; i++) {\n    web3.eth.getBlockNumber(async (error, number) => {\n      if (error) {\n        console.error(error);\n      }\n      const block = await web3.eth.getBlock(number);\n      blocks.push(block);\n    });\n  }\n\n  return blocks;\n};\n\n\nhere is the Block.tsx file\nimport <react> from \"<react>\";\nimport { Card } from \"<react>-bootstrap\";\n\ninterface BlockProps {\n  block: any;\n}\n\nconst Block: <react>.FC<BlockProps> = ({ block }) => {\n  return (\n    <Card className=\"p-4\">\n      <p className=\"fs-6\">Block number: {block.number}<\/p>\n      <p className=\"fs-6\">Block timestamp: {block.timestamp}<\/p>\n      <p className=\"fs-6\">Block hash: {block.hash}<\/p>\n      <p className=\"fs-6\">Block parent hash: {block.parentHash}<\/p>\n      <p className=\"fs-6\">Block nonce: {block.nonce}<\/p>\n      <p className=\"fs-6\">Block difficulty: {block.difficulty}<\/p>\n    <\/Card>\n  );\n};\n\nexport default Block;\n\n\nand here is the Blocks.tsx file\nimport <react>, { useEffect, useState } from \"<react>\";\n import { useBlock } from \"..\/hooks\/useBlock\";\nimport BlockTransactionString from \"web3-eth\";\nimport Block from \".\/Block\";\n\nconst Blocks = () => {\n  const [blocks, setBlocks] = useState<\n    BlockTransactionString.BlockTransactionString[]\n  >([]);\n\n  const set10Blocks = async () => {\n    const blocks = await useBlock();\n    setBlocks(blocks);\n  };\n\n  useEffect(() => {\n    set10Blocks();\n  }, []);\n\n  return (\n    <div>\n      {blocks.map((block) => (\n        <Block block={block} \/>\n      ))}\n    <\/div>\n  );\n};\n\nexport default Blocks;\n\nI expect to have 10 cards with the block info on them (block info being what is in Block.tsx).\nOther information: web3.eth.getBalance() also does not return anything.","36":"My doubt is from the below code:\ncontract RandomNumber{\n\n    uint number;\n\n    function get_random() public{\n        bytes32 ramdonNumber = keccak256(abi.encodePacked(block.timestamp,blockhash(block.number-1)));\n        number = uint(ramdonNumber);\n    }\n}\n\nWe assign a random number to the variable number but if I don't set number public or create another public function to retrieve the value then nobody would know the exactly value through <ether>scan. But what about the miners? Can they retrieve these unrevealed data in some ways?\nI have tried:\nGoogle, <ether>eum whitepaper, <solidity> documentation","37":"I am new in this smart contract area. So what I am learning right now is that when we are deploying a new contract then the data from the old contract will not be auto<matic>ally <move>d to the new contract and we need to create a migration function by ourselves to migrate the data from old contract to the new contract. I tried to create the migration function by taking some reference from another post. But when I try to compile the contract, I find this error\n\nTypeError: Member \"length\" not found or not visible after argument-dependent lookup in mapping(address => mapping(uint256 => uint256)).\n\nThis error happens inside this function\nfunction transferData(address payable newContractAddress) public {\n    \/\/ Reference the new contract\n    <nft>Minter newContract = <nft>Minter(newContractAddress);\n\n    \/\/ Transfer each balance\n    \/\/ ERROR HAPPEN HERE\n    for (uint256 i = 0; i < _balances.length; i++) {\n      newContract.setBalance(_balances[i], _balances[_balances[i]]);\n    }\n\n    \/\/ Transfer each <token>Ids array\n    \/\/ ERROR HAPPEN HERE\n    for (uint256 i = 0; i < _<token>Ids.length; i++) {\n      for (uint256 j = 0; j < _<token>Ids[i].length; i++) {\n        newContract.add<token>Id(_<token>Ids[i], _<token>Ids[i][j]);\n      }\n    }\n\n    \/\/ Transfer each <token> price\n    \/\/ ERROR HAPPEN HERE\n    for (uint256 i = 0; i < <token>Price.length; i++) {\n      newContract.set<token>Price(<token>Price[i], <token>Price[<token>Price[i]]);\n    }\n}\n\nThis is how my whole contract looks like\ncontract <nft>Minter is <erc1155> {\n  constructor() <erc1155>(\"https:\/\/raw.githubusercontent.com\/noopmood\/Tutorial<nft>InGo\/main\/metadata\/{id}.json\") payable {}\n  \n  \/\/ <defi>ne the mapping of addresses to balances\n  mapping(address => mapping(uint256 => uint256)) public _balances;\n\n  \/\/ <defi>ne the mapping of address to <token>Ids owned\n  mapping(address => uint256[]) public _<token>Ids;\n\n  \/\/ <defi>ne the mapping of <token>Id to price\n  mapping(uint256 => uint256) public <token>Price;\n\n  struct <token> {\n    uint256 <token>Id;\n    uint256 balance;\n  }\n\n  \/\/ Mints new <token>s and sets the price for each <token>.\n  function mintAddress(uint256 <token>Id, uint256 amount, address addr, uint256 price) public{\n    _mint(addr, <token>Id, amount, \"\");\n    \/\/ Update the balance of the recipient\n    _balances[addr][<token>Id] += amount;\n     \/\/ Add the <token>Id to the address\n    _<token>Ids[addr].push(<token>Id);\n    \/\/ Set the price of the <token>\n    <token>Price[<token>Id] = price;\n  }\n\n  \/\/ Get all <token>Ids from its owner address\n  function get<token>IdsByAddress(address addr) public view returns (uint[] memory) {\n    return _<token>Ids[addr];\n  }\n\n  \/\/ Get the <token>Ids along with its corresponding balances\/amount\n  function getAll<token>ByAddress(address holder) public view returns (<token>[] memory) {\n    <token>[] memory result = new <token>[](_<token>Ids[holder].length);\n    for (uint i = 0; i < _<token>Ids[holder].length; i++) {\n      result[i].<token>Id = _<token>Ids[holder][i];\n      result[i].balance = _balances[holder][_<token>Ids[holder][i]];\n    }\n    return result;\n  }\n\n  function transferData(address payable newContractAddress) public {\n    \/\/ Reference the new contract\n    <nft>Minter newContract = <nft>Minter(newContractAddress);\n\n    \/\/ Transfer each balance\n    for (uint256 i = 0; i < _balances.length; i++) {\n      newContract.setBalance(_balances[i], _balances[_balances[i]]);\n    }\n\n    \/\/ Transfer each <token>Ids array\n    for (uint256 i = 0; i < _<token>Ids.length; i++) {\n      for (uint256 j = 0; j < _<token>Ids[i].length; i++) {\n        newContract.add<token>Id(_<token>Ids[i], _<token>Ids[i][j]);\n      }\n    }\n\n    \/\/ Transfer each <token> price\n    for (uint256 i = 0; i < <token>Price.length; i++) {\n      newContract.set<token>Price(<token>Price[i], <token>Price[<token>Price[i]]);\n    }\n  }\n\n  function setBalance(address addr, uint256 balance) public {\n    _balances[addr] = balance;\n  }\n\n  function add<token>Id(address addr, uint256 <token>Id) public {\n    _<token>Ids[addr].push(<token>Id);\n  }\n\n  function set<token>Price(uint256 <token>Id, uint256 price) public {\n    <token>Price[<token>Id] = price;\n  }\n}\n\nCan anyone help me on figuring out this issue so I am able to compile the contract and able to migrate the data from my old to new contract?","38":"As the title says I need the algorithm(or maybe <python> package) which converts mnemonic phrase(12 Words) into a public key for my wallet.\nI have no problem generating xprv and am able to generate HD Wallets for ETH(0xblahblahblah...) BTC, DOGE etc... addresses with no problem if it helps.\nI'm not sure what derivation path and algorithm to use for BNB-beacon-chain(bep2) address which starts with bnb1...\nany comment will be appreciated.\nI tired HDWallet <python> package but BNB beacon chain seems not supported.","39":"To test my <evm> smart contract on mainnet, I use ganache to fork mainnet and implement the <truffle> test but failed with error code as the title.\nMy Environment:\n\nRPC endpoint: https:\/\/bsc-dataseed1.<defi>bit.io\n<truffle> v5.2.6 (core: 5.2.6)\n<solidity> - 0.8.13 (solc-js)\nNode v18.13.0\nWeb3.js v1.2.9\nGanache CLI v6.12.2 (ganache-core: 2.13.2)\n\nThe steps to reproduce:\n\nfork mainnet\n\nganache-cli --fork https:\/\/bsc-dataseed1.<defi>bit.io --unlock \"0x14f62daeee9ef67588bc882480b1c7992980fcaa\" --unlock \"0x6adb5974d4fc421aad4105f09c68f85700f5c36b\"\n\n\nRun <truffle> test\n\n<truffle> test --network development\n\nAnd it shows the error revert TX Limit Exceeded -- Reason given: TX Limit Exceeded.\nI think it should not be the issue from my contract code but from the environment. But I am not able to find any reference from google.\nIt will be very appreciated if anybody can give me a hint.\nThe full log of error herewith FYI:\nDeployer accounts: 0x41BD4fa20FBe952bfe441C3C8996EAB8aC1F2cF2\n{ afntyAddr: '0x39FbDfF41f8a2A0F6FC6292507344C95DC8F8047' }\n\n\n  Contract: My contract test\n    ? Set up all related contract ready (1299ms)\n    ? Owner set cutOff (128ms)\n{\n  migratorOwner: '0x41BD4fa20FBe952bfe441C3C8996EAB8aC1F2cF2',\n  migrator: '0x39FbDfF41f8a2A0F6FC6292507344C95DC8F8047'\n}\n{ contractNew<token>Balance: 500000 }\n{ contractNew<token>Balance: 0 }\n    ? Owner input and withdraw new <token> (57068ms)\n    1) Allow users to migrate\n\n    Events emitted during test:\n    ---------------------------\n\n    Warning: Could not decode event!\n\n    Ambiguous event, possible interpretations:\n    * UsingERC20.Transfer(\n        from: <indexed> 0x10ED43C718714eb63d5aA57B78B54704E256024E (type: address),\n        to: <indexed> 0xFcf32695BAd0FD181f468F1792aFbF1bA09D4188 (type: address),\n        value: 16674738392 (type: uint256)\n      )\n    * IERC20.Transfer(\n        from: <indexed> 0x10ED43C718714eb63d5aA57B78B54704E256024E (type: address),\n        to: <indexed> 0xFcf32695BAd0FD181f468F1792aFbF1bA09D4188 (type: address),\n        value: 16674738392 (type: uint256)\n      )\n\n    Ambiguous event, possible interpretations:\n    * UsingERC20.Transfer(\n        from: <indexed> 0xFcf32695BAd0FD181f468F1792aFbF1bA09D4188 (type: address),\n        to: <indexed> 0x81f29597181E99C5eD48a085401dd42fd528d781 (type: address),\n        value: 1739430161 (type: uint256)\n      )\n    * IERC20.Transfer(\n        from: <indexed> 0xFcf32695BAd0FD181f468F1792aFbF1bA09D4188 (type: address),\n        to: <indexed> 0x81f29597181E99C5eD48a085401dd42fd528d781 (type: address),\n        value: 1739430161 (type: uint256)\n      )\n\n    Warning: Could not decode event!\n\n    Warning: Could not decode event!\n\n    Ambiguous event, possible interpretations:\n    * UsingERC20.Transfer(\n        from: <indexed> 0x81f29597181E99C5eD48a085401dd42fd528d781 (type: address),\n        to: <indexed> 0xFcf32695BAd0FD181f468F1792aFbF1bA09D4188 (type: address),\n        value: 1739430161 (type: uint256)\n      )\n    * IERC20.Transfer(\n        from: <indexed> 0x81f29597181E99C5eD48a085401dd42fd528d781 (type: address),\n        to: <indexed> 0xFcf32695BAd0FD181f468F1792aFbF1bA09D4188 (type: address),\n        value: 1739430161 (type: uint256)\n      )\n\n    Warning: Could not decode event!\n\n    Ambiguous event, possible interpretations:\n    * UsingERC20.Transfer(\n        from: <indexed> 0x10ED43C718714eb63d5aA57B78B54704E256024E (type: address),\n        to: <indexed> 0xFcf32695BAd0FD181f468F1792aFbF1bA09D4188 (type: address),\n        value: 16633051545 (type: uint256)\n      )\n    * IERC20.Transfer(\n        from: <indexed> 0x10ED43C718714eb63d5aA57B78B54704E256024E (type: address),\n        to: <indexed> 0xFcf32695BAd0FD181f468F1792aFbF1bA09D4188 (type: address),\n        value: 16633051545 (type: uint256)\n      )\n\n    Ambiguous event, possible interpretations:\n    * UsingERC20.Transfer(\n        from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),\n        to: <indexed> 0x0ED943Ce24BaEBf257488771759F9BF482C39706 (type: address),\n        value: 2125942 (type: uint256)\n      )\n    * IERC20.Transfer(\n        from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),\n        to: <indexed> 0x0ED943Ce24BaEBf257488771759F9BF482C39706 (type: address),\n        value: 2125942 (type: uint256)\n      )\n\n    Ambiguous event, possible interpretations:\n    * UsingERC20.Transfer(\n        from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),\n        to: <indexed> 0xEe3C1B43482bf018ac960EeA8B57d8e576368D57 (type: address),\n        value: 5301567942 (type: uint256)\n      )\n    * IERC20.Transfer(\n        from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),\n        to: <indexed> 0xEe3C1B43482bf018ac960EeA8B57d8e576368D57 (type: address),\n        value: 5301567942 (type: uint256)\n      )\n\n    Warning: Could not decode event!\n\n    Warning: Could not decode event!\n\n    Warning: Could not decode event!\n\n    Ambiguous event, possible interpretations:\n    * UsingERC20.Transfer(\n        from: <indexed> 0x14f62dAEEE9ef67588BC882480b1C7992980fCaA (type: address),\n        to: <indexed> 0x39FbDfF41f8a2A0F6FC6292507344C95DC8F8047 (type: address),\n        value: 500000000000000 (type: uint256)\n      )\n    * IERC20.Transfer(\n        from: <indexed> 0x14f62dAEEE9ef67588BC882480b1C7992980fCaA (type: address),\n        to: <indexed> 0x39FbDfF41f8a2A0F6FC6292507344C95DC8F8047 (type: address),\n        value: 500000000000000 (type: uint256)\n      )\n\n\n    ---------------------------\n\n\n  3 passing (1m)\n  1 failing\n\n  1) Contract: My contract test\n       Allow users to migrate:\n     Error: Returned error: VM Exception while processing transaction: revert TX Limit Exceeded -- Reason given: TX Limit Exceeded.\n      at Context.<anonymous> (test\/testContract.js:58:20)\n      at processTicksAndRejections (node:internal\/process\/task_queues:95:5","40":"Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     We don\u00a1\u00aft allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.\n                \n                    \n                        Closed 7 days ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nIn traditional languages like C, Java, <python>; after learning basics, tons of practice questions are found on the internet. But in <solidity>, I didn't find any websites for that. Can you suggest any websites or anything that I should do to improve my concepts and grip in <solidity>.\nI tried finding practice questions online.","41":"So I have this contract here named My<token>\n\/\/ SPDX-License-Identifier: MIT\npragma <solidity> ^0.8.9;\n\nimport \"@<openzeppelin>\/contracts\/<token>\/ERC721\/ERC721.sol\";\nimport \"@<openzeppelin>\/contracts\/access\/Ownable.sol\";\n\ncontract My<token> is ERC721, Ownable {\n    constructor() ERC721(\"My<token>\", \"MTK\") {}\n\n    function safeMint(address to, uint256 <token>Id) public onlyOwner {\n        _safeMint(to, <token>Id);\n    }\n}\n\nand I am importing it from another contract named Marketplace\n\/\/ SPDX-License-Identifier: MIT\npragma <solidity> ^0.8.9;\n\nimport \".\/My<token>.sol\";\n\ncontract Marketplace {\n    My<token> <token>= new My<token>();\n\n    constructor() {}\n\n    function sell(address _address, uint256 <token>Id) public {\n       require(<token>.ownerOf(<token>Id) == msg.sender, \"Unauthorized.\");\n       require(_address != address(0));\n    }\n}\n\nAnd I am trying to do a unit test:\nconst { expect } = require(\"chai\");\nconst { <ether>s } = require(\"<hardhat>\");\n\nit(\"should sell the minted <token>\", async function() {\n  const [owner] = await <ether>s.getSigners();\n\n  const Market = await <ether>s.getContractFactory(\"Marketplace\");\n  const marketContract = await Market.deploy();\n  \n  const <token> = await <ether>s.getContractFactory(\"My<token>\");\n  const <token>Contract = await <token>.deploy();\n\n  await <token>Contract.safeMint(owner.address, 1);\n  \/\/IT FAILS THE CODE BELOW\n  await marketContract.sell(<token>Contract.address, 1);\n})\n   \n\nIt seems that it cannot read the <token> with the ID of 1 when I have minted it with the <token>Contract. Then it gives me error that the <token> ID is invalid because of the require I have provided in the Marketplace. Please help me. Thanks","42":"the Error being specified is\nrevert\n    The transaction has been reverted to the initial state.\nNote: The called function should be payable if you send value and the value you send should be less than your current balance.\nDebug the transaction to get more information.\n\n\/\/SPDX-License-Identifier:MIT\npragma <solidity> 0.8.8;\ncontract Giftcard{\n    event UniqueCardId(uint indexed Id,address indexed owner);\n    \/\/Enter The Giftcard amount\n    \/\/Pay the gift card by making multiple transations\n    \/\/require(giftcard owner should approve the withdrawl )\n    address[]  Giftcardowners;\n    mapping(address => uint) amountUploaded;\n    function Addamount() external payable{\n        require(msg.value >= 1 <ether>,\"Gift card amount to small\");\n        amountUploaded[msg.sender] = msg.value;\n        Giftcardowners.push(msg.sender);\n        emit UniqueCardId(Giftcardowners.length-1,msg.sender);\n    }\n    function GetGiftcard(uint _cardId) payable external {\n        require(Giftcardowners.length > _cardId,\"Id doesnot exits\");\n        address owner = Giftcardowners[_cardId-1];\n        uint amount = amountUploaded[owner];\n        require(amount >= 1 <ether>,\"transfered is less than 1 <ether>\");\n       \/\/ (bool successs,)  = payable(msg.sender).call{value:amount}(\"\");\n        \/\/require(successs,\"transaction reverted\");\n        payable(msg.sender).transfer(1 <ether>);\n    }\n    function getBalance() external view  returns(uint balance){\n        return address(this).balance;\n    }\n}\n\nFirstly I called the Addamount function by paying more than 1 <ether> to the smart contract\nnow after that when the GetGiftcard function is called the transaction is reverted. I am unable to find a solution\nunable to understand the concept","43":"Closed. This question is not about programming or software development. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     This question does not appear to be about a specific programming problem, a software algorithm, or software tools primarily used by programmers. If you believe the question would be on-topic on another Stack Exchange site, you can leave a comment to explain where the question may be able to be answered.\n                \n                    \n                        Closed 8 days ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\ni am trying to find out just how to get any and all <bitcoin> to which I've been told were mined by me after being in a mining pool that i had long forgotten i had even joined after 2 trips to state funded destinations and 18 google accounts later just how do identify such awards, I've been trying this for four months now totally broke busted homeless and disgusted","44":"I can open <remix> in the past smoothly, but today I can't open it anymore.\nThe web page reminds me to do a hard refresh. I tried for many times, but it doesn't work.\nI have also tried to use another browser, change my proxy server and <rest>art my computer. None of these solved my problem.\nI can't reinstall my browser because my <crypto> wallet was plugged to it.\nI wonder why this error occurs and how I can solve this to use <remix> in my browser normally.","45":"I want to build a smart contract function, which use caller's password as params.\nI have no knowledge about blockchain security, so I ask the following question:\nWhen calling a smart contract function, do the params record on blockchain?\nFurther more, what information will record in blockchain if an address calls a function of a smart contract?\nI think the logs emit by the events must record on blockchain, besides these, anything more?\nI've learned before that a contract address calling leaves logs on blockchain, but an account address(EOA) calling doesn't. Is it true?","46":"I want to get all new transactions from a specified wallet and Im using this code. It just dont work when I use the function tx[\"transaction\"][\"from\"] and I filter the wallet or ca I want on \"WALLET\".\nIm using Alchemy methods with ws and I have read the documentation about how to use it, I should be missing something.\nconst { Alchemy, Network, AlchemySubscription } = require(\"alchemy-sdk\")\nconst {<ether>s, FixedNumber} = require(\"<ether>s\")\nconst delay = require('delay')\nrequire(\"dotenv\").config()\n\nconst ARBI_WS_KEY = process.env.ARBI_WS_KEY\n\nconst settings = {\n  <api>Key: ARBI_WS_KEY, \/\/ Replace with your Alchemy <api> Key\n  network: Network.ARB_MAINNET, \/\/ Replace with your network\n}\n\nconst alchemy = new Alchemy(settings)\n\n\/\/ Subscription for Alchemy's minedTransactions <api>\nconst add = async () => {\n    alchemy.ws.on(\n        {\n            method: AlchemySubscription.MINED_TRANSACTIONS,\n        },\n        (tx) => {\n            let add0 = String(tx[\"transaction\"][\"from\"])\n\n            if( add0 == \"WALLET\"){\n                console.log(tx[\"transaction\"][\"hash\"])\n            }\n        }\n    )\n}\n\nIts weird because everything works when I filter tx[\"transaction\"][\"to\"] and I specify a wallet or a contract to filter but when trying to filter \"from\" I dont get anything.","47":"I want to run predfined 10 eth miners on private network so no one can enter the network except the 10 miners that I want.\nI initialized a network using geth and I enabled --nodiscover option.\nIs that enough to secure my network ?\nNote: the network is on internet not local network","48":"I am using kiwi <token> pool I have deployed payouts wallet as batchpayments address and minter wallet as account address but I am not receiving amount in my wallet,amount is transact to batchpayment but not in my wallet\nI have tried with different account but the result is same","49":"We want to send <token>s to multiple addreses without using any loop and also we did'nt wrote the <solidity>. If im using loop site getting very slow and also it throw timeout error. Is There any possiable to solve this.\nWe want code node or <angular> js","50":"I am writing a modue in the <move> language for Sui, I cannot find any doc regarding generating random number in the language?\nany suggestion?\nI checked this before\nhttps:\/\/<move>-book.com\/","51":"I am completely new to this blockchain world so I want to try learn it. While I am following a tutorial to create a simple ERC-1155 contract to mint a <token> and set its price. When I am trying to run the buy<token> function from another address, it keeps saying \"Not Enough Fund\". When I debug the msg.value value is 0, even though I have 100 <ether>s balance on each of my address. When I change the amount of <token> to 0, it works successfully. What should I need to do to be able to do the transaction?\nLog\nThis is my contract that I have modified on:\n\/\/ Contract based on https:\/\/docs.<openzeppelin>.com\/contracts\/4.x\/<erc1155>\n\/\/ SPDX-License-Identifier: MIT\n\npragma <solidity> ^0.8.0;\nimport \"@<openzeppelin>\/contracts\/<token>\/<erc1155>\/<erc1155>.sol\";\n\n\/**\n * @title <nft>Minter\n * @dev <nft> Contract Minter\n * @custom:dev-run-script .\/scripts\/deploy_with_<ether>s.ts\n *\/\ncontract <nft>Minter is <erc1155> {\n  constructor() <erc1155>(\"https:\/\/raw.githubusercontent.com\/noopmood\/Tutorial<nft>InGo\/main\/metadata\/{id}.json\") payable {}\n  \n  \/\/ <defi>ne the mapping of addresses to balances\n  mapping(address => mapping(uint256 => uint256)) public _balances;\n\n  \/\/ <defi>ne the mapping of address to <token>Ids owned\n  mapping(address => uint256[]) public _<token>Ids;\n\n  \/\/ <defi>ne the mapping of <token>Id to price\n  mapping(uint256 => uint256) public <token>Price;\n\n  \/\/ <defi>ne the sender to address payable type\n  address payable public sender;\n\n  struct <token> {\n    uint256 <token>Id;\n    uint256 balance;\n  }\n\n  function mintCaller(uint256 <token>Id, uint256 amount) public {\n    _mint(msg.sender, <token>Id, amount, \"\");\n  }\n\n  \/\/ Mints new <token>s and sets the price for each <token>.\n  function mintAddress(uint256 <token>Id, uint256 amount, address addr, uint256 price) public{\n    _mint(addr, <token>Id, amount, \"\");\n    \/\/ Update the balance of the recipient\n    _balances[addr][<token>Id] += amount;\n     \/\/ Add the <token>Id to the address\n    _<token>Ids[addr].push(<token>Id);\n    \/\/ Set the price of the <token>\n    <token>Price[<token>Id] = price;\n  }\n\n  \/\/ Get all <token>Ids from its owner address\n  function get<token>IdsByAddress(address addr) public view returns (uint[] memory) {\n    return _<token>Ids[addr];\n  }\n\n  \/\/ Get the balance \/ amount of the <token>Id\n  function get<token>ByIdAndAddress(address addr, uint256 <token>Id) public view returns (<token> memory) {\n    <token> memory result;\n    result.<token>Id = <token>Id;\n    result.balance = _balances[addr][<token>Id];\n    return result;\n  }\n\n  \/\/ Get the <token>Ids along with its corresponding balances\/amount\n  function getAll<token>ByAddress(address holder) public view returns (<token>[] memory) {\n    <token>[] memory result = new <token>[](_<token>Ids[holder].length);\n    for (uint i = 0; i < _<token>Ids[holder].length; i++) {\n      result[i].<token>Id = _<token>Ids[holder][i];\n      result[i].balance = _balances[holder][_<token>Ids[holder][i]];\n    }\n    return result;\n  }\n\n  \/\/ Transfers the <token>s from one address to another.\n  function transfer(address addr, uint256 <token>Id, uint256 amount) public {\n    require(_balances[msg.sender][<token>Id] >= amount, \"Not enough balance\");\n    \/\/ Transfer the <token>\n    _safeTransferFrom(msg.sender, addr, <token>Id, amount, \"\");\n    \/\/ Update the sender's balance\n    _balances[msg.sender][<token>Id] -= amount;\n    \/\/ Update the recipient's balance\n    _balances[addr][<token>Id] += amount;\n  }\n\n  \/\/ Allows a buyer to purchase a <token> by sending the required amount to the contract and updating the balance of the buyer.\n  function buy<token>(uint256 <token>Id, uint256 amount) public payable {\n    require(msg.value >= amount * <token>Price[<token>Id], \"Not enough funds\");\n    \/\/ Deduct the amount from the buyer\n    sender = payable(msg.sender);\n    sender.transfer(amount * <token>Price[<token>Id]);\n    \/\/ Transfer the <token> to the buyer\n    _safeTransferFrom(address(0), msg.sender, <token>Id, amount, \"\");\n    \/\/ Update the buyer's balance\n    _balances[msg.sender][<token>Id] += amount;\n  }\n}\n\nOn what the step to reproduce this:\n\nDeploy the contract with value, for me I pass 20 <ether>\nRun the mintAddress function by passing, <token>Id: 1, amount: 10, price: 10, address: the address an account\nRun the transfer function by passing address: the address of account you want to transfer the <token> into, <token>Id: 1, amount: 10\nChange the account in upper part to the address you use in transfer function\nRun buy<token> function, <token>Id: 1, amount: 10\nIt will said Not Enough Fund\n\nbuy<token>\nWhat I have tried so far:\n\nI read in another post, that I should deploy the contract with the value in it. But it still doesn't work\nI have checked that the balance of my account in <remix> have 100 <ether>s, but when I try to doing the buy <token> with it, it still said 'Not Enough Fund'\n\nWhat I am expecting:\nTo be able to buy the <token> with the price that has been set when minting the <token>.","52":"I am getting this error while deploying the Mock on development environment using brownie\nRFCoordinatorV2Mock.constructor confirmed (code size to deposit exceeds maximum code size)   Block: 1   Gas used: 1000000 (100.00%)\nI have tried to re<move> some functions <defi>nation which I'm not going to use but still even after reducing the code length to 248 lines I am still getting the same error.\nHow do I resolve it?\nI have tried the reduce the code length and expected that it would work by doing so but, it is still not working.","53":"I am trying to ascertain exactly how block explorers yield reverted transactions from an <api> call.\nDoes it use getLogs()? Or is there another standard for finding specific types of transactions like this? If so, what differs in the search\/on chain logging activity?\nI have used getLogs() however haven\u00a1\u00aft explored the intricacies of what makes transactions lok different depending on their type to <api> calls","54":"Completed the local node setup on ubuntu 20.04, and the <chainlink> node is up and running.\nDeployed the Operator.sol, while executing the 'setAuthorizedSenders' method from <remix> getting following error:\n\nGas estimation errored with the following message (see below). The transaction execution will likely fail. Do you want to force sending?\nexecution reverted: Cannot set authorized senders\n{\n\"originalError\": {\n\"code\": 3,\n\"data\": \"0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001d43616e6e6f742073657420617574686f72697a65642073656e64657273000000\",\n\"message\": \"execution reverted: Cannot set authorized senders\"\n}\n}","55":"I am able to enroll the Admin for an organization. I am also able to register a user using the admin. However, I am not able to re<move> the User completely. I can re<move> it from the CouchDB wallet though.\nThis is what I am getting on giving the commands in bold:\nnode enrollUser.js 'CAAdmin@org1.example.com' admin adminpw\nUser enrollment completed successfully.\nnode registerUser.js 'CAAdmin@org1.example.com' 'User@org1.example.com' '{\"secret\": \"userpw\"}'\nSuccessfully registered the user with the User@org1.example.com enrollment ID and userpw enrollment secret.\nUser registration completed successfully.\nnode enrollUser.js 'User@org1.example.com' 'User@org1.example.com' userpw\nUser enrollment completed successfully.\nnode revokeUser.js 'CAAdmin@org1.example.com' 'User@org1.example.com'\nSuccessfully revoked certificate\nnode registerUser.js 'CAAdmin@org1.example.com' 'User@org1.example.com' '{\"secret\": \"userpw\"}'\nFailed to register user: Error: fabric-ca request register failed with errors [[\n\n? {\ncode: 74,\nmessage: \"Identity 'User@org1.example.com' is already registered\"\n? }\n]]\n\nI am using the following code to re<move> the user\n\nlet revokeRequest = { enrollmentID: enrollmentID };\nawait ca.revoke(revokeRequest, adminUser);\nawait wallet.re<move>(enrollmentID);","56":"Here is my code, I have also added the options as well in the approve function which contains the from, to, gasLimit but that also doesn't work for me\nconst { POSClient, use } = require('@<matic>network\/<matic>js');\nconst { Web3ClientPlugin } = require('@<matic>network\/<matic>js-web3');\nconst HDWalletProvider = require('@<truffle>\/hdwallet-provider');\nrequire('dotenv').config();\n\nuse(Web3ClientPlugin);\n\nasync function getPOSClient() {\n    const posClient = new POSClient();\n    return await posClient.init({\n        network: 'testnet',\n        version: 'mumbai',\n        parent: {\n            provider: new HDWalletProvider(\n                process.env.PVT_KEY,\n                process.env.GOERLI_RPC\n            ),\n            defaultConfig: {\n                from: process.env.FROM_ADDRESS,\n            },\n        },\n        child: {\n            provider: new HDWalletProvider(\n                process.env.PVT_KEY,\n                process.env.MUMBAI_RPC\n            ),\n            defaultConfig: {\n                from: process.env.FROM_ADDRESS,\n            },\n        },\n    });\n}\n\nasync function approve<token>() {\n    const posClient = await getPOSClient();\n    \/\/ console.log(' ~ file: index.js:36 ~ approve<token> ~ posClient', posClient);\n\n    const erc20<token> = posClient.erc20(process.env.ROOT_<token>, true);\n\n    const result = await erc20<token>.approve('1000');\n\n    const txHash = await result.getTransactionHash();\n    console.log('txHash', txHash);\n\n    const receipt = await result.getReceipt();\n    console.log('receipt', receipt);\n}\n\napprove<token>();\n\n\nThe error which I'm getting while approving the <token>,\nError: execution reverted: ERC20: approve to the zero address\n0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002245524332303a20617070726f766520746f20746865207a65726f2061646472657373000000000000000000000000000000000000000000000000000000000000\n\nI have also mapped the <token> from <polygon> <token> mapper portal also. Please give your feedback","57":"I'm learning how the Uniswapv2 contracts work but I can't seem to wrap my mind around the swap() function.\nReference: https:\/\/github.com\/Uniswap\/v2-core\/blob\/master\/contracts\/UniswapV2Pair.sol#L173\nLines 173-174 contain:\nbalance0 = IERC20(_<token>0).balanceOf(address(this));\nbalance1 = IERC20(_<token>1).balanceOf(address(this));\n\nMy question is, when & whose balances are these?\nA. These are the same as _reserve0 & _reserve1 after the most recent swap and will be used to synchronize reserves.\nB. These are the quantities of each <token> the user making the swap currently possesses.\nC. None of the above. It's something else. Please explain the flow of this function. I cannot find a clear and concise <defi>nition anywhere.","58":"I have a geth server running on local with dev chain. I would like to sync an Erigon node with the geth server. I tried passing the geth enode address as staticpeer to the Erigon server but the syncing isn't working.","59":"I am planning out a new <project> in which I need to connect one particular Fiat payment gateway to my smart contract. I don't want to have a system with a centralized backend, so I am exploring the possibility to use <chainlink> to communicate with <api> and then pass response to my smart contract. I know that <chainlink> allows any contract to access any external data source through their decentralized oracle network. The problem is I can't approximate how much LINK it will cost me to get a response from 1 oracle. Is there some average cost of a 1 response from an oracle and what determines such cost\nI tried to look up this information, but it does not seem that this topic is discussed much. Also probably I didn't look in the right place","60":"While attempting to fund me contract is tell me it encountered an error without specifying the error. I attempted to fund 0.1 eth through the fund function, and in the terminal it says:\n[block:8404521 txIndex:12]\nfrom: 0x8a9...e4303\nto: FundMe.fund() 0x542...E109C\nvalue: 100000000000000000 wei\ndata: 0xb60...d4288\nlogs: 0\nhash: 0x29a...97939\n\nand in the <ether>scan it says:status fail :\nContract 0x5422f3458be343e378e7a399e16fff548e7e109c\n Warning! Error encountered during contract execution [execution reverted] \n\nI tried looking for problems with my code and found none.\n\/\/ SPDX-License-Identifier: MIT\n\npragma <solidity> >=0.6.6 <0.9.0;\n\nimport \"@<chainlink>\/contracts\/src\/v0.8\/interfaces\/AggregatorV3Interface.sol\";\n\/\/import \"@<chainlink>\/contracts\/src\/v0.8\/vendor\/SafeMath<chainlink>.sol\"; won't need in later complier versions.\ncontract FundMe {\n    \n\n    mapping(address => uint256) public addressToAmountFunded;\n\n    function fund() public payable {\n        uint256 minimumUSD = 50 * 10 ** 18;\n        require( getConversionRate(msg.value) >= minimumUSD,\"You need to send more Eth\");\n        addressToAmountFunded[msg.sender] += msg.value;\n    }\n\n    function getVersion() public view returns (uint256){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\n        return priceFeed.version();\n    }\n\n    function getPrice() public view returns (uint256){\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\n        (,int256 answer,,,)=priceFeed.latestRoundData();\n        return uint256(answer * 10000000000);\n    }\n    \/\/10000000000 = Gwei which is why we added 10 zeros to getPrice(answer) to convert it to Wei amount\n    function getConversionRate(uint256 ethAmount) public view returns (uint256){\n        uint256 ethPrice = getPrice();\n        uint256 ethAmountInUsd = (ethPrice * ethAmount)\/ 1000000000000000000; \/\/divide 2x because we added 10*((getPrice)answer))\n        return ethAmountInUsd;\n    }\n}","61":"I am a final year Computer Engineering student.  I have to write a research paper and I have decided to do it on blockchain technology since I have already written a survey paper as my minor, which is based on Blockchain and DDoS Mitigation Strategies.\nI have read through various research papers that tackle the same and especially focusing upon the Future Scope section of each to understand what I can work on to come up with a solution but I am not able to get many ideas.\nWhat I need:\n\nA software program that simulates a blockchain network, and allows me to test attacks and\/or modify smart contract code. I have tried working out 'blocksim' and 'simblock', one does not run for me, the other will take days for me to try the demo version.\n\nIf possible, though asking for something far-fetched, a solution I could work on or atleast a direction in which I can look considering I can code because gaining deep understanding of Blockchain and what and how I can improve in the same is complicated, especially with not much knowledge-base of security and testing which is half as major for this <project>.\n\n\nHelp of any sorts is really appreciated!\nAll is mentioned above.","62":"<chainlink> automation enables conditional execution of smart contracts functions. However, when calling function from the smart contract, it is the <chainlink> registry contract that calls the function, and not the address that registered the UpKeep.\nTherefore, it is likely that the call will fail if the function to call has a require that forces the caller (msg.sender) to be a given address (admin address for example).\nIs it possible to automate such kind of functions (with msg.sender set to a needed address) with <chainlink> Automation ?\nAs an example:\nmapping() private _balance;\naddress public admin;\n\nconstructor {\n    admin = msg.sender;\n}\n\nmodifier onlyAdmin {\n    require(msg.sender == admin, \"Only admin\");\n    _;\n}\n\nfunction pay(address _account, uint256 _amount) public onlyAdmin {\n    _balance[_account] += _amount; \n}\n\nfunction getBalance(address _account) public view returns(uint256) {\n    return _balance[_account];\n}\n\nupdate a balance through <chainlink> automation. I expect the balance of _account to update to its previous value + _amount.","63":"All is good and work very well, but why when I need to call function request<token>s, only owner can have success on transaction while other address can't use the function because the contract cause execution revert?\nADDRESS:\n0x8c08a469BDFd679CEF0729bDEa52BC688d4bDbBC\n\/\\*\\*\n\\*Submitted for verification at BscScan.com on 2023-01-30\n\\*\/\n\n\/\\*\\*\n\/\/ contracts\/Faucet.sol\n\/\/ SPDX-License-Identifier: MIT\n\\*\/\n\npragma <solidity> ^0.8.17;\ninterface IERC20 {\nfunction transfer(address to, uint256 value) external returns (bool);\nevent Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract Faucet {\nuint256 constant public waitTime = 1440 minutes;\nbool public isFaucetActive = true;\naddress public owner;\nIERC20 public <token>Instance;\nmapping(address =\\> uint256) public lastAccessTime;\n\nconstructor(address \\_<token>Instance) {\nrequire(\\_<token>Instance != address(0));\n<token>Instance = IERC20(\\_<token>Instance);\nowner = msg.sender;\n}\n\nfunction request<token>s(uint8 \\_slice) public {\nrequire(allowedToWithdraw(msg.sender));\nrequire(isFaucetActive);\nuint256 <token>Amount;\nif(\\_slice == 1) {\n<token>Amount = 5 \\* 10**12;\n} else if(\\_slice == 2) {\n<token>Amount = 11 \\* 10**12;\n} else if(\\_slice == 3) {\n<token>Amount = 8 \\* 10**12;\n} else if(\\_slice == 4) {\n<token>Amount = 4 \\* 10**12;\n} else if(\\_slice == 5) {\n<token>Amount = 3 \\* 10**12;\n} else if(\\_slice == 6) {\n<token>Amount = 14 \\* 10**12;\n} else if(\\_slice == 7) {\n<token>Amount = 10 \\* 10**12;\n} else if(\\_slice == 8) {\n<token>Amount = 12 \\* 10**12;\n}\n<token>Instance.transfer(msg.sender, <token>Amount);\nlastAccessTime\\[msg.sender\\] = block.timestamp + waitTime;\n}\n\nfunction allowedToWithdraw(address \\_address) public view returns (bool) {\nif(lastAccessTime\\[\\_address\\] == 0) {\nreturn true;\n} else if(block.timestamp \\>= lastAccessTime\\[\\_address\\]) {\nreturn true;\n}\nreturn false;\n}\nfunction stopFaucet() public {\nrequire(msg.sender == owner);\nisFaucetActive = false;\n}\n\n    function activateFaucet() public {\n        require(msg.sender == owner);\n        isFaucetActive = true;\n    }\n\n}\n\nI try all my best, like 7\/8 different contract with different method","64":"You don't want to know how many hours I've spent trying to figure this one out.\nI'm trying to send a broadcast to the Cosmos Blockchain, via the Terra Pisco\/Rebel1 <api>.\nLUNA2: https:\/\/pisco-lcd.terra.dev\/swagger\/#\/\nLUNC: https:\/\/rebel1.grouptwo.org\/swagger\/#\/\nWhen I run the simulation <api>, the transaction works perfectly.\nHowever when I run a transaction just via the standard <api>, it fails with a \"signature verification failed\" error.\nThis issue is related to the signature being passed to Cosmos not containing the correct Chain-Id or Sequence Number. However I've confirmed that the base64 has it. And all the payloads being sent are correct (Protobuf & <rest> JSON), according to the Cosmos SDK support team.\nI have generated an issue in the cosmos-sdk repo below (it contains all the details, models, dtos, protos, I pass cosmos):\nhttps:\/\/github.com\/cosmos\/cosmos-sdk\/issues\/14789\n\nI've verified the Protobuf data according to terra-money's terra.js library\nhttps:\/\/github.com\/terra-money\/terra.js. And the data looks correct.\n\nI've also confirmed that the signature contains the correct Chain-Id & Sequence number.\n\n\nThis issue is related to the <c#> SDK that I'm currently building. It allows users to broadcast Tx data to Terra (Cosmos).\nHere's the link, if you want to generate a PR:\nhttps:\/\/github.com\/TerraMystics\/terra-sharp","65":"I just got started with blockchain concept and was trying to add <ether> on my public account for testnet Goerli. But online faucets aren't providing it and on some sites i'm getting message \"Insufficient funds for gas *Price + value\". I want <ether> to learn more things in metamask, someone help me with legit solution for it\nI tried many websites and faucets for it.","66":"On the web3<py> <ether>eum<testerprovider> blockchain, I tested the contract deployment example at https:\/\/web3<py>.readthedocs.io\/en\/v5\/contracts.html.\nBut I came across 2 errors.\npip config (windows 10) :\n\nweb3<py> (5.31.3)\neth-tester (0.8.0b3)\n\nHere is the code :\nfrom web3 import Web3\nfrom solcx import compile_source\nfrom pprint import pprint\n# <solidity> source code\ncompiled_sol = compile_source(\n    '''\n         pragma <solidity> ^0.8.17;\n    \n         contract Greeter {\n             string public greeting;\n    \n             constructor() public {\n                 greeting = 'Hello';\n             }\n    \n             function setGreeting(string memory _greeting) public {\n                 greeting = _greeting;\n             }\n    \n             function greet() view public returns (string memory) {\n                 return greeting;\n             }\n         }\n    ''',\n    output_values=['abi', 'bin']\n)\n\n# retrieve the contract interface\ncontract_id, contract_interface = compiled_sol.popitem()\n\n# get bytecode and abi\nbytecode = contract_interface['bin']\nabi = contract_interface['abi']\n\n# web3.<py> instance\nw3 = Web3(Web3.<ether>eum<testerprovider>())\n\n# set pre-funded account as sender\nw3.eth.default_account = w3.eth.accounts[0]\n\ngreeter_bin = w3.eth.contract(abi=abi, bytecode=bytecode)\n\n# Submit the transaction that deploys the contract\ntx_hash = greeter_bin.constructor().transact()              # <==== first error\n# tx_hash = greeter_bin.constructor().transact({'gas': 123456})\n\n# Wait for the transaction to be mined, and get the transaction receipt\ntx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)\npprint(dict(tx_receipt))\n\ngreeter_obj = w3.eth.contract(address=tx_receipt.contractAddress, abi=abi)\n\nprint(f\"{greeter_obj.functions.greet().call() = }\")      # <===== Second error\n\n\ntx_hash = greeter_obj.functions.setGreeting('Nihao').transact()\ntx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)\n\nprint(f\"{greeter_obj.functions.greet().call() = }\") \n\n1) The first error takes place at the contract deployment:\n\"TypeError: MockBackend.estimate_gas() takes 2 positional arguments but 3 were given.\"\nI fixed it by adding a dictionary with some gas but the exemple from Web3.<py> does not have this parameter. I'd like to know the reason. Did I miss something?\nC:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\eth_tester\\backends\\__init__.<py>:30: UserWarning: <ether>eum Tester: No backend was explicitly set, and no *full* backends were available.  Falling back to the `MockBackend` which does not support all <evm> functionality.  Please refer to the `eth-tester` documentation for information on what backends are available and how to set them.  Your <py>-<evm> package may need to be updated.\n  warnings.warn(\n\nTraceback (most recent call last):\n  File \"D:\\_P\\dev\\<python>\\blockchain\\web3\\tester1.<py>\", line 45, in <module>\n    tx_hash = greeter_bin.constructor().transact()\n  File \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\eth_utils\\decorators.<py>\", line 18, in _wrapper\n    return self.method(obj, *args, **kwargs)\n\n  .............\n\n  File \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\providers\\eth_tester\\middleware.<py>\", line 331, in middleware\n    return make_request(method, [filled_transaction] + list(params)[1:])\n  File \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\middleware\\formatting.<py>\", line 94, in middleware\n    response = make_request(method, params)\n  File \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\providers\\eth_tester\\main.<py>\", line 103, in make_request\n    response = delegator(self.<ether>eum_tester, params)\n  File \"cytoolz\\functoolz.<py>x\", line 253, in cytoolz.functoolz.curry.__call__\n  File \"cytoolz\\functoolz.<py>x\", line 249, in cytoolz.functoolz.curry.__call__\n  File \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\providers\\eth_tester\\defaults.<py>\", line 66, in call_eth_tester\n    return getattr(eth_tester, fn_name)(*fn_args, **fn_kwargs)\n  File \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\eth_tester\\main.<py>\", line 483, in estimate_gas\n    raw_gas_estimate = self.backend.estimate_gas(raw_transaction, raw_block_number)\nTypeError: MockBackend.estimate_gas() takes 2 positional arguments but 3 were given\n\n2) After fixing the first error by adding {'gas': 123456} in transact(), the second error takes place at greeter_obj.functions.greet().call() :\n\"ValueError: Error expected to be a dict.\"\nFor this one, I have no clue\nInformation?: impossible de trouver des fichiers pour le(s) mod?le(s) sp?cifi?(s).\nC:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\eth_tester\\backends_init_.<py>:30: UserWarning: <ether>eum Tester: No backend was explicitly set, and no full backends were available.  Falling back to the MockBackend which does not support all <evm> functionality.  Please refer to the eth-tester documentation for information on what backends are available and how to set them.  Your <py>-<evm> package may need to be updated.\nwarnings.warn(\n{'blockHash': HexBytes('0xafae7675633fedae22a1f5b9d11066ff78de5947f7b3e2915824823cc65d0e56'),\n 'blockNumber': 1,\n 'contractAddress': '0xa0Beb7081fDaF3ed157370836A85eeC20CEc9e04',\n 'cumulativeGasUsed': 21000,\n 'effectiveGasPrice': 1000000000,\n 'from': '0xaBbACadABa000000000000000000000000000000',\n 'gasUsed': 21000,\n 'logs': [],\n 'state_root': b'\\x00',\n 'status': 0,\n 'to': '',\n 'transactionHash': HexBytes('0x5193460ead56b33c2fa79b490a6c0f4e0d68e07c712d762afcadc5976148bf1a'),\n 'transactionIndex': 0,\n 'type': '0x2'}\n\nTraceback (most recent call last):\nFile \"D:_P\\dev\\<python>\\blockchain\\web3\\tester1.<py>\", line 54, in \nprint(f\"{greeter_obj.functions.greet().call() = }\")\nFile \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\contract.<py>\", line 970, in call\nreturn call_contract_function(\nFile \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\contract.<py>\", line 1525, in call_contract_function\nreturn_data = web3.eth.call(\nFile \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\module.<py>\", line 57, in caller\nresult = w3.manager.request_blocking(method_str,\nFile \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\manager.<py>\", line 198, in request_blocking\nreturn self.formatted_response(response,\nFile \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\manager.<py>\", line 170, in formatted_response\napply_error_formatters(error_formatters, response)\nFile \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3\\manager.<py>\", line 70, in apply_error_formatters\nformatted_resp = pipe(response, error_formatters)\nFile \"cytoolz\\functoolz.<py>x\", line 666, in cytoolz.functoolz.pipe\nFile \"cytoolz\\functoolz.<py>x\", line 641, in cytoolz.functoolz.c_pipe\nFile \"C:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\lib\\site-packages\\web3_utils\\method_formatters.<py>\", line 555, in raise_<solidity>_error_on_revert\nraise ValueError('Error expected to be a dict')\nValueError: Error expected to be a dict\nPlease note the status of the deployment transaction: 'status': 0\nIt failed but a contractAddress was returned !\nAs far as the UserWarning is concerned, I also tried unsuccessfully MockBackend (though it's the default backend):\nfrom eth_tester import MockBackend\nw3 = Web3(Web3.<ether>eum<testerprovider>(MockBackend()))\n\nLastly, I tried to install <py>-<evm> \"pip install <py>-<evm>\" to try <py><evm>Backend backend, but the installation failed at <py>ethash dependency:\n\"D:\\Program\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.34.31933\\bin\\HostX86\\x64\\cl.exe\" \/c \/nologo \/O2 \/W3 \/GL \/DNDEBUG \/MD -IC:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\include -IC:\\Users\\Gilles\\AppData\\Local\\Programs\\<python>\\<python>310\\Include \"-ID:\\Program\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.34.31933\\include\" \"-ID:\\Program\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Auxiliary\\VS\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.22000.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22000.0\\\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22000.0\\\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22000.0\\\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22000.0\\\\cppwinrt\" \/Tcsrc\/libethash\/io_win32.c \/Fobuild\\temp.win-amd64-c<python>-310\\Release\\src\/libethash\/io_win32.obj -Isrc\/ -std=gnu99 -Wall\n      cl?: Ligne de commande warning D9002?: option '-std=gnu99' inconnue ignor?e\n      io_win32.c\n      c1: fatal error C1083: Impossible d'ouvrir le fichier source?: 'src\/libethash\/io_win32.c'?: No such file or directory\n      error: command 'D:\\\\Program\\\\Microsoft Visual Studio\\\\2022\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.34.31933\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\n      [end of output]\n\n  note: This error originates from a subprocess, and is likely not a problem with pip.\nerror: legacy-install-failure\n\n\u00a1\u00c1 Encountered error while trying to install package.\n\u00a8t\u00a9\u00a4> <py>ethash","67":"Confused about what could have caused this to stop working, I installed <solana> and anchor and was able to test <project>s.\nanchor --version anchor-cli 0.26.0\nnvm use 16.16.0\nNow using node v16.16.0 (<npm> v8.11.0)\n\nanchor init hello-world\nyarn install v1.22.19\nwarning package.json: No license field\ninfo No lockfile found.\nwarning No license field\n[1\/4] Resolving packages...\n[2\/4] Fetching packages...\n[3\/4] Linking dependencies...\n[4\/4] Building fresh packages...\nsuccess Saved lockfile.\nDone in 6.07s.\nInitialized empty Git repository in \/home\/user\/Code\/anchor-second-test\/hello-world\/.git\/\nhello-world initialized\n\ncd hello-world && anchor build works. Making no changes, I run anchor run test\n1) hello-world\n       Is initialized!:\n     TypeError: Cannot read properties of un<defi>ned (reading 'methods')\n      at \/home\/user\/Code\/anchor-second-test\/hello-world\/tests\/hello-world.ts:13:30\n      at Generator.next (<anonymous>)\n      at \/home\/user\/Code\/anchor-second-test\/hello-world\/tests\/hello-world.ts:31:71\n      at new Promise (<anonymous>)\n      at __awaiter (tests\/hello-world.ts:27:12)\n      at Context.<anonymous> (tests\/hello-world.ts:11:36)\n      at processImmediate (node:internal\/timers:466:21)\n\n\n\nerror Command failed with exit code 1.\ninfo Visit https:\/\/yarnpkg.com\/en\/docs\/cli\/run for documentation about this command.\n\nHere is hello-world.ts test file as generated:\nimport { Program } from \"@<project>-serum\/anchor\";\nimport { HelloWorld } from \"..\/target\/types\/hello_world\";\n\ndescribe(\"hello-world\", () => {\n  \/\/ Configure the client to use the local cluster.\n  anchor.setProvider(anchor.AnchorProvider.env());\n\n  const program = anchor.workspace.HelloWorld as Program<HelloWorld>;\n\n  it(\"Is initialized!\", async () => {\n    \/\/ Add your test here.\n    const tx = await program.methods.initialize().rpc();\n    console.log(\"Your transaction signature\", tx);\n  });\n});\n\nI have tried using node lts 16.16.0 instead of the latest lts, starting in a clean directory, checking that <typescript> was installed, running yarn install before running anchor build command. I checked that the <solana> keypair and json file was generated in the correct folder.","68":"After countless trials, I'm not able to send a transaction using the BSC tesntet, Web3 js and Metamask (I also tried with the Binance wallet).\nIt seems that everything works, but when I deploy the transaction I get errors like \"nonce too low\", \"transaction underprices\" and it doesn't matter if I manually change the nonce, gasLimit and price, and the amount to spend.\nAny idea? Do you know if there is any working example or did you experience similar issue?\nAny help\/comment\/suggestion is appreciated! Thank you in advance!\nUsed Binance testnet and web3 to code, sign and send a trasnaction --> I got several errors like \"transaction underpriced\", \"nonce too low\"","69":"On the web3<py> <ether>eum<testerprovider> blockchain, I send 2 <ether>s from the first test account to the second one. The <python> program ends normally but the transaction seems to fail :\n\nthe status of the transaction receipt ('status': 0), which I guess means failed.\nthe balance of the 2 accounts is not updated after the transaction.\n\npip config (windows 10) :\n\nweb3<py> (5.31.3)\neth-tester (0.8.0b3)\n\nCode:\nfrom web3 import Web3, <ether>eum<testerprovider>\nfrom pprint import pprint\n\nw3 = Web3(<ether>eum<testerprovider>())\nprint(f\"{w3.isConnected() = }\")\n\nprint(f\"\\n{w3.eth.get_balance(w3.eth.accounts[0]) = }\")\nprint(f\"{w3.eth.get_balance(w3.eth.accounts[1]) = }\")\n\ntx_hash = w3.eth.send_transaction(\n    {\n        'from': w3.eth.accounts[0],\n        'to': w3.eth.accounts[1],\n        'value': w3.toWei(2, '<ether>'),\n        'gas': 21000\n    }\n)\nprint(f\"\\n{tx_hash = }\")\n\nprint(\"\\ntx_receipt = \")\ntx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)\npprint(dict(tx_receipt))\n\nprint(f\"\\n{w3.eth.get_balance(w3.eth.accounts[0]) = }\")\nprint(f\"{w3.eth.get_balance(w3.eth.accounts[1]) = }\")\n\nTraces:\nw3.isConnected() = True\n\nw3.eth.get_balance(w3.eth.accounts[0]) = 1000000000000000000000000\nw3.eth.get_balance(w3.eth.accounts[1]) = 1000000000000000000000000\n\ntx_hash = HexBytes('0x72345d1c23a10ac3849e1f8e53b517da8200e58ab211ebaf44df732f6f8a29af')\n\ntx_receipt = \n{'blockHash': HexBytes('0xadfcec5788a8757a5eed6aeee15c997a6b75a612fa4919a878b02a69d04f8a0c'),\n 'blockNumber': 1,\n 'contractAddress': '0xa0Beb7081fDaF3ed157370836A85eeC20CEc9e04',\n 'cumulativeGasUsed': 21000,\n 'effectiveGasPrice': 1000000000,\n 'from': '0xaBbACadABa000000000000000000000000000000',\n 'gasUsed': 21000,\n 'logs': [],\n 'state_root': b'\\x00',\n 'status': 0,    <========   failure  ==========\n 'to': '0xaBbACaDaBA000000000000000000000000000001',\n 'transactionHash': HexBytes('0x72345d1c23a10ac3849e1f8e53b517da8200e58ab211ebaf44df732f6f8a29af'),\n 'transactionIndex': 0,\n 'type': '0x2'}\n\nw3.eth.get_balance(w3.eth.accounts[0]) = 1000000000000000000000000\nw3.eth.get_balance(w3.eth.accounts[1]) = 1000000000000000000000000\n\nPlease also note that this code works with ganache when I change the instance of web3 like that :\nw3 = Web3(Web3.HTTPProvider('HTTP:\/\/127.0.0.1:8545'))","70":"I am trying to generate a credential using the didkit-wasm library with the following code, but getting  error with prepareIssueCredential method: key expansion failed.\nAny idea what i could be doing wrong\nconst did = `did:pkh:tz:` + userData.account.address;\n  const credential = {\n    '@context': [\n      'https:\/\/www.w3.org\/2018\/credentials\/v1',\n      {\n        alias: 'https:\/\/schema.org\/name',\n        description: 'https:\/\/schema.org\/description',\n        website: 'https:\/\/schema.org\/url',\n        logo: 'https:\/\/schema.org\/logo',\n        BasicProfile: 'https:\/\/tzprofiles.com\/BasicProfile',\n      },\n    ],\n    id: 'urn:uuid:' + uuid(),\n    issuer: 'did:pkh:tz:tz1ZDSnw...',\n    issuanceDate: new Date().toISOString(),\n    type: ['VerifiableCredential', 'Company Credential'],\n    credentialSubject: {\n      id: did,\n      name: company.name,\n      description: company.description,\n      url: company.url,\n    },\n  };\n\n let credentialString = JSON.stringify(credential);\n  const proofOptions = {\n    verificationMethod: did + '#TezosMethod2021', \/\/subject's did\n    proofPurpose: 'assertionMethod',\n  };\n  const publicKeyJwkString = await JWKFromTezos(\n    'edpkuGHxcJDq9....' \/\/issuer's public key\n  );\n\n  let prepStr = await prepareIssueCredential(\n    credentialString,\n    JSON.stringify(proofOptions),\n    publicKeyJwkString\n  );","71":"It Shows multiple erros while installing <npm> in my smartcontracts\n\nI've tried <npm> install --save core-js@^3 --legacy-peer-deps too","72":"I'm trying to get the pair address if the USDC \/ USDT pair on uniswap using the v2 core. The pair address exists on uniswap but when i run the code it returns me a null address (0x0000000000000000000000000000000000000000). Im using the goerli testnet\nThe main file\nconst IUniswapV2Pair = require(\"@uniswap\/v2-core\/build\/IUniswapV2Pair.json\");\nconst IERC20 = require(\"@<openzeppelin>\/contracts\/build\/contracts\/ERC20.json\");\nconst { provider, uFactory } = require(\".\/config\");\nconst <ether>s = require(\"<ether>s\");\n\nlet <token>A, <token>B;\nconst get<token>AndContract = async (\n  _<token>AAddress,\n  _<token>BAddress,\n  _provider\n) => {\n  const <token>Acontract = new <ether>s.Contract(\n    _<token>AAddress,\n    IERC20.abi,\n    _provider\n  );\n  const <token>Bcontract = new <ether>s.Contract(\n    _<token>BAddress,\n    IERC20.abi,\n    _provider\n  );\n\n  <token>A = {\n    address: _<token>AAddress,\n    decimals: 18,\n  };\n\n  <token>B = {\n    address: _<token>BAddress,\n    decimals: 18,\n  };\n};\n\nconst <token>sAndContract = get<token>AndContract(\n  process.env.<token>_A,\n  process.env.<token>_B,\n  provider\n);\n\nconst main = async () => {\n  const pairAddress = await uFactory.getPair(<token>A.address, <token>B.address);\n  console.log(pairAddress); \/\/ output = 0x0000000000000000000000000000000000000000\n};\n\nmain();\n\n\nthe config file\nconst IUniswapV2Factory = require(\"@uniswap\/v2-core\/build\/IUniswapV2Factory.json\");\nconst hre = require(\"<hardhat>\");\n\nlet provider;\n\nprovider = new hre.<ether>s.providers.WebSocketProvider(\n  `wss:\/\/eth-goerli.g.alchemy.com\/v2\/${process.env.ALCHEMY_<api>_KEY}`\n);\n\nconsole.log(\"uFactory\");\nconst uFactory = new hre.<ether>s.Contract(\n\/\/ the address is 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\n  process.env.UNISWAP_FACTORY_ADDRESS,\n  IUniswapV2Factory.abi,\n  provider\n);\n\n\nmodule.exports = { provider, uFactory };\n\nIs my code wrong?\nI looked up the uniswap docs and i followed it and checked that the pair with the 2 addresses existed but it kept returning me 0x0000000000000000000000000000000000000000.","73":"I'm following along with this video:\nhttps:\/\/www.youtube.com\/watch?v=y8Thrrw25rQ&list=PLmnzWPUjpmaGzFNq2PeMljHNrXGwj2TDY&index=1\ntrying to set up my dev environment for chialisp.\nInstalled <python>, created virtual environment, ran pip install chia-dev-tools (got this working after installing c++ buildtools). All looks to work fine but when i run the chia --help command I'm getting errors\nTraceback (most recent call last):\nFile \"\", line 198, in _run_module_as_main\nFile \"\", line 88, in run_code\nFile \"C:\\chialisp\\chiatest1\\venv\\Scripts\\chia.exe_main.<py>\", line 4, in \nFile \"C:\\chialisp\\chiatest1\\venv\\Lib\\site-packages\\chia\\cmds\\chia.<py>\", line 18, in \nfrom chia.cmds.peer import peer_cmd\nFile \"C:\\chialisp\\chiatest1\\venv\\Lib\\site-packages\\chia\\cmds\\peer.<py>\", line 7, in \nfrom chia.cmds.cmds_util import NODE_TYPES\nFile \"C:\\chialisp\\chiatest1\\venv\\Lib\\site-packages\\chia\\cmds\\cmds_util.<py>\", line 17, in \nfrom chia.rpc.wallet_rpc_client import WalletRpcClient\nFile \"C:\\chialisp\\chiatest1\\venv\\Lib\\site-packages\\chia\\rpc\\wallet_rpc_client.<py>\", line 3, in \nfrom chia.data_layer.data_layer_wallet import Mirror, SingletonRecord\nFile \"C:\\chialisp\\chiatest1\\venv\\Lib\\site-packages\\chia\\data_layer\\data_layer_wallet.<py>\", line 42, in \nfrom chia.wallet.outer_puzzles import AssetType\nFile \"C:\\chialisp\\chiatest1\\venv\\Lib\\site-packages\\chia\\wallet\\outer_puzzles.<py>\", line 8, in \nfrom chia.wallet.cat_wallet.cat_outer_puzzle import CATOuterPuzzle\nFile \"C:\\chialisp\\chiatest1\\venv\\Lib\\site-packages\\chia\\wallet\\cat_wallet\\cat_outer_puzzle.<py>\", line 11, in \nfrom chia.wallet.cat_wallet.cat_utils import (\nFile \"C:\\chialisp\\chiatest1\\venv\\Lib\\site-packages\\chia\\wallet\\cat_wallet\\cat_utils.<py>\", line 24, in \n@dataclasses.dataclass\n^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\tony\\AppData\\Local\\Programs\\<python>\\<python>311\\Lib\\dataclasses.<py>\", line 1220, in dataclass\nreturn wrap(cls)\n^^^^^^^^^\nFile \"C:\\Users\\tony\\AppData\\Local\\Programs\\<python>\\<python>311\\Lib\\dataclasses.<py>\", line 1210, in wrap\nreturn _process_class(cls, init, repr, eq, order, unsafe_hash,\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\tony\\AppData\\Local\\Programs\\<python>\\<python>311\\Lib\\dataclasses.<py>\", line 958, in _process_class\ncls_fields.append(_get_field(cls, name, type, kw_only))\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFile \"C:\\Users\\tony\\AppData\\Local\\Programs\\<python>\\<python>311\\Lib\\dataclasses.<py>\", line 815, in _get_field\nraise ValueError(f'mutable default {type(f.default)} for field '\nValueError: mutable default <class 'chia.types.blockchain_format.program.Program'> for field limitations_solution is not allowed: use default_factory\nAny thoughts on where I might be going wrong??","74":"when i deploy a smart contract on joerli testnet by using <hardhat>\ni faced this eroor in final step to get an address for the block\nReferenceError:","75":"I want to synchronize all transactions with the <database>, so I use get_ Block method. The code is as follows\u00a3\u00ba\n    cur_block_num = web3.eth.get_block_number()\n    if cur_block_num <= last_block_num:\n        return\n    res = web3.eth.get_block(cur_block_num, full_transactions=True)\n    block_info = json.loads(web3.toJSON(res))\n    block_info = convert_numeric_to_str(block_info)\n    transactions = block_info.pop('transactions')\n    db[\"block_info\"].insert_one(block_info)\n\nbut When I get all the transactions in block 16498524, I eventually include the transactions in other blocks. Why is this, and sometimes it is normal? Is my method wrong? Have I got the transactions to be processed? Or is the node alchemy I use now returning the wrong value?","76":"I built transaction at nodejs by using cardano-cli.\ncardano-cli transaction build \\\n--alonzo-era \\\n--testnet-magic 1 \\\n--tx-in dbf7f56f844cc4b85daccb62bedf4eeff0a84cb060f0f79b206c7f087b3f0ba1#0 \\\n--tx-in dbf7f56f844cc4b85daccb62bedf4eeff0a84cb060f0f79b206c7f087b3f0ba1#1  \\\n--tx-in 61b88efd41ccbb0e71c48aca2cbe63728078ec7fb20ec9c27acfe33d0647248d#0 \\\n--tx-in-script-file \/cardano\/plutus\/direct-sale.plutus \\\n--tx-in-datum-file \/cardano\/temp\/testnet\/datums\/list.json \\\n--tx-in-redeemer-file \/cardano\/temp\/testnet\/redeemers\/buy.json \\\n--required-signer-hash 2be4a303e36f628e2a06d977e16f77ce2b9046b8c56576bb5286d1be \\\n--tx-in-collateral dbf7f56f844cc4b85daccb62bedf4eeff0a84cb060f0f79b206c7f087b3f0ba1#1 \\\n\n... some txout ...\n\n--change-address addr_test1qq47fgcrudhk9r32qmvh0ct0wl8zhyzxhrzk2a4m22rdr0sqcga2xfzv6crryyt0sfphksfr947jjddy3t4u0qwfmmfq2h0pj8 \\\n--protocol-params-file \/cardano\/testnet\/protocol-parameters.json \\\n--mint \"2 20edea925974af2102c63adddbb6a6e789f8d3a16500b15bd1e1c32b.4143544956495459\" \\\n--mint-script-file \/cardano\/plutus\/activity-minter.plutus \\\n--mint-redeemer-file \/cardano\/redeemers\/mint.json \\\n--invalid-before 19059345 \\\n--invalid-hereafter 19059495 \\\n--out-file .\/tx.raw\n\nAfter run this command, I got cborHex and I used this at frontend.\nWhen I sign by using name wallet, I got some error.\n\"transaction submit error ShelleyTxValidationError ShelleyBasedEraBabbage (ApplyTxError [UtxowFailure (FromAlonzoUtxowFail (WrappedShelleyEraFailure (InvalidWitnessesUTXOW [VKey (VerKeyEd25519DSIGN \\\"cf949f966b426f25db11b6062edc31312001e3cd0ced4c6c7db3da7b5ac9766b\\\")])))])\"\n\nBut when I sign with payment.skey at nodejs, it was worked.\nI was discuss Alexd1985 at cardano forum.\nhttps:\/\/forum.cardano.org\/t\/how-to-resolve-shelleytxvalidationerror-shelleybasederababbage-applytxerror-utxowfailure-fromalonzoutxowfail-wrappedshelleyerafailure-invalidwitnessesutxow-error\/113555\/4\nWhat is solution for this problem?","77":"I am new to blockchain development.\nI have policy id of a collection of cardano <token> and I want to know how many <token>s of that collection are listed on a specific marketplace (ie: jpg.store). I have the script address of that marketplace. Is there any way to make a <rest> <api> call to get the information?\nI was trying to get some help from this documentation (https:\/\/developers.cardano.org\/docs\/get-started\/dandelion-<api>s)\nBut I am still helpless.","78":"I've tested this function on a few different examples and it seems to return proper numbers but I'm not sure if this is correct and will work for all cases (different decimals of A and B, different values of amountOfB and priceForA etc).\nIs this the right way to compute price of <token> A that have fixed price in amount of B <token>s?\nfunction calculatePrice(uint8 decimalsA, uint256 priceForA, uint256 amountOfB) public {\nreturn amountOfB * 10 ** decimalsA \/ priceForA;\n}   \n\n\nDecimals for both <token>s A and B can be equal or one can be higher or lower than the other.\nFor example\ndecimalsA = 6;\ndecimalsB = 18;\n\/\/ priceForA is price for 1 (human readable) A <token> which is 0.01 (human readable) B <token>s\n\/\/ so in other words for 1000000 A you need to pay 10000000000000000 B\npriceForA = 10000000000000000; \n\/\/ this is the amount of B <token>s that will be used to buy A <token>s\namountOfB = 50000000000000000;\n\nIn this example we should get 5000000 as return value so 5A (human readable) <token>s.","79":"Within my <project> I intend to send large volumes of transactions therefore for simplicity I am building a wrapper function for the following functions to be executed tog<ether>: contractName.functions.functionName(params).transact() and w3.eth.wait_for_transaction(tx_hash). However when I write the functions transact_and_wait with the above implemented within in the transactions do not get executed!\nImplementation of Transact and wait\ndef transact_and_wait(contract_function, transaction_params= {\"gas\": 100000}):\n    # Send the transaction\n    if transaction_params != {\"gas\": 100000}:\n        transaction_params[\"gas\"] = 100000\n\n    transaction_hash = contract_function.transact(transaction_params)\n \n    # Wait for the transaction to be mined\n    transaction_receipt = w3.eth.wait_for_transaction_receipt(transaction_hash)\n\n    return transaction_receipt\n\n\nWhere it is called via: Transact_and_wait(contractName.functions.functionName(account.address))\nFor example this should set the a role for a user <defi>ned via index 1\nHowever when I call. print(contractName.functions.stateVariable(account.address).call()) it returns 0\nIf i do the same process above but not within a functions:\ntx_hash = contractName.functions.functionName(account.address).transact({\"gas\": 100000}))\ntransaction_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)\n\nThen I can call the same getter: print(contractName.functions.stateVariable(account.address).call()\nIt returns 1.","80":"Introduction\nI'm developing a .NET 6 environment that has an <api> for transferring <ether> from one wallet to another wallet. It uses the N<ether>eum library for that.\nIssue\nI'm getting the Transaction Hash of the <ether> transfer. But when I'm trying to see it on <ether>scan (see here) it doesn't appear. In addition to that, in my wallet, the value isn't transferred.\nWorkflow\nThe controller calls Transfer method, which calls TransferWaitingTxHashAsync method.\npublic bool Transfer(int ecommerceId, <ether>Wallet senderWallet, TransferRequestVO transferRequest)\n    {\n        string transactionHash = null;\n        bool thrownError = false;\n        try\n        {\n            transactionHash = _hdWalletManager.TransferWaitingTxHashAsync(senderWallet, transferRequest).Result;\n        }\n        catch (Exception)\n        {\n            thrownError = true;\n        }\n\n        if(thrownError || transactionHash == null) \n            return false;\n        \n\n        <ether>eumTransactionReceipt pendingTransactionReceipt = new()\n        {\n            From = senderWallet.Address,\n            To = transferRequest.AddressDestination,\n            EcommerceId = ecommerceId,\n            TransactionHash = transactionHash,\n            Status = <ether>eumTransactionReceiptAvailableStatus.Pending.Value\n        };\n\n        _<ether>eumTransactionReceiptRepository.Insert(pendingTransactionReceipt);\n        bool saveChanges = _<ether>eumTransactionReceiptRepository.SaveChanges();\n\n        return saveChanges;\n    }\n\nAs you can see below, I'm doubling both Gas and GasPrice.\nThe Nonce is being summed to avoid transaction replacement underpriced (changing it on the debugger each time I run).\npublic Task<string> TransferWaitingTxHashAsync(<ether>Wallet senderWallet, TransferRequestVO transferRequest)\n    {\n        N<ether>eumAccount senderAccount = new(senderWallet.PrivateKey);\n        Web3 web3 = new(senderAccount, _httpAddress);\n\n        HexBigInteger gasPrice = web3.Eth.GasPrice.SendRequestAsync().Result;\n        decimal gasPriceDecimal = Math.Round(gasPrice.ToLong() * 2m);\n        gasPriceDecimal = Web3.Convert.FromWei(BigInteger.Parse(gasPriceDecimal.ToString()), UnitConversion.EthUnit.Gwei);\n\n        BigInteger gas = web3.Eth.Get<ether>TransferService()\n                                 .EstimateGasAsync(transferRequest.AddressDestination,\n                                                   transferRequest.<ether>Amount)\n                                 .Result;\n\n        gas = BigInteger.Add(gas, gas);\n\n        BigInteger nonce = senderAccount.NonceService.GetNextNonceAsync().Result;\n        BigInteger nextNonce = nonce + 131;\n\n\n        return web3.Eth.Get<ether>TransferService()\n                       .Transfer<ether>Async(transferRequest.AddressDestination,\n                                           transferRequest.<ether>Amount,\n                                           gasPriceDecimal,\n                                           gas,\n                                           nextNonce);\n    }\n\n\nEnvironment\nI'm running it locally using Infura as the provider (https:\/\/goerli.infura.io\/v3\/YOUR-<api>-KEY) for Goerli network.\nSummarized\nHow can I fix it, and successfully complete my transaction or either see it on <ether>scan (Goerli)?","81":"I want to get a list of 100 latest <ether>eum blockchain transactions with one http <api> request. How can i do it? What <api> can I use?\ni tried to find <api> method on <ether>scan but without success :(","82":"I want to create a smart contract who buy and sell <nft> on Opensea.\nI can't find explain documentation and exemple, anybody can help me to start ?","83":"Im a beginner in the blockchain\/<crypto> world and I was wondering if there is a way to get the value of a <crypto> in another one on uniswap (like in the image where we can see that on uniswap 1 ETH = 2997 1INCH). , like using the SDK or the Router ecc.. If you have any suggestion please help me.\n\nI tried using the uniswap sdk and the smart contracts periphery contracts but i couldn't find nothing that could help me","84":"I want to make connection to metamask and get the account balance :\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Test <ether>eum metamask<\/title>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <script type=\"module\">\n            import { <ether>s } from \"https:\/\/<cdn>.<ether>s.io\/lib\/<ether>s-5.2.esm.min.js\";\n            const provider = new <ether>s.providers.Web3Provider(window.<ether>eum);\n            const balance = await provider.getBalance(\"0xE0552897c6495D7efb98F3823cd48bf19e703D0b\");\n        <\/script>\n    <\/head>\n    <body>\n        test\n    <\/body>\n    <script type=\"text\/javascript\">\n        console.log(\"========== balance =\", balance);\n    <\/script>\n<\/html>\n\nAt runtime I get console errors : Uncaught ReferenceError: balance is not <defi>ned and Access to script at 'https:\/\/<cdn>.<ether>s.io\/lib\/<ether>s-5.2.esm.min.js' from origin 'null' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource\nSo what is the problem ?","85":"I am using <python> multicall library (https:\/\/github.com\/banteg\/multicall.<py>) to get the ERC20 balances with multiple wallet addresses at once with multiprocessing.\nOnce the process starts multicall returns the result in less than 1 sec, but once this process continues & run for hours it starts giving results in more than 1 min sometime it takes up to 300 secs too.\nCan anyone answer the reason behind the latency in response by time.\nBelow is the code sample:\nblock_number = 11374651\nGET_BALANCE_FN = \"balanceOf(address)(uint256)\"\n\ndef call_back_obj(success, value):\n    \"\"\"\n    Callback to process results from multicall for a function.\n    If call fails returns False (if changed to string throws error)\n    \"\"\"\n    if success is True and type(value) == bytes:\n        return value.decode(\"utf-8\")\n    elif success is True:\n        return value\n    else:\n        return False\n\n\ndef get_instance():\n    web3_instance = Web3(\n       Web3.HTTPProvider(\n           node_provider,\n              request_kwargs={\"timeout\": 10},\n       )\n    )\n    web3_instance.middleware_onion.inject(geth_poa_middleware, layer=0)\n    return web3_instance\n\nw3 = get_instance()\n\n\ndef <token>_balance_handler(addresses, block_number=None):\n    calls = []\n    for address_map in addresses:\n        contract_addr = address_map.get(\"<token>Address\")\n        wallet_addr = address_map.get(\"walletAddress\")\n        calls.append(\n            Call(\n                contract_addr,\n                [GET_BALANCE_FN, (wallet_addr)],\n                [[f\"{wallet_addr}-{contract_addr}\", call_back_obj]],\n            )\n        )\n    return Multicall(\n                calls, _w3=w3, block_id=block_number, require_success=False\n            )\n\nprint(<token>_balance_handler(addresses, block_number)())","86":"i have deployed an private <ether>eum network.in metamask while adding new its working for on <localhost>:8545 or http:127.0.0.1:8545 .but when i add it with 192.168.0.5{my local address} it show  error \"Could not fetch chain ID. Is your RPC URL correct?\".\ni have tried it with mac and ubuntu on same machine and network.","87":"I'm trying to develop a smart-contract where people can publish and get paid by it, i want the person get paid in the <token> of the platform not in eth. Without using the <token> the contract works ok, but when i try adding the contract doesn't works.\nThats the <token> code:\n\/\/ SPDX-License-Identifier: MIT\npragma <solidity> ^0.8.17;\n\nimport \"https:\/\/github.com\/<openzeppelin>\/<openzeppelin>-contracts\/blob\/master\/contracts\/<token>\/ERC20\/ERC20.sol\";\nimport \"https:\/\/github.com\/<openzeppelin>\/<openzeppelin>-contracts\/blob\/master\/contracts\/<token>\/ERC20\/extensions\/ERC20Capped.sol\";\nimport \"https:\/\/github.com\/<openzeppelin>\/<openzeppelin>-contracts\/blob\/master\/contracts\/<token>\/ERC20\/extensions\/ERC20Burnable.sol\";\n\ncontract News<token> is ERC20Capped, ERC20Burnable {\n    address payable public owner;\n    uint256 public blockReward;\n    mapping(address => bool) public validators;\n\n    constructor(uint256 cap, uint256 reward) ERC20(\"News <token>\", \"NWT\") ERC20Capped(cap * (10 ** decimals())) {\n        owner = payable(msg.sender);\n        _mint(owner, 70000000 * (10 ** decimals()));\n        blockReward = reward * (10 ** decimals());\n    }\n\n    function _mint(address account, uint256 amount) internal virtual override(ERC20Capped, ERC20) {\n        require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\");\n        super._mint(account, amount);\n    }\n\n    function _mintMinerReward() internal {\n        _mint(block.coinbase, blockReward);\n    }\n\n    function _before<token>Transfer(address from, address to, uint256 value) internal virtual override {\n        if(from != address(0) && to != block.coinbase && block.coinbase != address(0)) {\n            _mintMinerReward();\n        }\n        super._before<token>Transfer(from, to, value);\n    }\n\n    function setBlockReward(uint256 reward) public onlyOwner {\n        blockReward = reward * (10 ** decimals());\n    }\n\n    function destroy() public onlyOwner {\n        selfdestruct(owner);\n    }\n\n    function becomeValidator() public {\n        require(balanceOf(msg.sender)>=1000000 * (10 ** decimals()), \"You need at least 1.000.000 <token>s to become a validator\");\n        validators[msg.sender] = true;\n    }\n\n    function re<move>Validator() public {\n        require(validators[msg.sender], \"You are not a validator\");\n        validators[msg.sender] = false;\n    }\n\n    function checkValidator() public view returns (bool){\n        return validators[msg.sender];\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner, \"Only the owner can call this function\");\n        _;\n    }\n\n    function callApprove(address _sender,address _writer, uint256 _amount) public {\n        _sender.approve(_writer, _amount);\n\n    }\n\n}\n\nThats the Contract code:\n\/\/contracts\/Web3News.sol\n\/\/SPDX-License-Identifier: MIT\n\nimport \".\/paymentManager.sol\";\nimport \".\/News<token>.sol\";\n\n\n\npragma <solidity> ^0.8.17;\n\ncontract Web3News{\n    address public writer;\n    string public title;\n    string public topics;\n    string private subject;\n    string private Autentic = \"O artigo e verdadeiro\";\n    string private Fake = \"O artigo e Falso\";\n    uint public minimumPayment;\n    uint public itsAutentic;\n    uint public itsFake;\n    mapping(address => bool) public buyers;\n  \n\n    \/\/Importa o contrato do News<token> e do PaymentManager\n    News<token> public news<token>;\n    \/\/PaymentManager public paymentManager;\n\n\n    event LogSecretAccess(address indexed sender);\n\n    constructor(address _news<token>Addr, string memory _title, string memory _topics, string memory _subject, uint _minimumPayment){\n        writer = msg.sender;\n        title = _title;\n        topics = _topics;\n        subject = _subject;\n        minimumPayment = _minimumPayment;\n        news<token> = News<token>(_news<token>Addr);\n        \/\/paymentManager = PaymentManager(_paymentManagerAddr);\n    }\n\n    \/\/Da acesso do conteudo do artigo para quem pagar\n    \/\/function getAccessToArticle() public payable{\n        \/\/Verifica no contrato do News<token> se o usuario tem saldo suficiente para pagar a taxa minima\n      \/\/  require(news<token>.balanceOf(msg.sender) >= minimumPayment, \"Not enough <token>s.\");\n        \/\/Faz o pagamento do artigo para o contrato do PaymentManager que manda o pagamento ao criador do artigo\n        \/\/news<token>.approve(address(this), minimumPayment);\n        \/\/require(news<token>.allowance(msg.sender, address(this)) >= minimumPayment, \"You have not approved the contract to transfer the <token>s\");\n       \/\/ news<token>.transferFrom(msg.sender, writer, minimumPayment);\n       \/\/ buyers[msg.sender] = true;\n        \/\/paymentManager.payForNews(address(this), minimumPayment);\n    \/\/}\n\n    function getAccessToArticle1() public payable {\n        require(news<token>.balanceOf(msg.sender) >= minimumPayment, \"Not enough <token>s\");\n        news<token>.approve(address(this), minimumPayment);\n        \/\/chamar uma funcao que transfere os fundos do msg.sender pra o contrato?\n        news<token>.transferFrom(msg.sender, writer, minimumPayment);\n        \/\/news<token>.transfer(tx.origin, minimumPayment);\n        buyers[msg.sender] = true;\n    }\n    \n    \/\/function getAccessToArticle() public payable {\n      \/\/  require(news<token>.balanceOf(msg.sender) >= minimumPayment, \"Not enough <token>s.\");\n        \/\/address <token>ContractAddress = address(news<token>);\n        \/\/bytes memory data = abi.encodeWithSignature(\"transfer(address,uint256)\", address(writer), minimumPayment);\n        \/\/(bool success, bytes memory returnedData) = <token>ContractAddress.call(data);\n        \/\/require(success, \"The call to the transfer function was not successful.\");\n        \/\/buyers[msg.sender] = true;\n    \/\/}\n\n\n    \n    \/\/Puxa o conteudo do artigo para o usuario caso o mesmo tenha pago a taxa minima para acessar o artigo\n    function readArticle() public returns (string memory) {\n        \/\/Verifica no contrato do PaymentManager se o usuario se encontra na lista de compradores\n        require(buyers[msg.sender], \"This address haven't purchased the article\");\n        emit LogSecretAccess(msg.sender);\n        return subject;\n    }\n\n    \/\/Funcao para votar como fakenews\n    function fakenews(bool _itsAutentic) public {\n        require(buyers[msg.sender], \"This address haven't purchased the article, so it can't vote\");\n        if (_itsAutentic) {\n            itsAutentic = itsAutentic + 1;\n        } else {\n            itsFake = itsFake + 1;\n        }\n    }\n\n    \/\/Funcao para julgar se e ou nao fakenews. Deve ser ativada somente por um autenticador\/delegado\n    function judgement() public view returns (string memory) {\n        \/\/Verifica se o endereco que esta chamando a funcao e um autenticador na lista de autenticadores do News<token>\n        require(news<token>.checkValidator(), \"This address is not a validator\");\n        if (itsAutentic > itsFake) {\n            return Autentic; \n        } else {\n            return Fake;\n        }\n    }\n    \n    \/\/Funcao para punir quem autenticar a noticia de forma erronea\n\n}\n\nI know that the problem is: when calling the transfer method on the <token> the address that is calling the function is the address of the contract and not the msg.sender, i had try the call(), the delegatecall(), and other methods. It's not clear to me how can i sove that, hopping some one can help me here...","88":"<api>Version: v1\nkind: <configmap>\nmetadata:\n  name: eth-geth\n  namespace: the-<project>\n  labels:\n    app: eth-geth\ndata:\n  networkid: \"818945\"\n  genesis.json: |- { \"config\": { \"chainId\": 818945, \"homesteadBlock\": 0, \"eip150Block\": 0, \"eip155Block\": 0, \"eip158Block\": 0 }, \"difficulty\": \"0x400\", \"gasLimit\": \"2000000\", \"nonce\" : \"0x0000000000000000\", \"alloc\": { \"0x58917D55dA991da576F148FD7E3E05a34666988b\": { \"balance\": \"100000000000000000000\" }, \"0x29bb385cF8ae4Cc49dBd10CcdA5e3d591D831527\": { \"balance\": \"200000000000000000000\" }, \"0xf1c9C9a1Ba591588147c2A729c470D8AFA91a04d\": { \"balance\": \"300000000000000000000\" } } }\n\nthe above code throws the following error while kubectl apply.\nerror converting <yaml> to JSON <yaml>: line 10:did not find expected comment or line break\nChecked the indentation but i am missing something here.Tried different versions of line10 , doesn't seem to work.Can someone suggest with a solution?","89":"i am using @aws-sdk\/client-managedblockchain to create a <hyperledger> network, but i got \"InvalidRequestException: Invalid request body\", i was follwed below link for help,\n\"https:\/\/docs.aws.amazon.com\/AWSJavaScriptSDK\/v3\/latest\/clients\/client-managedblockchain\/classes\/createnetworkcommand.html\"\nconst params = {\nClientRequest<token> : null,\nFramework: '<hyperledger>_FABRIC', \/* required \/\nFrameworkVersion: '2.2', \/ required \/\nMemberConfiguration: { \/ required \/\nFrameworkConfiguration: { \/ required \/\nFabric: {\nAdminPassword: 'adminUserName', \/ required \/\nAdminUsername: 'Adminpassword' \/ required \/\n}\n},\nName: 'dummy Network', \/ required \/\nDescription: 'testing',\nKmsKeyArn : null,\nLogPublishingConfiguration: null,\nTags : null\n},\nName: 'myNetwork', \/ required \/\nTags : null,\nVotingPolicy: { \/ required *\/\nApprovalThresholdPolicy: {\nProposalDurationInHours: 5,\nThresholdComparator: 'GREATER_THAN' ,\nThresholdPercentage: 50\n}\n},\nDescription: 'testing',\nFrameworkConfiguration: {\nFabric: {\nEdition: 'STARTER'\n}\n}\n};\n\n\nconst createChannel = async ()=>{\ntry\n{\n\n    const command = new CreateNetworkCommand(params);\n    const res = await client.send(command)\n    console.log(\"response\", res);\n}\ncatch(ex){\n    console.log(ex);\n}\n finally {\n     client.destroy();\n}\n\n}\n\n\ncreateChannel();\n\nThank you in advance.","90":"This is the <python> code to be run - it simply screens for live transactions:\nI get a handshake error when running it. I don\u00a1\u00aft know why something wrong with my local machine the code certainly works.\nThis is the github for blocknative https:\/\/github.com\/blocknative\/<python>-sdk\nI\u00a1\u00afve changed <python> versions to 3.9\nI\u00a1\u00afve tried using a virtual environment\nI\u00a1\u00afve tried using it raw without virtual environment\nI\u00a1\u00afve tried <python> 10\nI\u00a1\u00afve tried removing security ssh\nI\u00a1\u00afve tried mobile connection\nI don\u00a1\u00aft know it just nothing seems to work. Any help here will be much appreciated. I know that it is something to do with my local machine but I don\u00a1\u00aft know where to start or how to fix","91":"This is the following error I get when running the command \"npx <hardhat> --network <localhost> scripts\/1_deploy.js\"\nHeadersTimeoutError: Headers Timeout Error\n    at Timeout.onParserTimeout [as _onTimeout] (\/mnt\/g\/ONLINE_COURSE\/<project>\/blockchain-developer-bootcamp\/node_modules\/undici\/lib\/client.js:902:28)\n    at listOnTimeout (node:internal\/timers:561:11)\n    at processTimers (node:internal\/timers:502:7) {\n  code: 'UND_ERR_HEADERS_TIMEOUT'\n\nI dont know the fix to this Kindly help.\nThe script I'm trying to run\nasync function main() {\n  console.log(`Preparing deployment...\\n`)\n\n  \/\/ Fetch contract to deploy\n  const <token> = await <ether>s.getContractFactory('<token>')\n  const Exchange = await <ether>s.getContractFactory('Exchange')\n\n  \/\/ Fetch accounts\n  const accounts = await <ether>s.getSigners()\n\n  console.log(`Accounts fetched:\\n${accounts[0].address}\\n${accounts[1].address}\\n`)\n\n  \/\/ Deploy contracts\n  const edge = await <token>.deploy('EDGE University', 'EDGE', '1000000')\n  await edge.deployed()\n  console.log(`EDGE Deployed to: ${edge.address}`)\n\n  const mETH = await <token>.deploy('mETH', 'mETH', '1000000')\n  await mETH.deployed()\n  console.log(`mETH Deployed to: ${mETH.address}`)\n\n  const mDAI = await <token>.deploy('mDAI', 'mDAI', '1000000')\n  await mDAI.deployed()\n  console.log(`mDAI Deployed to: ${mDAI.address}`)\n\n  const exchange = await Exchange.deploy(accounts[1].address, 10)\n  await exchange.deployed()\n  console.log(`Exchange Deployed to: ${exchange.address}`)\n}\n\nmain()\n  .then(() => process.exit(0))\n  .catch((error) => {\n    console.error(error);\n    process.exit(1);\n  });","92":"How are you doing? I need a help for integration cardano smart contract and frontend.\nconst tx = new Transaction({ initiator: wallet })\n                .sendAssets(\n                    {\n                        address: marketAddress,\n                        datum: {\n                            value: secretDatum,\n                        },\n                    },\n                    [\n                        {\n                            unit: assetName,\n                            quantity: \"1\",\n                        },\n                    ],\n                );\n\n\nIs there any way to add parameters? or no need to send any parameters when list <nft> to marketplace? then how to know price and asset owner and so on when buy <nft>?","93":"I'm trying to get the price, the volume and the all time high of a <token> from it's Smart Contract address with bitQuery <api>s.\nThe query I'm using right now is this one:\n{\n    <ether>eum {\n        dexTrades(\n            smartContractAddress: {is: \"0x3ce38BC4dF7112E3944d724572E42B0cB805ad2A\"}\n            quoteCurrency: {is: \"0xe9e7cea3dedca5984780bafc599bd69add087d56\"}\n        ) {\n        quotePrice\n    }\n  }\n}\n\nBut the response I'm getting is the following:\n{\n  \"<ether>eum\": {\n    \"<ether>eum\": {\n      \"dexTrades\": null\n    }\n  }\n}\n\nIs there something I'm doing wrong? I took a look at some working samples and they are using an address directly in quoteCurrency, but It does not work with the contract address. It would be helpful also if someone can explain the difference between those to me.\nThank you all in advance.","94":"I have just started learning about Blockchain and I am still new to most of the concepts. So please help me out with this. I have read in my class notes that SHA-256 algorithm has a block size of 512 bits, and <bitcoin> uses this algorithm too. But when I researched online it says that <bitcoin> has a block size of 1MB.\nWhat am I missing over here?","95":"this is my first time deploy <hyperledger> in my machine. i follow the tutorial from this. i already installed go version 1.19 and just download docker. when i try to run this command .\/network.sh deployCC -ccn basic -ccp ..\/asset-transfer-basic\/chaincode-go -ccl go i got an error\nError: failed to read chaincode package at 'basic.tar.gz': open basic.tar.gz: no such file or directory\n\nPACKAGE_ID=\nError: failed to normalize chaincode path: 'go list' failed with: error obtaining VCS status: exit status 128\nUse -buildvcs=false to disable VCS stamping.: exit status 1\n\ni already try to use this command go env -w GO111MODULE=auto and still got nothing.\ni am using go version go1.19.5\ni hope i can just to deploy the tutorial.","96":"I am trying to get the balance of a specific <nft> of a wallet but i am getting the error \"TypeError: contract.methods.balanceOf is not a function\"\nThis is the code i am using to do it\n        const main = async () => {\n            await connect()\n            contract = new web3.eth.Contract(ABI, ADDRESS)\n\n            const balance = Number(await contract.methods.balanceOf(account).call())\n        }\n\nWhat am i doing wrong?\nI have looked into the documentation but i can't find why it's an issue","97":"I've been looking for any blockchain bridge that has an <api> as well as supports BTC to wBTC.\nI've tried RenBridge, but that can only be used via their webApp. The path there would be, BTC to renBTC to wBTC (uniswap). But no <api>.\nSo, anyone aware of any such bridging service where i can get an <api> as well. Centralized bridge service is preferred but at this point, Decentralized would work too. <api> is a must.\nI've explored the following list of bridges so far.\n\nxpolinate\nRenBridge\nzeroDao\nObvious\nBinance Bridge","98":"I am new to blockchain technology, excuse me if my question is not clear.\nI want to expose a smart contract related to car insurance, that contain very high level of information.  Example below\ncontract Insurance {\n        string fullName; \/\/ Full Name\n        string policyNumber; \/\/ Say A123\n        string status;  \/\/ ACTIVE\n        uint totalCarsInsured; \/\/ Say he has 2 cars\n        string hashOfDBInfo; \/\/ hash represents the <database> info\n}\n\nWe published above information to <ether>eum public network.\nMy question is, when the customer sells one of his car, now totalCarsInsured is 1, that information will be updated in the back-end <database>, we generate a new hash code with that information and publish a new transaction to <ether>eum network, how do we link these two transactions? Or how do we handle the scenarios where past information that can be referenced?","99":"Following is my code that i am using to create listing using opensea <api> v2. I have opensea <api>-KEY and its working fine with other calls. I want to list the <nft> on <polygon> network.\nconst axios = require(\"axios\");\nconst { Seaport } = require(\"@opensea\/seaport-js\");\nconst <ether>s = require(\"<ether>s\");\n\nconst signTran = async (customParam) => {\n  const provider = new <ether>s.providers.JsonRpcProvider(\n    \"https:\/\/rpc-mumbai.<matic>vigil.com\/\"\n  );\n  const signer = new <ether>s.Wallet(\n    \"metamask_account_private_key\",\n    provider\n  );\n  const seaport = new Seaport(signer);\n  let counter = 0;\n  let signature = await seaport.signOrder(customParam, counter);\n  customParam[\"counter\"] = counter;\n  customParam.startTime = customParam.startTime.toString();\n  customParam.endTime = customParam.endTime.toString();\n  customParam.totalOriginalConsiderationItems =\n  customParam.totalOriginalConsiderationItems.toNumber();\n  const order = {\n    parameters: customParam,\n    signature: signature,\n  };\n  const options = {\n    method: \"POST\",\n    url: \"https:\/\/<api>.opensea.io\/v2\/orders\/<matic>\/seaport\/listings\",\n    headers: {\n      accept: \"application\/json\",\n      \"X-<api>-KEY\": \"98e3c67d43d74d66a79df13456d4618a\",\n      \"content-type\": \"application\/json\",\n    },\n    data: order,\n  };\n\n  await axios\n    .request(options)\n    .then(function (response) {\n      console.log(\"getting response\");\n      console.log(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"------------------------------\");\n      console.log(\"getting error\");\n      console.error(error.response.data);\n    });\n};\n\nconst customParam = {\n  offerer: \"0xA29536981074C1B89e00D30f8238a7289b4213d6\",\n  zone: \"0x0000000000000000000000000000000000000000\",\n  zoneHash:\n    \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n  startTime: <ether>s.BigNumber.from(\n    Math.floor(new Date().getTime() \/ 1000).toString()\n  ),\n  endTime: <ether>s.BigNumber.from(\n    Math.floor(new Date().getTime() \/ 1000 + 60 * 60).toString()\n  ),\n  orderType: 1,\n  offer: [\n    {\n      itemType: 3,\n      <token>: \"0x2953399124F0cBB46d2CbACD8A89cF0599974963\",\n      identifierOrCriteria:\n        \"48424776733525332910006189684535612585845530803681690324897386617738348199937\",\n      startAmount: \"1\",\n      endAmount: \"1\",\n    },\n  ],\n  consideration: [\n    {\n      itemType: 0,\n      <token>: \"0x0000000000000000000000000000000000000000\",\n      identifierOrCriteria: \"0\",\n      startAmount: \"48750000000000000\",\n      endAmount: \"48750000000000000\",\n      recipient: \"0xA29536981074C1B89e00D30f8238a7289b4213d6\",\n    },\n    {\n      itemType: 0,\n      <token>: \"0x0000000000000000000000000000000000000000\",\n      identifierOrCriteria: \"0\",\n      startAmount: \"1250000000000000\",\n      endAmount: \"1250000000000000\",\n      recipient: \"0x0000a26b00c1F0DF003000390027140000fAa719\",\n    },\n  ],\n  totalOriginalConsiderationItems: <ether>s.BigNumber.from(\"2\"),\n  salt: \"123852146548\",\n  conduitKey:\n    \"0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000\",\n};\n\nsignTran(customParam);\n\n\nI have tried to get the signature using web3.js and <ether>.js, but that were also giving the same issue.\nNow i am making the signature using seaport but still its not working.\nI want to list <nft> on <polygon> network using opensea <api> v2","100":"From <avalanche>'s whitepaper in the context of Nakamoto <consensus> protocols:\n\nBy construction, they cannot quiesce: their security relies\non constant participation by miners, even when there are no\ndecisions to be made.\n\nI understand why blockchain's require active participation from nodes when transactions are being registered (to ensure that the transaction is not malicious), but what is the concern when the system is dormant and no transactions are being created?\nIf all transactions stopped and all nodes went inactive for a day, what would be the risk during that time \/ when the system becomes active again? Why can't they quiesce when no decisions are to be made?","101":"I am having issue deploying contract to fuji c chain with <hardhat>. Here is my <hardhat>.config.js file:\nconst config: <hardhat>UserConfig = {\n  networks: {\n    fuji: {\n      url: 'https:\/\/<api>.avax-test.network\/ext\/bc\/C\/rpc',\n      chainId: 43113,\n      gasPrice: 20000000000,\n      accounts: [`0x${PRIVATE_KEY}`],\n    },\n    <avalanche>: {\n      url: 'https:\/\/<api>.avax.network\/ext\/bc\/C\/rpc',\n      chainId: 43114,\n      gasPrice: 20000000000,\n      accounts: [`0x${PRIVATE_KEY}`],\n    },\n  },\n};\n\nHere is the command for deploying the contract:\nnpx <hardhat> run --network fuji scripts\/deploy.ts\nI am getting the following error:\nProviderError: HttpProviderError\n    at HttpProvider.request (E:\\<solidity><project>\\Leveor\\<nft>-platform-script\\node_modules\\<hardhat>\\src\\internal\\core\\providers\\http.ts:78:19)\n\nI also have used a different rpc url provided by infura with the <api> key but it gave the same error.\nHow to resolve this?","102":"Assuming I have a wallet, I want to authorize another wallet to send a transfer on my behalf, how do I implement the above using the following practice.\npragma <solidity> ^0.8.0;\nimport '<token>.sol';\ncontract Transfer<token>{\nfunction transferFrom(address recipient, uint amount) external {\n<token> <token> = <token>(0xd9145CCE52D386f254917e481eB44e9943F3555);\n<token>.transferFrom(msg.sender, recipient, amount);\n}\n}\ncontract Owner {\nfunction transfer(address recipient, uint amount) external {\n<token> <token> = <token>(0xd9145CCE52D386f254917e481eB44e9943F39138);\n<token>.approve(0x617F2E2fD72FD9D5503197092aC168c91465E7f2, amount);\n\nTransfer<token> transfer<token> = Transfer<token>(0x617F2E2fD72FD9D5503197092aC168c91465E7f2);\ntransfer<token>.transferFrom(recipient, amount);}}\n\nin the above example, i am using the openZappelin implementation for ERC20 on the import (<token>.sol)\nnow my question is this ... since I want to use a real wallet with ERC20 <token> how do I implement the above example, I am thinking for this I don't need the import anymore, but I don't know how to implement it without too many mistakes already, I very new to <solidity> and I am using <remix> for the above implementation\nwill be glad if i could get a help on this","103":"I have installed all devDependencies & dependencies.\nDependencies installed.\nBut while running the cmd (npx <hardhat> run scripts\/deploy.js --network <localhost>) getting the Error,\nError\nError HH411: The library @<hardhat>\/console.so, imported from contracts\/<nft>Marketcts\/<nft>Marketplace.sol, is not installed. Try installing it using <npm>.\nAnswers \/ Solutions of the Error","104":"Being new to <ether>eum blockchain, when learning the <chainlink>\/oracles, have found few examples for the inbound oracles. for example getting price of <bitcoin> or diesel price etc from price feeds or by calling <api>.\nI could not find any example code for the outbound oracle in <solidity> even after searching on Internet for long hours.\nWould appreciate any guidance to get some sample code to practice the outbound oracle.","105":"I am trying to create a Genesis block for an <ether>eum Blockchain but the Windows Command Prompt is showing a Fatal error.\n\nThe code for the Genesis file is mentioned below-\n{\n\n \u00a1\u00b0config\u00a1\u00b1:{\n\n    \u00a1\u00b0chainId\u00a1\u00b1:777,\n\n    \u00a1\u00b0homesteadBlock\u00a1\u00b1:0,\n\n    \u00a1\u00b0eip155Block\u00a1\u00b1:0,\n\n    \u00a1\u00b0eip158Block\u00a1\u00b1:0\n\n},\n\n\u00a1\u00b0difficulty\u00a1\u00b1:\u00a1\u00b10x400\u00a1\u00e5,\n\n\u00a1\u00b0gasLimit\u00a1\u00b1:\u00a1\u00b10x8000000\u00a1\u00e5,\n\n\u00a1\u00b0alloc\u00a1\u00b1:{}\n\n}\nWhat does 'need genesis.json file as the only argument' mean?","106":"I am trying to deploy my <token> onto the blockchain I am getting a simple error code but I cant seem to figure it out as I am new to Visual Studio Code and cant seem to figure it out. Looking if i can get some help on what could be the reason i see this so often. Can easily be a rookie mistake but i am trying to learn so i can limit my mistakes\nconst { <ether>s } = require(\"<hardhat>\");\n\nasync function main()  {\n\/\/ Fetch contract to deploy\nconst <token> = await <ether>s.getContractFactory(\"<token>\")\n\n\/\/ Deploy contract\nconst <token> = await <token>.deploy()\nawait <token>.deployed()\nconsole.log{\"<token> Deployed to: ${<token>.address\"}};\n\n;\n\n\n\/\/ We recommend this pattern to be able to use async\/await everywhere\n\/\/ and properly handle errors.\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1();\n\n\n})\n\n\nconst { <ether>s } = require(\"<hardhat>\");\nconst hre = require(\"<hardhat>\")\n\nasync function main() {\n\/\/ Fetch contract to deploy\nconst <token> = await <ether>s.getContractFactory(\"<token>\")\n\n\/\/ Deploy contract\nconst <token> = await <token>.deploy\nawait <token>. deployed()\nconsole.log('<token> Deployed to: ${<token>.address}')\n\n}\n\n\/ We recommend this pattern to be able to use async\/await everywhere\n\/\/ and properly handle errors.\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1();\n}","107":"I was playing around with selectors and particularly how they are computed (I am using Foundry for the test). I have the following example contract:\ncontract <token>2 {\n    uint a = 1; \n\n    function foo2(uint b) external {\n        for (uint i = 0; i < 10; ++i)\n            a += b;\n    }\n}\n\nand in a test:\nfunction test<token>2() public {\n    console.logBytes4(bytes4(keccak256(bytes(\"function foo2(uint b) external\")))); \/\/ [1] 0x2e88fa8a\n    console.logBytes(abi.encodeWithSignature(\"foo2(uint)\")); \/\/ [2] 0x2e88fa8a\n    console.logBytes4(<token>2.foo2.selector); \/\/ [3] 0x7d5f3b35\n}\n\n[1] and [2] returns the same thing: 0x2e88fa8a. But [3] returns 0x7d5f3b35. (I am taking reference from https:\/\/<solidity>-by-example.org\/function-selector\/ to manually calculate the selector).\nMy question is why I cannot get the same selector as [3] ?","108":"I have to integrate my <chainlink> Bridge task with an asynchronous call. Looking at the official documentation, there's the parameter named async and I can set it to true to invoke it asynchronously.\nI also found this link which explains how to create Asynchronous callbacks.\nI created the following job step:\nfetch           [type=\"bridge\"\n                 name=\"generate-hash\"\n                 requestData=\"{\\\\\"id\\\\\": $(jobSpec.externalJobID), \\\\\"data\\\\\": {\\\\\"fileList\\\\\": $(decode_cbor.fileList)}}\"\n                 async=true\n                ]\n\nI also set the environment variable BRIDGE_RESPONSE_URL equals to my <chainlink> Oracle address. Looking at the documentation, I must set when using async external adapters.\nIf I start the job execution, I can see the async call to my bridge and it contains the responseURL equals to {BRIDGE_RESPONSE_URL}\/v2\/resume\/{id}.\nOnce the process finishes, I call the responseURL using the PATCH http method with the following body:\n{\n  \"data\": {\n    \"fileList\": [\"aaa...fff\", \"bbbb...vvvv\"],\n    \"hashList\": [\"0x...\", \"0x...\"]\n  }\n}\n\nThe error I get is 422 - Unprocessable Entity.\nWhat am I doing wrong?","109":"As I understand it <chainlink> VRF uses the request-response approach for providing contracts with a \"trusted random number\". You (the developer) create a smart contract and inherit the <chainlink> VRFConsumerBase contract, declare a storage variable that will hold your random number result, then initialize some keyhash & <chainlink> oracle address, and implement a function ( lets say abc() ) that calls <chainlink>s \"requestRandomness()\" function. You then override the internal \"fulfillRandomness()\" function and set the returned random number on your storage variable.\nShort flow:\n\nFund your smart contract with LINK, make a transaction call to abc()\nWait for <chainlink>s Oracle to make a transaction call to your contract \"fulfillRandomness()\" and set the random number result on your storage variable.\n\nRather than using this approach wouldn\u00a1\u00aft it be sufficient to just write a smart contract that emits a \"RequestRandom\" Event and have a personal server running that listens for the RequestRandom event of your contract and have that server then generate a random number and make an authorized transaction to my contract to set that generated random number on it.\ncontract MyRandom {\n\n    event RequestRandom(uint seed);\n\n    address public myServerWallet;\n    uint public myRandomNumber;\n\n    constructor(address a) {\n       myServerWallet = a;\n    }\n\n    function makeRandomRequest(uint seed) external {\n        emit RequestRandom(seed);\n    }\n\n    function setRandomResult(uint result) external {\n        require(msg.sender == myServerWallet, \"Only server may call\");\n        myRandomNumber = result;\n    }\n}\n\nWhat would be the difference between this approach vs <chainlink> VRF? Am I sacrificing some type of security by using this approach?\nTried the server approach above. It does work but still curious on advantage\/disadvantage.","110":"I want to convert a TRON address in the HEX format into Base58 one without TronWeb. I can't use JS or <python> either. I want to understand the algorithm to then implement it in a language of my choice.\nAs per https:\/\/github.com\/tronprotocol\/documentation\/blob\/master\/TRX\/Tron-overview.md#62-mainnet-addresses-begin-with-41\n\/\/(1)\naddress = 41||sha3[12,32): 415a523b449890854c8fc460ab602df9f31fe4293f \n\n\/\/(2)\n<sha256>_0 = <sha256>(address): 06672d677b33045c16d53dbfb1abda1902125cb3a7519dc2a6c202e3d38d3322 \n\n\/\/(3)\n<sha256>_1 = <sha256>(<sha256>_0): 9b07d5619882ac91dbe59910499b6948eb3019fafc4f5d05d9ed589bb932a1b4 \ncheckSum = <sha256>_1[0, 4): 9b07d561 \naddchecksum = address || checkSum: 415a523b449890854c8fc460ab602df9f31fe4293f9b07d561 \n\n\/\/last step\nbase58Address = Base58(addchecksum): TJCnKsPa7y5okkXvQAidZBzqx3QyQ6sxMW\n\nHowever, SHA3-256 applied to 415a523b449890854c8fc460ab602df9f31fe4293f won't generate anything remotely similar to\n\/\/(2) \n06672d677b33045c16d53dbfb1abda1902125cb3a7519dc2a6c202e3d38d3322` \n\nFor instance, using an online converter\nhttps:\/\/md5calc.com\/hash\/sha3-256\/415a523b449890854c8fc460ab602df9f31fe4293f\nSHA3-256(415a523b449890854c8fc460ab602df9f31fe4293f)\nwill produce\n64a35f3345223990cc06d1b356e5ac7421f5e15f4dbe0fd934957fb9f0aab76e\nand there's no part in it iidentical to the one in TRON documenation.\nWhat's the matter?\nupdate1\nThe 1st 2 commands have produced the correct results after I've replace HEX representation with the bytes.\nBut the \/\/last step still hasn't:\n\/\/actual HEX string, not bytes\n\nBase58.encode(\"415a523b449890854c8fc460ab602df9f31fe4293f9b07d561\") \n\n===> \n\neJJL2m8pSeN7rACLEzRb5JMoJsZSXfFLZgGmC6LbKpdrALZMqKW6MDShkwh5xotJX4vc","111":"i am testing the secret key and public key generation using ECDSA, curve type(SECP256k1).\nAfter running the script, the problem of (Length of string does not match lengths....) i occurred. how to fix it.\ni found something wrong relate to below script but dont know how to fix\npublic_key = VerifyingKey.from_string(public_key_byte, curve=SECP256k1)\nfrom ecdsa import SigningKey\nfrom ecdsa import VerifyingKey\nfrom ecdsa import SECP256k1\nimport binascii\n\nsecret_key = SigningKey.generate(curve=SECP256k1)\nprint(secret_key)\nprint()\n\npublic_key = secret_key.verifying_key\nprint(public_key)\nprint('_____________________________________________________')\n\nsecret_key_byte = secret_key.to_string()\npublic_key_byte = public_key.to_string()\nprint(f'secret_key_byte: {secret_key_byte}')\nprint()\nprint(f'public_key_byte: {public_key_byte}')\n\nprint('__________________________________________________________')\n\nsecret_key_str = secret_key_byte.hex()\npublic_key_str = secret_key_byte.hex()\n\nprint(f'secret_key_str: {secret_key_str}')\nprint()\nprint(f'public_key_btr: {public_key_str}')\n\nprint('__________________________________________________')\n\nsecret_key_byte = binascii.unhexlify(secret_key_str)\npublic_key_byte = binascii.unhexlify(public_key_str)\nprint(f'secret_key_byte: {secret_key_byte}')\nprint()\nprint(f'public_key_byte: {public_key_byte}')\n\nprint('________________________________________________')\n\nsecret_key = SigningKey.from_string(secret_key_byte, curve=SECP256k1)\npublic_key = VerifyingKey.from_string(public_key_byte, curve=SECP256k1)\n\nprint(f'secret_key: {secret_key}')\nprint()\nprint(f'public_key: {public_key}')","112":"I'm working on a <react> <project> that uses the web3 library and I'm trying to use the useContractWrite hook from the wagmiHooks  to write to a smart contract. However, the write function only seems to work when called within an onclick function, and not when called within a useEffect hook that is triggered when an image changes.\nHere's the relevant code:\n\n\nWhen I click the \"Write\" button, the function is called and the write is successful. But when the write function is called within the useEffect hook that is triggered when the imageUrl changes, no data is written and I don't receive any error message.\nI'm not sure what's causing this behavior and would appreciate any help or suggestions.\nI've tried moving the write function call to different lifecycle methods in the component, but it still doesn't work when triggered by the imageUrl change.\nI've tried logging the value of the imageUrl variable within the useEffect hook, and it does change as expected.\nI expected the write function to be called and for the data to be written to the smart contract when the imageUrl changes.","113":"I have a list of transactions which I periodically fetch via <solana> <api>. Out of those, I need to identify the ones that are:\n\nincoming that transfer SOL\nincoming that transfer a <token> (USDT, USDC, may be 1-2 more)\n\nThat is, I need to implement a simple way of watching \"top up\" TX-s, for SOL and the stablecoins, for a list of accounts of mine.\nSo how to clearly identify the type of transfer of a TX I'm parsing: wh<ether> it's EITHER SOL transfer, OR a <token> transfer? As well as the amount.\nWill it be by the presense of the field lamports - SOL transfer. Namely, instructions[X].parsed.info[\"lamports\"] Will be be a reliable way?\nOn the contrary: how to identify if a TX is a pure \"<token> transfer\" one? Not the one that may involve \"<token> transfer\" among other instructions, but is only \"<token> transfer\" one.\nI don't expect any other, more complex types of TX in my list of addresses. If such TX-s happen to occur, I'll filter them out during parsing.","114":"I am running a <hardhat> node on locahost using <hardhat> version 2.12.5 on a windows operating system for learning purpose. At times I close terminals without stopping the running node by CTRL+C.\nIs there a way for me to to stop the node without having to find its PID through systemctl?\nMaybe some npx <hardhat> command?\nI tried to find something useful on <hardhat>'s official documentation but found nothing there. I also tried asking ChatGPT for it and it suggested me to use npx <hardhat> halt or npx <hardhat> stop commands and none of them have worked for me.\nBoth the commands gave me the same error message","115":"I am learning about threshold signatures and their use cases on <evm> Blockchains.\nI am trying to understand how they are able to always have the same address.\nIs the following correct? It is my understanding of how it works\n\nA smart contract exists on chain. This smart contract is the address\nof the TSS wallet. The smart contract has a function that decides if\nsignatures are valid. If this function is called with the requisite\n(threshold) signatures from parties, it approves use of the smart\ncontract address for on chain meta transactions.\nTSS does not have a way to work off chain to produce an Externally\nOwned Address (EOA) even in a two party case. It depends on a third\nparty smart contract to authorize use of an address.\n\nSorry if I'm way off, it's quite hard to understand the underlying tech of TSS. As I understand it, there is no known way to create an EOA without re-assembling a private key e.g. with MultiSig right? Or can TSS produce signatures from the same address based on signatures of two parties, such that the TSS signature always represents the same address \/ private key that is not known by any party? Any examples or documentation would be greatly welcome!","116":"I am studying an Udemy course about the Proof of Stake with <python>.\nThis is the source code link.\nThough the lecturer has provided the genesis key pair (file keys\\genesisPrivateKey.pem and keys\\genesisPublicKey.pem in source code), I want to generate the key pair by myself.\nHere is my step:\nStep 1: generate the private key\nopenssl gen<rsa> -out genesisPrivateKey2.pem 1024\n\nStep 2: generate the public key\nopenssl <rsa> -in genesisPrivateKey2.pem -out genesisPublicKey2.pem -pubout -outform PEM\n\nHowever, when I use my key, both of genesis Node and the second node show message \"I am not the next forger.\" like image below\n\nOpposite, when I use the provided key pair by the lecturer, It worked like expected as the image below","117":"I am trying to use tor<py> to query <bitcoin> balances over tor.\nfrom tor<py>.http.requests import TorRequests\nimport json\n\naddr1 = r'34xp4vRoCGJym3xR7yCVPFHoCNxv4Twseo'\naddr2 = r'bc1qgdjqv0av3q56jvd82tkdj<py>7gdp9ut8tlqmgrpmv24sq90ecnvqqjwvw97'\n\nwith TorRequests() as tor_requests:\n  print(\"establish circuit\")\n  with tor_requests.get_session() as sess:\n    for addr in [addr1, addr2]:\n      val = sess.get(f\"https:\/\/<api>.blockcypher.com\/v1\/btc\/main\/addrs\/{addr}\") # https:\/\/stackoverflow.com\/a\/71704333\n      mydict = json.loads(val.text)\n      balance = mydict['balance']\/(10**8)\n      print(f'{addr} balance: {balance:.8f} BTC')\n\nThis works the first time I run it; it returns the balances. However, if I run it a second time, I receive a long traceback:\nStream #4: closed (but received b'\\xca4{\\xee\\xa6\\xb0K\\x8fq\\xea\\xb9p\\x81\\tr*\\x15\\x80\\xa9 zA\\x08\\xe9^u\\x9b\\xd8V,\\xe8\\xd2=V\\xdd\\x12\\xe2\\x9d\\xfdm\\xef\\xbc\\xaf\\\\9\\xeb\\xbc\\x9f\\xaa\\xc3XR\\x95K\\xc9\\x0b\\xe7\\x0bv\\xa8:f\\xd8\\x8cj>\\x14\\xcao:0XQ\\xc8\\x7f\\xe3{\\xfb4`&\\xf5\\xa6\\x9ez\\x9e>!\\x0c\\xa6\\xee$&Vs\\x1b\\x16l\\xe7]7\\xe4\\xb4o\\x8f\\xcbO\\xc5\\xd7\\xaf\\x9f\\x8e7\\xd8\\xe7\\xd1\\x91\\xe0}VBY\\xc1W\\x1a\\xf9)\\x04\\x0b\\x9c\\x18\\x07~\\xc7\\x9f\\xd8!\\xdb^\\x8a\\xa4h\\xb7\\xb9\\x98\\x122\\x07\\x8ft1\\t\\x16\\xaf\\xb2\\x05W\\xb1U\\xd7\\xfa[\\x<cdn>\\xecR\\xd6\\xcfo\\xd8SgJY\\xe4tf~yA\\x07f\\x83%\\xbc\\xbd\\x04\\x92.-\\x1dr\\xe8\\xd4{\\xe2|hY\\xbf\\x00S\\xbf\\xdd\\xdal\\x9eY\\xa1^\\xf42\\xc5V\\xf4\\xa3\\x8bd\\x90t\\xe2m\\xbb\\x87e0\\x956\\xb7W\\xde\\xb1\/\\xd3\\x9e\\xf2\\xbb4\\xd8\\x1b\\xe3\\xd1j8\\xf6\\x17\\xc6^\\xcf\\nJw\\xe0g\\xf7\\xcb5;\\r\\x99h\\x87\\xd2r|\\xe7\\xc1{\\xc1\\xc08O-\\xc3\\xdeo\\x7f\\xbfc\\xcc\\x9c\\x14\\xfa\\xd9\\x13\\xaf0\\x1d\\xab\\x9b\\x10\\xa75\\xd7\\xea\\x16\\x91\\xb8l\\xb1$\\x06nW\\xcb\\x82\\xe3>T\\xdf\\xc0N\\xc9\\xc0>\\xed\\xfaND%\\xbe\\xbd\\xee\\xe1\\x8don\\xc4y\\xd8\\x9a\\x99\\xa0\\xe1\\x8d\\n*9n\\xaa\\xb5\/B\\xec\\xbb\\xfbr\\x0fK4\\xab\\xebi,\\xcaa\\xb1+\\xb2RG\\xe8\\t\\xb29w\\x1a\\xfcC\\x91\\xb6L\\xbd\\xa9B\\xfc\\xf4\\x08+\\t\\xed\\x87\\xe5\\x81 \\xad\\x9a-\\xcaS\\x18\\xc0\\x93\\x08]M\\x87`\\x80?\\xc1W\\x03\\xf1\\x94\\x01\\x17\\x8a\\x13\\xb4\\x87\\xcd\\x99\\xf7\\xb9\\xa2&\\x82\\xf4\\x9b\\xf8\\x80\\xcfc\\x02\\x16\\xf4\\x0e\\xab\\x82\\xc9\\x0bn\\x06U\\x10:\\x842tRy.\\x8eg\\x15\\x1a\\xe1\\x89\\x00\\xd4\\xd69\\x12\\xe5#\\x93\\xaa\\x89\\x01Y15YD\\x8c\/N\\xcc\\xcf\\x97\\xfb\\x14\\x04\\x0fe\\xc9\\xa4)\\xee\\xe4\\x9fO\\xd4\\xcf\\x1ek\\x07\\x8cq\\xf32<m\\xa3J\\xa7\\x80')\nStream #4 is already closed or was never opened (but received CellRelay(inner_cell = CellRelayData(data = ... (498 bytes)), stream_id = 4, digest = b'\\xc1\\xbb\\x92T', circuit_id = 80000001))\nStream #4: closed already\nStream #4: closed already\nTraceback (most recent call last):\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\urllib3\\response.<py>\", line 443, in _error_catcher\n    yield\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\urllib3\\response.<py>\", line 818, in read_chunked\n    chunk = self._handle_chunk(amt)\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\urllib3\\response.<py>\", line 771, in _handle_chunk\n    returned_chunk = self._fp._safe_read(self.chunk_left)\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\http\\client.<py>\", line 610, in _safe_read\n    raise IncompleteRead(data, amt-len(data))\nhttp.client.IncompleteRead: IncompleteRead(634 bytes read, 3974 more expected)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\requests\\models.<py>\", line 753, in generate\n    for chunk in self.raw.stream(chunk_size, decode_content=True):\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\urllib3\\response.<py>\", line 623, in stream\n    for line in self.read_chunked(amt, decode_content=decode_content):\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\urllib3\\response.<py>\", line 844, in read_chunked\n    self._original_response.close()\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\contextlib.<py>\", line 131, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\urllib3\\response.<py>\", line 460, in _error_catcher\n    raise ProtocolError(\"Connection broken: %r\" % e, e)\nurllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(634 bytes read, 3974 more expected)', IncompleteRead(634 bytes read, 3974 more expected))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\Examples\\<python>\\tor<py>\\check_btc_addr.<py>\", line 50, in <module>\n    val = sess.get(f\"https:\/\/<api>.blockcypher.com\/v1\/btc\/main\/addrs\/{addr}\") # https:\/\/stackoverflow.com\/a\/71704333\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\requests\\sessions.<py>\", line 555, in get\n    return self.request('GET', url, **kwargs)\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\requests\\sessions.<py>\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\requests\\sessions.<py>\", line 697, in send\n    r.content\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\requests\\models.<py>\", line 831, in content\n    self._content = b''.join(self.iter_content(CONTENT_CHUNK_SIZE)) or b''\n  File \"C:\\Program Files\\<python>\\<python>38\\lib\\site-packages\\requests\\models.<py>\", line 756, in generate\n    raise ChunkedEncodingError(e)\nrequests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(634 bytes read, 3974 more expected)', IncompleteRead(634 bytes read, 3974 more expected))\n\nI don't really understand why it doesn't work if I run it multiple times. Anybody know what's going on here, and how to fix it?","118":"I am completely new to <solidity>. I am learning <solidity> following a course. I am trying to deploy a simple contract using <truffle> hdwallet  provider. I am getting the same error again and again. I tried many solutions but none seem to work.\nI have 2eth in my sepolia network.\nThe error says\n\nError: The contract code couldn't be stored, please check your gas limit.\n\nI have tried to put multiple gas values and put the maximum value. Still it doesn't work. Dont know where I am missing the spot.\nHere is my deploy.js file\nconst HDWalletProvider = require('<truffle>-hdwallet-provider');\n\nconst Web3 = require('web3');\n\nconst { interface, bytecode } = require('.\/compile');\n\nconst provider = new HDWalletProvider(\n        \/\/i put my account prase here\n);\n\nconst web3 = new Web3(provider);\n\nconst deploy = async () => {\n\n    const accounts = await web3.eth.getAccounts();\n\n    console.log('Attempting to deploy from account', accounts[0]);\n\n    const result = await new web3.eth.Contract(JSON.parse(interface))\n        .deploy({ data: '0x0' + bytecode, arguments: ['Hi,there'] })\n        .send({ gas: \"10000000\", from: accounts[0] });\n\n    console.log('Contract deployed to', result.options.address);\n\n};\ndeploy();\n\nHere is my main contract\npragma <solidity> >=0.4.26;\n\ncontract Inbox {\n    string public message;\n\n    constructor(string memory intialmsg) public{\n        message = intialmsg;\n    }\n\n    function setmessage(string memory newMessage) public {\n        message = newMessage;\n    }\n}\n\nhere is my package.json file\n{\n  \"name\": \"inbox\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"ganache-cli\": \"^6.12.2\",\n    \"mocha\": \"^10.2.0\",\n    \"<openzeppelin>-<solidity>\": \"^4.6.0\",\n    \"solc\": \"^0.4.26\",\n    \"<truffle>-hdwallet-provider\": \"^1.0.17\",\n    \"web3\": \"^1.0.0-beta.26\"\n  }\n}","119":"I am currently building a blockchain based app. For the starting point I was following the freeCodeCamp.org tutorial for a To Do List (see https:\/\/www.youtube.com\/watch?v=coQ5dg8wM2o&t=2367s&ab_channel=freeCodeCamp.org), but instead of a to do list I want to extend this to a message exchange.\nUnfortunately I am having trouble with loading the contract on the website. The code to load the contract sits in eth-info-ex\/src\/app.js and is as follows:\nloadContract: async () => {\n        const ETHINFOEX = await $.getJSON('.\/ETHINFOEX.json')\n        \/\/create a <truffle> contract - a js representation of a smart contract that allows to call functions on it\n        App.contracts.ETHINFOEX = <truffle>Contract(ETHINFOEX)\n        App.contracts.ETHINFOEX.setProvider(new Web3.providers.HttpProvide(\"http:\/\/127.0.0.1:7545\"));\n        \/\/console.log(ETHINFOEX)\n        App.ETHINFOEX = await App.contracts.ETHINFOEX.deployed()\n    },\n\nThe ETHINFOEX.json file is in the following path: eth-info-ex\/build\/contracts\/ETHINFOEX.json\nWhen I load the app by <npm> run dev I get the following output:\n> eth-info-ex@1.0.0 dev\n> lite-server\n\n** browser-sync config **\n{\n  injectChanges: false,\n  files: [ '.\/**\/*.{html,htm,css,js}' ],\n  watchOptions: { ignored: 'node_modules' },\n  server: {\n    baseDir: [ '.\/src', '.build\/contracts' ],\n    middleware: [ [Function (anonymous)], [Function (anonymous)] ],\n    routes: { '\/vendor': '.\/node_modules' }\n  }\n}\n[Browsersync] Access URLs:\n ---------------------------------------\n       Local: http:\/\/<localhost>:3000\n    External: http:\/\/153.19.246.137:3000\n ---------------------------------------\n          UI: http:\/\/<localhost>:3001\n UI External: http:\/\/<localhost>:3001\n ---------------------------------------\n[Browsersync] Serving files from: .\/src\n[Browsersync] Serving files from: .build\/contracts\n[Browsersync] Watching files...\n23.01.14 12:17:59 200 GET \/index.html\n23.01.14 12:17:59 304 GET \/bootstrap\/dist\/css\/bootstrap.min.css\n23.01.14 12:17:59 304 GET \/bootstrap\/dist\/js\/bootstrap.min.js\n23.01.14 12:17:59 304 GET \/<truffle>-contract\/dist\/<truffle>-contract.js\n23.01.14 12:17:59 200 GET \/app.js\n23.01.14 12:18:00 404 GET \/ETHINFOEX.json\n23.01.14 12:18:36 304 GET \/bootstrap\/dist\/css\/bootstrap.min.css\n23.01.14 12:18:37 200 GET \/bootstrap\/dist\/css\/bootstrap.min.css.map\n23.01.14 12:18:37 200 GET \/bootstrap\/dist\/js\/bootstrap.min.js.map\n\nAnd in the browser the following error:\njquery.min.js:4 \n\nGET http:\/\/<localhost>:3000\/ETHINFOEX.json 404 (Not Found)\nsend @ jquery.min.js:4\najax @ jquery.min.js:4\nn.<computed> @ jquery.min.js:4\ngetJSON @ jquery.min.js:4\nloadContract @ app.js:49\nload @ app.js:11\nawait in load (async)\n(anonymous) @ app.js:59\ndispatch @ jquery.min.js:3\nr.handle @ jquery.min.js:3\nload (async)\nadd @ jquery.min.js:3\n(anonymous) @ jquery.min.js:3\neach @ jquery.min.js:2\neach @ jquery.min.js:2\nsa @ jquery.min.js:3\non @ jquery.min.js:3\n(anonymous) @ carousel.js:496\n(anonymous) @ bootstrap.min.js:6\n(anonymous) @ bootstrap.min.js:6\n\n\nI have tried changing the browsers (I tried Edge, Google Chrome and FireFox), I also tried running google with the --allow-file-access-from-file and I also tried editing the path to the file to various combinations:\nETHINFOEX\n.\/build\/contracts\/ETHINFOEX.json\n.\/contracts\/ETHINFOEX.json\nand even with the whole path including the drive it is not seen or the web browser states it does not have access to a private path.\nI have also tried checking the github repository of freeCodeCamp.org including any repositories made by other users with updates to newer versions but unfortunately I did not find an answer\nHas anyone encountered such issue? I would really appreciate any help","120":"I'm getting this error after I execute the command cargo build-bpf to build the program for <solana> on Windows 10.\ninfo: uninstalling toolchain 'bpf'\ninfo: toolchain 'bpf' uninstalled \nerror: no such command: `+bpf`\n\n        Cargo does not handle `+toolchain` directives.\n        Did you mean to invoke `cargo` through `rustup` instead?`","121":"I'm working on this <ether>naut challenge\nMy plan is as follows.\n1-Deploy an exploit contract:\ncontract Exploit {\n\n  \/\/ stores a timestamp \n  uint public a;\n  uint public b;\n  address public storedTime;  \n\n  function setTime(uint _time) public {\n    storedTime = tx.origin;\n  }\n}\n\nWhen sending a delegatecall to the setTime function, the third state variable of the calling contract should be set to tx.origin.\n2- Call the setFirstTime function of the Preservation contract while passing it the address of the deployed Exploit contract, converted to decimals.\n3- Call the setFirstTime function again, this time the called contract is the Exploit contract that will set the third state variable of the calling contract (owner) to tx.origin.\nIt works just fine when deploying the contracts in <remix> VM, but when deploying to Goerli, the timezone1Library variable is effectively changed to the exploit contract address, but the owner variable won't budge. No idea why.","122":"So I am triggering this contract's fallback(from another contract) which emits an event, This event shows up in <remix> but not in ganache or while test.\nTarget Contract\ncontract ContractA {\n    event logMsgData (bytes, uint);\n\n    fallback() external payable {\n        console.log(\"here\");\n        emit logMsgData(msg.data, msg.value);\n    }\n}\n\nCaller\ncontract ContractB {\n    BookTicket public targetContract;\n\n    constructor(address _targetContract) {\n        targetContract = ContractA(payable(_targetContract));\n    }\n\n    function callFallbackUsingSignature() public {\n        (bool success,) = address(targetContract).call(abi.encodeWithSignature(\"nonExistingFunction()\"));\n        require(success);\n    }\n}\n\nnow when I run callFallbackUsingSignature() it does trigger the fallback (as indicated by <remix> and console.log) but it does not show up on ganache\n\nor in transaction log\n{\n  to: '0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9',\n  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n  contractAddress: null,\n  transactionIndex: 0,\n  gasUsed: BigNumber { value: \"31630\" },\n  logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040200000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000',\n  blockHash: '0x28544824c41f6791ca1b0c9abec71d867e14e571598f795fb23385c4ceaabda8',\n  transactionHash: '0x6f1ae658afe454af1173c3cce8a3ce152c91a5fcb6ea3af6e31b3b72f04d6527',\n  logs: [\n    {\n      transactionIndex: 0,\n      blockNumber: 6,\n      transactionHash: '0x6f1ae658afe454af1173c3cce8a3ce152c91a5fcb6ea3af6e31b3b72f04d6527',\n      address: '0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0',\n      topics: [Array],\n      data: '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f85396d700000000000000000000000000000000000000000000000000000000',\n      logIndex: 0,\n      blockHash: '0x28544824c41f6791ca1b0c9abec71d867e14e571598f795fb23385c4ceaabda8'\n    }\n  ],\n  blockNumber: 6,\n  confirmations: 1,\n  cumulativeGasUsed: BigNumber { value: \"31630\" },\n  effectiveGasPrice: BigNumber { value: \"1458563173\" },\n  status: 1,\n  type: 2,\n  byzantium: true,\n  events: [\n    {\n      transactionIndex: 0,\n      blockNumber: 6,\n      transactionHash: '0x6f1ae658afe454af1173c3cce8a3ce152c91a5fcb6ea3af6e31b3b72f04d6527',\n      address: '0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0',\n      topics: [Array],\n      data: '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f85396d700000000000000000000000000000000000000000000000000000000',\n      logIndex: 0,\n      blockHash: '0x28544824c41f6791ca1b0c9abec71d867e14e571598f795fb23385c4ceaabda8',\n      re<move>Listener: [Function (anonymous)],\n      getBlock: [Function (anonymous)],\n      getTransaction: [Function (anonymous)],\n      getTransactionReceipt: [Function (anonymous)]\n    }\n  ]\n}\n\nAnd when i test it, no matter which args i give the test always passes\nexpect(await contractB.callFallbackUsingSignature()).to.emit(contractA, \"logMsgData\").withArgs(\"0xf853\", 0);\n\nSo how do I test event emission? What am I doing wrong.","123":"I am trying to implement a flow test for my corda app written in java, but when I start to run a sample test to have a start I find this error:\nCould not initialize plugin: interface org.mockito.plugins.MockMaker (alternate: null)\njava.lang.IllegalStateException: Could not initialize plugin: interface org.mockito.plugins.MockMaker (alternate: null)\n....\nCaused by: org.mockito.exceptions.base.MockitoInitializationException: \nCould not initialize inline Byte Buddy mock maker. (This mock maker is not supported on <android>.)\nJava               : 1.8\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 25.341-b10\nJVM name           : Java HotSpot(TM) 64-Bit Server VM\nJVM version        : 1.8.0_341-b10\nJVM info           : mixed mode\nOS name            : Windows 11\nOS version         : 10.0\n\nI think the mockito plugin should be included in the corda.testing library that I have imported, and my corda environment set up should be fine since I can compile and run my corda app normally, and since I am runing the sample app, it should not be the code's problem. I have googled about it but didn't find anything useful, any suggestion about this will be helpful.","124":"<subgraph>\n\nRecently I have been having problem with the graph. Any time I try to create a <subgraph>. It shows the loading spinner but nothing shows up. I tried this for hours but still nothing. I changed networks, used vpn and nothing worked.\nI thought the problem was my network, but it turned out it wasn't, I tried using vpn and nothing worked.","125":"To context. I want to make a contract that receives USDC and send custom <token>s to the buyer. After that, in the same call, the contract forwards those USDCs to another wallet. I have done tests, and calls. When I do it through <remix>, I'm able to get it working nicely, Rate works, forward funds, everything. However, once I try to call it through Metamask, it returns me a absurd amound of gas required (10 <matic>) to call buy<token>s(). Could someone help me find if something is wrong, or should it be this expensive?\nps: With buy<token>s(), we are also calling approve() from the buyer, to approve Crowdsale to take the right amount of USDC\nI have two contracts to demonstrate. First, the custom <token>:\n\/\/ SPDX-License-Identifier: MIT\npragma <solidity> ^0.8.0;\n\nimport \".\/ERC777P.sol\";\nimport \".\/MinterRole.sol\";\n\ncontract <token>MBP is ERC777P, MinterRole {\n    constructor(\n        string memory name,\n        string memory symbol,\n        address[] memory defaultOperators,\n        uint256 initialSupply\n    ) ERC777P(name, symbol, defaultOperators)\n    {\n        _mint(msg.sender, initialSupply, \"\", \"\", \"\");\n    }\n\n    function mint(address account, uint256 amount, bytes memory userData, bytes memory operatorData, bytes32 proof) public onlyMinter returns (bool) {\n        _mint(account, amount, userData, operatorData, proof);\n        return true;\n    }\n\n    function burn(uint256 amount, bytes memory userData, bytes memory operatorData) public returns (bool) {\n        _burn(msg.sender, amount, userData, operatorData);\n        return true;\n    }\n}\n\nThen, the crowdsale:\npragma <solidity> ^0.5.0;\n\nimport \".\/Context.sol\";\nimport \".\/IERC20.sol\";\nimport \".\/StableCoin.sol\";\nimport \".\/SafeMath.sol\";\nimport \".\/SafeERC20.sol\";\nimport \".\/ReentrancyGuard.sol\";\n\n\/**\n * @title Crowdsale\n * @dev Crowdsale is a base contract for managing a <token> crowdsale,\n * allowing investors to purchase <token>s with <ether>. This contract implements\n * such functionality in its most fundamental form and can be extended to provide additional\n * functionality and\/or custom behavior.\n * The external interface represents the basic interface for purchasing <token>s, and conforms\n * the base architecture for crowdsales. It is *not* intended to be modified \/ overridden.\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\n * behavior.\n *\/\n\n\ncontract Crowdsale is Context, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    \/\/ The <token> being sold\n    IERC20 private _<token>;\n    STABLE private _stableCoin = _stableCoin;\n\n    \/\/ Address where funds are collected\n    address payable private _wallet;\n\n    \/\/ Contract owner address\n    address _owner;\n    \/\/ How many <token> units a buyer gets per usdc.\n    \/\/ The rate is the conversion between usdc and the smallest and indivisible <token> unit.\n    \/\/ So, if you are using a rate of 1 with a ERC20Detailed <token> with 3 decimals called TOK\n    \/\/ 1 usdc will give you 1 unit, or 0.001 TOK.\n    uint256 private _rate;\n\n    \/\/ Amount of usdc raised\n    uint256 private _usdcRaised;\n\n    \/**\n     * Event for <token> purchase logging\n     * @param purchaser who paid for the <token>s\n     * @param beneficiary who got the <token>s\n     * @param value usdcs paid for purchase\n     * @param amount amount of <token>s purchased\n     *\/\n    event <token>sPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\n    \/**\n     * @param rate Number of <token> units a buyer gets per wei\n     * @dev The rate is the conversion between wei and the smallest and indivisible\n     * <token> unit. So, if you are using a rate of 1 with a ERC20Detailed <token>\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n     * @param wallet Address where collected funds will be forwarded to\n     * @param <token> Address of the <token> being sold\n     *\/\n    constructor (uint256 rate, address payable wallet, IERC20 <token>, address stableCoin) public {\n        require(rate > 0, \"Crowdsale: rate is 0\");\n        require(wallet != address(0), \"Crowdsale: wallet is the zero address\");\n        require(address(<token>) != address(0), \"Crowdsale: <token> is the zero address\");\n        require(address(stableCoin) != address(0), \"Crowdsale: stable is the zero address\");\n\n        _owner = _msgSender();\n        _rate = rate;\n        _wallet = wallet;\n        _<token> = <token>;\n        _stableCoin = STABLE(stableCoin);\n    }\n\n    modifier onlyOwner() {\n        require(_msgSender() == _owner, \"OwnerRole: Only owner can make this change\");\n        _;\n    }\n\n    \/**\n     * @return the <token> being sold.\n     *\/\n    function <token>() public view returns (IERC20) {\n        return _<token>;\n    }\n\n    \/**\n     * @return the stable <token> being required.\n     *\/\n    function stable() public view returns (STABLE) {\n        return _stableCoin;\n    }\n\n    \/**\n     * @return the address where funds are collected.\n     *\/\n    function wallet() public view returns (address payable) {\n        return _wallet;\n    }\n\n    \/**\n     * @return the number of <token> units a buyer gets per wei.\n     *\/\n    function rate() public view returns (uint256) {\n        return _rate;\n    }\n\n    \/**\n     * @return the amount of wei raised.\n     *\/\n    function usdcRaised() public view returns (uint256) {\n        return _usdcRaised;\n    }\n\n    \/**\n     * @dev Change contract rate\n     * @param newRate New price for minimum amount of <token>\n     * @return true if rate was modifie\n     *\/\n\n     function changeRate(uint256 newRate) public onlyOwner returns (bool) {\n        _rate = newRate;\n        return true;\n     }\n\n    \/**\n     * @dev low level <token> purchase ***DO NOT OVERRIDE***\n     * This function has a non-reentrancy guard, so it shouldn't be called by\n     * another `nonReentrant` function.\n     * @param beneficiary Recipient of the <token> purchase\n     * @param <token>Amount Stable coin quantity for the purchase\n     *\/\n    function buy<token>s(address beneficiary, uint256 <token>Amount) public nonReentrant payable {\n        \/\/ calculate <token> amount to be created\n        \/\/ <token>Amount = <token>Amount * 10 ** 18;\n\n        uint256 <token>s = _get<token>Amount(<token>Amount);\n\n        _preValidatePurchase(beneficiary, <token>s);\n        \/\/ update state\n        _usdcRaised = _usdcRaised.add(<token>Amount);\n\n        bool stableStatus = _stableCoin.transferFrom(beneficiary, address(this), <token>Amount);\n        require(stableStatus, \"Crowdsale: Stable <token> transfer failed\");\n        \n        _processPurchase(beneficiary, <token>s);\n        emit <token>sPurchased(_msgSender(), beneficiary, <token>Amount, <token>s);\n\n        _updatePurchasingState(beneficiary, <token>Amount);\n\n        _forwardFunds(<token>Amount);\n        _postValidatePurchase(beneficiary, <token>Amount);\n    }\n    \/**\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     *     super._preValidatePurchase(beneficiary, <token>Amount);\n     *     require(weiRaised().add(<token>Amount) <= cap);\n     * @param beneficiary Address performing the <token> purchase\n     * @param <token>Amount Value in wei involved in the purchase\n     *\/\n    function _preValidatePurchase(address beneficiary, uint256 <token>Amount) internal view {\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\n        require(<token>Amount != 0, \"Crowdsale: <token>Amount is 0\");\n        require(!(_stableCoin.balanceOf(beneficiary) < <token>Amount), \"Crowdsale: Not enough balance\");\n        this; \/\/ silence state mutability warning without generating bytecode - see https:\/\/github.com\/<ether>eum\/<solidity>\/issues\/2691\n    }\n\n    \/**\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n     * conditions are not met.\n     * @param beneficiary Address performing the <token> purchase\n     * @param weiAmount Value in wei involved in the purchase\n     *\/\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\n        \/\/ solhint-disable-previous-line no-empty-blocks\n    }\n\n    \/**\n     * @dev Source of <token>s. Override this method to modify the way in which the crowdsale ultimately gets and sends\n     * its <token>s.\n     * @param beneficiary Address performing the <token> purchase\n     * @param <token>Amount Number of <token>s to be emitted\n     *\/\n    function _deliver<token>s(address beneficiary, uint256 <token>Amount) internal {\n        _<token>.safeTransfer(beneficiary, <token>Amount);\n    }\n\n    \/**\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit\/send\n     * <token>s.\n     * @param beneficiary Address receiving the <token>s\n     * @param <token>Amount Number of <token>s to be purchased\n     *\/\n    function _processPurchase(address beneficiary, uint256 <token>Amount) internal {\n        _deliver<token>s(beneficiary, <token>Amount);\n    }\n\n    \/**\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\n     * etc.)\n     * @param beneficiary Address receiving the <token>s\n     * @param weiAmount Value in wei involved in the purchase\n     *\/\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {\n        \/\/ solhint-disable-previous-line no-empty-blocks\n    }\n\n    \/**\n     * @dev Override to extend the way in which <ether> is converted to <token>s.\n     * @param stableCoinAmount Value in wei to be converted into <token>s\n     * @return Number of <token>s that can be purchased with the specified _weiAmount\n     *\/\n    function _get<token>Amount(uint256 stableCoinAmount) internal view returns (uint256) {\n        return stableCoinAmount.div(_rate);\n    }\n\n    \/**\n     * @dev Determines how ETH is stored\/forwarded on purchases.\n     *\/\n    function _forwardFunds(uint256 <token>Amount) internal returns (bool){\n        require(_stableCoin.transfer(_wallet, <token>Amount), \"Crowdsale: Stable <token> transfer failed\");\n        return true;\n    }\n\n}\n\nI used those contracts and with <remix> gas was as low as 0.01 <matic>.","126":"Could someone please help on an issue, where I'm not getting a json file after I compile the contract in brownie..It just says\nBrownie v1.19.2 - <python> development framework for <ether>eum\n<project> has been compiled. Build artifacts saved at Simple_Storage\/build\/contracts\nBut there is no JSON file.\nAny input would be appreciated.","127":"node version : 16.17.1\n<npm> version : 9.2.0\nDocumentations say that if you have <npm> version 7+ you do not need to install any dependencies . Just install the toolbox . But even after having a <npm> version 9.2.0 it gives me the following error\n\nError HH801: Plugin @nomicfoundation\/<hardhat>-toolbox requires the following dependencies to be installed: @<ether>s<project>\/providers, @nomicfoundation\/<hardhat>-network-helpers, @nomicfoundation\/<hardhat>-chai-matchers, @nomiclabs\/<hardhat>-<ether>s, @nomiclabs\/<hardhat>-<ether>scan, @types\/chai, @types\/mocha, @typechain\/<ether>s-v5, @typechain\/<hardhat>, chai, <ether>s, <hardhat>-gas-reporter, <solidity>-coverage, ts-node, typechain, <typescript>. Please run: <npm> install --save-dev \"@<ether>s<project>\/providers@^5.4.7\" \"@nomicfoundation\/<hardhat>-network-helpers@^1.0.0\" \"@nomicfoundation\/<hardhat>-chai-matchers@^1.0.0\" \"@nomiclabs\/<hardhat>-<ether>s@^2.0.0\" \"@nomiclabs\/<hardhat>-<ether>scan@^3.0.0\" \"@types\/chai@^4.2.0\" \"@types\/mocha@>=9.1.0\" \"@typechain\/<ether>s-v5@^10.1.0\" \"@typechain\/<hardhat>@^6.1.2\" \"chai@^4.2.0\" \"<ether>s@^5.4.7\" \"<hardhat>-gas-reporter@^1.0.8\" \"<solidity>-coverage@^0.8.1\" \"ts-node@>=8.0.0\" \"typechain@^8.1.0\" \"<typescript>@>=4.5.0\"\n\nAfter installing dependencies it works ig , but why do we need to install if the documentation says you don't need to .","128":"I have UUPS erc721 contract. I have deployed them. Now I have a proxy contract and a logic contract.\nLets say logic contract has address 0x1234\nI want a factory contract to deploy multiple upgradeable proxies by co<py>ing a already deployed proxy from blockchain and all those proxies using logic contract at address 0x1234.\nI want the <project> to be like as shown in the figure.\n\nI have tried the following code but it does not produce the expected result. Proxy is not initialized\/Deployed :\nMy ERC721 contract takes ownerAddress, name and symbol as initializer arguments. ERC721 is upgradeable so it uses a initializer and not a constructor.\npragma <solidity> 0.8.15;\n\nimport \".\/GenericERC721.sol\";\nimport \".\/cloneFactory.sol\";\nimport \"@<openzeppelin>\/contracts\/access\/Ownable.sol\";\nimport \"@<openzeppelin>\/contracts\/proxy\/ERC1967\/ERC1967Proxy.sol\";\n\ncontract GenericFactory is Ownable, CloneFactory {\n    address public proxyAddress;\n    address public logicAddress;\n\n    address[] public addressBook;\n\n    event GenericERC721created(address deployedProxyAddress);\n\n    constructor(address _proxyAddress, address _logicAddress) {\n        proxyAddress = _proxyAddress;\n        logicAddress =_logicAddress;\n    }\n\n    function createProxy(\n        address _owner,\n        string calldata _name,\n        string calldata _symbol\n    ) public onlyOwner {\n\n        address clone = createClone(proxyAddress);\n        ERC1967Proxy(clone).constructor(logicAddress, abi.encodeWithSignature(\"initialize(address,string,string)\", _owner, _name, _symbol));\n        addressBook.push(clone);\n        emit GenericERC721created(clone);\n    }\n}","129":"We need to know that is there any possible ways to auto<matic>ally fetch the Users wallet addresses of those who swapped their <token>s in a DEX exchange in the <ether>scan site! As we are now able track the DEX contract addresses and <token>s for now. But, we do not have a clue about tracking the users wallet addresses of the DEX exchanges like uniswap, sushiswap, 1inch. \nWe are expecting a solution for a problem that we stated. we do not have a clue about tracking the users wallet addresses of the DEX exchanges like uniswap, sushiswap, 1inch.","130":"I am creating a blockchain related <project> but can't able to run it appropriately on browser. To know about the <project> I am attaching the link of the <project> is given below -\nhttps:\/\/github.com\/toful\/BC_GDPR-Compliant_PDManagement_System\nI am trying to configure the <truffle>, ganache and java file but can't able to get success.\nExpecting to get similar to this web page..","131":"what is blockchain <api> and introduce <token>view.io blockchain explorer\nI want to use cosmos to get Tx information via blockchain explorer","132":"How to change beneficiary?\nexample from documentation: https:\/\/docs.near.org\/tutorials\/examples\/donation\nread.md has the following instructions\n\nBuild and Deploy the Contract\nYou can auto<matic>ally compile and deploy the contract in the NEAR testnet by running:\n\n<npm> run deploy\n\nOnce finished, check the neardev\/dev-account file to find the address in which the contract was deployed:\ncat .\/neardev\/dev-account\n# e.g. dev-1659899566943-21539992274727\n\nThe contract will be auto<matic>ally initialized with a default beneficiary.\nTo initialize the contract yourself do:\n# Use near-cli to initialize contract (optional)\nnear call <dev-account> init '{\"beneficiary\":\"<account>\"}' --accountId <dev-account>\n\nI write\n<npm> run deploy\n\nthen\nnear call dev-1673300600981-97542270545900 init '{\"beneficiary\":\"gettherefast.testnet\"}' --accountId dev-1673300600981-97542270545900\n\nbut  .\/neardev\/dev-account does not change\nin src\/contract.ts\nclass DonationContract {\n  beneficiary: string = \"v1.faucet.nonofficial.testnet\";\n  donations = new UnorderedMap<bigint>('map-uid-1');\n\nI chnage \"v1.faucet.nonofficial.testnet\" to \"gettherefast.testnet\" ,\nnothing has changed either\nwhat am I doing wrong?","133":"I'm currently working with the Elrond blockchain, and I've successfully registered a new <nft> collection & created an <nft> following the documentation example here.\nHowever, I need to limit the amount of <nft>s that can be created for a specific collection. The documentation says:\n\nThe ESDT manager can stop the creation of an <nft> for the given ESDT forever by removing the only ESDTRole<nft>Create role available.\n\nSo I guess I could just create the max supply of a collection (e.g 100 <nft>s for collection1) and then re<move> the creation role. But this means I have to create all <nft>s beforehand, which is not ideal.\n\nIs there another way to limit the max supply, maybe when registering\/issuing the collection itself?\n\nOn a separate note, is there good documentation on the difference between EGLD \/ ESDT \/ SFT \/ <nft>. I'm particularly inte<rest>ed in SFTs, but I don't understand how the state change from fungible -> non-fungible works (e.g once the SFT becomes non-fungible, is it stuck in that state or can it become fungible again?). Documentation on that is quite unclear.\n\n\nThanks in advance for your help!","134":"I am using fast<api> and when I send post with following code, it return below error:\n{'detail': [{'loc': ['body'], 'msg': 'value is not a valid dict', 'type': 'type_error.dict'}]}\n\nMy code is :\nimport requests\nimport json\nimport datetime\n\ndef main():\n    time = datetime.datetime.now().isoformat()\n\n    transaction = {\n        \"time\": time,\n        \"sender\": \"COCOCOCO\",\n        \"receiver\": \"AAAAAA\",\n        \"amount\": AAA,\n        \"description\": \"Christmas Dinner Fee\",\n        \"signature\": \"signature_sample\"\n    }\n\n    url =\"https:\/\/XXXXXX.deta.dev\/transaction_pool\/\"\n    res = requests.post(url, json.dumps(transaction))\n    print(res.json())\n\nif __name__ == \"__main__\":\n    main()\n\nHow do I fix it?","135":"i just started working with flashbots, and am stuck in my code. i need to ask some questions to clear my sanity, before i go mad, being checking for hours, no way. Hopefully i will get them answered.\nApparently flashbots can be used to save <token> from compromised wallet.\nthe whole idea goes thus:\na) send eth to a compromised wallet,\nB) then transfer <token>s.\nNote: am using <python> and web3.<py>\nMY QUESTION\nSince a) and b) will be mined in the same block, there needs to be enough eth in the compromised wallet to send out <token>s.  Now at the initial start of the bundle transaction, there will be no eth in the compromise wallet, thus leaving simulation of the transaction to return  insufficient funds in the compromised wallet.\nif this is correct:\n\nhow then should a bundle transaction be sent, with an empty signer wallet with no funds in it (compromised wallet)\nif the statement above is wrong,  then how is flashbot helpful.\n\nThanks in Advance","136":"while installing homebrew this error comes after 60% download..\n * [new tag]             3.6.5                   -> 3.6.5\n * [new tag]             3.6.6                   -> 3.6.6\n * [new tag]             3.6.7                   -> 3.6.7\n * [new tag]             3.6.8                   -> 3.6.8\n * [new tag]             3.6.9                   -> 3.6.9\nHEAD is now at 106af0355 Merge pull request #14337 from Red54\/patch-2\n==> Tapping homebrew\/core\nremote: Enumerating objects: 1391130, done.\nremote: Counting objects: 100% (411\/411), done.\nremote: Compressing objects: 100% (218\/218), done.\nerror: RPC failed; curl 56 GnuTLS recv error (-9): Error decoding the received TLS packet.\nerror: 4802 bytes of body are still expected\nfetch-pack: unexpected disconnect while reading sideband packet\nfatal: early EOF\nfatal: fetch-pack: invalid index-pack output\nFailed during: git fetch --force origin refs\/heads\/master:refs\/remotes\/origin\/master\n\nHow to fix this error??","137":"I want to get the output amount of a Swap on <pancakeswap> ( https:\/\/<pancakeswap>.finance\/swap ) auto<matic>ally.\nFor example:\nFist <token> = BNB\nSecond <token> = CAKE\nWhen I fill out the BNB amount in the first field, in the second one I get the CAKE amount. I want to get that value from the response.\n\nI found the response (at least I think) but it is encrypted somehow.\n\nI'm not sure if that's the correct request. I also tried to check the WebSockets because it's updated in real-time. Without success. If someone has an idea about how to get it, please let me know.","138":"I am running private geth node and I am wondering if there is any way to find the root cause of transaction exception. When I send the transaction, all I can see is:\n\ntransaction failed [ See:\nhttps:\/\/links.<ether>s.org\/v5-errors-CALL_EXCEPTION ]\n\nAnd when I run the same transaction in <hardhat> network, I get more details:\n\nVM Exception while processing transaction: reverted with panic code\n0x11 (Arithmetic operation underflowed or overflowed outside of an\nunchecked block)\n\nIs it possible to get the same info from my geth node?","139":"I have a apemodel.blend file (simple 3d model) which is part of my Go application that i want to render with the Flamenco rendering farm. I have forked the open source code of Flamenco. I want to render the model along with 4 parameters. The parameters are param1 (height), param2 (width), param3 (rotation x-axis) and param4 (light intensity). So for example, i want to send the apemodel.blend file along with the parameters param1=350, param2=250, param3=90, param4=300 to flamenco for rendering. So the render job should render the apemodel by changing the height of the model (param1) according to the parameter value 350 (b<py>.data.objects[\"MyModel\"].dimensions[1] = param1), the width (param2) according to value 250 (b<py>.data.objects[\"MyModel\"].dimensions[0] = param2), the rotation on the x axis to 90 degrees (param3), and the light intensity to 300 (param4). The render result should be a png file with the modications according to the parameters. So a second rendering of the same file but with the param1 value 200 (previously 350) and param4 value 450 (previously set to 300), should result in a png file  with a smaller image model and much lighter.\nI need to know what files and functions to change from the flamenco rendering repo:\nhttps:\/\/gitlab.com\/blender\/flamenco\nI do not want to use the Flamenco UI application, but rather do everything with code.\nIn order to accomplish this, I believe it should be at least the following files (but i could be wrong):\nJob_types.<py> in:\nhttps:\/\/gitlab.com\/blender\/flamenco\/-\/blob\/main\/addon\/flamenco\/job_types.<py>\nJob_submission.<py> in:\nhttps:\/\/gitlab.com\/blender\/flamenco\/-\/blob\/main\/addon\/flamenco\/job_submission.<py>\nAlso in the future, i want to create rendering jobs with more than 4 parameters, like 10 or 15 parameters. I am thankful to any input. Thanks!!!\nI have created a RenderJobTemplate in my Go application and a RenderRequest() function to submit the job request to Flamenco, but that is not working.","140":"I got a following error code while trying to install brownie through pipx (by typing \"pipx install eth-brownie)\nPS C:\\Users\\J.M\\demos\\brownie_simple_storage> pipx install eth-brownie\nFatal error from pip prevented installation. Full pip output in file:\n    C:\\Users\\J.M\\.local\\pipx\\logs\\cmd_2023-01-08_01.26.02_pip_errors.log\n\npip failed to build packages:\n    bitarray\n    cytoolz\n    lru-dict\n    multidict\n    psutil\n    regex\n    yarl\n\nSome possibly relevant errors from pip install:\n    error: subprocess-exited-with-error\n    error: Microsoft Visual C++ 14.0 or greater is required. Get it with \"Microsoft C++ Build Tools\": https:\/\/visualstudio.microsoft.com\/visual-cpp-build-tools\/  \n\nError installing eth-brownie.\nPS C:\\Users\\J.M\\demos\\brownie_simple_storage> \n\nI have all the prerequirements (node.js, recent <python> version, ganache cli, <npm> all successfully installed), I really have no idea why it can't build those packages.","141":"i want to implement meta transactions, but not for my contract, thing is, i want to use another ERC20 contract's approve function to set their <token> allowance for my contract but the problem is i do not want user to pay for that transaction as well, is there a way to pay user's gas fee for third party contract?","142":"I'm working on a <crypto> wallet app and I need help with these following questions;\n\nwhen creating a new wallet, how do the Blockchain network check if a certain mnemonic seed phrase has been used before for creating another wallet?\nis it ever possible for two independent wallets to have the same mnemonic seed phrase?. If Yes, what's the implication? If No, why?\ntips on security measures to observe when providing mnemonic seed phrases for <crypto> wallets?\n\nThanks","143":"I have deployed an upgradable contract using a factory contract which its code is as fallows:\nbytes memory bytecode = abi.encodePacked(\n    type(TransparentUpgradeableProxy).creationCode,\n    abi.encode(implementation, proxyAdmin, \"\")\n);\n\n<assembly> {\n    contractAddress := create2(\n        0,\n        add(bytecode, 32),\n        mload(bytecode),\n        salt\n    )\n}\n\nEverything is working fine. I did verify the implementation using <hardhat> but I can't verify the proxy itself. <hardhat> gives me the following error:\n\nFailed to verify TransparentUpgradeableProxy contract at addr: Bytecode does not match with the current version of TransparentUpgradeableProxy in the <hardhat> Upgrades plugin.\n\nAny ideas?\nI tried the <hardhat> CLI tool for verification","144":"Sorry if this questions is to open and simple.\nUsually, when you want to get something in a <project> using ERC20 <token>s, you first need to give approval to the contract to take X allowance.\nI have came across some <project>s who ask for maximum allowance with the excuse of not having to approve the <token> every time you want to buy something.\nFor me this is always a big concern even if the <project> is trusted.\nDoes this auto<matic>ally give the <project> the ability of taken all your <token>s? (that specific ERC20 <token> I mean). Not sure what could they call to actually make that happen (I know <project>s that have scammed users this way).\nHow can I ensure contracts with this kind of functionality (of asking for full allowance) can be trusted or not?\nThanks,","145":"Closed. This question needs to be more focused. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                    Want to improve this question? Update the question so it focuses on one problem only by editing this post.\n                \n                    \n                        Closed last month.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nWhen creating tron wallet account some random private key and wallet key is created. Should I check the balance before using it?\nI have created tron wallet address using this code or that one or the official one which works offline without calling any <api> from the node to verify the address or register it.\nIs there any chance that this address is being used by someone? Should I check the balance before using it? Is that the right way to generate tron wallet address?","146":"This dune analytics script is trying to 1) obtain the list of the most traded <nft> <project>s in the last 30 days and 2) add a row of a single collection (\"Wicked Ape Bone Club\" - contract address = 0xbe6e3669464E7dB1e1528212F0BfF5039461CB82).\nWhile it does add the specific collection to the top 30 table, it doesn't preserve the correct ranking. The ranking shouldn't be 1, and should be a lot lower. Apparently, the HAVING after GROUP BY happens before the aggregation. How can the second filtering (obtaining only the row with the single specified collection) be done after the aggregation?\nCode below\n(SELECT \n                ROW_NUMBER() OVER (ORDER BY SUM(original_amount) DESC) AS \"Rank\",\n                CASE WHEN <nft>p.\"<nft>_collection\" IS NOT NULL THEN CONCAT('<a href=\"',<nft>p.url,'\" target=\"_blank\">',<nft>p.<nft>_collection,'<\/a>') \n                ELSE CONCAT('<a href=\"https:\/\/<ether>scan.io\/<token>\/0',SUBSTRING(\"<nft>_contract_address\"::text, 2),'\">',CONCAT('0',SUBSTRING(\"<nft>_contract_address\"::text, 2)),'<\/a>') END AS \"OPENSEA\",\n                COUNT(tx_hash) AS \"Sales\",\n                SUM(original_amount) AS \"Volume ETH\", \n                percentile_cont(.1) within GROUP (ORDER BY original_amount) AS \"Floor Price\",\n                percentile_cont(.5) within GROUP (ORDER BY original_amount) AS \"Median\",\n                <nft>_contract_address\n            FROM <nft>.trades n \n                LEFT JOIN dune_user_generated.\"cryptuschrist_<nft>_<project>s2\" <nft>p on <nft>p.\"<nft>_contract\" = n.<nft>_contract_address\n                    WHERE  (block_time > now() - interval  '30 day')  \n                        AND number_of_items = 1 \n                        AND original_currency in ('ETH','WETH')  \n                        AND <nft>_contract_address NOT IN ('\\xc36cf0cfcb5d905b8b513860db0cfe63f6cf9f5c', '\\x4e1f41613c9084fdb9e34e11fae9412427480e56', '\\x7bd29408f11d2bfc23c34f18275bbf23bb716bc7', '\\xce25e60a89f200b1fa40f6c313047ffe386992c3', '\\xfb3765e0e7ac73e736566af913fa58c3cfd686b7','\\x495f947276749ce646f68ac8c248420045cb7b5e','\\xc99f70bfd82fb7c8f8191fdfbfb735606b15e5c5','\\xb932a70a57673d89f4acffbe830e8ed7f75fb9e0', '\\x3b3ee1931dc30c1957379fac9aba94d1c48a5405')\n                        GROUP BY <nft>_contract_address , <nft>p.<nft>_collection, <nft>p.url\n                        HAVING <nft>_contract_address IN ('\\xbe6e3669464E7dB1e1528212F0BfF5039461CB82')\n                        )\n                        \nUNION\n    (SELECT\n            ROW_NUMBER() OVER (ORDER BY SUM(original_amount) DESC) AS \"Rank\",\n            CASE WHEN <nft>p.\"<nft>_collection\" IS NOT NULL THEN CONCAT('<a href=\"',<nft>p.url,'\" target=\"_blank\">',<nft>p.<nft>_collection,'<\/a>') \n            ELSE CONCAT('<a href=\"https:\/\/<ether>scan.io\/<token>\/0',SUBSTRING(\"<nft>_contract_address\"::text, 2),'\">',CONCAT('0',SUBSTRING(\"<nft>_contract_address\"::text, 2)),'<\/a>') END AS \"OPENSEA\",\n            COUNT(tx_hash) AS \"Sales\",\n            SUM(original_amount) AS \"Volume ETH\", \n            percentile_cont(.1) within GROUP (ORDER BY original_amount) AS \"Floor Price\",\n            percentile_cont(.5) within GROUP (ORDER BY original_amount) AS \"Median\",\n            <nft>_contract_address\n        FROM <nft>.trades n \n            LEFT JOIN dune_user_generated.\"cryptuschrist_<nft>_<project>s2\" <nft>p on <nft>p.\"<nft>_contract\" = n.<nft>_contract_address\n                WHERE  (block_time > now() - interval  '30 day')  \n                    AND number_of_items = 1 \n                    AND original_currency in ('ETH','WETH')  \n                    AND <nft>_contract_address NOT IN ('\\xc36cf0cfcb5d905b8b513860db0cfe63f6cf9f5c', '\\x4e1f41613c9084fdb9e34e11fae9412427480e56', '\\x7bd29408f11d2bfc23c34f18275bbf23bb716bc7', '\\xce25e60a89f200b1fa40f6c313047ffe386992c3', '\\xfb3765e0e7ac73e736566af913fa58c3cfd686b7','\\x495f947276749ce646f68ac8c248420045cb7b5e','\\xc99f70bfd82fb7c8f8191fdfbfb735606b15e5c5','\\xb932a70a57673d89f4acffbe830e8ed7f75fb9e0', '\\x3b3ee1931dc30c1957379fac9aba94d1c48a5405')\n                        GROUP BY <nft>_contract_address , <nft>p.<nft>_collection, <nft>p.url\n                        ORDER BY 4 DESC\n                        LIMIT '30'\n                        ) \nORDER BY \"Rank\" ASC","147":"Closed. This question needs debugging details. It is not currently accepting answers.\n                        \n                    \n                \n            \n        \n            \n        \n            \n                \n                        \n                            \n                        \n                     Edit the question to include desired behavior, a specific problem or error, and the shortest code necessary to reproduce the problem. This will help others answer the question.\n                \n                    \n                        Closed 2 days ago.\n                    \n                \n\n                \n            \n        \n            \n                    \n                        Improve this question\n                    \n            \n\n\n    \n\nshowing invalid signature in documentation when we create <nft> using HTS\nThis is what am using to create the signature\nwant to create <nft> using HTS HEDERA <token> SERVICES","148":"I've recently been doing some research about BNB chain. I can see that they have 03 components [1]:\n\nBNB Beacon Chain - The staking and governance layer of BNB ecosystem.\nBNB Smart Chain (BSC) - An <evm> compatible blockchain\nZkBNB\n\nBut I'm not sure if BNB Beacon Chain supports smart contracts or not? As I can see many types of <token>s\/assets on that chain [2], but I can't find the <token>'s address, only owner address (who initially issued the <token>) is available.\nIf BNB Beacon Chain is available to deploy smart contracts, which are some references\/tutorials\/demo sources?\nThanks for help!\nReferences:\n[1] https:\/\/docs.bnbchain.org\/docs\/overview#what-is-build-n-build-bnb-chain\n[2] https:\/\/explorer.bnbchain.org\/assets\/bep2\nI tried to read several docs, check the block explorer, ask on BNB official telegram but I couldn't really figure it out.","149":"I am trying to create a whitelist. I've used a for and if loop to check if the msg.sender already exists in the array. When the whitelist() function is run, no errors are returned, but when I run check(), it tells me the address doesn't exist in the array, same thing with directing fetching the array.\n\/\/SPDX-License-Identifier: MIT\npragma <solidity> ^0.8.0;\n\ncontract SelfWhitelist {\n\n    address[] public addressWhitelist;\n\n    function whitelist() public returns(string memory) {\n        for(uint i = 0; i < addressWhitelist.length; i++) {\n            if(addressWhitelist[i] != msg.sender) {\n                addressWhitelist.push(msg.sender);\n                return \"Whitelisted!\";\n            }\n        }\n        return \"Already whitelisted!\";\n    }\n\n    function check() public view returns (bool){\n        for(uint i = 0; i < addressWhitelist.length; i++){\n            if(addressWhitelist[i] == msg.sender)\n                return true;\n        }\n        return false;\n    }\n\n}\n\nI added this block of code to check for duplicate entries in the array.\nfor(uint i = 0; i < addressWhitelist.length; i++) {\n            if(addressWhitelist[i] != msg.sender) {\n                addressWhitelist.push(msg.sender);\n                return \"Whitelisted!\";\n            }\n\nExpected for no errors and my address being pushed to the array.\nThe code ran without errors, but nothing was added to the array.","150":"I am trying to create <nft> minting <project> but minting costs 1000000000000000000000. Since it is a big number I want to use bn.js in my <project>: https:\/\/www.<npm>js.com\/package\/bn.js?activeTab=readme\nHere how I am doing minting with bn.js\nimport BN from \"bn.js\";\nconst claim<nft>s = async () => {\n    let cost = blockchain.cost;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = new BN(Number(cost * mintAmount));\n    let totalGasLimit = String(gasLimit * mintAmount);\n    setFeedback(`Minting your ${CONFIG.<nft>_NAME}...`);\n    setClaiming<nft>(true);\n    blockchain.smartContract.methods\n      .mint(wallet.account, mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: wallet.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaiming<nft>(false);\n      })\n      .then((receipt) => {\n        setFeedback(`WOW, the ${CONFIG.<nft>_NAME} is yours!`);\n        setClaiming<nft>(false);\n      });\n  };\n\nBut I am getting an error: bn.js:6 Uncaught (in promise) Error: Assertion failed at assert (bn.js:6:1) at BN._initNumber (bn.js:128:1)\nSo how can I do minting with big number? Is my approach wrong?","151":"I am currently learning how to develop blockchain using Javascript and Node.js. One of my tests continuously fails and I am unable to pinpoint why. Here is the code and to which this error pertains to.\nconst Block = require('.\/block');\n\n    describe('Block', () => {\n\nlet data, lastBlock, block;\n\nbeforeEach(() =\\> {\ndata = 'bar';\nlastBlock = Block.genesis();\nblock = Block.mineBlock(lastBlock, data);\n});\n\nit('sets the `data` to match the input', () =\\> {\nexpect(block.data).toEqual(data);\n});\n\nit('sets the `lastHash` to match the hash of the last block', () =\\> {\nexpect(block.lastHash).toEqual(lastBlock.hash);\n});\n\nit('generates a hash that matches the difficulty', () =\\> {\nexpect(block.hash.substring(0, block.difficulty))\n.toEqual('0'.repeat(block.difficulty));\n});\n\nit('lowers the difficulty for slowly mined blocks', () =\\> {\nexpect(Block.adjustDifficulty(block, block.timestamp+360000))\n.toEqual(block.difficulty-1);\n});\n\nit('raises the difficulty for quickly mined blocks', () =\\> {\nexpect(Block.adjustDifficulty(block, block.timestamp+1))\n.toEqual(block.difficulty+1);\n});\n});\n\nand the error say this:\nFAIL  blockchain\/block.test.js\nBlock\n? sets the data to match the input (21 ms)\n? sets the lastHash to match the hash of the last block (28 ms)\n? generates a hash that matches the difficulty (13 ms)\n? lowers the difficulty for slowly mined blocks (18 ms)\n? raises the difficulty for quickly mined blocks (32 ms)\n\u00a1\u00f1 Block ? generates a hash that matches the difficulty\nexpect(received).toEqual(expected) \/\/ deep equality\n\nExpected: \"\"\nReceived: \"0008c4cb5a7dfbb6e2a57a1cf57967935cd5d842d2c1e37fba95d9e716a5e39e\"\n\n  20 |   it('generates a hash that matches the difficulty', () => {\n  21 |     expect(block.hash.substring(0, block.difficulty))\n> 22 |       .toEqual('0'.repeat(block.difficulty));\n     |        ^\n  23 |   });\n  24 |\n  25 |   it('lowers the difficulty for slowly mined blocks', () => {\n\n  at Object.toEqual (blockchain\/block.test.js:22:8)\n\n\u00a1\u00f1 Block ? lowers the difficulty for slowly mined blocks\nexpect(received).toEqual(expected) \/\/ deep equality\n\nExpected: NaN\nReceived: 2\n\n  25 |   it('lowers the difficulty for slowly mined blocks', () => {\n  26 |     expect(Block.adjustDifficulty(block, block.timestamp+360000))\n> 27 |       .toEqual(block.difficulty-1);\n     |        ^\n  28 |   });\n  29 |\n  30 |   it('raises the difficulty for quickly mined blocks', () => {\n\n  at Object.toEqual (blockchain\/block.test.js:27:8)\n\n\u00a1\u00f1 Block ? raises the difficulty for quickly mined blocks\nexpect(received).toEqual(expected) \/\/ deep equality\n\nExpected: NaN\nReceived: 4\n\n  30 |   it('raises the difficulty for quickly mined blocks', () => {\n  31 |     expect(Block.adjustDifficulty(block, block.timestamp+1))\n> 32 |       .toEqual(block.difficulty+1);\n     |        ^\n  33 |   });\n  34 | });\n  35 |\n\n  at Object.toEqual (blockchain\/block.test.js:32:8)\n\nTest Suites: 1 failed, 1 total\nTests:       3 failed, 2 passed, 5 total\nSnapshots:   0 total\nTime:        0.328 s, estimated 1 s\nRan all test suites.\nIf anyone could help me out that would be much appreciated - thanks!","152":"I'm working on a web3-powered application with <solana> blockchain integrated inside. I successfully connected with <solana> and do the blockchain operations using their web3 <api>s.\nThe connection status is set to a \"confirmed\" flag for transaction results.\nRecently I noticed that some of the transactions were not returning the transaction signatures but these transactions are successful in blockchain (I checked through the wallet addresses in solscan.io )\nWithout the signature that is returned, I'm not able to understand the status of the transactions. Also, I created an auto-retry program for re-executing transactions w\/o blockchain signatures and in this program, the transactions will re-execute again because there are no blockchain signatures returned.\nHow to handle this problem?\nPlease help, Thanks in advance.","153":"Below is my code.`\npragma <solidity> ^0.8.0;\ncontract Auction {\n\/\/ Data\n\/\/Structure to hold details of the item\nstruct Item {\n    uint itemId; \/\/ id of the item\n    uint[] item<token>s;  \/\/<token>s bid in favor of the item\n   \n}\n\n\/\/Structure to hold the details of a persons\nstruct Person {\nuint remaining<token>s; \/\/ <token>s remaining with bidder\nuint personId; \/\/ it serves as <token>Id as well\naddress addr;\/\/address of the bidder\n}\nmapping(address => Person) <token>Details; \/\/address to person \nPerson [4] bidders;\/\/Array containing 4 person objects\n\nItem [3] public items;\/\/Array containing 3 item objects\naddress[3] public winners;\/\/Array for address of winners\naddress public beneficiary;\/\/owner of the smart contract\n\nuint bidderCount=0;\/\/counter\n\n\/\/functions\n\nfunction Auction() public payable{    \/\/constructor\n            \n    \/\/Part 1 Task 1. Initialize beneficiary with address of smart contract\u00a1\u00afs owner\n    \/\/Hint. In the constructor,\"msg.sender\" is the address of the owner.\n    \/\/ ** Start code here. 1 line approximately. **\/\n    beneficiary = msg.sender;\n      \/\/** End code here. **\/\n    uint[] memory emptyArray;\n    items[0] = Item({itemId:0,item<token>s:emptyArray});\n    \n    \/\/Part 1 Task 2. Initialize two items with at index 1 and 2. \n    \/\/ ** Start code here. 2 lines approximately. **\/\n    uint[] memory emptyArray1;\n    items[1] = Item({itemId:1,item<token>s:emptyArray1});\n    uint[] memory emptyArray2;\n    items[2] = Item({itemId:2,item<token>s:emptyArray2});\n    \/\/** End code here**\/\n}\n\n\nfunction register() public payable{\n    \n    \n    bidders[bidderCount].personId = bidderCount;\n    \n    \/\/Part 1 Task 3. Initialize the address of the bidder \n    \/*Hint. Here the bidders[bidderCount].addr should be initialized with address of the registrant.*\/\n    \n    \/\/ ** Start code here. 1 line approximately. **\/\n    bidders[bidderCount].addr = msg.sender;\n    \/\/** End code here. **\n    \n    bidders[bidderCount].remaining<token>s = 5; \/\/ only 5 <token>s\n    <token>Details[msg.sender]=bidders[bidderCount];\n    bidderCount++;\n}\n\nfunction bid(uint _itemId, uint _count) public payable{\n    \/*\n        Bids <token>s to a particular item.\n        Arguments:\n        _itemId -- uint, id of the item\n        _count -- uint, count of <token>s to bid for the item\n    *\/\n    \n    \/*\n    Part 1 Task 4. Implement the three conditions below.\n        4.1 If the number of <token>s remaining with the bidder is < count of <token>s bidded, revert.\n        4.2 If there are no <token>s remaining with the bidder, revert.\n        4.3 If the id of the item for which bid is placed, is greater than 2, revert.\n\n    Hint: \"<token>Details[msg.sender].remaining<token>s\" gives the details of the number of <token>s remaining with the bidder.\n    *\/\n    \n    \/\/ ** Start code here. 2 lines approximately. **\/\n    if ( (<token>Details[msg.sender].remaining<token>s < _count) ||\n         (<token>Details[msg.sender].remaining<token>s <= 0)\n        ) { revert(); }\n    if (_itemId > items.length - 1) { revert(); }\n    \n\n    \/\/** End code here. **\n    \n    \/*Part 1 Task 5. Decrement the remaining<token>s by the number of <token>s bid and store the value in balance variable.\n    Hint. \"<token>Details[msg.sender].remaining<token>s\" should be decremented by \"_count\". *\/\n\n    \/\/ ** Start code here. 1 line approximately. **\n    uint balance = <token>Details[msg.sender].remaining<token>s - _count;\n    \/\/** End code here. **\n    \n    <token>Details[msg.sender].remaining<token>s=balance;\n    bidders[<token>Details[msg.sender].personId].remaining<token>s=balance;\/\/updating the same balance in bidders map.\n    \n    Item storage bidItem = items[_itemId];\n    for(uint i=0; i<_count;i++) {\n        bidItem.item<token>s.push(<token>Details[msg.sender].personId);    \n    }\n}\n\n\/\/ Part 2 Task 1. Create a modifier named \"onlyOwner\" to ensure that only owner is allowed to reveal winners\n\/\/Hint : Use require to validate if \"msg.sender\" is equal to the \"beneficiary\".\nmodifier onlyOwner {\n    \/\/ ** Start code here. 2 lines approximately. **\n    require (msg.sender == beneficiary);\n    _;\n    \/\/** End code here. **\n}\n\n\nfunction revealWinners() public onlyOwner{\n    \n    \/* \n        Iterate over all the items present in the auction.\n        If at least on person has placed a bid, randomly select          the winner *\/\n\n    for (uint id = 0; id < 3; id++) {\n        Item storage currentItem=items[id];\n        if(currentItem.item<token>s.length != 0){\n        \/\/ generate random# from block number \n        uint randomIndex = (block.number \/ currentItem.item<token>s.length)% currentItem.item<token>s.length; \n        \/\/ Obtain the winning <token>Id\n\n        uint winnerId = currentItem.item<token>s[randomIndex];\n            \n        \/* Part 1 Task 6. Assign the winners.\n        Hint.\" bidders[winnerId] \" will give you the person object with the winnerId.\n        you need to assign the address of the person obtained above to winners[id] *\/\n\n        \/\/ ** Start coding here *** 1 line approximately.\n        winners[id] = bidders[winnerId].addr;\n                \n        \/\/** end code here*\n            \n        }\n    }\n} \n\n\/\/Miscellaneous methods: Below methods are used to assist Grading. Please DONOT CHANGE THEM.\nfunction getPersonDetails(uint id) public constant returns(uint,uint,address){\nreturn (bidders[id].remaining<token>s,bidders[id].personId,bidders[id].addr);\n}\n}`\nI am trying to compile it but I am unable to do it.\nplease help in this regard\nthanks","154":"I want to use Access Based Control in my blockchain network and am assigning the user with attributes for this purpose. However, the enrollment certificate stored in my wallet does not have the attribute values present in it.\nMy code snippet for registering and enrolling the user:\n        RegistrationRequest registrationRequest = new RegistrationRequest(\"appUser1\");\n        registrationRequest.setAffiliation(\"org1.department1\");\n        registrationRequest.setEnrollmentID(\"appUser1\");\n        Attribute attr = new Attribute(\"Type\",\"Approver\",true);\n        registrationRequest.addAttribute(attr);\n        String enrollmentSecret = caClient.register(registrationRequest, admin);\n        Enrollment enrollment = caClient.enroll(\"appUser1\", enrollmentSecret);\n        Identity user = Identities.newX509Identity(\"Org1MSP\", adminIdentity.getCertificate(), adminIdentity.getPrivateKey());\n        wallet.put(\"appUser1\", user);\n        System.out.println(\"Successfully enrolled user \\\"appUser1\\\" and imported it into the wallet\");\n\nDecrypted x509 certificate of the generated certificate:\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            70:b2:b9:02:cd:de:14:6b:00:dc:16:b4:e8:95:74:7d:03:52:3e:01\n        Signature Algorithm: ecdsa-with-<sha256>\n        Issuer: C = US, ST = North Carolina, O = <hyperledger>, OU = Fabric, CN = fabric-ca-server\n        Validity\n            Not Before: Jan  5 05:34:00 2023 GMT\n            Not After : Jan  5 06:37:00 2024 GMT\n        Subject: OU = client, CN = admin\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (256 bit)\n                pub:\n                    04:9f:03:45:44:0b:b1:4d:78:c9:58:fe:c1:82:d4:\n                    34:04:80:a9:a5:fe:7f:27:2d:5a:a4:54:c8:c2:bb:\n                    86:61:00:3d:62:33:99:02:0a:65:75:dc:ce:62:44:\n                    96:fd:10:88:2f:44:fa:1d:4a:04:3d:79:33:03:ac:\n                    b1:cd:82:dc:5c\n                ASN1 OID: prime256v1\n                NIST CURVE: P-256\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Key Encipherment, Key Agreement\n            X509v3 Extended Key Usage: \n                TLS Web Server <authentication>, TLS Web Client <authentication>\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Subject Key Identifier: \n                FF:71:92:2E:B8:24:37:A3:13:78:EC:D1:11:D7:54:B6:BD:D6:43:9E\n            X509v3 Authority Key Identifier: \n                keyid:D5:DC:30:53:0C:B2:EF:74:76:6C:44:9F:45:B8:A3:46:EB:F0:05:2A\n\n            X509v3 Subject Alternative Name: \n                DNS:<localhost>\n    Signature Algorithm: ecdsa-with-<sha256>\n         30:44:02:20:11:c6:fa:4a:bf:bb:57:89:63:4a:56:c0:bb:cf:\n         2d:49:19:9e:74:9b:ac:dc:05:d4:ed:ca:9c:9e:cf:48:be:f0:\n         02:20:53:0b:ed:57:88:26:9d:a9:38:c4:70:cd:8d:07:41:cc:\n         85:bf:32:dc:3b:15:41:11:fc:27:02:e4:cf:e8:cf:25\n-----BEGIN CERTIFICATE-----\nMIICITCCAcigAwIBAgIUcLK5As3eFGsA3Ba06JV0fQNSPgEwCgYIKoZIzj0EAwIw\naDELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMRQwEgYDVQQK\nEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRkwFwYDVQQDExBmYWJyaWMt\nY2Etc2VydmVyMB4XDTIzMDEwNTA1MzQwMFoXDTI0MDEwNTA2MzcwMFowITEPMA0G\nA1UECxMGY2xpZW50MQ4wDAYDVQQDEwVhZG1pbjBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABJ8DRUQLsU14yVj+wYLUNASAqaX+fyctWqRUyMK7hmEAPWIzmQIKZXXc\nzmJElv0QiC9E+h1KBD15MwOssc2C3FyjgZYwgZMwDgYDVR0PAQH\/BAQDAgOoMB0G\nA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1Ud\nDgQWBBT\/cZIuuCQ3oxN47NER11S2vdZDnjAfBgNVHSMEGDAWgBTV3DBTDLLvdHZs\nRJ9FuKNG6\/AFKjAUBgNVHREEDTALgglsb2NhbGhvc3QwCgYIKoZIzj0EAwIDRwAw\nRAIgEcb6Sr+7V4ljSlbAu88tSRmedJus3AXU7cqcns9IvvACIFML7VeIJp2pOMRw\nzY0HQcyFvzLcOxVBEfwnAuTP6M8l\n-----END CERTIFICATE-----\n\n\nAccess Based Control on the chain code requires the attributes to be present in the certificate. Does anybody know what I am doing wrong?","155":"I thought the question was simple but I haven't found an answer that was right for my use case... I want to change 3 USD to <matic>. If you do the conversion, that is more or less 3.79 let's say, this is just an example. So the question is simple, how do I transfer this quantity? I've read that I should multiply the number so that there aren't decimals but then the user won't be paying the whole number? For instance, if I multiply the number by 100 so that it's 379, the user won't be paying 379 <matic> which is much more than 3 USD? And if it's like I'm saying, I'm still having an error when trying to do the transfer.\n\nThanks a lot because I'm quite lost here.\nSome edits to reproduce this error. I'm trying to do this test:\nit(\"Get number\", async function () {\n\n    var user1Balance = await user1.getBalance();\n    console.log(\"Farmer balance: \", user1Balance);\n    var user2Balance = await user2.getBalance();\n    console.log(\"Baker balance: \", user2Balance);\n\n    console.log((await loterya.getLatestPrice() \/ 10 ** 10) * 10 ** 18 < await user1.getBalance());\n\n    const price = utils.toWei(\"0.0001\");\n    await loterya.connect(user1).betNumber(\n      user2.address,\n      \/\/ { value: <ether>s.utils.parseUnits( (await loterya.getLatestPrice() \/ 10 ** 10).toString(), \"<ether>\") }\n      { value: price }\n    );\n\n    user1Balance = await user1.getBalance();\n    console.log(\"Farmer balance: \", user1Balance);\n    user2Balance = await user2.getBalance();\n    console.log(\"Baker balance: \", user2Balance);\n\n  });\n\nThose accounts are: [contract, user1, user2] = await <ether>s.getSigners();","156":"I want to create my own <solana> <token> that takes %2 fee to all transactions and total supply should be 100k <token>. That's why i used spl-<token> cli for this spl-<token> create-<token> --transfer-fee 50 1000, however after executing this command i get an error like\n\nError: Program(IncorrectProgramId)\n\nHow can i fix this error or how can i create my own <token> with transaction fee.","157":"I am working on a code which will require me to parse the <bitcoin> data for that i am using blockchain parser package which i found from the github repo below\nhttps:\/\/github.com\/alecalve\/<python>-<bitcoin>-blockchain-parser\nI tried installing pip3 install blockchain_parse and i also tried pip3 install plyvel and i am only getting the following error:\nDefaulting to user installation because normal site-packages is not writeable\nCollecting blockchain_parser\n  Using cached blockchain_parser-0.1.5-<py>3-none-any.whl (29 kB)\nRequirement already satisfied: <python>-<bitcoin>lib==0.11.0 in \/Users\/krina\/Library\/<python>\/3.9\/lib\/<python>\/site-packages (from blockchain_parser) (0.11.0)\nCollecting plyvel==1.2.0\n  Using cached plyvel-1.2.0.tar.gz (145 kB)\n  Preparing metadata (setup.<py>) ... done\nBuilding wheels for collected packages: plyvel\n  Building wheel for plyvel (setup.<py>) ... error\n  error: subprocess-exited-with-error\n  \n  \u00a1\u00c1 <python> setup.<py> bdist_wheel did not run successfully.\n  \u00a9\u00a6 exit code: 1\n  \u00a8t\u00a9\u00a4> [18 lines of output]\n      running bdist_wheel\n      running build\n      running build_<py>\n      creating build\n      creating build\/lib.macosx-10.9-unive<rsa>l2-c<python>-39\n      creating build\/lib.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\n      co<py>ing plyvel\/_version.<py> -> build\/lib.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\n      co<py>ing plyvel\/__init__.<py> -> build\/lib.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\n      running build_ext\n      building 'plyvel._plyvel' extension\n      creating build\/temp.macosx-10.9-unive<rsa>l2-c<python>-39\n      creating build\/temp.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\n      clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -iwithsysroot\/System\/Library\/Frameworks\/System.framework\/PrivateHeaders -iwithsysroot\/Applications\/Xcode.app\/Contents\/Developer\/Library\/Frameworks\/<python>3.framework\/Versions\/3.9\/Headers -arch arm64 -arch x86_64 -Werror=implicit-function-declaration -I\/Applications\/Xcode.app\/Contents\/Developer\/Library\/Frameworks\/<python>3.framework\/Versions\/3.9\/Headers -c plyvel\/_plyvel.cpp -o build\/temp.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\/_plyvel.o -Wall -g -x c++ -std=c++11 -stdlib=libc++\n      plyvel\/_plyvel.cpp:4:10: fatal error: '<python>.h' file not found\n      #include \"<python>.h\"\n               ^~~~~~~~~~\n      1 error generated.\n      error: command '\/usr\/bin\/clang' failed with exit code 1\n      [end of output]\n  \n  note: This error originates from a subprocess, and is likely not a problem with pip.\n  ERROR: Failed building wheel for plyvel\n  Running setup.<py> clean for plyvel\nFailed to build plyvel\nInstalling collected packages: plyvel, blockchain_parser\n  Running setup.<py> install for plyvel ... error\n  error: subprocess-exited-with-error\n  \n  \u00a1\u00c1 Running setup.<py> install for plyvel did not run successfully.\n  \u00a9\u00a6 exit code: 1\n  \u00a8t\u00a9\u00a4> [20 lines of output]\n      running install\n      \/Users\/krina\/Library\/<python>\/3.9\/lib\/<python>\/site-packages\/setuptools\/command\/install.<py>:34: SetuptoolsDeprecationWarning: setup.<py> install is deprecated. Use build and pip and other standards-based tools.\n        warnings.warn(\n      running build\n      running build_<py>\n      creating build\n      creating build\/lib.macosx-10.9-unive<rsa>l2-c<python>-39\n      creating build\/lib.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\n      co<py>ing plyvel\/_version.<py> -> build\/lib.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\n      co<py>ing plyvel\/__init__.<py> -> build\/lib.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\n      running build_ext\n      building 'plyvel._plyvel' extension\n      creating build\/temp.macosx-10.9-unive<rsa>l2-c<python>-39\n      creating build\/temp.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\n      clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -iwithsysroot\/System\/Library\/Frameworks\/System.framework\/PrivateHeaders -iwithsysroot\/Applications\/Xcode.app\/Contents\/Developer\/Library\/Frameworks\/<python>3.framework\/Versions\/3.9\/Headers -arch arm64 -arch x86_64 -Werror=implicit-function-declaration -I\/Applications\/Xcode.app\/Contents\/Developer\/Library\/Frameworks\/<python>3.framework\/Versions\/3.9\/Headers -c plyvel\/_plyvel.cpp -o build\/temp.macosx-10.9-unive<rsa>l2-c<python>-39\/plyvel\/_plyvel.o -Wall -g -x c++ -std=c++11 -stdlib=libc++\n      plyvel\/_plyvel.cpp:4:10: fatal error: '<python>.h' file not found\n      #include \"<python>.h\"\n               ^~~~~~~~~~\n      1 error generated.\n      error: command '\/usr\/bin\/clang' failed with exit code 1\n      [end of output]\n  \n  note: This error originates from a subprocess, and is likely not a problem with pip.\nerror: legacy-install-failure\n\n\u00a1\u00c1 Encountered error while trying to install package.\n\u00a8t\u00a9\u00a4> plyvel\n\nnote: This is an issue with the package mentioned above, not pip.\nhint: See above for output from the failure.\n\nI tried to create a virtual environment as well which is also not working.\nCan someone make me understand what is wrong here and how can i solve it and if there are any other blockchain parsers that i can use. Thank you!","158":"I have the following code below\nconst { deployments, <ether>s, getNamedAccounts } = require(\"<hardhat>\")\n\ndescribe(\"FundMe\", async () => {\n    beforeEach(async () => {\n        const { deployer } = await getNamedAccounts()\n        await deployments.fixture([\"all\"])\n        fundMe = await <ether>s.getContract(\"FundMe\")\n        console.log(fundMe, \"fundMe\")\n    })\n\n    it(\"test\", () => {})\n\n    describe(\"constructor\", async () => {})\n})\n\nI am running the mocks contract and the fundme contract before getting the fundme contract. However, I was wondering why we needed this? If these are my only two contracts it would work without deployments.fixture because it seems that <hardhat> runs all the contracts by default if no fixtures are specified?\nI tried looking at the <hardhat> documentation.","159":"I am trying to detect timestamp in <ether>eum node but there are no methods\/functions.\nHow do we find this?\nI am getting swap logs and parsing them but couldn't find direct way to detect contract creation date.","160":"I am getting stuck decoding data transaction from a swap using uniswap protocol (Uniswap V3: Router 2 0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45). In other words, I'd like to know if it exists a function that given a smart contract address and the data of the transaction, returns the decoded data (the path of all the smart contract addresses that the transaction executes).\nI tried to use the method decode_function_input from Web3, but it worked only for certain protocol.\nWhen I tried for a swap on uniswap or a transaction on opensea I did not get any results.\naddress = 0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45\ndata = 0x5ae401dc0000000000000000000000000000000000000000000000000000000063bd8fab00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000000000000000000000000000000000000000001f4000000000000000000000000dc06b8c890e100ba78888fede3d0c4bc769f41b400000000000000000000000000000000000000000000000000b08416c4bb7d2e0000000000000000000000000000000000000000000000000000000003eb71f4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\ncontract_instance = w3.eth.contract(address=address, abi=abi)\nfunc_obj, func_params = contract_instance.decode_function_input(data)\nprint(func_params)\nI don't get any result although the addresses I want to retrieve are in the data. I want a way to convert the data to addresses.","161":"TLS connections\nCorda uses TLS to encrypt the peer to peer connections between nodes. It can be shown that the maximal throughput that is achievable with the JVM TLS layer can limit the node throughput for flows that need to send sufficient amount of data between peers. This is e.g. the case for the CashIssueAndPayment flow in the performance test CorDapp.\n\nRef: https:\/\/docs.r3.com\/en\/platform\/corda\/4.9\/enterprise\/node\/operating\/optimizing.html#tls-connections\nI hope this is same in case of Communication with Notary as well, if so does this connection establish (like handshaking) only on the first flow execution or it happens along with node <rest>art?\nI am trying to correlate facts for the significant time taken while calling a flow after the node is up and running when compared to succeeding ones.\nAnother related question: Corda Jmeter Performance testing takes more time for first sampler inside Thread group (all are Java Request Samplers)","162":"I connected my flutter web application to metamask using flutter_web3 package, but how do I send transaction to metamask for user to pay. I tried writing code according to the package documentation but didn't work for me.\nconnect to metamask code\nimport 'package:flutter\/cupertino.dart';\nimport 'package:flutter_web3\/flutter_web3.dart';\n\nclass MetaMaskProvider extends ChangeNotifier {\n  static const operatingChain = 4;\n\n  String currentAddress = '';\n\n  int currentChain = 80001;\n\n  bool get isEnabled => <ether>eum != null;\n\n  bool get isInOperatingChain => currentChain == operatingChain;\n\n  bool get isConnected => isEnabled && currentAddress.isNotEmpty;\n  \/\/final <polygon>Wc = WalletConnectProvider.<polygon>();\n\n  Future<void> connect() async {\n    if (isEnabled) {\n      final accs = await <ether>eum!.requestAccount();\n      if (accs.isNotEmpty) currentAddress = accs.first;\n\n      currentChain = await <ether>eum!.getChainId();\n\n      notifyListeners();\n    }\n  }\n\n  clear() {\n    currentAddress = '';\n    currentChain = 80001;\n    notifyListeners();\n  }\n\n  init() {\n    if (isEnabled) {\n      <ether>eum!.onAccountsChanged((accounts) {\n        clear();\n      });\n      <ether>eum!.onChainChanged((accounts) {\n        clear();\n      });\n    }\n  }\n}\n\nconnect function will open metamask, user can select an account and approve to connect, similarly how do I send the transaction to metamask.","163":"The address generated by trc20 in the method and in the hot wallet does not match when using the same mnemonic phrase\nHello! I'm trying to write a method that will generate a TRC20 wallet from a mnemonic phrase and also access an existing wallet on the same network. I found a package a package that should help me - wallet.?\n\nimport 'package:wallet\/wallet.dart'; \nimport 'package:bip39\/bip39.dart' as bip39;\n\nvoid getTrc20Address() async {  \n    final tron = await Tron();\n    \n    String randomMnemonic = bip39.generateMnemonic();  \n     final seed = bip39.mnemonicToSeed(randomMnemonic);\n    \n    final privKey = tron.createPrivateKey(seed);\n    \n    final pubKey = tron.createPublicKey(privKey);\n    \n    final address = tron.createAddress(pubKey);  \n    print(address);  \n}\n\nTRc20 address is created correctly, it turns out to send a transaction to it, but when I try to authorize through the phrase created in the mnemonic method in a hot wallet (for example, trust wallet) - the address issued by the wallet differs from what I get in the method.\nExample:\nthe phrase used to generate the wallet in the method: 'boost limit you peasant april setup print ar<rest> love festival much consider', and in the method with it the address TZ5kGfid2b7FdP3VaqcFf7PKDC64s7htzB is created, while in the trust wallet with the same phrase I connect to the wallet TY2wEqpxfw6ZK9hXWVat5hKgyrPqg2dfy3. ?\nWhere i made a mistake?","164":"so I am building an <nft> marketplace  and everything is good with creating <nft> .. etc but when attempting to buy an <nft> I get this error :\n\n<ether>s.umd.js?e6ac:4395 Uncaught (in promise) TypeError: Cannot read properties of un<defi>ned (reading '_hex')\n\nHere is the code snippet:\nconst buy<nft> = async (<nft>) => {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new <ether>s.providers.Web3Provider(connection);\n    const signer = provider.getSigner();\n    const contract = new <ether>s.Contract(\n      MarketAddress,\n      MarketAddressABI,\n      signer\n    );\n\n    const price = <ether>s.utils.parseUnits(<nft>.price.toString(), \"<ether>\")\n\nconsole.log(price)\n\/\/ code stops here\n    const transaction = await contract.createMarketSale(<nft>.<token>Id, {\n      value: price,\n    });\n\n    await transaction.wait();\n\n  };\n\nwhen debugging seems that the code stops before the transaction constant.\nwhen console .log the price I get this:\n\nI tried to re<move> the toString method, also tried to spread the price object in transaction variable like this value:{...price} but still didn't work","165":"I am trying to modify fabcar to test various data structures possible with it. I used the following command:peer chaincode invoke -o <localhost>:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n ${CC_NAME} --peerAddresses <localhost>:7051 --tlsRootCertFiles $PEER0_ORG1_CA -c '{\"function\": \"createCar\", \"Args\":\"CAR101\",\"[{Make: \\\"Honda\\\" , Model: \\\"City\\\" , Colour: \\\"White\\\"} , {Make: \\\"<swift>\\\" , Model: \\\"Dezire\\\" , Colour: \\\"Black\\\"}] , {Name: \\\"James\\\" , Age: \\\"29\\\" , Gender: \\\"Male\\\"}\"]}'\nBut am encountering the above said error. My smart contract structure is <defi>ned as:\ntype CarDeal struct {\n    CarDet []Car `json:\"cardet\"`\n    OwnerDet  Owner `json:\"ownerdet\"`\n}\n\ntype Car struct {\n    Make   string `json:\"make\"`\n    Model  string `json:\"model\"`\n    Colour string `json:\"colour\"`\n}\n\ntype Owner struct {\n    Name string `json:\"name\"`\n    Age string `json:\"age\"`\n    Gender string `json:\"gender\"`\n}\n\n\nThe chaincode function 'createCar' is as follows:\nfunc (s *SmartContract) CreateCar(ctx contract<api>.TransactionContextInterface, carNumber string, cardet CarDeal) error {\n    \n    car := cardet\n\n    carAsBytes, _ := json.Marshal(car)\n\n    return ctx.GetStub().PutState(carNumber, carAsBytes)\n\n}\n\n\nCan anyone tell me what I am doing wrong here?","166":"In https:\/\/eips.<ether>eum.org\/EIPS\/eip-4337, the authors say \"Users send UserOperation objects into a separate mempool\". i was wondering what it means.. and now, i think that they refer to off-chain memory pool for storing Pending UserOperation(High-level Transaction). so, i think that 'alt mempool' is probably 'alternative memory pool' that is implemented based distributed in-memory key-value store (e.g. Redis) that stores pending UserOperations.\nDid I understand correctly? how do you think about it?\nwhat i did : read and read and think.. about eip-4337.\nwhat i expect : check wh<ether> i understand it correctly or not","167":"When I create a wallet on <ether>eum (f.e. with <ether>.js) -  I know the function that creates the keys is unive<rsa>l so it will create it for all <ether>eum networks (Mainnet, Rinkbey, etc) but is the function unive<rsa>l for all <evm> networks? will it also create it on <polygon> Mainnet?\nI couldn't find data about it so besides an answer I would be grateful if you could share a reference to read more about it.\nThanks!"},"tags":{"0":"<node.js><web><socket><blockchain><cryptocurrency><forward>","1":"<blockchain><cryptocurrency><uniswap>hacker-news-<api>>","2":"<javascript><ethereum><blockchain><web3js><uniswap>","3":"<ethereum><blockchain><smartcontracts><ganache><brownie>","4":"<blockchain><hardhat>yarn-lock>.<json>><hardhat>error>","5":"<blockchain><binance><metamask><trust><wallet>","6":"<javascript><node.js><blockchain><web3js><pancakeswap>","7":"<java><<kotlin>><thread-safety><blockchain><corda>","8":"<ethereum><blockchain><ethers.js>","9":"<node.js><react><js><blockchain><ipfs><babel-loader>","10":"<ethereum><blockchain><solidity><nft><erc1155>","11":"<react><js><ethereum><blockchain><truffle>","12":"<ethereum><blockchain><solidity><hardhat>","13":"<ethereum><blockchain><web3js><crypto><js><metamask>","14":"<blockchain><subgraph>","15":null,"16":"<node.js><typescript><authentication><blockchain><web3>auth","17":"<react-hooks><blockchain><solana><defi>","18":"<javascript><blockchain><solidity>","19":"<blockchain><motoko><dfinity>","20":"<react><js><blockchain><web3js><ethers.js>","21":"<javascript><node.js><blockchain><ethers.js>","22":"<database><mongodb><web-applications><blockchain><bigchain>db","23":"<blockchain><trontron><web>","24":"<ethereum><blockchain><economics>","25":"go<blockchain><hyperledger-fabric>","26":"<javascript><ethereum><blockchain><smartcontracts><ethers.js>","27":"<next.js><ethereum><blockchain><smartcontracts><ethers.js>","28":"<networking><blockchain><consensus>","29":"<next.js><blockchain><web3js><decentralized-applications><moralis>","30":"<ethereum><blockchain><solidity><smartcontracts><web3js>","31":"<command-line-interface><blockchain><solana><nft><metaplex>","32":"java<android><kotlin><blockchain>","33":"<node.js><react><js><mongodb>mongoose<blockchain>","34":"<ethereum><blockchain><solidity><smartcontracts><remix>","35":"<react><js><next.js><ethereum><blockchain><web3js>","36":"<ethereum><blockchain><solidity><smartcontracts>","37":"<ethereum><blockchain><solidity><remix><erc1155>","38":"<blockchain><binance><cryptocurrency><beaconbinance-chain>","39":"<blockchain><truffle><ganache><binance-smart-chain><evm>","40":"<ethereum><blockchain><solidity>","41":"<blockchain><solidity><smartcontracts><nft>","42":"<ethereum><blockchain><solidity><smartcontracts><remix>","43":"<swift><blockchain><bitcoin><trust><wallet>","44":"<ethereum><blockchain><solidity><smartcontracts><remix>","45":"<ethereum><blockchain><solidity><smartcontracts><openzeppelin>","46":"<javascript><blockchain><solidity><ethers.js>ws","47":"<blockchain><go-<ether>eum>","48":"<node.js><ethereum><blockchain><solidity><smartcontracts>","49":"<node.js><angular><js><blockchain><web3js><ethers.js>","50":"<blockchain><move>","51":"<ethereum><blockchain><solidity><nft><remix>","52":"<ethereum><blockchain><solidity><chainlink>","53":"<javascript><blockchain><solidity><web3js>","54":"<blockchain><chainlink><chainlink-keepers>","55":"<node.js><blockchain><hyperledger-fabric><hyperledger>","56":"<ethereum><blockchain><smartcontracts><matic>","57":"<ethereum><blockchain><solidity><smartcontracts><uniswap>","58":"<ethereum><blockchain><go-<ether>eum>","59":"<ethereum><blockchain><polygon><smartcontracts><chainlink>","60":"<ethereum><blockchain><solidity><smartcontracts><chainlink>","61":"<blockchain><project>","62":"<blockchain><solidity><smartcontracts><chainlink><chainlink-keepers>","63":"<blockchain><solidity><smartcontracts><binance-smart-chain><bep20>","64":"<c#><blockchain><terracosmos-sdk>","65":"<blockchain><metamask>","66":"<ethereum><blockchain><smartcontracts><web3><py><ethereum><testerprovider>","67":"<blockchain><smartcontracts><solana><anchor-solana>","68":"<blockchain><web3js><binance>","69":"<ethereum><blockchain><web3><py><ethereum><testerprovider>","70":"<blockchain><web><assembly><decentralized-applications><decentralized-identity>","71":"<npm><blockchain><solidity><smartcontracts><hardhat>","72":"<blockchain><cryptocurrency><uniswap><ether>","73":"<python><blockchain>","74":"<ethereum><blockchain><smartcontracts><ethers.js>","75":"<python>transactions<ethereum><blockchain><web3><py>","76":"<blockchain><cardanoplutus>","77":"<c#.net><rest><blockchain>","78":"<ethereum><blockchain><solidity><cryptocurrency><currency-formatting>","79":"<python-3.x><blockchain><web3><py>","80":"<.net-core><ethereum><blockchain><ether><scann><ethereum>","81":"<ethereum><blockchain>","82":"<ethereum><blockchain><solidity><smartcontracts><opensea>","83":"<ethereum><blockchain><cryptocurrency><uniswap>","84":"<javascript><ethereum><blockchain><cdn><ethers.js>","85":"<python-3.x><blockchain><web3><py>","86":"<ethereum><blockchain><metamask>","87":"<token><ethereum><blockchain><solidity><smartcontracts>","88":"<kubernetes><yaml><ethereum><blockchain><configmap>","89":"<blockchain><aws-sdk-jsaws-sdk-node><js><amazon-managed-blockchain>","90":"<python-3.x><api><blockchain><web3><py>","91":"<blockchain><solidity><hardhat>","92":"<next.js><blockchain><cardanoplutus>","93":"<graphql><token><ethereum><blockchain><smartcontracts>","94":"<blockchain><sha256><bitcoin><cryptocurrency>","95":"<blockchain><hyperledger-fabric><hyperledger>","96":"<javascript><blockchain><smartcontracts><web3js>","97":"<blockchain><cryptocurrency>","98":"<ethereum><blockchain><smartcontracts><ethereum>","99":"<blockchain><polygon><nft><opensea><opensea-api>","100":"<ethereum><blockchain><avalanche>","101":"<blockchain><smartcontracts><hardhat><avalanche>","102":"<ethereum><blockchain><solidity><smartcontracts>","103":"<blockchain><solidity><smartcontracts>npx<hardhat>","104":"<blockchain><solidity><chainlink>","105":"<ethereum><blockchain><blockgenesis>","106":"<javascript><visual-studio-code><token><blockchain><solidity>","107":"<blockchain><solidity><evm>","108":"<blockchain><chainlink>","109":"<ethereum><blockchain><solidity><smartcontracts><chainlink>","110":"<blockchain><sha256><shatronsha-3>","111":"<python><blockchain><ecdsa>","112":"<react><js><react-hooks><blockchain>","113":"<blockchain><solana><solana-transaction-instruction>","114":"<localhost><ethereum><blockchain><solidity><hardhat>","115":"<ethereum><blockchain><evm>","116":"<python><python-3.x><rsa><blockchain>","117":"<python><blockchain><bitcoin>tor","118":"<blockchain><solidity><smartcontracts>","119":"<javascript><node.js><json><npm><blockchain>","120":"rust<blockchain><smartcontracts><solana>cargo","121":"security<blockchain><solidity>","122":"<blockchain><solidity><hardhat><ganache>","123":"testing<blockchain><smartcontracts><corda>","124":"<blockchain><solidity><subgraph>thegraph","125":"<blockchain><solidity><polygon><metamask><matic>","126":"<ethereum><blockchain><smartcontracts><brownie>","127":"<ethereum><blockchain><solidity><hardhat>contract","128":"<blockchain><solidity><smartcontracts><hardhat><openzeppelin>","129":"<blockchain><uniswap><ether>scan<defi>decentralized-identifiers","130":"<javascript>java<blockchain><truffle><ganache>","131":"<rest><blockchain>cosmos","132":"<blockchain><smartcontracts>nearprotocol","133":"<blockchain>elrond","134":"<python>postrequest<blockchain>fast<api>","135":"<python><ethereum><blockchain><ethers.js><web3><py>","136":"homebrew<blockchain>","137":"<javascript>php<ethereum><blockchain><pancakeswap>","138":"<ethereum><blockchain><go-<ether>eum>","139":"<python>gorendering<blockchain>server-side-rendering","140":"error-handling<blockchain><web3><py><brownie>","141":"<ethereum><blockchain>meta-transactions","142":"<ethereum><blockchain><bitcoin><cryptocurrency>mnemonics","143":"<blockchain><solidity>verify<hardhat><ether>scan","144":"<blockchain><solidity>erc20","145":"php<blockchain><cryptocurrency><crypto><api>","146":"sql<blockchain><nft>dune","147":"<javascript><token><blockchain><nft>hedera-hashgraph","148":"<blockchain><smartcontracts><binance>-chain","149":"<ethereum><blockchain><solidity><remix>","150":"<react><js>redux<blockchain><smartcontracts><nft>","151":"<javascript><node.js><blockchain>","152":"<node.js><blockchain><web3js><solana><solana>-<web3js>","153":"<ethereum><blockchain><solidity><smartcontracts><remix>","154":"<blockchain><hyperledger-fabric>x509certificate<hyperledger-fabric>-sdk-java","155":"<blockchain><solidity><polygon>","156":"<crypto>graphy<blockchain><solana>feespl-<token>","157":"<python>parsing<blockchain><bitcoin>","158":"<blockchain><solidity><hardhat><ether>","159":"<ethereum><blockchain>","160":"<python><ethereum><blockchain><web3><py><uniswap>","161":"javaperformancejmeter<blockchain><corda>","162":"flutterdart<blockchain><metamask>","163":"flutterdart<blockchain>tron","164":"<next.js><blockchain><web3js><nft>","165":"<blockchain><hyperledger-fabric><smartcontracts>chaincode","166":"<ethereum><blockchain>","167":"<crypto>graphy<ethereum><blockchain><wallet><evm>"},"edited_time":{"0":null,"1":null,"2":null,"3":"13 hours ago","4":null,"5":null,"6":null,"7":null,"8":"yesterday","9":null,"10":null,"11":null,"12":null,"13":"yesterday","14":"2 days ago","15":null,"16":null,"17":"2 days ago","18":null,"19":null,"20":null,"21":null,"22":null,"23":"Feb 6 at 13:14","24":null,"25":null,"26":"Feb 6 at 1:19","27":"Feb 6 at 1:41","28":"Feb 5 at 14:24","29":"Feb 4 at 19:47","30":null,"31":null,"32":null,"33":null,"34":"Feb 4 at 4:16","35":"Feb 4 at 2:35","36":"Feb 4 at 0:12","37":null,"38":null,"39":null,"40":null,"41":"Feb 2 at 10:30","42":"Feb 2 at 6:22","43":null,"44":"Feb 1 at 16:31","45":"Feb 1 at 15:32","46":null,"47":null,"48":"Feb 1 at 10:18","49":null,"50":null,"51":"Feb 1 at 6:49","52":null,"53":null,"54":"Jan 31 at 21:36","55":null,"56":null,"57":"Jan 30 at 21:49","58":null,"59":"Jan 31 at 21:37","60":"Jan 31 at 3:11","61":"Jan 30 at 17:21","62":null,"63":"Feb 1 at 19:31","64":"Feb 1 at 1:15","65":null,"66":"Jan 29 at 16:26","67":"Jan 29 at 23:55","68":null,"69":"Jan 29 at 15:48","70":null,"71":"Jan 28 at 16:55","72":"Jan 28 at 15:25","73":null,"74":null,"75":"Jan 30 at 16:31","76":"Jan 27 at 7:13","77":null,"78":"Jan 27 at 19:21","79":"Jan 26 at 22:18","80":null,"81":null,"82":null,"83":"Jan 26 at 9:51","84":"Jan 26 at 3:45","85":null,"86":null,"87":null,"88":"Jan 24 at 10:11","89":null,"90":null,"91":null,"92":"Jan 25 at 12:00","93":null,"94":null,"95":"Jan 24 at 13:48","96":null,"97":null,"98":null,"99":null,"100":"Jan 19 at 20:32","101":"Jan 22 at 18:58","102":"Jan 19 at 2:36","103":null,"104":null,"105":null,"106":"Jan 18 at 4:21","107":null,"108":null,"109":"Jan 17 at 21:39","110":"Jan 16 at 16:36","111":null,"112":"Jan 16 at 10:21","113":null,"114":"Jan 15 at 16:53","115":"Jan 15 at 19:45","116":null,"117":"Jan 19 at 4:22","118":"Jan 14 at 17:59","119":null,"120":"Jan 14 at 9:32","121":null,"122":null,"123":"Jan 12 at 19:49","124":"Jan 12 at 16:05","125":"Jan 11 at 21:09","126":"Jan 11 at 16:42","127":"Jan 12 at 4:49","128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":"Jan 10 at 9:18","135":null,"136":null,"137":"Jan 9 at 8:41","138":null,"139":null,"140":"Jan 9 at 17:27","141":null,"142":"Jan 7 at 11:56","143":"Jan 7 at 11:23","144":"Jan 9 at 17:26","145":"Jan 6 at 23:34","146":null,"147":null,"148":"Jan 6 at 12:02","149":null,"150":"Jan 5 at 14:15","151":null,"152":null,"153":null,"154":"Jan 6 at 5:28","155":"Jan 5 at 16:20","156":"Jan 9 at 9:06","157":"Jan 4 at 15:51","158":null,"159":"Jan 4 at 16:05","160":"Jan 12 at 16:30","161":null,"162":null,"163":null,"164":"Jan 3 at 21:25","165":null,"166":null,"167":null},"last_editor":{"0":"OpperDev","1":"LOHA","2":"Trent Kennelly","3":null,"4":"Decentralized Developer","5":"WrRaThY","6":"Vinicius Lopes","7":"Benjamin","8":null,"9":"LIFE HACKER","10":"391","11":"Darshana Mule","12":"John Pioc","13":"Mikko Ohtamaa","14":null,"15":null,"16":"Ketan Jakhar","17":"Alex Lipov","18":"Hoang Anh Phan","19":"Angad Manroy","20":"Ali Hashim","21":"Asir Shahriar Roudra","22":"Janith Wanninayake","23":null,"24":"Bob Dobbs","25":"Apenguindeveloper","26":"Yilmaz","27":"Yilmaz","28":null,"29":"TylerH","30":"Huowuge","31":"Fares_Hassen","32":"Hanif Shaikh","33":"Bukenya KizzaRoland","34":"Yilmaz","35":"Camilo","36":null,"37":"391","38":"kitton ebnalov","39":"Eric Lee","40":"Namit Patel","41":null,"42":"Yilmaz","43":"userid81214293","44":"CootMoon","45":null,"46":"0xDegen","47":"Abdulhamid","48":null,"49":"sri vijay","50":"MoBerlin","51":null,"52":"Kai_11","53":"XaEk","54":"TylerH","55":"Bishwaroop Dey","56":"Ankit Pareek","57":"Yilmaz","58":"Arun","59":"TylerH","60":"Yilmaz","61":null,"62":"sam","63":"halfer","64":null,"65":"Karan Singh","66":null,"67":"Yilmaz","68":"ro_ma","69":null,"70":"Parshant Singh","71":"vimuth","72":null,"73":"codemonkeytony","74":"hamssa  hassnawee","75":"TylerH","76":null,"77":"Robin Khan","78":null,"79":null,"80":"Angelo Schuler Piletti","81":"rexydye","82":"J\u00a8\u00a6r\u00a8\u00a6my Combe","83":"vimuth","84":"Yilmaz","85":"Ashrita Gupta","86":"kush","87":"Hash1","88":"Harsh Manvar","89":"vijay kumar","90":"Based Potato","91":"alwin","92":"snak","93":"std124_lf","94":"Raunak Nahar","95":null,"96":"jbetoras","97":"Muhammad Ali","98":"user08152017","99":"ibrahim Ramzan","100":"Mikko Ohtamaa","101":null,"102":"Yilmaz","103":"Ashish Singh","104":"learner","105":"Saumya Prasad","106":"TorNato","107":"user3102158","108":"chicco.caste21","109":null,"110":null,"111":"king1982","112":"skyboyer","113":"Marco C. Stewart","114":"Rub\u00a8\u00a6n","115":"Mikko Ohtamaa","116":"nistelrooy41001662","117":"Rub\u00a8\u00a6n","118":null,"119":"Alexandra","120":"cafce25","121":"Ali Jouahri","122":"Sam","123":"user","124":"vimuth","125":null,"126":null,"127":null,"128":"Mueed","129":"PRINCESS PRANITI","130":"Avinash Kumar Singh","131":"Bailan","132":"Stephen Kresov","133":"Emile Haas","134":"Azhar Khan","135":"owodunni david","136":"Devansh Gupta","137":"user","138":"ekimpl","139":"nightlyprogrammer","140":"TylerH","141":"iLiA","142":null,"143":null,"144":"TylerH","145":"halfer","146":"KubiK888","147":"Vishal kumar","148":null,"149":"Anim3Add1ct","150":null,"151":"Ches","152":"insaneray","153":"Seyar","154":null,"155":null,"156":"Jan","157":null,"158":"Ariel Kotch","159":"TylerH","160":"marc_s","161":"Benjamin","162":"Ganesh Sivakumar","163":"Neon RolePlay","164":"TylerH","165":"Divyansh Gupta","166":"???","167":"NivN"},"Comments for Question":{"0":"Add a comment\n                ?|","1":"Add a comment\n                ?|","2":"Add a comment\n                ?|","3":"Add a comment\n                ?|","4":"Add a comment\n                ?|","5":"Add a comment\n                ?|","6":"Add a comment\n                ?|","7":"Add a comment\n                ?|","8":"Add a comment\n                ?|","9":"Add a comment\n                ?|","10":"Your code looks weird.  It sounds like that error is not coming from the code you showed us but instead a base contract.  Your balances could be out of sync.  This is not the issue but you should make it a habit of updating balances before transfer to mitigate reentrancy attacks\n                \n                \n\u00a8C?johnny 5\n                \n                yesterday\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","11":"Add a comment\n                ?|","12":"Add a comment\n                ?|","13":"Add a comment\n                ?|","14":"Add a comment\n                ?|","15":null,"16":"Add a comment\n                ?|","17":"Add a comment\n                ?|","18":"check this  <solidity>-by-example.org\/abi-encode\n                \n                \n\u00a8C?ihor.eth\n                \n                2 days ago\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","19":"PS: The error got resolved. I deleted the canister and redeployed the <project> using  dfx delete canister --all command and upon <rest>arting it, the ui started working.\n                \n                \n\u00a8C?Angad Manroy\n                \n                2 days ago\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","20":"Please clarify your specific problem or provide additional details to highlight exactly what you need. As it's currently written, it's hard to tell exactly what you're asking.\n                \n                \n\u00a8C?Thomas\n                \n                2 days ago\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I want to switch the networks by <ether>js .As we can see on openSea if we change the network from application than our contract must be have to deployed on that network if yes than metamask have to show us popup to switch the network after transaction...\n                \n                \n\u00a8C?Ali Hashim\n                \n                2 days ago\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                i want the popup from metamask to switch the network from eth to <matic>.Can you get what i am saying\n                \n                \n\u00a8C?Ali Hashim\n                \n                2 days ago\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","21":"Add a comment\n                ?|","22":"Not that I know a lot about it, but I'm skeptical about the utility of blockchain.  You could have a look at TradeLens developed by IBM and Maersk.  Although, it looks like Maersk's expectations weren't met as they will discontinue it's use in Q1 2023.\n                \n                \n\u00a8C?rickhg12hs\n                \n                Feb 6 at 18:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Also, \"Managing a blockchain-based platform ecosystem for industry-wide adoption: The case of TradeLens\".\n                \n                \n\u00a8C?rickhg12hs\n                \n                Feb 6 at 18:54\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","23":"Add a comment\n                ?|","24":"Add a comment\n                ?|","25":"Add a comment\n                ?|","26":"Add a comment\n                ?|","27":"Add a comment\n                ?|","28":"Add a comment\n                ?|","29":"Add a comment\n                ?|","30":"Where is that _mint function from? it is from another contract, isn't it?\n                \n                \n\u00a8C?Yilmaz\n                \n                Feb 5 at 2:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes, it inherited from <openzeppelin>, as well as balanceOf function.\n                \n                \n\u00a8C?Huowuge\n                \n                Feb 5 at 3:24\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","31":"Add a comment\n                ?|","32":"Add a comment\n                ?|","33":"1\n            \n        \n        \n            \n                \n                Do you save the password in clear text in <mongodb>? If yes, see stackoverflow.com\/questions\/71651541\/\u00a1\u00ad   compare() of bcrypt expects to compare the password in clear text with a hash, not two identical strings.\n                \n                \n\u00a8C?QuickSort\n                \n                Feb 4 at 5:30\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                could you adjust the code above and show where to clean .thanks\n                \n                \n\u00a8C?Bukenya KizzaRoland\n                \n                Feb 4 at 5:47\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","34":"it is not clear what you want to achieve.\n                \n                \n\u00a8C?Yilmaz\n                \n                Feb 4 at 3:28\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                sorry for being unclear. I would like to create a function with name SendDeposit in the Sender smart contract to call the function Deposit in the Bank smart contract.  The SendDeposit function should send value of _amount ETH and call the Deposit function in the Bank smart contract.   The issue with current SendDeposit function is that 0 val gets sent although transaction is successful\n                \n                \n\u00a8C?Danny D\n                \n                Feb 4 at 3:52\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","35":"Add a comment\n                ?|","36":"Add a comment\n                ?|","37":"Add a comment\n                ?|","38":"as far as I can see not any of major packages indicate supporting bnb beacon. also I've searched before posting this and no any helpful result.\n                \n                \n\u00a8C?kitton ebnalov\n                \n                Feb 2 at 19:31\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","39":"Add a comment\n                ?|","40":"take a look here\n                \n                \n\u00a8C?Ahmed Sbai\n                \n                Feb 2 at 17:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Best practice is to just write something youre inte<rest>ed in\n                \n                \n\u00a8C?johnny 5\n                \n                Feb 2 at 20:36\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","41":"Do you mean it fails at await <token>Contract.safeMint?\n                \n                \n\u00a8C?Pavel Fedotov\n                \n                Feb 2 at 10:15\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @PavelFedotov it fails the code below. It cannot read the passed <token> ID in the argument which is 1 when I have minted (code above) a <token> with the ID of 1.\n                \n                \n\u00a8C?XypriL\n                \n                Feb 2 at 10:20\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Sorry but your second contract makes no sense. <ether>eum.org\/en\/developers\/tutorials\/\u00a1\u00ad\n                \n                \n\u00a8C?Pavel Fedotov\n                \n                Feb 2 at 11:23\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","42":"Add a comment\n                ?|","43":"Add a comment\n                ?|","44":"Which error does it log in the console? (Similar to Error loading <remix>: ...? and potentially more). But you probably have more luck rasing an issue directly in their github repo\n                \n                \n\u00a8C?A_A\n                \n                Feb 1 at 16:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Today I get up and retry to enter <remix>. It's accessible now. But I didn't save the log...\n                \n                \n\u00a8C?Splendor White\n                \n                Feb 2 at 4:07\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","45":"Add a comment\n                ?|","46":"Add a comment\n                ?|","47":"Add a comment\n                ?|","48":"Add a comment\n                ?|","49":"Please clarify your specific problem or provide additional details to highlight exactly what you need. As it's currently written, it's hard to tell exactly what you're asking.\n                \n                \n\u00a8C?Community\nBot                \n                Feb 1 at 7:32\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","50":"I found the answer: here there is a package for that (which does not seem to be well-secured): github.com\/Origin-Byte\/originmate\n                \n                \n\u00a8C?MoBerlin\n                \n                Feb 2 at 11:17\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","51":"Add a comment\n                ?|","52":"Hi, can you describe steps you deployed mock contract? Which framework you are using? I don't think the error is that the size of mock contract is too large. Most likely the config of block size is set too small in your contract.\n                \n                \n\u00a8C?Frank Kong\n                \n                Feb 2 at 10:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @FrankKong I am using the brownie framework and trying to deploy on the default development network using the depoy method.\n                \n                \n\u00a8C?Kai_11\n                \n                Feb 3 at 15:28\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","53":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00a8C?Community\nBot                \n                Feb 1 at 0:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Code doesn\u00a1\u00aft make any difference - I am purely wondering from a theoretical stand point what makes a reverted and successful transaction look different to a block explorer \/ on chain\n                \n                \n\u00a8C?XaEk\n                \n                Feb 1 at 10:32\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","54":"Add a comment\n                ?|","55":"Add a comment\n                ?|","56":"Add a comment\n                ?|","57":"Add a comment\n                ?|","58":"Because this question is not about programming, it would be better to be asked at Erigon discussion forums.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 30 at 19:36\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","59":"This is a speculative question, not one that can be answered by us or probably even the vendor.\n                \n                \n\u00a8C?TylerH\n                \n                Jan 31 at 21:38\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","60":"Add a comment\n                ?|","61":"Add a comment\n                ?|","62":"Add a comment\n                ?|","63":"The original title was not descriptive, so I have edited it. Feel free to edit again, and please leave out \"halp me\" etc in the future - it's not useful.\n                \n                \n\u00a8C?halfer\n                \n                Feb 1 at 19:32\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","64":"Add a comment\n                ?|","65":"Add a comment\n                ?|","66":"Please edit your question and include full tracebacks, so people do not need to guess what errors you are having.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 29 at 10:03\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","67":"Add a comment\n                ?|","68":"Add a comment\n                ?|","69":"Add a comment\n                ?|","70":"Add a comment\n                ?|","71":"Please share the error as text, not as an image, as explained here: meta.stackoverflow.com\/questions\/285551\/\u00a1\u00ad. Also, it is saying that it is missing an instalation of Visual studio including desktop development with C++ workload. Have you tried installing that first? why doens't that work\n                \n                \n\u00a8C?Mister_CK\n                \n                Jan 28 at 11:38\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","72":"I found out that the problem was that the <token>A's and <token>B's addresses were wrong for the goerli testnet\n                \n                \n\u00a8C?Shadq\n                \n                Jan 28 at 17:07\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","73":"Add a comment\n                ?|","74":"Please provide your code for deploy.js so the community can help you\n                \n                \n\u00a8C?Mahdad Baghani\n                \n                Jan 28 at 5:24\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","75":"Add a comment\n                ?|","76":"I\u00a1\u00afm voting to close this question because it belongs to cardano.stackexchange.com and it unrelated to Haskell\n                \n                \n\u00a8C?lsmor\n                \n                Jan 27 at 7:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                anyway, if you know the solution, provide it for comunity. don't just criticize. Are you finding hap<py> from criticize?\n                \n                \n\u00a8C?Lovely\n                \n                Jan 27 at 7:12\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I am not criticizing. actually I've kindly pointed you to the right place to ask. This cuestion is unrelated to software development. It is about a tool\/ecosystem which has its own stackexchange place.\n                \n                \n\u00a8C?lsmor\n                \n                Jan 27 at 7:29\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","77":"Add a comment\n                ?|","78":"Generally, there is no reason to calculate human-readable decimals in <solidity> code. It is strictly a frontend matter.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 27 at 8:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                why is it multiplied by 10 ** decimalsA and then divided by it again?\n                \n                \n\u00a8C?Satoshi Naoki\n                \n                Jan 27 at 9:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MikkoOhtamaa  Thanks this was only used to illustrate the problem, it's not used in the code.\n                \n                \n\u00a8C?detoso\n                \n                Jan 27 at 19:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @SatoshiNaoki you are right, it's not needed, I re<move>d that part\n                \n                \n\u00a8C?detoso\n                \n                Jan 27 at 19:22\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","79":"Add a comment\n                ?|","80":"Add a comment\n                ?|","81":"Add a comment\n                ?|","82":"Welcome on SE, the <ether>eum SE site might be more appropriate to ask this on! But as far as I know, each ERC721 or <erc1155>-compliant smart contract should be tradeable on OpenSea (and Blur, etc. for that matter)\n                \n                \n\u00a8C?Martijn Vissers\n                \n                Jan 26 at 13:12\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","83":"Add a comment\n                ?|","84":"Add a comment\n                ?|","85":"Add a comment\n                ?|","86":"This question lacks details how you have deployed private <ether>eum network (config files, command lines) so it is unanswerable. My guess is that you used Go<ether>eum and forget to bind the correct IP address for JSON-RPC.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 25 at 8:45\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Mikko Ohtamaa thanks , yes i am using go <ether>eum , geth i working on local system its working fine on <localhost> , but its not working 192.168.1.51 that is my local ip it show error \"Could not fetch chain ID. Is your RPC URL correct?\"\n                \n                \n\u00a8C?kush\n                \n                Jan 25 at 10:23\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","87":"I don't understand the problem, What function are you calling?\n                \n                \n\u00a8C?0xSanson\n                \n                Jan 26 at 16:48\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","88":"Its a genesis block configuration needed to run <ether>eum network\n                \n                \n\u00a8C?yeshwanth b\n                \n                Jan 24 at 10:12\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","89":"params has (at least) no Description and no FrameworkConfiguration. There is a superfluous closing bracket.\n                \n                \n\u00a8C?M. Spiller\n                \n                Jan 24 at 9:00\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","90":"I\u00a1\u00afm voting to close this question because it is a support question for a commercial product BlockNative, not a question to StackOverflow programmer community.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 25 at 9:58\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","91":"Add a comment\n                ?|","92":"1\n            \n        \n        \n            \n                \n                What does this have to do with Haskell?\n                \n                \n\u00a8C?chepner\n                \n                Jan 23 at 15:02\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","93":"Bitquery is a commercial data provider with pricing and commercial support. This is StackOverflow, not Bitquery support team. StackOverflow is not an outsourced product support for commercial products. I suggest you ask your question on Bitquery support.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 23 at 17:32\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","94":"All hash algorithms like SHA have a <defi>ned way of handling larger input, one block at a time.  They\u00a1\u00afd be useless for most practical purposes, otherwise.\n                \n                \n\u00a8C?jasonharper\n                \n                Jan 23 at 6:34\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","95":"Which version of Fabric are you using? The latest supported version of Go at the moment is v1.18.7. See github.com\/<hyperledger>\/fabric\/releases\/tag\/v2.5.0-alpha3\n                \n                \n\u00a8C?Andrew Coleman\n                \n                Jan 24 at 9:27\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @AndrewColeman i am using go1.19.5. am i need to lower my go version?\n                \n                \n\u00a8C?sola\n                \n                Jan 24 at 13:47\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","96":"Does this help in any way?\n                \n                \n\u00a8C?FiddlingAway\n                \n                Jan 22 at 11:52\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                This is exactly what i am doing and it's not working\n                \n                \n\u00a8C?jbetoras\n                \n                Jan 22 at 12:41\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                What do you get if you log the contract.methods to the console?\n                \n                \n\u00a8C?FiddlingAway\n                \n                Jan 22 at 12:55\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","97":"Add a comment\n                ?|","98":"Add a comment\n                ?|","99":"Add a comment\n                ?|","100":"Add a comment\n                ?|","101":"Add a comment\n                ?|","102":"See this thread: stackoverflow.com\/questions\/71941928\/\u00a1\u00ad\n                \n                \n\u00a8C?Antonio Carito\n                \n                Jan 21 at 12:11\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","103":"The error message looks a bit strange. That should be <hardhat>\/console.sol. I.e. sol not .so. Where does you <nft>Marketplace.sol come from?\n                \n                \n\u00a8C?M. Spiller\n                \n                Jan 18 at 14:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Welcome to Stack Overflow! Please reserve the use of images for diagrams or demonstrating rendering bugs, things that are impossible to describe accurately via text. Please read How to Ask and edit your question to add formatted code. For more information, please see the Meta FAQ entry Why not upload images of code\/errors when asking a question?, along with this website\n                \n                \n\u00a8C?Fastnlight\n                \n                Jan 19 at 17:13\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","104":"Add a comment\n                ?|","105":"It means, that init takes only one argument, which is the path to the json file.\n                \n                \n\u00a8C?M. Spiller\n                \n                Jan 18 at 9:47\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","106":"Add a comment\n                ?|","107":"Add a comment\n                ?|","108":"Add a comment\n                ?|","109":"Think from the user's perspective. - How can I be sure your server will return indeed the random number, not the pre<defi>ned one? - How can I be sure, your server will be running, listening for events, and then emitting the random numbers?\n                \n                \n\u00a8C?tenbits\n                \n                Jan 18 at 18:07\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @tenbits fully understandable concern, with dapps there is a level of trust to be created between your dapp and your user. In video games we trust the devs to use rng fairly. Additionally we can ask the same question for <chainlink> VRF and what makes it so that cheaper solutions cannot be considered?\n                \n                \n\u00a8C?itsnot<crypto>its<crypto>e\n                \n                Jan 18 at 19:42\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Absolutely, if your users trust your Random Number Provider and it is uptime, for sure you can use a more efficient solution. In your sample is not clear how the contract, which calls the makeRandomRequest will receive that number and proceed with the execution?\n                \n                \n\u00a8C?tenbits\n                \n                Jan 18 at 20:10\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","110":"You should hash the bytes and not the hexadecimal string representation of the bytes\n                \n                \n\u00a8C?M. Spiller\n                \n                Jan 16 at 15:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @M.Spiller Ok. The 1st 2 commands have produced the correct results. But the 3rd one not. Base58.encode(\"415a523b449890854c8fc460ab602df9f31fe4293f9b07d561\") ===> eJJL2m8pSeN7rACLEzRb5JMoJsZSXfFLZgGmC6LbKpdrALZMqKW6MDShkwh5xotJX4vc\n                \n                \n\u00a8C?Kon\n                \n                Jan 16 at 16:31\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I'm using a HEX representation of the bytes for Base58.encode(...) because this is what has to be used there. Right?\n                \n                \n\u00a8C?Kon\n                \n                Jan 16 at 16:33\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Same as above... No, you should work on the bytes, not on any string representation. The doc on github also links to a Java implementation. That should make it clear.\n                \n                \n\u00a8C?M. Spiller\n                \n                Jan 16 at 16:36\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @M.Spiller - finally! Victory!\n                \n                \n\u00a8C?Kon\n                \n                Jan 16 at 16:39\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","111":"There is a typo regarding public_key_str, it must be public_key_str = public_key_byte.hex() and not public_key_str = secret_key_byte.hex().\n                \n                \n\u00a8C?Topaco\n                \n                Jan 16 at 8:36\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","112":"2\n            \n        \n        \n            \n                \n                rather than image, could you please post code to check and understand code easily\n                \n                \n\u00a8C?Naga Sai A\n                \n                Jan 16 at 4:53\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                as an additional <move>, also check their github for any known issues\/questions - even closed - just in case.\n                \n                \n\u00a8C?skyboyer\n                \n                Jan 16 at 10:22\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","113":"Add a comment\n                ?|","114":"Please see \"Why should I not upload images of code\/data\/errors?\" meta.stackoverflow.com\/questions\/285551\/\u00a1\u00ad\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 16 at 8:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Actually, the process is also terminated when you close the terminal.  Isn't it? What terminal do you use? and how do you launch the <hardhat> node then?\n                \n                \n\u00a8C?tenbits\n                \n                Jan 16 at 9:08\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @tenbits i start the node from the vscode terminal, from what I know when you close a terminal the process keeps running in the background\n                \n                \n\u00a8C?Hassam Ullah\n                \n                Jan 18 at 5:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @MikkoOhtamaa I appreciate your concern. I'd be thoughtful about this in the future.\n                \n                \n\u00a8C?Hassam Ullah\n                \n                Jan 18 at 5:31\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","115":"Add a comment\n                ?|","116":"Add a comment\n                ?|","117":"Add a comment\n                ?|","118":"Add a comment\n                ?|","119":"Add a comment\n                ?|","120":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00a8C?Community\nBot                \n                Jan 14 at 16:35\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","121":"Add a comment\n                ?|","122":"Add a comment\n                ?|","123":"It seems to be a problem with the reference\/version of mockito and corda. Did you try using a different version? An older or a newer one?\n                \n                \n\u00a8C?Thiago Viana\n                \n                Jan 16 at 8:32\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Hi, thanks for your suggestion, I am currently using corda 4.9 and I have tried 4.8 and 4.7 but not work. Because of the word limit, I post my code's setting information at a question at corda forum here: developer.r3.com\/forums\/topic\/having-trouble-to-run-flow-test\/\u00a1\u00ad\n                \n                \n\u00a8C?\u00bd\u00ad\u00d0\u00a1\u00b0\u00d7\n                \n                Jan 16 at 16:36\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","124":"I suggest asking it at the Graph Discord channel: discord.gg\/vtvv7FP.\n                \n                \n\u00a8C?Rafa? Leszko\n                \n                Jan 12 at 8:36\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","125":"Add a comment\n                ?|","126":"Add a comment\n                ?|","127":"Add a comment\n                ?|","128":"Add a comment\n                ?|","129":"Add a comment\n                ?|","130":"Request to respond as soon as possible.\n                \n                \n\u00a8C?Avinash Kumar Singh\n                \n                Jan 10 at 17:54\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","131":"Add a comment\n                ?|","132":"Add a comment\n                ?|","133":"Add a comment\n                ?|","134":"Does this answer your question? <python>: Fast<api> error 422 with POST request when sending JSON data\n                \n                \n\u00a8C?Chris\n                \n                Jan 10 at 9:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Using a dict as a response model is really generic, I would advise to use a <py>dantic model for this. The error happens because you are sending a json as a string and it expects a dict.\n                \n                \n\u00a8C?Cloudkollektiv\n                \n                Jan 10 at 10:43\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","135":"Add a comment\n                ?|","136":"Add a comment\n                ?|","137":"Add a comment\n                ?|","138":"Add a comment\n                ?|","139":"Add a comment\n                ?|","140":"Add a comment\n                ?|","141":"Add a comment\n                ?|","142":"Add a comment\n                ?|","143":"Add a comment\n                ?|","144":"It's not clear what the programming issue is here. Voting to close as off-topic.\n                \n                \n\u00a8C?Tangentially Perpendicular\n                \n                Jan 7 at 1:11\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","145":"You might want to see this.\n                \n                \n\u00a8C?afarrag\n                \n                Jan 6 at 23:21\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Please note that Stack Overflow is not a chatroom. Use your shift key to produce c<api>tal letters, and use a spell checker. If you are using a mobile device and cannot produce readable English as a result, please wait until you can access a desktop machine before posting.\n                \n                \n\u00a8C?halfer\n                \n                Jan 6 at 23:35\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","146":"Add a comment\n                ?|","147":"Please don't post images (or links to images) of code or errors. Anything text-based (code and errors) should be posted directly into the question and formatted properly. By posting images we are not able to co<py> your code to reproduce it. Also, it is not searchable so others can find your question easily. For more, see Why should I not upload images of code\/data\/errors?\n                \n                \n\u00a8C?Tomerikoo\n                \n                2 days ago\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","148":"Add a comment\n                ?|","149":"Add a comment\n                ?|","150":"Add a comment\n                ?|","151":"Add a comment\n                ?|","152":"Please add some more information with the exact error you're seeing and the code that you're running.\n                \n                \n\u00a8C?Jon C\n                \n                Jan 10 at 20:15\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","153":"Please, can you edit better your smart contract code?\n                \n                \n\u00a8C?Antonio Carito\n                \n                Jan 7 at 12:21\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","154":"Add a comment\n                ?|","155":"Add a comment\n                ?|","156":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00a8C?Community\nBot                \n                Jan 5 at 17:34\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","157":"Add a comment\n                ?|","158":"Add a comment\n                ?|","159":"Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00a8C?Community\nBot                \n                Jan 5 at 17:48\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","160":"1\n            \n        \n        \n            \n                \n                Please provide enough code so others can better understand or reproduce the problem.\n                \n                \n\u00a8C?Community\nBot                \n                Jan 3 at 20:13\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","161":"Add a comment\n                ?|","162":"Add a comment\n                ?|","163":"Add a comment\n                ?|","164":"use toString() method for the logged bigNumber. it will extract the value\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 2 at 18:38\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","165":"Add a comment\n                ?|","166":"This question is not about programming, so it is better suited for <ether>eum.stackexchange.com.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 2 at 8:47\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","167":"Add a comment\n                ?|"},"Answer1":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":"It's not. You cannot sign multiple messages with MetaMask.","14":null,"15":null,"16":null,"17":"your imports are probably failed try to import like this instead :\nconst <ether>s = require(\"<ether>s\");\nconst BigNumber  = require(\"<ether>s\");","18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":"I don't really see enough information in your question to see where your problem is occurring and therefore how to solve it. You should not be importing any packages from github.com\/<hyperledger>\/fabric\/.... This is the core Fabric server implementation and it is not intended to be consumed as a library. Neither the client SDK or chaincode <api>s should be importing these packages either, so I am not sure what in your code is referencing them.\nIf you are just learning Fabric, I would strongly recommend that you use Fabric v2.4 (or later) and use the Fabric Gateway client <api> to build your client application instead of the legacy Go SDK. Samples linked from that documentation homepage demonstrate how to use the <api> to build client applications.\nThe Fabric documentation on client applications describes the key elements of the client application <api>. The in-line code examples reference the <typescript> sample but there is an identical sample implementation  in Go, and the <api> structure is extremely similar in all the supported client languages, so the tutorial should be useful regardless of your application language.","26":"<ether>s doesn't have information about the block explorers, they're external services. But you can use this library from metamask: https:\/\/github.com\/MetaMask\/<ether>scan-link it will generate a block explorer url from a given chainId.\nThe other option is to hardcode a map of chainIds to block explorer URLs, which may sound like a bad idea but at least you're in control of where you're pointing your users towards, instead of passing on that responsibility to another library","27":"I think you are using version 6 in next13. if you install\n\"<ether>s\": \"^5.6.4\",\n\nin next-13, it will work.\nI think you previously had next-12 <project> with version 5, and now installing new version on next-13\nin <ether>s v6 all of those\nexport {\n    getDefaultProvider,\n    Block, FeeData, Log, TransactionReceipt, TransactionResponse,\n    AbstractSigner, NonceManager, VoidSigner,\n    AbstractProvider,\n    FallbackProvider,\n    JsonRpc<api>Provider, JsonRpcProvider, JsonRpcSigner,\n\n    BrowserProvider,\n    AlchemyProvider, AnkrProvider, CloudflareProvider, <ether>scanProvider,\n    InfuraProvider, PocketProvider, QuickNodeProvider,\n    IpcSocketProvider, SocketProvider, WebSocketProvider,\n    EnsResolver,\n    Network\n} from \".\/providers\/index.js\";\n\nare imported like this\nimport { BrowserProvider } from \"<ether>s\";\n\nconst providerr = new BrowserProvider(window.<ether>eum);\n\nthis is how I set a component to connect\nconst Test = () => {\n  const [provider, setProvider] = useState();\n  useEffect(() => {\n    const browserProvider = new BrowserProvider(window.<ether>eum);\n    setProvider(browserProvider);\n  }, []);\n  const connect = async () => {\n    await provider.send(\"eth_requestAccounts\");\n  };\n  return (\n    <div>\n      <button onClick={connect}>connect<\/button>\n    <\/div>\n  );\n};\n\nexport default Test;","28":null,"29":null,"30":"It's often good practice to include validation logic in the contract. And for better user experience, you can duplicate the validation on the frontend.\nMind that technically skilled users can execute the contract function using other ways (from a custom script, through another contract, ...) - not just from their MetaMask wallet through your frontend app.","31":null,"32":"The content regarding blockchain integration in <android> is very rare but I can share my experience of integrating the <ether>eum blockchain into <android>. We can use the same <solidity> code in our web and app but the compilation methods are different. For a detailed overview, you can see this article on medium written by me.\nFor <ether>eum blockchain integration, we require two libraries solc-js and web3j.\nIn simple words solc-js is used to convert the <solidity> files int ABI and BIN files and then web3j is used to generate java wrapper class from ABI and BIN files.\nIn <android>, we can use web3j library for generating java wrapper class, so we could call our smart contract methods in our <android> application.\n\nWeb3j is a highly modular, <react>ive, type safe Java and <android> library for working with Smart Contracts and integrating with clients (nodes) on the <ether>eum network:\n\n\nResources:\nA sample <android> app using <ether>eum blockchain:\n\nhttps:\/\/github.com\/ShoaibKakal\/Quiz-Dapp\n\nFro more information, you can also read:\n\n<ether>eum Blockchain in <android> Studio Using Web3j\nDeploy Smart Contract on <ether>eum Blockchain using Web3j in <android> Studio","33":"If you store the password in cleartext you don't need bcrypt.compare:\nconst match = password === adminData.password;\nif (match) {\n  req.adminID = adminData._id;\n  next();\n}\n\nAnyway, it is strongly suggested to encrypt it, you can do it with:\nconst salt = await bcrypt.genSalt(12);\nconst encryptedPassword = await bcrypt.hash(password, salt);\n\nconst user = await Admin.create({ email, password: encryptedPassword });","34":"\/\/SPDX-License-Identifier: MIT\npragma <solidity> ^0.8.7;\n\ncontract Bank {\n    uint256 public amountIn;\n    function deposit() external payable returns(uint256) {\n        amountIn = msg.value ;\n        return amountIn;\n    }\n    \/\/ receive() external payable{}\n    function getBalance() public view returns(uint){\n        return address(this).balance;\n    }\n}\n\n\ninterface Receiver {\n    function deposit() external payable returns(uint256);\n}\n\ncontract Sender {\n    Receiver private receiver ;\n    constructor(address _receiver){\n        receiver=Receiver(_receiver);\n    }\n\n    function sendDeposit(uint256 _amount) public payable {\n        receiver.deposit{value: _amount}();\n    }\n\n    receive() external payable {\n         require(msg.value > 0, \"You cannot send 0 <ether>\");\n    }\n\n }\n\n1- Deploy the Bank contract first and co<py> the address\n2- Deploy the Sender contract, passing the copied Bank contract\n3- call sendDeposit from Sender contract, you need to pass same amout to function input and value input which is under the \"Gas limit\" input\n4- transaction will be succcessful. call the getBalance from Bank contract","35":"You are trying to write a hook but you are actually just writing a plain function. <react> hook means you are going to add logic into \"<react> state and lifecycle features from function components.\". That means in case of rerendering you have to present the updated state to the component. this should be your hook:\nimport { useEffect, useState } from \"<react>\";\nexport const useBlock = async (web3) => {\n  const [blocks, setBlocks] = useState([]);\n  const web3 = new Web3(window.<ether>eum);\n\n  useEffect(() => {\n    \/\/ if you are accessing \"window\" in Next.js make sure do this in useEffect where \"window\" is already <defi>ned before component mounts\n    \/\/ web3 methods returns promise, I need an async function <defi>ned inside\n    \/\/ this arg web3\" name can be any name \n    const getBlocks = async (web3) => {\n      let blocks: BlockTransactionString[] = [];\n      for (let i = 0; i < 10; i++) {\n        const blockNumber = await web3.eth.getBlockNumber();\n        const block = await web3.eth.getBlock(blockNumber);\n        blocks.push(block);\n      }\n      return blocks;\n    };\n    const blocks = getBlocks(web3).catch((error) => console.error(error));\n    setBlocks(blocks);\n  }, [web3]);\n\n  return { blocks };\n};\n\nInside Blocks.tsx\n  \/\/ if Web3 changes, this will create a new instance\n  const web3 = useMemo(() => new Web3(window.<ether>eum), [Web3]);\n\n  \/\/ inside useBlocks web3 is also dependency for the useEffect\n  \/\/ so if web3 changes, it will rerender\n  const {blocks}=useBlocks(web3)\n  console.log(blocks)","36":"Assuming that the contract is deployed on a public network (e.g. <ether>eum), then the value is always readable.\nNot directly through the autogenerated getter function (that's available only for public properties), which means it's not available onchain.\nBut anyone (including miners) can create an offchain app (for example in JavaScript) that queries the specific storage slot where the value is stored - in this case it's in slot number 0. And it returns the \"secret\" value.\nJS code using <ether>s library, a wrapper to RPC <api> of <ether>eum nodes:\nconst number = await provider.getStorageAt(CONTRACT_ADDRESS, SLOT_NUMBER);\n\nDocs: https:\/\/docs.<ether>s.org\/v5\/<api>\/providers\/provider\/#Provider-getStorageAt\nAnd the actual RPC <api> method: https:\/\/<ether>eum.org\/en\/developers\/docs\/<api>s\/json-rpc\/#eth_getstorageat","37":"As the error state, there's no length attribute for the map type. Based on the <solidity> document, there's no way to iterate through the map items.\nYou need to maintain an array of the address separately in order to loop through it.\nBesides that, this block of code is wrong:\n\/\/ Transfer each balance\n    for (uint256 i = 0; i < _balances.length; i++) {\n      newContract.setBalance(_balances[i], _balances[_balances[i]]);\n    }\n\nBy the _balances[i], I guess you expect to receive the address of wallet. But this actually returns the balance at address <i>. Because i is the index in this case, so _balances[i] returns 0 IIRC.\nhttps:\/\/docs.<solidity>lang.org\/en\/v0.8.18\/types.html#iterable-mappings","38":null,"39":null,"40":null,"41":"The issue is that you create a new <token> Contract internal to your market, but you don't mint from that one\"\n \/\/ this is the error   \n My<token> <token>= new My<token>();\n\ninstead take the address for the <token> in the constructor.\ncontract Marketplace {\n    \/\/ this is the error   \n    My<token> <token>= new My<token>();\n    constructor(My<token> _<token>) {\n        <token> = _<token>;\n    }\n}\n \n\nNote: you should additionally probably consider using Owner.sol and adding authorization","42":"Error is here\naddress owner = Giftcardowners[_cardId-1];\n\nshould be\naddress owner = Giftcardowners[_cardId];\n\nWhen you call addAmount, this line executes\n  Giftcardowners.push(msg.sender);\n\nin the Giftcardowners array you have only 1 item\nGiftcardowners=[0x7EF2e0048f5bAeDe046f6BF797943daF4ED8CB47]\n\nwhen you call the GetGiftcard, you need to pass _cardId=0, you are actually assigning the index of the array as the id. when you pass 0, index will be -1 here\naddress owner = Giftcardowners[_cardId-1];\n\nYou cannot pass 1 to get 1-1=0, because you have this condition\nrequire(Giftcardowners.length > _cardId,\"Id doesnot exits\");","43":null,"44":null,"45":"Function parameters are part of the transaction, which is part of the calldata. So calldata is also persisted. Eventhough it is persisted, that doesn't mean it is easily available. Calldata is not indexed, and is not available at runtime. But the data is available to the nodes (for sure to those who runs full node, not sure about the light nodes).\nCalldata can be accessed by running a localnode, which means it is not available for any functions at runtime, the only calldata that is available at runtime is the parameters for that particular transaction.\nSo, if you call a function with a password parameter, someone somewhere can see it for sure.","46":null,"47":null,"48":null,"49":"Have you tried disperse contract? It does help you to send <token>s to multiple wallets.\nTry interacting with them in web3client.app.","50":null,"51":"Your error is failing from here:\n\/\/ require is like if statement. if condition does not satisfied, it shows the passed message\nrequire(msg.value >= amount * <token>Price[<token>Id], \"Not enough funds\")\n\nWhen a user sends funds alongside the transaction, not as an function argument, <solidity> will catch it with msg.value. Looks like you are not sending any value alongside the transaction or not sending enough funds. in <remix> IDE\n\nyou need to pass the necessary value in the above red borderd box","52":null,"53":null,"54":"It is my mistake. Sent the node address as the admin address for owner during the contract deployment. It is working as expected.","55":null,"56":"This error occurs when you are trying to approve an ERC20 <token> to the zero address.\nAssuming the approve interface is approve(spender, amount)\nI believe that if you add the approved address to this call const result = await erc20<token>.approve(ADDRESS,'1000'); this issue will be resolved.","57":"answer is \"C\" :)\nbalanceOf is a mapping in ERC20 implementation  to return the amount that given address holds:\n \/\/ address => holds uint amount\n mapping(address => uint) public balanceOf;\n\nSince current contract is inheriting from UniswapV2ERC20:\ncontract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20{}\n\nit can access to UniswapV2ERC20.sol\nSince the mapping balanceOf is public, <solidity> assigns getters to the public variables\nIn the functions:\nbalance0 = IERC20(_<token>0).balanceOf(address(this));\nbalance1 = IERC20(_<token>1).balanceOf(address(this));\n\naddress(this) refers to the current contract which is UniswapV2Pair. So balance0 is how much the current contract owns _<token>0 and balance1 is how much the current contract address owns _<token>1. <token>0 and <token>1 are contract addresses and each ERC20 <token> contract, keeps track of addresses and their balances. so you are visiting each <token> contract and getting how much balance the current contract has.\nThink ERC20 contract like a bank. you have <token>0 bank and <token>1 bank. Each bank keeps track of the balances of their users. balancesOf is where ERC20 <token>s store those balances. Your current contract also owns some of those <token>s so you just want to get how much <token>s the current contract holds\nswap function will be called by the user. Before executing the swap, contract checks if it has enough funds\nuint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\nuint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\nrequire(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');","58":null,"59":"The problem is I can't approximate how much LINK it will cost me to\nget response from 1 oracle.\n\nNobody can. When you make a request to oracle, you are calling a smart contract function and this will cost you gas which varies depending on the congestion in the system. if system is busy, it will cost more gas. Also when you interact with the <chainlink>, you are actually passing data to <chainlink> smart contract which makes some calculations, so you pay for those gas too.\nCalling one oracle is sending a request to one oracle. oracle is a <chainlink> node operator, and it set its own price. But sending a request to only one node is not a decentralized approach even though each node have multiple data resources. you should make a request to several nodes meaning that you need to pay each node operator. when you make a request to several nodes, you receive the average of those responses.","60":"Aggregator contract address \"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\" belongs to mainnet\n\nFrom here get the ETH\/USD goerli testnet address:\"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\"\n\nNow in order to call <chainlink> oracle you have to have LINK <token> in your contract. Get some link <token> to your conract address from the faucet\n\nImport the <token> in metamask. you will see the amount\n\nsend link <token> from your metamask to your contract\n\ndeploy your contract. if you are using <remix> IDE chose the injected provider to connect to metamask. Because <chainlink> contract is on goerli, so you need to be on Goerli testnet. Once deployment goes through you can call the fund function.\n\nSince the fund function has no argument, you need to send the value alongside the transaction. That is why inside the function you have msg.value to access to the sent amount.\n\nIn <remix> ide, under \"GAS LIMITinput there isVALUEinput. you need to pass the amount in there before you call thefund` function.","61":null,"62":"_balance[account] = _balance[account] + _amount;","63":"To transfer the <token>(0xbf433345a79CF6e9270350848F88Db16d46D4f54), it should be opened. Or your faucet(0x8c08a469BDFd679CEF0729bDEa52BC688d4bDbBC) or the caller should be whitelisted on the <token>.\nSince another address(in your failed transaction, 0x87f9F0572693258678625d29F5bbAEb02E04C14B) is not whitelisted on the <token>, the transaction was reverted in the modifier.\nmodifier open(address from, address to) {\n    require(isOpen || _whiteList[from] || _whiteList[to], \"Not Open\");\n    _;\n}","64":null,"65":"I hope you've already found a solution, if not,\nyou can try this faucet... it's from Alchemy\nhttps:\/\/goerlifaucet.com\/\nYou may have to sign up first to use it tho. It was recently introduced as a measure against bot exploits.","66":null,"67":"Go to this ..\/target\/types\/hello_world directory and make sure it exports like this\nexport type HelloWorld = {}\n\nsince you have this import\nimport { HelloWorld } from \"..\/target\/types\/hello_world\";\n\nalso, you did not show anchor import . It should be\nimport * as anchor from \"@<project>-serum\/anchor\";","68":null,"69":null,"70":null,"71":null,"72":null,"73":"For future reference I had to run this command\nSet-Alias -Name chia \"C:\\Users[insert user here]\\AppData\\Local\\Programs\\Chia\\resources\\app.asar.unpacked\\daemon\\chia.exe\"","74":null,"75":"Chain tips are unstable in <ether>eum chains. Because you are dealing with the latest block, transactions may hop between different blocks as some blocks do not get included in the canonical blockchain.\nYou need to use a chain reorganisation-aware block reading to be able to read recent transactions and events. Some example here.","76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":"Yes. You can get the price of a <crypto>currency as it is traded in Uniswap.\n\nFor Uniswp v2 like exchanges, the price can be calculated as a ratio of reverse0 \/ reserve1\n\nThe related smart contract call is pair.getReserves\n\nFor more complete example, you can read the source code of get_current_mid_price() function here\n\nFor Uniswap v3, it is there are similar helper functions in Uniswap perihelia contracts","84":"use cloudflare <cdn> and put the console.log(\"========== balance =\", balance); into the first script. module scripts are defer by default\n<script type=\"module\">\n      import { <ether>s } from \"https:\/\/<cdn>js.cloudflare.com\/ajax\/libs\/<ether>s\/5.7.2\/<ether>s.esm.js\";\n      const provider = new <ether>s.providers.Web3Provider(window.<ether>eum);\n      const balance = await provider.getBalance(\n        \"0xE0552897c6495D7efb98F3823cd48bf19e703D0b\"\n      );\n      console.log(\"========== balance =\", balance);\n<\/script>\n\nFrom this github post\n\nA lot of <project>s are using production levels of bandwidth from the\n<ether>s <cdn> to load their JavaScript, which I can no longer afford to\noperate at that scale.\nIf you are linking to <cdn>.<ether>s.io or <cdn>-cors.<ether>s.io, you should\nswitch to using the relevant link provided on <cdn>js.\nFeedback is welcome, and I apologize for the inconvenience.\nThanks!","85":null,"86":null,"87":null,"88":"Try this\n<api>Version: v1\nkind: <configmap>\nmetadata:\n  name: eth-geth\n  namespace: the-<project>\n  labels:\n    app: eth-geth\ndata:\n  networkid: \"818945\"\n  genesis.json: | \n    { \"config\": { \"chainId\": 818945, \"homesteadBlock\": 0, \"eip150Block\": 0, \"eip155Block\": 0, \"eip158Block\": 0 }, \"difficulty\": \"0x400\", \"gasLimit\": \"2000000\", \"nonce\" : \"0x0000000000000000\", \"alloc\": { \"0x58917D55dA991da576F148FD7E3E05a34666988b\": { \"balance\": \"100000000000000000000\" }, \"0x29bb385cF8ae4Cc49dBd10CcdA5e3d591D831527\": { \"balance\": \"200000000000000000000\" }, \"0xf1c9C9a1Ba591588147c2A729c470D8AFA91a04d\": { \"balance\": \"300000000000000000000\" } } }","89":null,"90":null,"91":null,"92":null,"93":null,"94":"So the concept of \"Block\" is different in the context of a hash function and the <bitcoin> blockchain.\nIn the context of hash functions, <sha256> processes input data in chunks, and the size limit of each data chunk is called block size. In the case of <sha256>, the block\/data chunk size limit is 512bits.\nIn the context of <bitcoin>, there's a data structure called \"block\". Each block contains metadata info and a group of transactions. The hash of block i is packed into the metadata of block i+1, which constructs a connection between these 2 blocks, thus it's called Blockchain. It's like a chain of blocks with each block containing the hash of its previous block. The size limit of each block, in the context of <bitcoin>, is 1MB. It limits how many transactions can be packed into a single block because the size of the block matters for the decentralization of the blockchain. Lower the size of the block, lower the requirement for the network nodes' bandwidth and thus more nodes can join the network.\nIf you want to learn more comprehensively about <bitcoin>, this is the go to material I would recommend: https:\/\/github.com\/<bitcoin>book\/<bitcoin>book","95":null,"96":null,"97":"To answer my own question.\nRenJs from Ren<project> can be used through an <api> to convert BTC to renBTC on <ether>ium.\nI must have missed this before as I mentioned looking at RenBridge.\nhttps:\/\/ren<project>.github.io\/ren-client-docs\/ren-js\/v3\/tutorial\/gateways","98":"Maybe I don't understand your question right, but some thoughts on what I've understood:\n\u00a7\u00b4ake as a basis \u00a7\u00d1) DB Migrations b) GIT commits\nInitialize the <database>\nCreate SQL statements to create tables and insert initial data, this would be your, e.g. 1.sql migration\nCreate a new customer\n\ntake the previous SQL migration, e.g. 1.sql\nget the hash of its content\nCreate 2.sql with that hash, as a comment, and all required insert statements to create the new user.\nUpdate the <database>\nCreate the blockchain transaction to create a new customer - hashOfDBInfo would be the hash of 2.sql\n\nUpdate the customer\n\nagain, take the prev SQL migration, e.g. 2.sql\nget the hash of its content\nCreate 3.sql with that hash, as a comment, and all required update statements to update the new user.\n\n-- prev: 0e7dffb08d259ce96af7fceaf30e8faa529efbb6\n-- date: 2023-01-20 11:35\n\nUPDATE Customers\nSET totalCarsInsured = 1\nWHERE CustomerID = 1;\n\n\nUpdate <database>\nUpdate blockchain with the new value of totalCarsInsured, and hashOfDBInfo would be the hash of 3.sql\n\n... and so on.\nAs a result, you have linked and unmodifiable migrations.\n\nAdditionally, you could use the hash of the file in its name to quickly reference the migration from hashOfDBInfo","99":null,"100":"If all transactions stopped and all nodes went inactive for a day, what would be the risk during that time \/ when the system becomes active again? Why can't they quiesce when no decisions are to be made?\n\nThere is no risk within the system. However if a blockchain halt for a day then a lot of interconnected world goes boom. You can study this when <solana> halted several times over the last few years.\n\nNo payments work\nPeople cannot <move> funds in and out in centralised ramps\nOn-chain decentralised finance markets go out of sync with other markets\nPrice feeds go out of sync\nCollateral liquidations for lending markets may not happen timely; lending protocols go net negative\n\nGenerally, one the value promise of decentralised network is 100% uptime due to resiliency from decentralisation. If the network cannot be guaranteed to be 100% functional, this value promise disappears and greatly causes users to doubt the benefits of decentralisation.","101":"The problem was setting the gasPrice on the <hardhat> config file. For the fuji network the gas is auto<matic>ally calculated and explicitly setting a gas price causes the error ProviderError: HttpProviderError (The error message could be better). This is the same case for the Celo network. But for <ether>eum, <polygon>, and Binance smart chains you CAN explicitly <defi>ne the gas price.","102":null,"103":null,"104":"what i understand is that you are looking for example code to create an outbound oracle in <solidity>,here is an example:\ncontract <chainlink> is usingOraclize {\n    string public EURUSD;\n    function updatePrice() public payable {\n        if (oraclizegetPrice(\"URL\") > this.balance) { \n            \/\/Handle out of funds error \n        } else {\n            oraclizequery(\"URL\", \"json(http:\/\/<api>.fixer.io\/latest?symbols=USD).rates.USD\");\n        }\n    }\n    function _callback(bytes32 myid, string result) public {\n        require(msg.sender == oraclizecbAddress());\n        EURUSD = result;\n    }\n}\n\nif you want to achieve certain condition is met in <solidity> code and send this information through an outbound oracle to another smart contract or on any other application, you can achieve that by using the <solidity> language's event system, this event system will help you to send data to external service.\nhere is an example:\n  contract DummyContract {\n    event LogSent(bytes32 data);\n    function sendData(address otherContractAddress, bytes32 data) public {\n        \/\/ execute functions when certain conditions are met\n        if (someCondition) {\n            someFunction();\n        }\n\n    emit LogSent(data);\n    \/\/ call other contract\n    otherContractAddress.call(data);\n\n    \/\/ call outbound oracle\n    Oracle.sendData(data);\n}\n\n\n}","105":null,"106":"You have several syntax errors. 1 is not a function, you have extra semis, incorrectly formatted comments, and are using template strings incorrectly. You also had the entire contents in there twice, which may have been a co<py>-paste issue. See my comments in the below code for the fixes.\n\/\/ <move>d this require to the top, though it's never used so could be deleted\nconst hre = require(\"<hardhat>\")\nconst { <ether>s } = require(\"<hardhat>\");\n\nasync function main()  {\n  \/\/ Fetch contract to deploy\n  const <token> = await <ether>s.getContractFactory(\"<token>\")\n\n  \/\/ Deploy contract\n  const <token> = await <token>.deploy()\n  await <token>.deployed()\n  console.log(`<token> Deployed to: ${<token>.address}`);    \/\/ this line -- template strings need backticks, not quotes\n  \/\/ add missing closing brace here\n}\n\n\/\/ you have the whole contents of your code in here twice;\n\/\/ i deleted the second co<py>, but in that co<py>, the following comment began with\n\/\/ one slash, not two\n\/\/ We recommend this pattern to be able to use async\/await everywhere\nmain().catch((error) => {\n  console.error(error);\n  process.exit(1)                                     \/\/ this line -- read the docs for process.exit\n})","107":null,"108":"I finally fixed the problem looking at the DEBUG logs on the <chainlink> Node. My logs were these ones:\n2023-01-17T21:49:01.538Z [DEBUG] PATCH \/v2\/resume\/b5c2254d-6f85-4953-9f63-7911951a3fb4 web\/router.go:535                \nbody={\"data\":{\"fileList\":[\"aaa...fff\",\"bbb...vvv\"], hashList\":[\"0x...\",\"0x...\"]}} clientIP={client_ip} \u00a8\u00b4errors=Error #01: must provide only one of either 'value' or 'error' key\n\nEven if the official <chainlink> documentation says you have to send back the result or the error setting data or error, it's wrong.\nYou have to set the parameter value and then you can set the parameter data inside. This is how I updated my PATCH HTTP request body:\n{\n  \"value\": {\n    \"data\": {\n      \"fileList\": [\"aaa...fff\", \"bbbb...vvvv\"],\n      \"hashList\": [\"0x...\", \"0x...\"]\n    }\n  }\n}","109":null,"110":null,"111":null,"112":null,"113":null,"114":"You could use the kill-port utility to terminate the <hardhat> process which is listening at port e.g. 8545.\n$ <npm> i kill-port -g\n$ kill-port 8545\n\n#or via <project> install:\n$ <npm> i kill-port\n$ npx kill-port 8545","115":"I am not an expert on multiparty computing (MPC) which I believe threshold signatures (TSS) are part of. Thus, I do not know if there is a way to <crypto>graphic natively to have a stable EOA for TSS. But I know some multiparty computing hardware companies do this by providing generic multisignature solutions across multiple different blockchains.\nHowever you can have a simple threshold scheme with <ether>eum by\n\nDeploying a smart contract that lists its owners in the on-chain storage\nThe smart contract needs to have just one function to check if the incoming messages contains enough signatures from owners\nThe address of such account is the deployed smart contract address\n\nHere is a tutorial of building such a smart contract wallet by Mahmoud Fathy.","116":null,"117":"It's protected by Cloudflare. The 634 bytes, when decoded, gives:\n<!DOCTYPE html>\n<html lang=\"en-US\">\n<head>\n    <title>Just a moment...<\/title>\n    <meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n    <meta name=\"robots\" content=\"noindex,nofollow\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n    <link href=\"\/<cdn>-cgi\/styles\/challenges.css\" rel=\"stylesheet\">\n    \n\n<\/head>\n<body class=\"no-js\">\n    <div class=\"main-wrapper\" role=\"main\">\n    <div class=\"main-content\">\n        <h1 class=\"zone-name-title h1\">\n            <img class=\"heading-favicon\" src=\"\/favicon.ico\"\n                 onerror=\"this.onerror=null;this.parentNode.re<move>Child(this)\">\n            <api>.blockcypher.com\n        <\/h1>\n        <h2 class=\"h2\" id=\"challenge-running\">\n            Checking if the site connection is secure\n        <\/h2>\n        <noscript>\n            <div id=\"challenge-error-title\">\n                <div class=\"h2\">\n                    <span class=\"icon-wrapper\">\n                        <div class=\"heading-icon warning-icon\"><\/div>\n                    <\/span>\n                    <span id=\"challenge-error-text\">\n                        Enable JavaScript and cookies to continue\n                    <\/span>\n                <\/div>\n            <\/div>\n        <\/noscript>\n\nYou can work around it by monkey-patching:\n\nhttp.client.HTTPResponse._safe_read to handle truncated response instead of raise IncompleteRead,\nurllib3.response.HTTPResponse._update_chunk_length to handle truncated response instead of raise InvalidChunkLength, and\ntor<py>.http.requests.Session to use requests-html's HTMLSession to render if blocked by Cloudflare.\n\nimport http.client\ndef _safe_read(self, amt):\n    s = []\n    while amt > 0:\n        chunk = self.fp.read(min(amt, http.client.MAXAMOUNT))\n        if not chunk:\n            # raise IncompleteRead(b''.join(s), amt)  # -\n            break                                     # +\n        s.append(chunk)\n        amt -= len(chunk)\n    return b\"\".join(s)\nhttp.client.HTTPResponse._safe_read = _safe_read\n\nimport urllib3.response\nfrom urllib3.exceptions import InvalidChunkLength\ndef _update_chunk_length(self):\n    if self.chunk_left is not None:\n        return\n    line = self._fp.fp.readline()\n    line = line.split(b\";\", 1)[0]\n    if line == b\"\":          # +\n        self.chunk_left = 0  # +\n        return               # +\n    try:\n        self.chunk_left = int(line, 16)\n    except ValueError:\n        self.close()\n        raise InvalidChunkLength(self, line)\nurllib3.response.HTTPResponse._update_chunk_length = _update_chunk_length\n\nimport tor<py>.http.requests\nfrom requests_html import HTMLSession\ntor<py>.http.requests.Session = HTMLSession\n\nfrom tor<py>.http.requests import TorRequests\nimport json\n\naddr1 = r'34xp4vRoCGJym3xR7yCVPFHoCNxv4Twseo'\naddr2 = r'bc1qgdjqv0av3q56jvd82tkdj<py>7gdp9ut8tlqmgrpmv24sq90ecnvqqjwvw97'\n\nwith TorRequests() as tor_requests:\n    print(\"establish circuit\")\n    with tor_requests.get_session() as sess:\n        for addr in [addr1, addr2]:\n            resp = sess.get(f\"https:\/\/<api>.blockcypher.com\/v1\/btc\/main\/addrs\/{addr}\")\n            # mydict = json.loads(resp.text)         # -\n            if resp.status_code == 200:              # +\n                mydict = json.loads(resp.text)       # +\n            elif resp.status_code == 403:            # +\n                resp.html.render()                   # +\n                mydict = json.loads(resp.html.text)  # +\n            else:                                    # +\n                raise NotImplementedError            # +\n            balance = mydict['balance']\/(10**8)\n            print(f'{addr} balance: {balance:.8f} BTC')\n\nNote: print(repr(resp.headers['Server'])) gives 'cloudflare'.\nAlso note: I tried cloudscraper to no avail.","118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":"Did you see a \"cache\" folder in your <project> after compiling? The .json file should be there","127":null,"128":null,"129":null,"130":null,"131":"You can use https:\/\/atom.<token>view.io\/ query transaction records.\nAt the same time can also get an <api>key registration (https:\/\/services.<token>view.io\/), after registration you can directly call <api> to get the data.\nFor example, to get a transaction, you can call this <api> directly:\nhttps:\/\/services.<token>view.io\/vip<api>\/tx\/atom\/8AAE32278063143DBA59A34394550DB7547398EBAE75AF2EDB27B8CF95C87DCB? <api>key={your <api>key}.\nIt's very convenient.\nenter image description here","132":null,"133":"There is no optionnal \"limit supply\" for an <nft> collection.\n\nAfter you created the collection and give the ESDTRole<nft>Create to your adresse or a contract you can call X time the function mint\nEventually, if you use a SC to mint the <nft>, you can set a variable to limit the maximum allowed mint.\n\nYou cant convert <nft> in SFT or SFT in <nft>\nThe only operation allowed is converting an SFT into Meta-ESDT with no way back. This is possible only because SFT are really close to META-ESDT but with no decimals :)","134":"What you are sending in your POST request is not a valid dict object. It could be that you are converting the \"transaction\" dictionary to a JSON string with json.dumps before sending the request. This will cause the request to contain a JSON string instead of a <python> dict object.\nInstead of using json.dumps, you can use the json argument to directly send the dictionary in the request. This auto<matic>ally converts the dictionary to a JSON string before sending it:\nres = requests.post(url, json=transaction)\n\nYou can also send the dictionary converted to a json object using the json() method,\nres = requests.post(url, data=json.dumps(transaction))","135":null,"136":null,"137":null,"138":"The revert reason is extracted using transaction replay, see the example implementation. This sets requirements for what data your node must store in order to be able to replay the transaction. See your node configuration and detailed use case for further diagnosis.\n\nYour node must support EIP-140 and EIP-838. This has been case for many years now so it is unlikely your node does not support this.\n\nUnless a smart contract explicitly reverts, the default reverts (payable function called with value, math errors) JSON-RPC error messages depend on the node type and may vary across different nodes\n\n<hardhat> is internally using Ganache simulated node, not Go<ether>uem","139":null,"140":null,"141":null,"142":"when creating a new wallet, how do the Blockchain network check if a certain mnemonic seed phrase has been used before for creating another wallet?\n\nThe network doesn't check previous usage of the seed.\nIf you're importing a seed into a wallet and the wallet auto<matic>ally imports used accounts generated from this seed - this check is performed on the wallet level.\nIt keeps iterating the index number in the derivation path - each iteration results in one account. The wallet checks if the account has > 0 sent \/ received transactions. If there are transactions on the account, the account is imported to the wallet. If there are no transactions on the account, the loop stops.\nSometimes the import also already contains the number of accounts - then the check of number of transactions is not required.\n\nis it ever possible for two independent wallets to have the same mnemonic seed phrase?. If Yes, what's the implication? If No, why?\n\nTheoretically possible.\n\nBug in implementation of generating randomness. If both wallets decide that \"random number is 6\", then the same \"random\" seed is generated on both.\n\nStatistical probability that both generate truly random seed and the seed is the same, is very very very low. Practically impossible even if the machine was trying to generate seeds over and over for trillions of years until it finds the same seed. But statistically, the probability is non-zero.\n\n\n\ntips on security measures to observe when providing mnemonic seed phrases for <crypto> wallets?\n\nIf possible, use input from the user to help generate the seed. For example some apps collect user mouse <move>ments (presumably unique for each user \/ session) when generating the seed.\nEncryption. Keep the raw data stored in an encrypted form, with access control - e.g. short-lived or one-time-access <token>s.","143":null,"144":null,"145":"You're asking multiple questions in one, I'll give my best to answer them each.\n\nwhen creating tron wallet account some random private key and wallet key is created. should i check the balance before using it?\n\nNo, it's usually not required to do that. Unless you're hyper paranoid about generating the same private key as someone else, which isn't impossible, and it has happened before1 but a good random key will in practice never be generated twice.\nIt's advisable to create private keys with dedicated hardware though, as dedicated hardware greatly improves the quality of the random numbers used to create the private key from.\n\ni have created tron wallet address using this code or that one or the official one which works offline without calling any <api> from the node to verify the address or register it.\n\nOnly the first link appears to create a random key, the other two only seem to convert an already created private key into a different format, or do some other operation on it.\nYou should (as a good developer) ALWAYS check EXACTLY how the private key is generated IF you're using a solution from someone else.\nSince you're asking these questions here, I highly doubt you understand the mechanism behind <crypto>graphic wallets and how they're created.\nI advise you to first understand how the underlying math works or get someone else who does.\nPrivate keys can be seen as one of the most valuable type of data these days, you don't want to mess with them lightly.\n1 well, not by accident. It was a targeted attack to a software wallet using an insecure random number generator. I don't know the source of that information though. It was related to <bitcoin>.","146":null,"147":"That error usually means that the necessary keys are not signing the transaction.\nHere's the documentation for creating a <token>: https:\/\/docs.hedera.com\/hedera\/docs\/sdks\/<token>s\/<defi>ne-a-<token>\nNotice that in the section Transaction Signing Requirements, the Treasury, Admin, and Transaction fee payer must sign the <token> create transaction.\nHere's a code sample of a <token> creation being signed by all the above (note that in this case the client is the transaction fee payer. The client signs auto<matic>ally when the .execute method is used):\nlet <nft>Create = await new <token>CreateTransaction()\n    .set<token>Name(\"Fall Collection\")\n    .set<token>Symbol(\"LEAF\")\n    .set<token>Type(<token>Type.NonFungibleUnique)\n    .setDecimals(0)\n    .setInitialSupply(0)\n    .setTreasuryAccountId(treasuryId)\n    .setSupplyType(<token>SupplyType.Finite)\n    .setMaxSupply(CID.length)\n    .setCustomFees([<nft>CustomFee])\n    .setAdminKey(adminKey)\n    .setSupplyKey(supplyKey)\n    .setPauseKey(pauseKey)\n    .setFreezeKey(freezeKey)\n    .setWipeKey(wipeKey)\n    .freezeWith(client)\n    .sign(treasuryKey);\n\nlet <nft>CreateTxSign = await <nft>Create.sign(adminKey);\nlet <nft>CreateSubmit = await <nft>CreateTxSign.execute(client);\nlet <nft>CreateRx = await <nft>CreateSubmit.getReceipt(client);","148":null,"149":"I would use mapping type to hold the whitelisted addresses, then you don't have to loop over the array\ncontract SelfWhitelist {\n\n    mapping(address => bool) public addressWhitelist;\n\n    function whitelist() public returns(string memory) {\n        if (check()) {\n            return \"Already whitelisted!\";\n        }\n        addressWhitelist[msg.sender] = true;\n        return \"Whitelisted!\";\n    }\n\n    function check() public view returns (bool) {\n\n        return addressWhitelist[msg.sender];\n    }\n}\n\n\nAnd in your code, seems you have logical issues:\n for(uint i = 0; i < addressWhitelist.length; i++) {\n    if(addressWhitelist[i] != msg.sender) {\n        addressWhitelist.push(msg.sender);\n        return \"Whitelisted!\";\n    }\n}\n\n\nif the array is empty, the loop never executes, so nothing will be added\nif the first item is not msg.sender, msg.sender will be whitelisted, even though it might be already whitelisted.","150":null,"151":null,"152":null,"153":null,"154":null,"155":".transfer(3) transfers 3 wei from the contract address to the specified address.\nWei is the smallest unit of <matic>. 10^18 (or 1000000000000000000) wei == 1 <matic>.\n\nIf you want to transfer decimal amount of <matic>, you need to specify the amount in wei.\n.transfer(500000000000000000);\n\nYou can also specify the number in scientific form\n.transfer(5e17);\n\nOr you can use the <ether> unit. Even though you're going to deploy the contract on <polygon>, the <solidity> syntax is the same for all networks.\n.transfer(0.5 <ether>);\n\n\nMake sure that the contract has sufficient balance before performing the transfer. Either from already previously preformed transfers to the contract address - or that you're passing at least the intended amount with the transaction that executes your function.\nAlso note that if the recipient is a contract, it can reject the incoming transfer by not implementing receive() nor fallback() special functions. Or by explicitly throwing a revert inside these functions.","156":"When creating a new <token> with transfer fees, you must specify the program id as the <token>-2022 program id of <token>zQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb, so instead, do:\nspl-<token> --program-id <token>zQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb create-<token> --transfer-fee 50 1000","157":"blockchain-parser only supports plyvel 1.2.0\nplyvel 1.2.0 only support <python> 3.8\nPlease check your <python> version is correct.\nhttps:\/\/plyvel.readthedocs.io\/en\/latest\/news.html\nTry this:\nbrew install leveldb\npip install plyvel==1.2.0\npip install blockchain-parser","158":"fixture is used in testing to create a proper test environment. for example, if you write a smart contract which uses or interacts with some ERC20 <token>s, in order to deploy the contract, you have to deploy those contracts. Or maybe some contracts inherits from interface and you need to provide those interfaces. that is what fixture is used to provide all necessary data in order to use your smart contract","159":"Contract creation date is not available using a direct method.\nBlockchain explorers usually collect it the following way:\n\nThey scan every transaction on every block on the chain\nIf the transaction receipt contains non-null contractAddress property, it means that this transaction deployed a contract.\nTime of the transaction (and effectively time of the contract deployment) is available as part of the block in which the tx was produced","160":null,"161":"This also applies to the connection to the notary, technically that is just a peer 2 peer connection like to any other node.\nHowever, I think you misunderstood the bit from the documentation you quoted here. The limitation mentioned there is not on establishing a connection - it refers to the fact that the SSL implementation in Java 1.8 that Corda 4.x uses limits how fast data can be en-\/decrypted, so has an impact on the steady stream throughput.","162":null,"163":null,"164":"The createMarketSale() first agument expects a BigNumber instance (or a stringified number that it would convert to BigNumber).\nWhen you pass it un<defi>ned, it throws the error mentioned in your question.\nSolution: Make sure that your <nft>.<token>Id is either a BigNumber or string - not un<defi>ned.","165":"I realized what I was doing wrong. It was a stupid mistake. The JSON input string should have been in a key-value format. The correct input command is: peer chaincode invoke -o <localhost>:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n ${CC_NAME} --peerAddresses <localhost>:7051 --tlsRootCertFiles $PEER0_ORG1_CA -c '{\"function\": \"createCar\", \"Args\":\"CAR101\",\"{\\\"CarDet\\\":[{\\\"Make\\\": \\\"Honda\\\" , \\\"Model\\\": \\\"City\\\" , \\\"Colour\\\": \\\"White\\\"} , {\\\"Make\\\": \\\"<swift>\\\" , \\\"Model\\\": \\\"Dezire\\\" , \\\"Colour\\\": \\\"Black\\\"}] , \\\"OwnerDet\\\": {\\\"Name\\\": \\\"James\\\" , \\\"Age\\\": \\\"29\\\" , \\\"Gender\\\": \\\"Male\\\"}}\"]}","166":null,"167":"In most cases yes. For example the same private key derives to the same address on <ether>eum, BSC, <polygon>, Arbitrum, and many other <evm> networks.\nHowever, there are some <evm> networks that use different address encoding. For example Tron uses a custom fork of <evm>, and its addresses are in different format. So you might need to further encode the 20byte address to other chain-specific formats."},"# of Vote for A1":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":0.0,"14":null,"15":null,"16":null,"17":0.0,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":0.0,"26":1.0,"27":2.0,"28":null,"29":null,"30":1.0,"31":null,"32":0.0,"33":1.0,"34":0.0,"35":1.0,"36":2.0,"37":0.0,"38":null,"39":null,"40":null,"41":0.0,"42":0.0,"43":null,"44":null,"45":1.0,"46":null,"47":null,"48":null,"49":0.0,"50":null,"51":0.0,"52":null,"53":null,"54":0.0,"55":null,"56":0.0,"57":2.0,"58":null,"59":0.0,"60":0.0,"61":null,"62":0.0,"63":0.0,"64":null,"65":0.0,"66":null,"67":2.0,"68":null,"69":null,"70":null,"71":null,"72":null,"73":0.0,"74":null,"75":0.0,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":0.0,"84":1.0,"85":null,"86":null,"87":null,"88":0.0,"89":null,"90":null,"91":null,"92":null,"93":null,"94":0.0,"95":null,"96":null,"97":0.0,"98":1.0,"99":null,"100":1.0,"101":0.0,"102":null,"103":null,"104":0.0,"105":null,"106":0.0,"107":null,"108":1.0,"109":null,"110":null,"111":null,"112":null,"113":null,"114":1.0,"115":0.0,"116":null,"117":1.0,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":0.0,"127":null,"128":null,"129":null,"130":null,"131":0.0,"132":null,"133":1.0,"134":1.0,"135":null,"136":null,"137":null,"138":1.0,"139":null,"140":null,"141":null,"142":1.0,"143":null,"144":null,"145":0.0,"146":null,"147":3.0,"148":null,"149":0.0,"150":null,"151":null,"152":null,"153":null,"154":null,"155":0.0,"156":1.0,"157":0.0,"158":0.0,"159":1.0,"160":null,"161":1.0,"162":null,"163":null,"164":1.0,"165":0.0,"166":null,"167":1.0},"User_Anwer1":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":"Mikko Ohtamaa","14":null,"15":null,"16":null,"17":"Ahmed Sbai","18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":"bestbeforetoday","26":"Kevin Gelpes","27":"Yilmaz","28":null,"29":null,"30":"Petr Hejda","31":null,"32":"Shoaib Khalid","33":"lpizzinidev","34":"Yilmaz","35":"Camilo,Yilmaz","36":"Petr Hejda","37":"<py>SoL","38":null,"39":null,"40":null,"41":"johnny 5","42":"Yilmaz","43":null,"44":null,"45":"Jimson James","46":null,"47":null,"48":null,"49":"sam","50":null,"51":"Yilmaz","52":null,"53":null,"54":"SrikanthVarma A","55":null,"56":"Flavio","57":"Yilmaz","58":null,"59":"Yilmaz","60":"Yilmaz","61":null,"62":"Petr Galushkin","63":"Satoshi Naoki","64":null,"65":"Timothy K. Ofori","66":null,"67":"Yilmaz","68":null,"69":null,"70":null,"71":null,"72":null,"73":"codemonkeytony","74":null,"75":"Mikko Ohtamaa","76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":"Mikko Ohtamaa","84":"Yilmaz","85":null,"86":null,"87":null,"88":"Harsh Manvar","89":null,"90":null,"91":null,"92":null,"93":null,"94":"Haichao Zhu","95":null,"96":null,"97":"Muhammad Ali","98":"tenbits","99":null,"100":"Mikko Ohtamaa","101":"Tahlil","102":null,"103":null,"104":"Mado","105":null,"106":"Zac Anger","107":null,"108":"chicco.caste21","109":null,"110":null,"111":null,"112":null,"113":null,"114":"tenbits","115":"Mikko Ohtamaa","116":null,"117":"aaron","118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":"chygo","127":null,"128":null,"129":null,"130":null,"131":"orangecc","132":null,"133":"kevin lallement","134":"Carlos Padilla","135":null,"136":null,"137":null,"138":"Mikko Ohtamaa","139":null,"140":null,"141":null,"142":"Petr Hejda","143":null,"144":null,"145":"Marco","146":null,"147":"Ed Marquez","148":null,"149":"tenbits","150":null,"151":null,"152":null,"153":null,"154":null,"155":"Petr Hejda","156":"Jon C","157":"\u00d6x\u00e3\u0091\u00b7\u00e5","158":"Yilmaz","159":"Petr Hejda","160":null,"161":"Christian Sailer","162":null,"163":null,"164":"Petr Hejda","165":"Divyansh Gupta","166":null,"167":"Petr Hejda"},"Answer1_time":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":"2 days ago","14":null,"15":null,"16":null,"17":"2 days ago","18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":"2 days ago","26":"Feb 5 at 23:18","27":"Feb 5 at 16:03","28":null,"29":null,"30":"Feb 4 at 16:50","31":null,"32":"Feb 4 at 5:30","33":"Feb 4 at 7:25","34":"Feb 4 at 4:15","35":"Feb 4 at 2:30","36":"Feb 3 at 20:17","37":"Feb 3 at 3:54","38":null,"39":null,"40":null,"41":"Feb 2 at 15:33","42":"Feb 2 at 6:13","43":null,"44":null,"45":"Feb 1 at 15:49","46":null,"47":null,"48":null,"49":"Feb 7 at 0:17","50":null,"51":"Feb 1 at 4:41","52":null,"53":null,"54":"Feb 1 at 6:55","55":null,"56":"Jan 31 at 14:42","57":"Jan 30 at 21:14","58":null,"59":"Jan 31 at 2:43","60":"Jan 31 at 3:09","61":null,"62":"Jan 30 at 10:18","63":"Jan 30 at 3:07","64":null,"65":"yesterday","66":null,"67":"Jan 29 at 8:15","68":null,"69":null,"70":null,"71":null,"72":null,"73":"Jan 29 at 6:47","74":null,"75":"Jan 29 at 11:05","76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":"Jan 25 at 20:13","84":"Jan 26 at 3:45","85":null,"86":null,"87":null,"88":"Jan 24 at 10:12","89":null,"90":null,"91":null,"92":null,"93":null,"94":"Jan 25 at 7:02","95":null,"96":null,"97":"Jan 23 at 6:26","98":"Jan 20 at 22:46","99":null,"100":"Jan 19 at 20:31","101":"Jan 24 at 14:01","102":null,"103":null,"104":"Jan 18 at 11:44","105":null,"106":"Jan 18 at 4:29","107":null,"108":"Jan 18 at 8:53","109":null,"110":null,"111":null,"112":null,"113":null,"114":"Jan 18 at 9:19","115":"Jan 15 at 20:14","116":null,"117":"Jan 24 at 12:34","118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":"Jan 16 at 6:47","127":null,"128":null,"129":null,"130":null,"131":"Jan 11 at 9:09","132":null,"133":"Jan 12 at 1:24","134":"Jan 10 at 9:16","135":null,"136":null,"137":null,"138":"Jan 9 at 8:15","139":null,"140":null,"141":null,"142":"Jan 7 at 12:07","143":null,"144":null,"145":"Jan 6 at 23:26","146":null,"147":"Jan 31 at 14:57","148":null,"149":"Jan 6 at 15:34","150":null,"151":null,"152":null,"153":null,"154":null,"155":"Jan 4 at 20:33","156":"Jan 10 at 18:02","157":"Jan 26 at 2:55","158":"Jan 4 at 21:16","159":"Jan 4 at 10:41","160":null,"161":"Jan 5 at 14:37","162":null,"163":null,"164":"Jan 2 at 20:02","165":"Jan 6 at 10:44","166":null,"167":"Jan 1 at 16:15"},"comment for A1":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":"Add a comment\n                ?|","14":null,"15":null,"16":null,"17":"Add a comment\n                ?|","18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":"Add a comment\n                ?|","26":"Thank you. I think Metamask hardcodes their or not?\n                \n                \n\u00a8C?user18039014\n                \n                Feb 6 at 15:14\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @user18039014 yes, they're hardcoded in their repo, the wagmi library for <react> has the block explorer urls hardcoded as well.  <ether>scan is not a part of the blockchain, it's just a website, so I don't think there's a better way to do it at this time\n                \n                \n\u00a8C?Kevin Gelpes\n                \n                Feb 6 at 18:30\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","27":"OMG!!! I was trying to debug the entire day...  you're a day safer! Thank you so much!\n                \n                \n\u00a8C?patrick\n                \n                Feb 5 at 16:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                are you the one checked this question  :) stackoverflow.com\/questions\/74741666\/\u00a1\u00ad\n                \n                \n\u00a8C?Yilmaz\n                \n                Feb 5 at 16:17\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","28":null,"29":null,"30":"Add a comment\n                ?|","31":null,"32":"Add a comment\n                ?|","33":"Add a comment\n                ?|","34":"Add a comment\n                ?|","35":"Add a comment\n                ?|","36":"Thank you! I have much understanding how data stores in slots with your reference attached below. But how about this:     function get_random() public view returns(uint num){         bytes32 ramdonNumber = keccak256(abi.encodePacked(block.timestamp,blockhash(block.number-1)));         num = uint(ramdonNumber);         return num;     } Is the variable num still stored in a certain slot?\n                \n                \n\u00a8C?Gap\n                \n                Feb 4 at 3:43\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                In this case, the variable is only stored in memory - not in storage - and it won't be possible to retrieve it using the getStorageAt method... But - the block producer (miner on PoW, validator on PoS) knows the block.number, block.timestamp and blockhash parameters before publishing the block. And after the block has been published, the value is also retrievable by debugging the transaction. For example geth.<ether>eum.org\/docs\/interacting-with-geth\/rpc\/\u00a1\u00ad\n                \n                \n\u00a8C?Petr Hejda\n                \n                Feb 4 at 13:11\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                So if I don't use block.number, block.timestamp as parameters in keccak256 hash function then miners\/validators can't retrieve the value?\n                \n                \n\u00a8C?Gap\n                \n                Feb 4 at 18:40\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                @Gap They can still retrieve the value before the transaction is included in the block. But they can also affect those block.number and other values mentioned in your snippet.\n                \n                \n\u00a8C?Petr Hejda\n                \n                Feb 4 at 19:41\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","37":"Add a comment\n                ?|","38":null,"39":null,"40":null,"41":"Add a comment\n                ?|","42":"Add a comment\n                ?|","43":null,"44":null,"45":"Thanks for you reply, then I need to rebuild my <project> contract.\n                \n                \n\u00a8C?Huowuge\n                \n                Feb 1 at 16:57\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Any suggestion about setting a password to call a certain function? I have no idea...\n                \n                \n\u00a8C?Huowuge\n                \n                Feb 1 at 17:01\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                even if you solve the function's exposed parameters problem through asymmetric <crypto>, how do you validate it? correct password needs to be accessible to the contract to check wh<ether> the incoming password is correct or not, right? The only way out is through zk-SNARKs\n                \n                \n\u00a8C?Jimson James\n                \n                Feb 1 at 19:27\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","46":null,"47":null,"48":null,"49":"Add a comment\n                ?|","50":null,"51":"If I pass the value in <ether>, is it also affecting the msg.value? Won't it be converting to Wei auto<matic>ally?\n                \n                \n\u00a8C?0391\n                \n                Feb 1 at 5:40\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                yes. anything you put in value input, it will be caught as msg.value. if u enter <ether>,  <remix> will convert it to wei auto<matic>ally\n                \n                \n\u00a8C?Yilmaz\n                \n                Feb 1 at 5:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I have tried it but it is still not working.   On what the step to reproduce this: - Deploy the contract with value, for me I pass 20 <ether> - Run the mintAddress function by passing, <token>Id: 1, amount: 10, price: 10, address: the address an account - Run the transfer function by passing address: the address of account you want to transfer the <token> into, <token>Id: 1, amount: 10 - Change the account in upper part to the address you use in transfer function - Run buy<token> function, <token>Id: 1, amount: 10 - It still said Not Enough Fund\n                \n                \n\u00a8C?0391\n                \n                Feb 1 at 6:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @0391 your original question was about ` buy<token>` function. now you are asking about transfer function\n                \n                \n\u00a8C?Yilmaz\n                \n                Feb 1 at 6:49\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes but to proceed to buy<token>, I have to transfer the <token> first and the transferred <token> address will do the buy<token>, which makes the issue occur where they are unable to buy the <token>\n                \n                \n\u00a8C?0391\n                \n                Feb 1 at 7:03\n            \n        \n    \n\n            \n    \n\n        \n                    \n                ?|?\n            Show 7 more comments","52":null,"53":null,"54":"Add a comment\n                ?|","55":null,"56":"I have already done that but that was also not worked for me same error I'm getting again and actually <matic>Client instance auto<matic>ally takes the address which we want to approve, in this, it will take the ERC20Predicate contract address auto<matic>ally.\n                \n                \n\u00a8C?Ankit Pareek\n                \n                Feb 1 at 4:20\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","57":"Current contract meaning, the Pair contract AKA, the pool quantities of each <token> stored in this pair. But what are reserves if not the same?\n                \n                \n\u00a8C?suchislife\n                \n                Jan 30 at 22:03\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I can explain but it will be a deep dive into how uniswap code flow works and the answer will be bloated, long, and confusing. you should ask a separate question\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 30 at 22:29\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I've been reading about uniswapv2 for a week. I guess what I'm asking is, mathe<matic>ally, what are balance0 & balance1? Feel free to revise this answer. Most of it can be found here <ether>eum.org\/en\/developers\/tutorials\/uniswap-v2-annotated-code\n                \n                \n\u00a8C?suchislife\n                \n                Jan 30 at 22:36\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                <token>0 and <token>1 are contract addresses and each ERC20 <token> contract, keeps track of addresses and their balances. so you are visiting each <token> contract and getting how much balance current contract has.\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 30 at 22:40\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Think ERC20 contract like a bank. you have <token>0 bank and <token>1 bank. Each bank keeps track of the balances of their users. balancesOf is where ERC20 <token>s store those balances. Your current contract also owns some of those <token>s so you just want to get how much <token>s the current contract holds\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 30 at 22:54\n            \n        \n    \n\n            \n    \n\n        \n                    \n                ?|?\n            Show 3 more comments","58":null,"59":"Add a comment\n                ?|","60":"Add a comment\n                ?|","61":null,"62":"Your answer could be improved by adding more information on what the code does and how it helps the OP.\n                \n                \n\u00a8C?Tyler2P\n                \n                Jan 30 at 20:40\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","63":"Add a comment\n                ?|","64":null,"65":"Add a comment\n                ?|","66":null,"67":"update the anchor version. console.log(program) to see what it will be logged. looks like it was not constructed properly\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 29 at 21:47\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                cargo run needs a bin target because this is a lib.rs. This was working before without running cargo run, following this guide dev.to\/edge-and-node\/\u00a1\u00ad\n                \n                \n\u00a8C?djd\n                \n                Jan 29 at 21:50\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                how are you running the test file? what command?\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 29 at 23:09\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                when you run the anchor build, it will spit out the program Id. did you paste it to the cargo.toml?\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 29 at 23:26\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                Yes for now, thanks, looks like I was mistaken in using anchor run test instead of anchor test or the id needed to be updated in Anchor.toml and the declare_id! macro\n                \n                \n\u00a8C?djd\n                \n                Jan 29 at 23:57\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    \n                ?|?\n            Show 11 more comments","68":null,"69":null,"70":null,"71":null,"72":null,"73":"Add a comment\n                ?|","74":null,"75":"Thank you, but I don't understand. Isn't the block already packed? Why would <rest>ructuring occur? I haven't seen any examples. Can you explain them to some websites in detail, or can I chat with you privately\n                \n                \n\u00a8C?zl zero\n                \n                Jan 29 at 13:11\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Try here academy.<moralis>.io\/blog\/what-is-chain-reorganization - Sorry I do not have time for tutoring. If you have more questions you can ask them on sites like <ether>eum.stackexchange.com\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 29 at 18:36\n            \n        \n    \n    \n        \n            \n                    1\n            \n        \n        \n            \n                \n                OK, thank you again, so if I want to achieve the effect of synchronization of all block <database>s, can I only synchronize safe blocks? Unsafe blocks may be <rest>ructured\n                \n                \n\u00a8C?zl zero\n                \n                Jan 30 at 5:13\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I gave you a link to a full example how to solve this issue. You will figure it out yourself after studying the source code.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 30 at 8:06\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":"Add a comment\n                ?|","84":"Add a comment\n                ?|","85":null,"86":null,"87":null,"88":"Add a comment\n                ?|","89":null,"90":null,"91":null,"92":null,"93":null,"94":"Add a comment\n                ?|","95":null,"96":null,"97":"Add a comment\n                ?|","98":"Add a comment\n                ?|","99":null,"100":"Add a comment\n                ?|","101":"Add a comment\n                ?|","102":null,"103":null,"104":"Thank you Mado for the reply.  The above example provided seems to get detail from outside world and is giving the smart contract . I was trying to find <solidity> code where a certain condition is met in <solidity> code and it will send this information through an outbound oracle to another smart contract or on any other application.\n                \n                \n\u00a8C?learner\n                \n                Jan 18 at 12:02\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                what you want is something like if 1 == 1 then send this data to another contractAddress,  am i right ?\n                \n                \n\u00a8C?Mado\n                \n                Jan 18 at 12:23\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Yes, thats right. Below is one of the <defi>nitions i was reading for the outbound oracle. learn.bybit.com\/blockchain\/what-are-blockchain-oracles \"Outbound Oracles Outbound oracles function in the opposite manner. Instead of bringing external data to the blockchain, they take blockchain data and send it to another system. Depending on the way the oracle is set up, you can even instruct other systems (such as a banking network) to perform a task based on information from the blockchain\"\n                \n                \n\u00a8C?learner\n                \n                Jan 18 at 12:29\n                        \n                            \n                        \n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                that's actually fun to do, please check my answer again i edited and added new answer. hopefully that's what you looking for!, after i went through the <solidity> docs, there is a feature called event system that's allows you to perform this task.\n                \n                \n\u00a8C?Mado\n                \n                Jan 18 at 12:38\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","105":null,"106":"Add a comment\n                ?|","107":null,"108":"Add a comment\n                ?|","109":null,"110":null,"111":null,"112":null,"113":null,"114":"Add a comment\n                ?|","115":"Add a comment\n                ?|","116":null,"117":"Add a comment\n                ?|","118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":"Add a comment\n                ?|","127":null,"128":null,"129":null,"130":null,"131":"Add a comment\n                ?|","132":null,"133":"Add a comment\n                ?|","134":"Add a comment\n                ?|","135":null,"136":null,"137":null,"138":"1\n            \n        \n        \n            \n                \n                Hi Mikko, Using the links you provided, I have replayed the transaction, but it seems unhandled exception in the transaction cannot be handled that way. There is no result to parse for the reason code it seems. It works very nice however for manual reverts.  The lesson I learned is that ganache or <hardhat> have better error handling and I should develop\/check the erros there. Also using <remix> or <truffle> to debug helps as well.   Thanks for help.\n                \n                \n\u00a8C?ekimpl\n                \n                Jan 10 at 15:36\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","139":null,"140":null,"141":null,"142":"Add a comment\n                ?|","143":null,"144":null,"145":"i didnt find any refrance for how tron works (in simple sentence). can you give me a good reference to learn blockchain technical aspects ?\n                \n                \n\u00a8C?Abbas makhzomi\n                \n                Jan 7 at 18:00\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","146":null,"147":"Add a comment\n                ?|","148":null,"149":"Oh, damn. Thanks, never thought of using that.\n                \n                \n\u00a8C?Anim3Add1ct\n                \n                Jan 7 at 0:43\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @Anim3Add1ct you can mark this as an answer, for better tracking unanswered questions on SO. Thanks\n                \n                \n\u00a8C?tenbits\n                \n                Jan 9 at 8:23\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","150":null,"151":null,"152":null,"153":null,"154":null,"155":"I still got this error: Error: invalid BigNumber value (argument=\"value\", value={\"value\":3808772200000000}, code=INVALID_ARGUMENT, version=bignumber\/5.7.0)\n                \n                \n\u00a8C?asusrid\n                \n                Jan 5 at 15:51\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                value: <ether>s.utils.parseUnits( (await loterya.getLatestPrice() \/ 10 ** 10).toString(), \"<ether>\") even trying this is throwing an error:\n                \n                \n\u00a8C?asusrid\n                \n                Jan 5 at 15:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                Error: invalid BigNumber value (argument=\"value\", value={\"value\":{\"type\":\"BigNumber\",\"hex\":\"0x0d880ee202ea00\"}}, code=INVALID_ARGUMENT, version=bignumber\/5.7.0)\n                \n                \n\u00a8C?asusrid\n                \n                Jan 5 at 15:56\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                @asusrid This set of errors seems to be related to a JavaScript code - not to the <solidity> code. Please show a way to reproduce your issue. I.e. what exactly should we do to get the same error as you have.\n                \n                \n\u00a8C?Petr Hejda\n                \n                Jan 5 at 16:10\n            \n        \n    \n    \n        \n            \n            \n        \n        \n            \n                \n                I have edited my question to add the code to reproduce the error, if you need anything else tell me. I haven't added the <solidity> code because as you say, it's not even reaching that point. Thank you Petr!\n                \n                \n\u00a8C?asusrid\n                \n                Jan 5 at 16:22\n                        \n                            \n                        \n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","156":"Add a comment\n                ?|","157":"Add a comment\n                ?|","158":"Add a comment\n                ?|","159":"Add a comment\n                ?|","160":null,"161":"Hi Christian, thanks for the answer. My aim is to identify the reason for extra significant time taken when a flow is invoked for the first time after the nodes are deployed and running, compared to the succeeding trials of same flow.\n                \n                \n\u00a8C?Benjamin\n                \n                Jan 5 at 16:11\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","162":null,"163":null,"164":"Thank you !  actually it should be <nft>.<token>Id wih c<api>tal T  not a small one .\n                \n                \n\u00a8C?MALIK forz\n                \n                Jan 2 at 21:38\n            \n        \n    \n\n            \n    \n\n        \n                    Add a comment\n                ?|","165":"Add a comment\n                ?|","166":null,"167":"Add a comment\n                ?|"},"Answer2":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":"<ether>s doesn't have information about the block explorers, they're external services. But you can use this library from metamask: https:\/\/github.com\/MetaMask\/<ether>scan-link it will generate a block explorer url from a given chainId.\nThe other option is to hardcode a map of chainIds to block explorer URLs, which may sound like a bad idea but at least you're in control of where you're pointing your users towards, instead of passing on that responsibility to another library","27":"I think you are using version 6 in next13. if you install\n\"<ether>s\": \"^5.6.4\",\n\nin next-13, it will work.\nI think you previously had next-12 <project> with version 5, and now installing new version on next-13\nin <ether>s v6 all of those\nexport {\n    getDefaultProvider,\n    Block, FeeData, Log, TransactionReceipt, TransactionResponse,\n    AbstractSigner, NonceManager, VoidSigner,\n    AbstractProvider,\n    FallbackProvider,\n    JsonRpc<api>Provider, JsonRpcProvider, JsonRpcSigner,\n\n    BrowserProvider,\n    AlchemyProvider, AnkrProvider, CloudflareProvider, <ether>scanProvider,\n    InfuraProvider, PocketProvider, QuickNodeProvider,\n    IpcSocketProvider, SocketProvider, WebSocketProvider,\n    EnsResolver,\n    Network\n} from \".\/providers\/index.js\";\n\nare imported like this\nimport { BrowserProvider } from \"<ether>s\";\n\nconst providerr = new BrowserProvider(window.<ether>eum);\n\nthis is how I set a component to connect\nconst Test = () => {\n  const [provider, setProvider] = useState();\n  useEffect(() => {\n    const browserProvider = new BrowserProvider(window.<ether>eum);\n    setProvider(browserProvider);\n  }, []);\n  const connect = async () => {\n    await provider.send(\"eth_requestAccounts\");\n  };\n  return (\n    <div>\n      <button onClick={connect}>connect<\/button>\n    <\/div>\n  );\n};\n\nexport default Test;","28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":"\/\/SPDX-License-Identifier: MIT\npragma <solidity> ^0.8.7;\n\ncontract Bank {\n    uint256 public amountIn;\n    function deposit() external payable returns(uint256) {\n        amountIn = msg.value ;\n        return amountIn;\n    }\n    \/\/ receive() external payable{}\n    function getBalance() public view returns(uint){\n        return address(this).balance;\n    }\n}\n\n\ninterface Receiver {\n    function deposit() external payable returns(uint256);\n}\n\ncontract Sender {\n    Receiver private receiver ;\n    constructor(address _receiver){\n        receiver=Receiver(_receiver);\n    }\n\n    function sendDeposit(uint256 _amount) public payable {\n        receiver.deposit{value: _amount}();\n    }\n\n    receive() external payable {\n         require(msg.value > 0, \"You cannot send 0 <ether>\");\n    }\n\n }\n\n1- Deploy the Bank contract first and co<py> the address\n2- Deploy the Sender contract, passing the copied Bank contract\n3- call sendDeposit from Sender contract, you need to pass same amout to function input and value input which is under the \"Gas limit\" input\n4- transaction will be succcessful. call the getBalance from Bank contract","35":null,"36":"Assuming that the contract is deployed on a public network (e.g. <ether>eum), then the value is always readable.\nNot directly through the autogenerated getter function (that's available only for public properties), which means it's not available onchain.\nBut anyone (including miners) can create an offchain app (for example in JavaScript) that queries the specific storage slot where the value is stored - in this case it's in slot number 0. And it returns the \"secret\" value.\nJS code using <ether>s library, a wrapper to RPC <api> of <ether>eum nodes:\nconst number = await provider.getStorageAt(CONTRACT_ADDRESS, SLOT_NUMBER);\n\nDocs: https:\/\/docs.<ether>s.org\/v5\/<api>\/providers\/provider\/#Provider-getStorageAt\nAnd the actual RPC <api> method: https:\/\/<ether>eum.org\/en\/developers\/docs\/<api>s\/json-rpc\/#eth_getstorageat","37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":"Function parameters are part of the transaction, which is part of the calldata. So calldata is also persisted. Eventhough it is persisted, that doesn't mean it is easily available. Calldata is not indexed, and is not available at runtime. But the data is available to the nodes (for sure to those who runs full node, not sure about the light nodes).\nCalldata can be accessed by running a localnode, which means it is not available for any functions at runtime, the only calldata that is available at runtime is the parameters for that particular transaction.\nSo, if you call a function with a password parameter, someone somewhere can see it for sure.","46":null,"47":null,"48":null,"49":null,"50":null,"51":"Your error is failing from here:\n\/\/ require is like if statement. if condition does not satisfied, it shows the passed message\nrequire(msg.value >= amount * <token>Price[<token>Id], \"Not enough funds\")\n\nWhen a user sends funds alongside the transaction, not as an function argument, <solidity> will catch it with msg.value. Looks like you are not sending any value alongside the transaction or not sending enough funds. in <remix> IDE\n\nyou need to pass the necessary value in the above red borderd box","52":null,"53":null,"54":null,"55":null,"56":null,"57":"answer is \"C\" :)\nbalanceOf is a mapping in ERC20 implementation  to return the amount that given address holds:\n \/\/ address => holds uint amount\n mapping(address => uint) public balanceOf;\n\nSince current contract is inheriting from UniswapV2ERC20:\ncontract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20{}\n\nit can access to UniswapV2ERC20.sol\nSince the mapping balanceOf is public, <solidity> assigns getters to the public variables\nIn the functions:\nbalance0 = IERC20(_<token>0).balanceOf(address(this));\nbalance1 = IERC20(_<token>1).balanceOf(address(this));\n\naddress(this) refers to the current contract which is UniswapV2Pair. So balance0 is how much the current contract owns _<token>0 and balance1 is how much the current contract address owns _<token>1. <token>0 and <token>1 are contract addresses and each ERC20 <token> contract, keeps track of addresses and their balances. so you are visiting each <token> contract and getting how much balance the current contract has.\nThink ERC20 contract like a bank. you have <token>0 bank and <token>1 bank. Each bank keeps track of the balances of their users. balancesOf is where ERC20 <token>s store those balances. Your current contract also owns some of those <token>s so you just want to get how much <token>s the current contract holds\nswap function will be called by the user. Before executing the swap, contract checks if it has enough funds\nuint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\nuint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\nrequire(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');","58":null,"59":null,"60":null,"61":null,"62":null,"63":"To transfer the <token>(0xbf433345a79CF6e9270350848F88Db16d46D4f54), it should be opened. Or your faucet(0x8c08a469BDFd679CEF0729bDEa52BC688d4bDbBC) or the caller should be whitelisted on the <token>.\nSince another address(in your failed transaction, 0x87f9F0572693258678625d29F5bbAEb02E04C14B) is not whitelisted on the <token>, the transaction was reverted in the modifier.\nmodifier open(address from, address to) {\n    require(isOpen || _whiteList[from] || _whiteList[to], \"Not Open\");\n    _;\n}","64":null,"65":null,"66":null,"67":"Go to this ..\/target\/types\/hello_world directory and make sure it exports like this\nexport type HelloWorld = {}\n\nsince you have this import\nimport { HelloWorld } from \"..\/target\/types\/hello_world\";\n\nalso, you did not show anchor import . It should be\nimport * as anchor from \"@<project>-serum\/anchor\";","68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":"Chain tips are unstable in <ether>eum chains. Because you are dealing with the latest block, transactions may hop between different blocks as some blocks do not get included in the canonical blockchain.\nYou need to use a chain reorganisation-aware block reading to be able to read recent transactions and events. Some example here.","76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":"Yes. You can get the price of a <crypto>currency as it is traded in Uniswap.\n\nFor Uniswp v2 like exchanges, the price can be calculated as a ratio of reverse0 \/ reserve1\n\nThe related smart contract call is pair.getReserves\n\nFor more complete example, you can read the source code of get_current_mid_price() function here\n\nFor Uniswap v3, it is there are similar helper functions in Uniswap perihelia contracts","84":"use cloudflare <cdn> and put the console.log(\"========== balance =\", balance); into the first script. module scripts are defer by default\n<script type=\"module\">\n      import { <ether>s } from \"https:\/\/<cdn>js.cloudflare.com\/ajax\/libs\/<ether>s\/5.7.2\/<ether>s.esm.js\";\n      const provider = new <ether>s.providers.Web3Provider(window.<ether>eum);\n      const balance = await provider.getBalance(\n        \"0xE0552897c6495D7efb98F3823cd48bf19e703D0b\"\n      );\n      console.log(\"========== balance =\", balance);\n<\/script>\n\nFrom this github post\n\nA lot of <project>s are using production levels of bandwidth from the\n<ether>s <cdn> to load their JavaScript, which I can no longer afford to\noperate at that scale.\nIf you are linking to <cdn>.<ether>s.io or <cdn>-cors.<ether>s.io, you should\nswitch to using the relevant link provided on <cdn>js.\nFeedback is welcome, and I apologize for the inconvenience.\nThanks!","85":null,"86":null,"87":null,"88":"Try this\n<api>Version: v1\nkind: <configmap>\nmetadata:\n  name: eth-geth\n  namespace: the-<project>\n  labels:\n    app: eth-geth\ndata:\n  networkid: \"818945\"\n  genesis.json: | \n    { \"config\": { \"chainId\": 818945, \"homesteadBlock\": 0, \"eip150Block\": 0, \"eip155Block\": 0, \"eip158Block\": 0 }, \"difficulty\": \"0x400\", \"gasLimit\": \"2000000\", \"nonce\" : \"0x0000000000000000\", \"alloc\": { \"0x58917D55dA991da576F148FD7E3E05a34666988b\": { \"balance\": \"100000000000000000000\" }, \"0x29bb385cF8ae4Cc49dBd10CcdA5e3d591D831527\": { \"balance\": \"200000000000000000000\" }, \"0xf1c9C9a1Ba591588147c2A729c470D8AFA91a04d\": { \"balance\": \"300000000000000000000\" } } }","89":null,"90":null,"91":null,"92":null,"93":null,"94":"So the concept of \"Block\" is different in the context of a hash function and the <bitcoin> blockchain.\nIn the context of hash functions, <sha256> processes input data in chunks, and the size limit of each data chunk is called block size. In the case of <sha256>, the block\/data chunk size limit is 512bits.\nIn the context of <bitcoin>, there's a data structure called \"block\". Each block contains metadata info and a group of transactions. The hash of block i is packed into the metadata of block i+1, which constructs a connection between these 2 blocks, thus it's called Blockchain. It's like a chain of blocks with each block containing the hash of its previous block. The size limit of each block, in the context of <bitcoin>, is 1MB. It limits how many transactions can be packed into a single block because the size of the block matters for the decentralization of the blockchain. Lower the size of the block, lower the requirement for the network nodes' bandwidth and thus more nodes can join the network.\nIf you want to learn more comprehensively about <bitcoin>, this is the go to material I would recommend: https:\/\/github.com\/<bitcoin>book\/<bitcoin>book","95":null,"96":null,"97":null,"98":null,"99":null,"100":"If all transactions stopped and all nodes went inactive for a day, what would be the risk during that time \/ when the system becomes active again? Why can't they quiesce when no decisions are to be made?\n\nThere is no risk within the system. However if a blockchain halt for a day then a lot of interconnected world goes boom. You can study this when <solana> halted several times over the last few years.\n\nNo payments work\nPeople cannot <move> funds in and out in centralised ramps\nOn-chain decentralised finance markets go out of sync with other markets\nPrice feeds go out of sync\nCollateral liquidations for lending markets may not happen timely; lending protocols go net negative\n\nGenerally, one the value promise of decentralised network is 100% uptime due to resiliency from decentralisation. If the network cannot be guaranteed to be 100% functional, this value promise disappears and greatly causes users to doubt the benefits of decentralisation.","101":"The problem was setting the gasPrice on the <hardhat> config file. For the fuji network the gas is auto<matic>ally calculated and explicitly setting a gas price causes the error ProviderError: HttpProviderError (The error message could be better). This is the same case for the Celo network. But for <ether>eum, <polygon>, and Binance smart chains you CAN explicitly <defi>ne the gas price.","102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":"You could use the kill-port utility to terminate the <hardhat> process which is listening at port e.g. 8545.\n$ <npm> i kill-port -g\n$ kill-port 8545\n\n#or via <project> install:\n$ <npm> i kill-port\n$ npx kill-port 8545","115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":"There is no optionnal \"limit supply\" for an <nft> collection.\n\nAfter you created the collection and give the ESDTRole<nft>Create to your adresse or a contract you can call X time the function mint\nEventually, if you use a SC to mint the <nft>, you can set a variable to limit the maximum allowed mint.\n\nYou cant convert <nft> in SFT or SFT in <nft>\nThe only operation allowed is converting an SFT into Meta-ESDT with no way back. This is possible only because SFT are really close to META-ESDT but with no decimals :)","134":null,"135":null,"136":null,"137":null,"138":"The revert reason is extracted using transaction replay, see the example implementation. This sets requirements for what data your node must store in order to be able to replay the transaction. See your node configuration and detailed use case for further diagnosis.\n\nYour node must support EIP-140 and EIP-838. This has been case for many years now so it is unlikely your node does not support this.\n\nUnless a smart contract explicitly reverts, the default reverts (payable function called with value, math errors) JSON-RPC error messages depend on the node type and may vary across different nodes\n\n<hardhat> is internally using Ganache simulated node, not Go<ether>uem","139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":"You're asking multiple questions in one, I'll give my best to answer them each.\n\nwhen creating tron wallet account some random private key and wallet key is created. should i check the balance before using it?\n\nNo, it's usually not required to do that. Unless you're hyper paranoid about generating the same private key as someone else, which isn't impossible, and it has happened before1 but a good random key will in practice never be generated twice.\nIt's advisable to create private keys with dedicated hardware though, as dedicated hardware greatly improves the quality of the random numbers used to create the private key from.\n\ni have created tron wallet address using this code or that one or the official one which works offline without calling any <api> from the node to verify the address or register it.\n\nOnly the first link appears to create a random key, the other two only seem to convert an already created private key into a different format, or do some other operation on it.\nYou should (as a good developer) ALWAYS check EXACTLY how the private key is generated IF you're using a solution from someone else.\nSince you're asking these questions here, I highly doubt you understand the mechanism behind <crypto>graphic wallets and how they're created.\nI advise you to first understand how the underlying math works or get someone else who does.\nPrivate keys can be seen as one of the most valuable type of data these days, you don't want to mess with them lightly.\n1 well, not by accident. It was a targeted attack to a software wallet using an insecure random number generator. I don't know the source of that information though. It was related to <bitcoin>.","146":null,"147":null,"148":null,"149":"I would use mapping type to hold the whitelisted addresses, then you don't have to loop over the array\ncontract SelfWhitelist {\n\n    mapping(address => bool) public addressWhitelist;\n\n    function whitelist() public returns(string memory) {\n        if (check()) {\n            return \"Already whitelisted!\";\n        }\n        addressWhitelist[msg.sender] = true;\n        return \"Whitelisted!\";\n    }\n\n    function check() public view returns (bool) {\n\n        return addressWhitelist[msg.sender];\n    }\n}\n\n\nAnd in your code, seems you have logical issues:\n for(uint i = 0; i < addressWhitelist.length; i++) {\n    if(addressWhitelist[i] != msg.sender) {\n        addressWhitelist.push(msg.sender);\n        return \"Whitelisted!\";\n    }\n}\n\n\nif the array is empty, the loop never executes, so nothing will be added\nif the first item is not msg.sender, msg.sender will be whitelisted, even though it might be already whitelisted.","150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":"The createMarketSale() first agument expects a BigNumber instance (or a stringified number that it would convert to BigNumber).\nWhen you pass it un<defi>ned, it throws the error mentioned in your question.\nSolution: Make sure that your <nft>.<token>Id is either a BigNumber or string - not un<defi>ned.","165":"I realized what I was doing wrong. It was a stupid mistake. The JSON input string should have been in a key-value format. The correct input command is: peer chaincode invoke -o <localhost>:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n ${CC_NAME} --peerAddresses <localhost>:7051 --tlsRootCertFiles $PEER0_ORG1_CA -c '{\"function\": \"createCar\", \"Args\":\"CAR101\",\"{\\\"CarDet\\\":[{\\\"Make\\\": \\\"Honda\\\" , \\\"Model\\\": \\\"City\\\" , \\\"Colour\\\": \\\"White\\\"} , {\\\"Make\\\": \\\"<swift>\\\" , \\\"Model\\\": \\\"Dezire\\\" , \\\"Colour\\\": \\\"Black\\\"}] , \\\"OwnerDet\\\": {\\\"Name\\\": \\\"James\\\" , \\\"Age\\\": \\\"29\\\" , \\\"Gender\\\": \\\"Male\\\"}}\"]}","166":null,"167":"In most cases yes. For example the same private key derives to the same address on <ether>eum, BSC, <polygon>, Arbitrum, and many other <evm> networks.\nHowever, there are some <evm> networks that use different address encoding. For example Tron uses a custom fork of <evm>, and its addresses are in different format. So you might need to further encode the 20byte address to other chain-specific formats."},"# of Vote for A2":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":1.0,"27":2.0,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":0.0,"35":null,"36":2.0,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":1.0,"46":null,"47":null,"48":null,"49":null,"50":null,"51":0.0,"52":null,"53":null,"54":null,"55":null,"56":null,"57":2.0,"58":null,"59":null,"60":null,"61":null,"62":null,"63":0.0,"64":null,"65":null,"66":null,"67":2.0,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":0.0,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":0.0,"84":1.0,"85":null,"86":null,"87":null,"88":0.0,"89":null,"90":null,"91":null,"92":null,"93":null,"94":0.0,"95":null,"96":null,"97":null,"98":null,"99":null,"100":1.0,"101":0.0,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":1.0,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":1.0,"134":null,"135":null,"136":null,"137":null,"138":1.0,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":0.0,"146":null,"147":null,"148":null,"149":0.0,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":1.0,"165":0.0,"166":null,"167":1.0},"User of A2":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":"Yilmaz","28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":"Petr Hejda","37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":"Yilmaz","58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":"Yilmaz","85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":"Marco","146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"A2_answeredtime":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":"Feb 5 at 16:03","28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":"Feb 3 at 20:17","37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":"Jan 30 at 21:14","58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":"Jan 26 at 3:45","85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":"Jan 6 at 23:26","146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"Comments for A2":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":"Thank you. I think Metamask hardcodes their or not?\n                \n                \n\u00a8C?user18039014\n                \n                Feb 6 at 15:14,@user18039014 yes, they're hardcoded in their repo, the wagmi library for <react> has the block explorer urls hardcoded as well.  <ether>scan is not a part of the blockchain, it's just a website, so I don't think there's a better way to do it at this time\n                \n                \n\u00a8C?Kevin Gelpes\n                \n                Feb 6 at 18:30","27":"OMG!!! I was trying to debug the entire day...  you're a day safer! Thank you so much!\n                \n                \n\u00a8C?patrick\n                \n                Feb 5 at 16:10,are you the one checked this question  :) stackoverflow.com\/questions\/74741666\/\u00a1\u00ad\n                \n                \n\u00a8C?Yilmaz\n                \n                Feb 5 at 16:17","28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":"Thank you! I have much understanding how data stores in slots with your reference attached below. But how about this:     function get_random() public view returns(uint num){         bytes32 ramdonNumber = keccak256(abi.encodePacked(block.timestamp,blockhash(block.number-1)));         num = uint(ramdonNumber);         return num;     } Is the variable num still stored in a certain slot?\n                \n                \n\u00a8C?Gap\n                \n                Feb 4 at 3:43,In this case, the variable is only stored in memory - not in storage - and it won't be possible to retrieve it using the getStorageAt method... But - the block producer (miner on PoW, validator on PoS) knows the block.number, block.timestamp and blockhash parameters before publishing the block. And after the block has been published, the value is also retrievable by debugging the transaction. For example geth.<ether>eum.org\/docs\/interacting-with-geth\/rpc\/\u00a1\u00ad\n                \n                \n\u00a8C?Petr Hejda\n                \n                Feb 4 at 13:11,So if I don't use block.number, block.timestamp as parameters in keccak256 hash function then miners\/validators can't retrieve the value?\n                \n                \n\u00a8C?Gap\n                \n                Feb 4 at 18:40,@Gap They can still retrieve the value before the transaction is included in the block. But they can also affect those block.number and other values mentioned in your snippet.\n                \n                \n\u00a8C?Petr Hejda\n                \n                Feb 4 at 19:41","37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":"Thanks for you reply, then I need to rebuild my <project> contract.\n                \n                \n\u00a8C?Huowuge\n                \n                Feb 1 at 16:57,Any suggestion about setting a password to call a certain function? I have no idea...\n                \n                \n\u00a8C?Huowuge\n                \n                Feb 1 at 17:01,even if you solve the function's exposed parameters problem through asymmetric <crypto>, how do you validate it? correct password needs to be accessible to the contract to check wh<ether> the incoming password is correct or not, right? The only way out is through zk-SNARKs\n                \n                \n\u00a8C?Jimson James\n                \n                Feb 1 at 19:27","46":null,"47":null,"48":null,"49":null,"50":null,"51":"If I pass the value in <ether>, is it also affecting the msg.value? Won't it be converting to Wei auto<matic>ally?\n                \n                \n\u00a8C?0391\n                \n                Feb 1 at 5:40,yes. anything you put in value input, it will be caught as msg.value. if u enter <ether>,  <remix> will convert it to wei auto<matic>ally\n                \n                \n\u00a8C?Yilmaz\n                \n                Feb 1 at 5:56,I have tried it but it is still not working.   On what the step to reproduce this: - Deploy the contract with value, for me I pass 20 <ether> - Run the mintAddress function by passing, <token>Id: 1, amount: 10, price: 10, address: the address an account - Run the transfer function by passing address: the address of account you want to transfer the <token> into, <token>Id: 1, amount: 10 - Change the account in upper part to the address you use in transfer function - Run buy<token> function, <token>Id: 1, amount: 10 - It still said Not Enough Fund\n                \n                \n\u00a8C?0391\n                \n                Feb 1 at 6:47,@0391 your original question was about ` buy<token>` function. now you are asking about transfer function\n                \n                \n\u00a8C?Yilmaz\n                \n                Feb 1 at 6:49,Yes but to proceed to buy<token>, I have to transfer the <token> first and the transferred <token> address will do the buy<token>, which makes the issue occur where they are unable to buy the <token>\n                \n                \n\u00a8C?0391\n                \n                Feb 1 at 7:03","52":null,"53":null,"54":null,"55":null,"56":null,"57":"Current contract meaning, the Pair contract AKA, the pool quantities of each <token> stored in this pair. But what are reserves if not the same?\n                \n                \n\u00a8C?suchislife\n                \n                Jan 30 at 22:03,I can explain but it will be a deep dive into how uniswap code flow works and the answer will be bloated, long, and confusing. you should ask a separate question\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 30 at 22:29,I've been reading about uniswapv2 for a week. I guess what I'm asking is, mathe<matic>ally, what are balance0 & balance1? Feel free to revise this answer. Most of it can be found here <ether>eum.org\/en\/developers\/tutorials\/uniswap-v2-annotated-code\n                \n                \n\u00a8C?suchislife\n                \n                Jan 30 at 22:36,<token>0 and <token>1 are contract addresses and each ERC20 <token> contract, keeps track of addresses and their balances. so you are visiting each <token> contract and getting how much balance current contract has.\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 30 at 22:40,Think ERC20 contract like a bank. you have <token>0 bank and <token>1 bank. Each bank keeps track of the balances of their users. balancesOf is where ERC20 <token>s store those balances. Your current contract also owns some of those <token>s so you just want to get how much <token>s the current contract holds\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 30 at 22:54","58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":"update the anchor version. console.log(program) to see what it will be logged. looks like it was not constructed properly\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 29 at 21:47,cargo run needs a bin target because this is a lib.rs. This was working before without running cargo run, following this guide dev.to\/edge-and-node\/\u00a1\u00ad\n                \n                \n\u00a8C?djd\n                \n                Jan 29 at 21:50,how are you running the test file? what command?\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 29 at 23:09,when you run the anchor build, it will spit out the program Id. did you paste it to the cargo.toml?\n                \n                \n\u00a8C?Yilmaz\n                \n                Jan 29 at 23:26,Yes for now, thanks, looks like I was mistaken in using anchor run test instead of anchor test or the id needed to be updated in Anchor.toml and the declare_id! macro\n                \n                \n\u00a8C?djd\n                \n                Jan 29 at 23:57","68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":"Thank you, but I don't understand. Isn't the block already packed? Why would <rest>ructuring occur? I haven't seen any examples. Can you explain them to some websites in detail, or can I chat with you privately\n                \n                \n\u00a8C?zl zero\n                \n                Jan 29 at 13:11,Try here academy.<moralis>.io\/blog\/what-is-chain-reorganization - Sorry I do not have time for tutoring. If you have more questions you can ask them on sites like <ether>eum.stackexchange.com\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 29 at 18:36,OK, thank you again, so if I want to achieve the effect of synchronization of all block <database>s, can I only synchronize safe blocks? Unsafe blocks may be <rest>ructured\n                \n                \n\u00a8C?zl zero\n                \n                Jan 30 at 5:13,I gave you a link to a full example how to solve this issue. You will figure it out yourself after studying the source code.\n                \n                \n\u00a8C?Mikko Ohtamaa\n                \n                Jan 30 at 8:06","76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":"Hi Mikko, Using the links you provided, I have replayed the transaction, but it seems unhandled exception in the transaction cannot be handled that way. There is no result to parse for the reason code it seems. It works very nice however for manual reverts.  The lesson I learned is that ganache or <hardhat> have better error handling and I should develop\/check the erros there. Also using <remix> or <truffle> to debug helps as well.   Thanks for help.\n                \n                \n\u00a8C?ekimpl\n                \n                Jan 10 at 15:36","139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":"i didnt find any refrance for how tron works (in simple sentence). can you give me a good reference to learn blockchain technical aspects ?\n                \n                \n\u00a8C?Abbas makhzomi\n                \n                Jan 7 at 18:00","146":null,"147":null,"148":null,"149":"Oh, damn. Thanks, never thought of using that.\n                \n                \n\u00a8C?Anim3Add1ct\n                \n                Jan 7 at 0:43,@Anim3Add1ct you can mark this as an answer, for better tracking unanswered questions on SO. Thanks\n                \n                \n\u00a8C?tenbits\n                \n                Jan 9 at 8:23","150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":"Thank you !  actually it should be <nft>.<token>Id wih c<api>tal T  not a small one .\n                \n                \n\u00a8C?MALIK forz\n                \n                Jan 2 at 21:38","165":null,"166":null,"167":null},"A3":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":"async function main() {\n\n    client = Client.forName(process.env.HEDERA_NETWORK).setOperator(\n        AccountId.fromString(process.env.OPERATOR_ID),\n        PrivateKey.fromString(process.env.OPERATOR_KEY)\n    );\n\n    \/\/ create treasury\n    const treasuryKey = PrivateKey.generate();\n    const treasuryId = await createAccount(treasuryKey);\n\n    \/\/ fee collector\n    const feeCollectorKey = PrivateKey.generate();\n    const feeCollectorId = await createAccount(feeCollectorKey);\n\n    const supplyKey = PrivateKey.generate();\n    const adminKey = PrivateKey.generate();\n    const pauseKey = PrivateKey.generate();\n    const freezeKey = PrivateKey.generate();\n    const wipeKey = PrivateKey.generate();\n\n    let <nft>Create = await new <token>CreateTransaction()\n        .set<token>Name(\"Collection\")\n        .set<token>Symbol(\"LEAFTest\")\n        .set<token>Type(<token>Type.NonFungibleUnique)\n        .setDecimals(0)\n        .setInitialSupply(0)\n        .setTreasuryAccountId(treasuryId)\n        .setSupplyType(<token>SupplyType.Finite)\n        .setMaxSupply(100)\n        .setCustomFees([CreateCustomFeeSchedule(feeCollectorId)])\n        .setAdminKey(adminKey)\n        .setSupplyKey(supplyKey)\n        .setPauseKey(pauseKey)\n        .setFreezeKey(freezeKey)\n        .setWipeKey(wipeKey)\n        .freezeWith(client)\n        .sign(treasuryKey);\n\n    let <nft>CreateTxSign = await <nft>Create.sign(adminKey);\n    let <nft>CreateSubmit = await <nft>CreateTxSign.execute(client);\n    let <nft>CreateReceipt = await <nft>CreateSubmit.getReceipt(client);\n    console.log(`<token> Id ${<nft>CreateReceipt.<token>Id.toString()}`);\n    console.log(\"Done\");\n}","148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"# of Vote for A3":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"User for A3":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"A3_answered_time":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"Comment or A3":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"Answer4":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"# Votes for Answer4":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"Userfor Answer4":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"Last edited time for Answer4":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"Comment":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"Answer5":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"# of Vote for Answer5":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"User for answer5":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null},"Answered_time_A5":{"0":null,"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":null,"11":null,"12":null,"13":null,"14":null,"15":null,"16":null,"17":null,"18":null,"19":null,"20":null,"21":null,"22":null,"23":null,"24":null,"25":null,"26":null,"27":null,"28":null,"29":null,"30":null,"31":null,"32":null,"33":null,"34":null,"35":null,"36":null,"37":null,"38":null,"39":null,"40":null,"41":null,"42":null,"43":null,"44":null,"45":null,"46":null,"47":null,"48":null,"49":null,"50":null,"51":null,"52":null,"53":null,"54":null,"55":null,"56":null,"57":null,"58":null,"59":null,"60":null,"61":null,"62":null,"63":null,"64":null,"65":null,"66":null,"67":null,"68":null,"69":null,"70":null,"71":null,"72":null,"73":null,"74":null,"75":null,"76":null,"77":null,"78":null,"79":null,"80":null,"81":null,"82":null,"83":null,"84":null,"85":null,"86":null,"87":null,"88":null,"89":null,"90":null,"91":null,"92":null,"93":null,"94":null,"95":null,"96":null,"97":null,"98":null,"99":null,"100":null,"101":null,"102":null,"103":null,"104":null,"105":null,"106":null,"107":null,"108":null,"109":null,"110":null,"111":null,"112":null,"113":null,"114":null,"115":null,"116":null,"117":null,"118":null,"119":null,"120":null,"121":null,"122":null,"123":null,"124":null,"125":null,"126":null,"127":null,"128":null,"129":null,"130":null,"131":null,"132":null,"133":null,"134":null,"135":null,"136":null,"137":null,"138":null,"139":null,"140":null,"141":null,"142":null,"143":null,"144":null,"145":null,"146":null,"147":null,"148":null,"149":null,"150":null,"151":null,"152":null,"153":null,"154":null,"155":null,"156":null,"157":null,"158":null,"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null}}